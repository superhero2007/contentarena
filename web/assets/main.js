webpackJsonp([1],{

/***/ "./node_modules/axios/index.js":
/*!*************************************!*\
  !*** ./node_modules/axios/index.js ***!
  \*************************************/
/*! dynamic exports provided */
/*! exports used: default */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__(/*! ./lib/axios */ "./node_modules/axios/lib/axios.js");

/***/ }),

/***/ "./node_modules/axios/lib/adapters/xhr.js":
/*!************************************************!*\
  !*** ./node_modules/axios/lib/adapters/xhr.js ***!
  \************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var utils = __webpack_require__(/*! ./../utils */ "./node_modules/axios/lib/utils.js");
var settle = __webpack_require__(/*! ./../core/settle */ "./node_modules/axios/lib/core/settle.js");
var buildURL = __webpack_require__(/*! ./../helpers/buildURL */ "./node_modules/axios/lib/helpers/buildURL.js");
var parseHeaders = __webpack_require__(/*! ./../helpers/parseHeaders */ "./node_modules/axios/lib/helpers/parseHeaders.js");
var isURLSameOrigin = __webpack_require__(/*! ./../helpers/isURLSameOrigin */ "./node_modules/axios/lib/helpers/isURLSameOrigin.js");
var createError = __webpack_require__(/*! ../core/createError */ "./node_modules/axios/lib/core/createError.js");
var btoa = (typeof window !== 'undefined' && window.btoa && window.btoa.bind(window)) || __webpack_require__(/*! ./../helpers/btoa */ "./node_modules/axios/lib/helpers/btoa.js");

module.exports = function xhrAdapter(config) {
  return new Promise(function dispatchXhrRequest(resolve, reject) {
    var requestData = config.data;
    var requestHeaders = config.headers;

    if (utils.isFormData(requestData)) {
      delete requestHeaders['Content-Type']; // Let the browser set it
    }

    var request = new XMLHttpRequest();
    var loadEvent = 'onreadystatechange';
    var xDomain = false;

    // For IE 8/9 CORS support
    // Only supports POST and GET calls and doesn't returns the response headers.
    // DON'T do this for testing b/c XMLHttpRequest is mocked, not XDomainRequest.
    if ("development" !== 'test' &&
        typeof window !== 'undefined' &&
        window.XDomainRequest && !('withCredentials' in request) &&
        !isURLSameOrigin(config.url)) {
      request = new window.XDomainRequest();
      loadEvent = 'onload';
      xDomain = true;
      request.onprogress = function handleProgress() {};
      request.ontimeout = function handleTimeout() {};
    }

    // HTTP basic authentication
    if (config.auth) {
      var username = config.auth.username || '';
      var password = config.auth.password || '';
      requestHeaders.Authorization = 'Basic ' + btoa(username + ':' + password);
    }

    request.open(config.method.toUpperCase(), buildURL(config.url, config.params, config.paramsSerializer), true);

    // Set the request timeout in MS
    request.timeout = config.timeout;

    // Listen for ready state
    request[loadEvent] = function handleLoad() {
      if (!request || (request.readyState !== 4 && !xDomain)) {
        return;
      }

      // The request errored out and we didn't get a response, this will be
      // handled by onerror instead
      // With one exception: request that using file: protocol, most browsers
      // will return status as 0 even though it's a successful request
      if (request.status === 0 && !(request.responseURL && request.responseURL.indexOf('file:') === 0)) {
        return;
      }

      // Prepare the response
      var responseHeaders = 'getAllResponseHeaders' in request ? parseHeaders(request.getAllResponseHeaders()) : null;
      var responseData = !config.responseType || config.responseType === 'text' ? request.responseText : request.response;
      var response = {
        data: responseData,
        // IE sends 1223 instead of 204 (https://github.com/axios/axios/issues/201)
        status: request.status === 1223 ? 204 : request.status,
        statusText: request.status === 1223 ? 'No Content' : request.statusText,
        headers: responseHeaders,
        config: config,
        request: request
      };

      settle(resolve, reject, response);

      // Clean up request
      request = null;
    };

    // Handle low level network errors
    request.onerror = function handleError() {
      // Real errors are hidden from us by the browser
      // onerror should only fire if it's a network error
      reject(createError('Network Error', config, null, request));

      // Clean up request
      request = null;
    };

    // Handle timeout
    request.ontimeout = function handleTimeout() {
      reject(createError('timeout of ' + config.timeout + 'ms exceeded', config, 'ECONNABORTED',
        request));

      // Clean up request
      request = null;
    };

    // Add xsrf header
    // This is only done if running in a standard browser environment.
    // Specifically not if we're in a web worker, or react-native.
    if (utils.isStandardBrowserEnv()) {
      var cookies = __webpack_require__(/*! ./../helpers/cookies */ "./node_modules/axios/lib/helpers/cookies.js");

      // Add xsrf header
      var xsrfValue = (config.withCredentials || isURLSameOrigin(config.url)) && config.xsrfCookieName ?
          cookies.read(config.xsrfCookieName) :
          undefined;

      if (xsrfValue) {
        requestHeaders[config.xsrfHeaderName] = xsrfValue;
      }
    }

    // Add headers to the request
    if ('setRequestHeader' in request) {
      utils.forEach(requestHeaders, function setRequestHeader(val, key) {
        if (typeof requestData === 'undefined' && key.toLowerCase() === 'content-type') {
          // Remove Content-Type if data is undefined
          delete requestHeaders[key];
        } else {
          // Otherwise add header to the request
          request.setRequestHeader(key, val);
        }
      });
    }

    // Add withCredentials to request if needed
    if (config.withCredentials) {
      request.withCredentials = true;
    }

    // Add responseType to request if needed
    if (config.responseType) {
      try {
        request.responseType = config.responseType;
      } catch (e) {
        // Expected DOMException thrown by browsers not compatible XMLHttpRequest Level 2.
        // But, this can be suppressed for 'json' type as it can be parsed by default 'transformResponse' function.
        if (config.responseType !== 'json') {
          throw e;
        }
      }
    }

    // Handle progress if needed
    if (typeof config.onDownloadProgress === 'function') {
      request.addEventListener('progress', config.onDownloadProgress);
    }

    // Not all browsers support upload events
    if (typeof config.onUploadProgress === 'function' && request.upload) {
      request.upload.addEventListener('progress', config.onUploadProgress);
    }

    if (config.cancelToken) {
      // Handle cancellation
      config.cancelToken.promise.then(function onCanceled(cancel) {
        if (!request) {
          return;
        }

        request.abort();
        reject(cancel);
        // Clean up request
        request = null;
      });
    }

    if (requestData === undefined) {
      requestData = null;
    }

    // Send the request
    request.send(requestData);
  });
};


/***/ }),

/***/ "./node_modules/axios/lib/axios.js":
/*!*****************************************!*\
  !*** ./node_modules/axios/lib/axios.js ***!
  \*****************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var utils = __webpack_require__(/*! ./utils */ "./node_modules/axios/lib/utils.js");
var bind = __webpack_require__(/*! ./helpers/bind */ "./node_modules/axios/lib/helpers/bind.js");
var Axios = __webpack_require__(/*! ./core/Axios */ "./node_modules/axios/lib/core/Axios.js");
var defaults = __webpack_require__(/*! ./defaults */ "./node_modules/axios/lib/defaults.js");

/**
 * Create an instance of Axios
 *
 * @param {Object} defaultConfig The default config for the instance
 * @return {Axios} A new instance of Axios
 */
function createInstance(defaultConfig) {
  var context = new Axios(defaultConfig);
  var instance = bind(Axios.prototype.request, context);

  // Copy axios.prototype to instance
  utils.extend(instance, Axios.prototype, context);

  // Copy context to instance
  utils.extend(instance, context);

  return instance;
}

// Create the default instance to be exported
var axios = createInstance(defaults);

// Expose Axios class to allow class inheritance
axios.Axios = Axios;

// Factory for creating new instances
axios.create = function create(instanceConfig) {
  return createInstance(utils.merge(defaults, instanceConfig));
};

// Expose Cancel & CancelToken
axios.Cancel = __webpack_require__(/*! ./cancel/Cancel */ "./node_modules/axios/lib/cancel/Cancel.js");
axios.CancelToken = __webpack_require__(/*! ./cancel/CancelToken */ "./node_modules/axios/lib/cancel/CancelToken.js");
axios.isCancel = __webpack_require__(/*! ./cancel/isCancel */ "./node_modules/axios/lib/cancel/isCancel.js");

// Expose all/spread
axios.all = function all(promises) {
  return Promise.all(promises);
};
axios.spread = __webpack_require__(/*! ./helpers/spread */ "./node_modules/axios/lib/helpers/spread.js");

module.exports = axios;

// Allow use of default import syntax in TypeScript
module.exports.default = axios;


/***/ }),

/***/ "./node_modules/axios/lib/cancel/Cancel.js":
/*!*************************************************!*\
  !*** ./node_modules/axios/lib/cancel/Cancel.js ***!
  \*************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


/**
 * A `Cancel` is an object that is thrown when an operation is canceled.
 *
 * @class
 * @param {string=} message The message.
 */
function Cancel(message) {
  this.message = message;
}

Cancel.prototype.toString = function toString() {
  return 'Cancel' + (this.message ? ': ' + this.message : '');
};

Cancel.prototype.__CANCEL__ = true;

module.exports = Cancel;


/***/ }),

/***/ "./node_modules/axios/lib/cancel/CancelToken.js":
/*!******************************************************!*\
  !*** ./node_modules/axios/lib/cancel/CancelToken.js ***!
  \******************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var Cancel = __webpack_require__(/*! ./Cancel */ "./node_modules/axios/lib/cancel/Cancel.js");

/**
 * A `CancelToken` is an object that can be used to request cancellation of an operation.
 *
 * @class
 * @param {Function} executor The executor function.
 */
function CancelToken(executor) {
  if (typeof executor !== 'function') {
    throw new TypeError('executor must be a function.');
  }

  var resolvePromise;
  this.promise = new Promise(function promiseExecutor(resolve) {
    resolvePromise = resolve;
  });

  var token = this;
  executor(function cancel(message) {
    if (token.reason) {
      // Cancellation has already been requested
      return;
    }

    token.reason = new Cancel(message);
    resolvePromise(token.reason);
  });
}

/**
 * Throws a `Cancel` if cancellation has been requested.
 */
CancelToken.prototype.throwIfRequested = function throwIfRequested() {
  if (this.reason) {
    throw this.reason;
  }
};

/**
 * Returns an object that contains a new `CancelToken` and a function that, when called,
 * cancels the `CancelToken`.
 */
CancelToken.source = function source() {
  var cancel;
  var token = new CancelToken(function executor(c) {
    cancel = c;
  });
  return {
    token: token,
    cancel: cancel
  };
};

module.exports = CancelToken;


/***/ }),

/***/ "./node_modules/axios/lib/cancel/isCancel.js":
/*!***************************************************!*\
  !*** ./node_modules/axios/lib/cancel/isCancel.js ***!
  \***************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


module.exports = function isCancel(value) {
  return !!(value && value.__CANCEL__);
};


/***/ }),

/***/ "./node_modules/axios/lib/core/Axios.js":
/*!**********************************************!*\
  !*** ./node_modules/axios/lib/core/Axios.js ***!
  \**********************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var defaults = __webpack_require__(/*! ./../defaults */ "./node_modules/axios/lib/defaults.js");
var utils = __webpack_require__(/*! ./../utils */ "./node_modules/axios/lib/utils.js");
var InterceptorManager = __webpack_require__(/*! ./InterceptorManager */ "./node_modules/axios/lib/core/InterceptorManager.js");
var dispatchRequest = __webpack_require__(/*! ./dispatchRequest */ "./node_modules/axios/lib/core/dispatchRequest.js");

/**
 * Create a new instance of Axios
 *
 * @param {Object} instanceConfig The default config for the instance
 */
function Axios(instanceConfig) {
  this.defaults = instanceConfig;
  this.interceptors = {
    request: new InterceptorManager(),
    response: new InterceptorManager()
  };
}

/**
 * Dispatch a request
 *
 * @param {Object} config The config specific for this request (merged with this.defaults)
 */
Axios.prototype.request = function request(config) {
  /*eslint no-param-reassign:0*/
  // Allow for axios('example/url'[, config]) a la fetch API
  if (typeof config === 'string') {
    config = utils.merge({
      url: arguments[0]
    }, arguments[1]);
  }

  config = utils.merge(defaults, {method: 'get'}, this.defaults, config);
  config.method = config.method.toLowerCase();

  // Hook up interceptors middleware
  var chain = [dispatchRequest, undefined];
  var promise = Promise.resolve(config);

  this.interceptors.request.forEach(function unshiftRequestInterceptors(interceptor) {
    chain.unshift(interceptor.fulfilled, interceptor.rejected);
  });

  this.interceptors.response.forEach(function pushResponseInterceptors(interceptor) {
    chain.push(interceptor.fulfilled, interceptor.rejected);
  });

  while (chain.length) {
    promise = promise.then(chain.shift(), chain.shift());
  }

  return promise;
};

// Provide aliases for supported request methods
utils.forEach(['delete', 'get', 'head', 'options'], function forEachMethodNoData(method) {
  /*eslint func-names:0*/
  Axios.prototype[method] = function(url, config) {
    return this.request(utils.merge(config || {}, {
      method: method,
      url: url
    }));
  };
});

utils.forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {
  /*eslint func-names:0*/
  Axios.prototype[method] = function(url, data, config) {
    return this.request(utils.merge(config || {}, {
      method: method,
      url: url,
      data: data
    }));
  };
});

module.exports = Axios;


/***/ }),

/***/ "./node_modules/axios/lib/core/InterceptorManager.js":
/*!***********************************************************!*\
  !*** ./node_modules/axios/lib/core/InterceptorManager.js ***!
  \***********************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var utils = __webpack_require__(/*! ./../utils */ "./node_modules/axios/lib/utils.js");

function InterceptorManager() {
  this.handlers = [];
}

/**
 * Add a new interceptor to the stack
 *
 * @param {Function} fulfilled The function to handle `then` for a `Promise`
 * @param {Function} rejected The function to handle `reject` for a `Promise`
 *
 * @return {Number} An ID used to remove interceptor later
 */
InterceptorManager.prototype.use = function use(fulfilled, rejected) {
  this.handlers.push({
    fulfilled: fulfilled,
    rejected: rejected
  });
  return this.handlers.length - 1;
};

/**
 * Remove an interceptor from the stack
 *
 * @param {Number} id The ID that was returned by `use`
 */
InterceptorManager.prototype.eject = function eject(id) {
  if (this.handlers[id]) {
    this.handlers[id] = null;
  }
};

/**
 * Iterate over all the registered interceptors
 *
 * This method is particularly useful for skipping over any
 * interceptors that may have become `null` calling `eject`.
 *
 * @param {Function} fn The function to call for each interceptor
 */
InterceptorManager.prototype.forEach = function forEach(fn) {
  utils.forEach(this.handlers, function forEachHandler(h) {
    if (h !== null) {
      fn(h);
    }
  });
};

module.exports = InterceptorManager;


/***/ }),

/***/ "./node_modules/axios/lib/core/createError.js":
/*!****************************************************!*\
  !*** ./node_modules/axios/lib/core/createError.js ***!
  \****************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var enhanceError = __webpack_require__(/*! ./enhanceError */ "./node_modules/axios/lib/core/enhanceError.js");

/**
 * Create an Error with the specified message, config, error code, request and response.
 *
 * @param {string} message The error message.
 * @param {Object} config The config.
 * @param {string} [code] The error code (for example, 'ECONNABORTED').
 * @param {Object} [request] The request.
 * @param {Object} [response] The response.
 * @returns {Error} The created error.
 */
module.exports = function createError(message, config, code, request, response) {
  var error = new Error(message);
  return enhanceError(error, config, code, request, response);
};


/***/ }),

/***/ "./node_modules/axios/lib/core/dispatchRequest.js":
/*!********************************************************!*\
  !*** ./node_modules/axios/lib/core/dispatchRequest.js ***!
  \********************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var utils = __webpack_require__(/*! ./../utils */ "./node_modules/axios/lib/utils.js");
var transformData = __webpack_require__(/*! ./transformData */ "./node_modules/axios/lib/core/transformData.js");
var isCancel = __webpack_require__(/*! ../cancel/isCancel */ "./node_modules/axios/lib/cancel/isCancel.js");
var defaults = __webpack_require__(/*! ../defaults */ "./node_modules/axios/lib/defaults.js");
var isAbsoluteURL = __webpack_require__(/*! ./../helpers/isAbsoluteURL */ "./node_modules/axios/lib/helpers/isAbsoluteURL.js");
var combineURLs = __webpack_require__(/*! ./../helpers/combineURLs */ "./node_modules/axios/lib/helpers/combineURLs.js");

/**
 * Throws a `Cancel` if cancellation has been requested.
 */
function throwIfCancellationRequested(config) {
  if (config.cancelToken) {
    config.cancelToken.throwIfRequested();
  }
}

/**
 * Dispatch a request to the server using the configured adapter.
 *
 * @param {object} config The config that is to be used for the request
 * @returns {Promise} The Promise to be fulfilled
 */
module.exports = function dispatchRequest(config) {
  throwIfCancellationRequested(config);

  // Support baseURL config
  if (config.baseURL && !isAbsoluteURL(config.url)) {
    config.url = combineURLs(config.baseURL, config.url);
  }

  // Ensure headers exist
  config.headers = config.headers || {};

  // Transform request data
  config.data = transformData(
    config.data,
    config.headers,
    config.transformRequest
  );

  // Flatten headers
  config.headers = utils.merge(
    config.headers.common || {},
    config.headers[config.method] || {},
    config.headers || {}
  );

  utils.forEach(
    ['delete', 'get', 'head', 'post', 'put', 'patch', 'common'],
    function cleanHeaderConfig(method) {
      delete config.headers[method];
    }
  );

  var adapter = config.adapter || defaults.adapter;

  return adapter(config).then(function onAdapterResolution(response) {
    throwIfCancellationRequested(config);

    // Transform response data
    response.data = transformData(
      response.data,
      response.headers,
      config.transformResponse
    );

    return response;
  }, function onAdapterRejection(reason) {
    if (!isCancel(reason)) {
      throwIfCancellationRequested(config);

      // Transform response data
      if (reason && reason.response) {
        reason.response.data = transformData(
          reason.response.data,
          reason.response.headers,
          config.transformResponse
        );
      }
    }

    return Promise.reject(reason);
  });
};


/***/ }),

/***/ "./node_modules/axios/lib/core/enhanceError.js":
/*!*****************************************************!*\
  !*** ./node_modules/axios/lib/core/enhanceError.js ***!
  \*****************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


/**
 * Update an Error with the specified config, error code, and response.
 *
 * @param {Error} error The error to update.
 * @param {Object} config The config.
 * @param {string} [code] The error code (for example, 'ECONNABORTED').
 * @param {Object} [request] The request.
 * @param {Object} [response] The response.
 * @returns {Error} The error.
 */
module.exports = function enhanceError(error, config, code, request, response) {
  error.config = config;
  if (code) {
    error.code = code;
  }
  error.request = request;
  error.response = response;
  return error;
};


/***/ }),

/***/ "./node_modules/axios/lib/core/settle.js":
/*!***********************************************!*\
  !*** ./node_modules/axios/lib/core/settle.js ***!
  \***********************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var createError = __webpack_require__(/*! ./createError */ "./node_modules/axios/lib/core/createError.js");

/**
 * Resolve or reject a Promise based on response status.
 *
 * @param {Function} resolve A function that resolves the promise.
 * @param {Function} reject A function that rejects the promise.
 * @param {object} response The response.
 */
module.exports = function settle(resolve, reject, response) {
  var validateStatus = response.config.validateStatus;
  // Note: status is not exposed by XDomainRequest
  if (!response.status || !validateStatus || validateStatus(response.status)) {
    resolve(response);
  } else {
    reject(createError(
      'Request failed with status code ' + response.status,
      response.config,
      null,
      response.request,
      response
    ));
  }
};


/***/ }),

/***/ "./node_modules/axios/lib/core/transformData.js":
/*!******************************************************!*\
  !*** ./node_modules/axios/lib/core/transformData.js ***!
  \******************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var utils = __webpack_require__(/*! ./../utils */ "./node_modules/axios/lib/utils.js");

/**
 * Transform the data for a request or a response
 *
 * @param {Object|String} data The data to be transformed
 * @param {Array} headers The headers for the request or response
 * @param {Array|Function} fns A single function or Array of functions
 * @returns {*} The resulting transformed data
 */
module.exports = function transformData(data, headers, fns) {
  /*eslint no-param-reassign:0*/
  utils.forEach(fns, function transform(fn) {
    data = fn(data, headers);
  });

  return data;
};


/***/ }),

/***/ "./node_modules/axios/lib/defaults.js":
/*!********************************************!*\
  !*** ./node_modules/axios/lib/defaults.js ***!
  \********************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(process) {

var utils = __webpack_require__(/*! ./utils */ "./node_modules/axios/lib/utils.js");
var normalizeHeaderName = __webpack_require__(/*! ./helpers/normalizeHeaderName */ "./node_modules/axios/lib/helpers/normalizeHeaderName.js");

var DEFAULT_CONTENT_TYPE = {
  'Content-Type': 'application/x-www-form-urlencoded'
};

function setContentTypeIfUnset(headers, value) {
  if (!utils.isUndefined(headers) && utils.isUndefined(headers['Content-Type'])) {
    headers['Content-Type'] = value;
  }
}

function getDefaultAdapter() {
  var adapter;
  if (typeof XMLHttpRequest !== 'undefined') {
    // For browsers use XHR adapter
    adapter = __webpack_require__(/*! ./adapters/xhr */ "./node_modules/axios/lib/adapters/xhr.js");
  } else if (typeof process !== 'undefined') {
    // For node use HTTP adapter
    adapter = __webpack_require__(/*! ./adapters/http */ "./node_modules/axios/lib/adapters/xhr.js");
  }
  return adapter;
}

var defaults = {
  adapter: getDefaultAdapter(),

  transformRequest: [function transformRequest(data, headers) {
    normalizeHeaderName(headers, 'Content-Type');
    if (utils.isFormData(data) ||
      utils.isArrayBuffer(data) ||
      utils.isBuffer(data) ||
      utils.isStream(data) ||
      utils.isFile(data) ||
      utils.isBlob(data)
    ) {
      return data;
    }
    if (utils.isArrayBufferView(data)) {
      return data.buffer;
    }
    if (utils.isURLSearchParams(data)) {
      setContentTypeIfUnset(headers, 'application/x-www-form-urlencoded;charset=utf-8');
      return data.toString();
    }
    if (utils.isObject(data)) {
      setContentTypeIfUnset(headers, 'application/json;charset=utf-8');
      return JSON.stringify(data);
    }
    return data;
  }],

  transformResponse: [function transformResponse(data) {
    /*eslint no-param-reassign:0*/
    if (typeof data === 'string') {
      try {
        data = JSON.parse(data);
      } catch (e) { /* Ignore */ }
    }
    return data;
  }],

  /**
   * A timeout in milliseconds to abort a request. If set to 0 (default) a
   * timeout is not created.
   */
  timeout: 0,

  xsrfCookieName: 'XSRF-TOKEN',
  xsrfHeaderName: 'X-XSRF-TOKEN',

  maxContentLength: -1,

  validateStatus: function validateStatus(status) {
    return status >= 200 && status < 300;
  }
};

defaults.headers = {
  common: {
    'Accept': 'application/json, text/plain, */*'
  }
};

utils.forEach(['delete', 'get', 'head'], function forEachMethodNoData(method) {
  defaults.headers[method] = {};
});

utils.forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {
  defaults.headers[method] = utils.merge(DEFAULT_CONTENT_TYPE);
});

module.exports = defaults;

/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(/*! ./../../process/browser.js */ "./node_modules/process/browser.js")))

/***/ }),

/***/ "./node_modules/axios/lib/helpers/bind.js":
/*!************************************************!*\
  !*** ./node_modules/axios/lib/helpers/bind.js ***!
  \************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


module.exports = function bind(fn, thisArg) {
  return function wrap() {
    var args = new Array(arguments.length);
    for (var i = 0; i < args.length; i++) {
      args[i] = arguments[i];
    }
    return fn.apply(thisArg, args);
  };
};


/***/ }),

/***/ "./node_modules/axios/lib/helpers/btoa.js":
/*!************************************************!*\
  !*** ./node_modules/axios/lib/helpers/btoa.js ***!
  \************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


// btoa polyfill for IE<10 courtesy https://github.com/davidchambers/Base64.js

var chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';

function E() {
  this.message = 'String contains an invalid character';
}
E.prototype = new Error;
E.prototype.code = 5;
E.prototype.name = 'InvalidCharacterError';

function btoa(input) {
  var str = String(input);
  var output = '';
  for (
    // initialize result and counter
    var block, charCode, idx = 0, map = chars;
    // if the next str index does not exist:
    //   change the mapping table to "="
    //   check if d has no fractional digits
    str.charAt(idx | 0) || (map = '=', idx % 1);
    // "8 - idx % 1 * 8" generates the sequence 2, 4, 6, 8
    output += map.charAt(63 & block >> 8 - idx % 1 * 8)
  ) {
    charCode = str.charCodeAt(idx += 3 / 4);
    if (charCode > 0xFF) {
      throw new E();
    }
    block = block << 8 | charCode;
  }
  return output;
}

module.exports = btoa;


/***/ }),

/***/ "./node_modules/axios/lib/helpers/buildURL.js":
/*!****************************************************!*\
  !*** ./node_modules/axios/lib/helpers/buildURL.js ***!
  \****************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var utils = __webpack_require__(/*! ./../utils */ "./node_modules/axios/lib/utils.js");

function encode(val) {
  return encodeURIComponent(val).
    replace(/%40/gi, '@').
    replace(/%3A/gi, ':').
    replace(/%24/g, '$').
    replace(/%2C/gi, ',').
    replace(/%20/g, '+').
    replace(/%5B/gi, '[').
    replace(/%5D/gi, ']');
}

/**
 * Build a URL by appending params to the end
 *
 * @param {string} url The base of the url (e.g., http://www.google.com)
 * @param {object} [params] The params to be appended
 * @returns {string} The formatted url
 */
module.exports = function buildURL(url, params, paramsSerializer) {
  /*eslint no-param-reassign:0*/
  if (!params) {
    return url;
  }

  var serializedParams;
  if (paramsSerializer) {
    serializedParams = paramsSerializer(params);
  } else if (utils.isURLSearchParams(params)) {
    serializedParams = params.toString();
  } else {
    var parts = [];

    utils.forEach(params, function serialize(val, key) {
      if (val === null || typeof val === 'undefined') {
        return;
      }

      if (utils.isArray(val)) {
        key = key + '[]';
      } else {
        val = [val];
      }

      utils.forEach(val, function parseValue(v) {
        if (utils.isDate(v)) {
          v = v.toISOString();
        } else if (utils.isObject(v)) {
          v = JSON.stringify(v);
        }
        parts.push(encode(key) + '=' + encode(v));
      });
    });

    serializedParams = parts.join('&');
  }

  if (serializedParams) {
    url += (url.indexOf('?') === -1 ? '?' : '&') + serializedParams;
  }

  return url;
};


/***/ }),

/***/ "./node_modules/axios/lib/helpers/combineURLs.js":
/*!*******************************************************!*\
  !*** ./node_modules/axios/lib/helpers/combineURLs.js ***!
  \*******************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


/**
 * Creates a new URL by combining the specified URLs
 *
 * @param {string} baseURL The base URL
 * @param {string} relativeURL The relative URL
 * @returns {string} The combined URL
 */
module.exports = function combineURLs(baseURL, relativeURL) {
  return relativeURL
    ? baseURL.replace(/\/+$/, '') + '/' + relativeURL.replace(/^\/+/, '')
    : baseURL;
};


/***/ }),

/***/ "./node_modules/axios/lib/helpers/cookies.js":
/*!***************************************************!*\
  !*** ./node_modules/axios/lib/helpers/cookies.js ***!
  \***************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var utils = __webpack_require__(/*! ./../utils */ "./node_modules/axios/lib/utils.js");

module.exports = (
  utils.isStandardBrowserEnv() ?

  // Standard browser envs support document.cookie
  (function standardBrowserEnv() {
    return {
      write: function write(name, value, expires, path, domain, secure) {
        var cookie = [];
        cookie.push(name + '=' + encodeURIComponent(value));

        if (utils.isNumber(expires)) {
          cookie.push('expires=' + new Date(expires).toGMTString());
        }

        if (utils.isString(path)) {
          cookie.push('path=' + path);
        }

        if (utils.isString(domain)) {
          cookie.push('domain=' + domain);
        }

        if (secure === true) {
          cookie.push('secure');
        }

        document.cookie = cookie.join('; ');
      },

      read: function read(name) {
        var match = document.cookie.match(new RegExp('(^|;\\s*)(' + name + ')=([^;]*)'));
        return (match ? decodeURIComponent(match[3]) : null);
      },

      remove: function remove(name) {
        this.write(name, '', Date.now() - 86400000);
      }
    };
  })() :

  // Non standard browser env (web workers, react-native) lack needed support.
  (function nonStandardBrowserEnv() {
    return {
      write: function write() {},
      read: function read() { return null; },
      remove: function remove() {}
    };
  })()
);


/***/ }),

/***/ "./node_modules/axios/lib/helpers/isAbsoluteURL.js":
/*!*********************************************************!*\
  !*** ./node_modules/axios/lib/helpers/isAbsoluteURL.js ***!
  \*********************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


/**
 * Determines whether the specified URL is absolute
 *
 * @param {string} url The URL to test
 * @returns {boolean} True if the specified URL is absolute, otherwise false
 */
module.exports = function isAbsoluteURL(url) {
  // A URL is considered absolute if it begins with "<scheme>://" or "//" (protocol-relative URL).
  // RFC 3986 defines scheme name as a sequence of characters beginning with a letter and followed
  // by any combination of letters, digits, plus, period, or hyphen.
  return /^([a-z][a-z\d\+\-\.]*:)?\/\//i.test(url);
};


/***/ }),

/***/ "./node_modules/axios/lib/helpers/isURLSameOrigin.js":
/*!***********************************************************!*\
  !*** ./node_modules/axios/lib/helpers/isURLSameOrigin.js ***!
  \***********************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var utils = __webpack_require__(/*! ./../utils */ "./node_modules/axios/lib/utils.js");

module.exports = (
  utils.isStandardBrowserEnv() ?

  // Standard browser envs have full support of the APIs needed to test
  // whether the request URL is of the same origin as current location.
  (function standardBrowserEnv() {
    var msie = /(msie|trident)/i.test(navigator.userAgent);
    var urlParsingNode = document.createElement('a');
    var originURL;

    /**
    * Parse a URL to discover it's components
    *
    * @param {String} url The URL to be parsed
    * @returns {Object}
    */
    function resolveURL(url) {
      var href = url;

      if (msie) {
        // IE needs attribute set twice to normalize properties
        urlParsingNode.setAttribute('href', href);
        href = urlParsingNode.href;
      }

      urlParsingNode.setAttribute('href', href);

      // urlParsingNode provides the UrlUtils interface - http://url.spec.whatwg.org/#urlutils
      return {
        href: urlParsingNode.href,
        protocol: urlParsingNode.protocol ? urlParsingNode.protocol.replace(/:$/, '') : '',
        host: urlParsingNode.host,
        search: urlParsingNode.search ? urlParsingNode.search.replace(/^\?/, '') : '',
        hash: urlParsingNode.hash ? urlParsingNode.hash.replace(/^#/, '') : '',
        hostname: urlParsingNode.hostname,
        port: urlParsingNode.port,
        pathname: (urlParsingNode.pathname.charAt(0) === '/') ?
                  urlParsingNode.pathname :
                  '/' + urlParsingNode.pathname
      };
    }

    originURL = resolveURL(window.location.href);

    /**
    * Determine if a URL shares the same origin as the current location
    *
    * @param {String} requestURL The URL to test
    * @returns {boolean} True if URL shares the same origin, otherwise false
    */
    return function isURLSameOrigin(requestURL) {
      var parsed = (utils.isString(requestURL)) ? resolveURL(requestURL) : requestURL;
      return (parsed.protocol === originURL.protocol &&
            parsed.host === originURL.host);
    };
  })() :

  // Non standard browser envs (web workers, react-native) lack needed support.
  (function nonStandardBrowserEnv() {
    return function isURLSameOrigin() {
      return true;
    };
  })()
);


/***/ }),

/***/ "./node_modules/axios/lib/helpers/normalizeHeaderName.js":
/*!***************************************************************!*\
  !*** ./node_modules/axios/lib/helpers/normalizeHeaderName.js ***!
  \***************************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var utils = __webpack_require__(/*! ../utils */ "./node_modules/axios/lib/utils.js");

module.exports = function normalizeHeaderName(headers, normalizedName) {
  utils.forEach(headers, function processHeader(value, name) {
    if (name !== normalizedName && name.toUpperCase() === normalizedName.toUpperCase()) {
      headers[normalizedName] = value;
      delete headers[name];
    }
  });
};


/***/ }),

/***/ "./node_modules/axios/lib/helpers/parseHeaders.js":
/*!********************************************************!*\
  !*** ./node_modules/axios/lib/helpers/parseHeaders.js ***!
  \********************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var utils = __webpack_require__(/*! ./../utils */ "./node_modules/axios/lib/utils.js");

// Headers whose duplicates are ignored by node
// c.f. https://nodejs.org/api/http.html#http_message_headers
var ignoreDuplicateOf = [
  'age', 'authorization', 'content-length', 'content-type', 'etag',
  'expires', 'from', 'host', 'if-modified-since', 'if-unmodified-since',
  'last-modified', 'location', 'max-forwards', 'proxy-authorization',
  'referer', 'retry-after', 'user-agent'
];

/**
 * Parse headers into an object
 *
 * ```
 * Date: Wed, 27 Aug 2014 08:58:49 GMT
 * Content-Type: application/json
 * Connection: keep-alive
 * Transfer-Encoding: chunked
 * ```
 *
 * @param {String} headers Headers needing to be parsed
 * @returns {Object} Headers parsed into an object
 */
module.exports = function parseHeaders(headers) {
  var parsed = {};
  var key;
  var val;
  var i;

  if (!headers) { return parsed; }

  utils.forEach(headers.split('\n'), function parser(line) {
    i = line.indexOf(':');
    key = utils.trim(line.substr(0, i)).toLowerCase();
    val = utils.trim(line.substr(i + 1));

    if (key) {
      if (parsed[key] && ignoreDuplicateOf.indexOf(key) >= 0) {
        return;
      }
      if (key === 'set-cookie') {
        parsed[key] = (parsed[key] ? parsed[key] : []).concat([val]);
      } else {
        parsed[key] = parsed[key] ? parsed[key] + ', ' + val : val;
      }
    }
  });

  return parsed;
};


/***/ }),

/***/ "./node_modules/axios/lib/helpers/spread.js":
/*!**************************************************!*\
  !*** ./node_modules/axios/lib/helpers/spread.js ***!
  \**************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


/**
 * Syntactic sugar for invoking a function and expanding an array for arguments.
 *
 * Common use case would be to use `Function.prototype.apply`.
 *
 *  ```js
 *  function f(x, y, z) {}
 *  var args = [1, 2, 3];
 *  f.apply(null, args);
 *  ```
 *
 * With `spread` this example can be re-written.
 *
 *  ```js
 *  spread(function(x, y, z) {})([1, 2, 3]);
 *  ```
 *
 * @param {Function} callback
 * @returns {Function}
 */
module.exports = function spread(callback) {
  return function wrap(arr) {
    return callback.apply(null, arr);
  };
};


/***/ }),

/***/ "./node_modules/axios/lib/utils.js":
/*!*****************************************!*\
  !*** ./node_modules/axios/lib/utils.js ***!
  \*****************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var bind = __webpack_require__(/*! ./helpers/bind */ "./node_modules/axios/lib/helpers/bind.js");
var isBuffer = __webpack_require__(/*! is-buffer */ "./node_modules/is-buffer/index.js");

/*global toString:true*/

// utils is a library of generic helper functions non-specific to axios

var toString = Object.prototype.toString;

/**
 * Determine if a value is an Array
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is an Array, otherwise false
 */
function isArray(val) {
  return toString.call(val) === '[object Array]';
}

/**
 * Determine if a value is an ArrayBuffer
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is an ArrayBuffer, otherwise false
 */
function isArrayBuffer(val) {
  return toString.call(val) === '[object ArrayBuffer]';
}

/**
 * Determine if a value is a FormData
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is an FormData, otherwise false
 */
function isFormData(val) {
  return (typeof FormData !== 'undefined') && (val instanceof FormData);
}

/**
 * Determine if a value is a view on an ArrayBuffer
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is a view on an ArrayBuffer, otherwise false
 */
function isArrayBufferView(val) {
  var result;
  if ((typeof ArrayBuffer !== 'undefined') && (ArrayBuffer.isView)) {
    result = ArrayBuffer.isView(val);
  } else {
    result = (val) && (val.buffer) && (val.buffer instanceof ArrayBuffer);
  }
  return result;
}

/**
 * Determine if a value is a String
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is a String, otherwise false
 */
function isString(val) {
  return typeof val === 'string';
}

/**
 * Determine if a value is a Number
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is a Number, otherwise false
 */
function isNumber(val) {
  return typeof val === 'number';
}

/**
 * Determine if a value is undefined
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if the value is undefined, otherwise false
 */
function isUndefined(val) {
  return typeof val === 'undefined';
}

/**
 * Determine if a value is an Object
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is an Object, otherwise false
 */
function isObject(val) {
  return val !== null && typeof val === 'object';
}

/**
 * Determine if a value is a Date
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is a Date, otherwise false
 */
function isDate(val) {
  return toString.call(val) === '[object Date]';
}

/**
 * Determine if a value is a File
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is a File, otherwise false
 */
function isFile(val) {
  return toString.call(val) === '[object File]';
}

/**
 * Determine if a value is a Blob
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is a Blob, otherwise false
 */
function isBlob(val) {
  return toString.call(val) === '[object Blob]';
}

/**
 * Determine if a value is a Function
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is a Function, otherwise false
 */
function isFunction(val) {
  return toString.call(val) === '[object Function]';
}

/**
 * Determine if a value is a Stream
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is a Stream, otherwise false
 */
function isStream(val) {
  return isObject(val) && isFunction(val.pipe);
}

/**
 * Determine if a value is a URLSearchParams object
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is a URLSearchParams object, otherwise false
 */
function isURLSearchParams(val) {
  return typeof URLSearchParams !== 'undefined' && val instanceof URLSearchParams;
}

/**
 * Trim excess whitespace off the beginning and end of a string
 *
 * @param {String} str The String to trim
 * @returns {String} The String freed of excess whitespace
 */
function trim(str) {
  return str.replace(/^\s*/, '').replace(/\s*$/, '');
}

/**
 * Determine if we're running in a standard browser environment
 *
 * This allows axios to run in a web worker, and react-native.
 * Both environments support XMLHttpRequest, but not fully standard globals.
 *
 * web workers:
 *  typeof window -> undefined
 *  typeof document -> undefined
 *
 * react-native:
 *  navigator.product -> 'ReactNative'
 */
function isStandardBrowserEnv() {
  if (typeof navigator !== 'undefined' && navigator.product === 'ReactNative') {
    return false;
  }
  return (
    typeof window !== 'undefined' &&
    typeof document !== 'undefined'
  );
}

/**
 * Iterate over an Array or an Object invoking a function for each item.
 *
 * If `obj` is an Array callback will be called passing
 * the value, index, and complete array for each item.
 *
 * If 'obj' is an Object callback will be called passing
 * the value, key, and complete object for each property.
 *
 * @param {Object|Array} obj The object to iterate
 * @param {Function} fn The callback to invoke for each item
 */
function forEach(obj, fn) {
  // Don't bother if no value provided
  if (obj === null || typeof obj === 'undefined') {
    return;
  }

  // Force an array if not already something iterable
  if (typeof obj !== 'object') {
    /*eslint no-param-reassign:0*/
    obj = [obj];
  }

  if (isArray(obj)) {
    // Iterate over array values
    for (var i = 0, l = obj.length; i < l; i++) {
      fn.call(null, obj[i], i, obj);
    }
  } else {
    // Iterate over object keys
    for (var key in obj) {
      if (Object.prototype.hasOwnProperty.call(obj, key)) {
        fn.call(null, obj[key], key, obj);
      }
    }
  }
}

/**
 * Accepts varargs expecting each argument to be an object, then
 * immutably merges the properties of each object and returns result.
 *
 * When multiple objects contain the same key the later object in
 * the arguments list will take precedence.
 *
 * Example:
 *
 * ```js
 * var result = merge({foo: 123}, {foo: 456});
 * console.log(result.foo); // outputs 456
 * ```
 *
 * @param {Object} obj1 Object to merge
 * @returns {Object} Result of all merge properties
 */
function merge(/* obj1, obj2, obj3, ... */) {
  var result = {};
  function assignValue(val, key) {
    if (typeof result[key] === 'object' && typeof val === 'object') {
      result[key] = merge(result[key], val);
    } else {
      result[key] = val;
    }
  }

  for (var i = 0, l = arguments.length; i < l; i++) {
    forEach(arguments[i], assignValue);
  }
  return result;
}

/**
 * Extends object a by mutably adding to it the properties of object b.
 *
 * @param {Object} a The object to be extended
 * @param {Object} b The object to copy properties from
 * @param {Object} thisArg The object to bind function to
 * @return {Object} The resulting value of object a
 */
function extend(a, b, thisArg) {
  forEach(b, function assignValue(val, key) {
    if (thisArg && typeof val === 'function') {
      a[key] = bind(val, thisArg);
    } else {
      a[key] = val;
    }
  });
  return a;
}

module.exports = {
  isArray: isArray,
  isArrayBuffer: isArrayBuffer,
  isBuffer: isBuffer,
  isFormData: isFormData,
  isArrayBufferView: isArrayBufferView,
  isString: isString,
  isNumber: isNumber,
  isObject: isObject,
  isUndefined: isUndefined,
  isDate: isDate,
  isFile: isFile,
  isBlob: isBlob,
  isFunction: isFunction,
  isStream: isStream,
  isURLSearchParams: isURLSearchParams,
  isStandardBrowserEnv: isStandardBrowserEnv,
  forEach: forEach,
  merge: merge,
  extend: extend,
  trim: trim
};


/***/ }),

/***/ "./node_modules/is-buffer/index.js":
/*!*****************************************!*\
  !*** ./node_modules/is-buffer/index.js ***!
  \*****************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports) {

/*!
 * Determine if an object is a Buffer
 *
 * @author   Feross Aboukhadijeh <https://feross.org>
 * @license  MIT
 */

// The _isBuffer check is for Safari 5-7 support, because it's missing
// Object.prototype.constructor. Remove this eventually
module.exports = function (obj) {
  return obj != null && (isBuffer(obj) || isSlowBuffer(obj) || !!obj._isBuffer)
}

function isBuffer (obj) {
  return !!obj.constructor && typeof obj.constructor.isBuffer === 'function' && obj.constructor.isBuffer(obj)
}

// For Node v0.10 support. Remove this eventually.
function isSlowBuffer (obj) {
  return typeof obj.readFloatLE === 'function' && typeof obj.slice === 'function' && isBuffer(obj.slice(0, 0))
}


/***/ }),

/***/ "./node_modules/lodash/_DataView.js":
/*!******************************************!*\
  !*** ./node_modules/lodash/_DataView.js ***!
  \******************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var getNative = __webpack_require__(/*! ./_getNative */ "./node_modules/lodash/_getNative.js"),
    root = __webpack_require__(/*! ./_root */ "./node_modules/lodash/_root.js");

/* Built-in method references that are verified to be native. */
var DataView = getNative(root, 'DataView');

module.exports = DataView;


/***/ }),

/***/ "./node_modules/lodash/_Hash.js":
/*!**************************************!*\
  !*** ./node_modules/lodash/_Hash.js ***!
  \**************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var hashClear = __webpack_require__(/*! ./_hashClear */ "./node_modules/lodash/_hashClear.js"),
    hashDelete = __webpack_require__(/*! ./_hashDelete */ "./node_modules/lodash/_hashDelete.js"),
    hashGet = __webpack_require__(/*! ./_hashGet */ "./node_modules/lodash/_hashGet.js"),
    hashHas = __webpack_require__(/*! ./_hashHas */ "./node_modules/lodash/_hashHas.js"),
    hashSet = __webpack_require__(/*! ./_hashSet */ "./node_modules/lodash/_hashSet.js");

/**
 * Creates a hash object.
 *
 * @private
 * @constructor
 * @param {Array} [entries] The key-value pairs to cache.
 */
function Hash(entries) {
  var index = -1,
      length = entries == null ? 0 : entries.length;

  this.clear();
  while (++index < length) {
    var entry = entries[index];
    this.set(entry[0], entry[1]);
  }
}

// Add methods to `Hash`.
Hash.prototype.clear = hashClear;
Hash.prototype['delete'] = hashDelete;
Hash.prototype.get = hashGet;
Hash.prototype.has = hashHas;
Hash.prototype.set = hashSet;

module.exports = Hash;


/***/ }),

/***/ "./node_modules/lodash/_ListCache.js":
/*!*******************************************!*\
  !*** ./node_modules/lodash/_ListCache.js ***!
  \*******************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var listCacheClear = __webpack_require__(/*! ./_listCacheClear */ "./node_modules/lodash/_listCacheClear.js"),
    listCacheDelete = __webpack_require__(/*! ./_listCacheDelete */ "./node_modules/lodash/_listCacheDelete.js"),
    listCacheGet = __webpack_require__(/*! ./_listCacheGet */ "./node_modules/lodash/_listCacheGet.js"),
    listCacheHas = __webpack_require__(/*! ./_listCacheHas */ "./node_modules/lodash/_listCacheHas.js"),
    listCacheSet = __webpack_require__(/*! ./_listCacheSet */ "./node_modules/lodash/_listCacheSet.js");

/**
 * Creates an list cache object.
 *
 * @private
 * @constructor
 * @param {Array} [entries] The key-value pairs to cache.
 */
function ListCache(entries) {
  var index = -1,
      length = entries == null ? 0 : entries.length;

  this.clear();
  while (++index < length) {
    var entry = entries[index];
    this.set(entry[0], entry[1]);
  }
}

// Add methods to `ListCache`.
ListCache.prototype.clear = listCacheClear;
ListCache.prototype['delete'] = listCacheDelete;
ListCache.prototype.get = listCacheGet;
ListCache.prototype.has = listCacheHas;
ListCache.prototype.set = listCacheSet;

module.exports = ListCache;


/***/ }),

/***/ "./node_modules/lodash/_Map.js":
/*!*************************************!*\
  !*** ./node_modules/lodash/_Map.js ***!
  \*************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var getNative = __webpack_require__(/*! ./_getNative */ "./node_modules/lodash/_getNative.js"),
    root = __webpack_require__(/*! ./_root */ "./node_modules/lodash/_root.js");

/* Built-in method references that are verified to be native. */
var Map = getNative(root, 'Map');

module.exports = Map;


/***/ }),

/***/ "./node_modules/lodash/_MapCache.js":
/*!******************************************!*\
  !*** ./node_modules/lodash/_MapCache.js ***!
  \******************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var mapCacheClear = __webpack_require__(/*! ./_mapCacheClear */ "./node_modules/lodash/_mapCacheClear.js"),
    mapCacheDelete = __webpack_require__(/*! ./_mapCacheDelete */ "./node_modules/lodash/_mapCacheDelete.js"),
    mapCacheGet = __webpack_require__(/*! ./_mapCacheGet */ "./node_modules/lodash/_mapCacheGet.js"),
    mapCacheHas = __webpack_require__(/*! ./_mapCacheHas */ "./node_modules/lodash/_mapCacheHas.js"),
    mapCacheSet = __webpack_require__(/*! ./_mapCacheSet */ "./node_modules/lodash/_mapCacheSet.js");

/**
 * Creates a map cache object to store key-value pairs.
 *
 * @private
 * @constructor
 * @param {Array} [entries] The key-value pairs to cache.
 */
function MapCache(entries) {
  var index = -1,
      length = entries == null ? 0 : entries.length;

  this.clear();
  while (++index < length) {
    var entry = entries[index];
    this.set(entry[0], entry[1]);
  }
}

// Add methods to `MapCache`.
MapCache.prototype.clear = mapCacheClear;
MapCache.prototype['delete'] = mapCacheDelete;
MapCache.prototype.get = mapCacheGet;
MapCache.prototype.has = mapCacheHas;
MapCache.prototype.set = mapCacheSet;

module.exports = MapCache;


/***/ }),

/***/ "./node_modules/lodash/_Promise.js":
/*!*****************************************!*\
  !*** ./node_modules/lodash/_Promise.js ***!
  \*****************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var getNative = __webpack_require__(/*! ./_getNative */ "./node_modules/lodash/_getNative.js"),
    root = __webpack_require__(/*! ./_root */ "./node_modules/lodash/_root.js");

/* Built-in method references that are verified to be native. */
var Promise = getNative(root, 'Promise');

module.exports = Promise;


/***/ }),

/***/ "./node_modules/lodash/_Set.js":
/*!*************************************!*\
  !*** ./node_modules/lodash/_Set.js ***!
  \*************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var getNative = __webpack_require__(/*! ./_getNative */ "./node_modules/lodash/_getNative.js"),
    root = __webpack_require__(/*! ./_root */ "./node_modules/lodash/_root.js");

/* Built-in method references that are verified to be native. */
var Set = getNative(root, 'Set');

module.exports = Set;


/***/ }),

/***/ "./node_modules/lodash/_SetCache.js":
/*!******************************************!*\
  !*** ./node_modules/lodash/_SetCache.js ***!
  \******************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var MapCache = __webpack_require__(/*! ./_MapCache */ "./node_modules/lodash/_MapCache.js"),
    setCacheAdd = __webpack_require__(/*! ./_setCacheAdd */ "./node_modules/lodash/_setCacheAdd.js"),
    setCacheHas = __webpack_require__(/*! ./_setCacheHas */ "./node_modules/lodash/_setCacheHas.js");

/**
 *
 * Creates an array cache object to store unique values.
 *
 * @private
 * @constructor
 * @param {Array} [values] The values to cache.
 */
function SetCache(values) {
  var index = -1,
      length = values == null ? 0 : values.length;

  this.__data__ = new MapCache;
  while (++index < length) {
    this.add(values[index]);
  }
}

// Add methods to `SetCache`.
SetCache.prototype.add = SetCache.prototype.push = setCacheAdd;
SetCache.prototype.has = setCacheHas;

module.exports = SetCache;


/***/ }),

/***/ "./node_modules/lodash/_Stack.js":
/*!***************************************!*\
  !*** ./node_modules/lodash/_Stack.js ***!
  \***************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var ListCache = __webpack_require__(/*! ./_ListCache */ "./node_modules/lodash/_ListCache.js"),
    stackClear = __webpack_require__(/*! ./_stackClear */ "./node_modules/lodash/_stackClear.js"),
    stackDelete = __webpack_require__(/*! ./_stackDelete */ "./node_modules/lodash/_stackDelete.js"),
    stackGet = __webpack_require__(/*! ./_stackGet */ "./node_modules/lodash/_stackGet.js"),
    stackHas = __webpack_require__(/*! ./_stackHas */ "./node_modules/lodash/_stackHas.js"),
    stackSet = __webpack_require__(/*! ./_stackSet */ "./node_modules/lodash/_stackSet.js");

/**
 * Creates a stack cache object to store key-value pairs.
 *
 * @private
 * @constructor
 * @param {Array} [entries] The key-value pairs to cache.
 */
function Stack(entries) {
  var data = this.__data__ = new ListCache(entries);
  this.size = data.size;
}

// Add methods to `Stack`.
Stack.prototype.clear = stackClear;
Stack.prototype['delete'] = stackDelete;
Stack.prototype.get = stackGet;
Stack.prototype.has = stackHas;
Stack.prototype.set = stackSet;

module.exports = Stack;


/***/ }),

/***/ "./node_modules/lodash/_Symbol.js":
/*!****************************************!*\
  !*** ./node_modules/lodash/_Symbol.js ***!
  \****************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var root = __webpack_require__(/*! ./_root */ "./node_modules/lodash/_root.js");

/** Built-in value references. */
var Symbol = root.Symbol;

module.exports = Symbol;


/***/ }),

/***/ "./node_modules/lodash/_Uint8Array.js":
/*!********************************************!*\
  !*** ./node_modules/lodash/_Uint8Array.js ***!
  \********************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var root = __webpack_require__(/*! ./_root */ "./node_modules/lodash/_root.js");

/** Built-in value references. */
var Uint8Array = root.Uint8Array;

module.exports = Uint8Array;


/***/ }),

/***/ "./node_modules/lodash/_WeakMap.js":
/*!*****************************************!*\
  !*** ./node_modules/lodash/_WeakMap.js ***!
  \*****************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var getNative = __webpack_require__(/*! ./_getNative */ "./node_modules/lodash/_getNative.js"),
    root = __webpack_require__(/*! ./_root */ "./node_modules/lodash/_root.js");

/* Built-in method references that are verified to be native. */
var WeakMap = getNative(root, 'WeakMap');

module.exports = WeakMap;


/***/ }),

/***/ "./node_modules/lodash/_apply.js":
/*!***************************************!*\
  !*** ./node_modules/lodash/_apply.js ***!
  \***************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports) {

/**
 * A faster alternative to `Function#apply`, this function invokes `func`
 * with the `this` binding of `thisArg` and the arguments of `args`.
 *
 * @private
 * @param {Function} func The function to invoke.
 * @param {*} thisArg The `this` binding of `func`.
 * @param {Array} args The arguments to invoke `func` with.
 * @returns {*} Returns the result of `func`.
 */
function apply(func, thisArg, args) {
  switch (args.length) {
    case 0: return func.call(thisArg);
    case 1: return func.call(thisArg, args[0]);
    case 2: return func.call(thisArg, args[0], args[1]);
    case 3: return func.call(thisArg, args[0], args[1], args[2]);
  }
  return func.apply(thisArg, args);
}

module.exports = apply;


/***/ }),

/***/ "./node_modules/lodash/_arrayEach.js":
/*!*******************************************!*\
  !*** ./node_modules/lodash/_arrayEach.js ***!
  \*******************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports) {

/**
 * A specialized version of `_.forEach` for arrays without support for
 * iteratee shorthands.
 *
 * @private
 * @param {Array} [array] The array to iterate over.
 * @param {Function} iteratee The function invoked per iteration.
 * @returns {Array} Returns `array`.
 */
function arrayEach(array, iteratee) {
  var index = -1,
      length = array == null ? 0 : array.length;

  while (++index < length) {
    if (iteratee(array[index], index, array) === false) {
      break;
    }
  }
  return array;
}

module.exports = arrayEach;


/***/ }),

/***/ "./node_modules/lodash/_arrayFilter.js":
/*!*********************************************!*\
  !*** ./node_modules/lodash/_arrayFilter.js ***!
  \*********************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports) {

/**
 * A specialized version of `_.filter` for arrays without support for
 * iteratee shorthands.
 *
 * @private
 * @param {Array} [array] The array to iterate over.
 * @param {Function} predicate The function invoked per iteration.
 * @returns {Array} Returns the new filtered array.
 */
function arrayFilter(array, predicate) {
  var index = -1,
      length = array == null ? 0 : array.length,
      resIndex = 0,
      result = [];

  while (++index < length) {
    var value = array[index];
    if (predicate(value, index, array)) {
      result[resIndex++] = value;
    }
  }
  return result;
}

module.exports = arrayFilter;


/***/ }),

/***/ "./node_modules/lodash/_arrayIncludes.js":
/*!***********************************************!*\
  !*** ./node_modules/lodash/_arrayIncludes.js ***!
  \***********************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var baseIndexOf = __webpack_require__(/*! ./_baseIndexOf */ "./node_modules/lodash/_baseIndexOf.js");

/**
 * A specialized version of `_.includes` for arrays without support for
 * specifying an index to search from.
 *
 * @private
 * @param {Array} [array] The array to inspect.
 * @param {*} target The value to search for.
 * @returns {boolean} Returns `true` if `target` is found, else `false`.
 */
function arrayIncludes(array, value) {
  var length = array == null ? 0 : array.length;
  return !!length && baseIndexOf(array, value, 0) > -1;
}

module.exports = arrayIncludes;


/***/ }),

/***/ "./node_modules/lodash/_arrayIncludesWith.js":
/*!***************************************************!*\
  !*** ./node_modules/lodash/_arrayIncludesWith.js ***!
  \***************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports) {

/**
 * This function is like `arrayIncludes` except that it accepts a comparator.
 *
 * @private
 * @param {Array} [array] The array to inspect.
 * @param {*} target The value to search for.
 * @param {Function} comparator The comparator invoked per element.
 * @returns {boolean} Returns `true` if `target` is found, else `false`.
 */
function arrayIncludesWith(array, value, comparator) {
  var index = -1,
      length = array == null ? 0 : array.length;

  while (++index < length) {
    if (comparator(value, array[index])) {
      return true;
    }
  }
  return false;
}

module.exports = arrayIncludesWith;


/***/ }),

/***/ "./node_modules/lodash/_arrayLikeKeys.js":
/*!***********************************************!*\
  !*** ./node_modules/lodash/_arrayLikeKeys.js ***!
  \***********************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var baseTimes = __webpack_require__(/*! ./_baseTimes */ "./node_modules/lodash/_baseTimes.js"),
    isArguments = __webpack_require__(/*! ./isArguments */ "./node_modules/lodash/isArguments.js"),
    isArray = __webpack_require__(/*! ./isArray */ "./node_modules/lodash/isArray.js"),
    isBuffer = __webpack_require__(/*! ./isBuffer */ "./node_modules/lodash/isBuffer.js"),
    isIndex = __webpack_require__(/*! ./_isIndex */ "./node_modules/lodash/_isIndex.js"),
    isTypedArray = __webpack_require__(/*! ./isTypedArray */ "./node_modules/lodash/isTypedArray.js");

/** Used for built-in method references. */
var objectProto = Object.prototype;

/** Used to check objects for own properties. */
var hasOwnProperty = objectProto.hasOwnProperty;

/**
 * Creates an array of the enumerable property names of the array-like `value`.
 *
 * @private
 * @param {*} value The value to query.
 * @param {boolean} inherited Specify returning inherited property names.
 * @returns {Array} Returns the array of property names.
 */
function arrayLikeKeys(value, inherited) {
  var isArr = isArray(value),
      isArg = !isArr && isArguments(value),
      isBuff = !isArr && !isArg && isBuffer(value),
      isType = !isArr && !isArg && !isBuff && isTypedArray(value),
      skipIndexes = isArr || isArg || isBuff || isType,
      result = skipIndexes ? baseTimes(value.length, String) : [],
      length = result.length;

  for (var key in value) {
    if ((inherited || hasOwnProperty.call(value, key)) &&
        !(skipIndexes && (
           // Safari 9 has enumerable `arguments.length` in strict mode.
           key == 'length' ||
           // Node.js 0.10 has enumerable non-index properties on buffers.
           (isBuff && (key == 'offset' || key == 'parent')) ||
           // PhantomJS 2 has enumerable non-index properties on typed arrays.
           (isType && (key == 'buffer' || key == 'byteLength' || key == 'byteOffset')) ||
           // Skip index properties.
           isIndex(key, length)
        ))) {
      result.push(key);
    }
  }
  return result;
}

module.exports = arrayLikeKeys;


/***/ }),

/***/ "./node_modules/lodash/_arrayMap.js":
/*!******************************************!*\
  !*** ./node_modules/lodash/_arrayMap.js ***!
  \******************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports) {

/**
 * A specialized version of `_.map` for arrays without support for iteratee
 * shorthands.
 *
 * @private
 * @param {Array} [array] The array to iterate over.
 * @param {Function} iteratee The function invoked per iteration.
 * @returns {Array} Returns the new mapped array.
 */
function arrayMap(array, iteratee) {
  var index = -1,
      length = array == null ? 0 : array.length,
      result = Array(length);

  while (++index < length) {
    result[index] = iteratee(array[index], index, array);
  }
  return result;
}

module.exports = arrayMap;


/***/ }),

/***/ "./node_modules/lodash/_arrayPush.js":
/*!*******************************************!*\
  !*** ./node_modules/lodash/_arrayPush.js ***!
  \*******************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports) {

/**
 * Appends the elements of `values` to `array`.
 *
 * @private
 * @param {Array} array The array to modify.
 * @param {Array} values The values to append.
 * @returns {Array} Returns `array`.
 */
function arrayPush(array, values) {
  var index = -1,
      length = values.length,
      offset = array.length;

  while (++index < length) {
    array[offset + index] = values[index];
  }
  return array;
}

module.exports = arrayPush;


/***/ }),

/***/ "./node_modules/lodash/_arraySome.js":
/*!*******************************************!*\
  !*** ./node_modules/lodash/_arraySome.js ***!
  \*******************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports) {

/**
 * A specialized version of `_.some` for arrays without support for iteratee
 * shorthands.
 *
 * @private
 * @param {Array} [array] The array to iterate over.
 * @param {Function} predicate The function invoked per iteration.
 * @returns {boolean} Returns `true` if any element passes the predicate check,
 *  else `false`.
 */
function arraySome(array, predicate) {
  var index = -1,
      length = array == null ? 0 : array.length;

  while (++index < length) {
    if (predicate(array[index], index, array)) {
      return true;
    }
  }
  return false;
}

module.exports = arraySome;


/***/ }),

/***/ "./node_modules/lodash/_assignValue.js":
/*!*********************************************!*\
  !*** ./node_modules/lodash/_assignValue.js ***!
  \*********************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var baseAssignValue = __webpack_require__(/*! ./_baseAssignValue */ "./node_modules/lodash/_baseAssignValue.js"),
    eq = __webpack_require__(/*! ./eq */ "./node_modules/lodash/eq.js");

/** Used for built-in method references. */
var objectProto = Object.prototype;

/** Used to check objects for own properties. */
var hasOwnProperty = objectProto.hasOwnProperty;

/**
 * Assigns `value` to `key` of `object` if the existing value is not equivalent
 * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
 * for equality comparisons.
 *
 * @private
 * @param {Object} object The object to modify.
 * @param {string} key The key of the property to assign.
 * @param {*} value The value to assign.
 */
function assignValue(object, key, value) {
  var objValue = object[key];
  if (!(hasOwnProperty.call(object, key) && eq(objValue, value)) ||
      (value === undefined && !(key in object))) {
    baseAssignValue(object, key, value);
  }
}

module.exports = assignValue;


/***/ }),

/***/ "./node_modules/lodash/_assocIndexOf.js":
/*!**********************************************!*\
  !*** ./node_modules/lodash/_assocIndexOf.js ***!
  \**********************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var eq = __webpack_require__(/*! ./eq */ "./node_modules/lodash/eq.js");

/**
 * Gets the index at which the `key` is found in `array` of key-value pairs.
 *
 * @private
 * @param {Array} array The array to inspect.
 * @param {*} key The key to search for.
 * @returns {number} Returns the index of the matched value, else `-1`.
 */
function assocIndexOf(array, key) {
  var length = array.length;
  while (length--) {
    if (eq(array[length][0], key)) {
      return length;
    }
  }
  return -1;
}

module.exports = assocIndexOf;


/***/ }),

/***/ "./node_modules/lodash/_baseAssign.js":
/*!********************************************!*\
  !*** ./node_modules/lodash/_baseAssign.js ***!
  \********************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var copyObject = __webpack_require__(/*! ./_copyObject */ "./node_modules/lodash/_copyObject.js"),
    keys = __webpack_require__(/*! ./keys */ "./node_modules/lodash/keys.js");

/**
 * The base implementation of `_.assign` without support for multiple sources
 * or `customizer` functions.
 *
 * @private
 * @param {Object} object The destination object.
 * @param {Object} source The source object.
 * @returns {Object} Returns `object`.
 */
function baseAssign(object, source) {
  return object && copyObject(source, keys(source), object);
}

module.exports = baseAssign;


/***/ }),

/***/ "./node_modules/lodash/_baseAssignIn.js":
/*!**********************************************!*\
  !*** ./node_modules/lodash/_baseAssignIn.js ***!
  \**********************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var copyObject = __webpack_require__(/*! ./_copyObject */ "./node_modules/lodash/_copyObject.js"),
    keysIn = __webpack_require__(/*! ./keysIn */ "./node_modules/lodash/keysIn.js");

/**
 * The base implementation of `_.assignIn` without support for multiple sources
 * or `customizer` functions.
 *
 * @private
 * @param {Object} object The destination object.
 * @param {Object} source The source object.
 * @returns {Object} Returns `object`.
 */
function baseAssignIn(object, source) {
  return object && copyObject(source, keysIn(source), object);
}

module.exports = baseAssignIn;


/***/ }),

/***/ "./node_modules/lodash/_baseAssignValue.js":
/*!*************************************************!*\
  !*** ./node_modules/lodash/_baseAssignValue.js ***!
  \*************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var defineProperty = __webpack_require__(/*! ./_defineProperty */ "./node_modules/lodash/_defineProperty.js");

/**
 * The base implementation of `assignValue` and `assignMergeValue` without
 * value checks.
 *
 * @private
 * @param {Object} object The object to modify.
 * @param {string} key The key of the property to assign.
 * @param {*} value The value to assign.
 */
function baseAssignValue(object, key, value) {
  if (key == '__proto__' && defineProperty) {
    defineProperty(object, key, {
      'configurable': true,
      'enumerable': true,
      'value': value,
      'writable': true
    });
  } else {
    object[key] = value;
  }
}

module.exports = baseAssignValue;


/***/ }),

/***/ "./node_modules/lodash/_baseClone.js":
/*!*******************************************!*\
  !*** ./node_modules/lodash/_baseClone.js ***!
  \*******************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var Stack = __webpack_require__(/*! ./_Stack */ "./node_modules/lodash/_Stack.js"),
    arrayEach = __webpack_require__(/*! ./_arrayEach */ "./node_modules/lodash/_arrayEach.js"),
    assignValue = __webpack_require__(/*! ./_assignValue */ "./node_modules/lodash/_assignValue.js"),
    baseAssign = __webpack_require__(/*! ./_baseAssign */ "./node_modules/lodash/_baseAssign.js"),
    baseAssignIn = __webpack_require__(/*! ./_baseAssignIn */ "./node_modules/lodash/_baseAssignIn.js"),
    cloneBuffer = __webpack_require__(/*! ./_cloneBuffer */ "./node_modules/lodash/_cloneBuffer.js"),
    copyArray = __webpack_require__(/*! ./_copyArray */ "./node_modules/lodash/_copyArray.js"),
    copySymbols = __webpack_require__(/*! ./_copySymbols */ "./node_modules/lodash/_copySymbols.js"),
    copySymbolsIn = __webpack_require__(/*! ./_copySymbolsIn */ "./node_modules/lodash/_copySymbolsIn.js"),
    getAllKeys = __webpack_require__(/*! ./_getAllKeys */ "./node_modules/lodash/_getAllKeys.js"),
    getAllKeysIn = __webpack_require__(/*! ./_getAllKeysIn */ "./node_modules/lodash/_getAllKeysIn.js"),
    getTag = __webpack_require__(/*! ./_getTag */ "./node_modules/lodash/_getTag.js"),
    initCloneArray = __webpack_require__(/*! ./_initCloneArray */ "./node_modules/lodash/_initCloneArray.js"),
    initCloneByTag = __webpack_require__(/*! ./_initCloneByTag */ "./node_modules/lodash/_initCloneByTag.js"),
    initCloneObject = __webpack_require__(/*! ./_initCloneObject */ "./node_modules/lodash/_initCloneObject.js"),
    isArray = __webpack_require__(/*! ./isArray */ "./node_modules/lodash/isArray.js"),
    isBuffer = __webpack_require__(/*! ./isBuffer */ "./node_modules/lodash/isBuffer.js"),
    isMap = __webpack_require__(/*! ./isMap */ "./node_modules/lodash/isMap.js"),
    isObject = __webpack_require__(/*! ./isObject */ "./node_modules/lodash/isObject.js"),
    isSet = __webpack_require__(/*! ./isSet */ "./node_modules/lodash/isSet.js"),
    keys = __webpack_require__(/*! ./keys */ "./node_modules/lodash/keys.js");

/** Used to compose bitmasks for cloning. */
var CLONE_DEEP_FLAG = 1,
    CLONE_FLAT_FLAG = 2,
    CLONE_SYMBOLS_FLAG = 4;

/** `Object#toString` result references. */
var argsTag = '[object Arguments]',
    arrayTag = '[object Array]',
    boolTag = '[object Boolean]',
    dateTag = '[object Date]',
    errorTag = '[object Error]',
    funcTag = '[object Function]',
    genTag = '[object GeneratorFunction]',
    mapTag = '[object Map]',
    numberTag = '[object Number]',
    objectTag = '[object Object]',
    regexpTag = '[object RegExp]',
    setTag = '[object Set]',
    stringTag = '[object String]',
    symbolTag = '[object Symbol]',
    weakMapTag = '[object WeakMap]';

var arrayBufferTag = '[object ArrayBuffer]',
    dataViewTag = '[object DataView]',
    float32Tag = '[object Float32Array]',
    float64Tag = '[object Float64Array]',
    int8Tag = '[object Int8Array]',
    int16Tag = '[object Int16Array]',
    int32Tag = '[object Int32Array]',
    uint8Tag = '[object Uint8Array]',
    uint8ClampedTag = '[object Uint8ClampedArray]',
    uint16Tag = '[object Uint16Array]',
    uint32Tag = '[object Uint32Array]';

/** Used to identify `toStringTag` values supported by `_.clone`. */
var cloneableTags = {};
cloneableTags[argsTag] = cloneableTags[arrayTag] =
cloneableTags[arrayBufferTag] = cloneableTags[dataViewTag] =
cloneableTags[boolTag] = cloneableTags[dateTag] =
cloneableTags[float32Tag] = cloneableTags[float64Tag] =
cloneableTags[int8Tag] = cloneableTags[int16Tag] =
cloneableTags[int32Tag] = cloneableTags[mapTag] =
cloneableTags[numberTag] = cloneableTags[objectTag] =
cloneableTags[regexpTag] = cloneableTags[setTag] =
cloneableTags[stringTag] = cloneableTags[symbolTag] =
cloneableTags[uint8Tag] = cloneableTags[uint8ClampedTag] =
cloneableTags[uint16Tag] = cloneableTags[uint32Tag] = true;
cloneableTags[errorTag] = cloneableTags[funcTag] =
cloneableTags[weakMapTag] = false;

/**
 * The base implementation of `_.clone` and `_.cloneDeep` which tracks
 * traversed objects.
 *
 * @private
 * @param {*} value The value to clone.
 * @param {boolean} bitmask The bitmask flags.
 *  1 - Deep clone
 *  2 - Flatten inherited properties
 *  4 - Clone symbols
 * @param {Function} [customizer] The function to customize cloning.
 * @param {string} [key] The key of `value`.
 * @param {Object} [object] The parent object of `value`.
 * @param {Object} [stack] Tracks traversed objects and their clone counterparts.
 * @returns {*} Returns the cloned value.
 */
function baseClone(value, bitmask, customizer, key, object, stack) {
  var result,
      isDeep = bitmask & CLONE_DEEP_FLAG,
      isFlat = bitmask & CLONE_FLAT_FLAG,
      isFull = bitmask & CLONE_SYMBOLS_FLAG;

  if (customizer) {
    result = object ? customizer(value, key, object, stack) : customizer(value);
  }
  if (result !== undefined) {
    return result;
  }
  if (!isObject(value)) {
    return value;
  }
  var isArr = isArray(value);
  if (isArr) {
    result = initCloneArray(value);
    if (!isDeep) {
      return copyArray(value, result);
    }
  } else {
    var tag = getTag(value),
        isFunc = tag == funcTag || tag == genTag;

    if (isBuffer(value)) {
      return cloneBuffer(value, isDeep);
    }
    if (tag == objectTag || tag == argsTag || (isFunc && !object)) {
      result = (isFlat || isFunc) ? {} : initCloneObject(value);
      if (!isDeep) {
        return isFlat
          ? copySymbolsIn(value, baseAssignIn(result, value))
          : copySymbols(value, baseAssign(result, value));
      }
    } else {
      if (!cloneableTags[tag]) {
        return object ? value : {};
      }
      result = initCloneByTag(value, tag, isDeep);
    }
  }
  // Check for circular references and return its corresponding clone.
  stack || (stack = new Stack);
  var stacked = stack.get(value);
  if (stacked) {
    return stacked;
  }
  stack.set(value, result);

  if (isSet(value)) {
    value.forEach(function(subValue) {
      result.add(baseClone(subValue, bitmask, customizer, subValue, value, stack));
    });

    return result;
  }

  if (isMap(value)) {
    value.forEach(function(subValue, key) {
      result.set(key, baseClone(subValue, bitmask, customizer, key, value, stack));
    });

    return result;
  }

  var keysFunc = isFull
    ? (isFlat ? getAllKeysIn : getAllKeys)
    : (isFlat ? keysIn : keys);

  var props = isArr ? undefined : keysFunc(value);
  arrayEach(props || value, function(subValue, key) {
    if (props) {
      key = subValue;
      subValue = value[key];
    }
    // Recursively populate clone (susceptible to call stack limits).
    assignValue(result, key, baseClone(subValue, bitmask, customizer, key, value, stack));
  });
  return result;
}

module.exports = baseClone;


/***/ }),

/***/ "./node_modules/lodash/_baseCreate.js":
/*!********************************************!*\
  !*** ./node_modules/lodash/_baseCreate.js ***!
  \********************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var isObject = __webpack_require__(/*! ./isObject */ "./node_modules/lodash/isObject.js");

/** Built-in value references. */
var objectCreate = Object.create;

/**
 * The base implementation of `_.create` without support for assigning
 * properties to the created object.
 *
 * @private
 * @param {Object} proto The object to inherit from.
 * @returns {Object} Returns the new object.
 */
var baseCreate = (function() {
  function object() {}
  return function(proto) {
    if (!isObject(proto)) {
      return {};
    }
    if (objectCreate) {
      return objectCreate(proto);
    }
    object.prototype = proto;
    var result = new object;
    object.prototype = undefined;
    return result;
  };
}());

module.exports = baseCreate;


/***/ }),

/***/ "./node_modules/lodash/_baseEach.js":
/*!******************************************!*\
  !*** ./node_modules/lodash/_baseEach.js ***!
  \******************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var baseForOwn = __webpack_require__(/*! ./_baseForOwn */ "./node_modules/lodash/_baseForOwn.js"),
    createBaseEach = __webpack_require__(/*! ./_createBaseEach */ "./node_modules/lodash/_createBaseEach.js");

/**
 * The base implementation of `_.forEach` without support for iteratee shorthands.
 *
 * @private
 * @param {Array|Object} collection The collection to iterate over.
 * @param {Function} iteratee The function invoked per iteration.
 * @returns {Array|Object} Returns `collection`.
 */
var baseEach = createBaseEach(baseForOwn);

module.exports = baseEach;


/***/ }),

/***/ "./node_modules/lodash/_baseExtremum.js":
/*!**********************************************!*\
  !*** ./node_modules/lodash/_baseExtremum.js ***!
  \**********************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var isSymbol = __webpack_require__(/*! ./isSymbol */ "./node_modules/lodash/isSymbol.js");

/**
 * The base implementation of methods like `_.max` and `_.min` which accepts a
 * `comparator` to determine the extremum value.
 *
 * @private
 * @param {Array} array The array to iterate over.
 * @param {Function} iteratee The iteratee invoked per iteration.
 * @param {Function} comparator The comparator used to compare values.
 * @returns {*} Returns the extremum value.
 */
function baseExtremum(array, iteratee, comparator) {
  var index = -1,
      length = array.length;

  while (++index < length) {
    var value = array[index],
        current = iteratee(value);

    if (current != null && (computed === undefined
          ? (current === current && !isSymbol(current))
          : comparator(current, computed)
        )) {
      var computed = current,
          result = value;
    }
  }
  return result;
}

module.exports = baseExtremum;


/***/ }),

/***/ "./node_modules/lodash/_baseFindIndex.js":
/*!***********************************************!*\
  !*** ./node_modules/lodash/_baseFindIndex.js ***!
  \***********************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports) {

/**
 * The base implementation of `_.findIndex` and `_.findLastIndex` without
 * support for iteratee shorthands.
 *
 * @private
 * @param {Array} array The array to inspect.
 * @param {Function} predicate The function invoked per iteration.
 * @param {number} fromIndex The index to search from.
 * @param {boolean} [fromRight] Specify iterating from right to left.
 * @returns {number} Returns the index of the matched value, else `-1`.
 */
function baseFindIndex(array, predicate, fromIndex, fromRight) {
  var length = array.length,
      index = fromIndex + (fromRight ? 1 : -1);

  while ((fromRight ? index-- : ++index < length)) {
    if (predicate(array[index], index, array)) {
      return index;
    }
  }
  return -1;
}

module.exports = baseFindIndex;


/***/ }),

/***/ "./node_modules/lodash/_baseFlatten.js":
/*!*********************************************!*\
  !*** ./node_modules/lodash/_baseFlatten.js ***!
  \*********************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var arrayPush = __webpack_require__(/*! ./_arrayPush */ "./node_modules/lodash/_arrayPush.js"),
    isFlattenable = __webpack_require__(/*! ./_isFlattenable */ "./node_modules/lodash/_isFlattenable.js");

/**
 * The base implementation of `_.flatten` with support for restricting flattening.
 *
 * @private
 * @param {Array} array The array to flatten.
 * @param {number} depth The maximum recursion depth.
 * @param {boolean} [predicate=isFlattenable] The function invoked per iteration.
 * @param {boolean} [isStrict] Restrict to values that pass `predicate` checks.
 * @param {Array} [result=[]] The initial result value.
 * @returns {Array} Returns the new flattened array.
 */
function baseFlatten(array, depth, predicate, isStrict, result) {
  var index = -1,
      length = array.length;

  predicate || (predicate = isFlattenable);
  result || (result = []);

  while (++index < length) {
    var value = array[index];
    if (depth > 0 && predicate(value)) {
      if (depth > 1) {
        // Recursively flatten arrays (susceptible to call stack limits).
        baseFlatten(value, depth - 1, predicate, isStrict, result);
      } else {
        arrayPush(result, value);
      }
    } else if (!isStrict) {
      result[result.length] = value;
    }
  }
  return result;
}

module.exports = baseFlatten;


/***/ }),

/***/ "./node_modules/lodash/_baseFor.js":
/*!*****************************************!*\
  !*** ./node_modules/lodash/_baseFor.js ***!
  \*****************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var createBaseFor = __webpack_require__(/*! ./_createBaseFor */ "./node_modules/lodash/_createBaseFor.js");

/**
 * The base implementation of `baseForOwn` which iterates over `object`
 * properties returned by `keysFunc` and invokes `iteratee` for each property.
 * Iteratee functions may exit iteration early by explicitly returning `false`.
 *
 * @private
 * @param {Object} object The object to iterate over.
 * @param {Function} iteratee The function invoked per iteration.
 * @param {Function} keysFunc The function to get the keys of `object`.
 * @returns {Object} Returns `object`.
 */
var baseFor = createBaseFor();

module.exports = baseFor;


/***/ }),

/***/ "./node_modules/lodash/_baseForOwn.js":
/*!********************************************!*\
  !*** ./node_modules/lodash/_baseForOwn.js ***!
  \********************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var baseFor = __webpack_require__(/*! ./_baseFor */ "./node_modules/lodash/_baseFor.js"),
    keys = __webpack_require__(/*! ./keys */ "./node_modules/lodash/keys.js");

/**
 * The base implementation of `_.forOwn` without support for iteratee shorthands.
 *
 * @private
 * @param {Object} object The object to iterate over.
 * @param {Function} iteratee The function invoked per iteration.
 * @returns {Object} Returns `object`.
 */
function baseForOwn(object, iteratee) {
  return object && baseFor(object, iteratee, keys);
}

module.exports = baseForOwn;


/***/ }),

/***/ "./node_modules/lodash/_baseGet.js":
/*!*****************************************!*\
  !*** ./node_modules/lodash/_baseGet.js ***!
  \*****************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var castPath = __webpack_require__(/*! ./_castPath */ "./node_modules/lodash/_castPath.js"),
    toKey = __webpack_require__(/*! ./_toKey */ "./node_modules/lodash/_toKey.js");

/**
 * The base implementation of `_.get` without support for default values.
 *
 * @private
 * @param {Object} object The object to query.
 * @param {Array|string} path The path of the property to get.
 * @returns {*} Returns the resolved value.
 */
function baseGet(object, path) {
  path = castPath(path, object);

  var index = 0,
      length = path.length;

  while (object != null && index < length) {
    object = object[toKey(path[index++])];
  }
  return (index && index == length) ? object : undefined;
}

module.exports = baseGet;


/***/ }),

/***/ "./node_modules/lodash/_baseGetAllKeys.js":
/*!************************************************!*\
  !*** ./node_modules/lodash/_baseGetAllKeys.js ***!
  \************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var arrayPush = __webpack_require__(/*! ./_arrayPush */ "./node_modules/lodash/_arrayPush.js"),
    isArray = __webpack_require__(/*! ./isArray */ "./node_modules/lodash/isArray.js");

/**
 * The base implementation of `getAllKeys` and `getAllKeysIn` which uses
 * `keysFunc` and `symbolsFunc` to get the enumerable property names and
 * symbols of `object`.
 *
 * @private
 * @param {Object} object The object to query.
 * @param {Function} keysFunc The function to get the keys of `object`.
 * @param {Function} symbolsFunc The function to get the symbols of `object`.
 * @returns {Array} Returns the array of property names and symbols.
 */
function baseGetAllKeys(object, keysFunc, symbolsFunc) {
  var result = keysFunc(object);
  return isArray(object) ? result : arrayPush(result, symbolsFunc(object));
}

module.exports = baseGetAllKeys;


/***/ }),

/***/ "./node_modules/lodash/_baseGetTag.js":
/*!********************************************!*\
  !*** ./node_modules/lodash/_baseGetTag.js ***!
  \********************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var Symbol = __webpack_require__(/*! ./_Symbol */ "./node_modules/lodash/_Symbol.js"),
    getRawTag = __webpack_require__(/*! ./_getRawTag */ "./node_modules/lodash/_getRawTag.js"),
    objectToString = __webpack_require__(/*! ./_objectToString */ "./node_modules/lodash/_objectToString.js");

/** `Object#toString` result references. */
var nullTag = '[object Null]',
    undefinedTag = '[object Undefined]';

/** Built-in value references. */
var symToStringTag = Symbol ? Symbol.toStringTag : undefined;

/**
 * The base implementation of `getTag` without fallbacks for buggy environments.
 *
 * @private
 * @param {*} value The value to query.
 * @returns {string} Returns the `toStringTag`.
 */
function baseGetTag(value) {
  if (value == null) {
    return value === undefined ? undefinedTag : nullTag;
  }
  return (symToStringTag && symToStringTag in Object(value))
    ? getRawTag(value)
    : objectToString(value);
}

module.exports = baseGetTag;


/***/ }),

/***/ "./node_modules/lodash/_baseGt.js":
/*!****************************************!*\
  !*** ./node_modules/lodash/_baseGt.js ***!
  \****************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports) {

/**
 * The base implementation of `_.gt` which doesn't coerce arguments.
 *
 * @private
 * @param {*} value The value to compare.
 * @param {*} other The other value to compare.
 * @returns {boolean} Returns `true` if `value` is greater than `other`,
 *  else `false`.
 */
function baseGt(value, other) {
  return value > other;
}

module.exports = baseGt;


/***/ }),

/***/ "./node_modules/lodash/_baseHasIn.js":
/*!*******************************************!*\
  !*** ./node_modules/lodash/_baseHasIn.js ***!
  \*******************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports) {

/**
 * The base implementation of `_.hasIn` without support for deep paths.
 *
 * @private
 * @param {Object} [object] The object to query.
 * @param {Array|string} key The key to check.
 * @returns {boolean} Returns `true` if `key` exists, else `false`.
 */
function baseHasIn(object, key) {
  return object != null && key in Object(object);
}

module.exports = baseHasIn;


/***/ }),

/***/ "./node_modules/lodash/_baseIndexOf.js":
/*!*********************************************!*\
  !*** ./node_modules/lodash/_baseIndexOf.js ***!
  \*********************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var baseFindIndex = __webpack_require__(/*! ./_baseFindIndex */ "./node_modules/lodash/_baseFindIndex.js"),
    baseIsNaN = __webpack_require__(/*! ./_baseIsNaN */ "./node_modules/lodash/_baseIsNaN.js"),
    strictIndexOf = __webpack_require__(/*! ./_strictIndexOf */ "./node_modules/lodash/_strictIndexOf.js");

/**
 * The base implementation of `_.indexOf` without `fromIndex` bounds checks.
 *
 * @private
 * @param {Array} array The array to inspect.
 * @param {*} value The value to search for.
 * @param {number} fromIndex The index to search from.
 * @returns {number} Returns the index of the matched value, else `-1`.
 */
function baseIndexOf(array, value, fromIndex) {
  return value === value
    ? strictIndexOf(array, value, fromIndex)
    : baseFindIndex(array, baseIsNaN, fromIndex);
}

module.exports = baseIndexOf;


/***/ }),

/***/ "./node_modules/lodash/_baseIsArguments.js":
/*!*************************************************!*\
  !*** ./node_modules/lodash/_baseIsArguments.js ***!
  \*************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var baseGetTag = __webpack_require__(/*! ./_baseGetTag */ "./node_modules/lodash/_baseGetTag.js"),
    isObjectLike = __webpack_require__(/*! ./isObjectLike */ "./node_modules/lodash/isObjectLike.js");

/** `Object#toString` result references. */
var argsTag = '[object Arguments]';

/**
 * The base implementation of `_.isArguments`.
 *
 * @private
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is an `arguments` object,
 */
function baseIsArguments(value) {
  return isObjectLike(value) && baseGetTag(value) == argsTag;
}

module.exports = baseIsArguments;


/***/ }),

/***/ "./node_modules/lodash/_baseIsEqual.js":
/*!*********************************************!*\
  !*** ./node_modules/lodash/_baseIsEqual.js ***!
  \*********************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var baseIsEqualDeep = __webpack_require__(/*! ./_baseIsEqualDeep */ "./node_modules/lodash/_baseIsEqualDeep.js"),
    isObjectLike = __webpack_require__(/*! ./isObjectLike */ "./node_modules/lodash/isObjectLike.js");

/**
 * The base implementation of `_.isEqual` which supports partial comparisons
 * and tracks traversed objects.
 *
 * @private
 * @param {*} value The value to compare.
 * @param {*} other The other value to compare.
 * @param {boolean} bitmask The bitmask flags.
 *  1 - Unordered comparison
 *  2 - Partial comparison
 * @param {Function} [customizer] The function to customize comparisons.
 * @param {Object} [stack] Tracks traversed `value` and `other` objects.
 * @returns {boolean} Returns `true` if the values are equivalent, else `false`.
 */
function baseIsEqual(value, other, bitmask, customizer, stack) {
  if (value === other) {
    return true;
  }
  if (value == null || other == null || (!isObjectLike(value) && !isObjectLike(other))) {
    return value !== value && other !== other;
  }
  return baseIsEqualDeep(value, other, bitmask, customizer, baseIsEqual, stack);
}

module.exports = baseIsEqual;


/***/ }),

/***/ "./node_modules/lodash/_baseIsEqualDeep.js":
/*!*************************************************!*\
  !*** ./node_modules/lodash/_baseIsEqualDeep.js ***!
  \*************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var Stack = __webpack_require__(/*! ./_Stack */ "./node_modules/lodash/_Stack.js"),
    equalArrays = __webpack_require__(/*! ./_equalArrays */ "./node_modules/lodash/_equalArrays.js"),
    equalByTag = __webpack_require__(/*! ./_equalByTag */ "./node_modules/lodash/_equalByTag.js"),
    equalObjects = __webpack_require__(/*! ./_equalObjects */ "./node_modules/lodash/_equalObjects.js"),
    getTag = __webpack_require__(/*! ./_getTag */ "./node_modules/lodash/_getTag.js"),
    isArray = __webpack_require__(/*! ./isArray */ "./node_modules/lodash/isArray.js"),
    isBuffer = __webpack_require__(/*! ./isBuffer */ "./node_modules/lodash/isBuffer.js"),
    isTypedArray = __webpack_require__(/*! ./isTypedArray */ "./node_modules/lodash/isTypedArray.js");

/** Used to compose bitmasks for value comparisons. */
var COMPARE_PARTIAL_FLAG = 1;

/** `Object#toString` result references. */
var argsTag = '[object Arguments]',
    arrayTag = '[object Array]',
    objectTag = '[object Object]';

/** Used for built-in method references. */
var objectProto = Object.prototype;

/** Used to check objects for own properties. */
var hasOwnProperty = objectProto.hasOwnProperty;

/**
 * A specialized version of `baseIsEqual` for arrays and objects which performs
 * deep comparisons and tracks traversed objects enabling objects with circular
 * references to be compared.
 *
 * @private
 * @param {Object} object The object to compare.
 * @param {Object} other The other object to compare.
 * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.
 * @param {Function} customizer The function to customize comparisons.
 * @param {Function} equalFunc The function to determine equivalents of values.
 * @param {Object} [stack] Tracks traversed `object` and `other` objects.
 * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.
 */
function baseIsEqualDeep(object, other, bitmask, customizer, equalFunc, stack) {
  var objIsArr = isArray(object),
      othIsArr = isArray(other),
      objTag = objIsArr ? arrayTag : getTag(object),
      othTag = othIsArr ? arrayTag : getTag(other);

  objTag = objTag == argsTag ? objectTag : objTag;
  othTag = othTag == argsTag ? objectTag : othTag;

  var objIsObj = objTag == objectTag,
      othIsObj = othTag == objectTag,
      isSameTag = objTag == othTag;

  if (isSameTag && isBuffer(object)) {
    if (!isBuffer(other)) {
      return false;
    }
    objIsArr = true;
    objIsObj = false;
  }
  if (isSameTag && !objIsObj) {
    stack || (stack = new Stack);
    return (objIsArr || isTypedArray(object))
      ? equalArrays(object, other, bitmask, customizer, equalFunc, stack)
      : equalByTag(object, other, objTag, bitmask, customizer, equalFunc, stack);
  }
  if (!(bitmask & COMPARE_PARTIAL_FLAG)) {
    var objIsWrapped = objIsObj && hasOwnProperty.call(object, '__wrapped__'),
        othIsWrapped = othIsObj && hasOwnProperty.call(other, '__wrapped__');

    if (objIsWrapped || othIsWrapped) {
      var objUnwrapped = objIsWrapped ? object.value() : object,
          othUnwrapped = othIsWrapped ? other.value() : other;

      stack || (stack = new Stack);
      return equalFunc(objUnwrapped, othUnwrapped, bitmask, customizer, stack);
    }
  }
  if (!isSameTag) {
    return false;
  }
  stack || (stack = new Stack);
  return equalObjects(object, other, bitmask, customizer, equalFunc, stack);
}

module.exports = baseIsEqualDeep;


/***/ }),

/***/ "./node_modules/lodash/_baseIsMap.js":
/*!*******************************************!*\
  !*** ./node_modules/lodash/_baseIsMap.js ***!
  \*******************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var getTag = __webpack_require__(/*! ./_getTag */ "./node_modules/lodash/_getTag.js"),
    isObjectLike = __webpack_require__(/*! ./isObjectLike */ "./node_modules/lodash/isObjectLike.js");

/** `Object#toString` result references. */
var mapTag = '[object Map]';

/**
 * The base implementation of `_.isMap` without Node.js optimizations.
 *
 * @private
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a map, else `false`.
 */
function baseIsMap(value) {
  return isObjectLike(value) && getTag(value) == mapTag;
}

module.exports = baseIsMap;


/***/ }),

/***/ "./node_modules/lodash/_baseIsMatch.js":
/*!*********************************************!*\
  !*** ./node_modules/lodash/_baseIsMatch.js ***!
  \*********************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var Stack = __webpack_require__(/*! ./_Stack */ "./node_modules/lodash/_Stack.js"),
    baseIsEqual = __webpack_require__(/*! ./_baseIsEqual */ "./node_modules/lodash/_baseIsEqual.js");

/** Used to compose bitmasks for value comparisons. */
var COMPARE_PARTIAL_FLAG = 1,
    COMPARE_UNORDERED_FLAG = 2;

/**
 * The base implementation of `_.isMatch` without support for iteratee shorthands.
 *
 * @private
 * @param {Object} object The object to inspect.
 * @param {Object} source The object of property values to match.
 * @param {Array} matchData The property names, values, and compare flags to match.
 * @param {Function} [customizer] The function to customize comparisons.
 * @returns {boolean} Returns `true` if `object` is a match, else `false`.
 */
function baseIsMatch(object, source, matchData, customizer) {
  var index = matchData.length,
      length = index,
      noCustomizer = !customizer;

  if (object == null) {
    return !length;
  }
  object = Object(object);
  while (index--) {
    var data = matchData[index];
    if ((noCustomizer && data[2])
          ? data[1] !== object[data[0]]
          : !(data[0] in object)
        ) {
      return false;
    }
  }
  while (++index < length) {
    data = matchData[index];
    var key = data[0],
        objValue = object[key],
        srcValue = data[1];

    if (noCustomizer && data[2]) {
      if (objValue === undefined && !(key in object)) {
        return false;
      }
    } else {
      var stack = new Stack;
      if (customizer) {
        var result = customizer(objValue, srcValue, key, object, source, stack);
      }
      if (!(result === undefined
            ? baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG, customizer, stack)
            : result
          )) {
        return false;
      }
    }
  }
  return true;
}

module.exports = baseIsMatch;


/***/ }),

/***/ "./node_modules/lodash/_baseIsNaN.js":
/*!*******************************************!*\
  !*** ./node_modules/lodash/_baseIsNaN.js ***!
  \*******************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports) {

/**
 * The base implementation of `_.isNaN` without support for number objects.
 *
 * @private
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.
 */
function baseIsNaN(value) {
  return value !== value;
}

module.exports = baseIsNaN;


/***/ }),

/***/ "./node_modules/lodash/_baseIsNative.js":
/*!**********************************************!*\
  !*** ./node_modules/lodash/_baseIsNative.js ***!
  \**********************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var isFunction = __webpack_require__(/*! ./isFunction */ "./node_modules/lodash/isFunction.js"),
    isMasked = __webpack_require__(/*! ./_isMasked */ "./node_modules/lodash/_isMasked.js"),
    isObject = __webpack_require__(/*! ./isObject */ "./node_modules/lodash/isObject.js"),
    toSource = __webpack_require__(/*! ./_toSource */ "./node_modules/lodash/_toSource.js");

/**
 * Used to match `RegExp`
 * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).
 */
var reRegExpChar = /[\\^$.*+?()[\]{}|]/g;

/** Used to detect host constructors (Safari). */
var reIsHostCtor = /^\[object .+?Constructor\]$/;

/** Used for built-in method references. */
var funcProto = Function.prototype,
    objectProto = Object.prototype;

/** Used to resolve the decompiled source of functions. */
var funcToString = funcProto.toString;

/** Used to check objects for own properties. */
var hasOwnProperty = objectProto.hasOwnProperty;

/** Used to detect if a method is native. */
var reIsNative = RegExp('^' +
  funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\$&')
  .replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g, '$1.*?') + '$'
);

/**
 * The base implementation of `_.isNative` without bad shim checks.
 *
 * @private
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a native function,
 *  else `false`.
 */
function baseIsNative(value) {
  if (!isObject(value) || isMasked(value)) {
    return false;
  }
  var pattern = isFunction(value) ? reIsNative : reIsHostCtor;
  return pattern.test(toSource(value));
}

module.exports = baseIsNative;


/***/ }),

/***/ "./node_modules/lodash/_baseIsSet.js":
/*!*******************************************!*\
  !*** ./node_modules/lodash/_baseIsSet.js ***!
  \*******************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var getTag = __webpack_require__(/*! ./_getTag */ "./node_modules/lodash/_getTag.js"),
    isObjectLike = __webpack_require__(/*! ./isObjectLike */ "./node_modules/lodash/isObjectLike.js");

/** `Object#toString` result references. */
var setTag = '[object Set]';

/**
 * The base implementation of `_.isSet` without Node.js optimizations.
 *
 * @private
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a set, else `false`.
 */
function baseIsSet(value) {
  return isObjectLike(value) && getTag(value) == setTag;
}

module.exports = baseIsSet;


/***/ }),

/***/ "./node_modules/lodash/_baseIsTypedArray.js":
/*!**************************************************!*\
  !*** ./node_modules/lodash/_baseIsTypedArray.js ***!
  \**************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var baseGetTag = __webpack_require__(/*! ./_baseGetTag */ "./node_modules/lodash/_baseGetTag.js"),
    isLength = __webpack_require__(/*! ./isLength */ "./node_modules/lodash/isLength.js"),
    isObjectLike = __webpack_require__(/*! ./isObjectLike */ "./node_modules/lodash/isObjectLike.js");

/** `Object#toString` result references. */
var argsTag = '[object Arguments]',
    arrayTag = '[object Array]',
    boolTag = '[object Boolean]',
    dateTag = '[object Date]',
    errorTag = '[object Error]',
    funcTag = '[object Function]',
    mapTag = '[object Map]',
    numberTag = '[object Number]',
    objectTag = '[object Object]',
    regexpTag = '[object RegExp]',
    setTag = '[object Set]',
    stringTag = '[object String]',
    weakMapTag = '[object WeakMap]';

var arrayBufferTag = '[object ArrayBuffer]',
    dataViewTag = '[object DataView]',
    float32Tag = '[object Float32Array]',
    float64Tag = '[object Float64Array]',
    int8Tag = '[object Int8Array]',
    int16Tag = '[object Int16Array]',
    int32Tag = '[object Int32Array]',
    uint8Tag = '[object Uint8Array]',
    uint8ClampedTag = '[object Uint8ClampedArray]',
    uint16Tag = '[object Uint16Array]',
    uint32Tag = '[object Uint32Array]';

/** Used to identify `toStringTag` values of typed arrays. */
var typedArrayTags = {};
typedArrayTags[float32Tag] = typedArrayTags[float64Tag] =
typedArrayTags[int8Tag] = typedArrayTags[int16Tag] =
typedArrayTags[int32Tag] = typedArrayTags[uint8Tag] =
typedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] =
typedArrayTags[uint32Tag] = true;
typedArrayTags[argsTag] = typedArrayTags[arrayTag] =
typedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] =
typedArrayTags[dataViewTag] = typedArrayTags[dateTag] =
typedArrayTags[errorTag] = typedArrayTags[funcTag] =
typedArrayTags[mapTag] = typedArrayTags[numberTag] =
typedArrayTags[objectTag] = typedArrayTags[regexpTag] =
typedArrayTags[setTag] = typedArrayTags[stringTag] =
typedArrayTags[weakMapTag] = false;

/**
 * The base implementation of `_.isTypedArray` without Node.js optimizations.
 *
 * @private
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.
 */
function baseIsTypedArray(value) {
  return isObjectLike(value) &&
    isLength(value.length) && !!typedArrayTags[baseGetTag(value)];
}

module.exports = baseIsTypedArray;


/***/ }),

/***/ "./node_modules/lodash/_baseIteratee.js":
/*!**********************************************!*\
  !*** ./node_modules/lodash/_baseIteratee.js ***!
  \**********************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var baseMatches = __webpack_require__(/*! ./_baseMatches */ "./node_modules/lodash/_baseMatches.js"),
    baseMatchesProperty = __webpack_require__(/*! ./_baseMatchesProperty */ "./node_modules/lodash/_baseMatchesProperty.js"),
    identity = __webpack_require__(/*! ./identity */ "./node_modules/lodash/identity.js"),
    isArray = __webpack_require__(/*! ./isArray */ "./node_modules/lodash/isArray.js"),
    property = __webpack_require__(/*! ./property */ "./node_modules/lodash/property.js");

/**
 * The base implementation of `_.iteratee`.
 *
 * @private
 * @param {*} [value=_.identity] The value to convert to an iteratee.
 * @returns {Function} Returns the iteratee.
 */
function baseIteratee(value) {
  // Don't store the `typeof` result in a variable to avoid a JIT bug in Safari 9.
  // See https://bugs.webkit.org/show_bug.cgi?id=156034 for more details.
  if (typeof value == 'function') {
    return value;
  }
  if (value == null) {
    return identity;
  }
  if (typeof value == 'object') {
    return isArray(value)
      ? baseMatchesProperty(value[0], value[1])
      : baseMatches(value);
  }
  return property(value);
}

module.exports = baseIteratee;


/***/ }),

/***/ "./node_modules/lodash/_baseKeys.js":
/*!******************************************!*\
  !*** ./node_modules/lodash/_baseKeys.js ***!
  \******************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var isPrototype = __webpack_require__(/*! ./_isPrototype */ "./node_modules/lodash/_isPrototype.js"),
    nativeKeys = __webpack_require__(/*! ./_nativeKeys */ "./node_modules/lodash/_nativeKeys.js");

/** Used for built-in method references. */
var objectProto = Object.prototype;

/** Used to check objects for own properties. */
var hasOwnProperty = objectProto.hasOwnProperty;

/**
 * The base implementation of `_.keys` which doesn't treat sparse arrays as dense.
 *
 * @private
 * @param {Object} object The object to query.
 * @returns {Array} Returns the array of property names.
 */
function baseKeys(object) {
  if (!isPrototype(object)) {
    return nativeKeys(object);
  }
  var result = [];
  for (var key in Object(object)) {
    if (hasOwnProperty.call(object, key) && key != 'constructor') {
      result.push(key);
    }
  }
  return result;
}

module.exports = baseKeys;


/***/ }),

/***/ "./node_modules/lodash/_baseKeysIn.js":
/*!********************************************!*\
  !*** ./node_modules/lodash/_baseKeysIn.js ***!
  \********************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var isObject = __webpack_require__(/*! ./isObject */ "./node_modules/lodash/isObject.js"),
    isPrototype = __webpack_require__(/*! ./_isPrototype */ "./node_modules/lodash/_isPrototype.js"),
    nativeKeysIn = __webpack_require__(/*! ./_nativeKeysIn */ "./node_modules/lodash/_nativeKeysIn.js");

/** Used for built-in method references. */
var objectProto = Object.prototype;

/** Used to check objects for own properties. */
var hasOwnProperty = objectProto.hasOwnProperty;

/**
 * The base implementation of `_.keysIn` which doesn't treat sparse arrays as dense.
 *
 * @private
 * @param {Object} object The object to query.
 * @returns {Array} Returns the array of property names.
 */
function baseKeysIn(object) {
  if (!isObject(object)) {
    return nativeKeysIn(object);
  }
  var isProto = isPrototype(object),
      result = [];

  for (var key in object) {
    if (!(key == 'constructor' && (isProto || !hasOwnProperty.call(object, key)))) {
      result.push(key);
    }
  }
  return result;
}

module.exports = baseKeysIn;


/***/ }),

/***/ "./node_modules/lodash/_baseMap.js":
/*!*****************************************!*\
  !*** ./node_modules/lodash/_baseMap.js ***!
  \*****************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var baseEach = __webpack_require__(/*! ./_baseEach */ "./node_modules/lodash/_baseEach.js"),
    isArrayLike = __webpack_require__(/*! ./isArrayLike */ "./node_modules/lodash/isArrayLike.js");

/**
 * The base implementation of `_.map` without support for iteratee shorthands.
 *
 * @private
 * @param {Array|Object} collection The collection to iterate over.
 * @param {Function} iteratee The function invoked per iteration.
 * @returns {Array} Returns the new mapped array.
 */
function baseMap(collection, iteratee) {
  var index = -1,
      result = isArrayLike(collection) ? Array(collection.length) : [];

  baseEach(collection, function(value, key, collection) {
    result[++index] = iteratee(value, key, collection);
  });
  return result;
}

module.exports = baseMap;


/***/ }),

/***/ "./node_modules/lodash/_baseMatches.js":
/*!*********************************************!*\
  !*** ./node_modules/lodash/_baseMatches.js ***!
  \*********************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var baseIsMatch = __webpack_require__(/*! ./_baseIsMatch */ "./node_modules/lodash/_baseIsMatch.js"),
    getMatchData = __webpack_require__(/*! ./_getMatchData */ "./node_modules/lodash/_getMatchData.js"),
    matchesStrictComparable = __webpack_require__(/*! ./_matchesStrictComparable */ "./node_modules/lodash/_matchesStrictComparable.js");

/**
 * The base implementation of `_.matches` which doesn't clone `source`.
 *
 * @private
 * @param {Object} source The object of property values to match.
 * @returns {Function} Returns the new spec function.
 */
function baseMatches(source) {
  var matchData = getMatchData(source);
  if (matchData.length == 1 && matchData[0][2]) {
    return matchesStrictComparable(matchData[0][0], matchData[0][1]);
  }
  return function(object) {
    return object === source || baseIsMatch(object, source, matchData);
  };
}

module.exports = baseMatches;


/***/ }),

/***/ "./node_modules/lodash/_baseMatchesProperty.js":
/*!*****************************************************!*\
  !*** ./node_modules/lodash/_baseMatchesProperty.js ***!
  \*****************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var baseIsEqual = __webpack_require__(/*! ./_baseIsEqual */ "./node_modules/lodash/_baseIsEqual.js"),
    get = __webpack_require__(/*! ./get */ "./node_modules/lodash/get.js"),
    hasIn = __webpack_require__(/*! ./hasIn */ "./node_modules/lodash/hasIn.js"),
    isKey = __webpack_require__(/*! ./_isKey */ "./node_modules/lodash/_isKey.js"),
    isStrictComparable = __webpack_require__(/*! ./_isStrictComparable */ "./node_modules/lodash/_isStrictComparable.js"),
    matchesStrictComparable = __webpack_require__(/*! ./_matchesStrictComparable */ "./node_modules/lodash/_matchesStrictComparable.js"),
    toKey = __webpack_require__(/*! ./_toKey */ "./node_modules/lodash/_toKey.js");

/** Used to compose bitmasks for value comparisons. */
var COMPARE_PARTIAL_FLAG = 1,
    COMPARE_UNORDERED_FLAG = 2;

/**
 * The base implementation of `_.matchesProperty` which doesn't clone `srcValue`.
 *
 * @private
 * @param {string} path The path of the property to get.
 * @param {*} srcValue The value to match.
 * @returns {Function} Returns the new spec function.
 */
function baseMatchesProperty(path, srcValue) {
  if (isKey(path) && isStrictComparable(srcValue)) {
    return matchesStrictComparable(toKey(path), srcValue);
  }
  return function(object) {
    var objValue = get(object, path);
    return (objValue === undefined && objValue === srcValue)
      ? hasIn(object, path)
      : baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG);
  };
}

module.exports = baseMatchesProperty;


/***/ }),

/***/ "./node_modules/lodash/_baseOrderBy.js":
/*!*********************************************!*\
  !*** ./node_modules/lodash/_baseOrderBy.js ***!
  \*********************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var arrayMap = __webpack_require__(/*! ./_arrayMap */ "./node_modules/lodash/_arrayMap.js"),
    baseIteratee = __webpack_require__(/*! ./_baseIteratee */ "./node_modules/lodash/_baseIteratee.js"),
    baseMap = __webpack_require__(/*! ./_baseMap */ "./node_modules/lodash/_baseMap.js"),
    baseSortBy = __webpack_require__(/*! ./_baseSortBy */ "./node_modules/lodash/_baseSortBy.js"),
    baseUnary = __webpack_require__(/*! ./_baseUnary */ "./node_modules/lodash/_baseUnary.js"),
    compareMultiple = __webpack_require__(/*! ./_compareMultiple */ "./node_modules/lodash/_compareMultiple.js"),
    identity = __webpack_require__(/*! ./identity */ "./node_modules/lodash/identity.js");

/**
 * The base implementation of `_.orderBy` without param guards.
 *
 * @private
 * @param {Array|Object} collection The collection to iterate over.
 * @param {Function[]|Object[]|string[]} iteratees The iteratees to sort by.
 * @param {string[]} orders The sort orders of `iteratees`.
 * @returns {Array} Returns the new sorted array.
 */
function baseOrderBy(collection, iteratees, orders) {
  var index = -1;
  iteratees = arrayMap(iteratees.length ? iteratees : [identity], baseUnary(baseIteratee));

  var result = baseMap(collection, function(value, key, collection) {
    var criteria = arrayMap(iteratees, function(iteratee) {
      return iteratee(value);
    });
    return { 'criteria': criteria, 'index': ++index, 'value': value };
  });

  return baseSortBy(result, function(object, other) {
    return compareMultiple(object, other, orders);
  });
}

module.exports = baseOrderBy;


/***/ }),

/***/ "./node_modules/lodash/_baseProperty.js":
/*!**********************************************!*\
  !*** ./node_modules/lodash/_baseProperty.js ***!
  \**********************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports) {

/**
 * The base implementation of `_.property` without support for deep paths.
 *
 * @private
 * @param {string} key The key of the property to get.
 * @returns {Function} Returns the new accessor function.
 */
function baseProperty(key) {
  return function(object) {
    return object == null ? undefined : object[key];
  };
}

module.exports = baseProperty;


/***/ }),

/***/ "./node_modules/lodash/_basePropertyDeep.js":
/*!**************************************************!*\
  !*** ./node_modules/lodash/_basePropertyDeep.js ***!
  \**************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var baseGet = __webpack_require__(/*! ./_baseGet */ "./node_modules/lodash/_baseGet.js");

/**
 * A specialized version of `baseProperty` which supports deep paths.
 *
 * @private
 * @param {Array|string} path The path of the property to get.
 * @returns {Function} Returns the new accessor function.
 */
function basePropertyDeep(path) {
  return function(object) {
    return baseGet(object, path);
  };
}

module.exports = basePropertyDeep;


/***/ }),

/***/ "./node_modules/lodash/_baseRest.js":
/*!******************************************!*\
  !*** ./node_modules/lodash/_baseRest.js ***!
  \******************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var identity = __webpack_require__(/*! ./identity */ "./node_modules/lodash/identity.js"),
    overRest = __webpack_require__(/*! ./_overRest */ "./node_modules/lodash/_overRest.js"),
    setToString = __webpack_require__(/*! ./_setToString */ "./node_modules/lodash/_setToString.js");

/**
 * The base implementation of `_.rest` which doesn't validate or coerce arguments.
 *
 * @private
 * @param {Function} func The function to apply a rest parameter to.
 * @param {number} [start=func.length-1] The start position of the rest parameter.
 * @returns {Function} Returns the new function.
 */
function baseRest(func, start) {
  return setToString(overRest(func, start, identity), func + '');
}

module.exports = baseRest;


/***/ }),

/***/ "./node_modules/lodash/_baseSetToString.js":
/*!*************************************************!*\
  !*** ./node_modules/lodash/_baseSetToString.js ***!
  \*************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var constant = __webpack_require__(/*! ./constant */ "./node_modules/lodash/constant.js"),
    defineProperty = __webpack_require__(/*! ./_defineProperty */ "./node_modules/lodash/_defineProperty.js"),
    identity = __webpack_require__(/*! ./identity */ "./node_modules/lodash/identity.js");

/**
 * The base implementation of `setToString` without support for hot loop shorting.
 *
 * @private
 * @param {Function} func The function to modify.
 * @param {Function} string The `toString` result.
 * @returns {Function} Returns `func`.
 */
var baseSetToString = !defineProperty ? identity : function(func, string) {
  return defineProperty(func, 'toString', {
    'configurable': true,
    'enumerable': false,
    'value': constant(string),
    'writable': true
  });
};

module.exports = baseSetToString;


/***/ }),

/***/ "./node_modules/lodash/_baseSortBy.js":
/*!********************************************!*\
  !*** ./node_modules/lodash/_baseSortBy.js ***!
  \********************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports) {

/**
 * The base implementation of `_.sortBy` which uses `comparer` to define the
 * sort order of `array` and replaces criteria objects with their corresponding
 * values.
 *
 * @private
 * @param {Array} array The array to sort.
 * @param {Function} comparer The function to define sort order.
 * @returns {Array} Returns `array`.
 */
function baseSortBy(array, comparer) {
  var length = array.length;

  array.sort(comparer);
  while (length--) {
    array[length] = array[length].value;
  }
  return array;
}

module.exports = baseSortBy;


/***/ }),

/***/ "./node_modules/lodash/_baseTimes.js":
/*!*******************************************!*\
  !*** ./node_modules/lodash/_baseTimes.js ***!
  \*******************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports) {

/**
 * The base implementation of `_.times` without support for iteratee shorthands
 * or max array length checks.
 *
 * @private
 * @param {number} n The number of times to invoke `iteratee`.
 * @param {Function} iteratee The function invoked per iteration.
 * @returns {Array} Returns the array of results.
 */
function baseTimes(n, iteratee) {
  var index = -1,
      result = Array(n);

  while (++index < n) {
    result[index] = iteratee(index);
  }
  return result;
}

module.exports = baseTimes;


/***/ }),

/***/ "./node_modules/lodash/_baseToString.js":
/*!**********************************************!*\
  !*** ./node_modules/lodash/_baseToString.js ***!
  \**********************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var Symbol = __webpack_require__(/*! ./_Symbol */ "./node_modules/lodash/_Symbol.js"),
    arrayMap = __webpack_require__(/*! ./_arrayMap */ "./node_modules/lodash/_arrayMap.js"),
    isArray = __webpack_require__(/*! ./isArray */ "./node_modules/lodash/isArray.js"),
    isSymbol = __webpack_require__(/*! ./isSymbol */ "./node_modules/lodash/isSymbol.js");

/** Used as references for various `Number` constants. */
var INFINITY = 1 / 0;

/** Used to convert symbols to primitives and strings. */
var symbolProto = Symbol ? Symbol.prototype : undefined,
    symbolToString = symbolProto ? symbolProto.toString : undefined;

/**
 * The base implementation of `_.toString` which doesn't convert nullish
 * values to empty strings.
 *
 * @private
 * @param {*} value The value to process.
 * @returns {string} Returns the string.
 */
function baseToString(value) {
  // Exit early for strings to avoid a performance hit in some environments.
  if (typeof value == 'string') {
    return value;
  }
  if (isArray(value)) {
    // Recursively convert values (susceptible to call stack limits).
    return arrayMap(value, baseToString) + '';
  }
  if (isSymbol(value)) {
    return symbolToString ? symbolToString.call(value) : '';
  }
  var result = (value + '');
  return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;
}

module.exports = baseToString;


/***/ }),

/***/ "./node_modules/lodash/_baseUnary.js":
/*!*******************************************!*\
  !*** ./node_modules/lodash/_baseUnary.js ***!
  \*******************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports) {

/**
 * The base implementation of `_.unary` without support for storing metadata.
 *
 * @private
 * @param {Function} func The function to cap arguments for.
 * @returns {Function} Returns the new capped function.
 */
function baseUnary(func) {
  return function(value) {
    return func(value);
  };
}

module.exports = baseUnary;


/***/ }),

/***/ "./node_modules/lodash/_baseUniq.js":
/*!******************************************!*\
  !*** ./node_modules/lodash/_baseUniq.js ***!
  \******************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var SetCache = __webpack_require__(/*! ./_SetCache */ "./node_modules/lodash/_SetCache.js"),
    arrayIncludes = __webpack_require__(/*! ./_arrayIncludes */ "./node_modules/lodash/_arrayIncludes.js"),
    arrayIncludesWith = __webpack_require__(/*! ./_arrayIncludesWith */ "./node_modules/lodash/_arrayIncludesWith.js"),
    cacheHas = __webpack_require__(/*! ./_cacheHas */ "./node_modules/lodash/_cacheHas.js"),
    createSet = __webpack_require__(/*! ./_createSet */ "./node_modules/lodash/_createSet.js"),
    setToArray = __webpack_require__(/*! ./_setToArray */ "./node_modules/lodash/_setToArray.js");

/** Used as the size to enable large array optimizations. */
var LARGE_ARRAY_SIZE = 200;

/**
 * The base implementation of `_.uniqBy` without support for iteratee shorthands.
 *
 * @private
 * @param {Array} array The array to inspect.
 * @param {Function} [iteratee] The iteratee invoked per element.
 * @param {Function} [comparator] The comparator invoked per element.
 * @returns {Array} Returns the new duplicate free array.
 */
function baseUniq(array, iteratee, comparator) {
  var index = -1,
      includes = arrayIncludes,
      length = array.length,
      isCommon = true,
      result = [],
      seen = result;

  if (comparator) {
    isCommon = false;
    includes = arrayIncludesWith;
  }
  else if (length >= LARGE_ARRAY_SIZE) {
    var set = iteratee ? null : createSet(array);
    if (set) {
      return setToArray(set);
    }
    isCommon = false;
    includes = cacheHas;
    seen = new SetCache;
  }
  else {
    seen = iteratee ? [] : result;
  }
  outer:
  while (++index < length) {
    var value = array[index],
        computed = iteratee ? iteratee(value) : value;

    value = (comparator || value !== 0) ? value : 0;
    if (isCommon && computed === computed) {
      var seenIndex = seen.length;
      while (seenIndex--) {
        if (seen[seenIndex] === computed) {
          continue outer;
        }
      }
      if (iteratee) {
        seen.push(computed);
      }
      result.push(value);
    }
    else if (!includes(seen, computed, comparator)) {
      if (seen !== result) {
        seen.push(computed);
      }
      result.push(value);
    }
  }
  return result;
}

module.exports = baseUniq;


/***/ }),

/***/ "./node_modules/lodash/_cacheHas.js":
/*!******************************************!*\
  !*** ./node_modules/lodash/_cacheHas.js ***!
  \******************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports) {

/**
 * Checks if a `cache` value for `key` exists.
 *
 * @private
 * @param {Object} cache The cache to query.
 * @param {string} key The key of the entry to check.
 * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
 */
function cacheHas(cache, key) {
  return cache.has(key);
}

module.exports = cacheHas;


/***/ }),

/***/ "./node_modules/lodash/_castPath.js":
/*!******************************************!*\
  !*** ./node_modules/lodash/_castPath.js ***!
  \******************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var isArray = __webpack_require__(/*! ./isArray */ "./node_modules/lodash/isArray.js"),
    isKey = __webpack_require__(/*! ./_isKey */ "./node_modules/lodash/_isKey.js"),
    stringToPath = __webpack_require__(/*! ./_stringToPath */ "./node_modules/lodash/_stringToPath.js"),
    toString = __webpack_require__(/*! ./toString */ "./node_modules/lodash/toString.js");

/**
 * Casts `value` to a path array if it's not one.
 *
 * @private
 * @param {*} value The value to inspect.
 * @param {Object} [object] The object to query keys on.
 * @returns {Array} Returns the cast property path array.
 */
function castPath(value, object) {
  if (isArray(value)) {
    return value;
  }
  return isKey(value, object) ? [value] : stringToPath(toString(value));
}

module.exports = castPath;


/***/ }),

/***/ "./node_modules/lodash/_cloneArrayBuffer.js":
/*!**************************************************!*\
  !*** ./node_modules/lodash/_cloneArrayBuffer.js ***!
  \**************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var Uint8Array = __webpack_require__(/*! ./_Uint8Array */ "./node_modules/lodash/_Uint8Array.js");

/**
 * Creates a clone of `arrayBuffer`.
 *
 * @private
 * @param {ArrayBuffer} arrayBuffer The array buffer to clone.
 * @returns {ArrayBuffer} Returns the cloned array buffer.
 */
function cloneArrayBuffer(arrayBuffer) {
  var result = new arrayBuffer.constructor(arrayBuffer.byteLength);
  new Uint8Array(result).set(new Uint8Array(arrayBuffer));
  return result;
}

module.exports = cloneArrayBuffer;


/***/ }),

/***/ "./node_modules/lodash/_cloneBuffer.js":
/*!*********************************************!*\
  !*** ./node_modules/lodash/_cloneBuffer.js ***!
  \*********************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(module) {var root = __webpack_require__(/*! ./_root */ "./node_modules/lodash/_root.js");

/** Detect free variable `exports`. */
var freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;

/** Detect free variable `module`. */
var freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;

/** Detect the popular CommonJS extension `module.exports`. */
var moduleExports = freeModule && freeModule.exports === freeExports;

/** Built-in value references. */
var Buffer = moduleExports ? root.Buffer : undefined,
    allocUnsafe = Buffer ? Buffer.allocUnsafe : undefined;

/**
 * Creates a clone of  `buffer`.
 *
 * @private
 * @param {Buffer} buffer The buffer to clone.
 * @param {boolean} [isDeep] Specify a deep clone.
 * @returns {Buffer} Returns the cloned buffer.
 */
function cloneBuffer(buffer, isDeep) {
  if (isDeep) {
    return buffer.slice();
  }
  var length = buffer.length,
      result = allocUnsafe ? allocUnsafe(length) : new buffer.constructor(length);

  buffer.copy(result);
  return result;
}

module.exports = cloneBuffer;

/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(/*! ./../webpack/buildin/module.js */ "./node_modules/webpack/buildin/module.js")(module)))

/***/ }),

/***/ "./node_modules/lodash/_cloneDataView.js":
/*!***********************************************!*\
  !*** ./node_modules/lodash/_cloneDataView.js ***!
  \***********************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var cloneArrayBuffer = __webpack_require__(/*! ./_cloneArrayBuffer */ "./node_modules/lodash/_cloneArrayBuffer.js");

/**
 * Creates a clone of `dataView`.
 *
 * @private
 * @param {Object} dataView The data view to clone.
 * @param {boolean} [isDeep] Specify a deep clone.
 * @returns {Object} Returns the cloned data view.
 */
function cloneDataView(dataView, isDeep) {
  var buffer = isDeep ? cloneArrayBuffer(dataView.buffer) : dataView.buffer;
  return new dataView.constructor(buffer, dataView.byteOffset, dataView.byteLength);
}

module.exports = cloneDataView;


/***/ }),

/***/ "./node_modules/lodash/_cloneRegExp.js":
/*!*********************************************!*\
  !*** ./node_modules/lodash/_cloneRegExp.js ***!
  \*********************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports) {

/** Used to match `RegExp` flags from their coerced string values. */
var reFlags = /\w*$/;

/**
 * Creates a clone of `regexp`.
 *
 * @private
 * @param {Object} regexp The regexp to clone.
 * @returns {Object} Returns the cloned regexp.
 */
function cloneRegExp(regexp) {
  var result = new regexp.constructor(regexp.source, reFlags.exec(regexp));
  result.lastIndex = regexp.lastIndex;
  return result;
}

module.exports = cloneRegExp;


/***/ }),

/***/ "./node_modules/lodash/_cloneSymbol.js":
/*!*********************************************!*\
  !*** ./node_modules/lodash/_cloneSymbol.js ***!
  \*********************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var Symbol = __webpack_require__(/*! ./_Symbol */ "./node_modules/lodash/_Symbol.js");

/** Used to convert symbols to primitives and strings. */
var symbolProto = Symbol ? Symbol.prototype : undefined,
    symbolValueOf = symbolProto ? symbolProto.valueOf : undefined;

/**
 * Creates a clone of the `symbol` object.
 *
 * @private
 * @param {Object} symbol The symbol object to clone.
 * @returns {Object} Returns the cloned symbol object.
 */
function cloneSymbol(symbol) {
  return symbolValueOf ? Object(symbolValueOf.call(symbol)) : {};
}

module.exports = cloneSymbol;


/***/ }),

/***/ "./node_modules/lodash/_cloneTypedArray.js":
/*!*************************************************!*\
  !*** ./node_modules/lodash/_cloneTypedArray.js ***!
  \*************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var cloneArrayBuffer = __webpack_require__(/*! ./_cloneArrayBuffer */ "./node_modules/lodash/_cloneArrayBuffer.js");

/**
 * Creates a clone of `typedArray`.
 *
 * @private
 * @param {Object} typedArray The typed array to clone.
 * @param {boolean} [isDeep] Specify a deep clone.
 * @returns {Object} Returns the cloned typed array.
 */
function cloneTypedArray(typedArray, isDeep) {
  var buffer = isDeep ? cloneArrayBuffer(typedArray.buffer) : typedArray.buffer;
  return new typedArray.constructor(buffer, typedArray.byteOffset, typedArray.length);
}

module.exports = cloneTypedArray;


/***/ }),

/***/ "./node_modules/lodash/_compareAscending.js":
/*!**************************************************!*\
  !*** ./node_modules/lodash/_compareAscending.js ***!
  \**************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var isSymbol = __webpack_require__(/*! ./isSymbol */ "./node_modules/lodash/isSymbol.js");

/**
 * Compares values to sort them in ascending order.
 *
 * @private
 * @param {*} value The value to compare.
 * @param {*} other The other value to compare.
 * @returns {number} Returns the sort order indicator for `value`.
 */
function compareAscending(value, other) {
  if (value !== other) {
    var valIsDefined = value !== undefined,
        valIsNull = value === null,
        valIsReflexive = value === value,
        valIsSymbol = isSymbol(value);

    var othIsDefined = other !== undefined,
        othIsNull = other === null,
        othIsReflexive = other === other,
        othIsSymbol = isSymbol(other);

    if ((!othIsNull && !othIsSymbol && !valIsSymbol && value > other) ||
        (valIsSymbol && othIsDefined && othIsReflexive && !othIsNull && !othIsSymbol) ||
        (valIsNull && othIsDefined && othIsReflexive) ||
        (!valIsDefined && othIsReflexive) ||
        !valIsReflexive) {
      return 1;
    }
    if ((!valIsNull && !valIsSymbol && !othIsSymbol && value < other) ||
        (othIsSymbol && valIsDefined && valIsReflexive && !valIsNull && !valIsSymbol) ||
        (othIsNull && valIsDefined && valIsReflexive) ||
        (!othIsDefined && valIsReflexive) ||
        !othIsReflexive) {
      return -1;
    }
  }
  return 0;
}

module.exports = compareAscending;


/***/ }),

/***/ "./node_modules/lodash/_compareMultiple.js":
/*!*************************************************!*\
  !*** ./node_modules/lodash/_compareMultiple.js ***!
  \*************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var compareAscending = __webpack_require__(/*! ./_compareAscending */ "./node_modules/lodash/_compareAscending.js");

/**
 * Used by `_.orderBy` to compare multiple properties of a value to another
 * and stable sort them.
 *
 * If `orders` is unspecified, all values are sorted in ascending order. Otherwise,
 * specify an order of "desc" for descending or "asc" for ascending sort order
 * of corresponding values.
 *
 * @private
 * @param {Object} object The object to compare.
 * @param {Object} other The other object to compare.
 * @param {boolean[]|string[]} orders The order to sort by for each property.
 * @returns {number} Returns the sort order indicator for `object`.
 */
function compareMultiple(object, other, orders) {
  var index = -1,
      objCriteria = object.criteria,
      othCriteria = other.criteria,
      length = objCriteria.length,
      ordersLength = orders.length;

  while (++index < length) {
    var result = compareAscending(objCriteria[index], othCriteria[index]);
    if (result) {
      if (index >= ordersLength) {
        return result;
      }
      var order = orders[index];
      return result * (order == 'desc' ? -1 : 1);
    }
  }
  // Fixes an `Array#sort` bug in the JS engine embedded in Adobe applications
  // that causes it, under certain circumstances, to provide the same value for
  // `object` and `other`. See https://github.com/jashkenas/underscore/pull/1247
  // for more details.
  //
  // This also ensures a stable sort in V8 and other engines.
  // See https://bugs.chromium.org/p/v8/issues/detail?id=90 for more details.
  return object.index - other.index;
}

module.exports = compareMultiple;


/***/ }),

/***/ "./node_modules/lodash/_copyArray.js":
/*!*******************************************!*\
  !*** ./node_modules/lodash/_copyArray.js ***!
  \*******************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports) {

/**
 * Copies the values of `source` to `array`.
 *
 * @private
 * @param {Array} source The array to copy values from.
 * @param {Array} [array=[]] The array to copy values to.
 * @returns {Array} Returns `array`.
 */
function copyArray(source, array) {
  var index = -1,
      length = source.length;

  array || (array = Array(length));
  while (++index < length) {
    array[index] = source[index];
  }
  return array;
}

module.exports = copyArray;


/***/ }),

/***/ "./node_modules/lodash/_copyObject.js":
/*!********************************************!*\
  !*** ./node_modules/lodash/_copyObject.js ***!
  \********************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var assignValue = __webpack_require__(/*! ./_assignValue */ "./node_modules/lodash/_assignValue.js"),
    baseAssignValue = __webpack_require__(/*! ./_baseAssignValue */ "./node_modules/lodash/_baseAssignValue.js");

/**
 * Copies properties of `source` to `object`.
 *
 * @private
 * @param {Object} source The object to copy properties from.
 * @param {Array} props The property identifiers to copy.
 * @param {Object} [object={}] The object to copy properties to.
 * @param {Function} [customizer] The function to customize copied values.
 * @returns {Object} Returns `object`.
 */
function copyObject(source, props, object, customizer) {
  var isNew = !object;
  object || (object = {});

  var index = -1,
      length = props.length;

  while (++index < length) {
    var key = props[index];

    var newValue = customizer
      ? customizer(object[key], source[key], key, object, source)
      : undefined;

    if (newValue === undefined) {
      newValue = source[key];
    }
    if (isNew) {
      baseAssignValue(object, key, newValue);
    } else {
      assignValue(object, key, newValue);
    }
  }
  return object;
}

module.exports = copyObject;


/***/ }),

/***/ "./node_modules/lodash/_copySymbols.js":
/*!*********************************************!*\
  !*** ./node_modules/lodash/_copySymbols.js ***!
  \*********************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var copyObject = __webpack_require__(/*! ./_copyObject */ "./node_modules/lodash/_copyObject.js"),
    getSymbols = __webpack_require__(/*! ./_getSymbols */ "./node_modules/lodash/_getSymbols.js");

/**
 * Copies own symbols of `source` to `object`.
 *
 * @private
 * @param {Object} source The object to copy symbols from.
 * @param {Object} [object={}] The object to copy symbols to.
 * @returns {Object} Returns `object`.
 */
function copySymbols(source, object) {
  return copyObject(source, getSymbols(source), object);
}

module.exports = copySymbols;


/***/ }),

/***/ "./node_modules/lodash/_copySymbolsIn.js":
/*!***********************************************!*\
  !*** ./node_modules/lodash/_copySymbolsIn.js ***!
  \***********************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var copyObject = __webpack_require__(/*! ./_copyObject */ "./node_modules/lodash/_copyObject.js"),
    getSymbolsIn = __webpack_require__(/*! ./_getSymbolsIn */ "./node_modules/lodash/_getSymbolsIn.js");

/**
 * Copies own and inherited symbols of `source` to `object`.
 *
 * @private
 * @param {Object} source The object to copy symbols from.
 * @param {Object} [object={}] The object to copy symbols to.
 * @returns {Object} Returns `object`.
 */
function copySymbolsIn(source, object) {
  return copyObject(source, getSymbolsIn(source), object);
}

module.exports = copySymbolsIn;


/***/ }),

/***/ "./node_modules/lodash/_coreJsData.js":
/*!********************************************!*\
  !*** ./node_modules/lodash/_coreJsData.js ***!
  \********************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var root = __webpack_require__(/*! ./_root */ "./node_modules/lodash/_root.js");

/** Used to detect overreaching core-js shims. */
var coreJsData = root['__core-js_shared__'];

module.exports = coreJsData;


/***/ }),

/***/ "./node_modules/lodash/_createBaseEach.js":
/*!************************************************!*\
  !*** ./node_modules/lodash/_createBaseEach.js ***!
  \************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var isArrayLike = __webpack_require__(/*! ./isArrayLike */ "./node_modules/lodash/isArrayLike.js");

/**
 * Creates a `baseEach` or `baseEachRight` function.
 *
 * @private
 * @param {Function} eachFunc The function to iterate over a collection.
 * @param {boolean} [fromRight] Specify iterating from right to left.
 * @returns {Function} Returns the new base function.
 */
function createBaseEach(eachFunc, fromRight) {
  return function(collection, iteratee) {
    if (collection == null) {
      return collection;
    }
    if (!isArrayLike(collection)) {
      return eachFunc(collection, iteratee);
    }
    var length = collection.length,
        index = fromRight ? length : -1,
        iterable = Object(collection);

    while ((fromRight ? index-- : ++index < length)) {
      if (iteratee(iterable[index], index, iterable) === false) {
        break;
      }
    }
    return collection;
  };
}

module.exports = createBaseEach;


/***/ }),

/***/ "./node_modules/lodash/_createBaseFor.js":
/*!***********************************************!*\
  !*** ./node_modules/lodash/_createBaseFor.js ***!
  \***********************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports) {

/**
 * Creates a base function for methods like `_.forIn` and `_.forOwn`.
 *
 * @private
 * @param {boolean} [fromRight] Specify iterating from right to left.
 * @returns {Function} Returns the new base function.
 */
function createBaseFor(fromRight) {
  return function(object, iteratee, keysFunc) {
    var index = -1,
        iterable = Object(object),
        props = keysFunc(object),
        length = props.length;

    while (length--) {
      var key = props[fromRight ? length : ++index];
      if (iteratee(iterable[key], key, iterable) === false) {
        break;
      }
    }
    return object;
  };
}

module.exports = createBaseFor;


/***/ }),

/***/ "./node_modules/lodash/_createSet.js":
/*!*******************************************!*\
  !*** ./node_modules/lodash/_createSet.js ***!
  \*******************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var Set = __webpack_require__(/*! ./_Set */ "./node_modules/lodash/_Set.js"),
    noop = __webpack_require__(/*! ./noop */ "./node_modules/lodash/noop.js"),
    setToArray = __webpack_require__(/*! ./_setToArray */ "./node_modules/lodash/_setToArray.js");

/** Used as references for various `Number` constants. */
var INFINITY = 1 / 0;

/**
 * Creates a set object of `values`.
 *
 * @private
 * @param {Array} values The values to add to the set.
 * @returns {Object} Returns the new set.
 */
var createSet = !(Set && (1 / setToArray(new Set([,-0]))[1]) == INFINITY) ? noop : function(values) {
  return new Set(values);
};

module.exports = createSet;


/***/ }),

/***/ "./node_modules/lodash/_defineProperty.js":
/*!************************************************!*\
  !*** ./node_modules/lodash/_defineProperty.js ***!
  \************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var getNative = __webpack_require__(/*! ./_getNative */ "./node_modules/lodash/_getNative.js");

var defineProperty = (function() {
  try {
    var func = getNative(Object, 'defineProperty');
    func({}, '', {});
    return func;
  } catch (e) {}
}());

module.exports = defineProperty;


/***/ }),

/***/ "./node_modules/lodash/_equalArrays.js":
/*!*********************************************!*\
  !*** ./node_modules/lodash/_equalArrays.js ***!
  \*********************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var SetCache = __webpack_require__(/*! ./_SetCache */ "./node_modules/lodash/_SetCache.js"),
    arraySome = __webpack_require__(/*! ./_arraySome */ "./node_modules/lodash/_arraySome.js"),
    cacheHas = __webpack_require__(/*! ./_cacheHas */ "./node_modules/lodash/_cacheHas.js");

/** Used to compose bitmasks for value comparisons. */
var COMPARE_PARTIAL_FLAG = 1,
    COMPARE_UNORDERED_FLAG = 2;

/**
 * A specialized version of `baseIsEqualDeep` for arrays with support for
 * partial deep comparisons.
 *
 * @private
 * @param {Array} array The array to compare.
 * @param {Array} other The other array to compare.
 * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.
 * @param {Function} customizer The function to customize comparisons.
 * @param {Function} equalFunc The function to determine equivalents of values.
 * @param {Object} stack Tracks traversed `array` and `other` objects.
 * @returns {boolean} Returns `true` if the arrays are equivalent, else `false`.
 */
function equalArrays(array, other, bitmask, customizer, equalFunc, stack) {
  var isPartial = bitmask & COMPARE_PARTIAL_FLAG,
      arrLength = array.length,
      othLength = other.length;

  if (arrLength != othLength && !(isPartial && othLength > arrLength)) {
    return false;
  }
  // Assume cyclic values are equal.
  var stacked = stack.get(array);
  if (stacked && stack.get(other)) {
    return stacked == other;
  }
  var index = -1,
      result = true,
      seen = (bitmask & COMPARE_UNORDERED_FLAG) ? new SetCache : undefined;

  stack.set(array, other);
  stack.set(other, array);

  // Ignore non-index properties.
  while (++index < arrLength) {
    var arrValue = array[index],
        othValue = other[index];

    if (customizer) {
      var compared = isPartial
        ? customizer(othValue, arrValue, index, other, array, stack)
        : customizer(arrValue, othValue, index, array, other, stack);
    }
    if (compared !== undefined) {
      if (compared) {
        continue;
      }
      result = false;
      break;
    }
    // Recursively compare arrays (susceptible to call stack limits).
    if (seen) {
      if (!arraySome(other, function(othValue, othIndex) {
            if (!cacheHas(seen, othIndex) &&
                (arrValue === othValue || equalFunc(arrValue, othValue, bitmask, customizer, stack))) {
              return seen.push(othIndex);
            }
          })) {
        result = false;
        break;
      }
    } else if (!(
          arrValue === othValue ||
            equalFunc(arrValue, othValue, bitmask, customizer, stack)
        )) {
      result = false;
      break;
    }
  }
  stack['delete'](array);
  stack['delete'](other);
  return result;
}

module.exports = equalArrays;


/***/ }),

/***/ "./node_modules/lodash/_equalByTag.js":
/*!********************************************!*\
  !*** ./node_modules/lodash/_equalByTag.js ***!
  \********************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var Symbol = __webpack_require__(/*! ./_Symbol */ "./node_modules/lodash/_Symbol.js"),
    Uint8Array = __webpack_require__(/*! ./_Uint8Array */ "./node_modules/lodash/_Uint8Array.js"),
    eq = __webpack_require__(/*! ./eq */ "./node_modules/lodash/eq.js"),
    equalArrays = __webpack_require__(/*! ./_equalArrays */ "./node_modules/lodash/_equalArrays.js"),
    mapToArray = __webpack_require__(/*! ./_mapToArray */ "./node_modules/lodash/_mapToArray.js"),
    setToArray = __webpack_require__(/*! ./_setToArray */ "./node_modules/lodash/_setToArray.js");

/** Used to compose bitmasks for value comparisons. */
var COMPARE_PARTIAL_FLAG = 1,
    COMPARE_UNORDERED_FLAG = 2;

/** `Object#toString` result references. */
var boolTag = '[object Boolean]',
    dateTag = '[object Date]',
    errorTag = '[object Error]',
    mapTag = '[object Map]',
    numberTag = '[object Number]',
    regexpTag = '[object RegExp]',
    setTag = '[object Set]',
    stringTag = '[object String]',
    symbolTag = '[object Symbol]';

var arrayBufferTag = '[object ArrayBuffer]',
    dataViewTag = '[object DataView]';

/** Used to convert symbols to primitives and strings. */
var symbolProto = Symbol ? Symbol.prototype : undefined,
    symbolValueOf = symbolProto ? symbolProto.valueOf : undefined;

/**
 * A specialized version of `baseIsEqualDeep` for comparing objects of
 * the same `toStringTag`.
 *
 * **Note:** This function only supports comparing values with tags of
 * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.
 *
 * @private
 * @param {Object} object The object to compare.
 * @param {Object} other The other object to compare.
 * @param {string} tag The `toStringTag` of the objects to compare.
 * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.
 * @param {Function} customizer The function to customize comparisons.
 * @param {Function} equalFunc The function to determine equivalents of values.
 * @param {Object} stack Tracks traversed `object` and `other` objects.
 * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.
 */
function equalByTag(object, other, tag, bitmask, customizer, equalFunc, stack) {
  switch (tag) {
    case dataViewTag:
      if ((object.byteLength != other.byteLength) ||
          (object.byteOffset != other.byteOffset)) {
        return false;
      }
      object = object.buffer;
      other = other.buffer;

    case arrayBufferTag:
      if ((object.byteLength != other.byteLength) ||
          !equalFunc(new Uint8Array(object), new Uint8Array(other))) {
        return false;
      }
      return true;

    case boolTag:
    case dateTag:
    case numberTag:
      // Coerce booleans to `1` or `0` and dates to milliseconds.
      // Invalid dates are coerced to `NaN`.
      return eq(+object, +other);

    case errorTag:
      return object.name == other.name && object.message == other.message;

    case regexpTag:
    case stringTag:
      // Coerce regexes to strings and treat strings, primitives and objects,
      // as equal. See http://www.ecma-international.org/ecma-262/7.0/#sec-regexp.prototype.tostring
      // for more details.
      return object == (other + '');

    case mapTag:
      var convert = mapToArray;

    case setTag:
      var isPartial = bitmask & COMPARE_PARTIAL_FLAG;
      convert || (convert = setToArray);

      if (object.size != other.size && !isPartial) {
        return false;
      }
      // Assume cyclic values are equal.
      var stacked = stack.get(object);
      if (stacked) {
        return stacked == other;
      }
      bitmask |= COMPARE_UNORDERED_FLAG;

      // Recursively compare objects (susceptible to call stack limits).
      stack.set(object, other);
      var result = equalArrays(convert(object), convert(other), bitmask, customizer, equalFunc, stack);
      stack['delete'](object);
      return result;

    case symbolTag:
      if (symbolValueOf) {
        return symbolValueOf.call(object) == symbolValueOf.call(other);
      }
  }
  return false;
}

module.exports = equalByTag;


/***/ }),

/***/ "./node_modules/lodash/_equalObjects.js":
/*!**********************************************!*\
  !*** ./node_modules/lodash/_equalObjects.js ***!
  \**********************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var getAllKeys = __webpack_require__(/*! ./_getAllKeys */ "./node_modules/lodash/_getAllKeys.js");

/** Used to compose bitmasks for value comparisons. */
var COMPARE_PARTIAL_FLAG = 1;

/** Used for built-in method references. */
var objectProto = Object.prototype;

/** Used to check objects for own properties. */
var hasOwnProperty = objectProto.hasOwnProperty;

/**
 * A specialized version of `baseIsEqualDeep` for objects with support for
 * partial deep comparisons.
 *
 * @private
 * @param {Object} object The object to compare.
 * @param {Object} other The other object to compare.
 * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.
 * @param {Function} customizer The function to customize comparisons.
 * @param {Function} equalFunc The function to determine equivalents of values.
 * @param {Object} stack Tracks traversed `object` and `other` objects.
 * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.
 */
function equalObjects(object, other, bitmask, customizer, equalFunc, stack) {
  var isPartial = bitmask & COMPARE_PARTIAL_FLAG,
      objProps = getAllKeys(object),
      objLength = objProps.length,
      othProps = getAllKeys(other),
      othLength = othProps.length;

  if (objLength != othLength && !isPartial) {
    return false;
  }
  var index = objLength;
  while (index--) {
    var key = objProps[index];
    if (!(isPartial ? key in other : hasOwnProperty.call(other, key))) {
      return false;
    }
  }
  // Assume cyclic values are equal.
  var stacked = stack.get(object);
  if (stacked && stack.get(other)) {
    return stacked == other;
  }
  var result = true;
  stack.set(object, other);
  stack.set(other, object);

  var skipCtor = isPartial;
  while (++index < objLength) {
    key = objProps[index];
    var objValue = object[key],
        othValue = other[key];

    if (customizer) {
      var compared = isPartial
        ? customizer(othValue, objValue, key, other, object, stack)
        : customizer(objValue, othValue, key, object, other, stack);
    }
    // Recursively compare objects (susceptible to call stack limits).
    if (!(compared === undefined
          ? (objValue === othValue || equalFunc(objValue, othValue, bitmask, customizer, stack))
          : compared
        )) {
      result = false;
      break;
    }
    skipCtor || (skipCtor = key == 'constructor');
  }
  if (result && !skipCtor) {
    var objCtor = object.constructor,
        othCtor = other.constructor;

    // Non `Object` object instances with different constructors are not equal.
    if (objCtor != othCtor &&
        ('constructor' in object && 'constructor' in other) &&
        !(typeof objCtor == 'function' && objCtor instanceof objCtor &&
          typeof othCtor == 'function' && othCtor instanceof othCtor)) {
      result = false;
    }
  }
  stack['delete'](object);
  stack['delete'](other);
  return result;
}

module.exports = equalObjects;


/***/ }),

/***/ "./node_modules/lodash/_freeGlobal.js":
/*!********************************************!*\
  !*** ./node_modules/lodash/_freeGlobal.js ***!
  \********************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(global) {/** Detect free variable `global` from Node.js. */
var freeGlobal = typeof global == 'object' && global && global.Object === Object && global;

module.exports = freeGlobal;

/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(/*! ./../webpack/buildin/global.js */ "./node_modules/webpack/buildin/global.js")))

/***/ }),

/***/ "./node_modules/lodash/_getAllKeys.js":
/*!********************************************!*\
  !*** ./node_modules/lodash/_getAllKeys.js ***!
  \********************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var baseGetAllKeys = __webpack_require__(/*! ./_baseGetAllKeys */ "./node_modules/lodash/_baseGetAllKeys.js"),
    getSymbols = __webpack_require__(/*! ./_getSymbols */ "./node_modules/lodash/_getSymbols.js"),
    keys = __webpack_require__(/*! ./keys */ "./node_modules/lodash/keys.js");

/**
 * Creates an array of own enumerable property names and symbols of `object`.
 *
 * @private
 * @param {Object} object The object to query.
 * @returns {Array} Returns the array of property names and symbols.
 */
function getAllKeys(object) {
  return baseGetAllKeys(object, keys, getSymbols);
}

module.exports = getAllKeys;


/***/ }),

/***/ "./node_modules/lodash/_getAllKeysIn.js":
/*!**********************************************!*\
  !*** ./node_modules/lodash/_getAllKeysIn.js ***!
  \**********************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var baseGetAllKeys = __webpack_require__(/*! ./_baseGetAllKeys */ "./node_modules/lodash/_baseGetAllKeys.js"),
    getSymbolsIn = __webpack_require__(/*! ./_getSymbolsIn */ "./node_modules/lodash/_getSymbolsIn.js"),
    keysIn = __webpack_require__(/*! ./keysIn */ "./node_modules/lodash/keysIn.js");

/**
 * Creates an array of own and inherited enumerable property names and
 * symbols of `object`.
 *
 * @private
 * @param {Object} object The object to query.
 * @returns {Array} Returns the array of property names and symbols.
 */
function getAllKeysIn(object) {
  return baseGetAllKeys(object, keysIn, getSymbolsIn);
}

module.exports = getAllKeysIn;


/***/ }),

/***/ "./node_modules/lodash/_getMapData.js":
/*!********************************************!*\
  !*** ./node_modules/lodash/_getMapData.js ***!
  \********************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var isKeyable = __webpack_require__(/*! ./_isKeyable */ "./node_modules/lodash/_isKeyable.js");

/**
 * Gets the data for `map`.
 *
 * @private
 * @param {Object} map The map to query.
 * @param {string} key The reference key.
 * @returns {*} Returns the map data.
 */
function getMapData(map, key) {
  var data = map.__data__;
  return isKeyable(key)
    ? data[typeof key == 'string' ? 'string' : 'hash']
    : data.map;
}

module.exports = getMapData;


/***/ }),

/***/ "./node_modules/lodash/_getMatchData.js":
/*!**********************************************!*\
  !*** ./node_modules/lodash/_getMatchData.js ***!
  \**********************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var isStrictComparable = __webpack_require__(/*! ./_isStrictComparable */ "./node_modules/lodash/_isStrictComparable.js"),
    keys = __webpack_require__(/*! ./keys */ "./node_modules/lodash/keys.js");

/**
 * Gets the property names, values, and compare flags of `object`.
 *
 * @private
 * @param {Object} object The object to query.
 * @returns {Array} Returns the match data of `object`.
 */
function getMatchData(object) {
  var result = keys(object),
      length = result.length;

  while (length--) {
    var key = result[length],
        value = object[key];

    result[length] = [key, value, isStrictComparable(value)];
  }
  return result;
}

module.exports = getMatchData;


/***/ }),

/***/ "./node_modules/lodash/_getNative.js":
/*!*******************************************!*\
  !*** ./node_modules/lodash/_getNative.js ***!
  \*******************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var baseIsNative = __webpack_require__(/*! ./_baseIsNative */ "./node_modules/lodash/_baseIsNative.js"),
    getValue = __webpack_require__(/*! ./_getValue */ "./node_modules/lodash/_getValue.js");

/**
 * Gets the native function at `key` of `object`.
 *
 * @private
 * @param {Object} object The object to query.
 * @param {string} key The key of the method to get.
 * @returns {*} Returns the function if it's native, else `undefined`.
 */
function getNative(object, key) {
  var value = getValue(object, key);
  return baseIsNative(value) ? value : undefined;
}

module.exports = getNative;


/***/ }),

/***/ "./node_modules/lodash/_getPrototype.js":
/*!**********************************************!*\
  !*** ./node_modules/lodash/_getPrototype.js ***!
  \**********************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var overArg = __webpack_require__(/*! ./_overArg */ "./node_modules/lodash/_overArg.js");

/** Built-in value references. */
var getPrototype = overArg(Object.getPrototypeOf, Object);

module.exports = getPrototype;


/***/ }),

/***/ "./node_modules/lodash/_getRawTag.js":
/*!*******************************************!*\
  !*** ./node_modules/lodash/_getRawTag.js ***!
  \*******************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var Symbol = __webpack_require__(/*! ./_Symbol */ "./node_modules/lodash/_Symbol.js");

/** Used for built-in method references. */
var objectProto = Object.prototype;

/** Used to check objects for own properties. */
var hasOwnProperty = objectProto.hasOwnProperty;

/**
 * Used to resolve the
 * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)
 * of values.
 */
var nativeObjectToString = objectProto.toString;

/** Built-in value references. */
var symToStringTag = Symbol ? Symbol.toStringTag : undefined;

/**
 * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.
 *
 * @private
 * @param {*} value The value to query.
 * @returns {string} Returns the raw `toStringTag`.
 */
function getRawTag(value) {
  var isOwn = hasOwnProperty.call(value, symToStringTag),
      tag = value[symToStringTag];

  try {
    value[symToStringTag] = undefined;
    var unmasked = true;
  } catch (e) {}

  var result = nativeObjectToString.call(value);
  if (unmasked) {
    if (isOwn) {
      value[symToStringTag] = tag;
    } else {
      delete value[symToStringTag];
    }
  }
  return result;
}

module.exports = getRawTag;


/***/ }),

/***/ "./node_modules/lodash/_getSymbols.js":
/*!********************************************!*\
  !*** ./node_modules/lodash/_getSymbols.js ***!
  \********************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var arrayFilter = __webpack_require__(/*! ./_arrayFilter */ "./node_modules/lodash/_arrayFilter.js"),
    stubArray = __webpack_require__(/*! ./stubArray */ "./node_modules/lodash/stubArray.js");

/** Used for built-in method references. */
var objectProto = Object.prototype;

/** Built-in value references. */
var propertyIsEnumerable = objectProto.propertyIsEnumerable;

/* Built-in method references for those with the same name as other `lodash` methods. */
var nativeGetSymbols = Object.getOwnPropertySymbols;

/**
 * Creates an array of the own enumerable symbols of `object`.
 *
 * @private
 * @param {Object} object The object to query.
 * @returns {Array} Returns the array of symbols.
 */
var getSymbols = !nativeGetSymbols ? stubArray : function(object) {
  if (object == null) {
    return [];
  }
  object = Object(object);
  return arrayFilter(nativeGetSymbols(object), function(symbol) {
    return propertyIsEnumerable.call(object, symbol);
  });
};

module.exports = getSymbols;


/***/ }),

/***/ "./node_modules/lodash/_getSymbolsIn.js":
/*!**********************************************!*\
  !*** ./node_modules/lodash/_getSymbolsIn.js ***!
  \**********************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var arrayPush = __webpack_require__(/*! ./_arrayPush */ "./node_modules/lodash/_arrayPush.js"),
    getPrototype = __webpack_require__(/*! ./_getPrototype */ "./node_modules/lodash/_getPrototype.js"),
    getSymbols = __webpack_require__(/*! ./_getSymbols */ "./node_modules/lodash/_getSymbols.js"),
    stubArray = __webpack_require__(/*! ./stubArray */ "./node_modules/lodash/stubArray.js");

/* Built-in method references for those with the same name as other `lodash` methods. */
var nativeGetSymbols = Object.getOwnPropertySymbols;

/**
 * Creates an array of the own and inherited enumerable symbols of `object`.
 *
 * @private
 * @param {Object} object The object to query.
 * @returns {Array} Returns the array of symbols.
 */
var getSymbolsIn = !nativeGetSymbols ? stubArray : function(object) {
  var result = [];
  while (object) {
    arrayPush(result, getSymbols(object));
    object = getPrototype(object);
  }
  return result;
};

module.exports = getSymbolsIn;


/***/ }),

/***/ "./node_modules/lodash/_getTag.js":
/*!****************************************!*\
  !*** ./node_modules/lodash/_getTag.js ***!
  \****************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var DataView = __webpack_require__(/*! ./_DataView */ "./node_modules/lodash/_DataView.js"),
    Map = __webpack_require__(/*! ./_Map */ "./node_modules/lodash/_Map.js"),
    Promise = __webpack_require__(/*! ./_Promise */ "./node_modules/lodash/_Promise.js"),
    Set = __webpack_require__(/*! ./_Set */ "./node_modules/lodash/_Set.js"),
    WeakMap = __webpack_require__(/*! ./_WeakMap */ "./node_modules/lodash/_WeakMap.js"),
    baseGetTag = __webpack_require__(/*! ./_baseGetTag */ "./node_modules/lodash/_baseGetTag.js"),
    toSource = __webpack_require__(/*! ./_toSource */ "./node_modules/lodash/_toSource.js");

/** `Object#toString` result references. */
var mapTag = '[object Map]',
    objectTag = '[object Object]',
    promiseTag = '[object Promise]',
    setTag = '[object Set]',
    weakMapTag = '[object WeakMap]';

var dataViewTag = '[object DataView]';

/** Used to detect maps, sets, and weakmaps. */
var dataViewCtorString = toSource(DataView),
    mapCtorString = toSource(Map),
    promiseCtorString = toSource(Promise),
    setCtorString = toSource(Set),
    weakMapCtorString = toSource(WeakMap);

/**
 * Gets the `toStringTag` of `value`.
 *
 * @private
 * @param {*} value The value to query.
 * @returns {string} Returns the `toStringTag`.
 */
var getTag = baseGetTag;

// Fallback for data views, maps, sets, and weak maps in IE 11 and promises in Node.js < 6.
if ((DataView && getTag(new DataView(new ArrayBuffer(1))) != dataViewTag) ||
    (Map && getTag(new Map) != mapTag) ||
    (Promise && getTag(Promise.resolve()) != promiseTag) ||
    (Set && getTag(new Set) != setTag) ||
    (WeakMap && getTag(new WeakMap) != weakMapTag)) {
  getTag = function(value) {
    var result = baseGetTag(value),
        Ctor = result == objectTag ? value.constructor : undefined,
        ctorString = Ctor ? toSource(Ctor) : '';

    if (ctorString) {
      switch (ctorString) {
        case dataViewCtorString: return dataViewTag;
        case mapCtorString: return mapTag;
        case promiseCtorString: return promiseTag;
        case setCtorString: return setTag;
        case weakMapCtorString: return weakMapTag;
      }
    }
    return result;
  };
}

module.exports = getTag;


/***/ }),

/***/ "./node_modules/lodash/_getValue.js":
/*!******************************************!*\
  !*** ./node_modules/lodash/_getValue.js ***!
  \******************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports) {

/**
 * Gets the value at `key` of `object`.
 *
 * @private
 * @param {Object} [object] The object to query.
 * @param {string} key The key of the property to get.
 * @returns {*} Returns the property value.
 */
function getValue(object, key) {
  return object == null ? undefined : object[key];
}

module.exports = getValue;


/***/ }),

/***/ "./node_modules/lodash/_hasPath.js":
/*!*****************************************!*\
  !*** ./node_modules/lodash/_hasPath.js ***!
  \*****************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var castPath = __webpack_require__(/*! ./_castPath */ "./node_modules/lodash/_castPath.js"),
    isArguments = __webpack_require__(/*! ./isArguments */ "./node_modules/lodash/isArguments.js"),
    isArray = __webpack_require__(/*! ./isArray */ "./node_modules/lodash/isArray.js"),
    isIndex = __webpack_require__(/*! ./_isIndex */ "./node_modules/lodash/_isIndex.js"),
    isLength = __webpack_require__(/*! ./isLength */ "./node_modules/lodash/isLength.js"),
    toKey = __webpack_require__(/*! ./_toKey */ "./node_modules/lodash/_toKey.js");

/**
 * Checks if `path` exists on `object`.
 *
 * @private
 * @param {Object} object The object to query.
 * @param {Array|string} path The path to check.
 * @param {Function} hasFunc The function to check properties.
 * @returns {boolean} Returns `true` if `path` exists, else `false`.
 */
function hasPath(object, path, hasFunc) {
  path = castPath(path, object);

  var index = -1,
      length = path.length,
      result = false;

  while (++index < length) {
    var key = toKey(path[index]);
    if (!(result = object != null && hasFunc(object, key))) {
      break;
    }
    object = object[key];
  }
  if (result || ++index != length) {
    return result;
  }
  length = object == null ? 0 : object.length;
  return !!length && isLength(length) && isIndex(key, length) &&
    (isArray(object) || isArguments(object));
}

module.exports = hasPath;


/***/ }),

/***/ "./node_modules/lodash/_hashClear.js":
/*!*******************************************!*\
  !*** ./node_modules/lodash/_hashClear.js ***!
  \*******************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var nativeCreate = __webpack_require__(/*! ./_nativeCreate */ "./node_modules/lodash/_nativeCreate.js");

/**
 * Removes all key-value entries from the hash.
 *
 * @private
 * @name clear
 * @memberOf Hash
 */
function hashClear() {
  this.__data__ = nativeCreate ? nativeCreate(null) : {};
  this.size = 0;
}

module.exports = hashClear;


/***/ }),

/***/ "./node_modules/lodash/_hashDelete.js":
/*!********************************************!*\
  !*** ./node_modules/lodash/_hashDelete.js ***!
  \********************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports) {

/**
 * Removes `key` and its value from the hash.
 *
 * @private
 * @name delete
 * @memberOf Hash
 * @param {Object} hash The hash to modify.
 * @param {string} key The key of the value to remove.
 * @returns {boolean} Returns `true` if the entry was removed, else `false`.
 */
function hashDelete(key) {
  var result = this.has(key) && delete this.__data__[key];
  this.size -= result ? 1 : 0;
  return result;
}

module.exports = hashDelete;


/***/ }),

/***/ "./node_modules/lodash/_hashGet.js":
/*!*****************************************!*\
  !*** ./node_modules/lodash/_hashGet.js ***!
  \*****************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var nativeCreate = __webpack_require__(/*! ./_nativeCreate */ "./node_modules/lodash/_nativeCreate.js");

/** Used to stand-in for `undefined` hash values. */
var HASH_UNDEFINED = '__lodash_hash_undefined__';

/** Used for built-in method references. */
var objectProto = Object.prototype;

/** Used to check objects for own properties. */
var hasOwnProperty = objectProto.hasOwnProperty;

/**
 * Gets the hash value for `key`.
 *
 * @private
 * @name get
 * @memberOf Hash
 * @param {string} key The key of the value to get.
 * @returns {*} Returns the entry value.
 */
function hashGet(key) {
  var data = this.__data__;
  if (nativeCreate) {
    var result = data[key];
    return result === HASH_UNDEFINED ? undefined : result;
  }
  return hasOwnProperty.call(data, key) ? data[key] : undefined;
}

module.exports = hashGet;


/***/ }),

/***/ "./node_modules/lodash/_hashHas.js":
/*!*****************************************!*\
  !*** ./node_modules/lodash/_hashHas.js ***!
  \*****************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var nativeCreate = __webpack_require__(/*! ./_nativeCreate */ "./node_modules/lodash/_nativeCreate.js");

/** Used for built-in method references. */
var objectProto = Object.prototype;

/** Used to check objects for own properties. */
var hasOwnProperty = objectProto.hasOwnProperty;

/**
 * Checks if a hash value for `key` exists.
 *
 * @private
 * @name has
 * @memberOf Hash
 * @param {string} key The key of the entry to check.
 * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
 */
function hashHas(key) {
  var data = this.__data__;
  return nativeCreate ? (data[key] !== undefined) : hasOwnProperty.call(data, key);
}

module.exports = hashHas;


/***/ }),

/***/ "./node_modules/lodash/_hashSet.js":
/*!*****************************************!*\
  !*** ./node_modules/lodash/_hashSet.js ***!
  \*****************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var nativeCreate = __webpack_require__(/*! ./_nativeCreate */ "./node_modules/lodash/_nativeCreate.js");

/** Used to stand-in for `undefined` hash values. */
var HASH_UNDEFINED = '__lodash_hash_undefined__';

/**
 * Sets the hash `key` to `value`.
 *
 * @private
 * @name set
 * @memberOf Hash
 * @param {string} key The key of the value to set.
 * @param {*} value The value to set.
 * @returns {Object} Returns the hash instance.
 */
function hashSet(key, value) {
  var data = this.__data__;
  this.size += this.has(key) ? 0 : 1;
  data[key] = (nativeCreate && value === undefined) ? HASH_UNDEFINED : value;
  return this;
}

module.exports = hashSet;


/***/ }),

/***/ "./node_modules/lodash/_initCloneArray.js":
/*!************************************************!*\
  !*** ./node_modules/lodash/_initCloneArray.js ***!
  \************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports) {

/** Used for built-in method references. */
var objectProto = Object.prototype;

/** Used to check objects for own properties. */
var hasOwnProperty = objectProto.hasOwnProperty;

/**
 * Initializes an array clone.
 *
 * @private
 * @param {Array} array The array to clone.
 * @returns {Array} Returns the initialized clone.
 */
function initCloneArray(array) {
  var length = array.length,
      result = new array.constructor(length);

  // Add properties assigned by `RegExp#exec`.
  if (length && typeof array[0] == 'string' && hasOwnProperty.call(array, 'index')) {
    result.index = array.index;
    result.input = array.input;
  }
  return result;
}

module.exports = initCloneArray;


/***/ }),

/***/ "./node_modules/lodash/_initCloneByTag.js":
/*!************************************************!*\
  !*** ./node_modules/lodash/_initCloneByTag.js ***!
  \************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var cloneArrayBuffer = __webpack_require__(/*! ./_cloneArrayBuffer */ "./node_modules/lodash/_cloneArrayBuffer.js"),
    cloneDataView = __webpack_require__(/*! ./_cloneDataView */ "./node_modules/lodash/_cloneDataView.js"),
    cloneRegExp = __webpack_require__(/*! ./_cloneRegExp */ "./node_modules/lodash/_cloneRegExp.js"),
    cloneSymbol = __webpack_require__(/*! ./_cloneSymbol */ "./node_modules/lodash/_cloneSymbol.js"),
    cloneTypedArray = __webpack_require__(/*! ./_cloneTypedArray */ "./node_modules/lodash/_cloneTypedArray.js");

/** `Object#toString` result references. */
var boolTag = '[object Boolean]',
    dateTag = '[object Date]',
    mapTag = '[object Map]',
    numberTag = '[object Number]',
    regexpTag = '[object RegExp]',
    setTag = '[object Set]',
    stringTag = '[object String]',
    symbolTag = '[object Symbol]';

var arrayBufferTag = '[object ArrayBuffer]',
    dataViewTag = '[object DataView]',
    float32Tag = '[object Float32Array]',
    float64Tag = '[object Float64Array]',
    int8Tag = '[object Int8Array]',
    int16Tag = '[object Int16Array]',
    int32Tag = '[object Int32Array]',
    uint8Tag = '[object Uint8Array]',
    uint8ClampedTag = '[object Uint8ClampedArray]',
    uint16Tag = '[object Uint16Array]',
    uint32Tag = '[object Uint32Array]';

/**
 * Initializes an object clone based on its `toStringTag`.
 *
 * **Note:** This function only supports cloning values with tags of
 * `Boolean`, `Date`, `Error`, `Map`, `Number`, `RegExp`, `Set`, or `String`.
 *
 * @private
 * @param {Object} object The object to clone.
 * @param {string} tag The `toStringTag` of the object to clone.
 * @param {boolean} [isDeep] Specify a deep clone.
 * @returns {Object} Returns the initialized clone.
 */
function initCloneByTag(object, tag, isDeep) {
  var Ctor = object.constructor;
  switch (tag) {
    case arrayBufferTag:
      return cloneArrayBuffer(object);

    case boolTag:
    case dateTag:
      return new Ctor(+object);

    case dataViewTag:
      return cloneDataView(object, isDeep);

    case float32Tag: case float64Tag:
    case int8Tag: case int16Tag: case int32Tag:
    case uint8Tag: case uint8ClampedTag: case uint16Tag: case uint32Tag:
      return cloneTypedArray(object, isDeep);

    case mapTag:
      return new Ctor;

    case numberTag:
    case stringTag:
      return new Ctor(object);

    case regexpTag:
      return cloneRegExp(object);

    case setTag:
      return new Ctor;

    case symbolTag:
      return cloneSymbol(object);
  }
}

module.exports = initCloneByTag;


/***/ }),

/***/ "./node_modules/lodash/_initCloneObject.js":
/*!*************************************************!*\
  !*** ./node_modules/lodash/_initCloneObject.js ***!
  \*************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var baseCreate = __webpack_require__(/*! ./_baseCreate */ "./node_modules/lodash/_baseCreate.js"),
    getPrototype = __webpack_require__(/*! ./_getPrototype */ "./node_modules/lodash/_getPrototype.js"),
    isPrototype = __webpack_require__(/*! ./_isPrototype */ "./node_modules/lodash/_isPrototype.js");

/**
 * Initializes an object clone.
 *
 * @private
 * @param {Object} object The object to clone.
 * @returns {Object} Returns the initialized clone.
 */
function initCloneObject(object) {
  return (typeof object.constructor == 'function' && !isPrototype(object))
    ? baseCreate(getPrototype(object))
    : {};
}

module.exports = initCloneObject;


/***/ }),

/***/ "./node_modules/lodash/_isFlattenable.js":
/*!***********************************************!*\
  !*** ./node_modules/lodash/_isFlattenable.js ***!
  \***********************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var Symbol = __webpack_require__(/*! ./_Symbol */ "./node_modules/lodash/_Symbol.js"),
    isArguments = __webpack_require__(/*! ./isArguments */ "./node_modules/lodash/isArguments.js"),
    isArray = __webpack_require__(/*! ./isArray */ "./node_modules/lodash/isArray.js");

/** Built-in value references. */
var spreadableSymbol = Symbol ? Symbol.isConcatSpreadable : undefined;

/**
 * Checks if `value` is a flattenable `arguments` object or array.
 *
 * @private
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is flattenable, else `false`.
 */
function isFlattenable(value) {
  return isArray(value) || isArguments(value) ||
    !!(spreadableSymbol && value && value[spreadableSymbol]);
}

module.exports = isFlattenable;


/***/ }),

/***/ "./node_modules/lodash/_isIndex.js":
/*!*****************************************!*\
  !*** ./node_modules/lodash/_isIndex.js ***!
  \*****************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports) {

/** Used as references for various `Number` constants. */
var MAX_SAFE_INTEGER = 9007199254740991;

/** Used to detect unsigned integer values. */
var reIsUint = /^(?:0|[1-9]\d*)$/;

/**
 * Checks if `value` is a valid array-like index.
 *
 * @private
 * @param {*} value The value to check.
 * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.
 * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.
 */
function isIndex(value, length) {
  var type = typeof value;
  length = length == null ? MAX_SAFE_INTEGER : length;

  return !!length &&
    (type == 'number' ||
      (type != 'symbol' && reIsUint.test(value))) &&
        (value > -1 && value % 1 == 0 && value < length);
}

module.exports = isIndex;


/***/ }),

/***/ "./node_modules/lodash/_isIterateeCall.js":
/*!************************************************!*\
  !*** ./node_modules/lodash/_isIterateeCall.js ***!
  \************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var eq = __webpack_require__(/*! ./eq */ "./node_modules/lodash/eq.js"),
    isArrayLike = __webpack_require__(/*! ./isArrayLike */ "./node_modules/lodash/isArrayLike.js"),
    isIndex = __webpack_require__(/*! ./_isIndex */ "./node_modules/lodash/_isIndex.js"),
    isObject = __webpack_require__(/*! ./isObject */ "./node_modules/lodash/isObject.js");

/**
 * Checks if the given arguments are from an iteratee call.
 *
 * @private
 * @param {*} value The potential iteratee value argument.
 * @param {*} index The potential iteratee index or key argument.
 * @param {*} object The potential iteratee object argument.
 * @returns {boolean} Returns `true` if the arguments are from an iteratee call,
 *  else `false`.
 */
function isIterateeCall(value, index, object) {
  if (!isObject(object)) {
    return false;
  }
  var type = typeof index;
  if (type == 'number'
        ? (isArrayLike(object) && isIndex(index, object.length))
        : (type == 'string' && index in object)
      ) {
    return eq(object[index], value);
  }
  return false;
}

module.exports = isIterateeCall;


/***/ }),

/***/ "./node_modules/lodash/_isKey.js":
/*!***************************************!*\
  !*** ./node_modules/lodash/_isKey.js ***!
  \***************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var isArray = __webpack_require__(/*! ./isArray */ "./node_modules/lodash/isArray.js"),
    isSymbol = __webpack_require__(/*! ./isSymbol */ "./node_modules/lodash/isSymbol.js");

/** Used to match property names within property paths. */
var reIsDeepProp = /\.|\[(?:[^[\]]*|(["'])(?:(?!\1)[^\\]|\\.)*?\1)\]/,
    reIsPlainProp = /^\w*$/;

/**
 * Checks if `value` is a property name and not a property path.
 *
 * @private
 * @param {*} value The value to check.
 * @param {Object} [object] The object to query keys on.
 * @returns {boolean} Returns `true` if `value` is a property name, else `false`.
 */
function isKey(value, object) {
  if (isArray(value)) {
    return false;
  }
  var type = typeof value;
  if (type == 'number' || type == 'symbol' || type == 'boolean' ||
      value == null || isSymbol(value)) {
    return true;
  }
  return reIsPlainProp.test(value) || !reIsDeepProp.test(value) ||
    (object != null && value in Object(object));
}

module.exports = isKey;


/***/ }),

/***/ "./node_modules/lodash/_isKeyable.js":
/*!*******************************************!*\
  !*** ./node_modules/lodash/_isKeyable.js ***!
  \*******************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports) {

/**
 * Checks if `value` is suitable for use as unique object key.
 *
 * @private
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is suitable, else `false`.
 */
function isKeyable(value) {
  var type = typeof value;
  return (type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean')
    ? (value !== '__proto__')
    : (value === null);
}

module.exports = isKeyable;


/***/ }),

/***/ "./node_modules/lodash/_isMasked.js":
/*!******************************************!*\
  !*** ./node_modules/lodash/_isMasked.js ***!
  \******************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var coreJsData = __webpack_require__(/*! ./_coreJsData */ "./node_modules/lodash/_coreJsData.js");

/** Used to detect methods masquerading as native. */
var maskSrcKey = (function() {
  var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');
  return uid ? ('Symbol(src)_1.' + uid) : '';
}());

/**
 * Checks if `func` has its source masked.
 *
 * @private
 * @param {Function} func The function to check.
 * @returns {boolean} Returns `true` if `func` is masked, else `false`.
 */
function isMasked(func) {
  return !!maskSrcKey && (maskSrcKey in func);
}

module.exports = isMasked;


/***/ }),

/***/ "./node_modules/lodash/_isPrototype.js":
/*!*********************************************!*\
  !*** ./node_modules/lodash/_isPrototype.js ***!
  \*********************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports) {

/** Used for built-in method references. */
var objectProto = Object.prototype;

/**
 * Checks if `value` is likely a prototype object.
 *
 * @private
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.
 */
function isPrototype(value) {
  var Ctor = value && value.constructor,
      proto = (typeof Ctor == 'function' && Ctor.prototype) || objectProto;

  return value === proto;
}

module.exports = isPrototype;


/***/ }),

/***/ "./node_modules/lodash/_isStrictComparable.js":
/*!****************************************************!*\
  !*** ./node_modules/lodash/_isStrictComparable.js ***!
  \****************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var isObject = __webpack_require__(/*! ./isObject */ "./node_modules/lodash/isObject.js");

/**
 * Checks if `value` is suitable for strict equality comparisons, i.e. `===`.
 *
 * @private
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` if suitable for strict
 *  equality comparisons, else `false`.
 */
function isStrictComparable(value) {
  return value === value && !isObject(value);
}

module.exports = isStrictComparable;


/***/ }),

/***/ "./node_modules/lodash/_listCacheClear.js":
/*!************************************************!*\
  !*** ./node_modules/lodash/_listCacheClear.js ***!
  \************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports) {

/**
 * Removes all key-value entries from the list cache.
 *
 * @private
 * @name clear
 * @memberOf ListCache
 */
function listCacheClear() {
  this.__data__ = [];
  this.size = 0;
}

module.exports = listCacheClear;


/***/ }),

/***/ "./node_modules/lodash/_listCacheDelete.js":
/*!*************************************************!*\
  !*** ./node_modules/lodash/_listCacheDelete.js ***!
  \*************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var assocIndexOf = __webpack_require__(/*! ./_assocIndexOf */ "./node_modules/lodash/_assocIndexOf.js");

/** Used for built-in method references. */
var arrayProto = Array.prototype;

/** Built-in value references. */
var splice = arrayProto.splice;

/**
 * Removes `key` and its value from the list cache.
 *
 * @private
 * @name delete
 * @memberOf ListCache
 * @param {string} key The key of the value to remove.
 * @returns {boolean} Returns `true` if the entry was removed, else `false`.
 */
function listCacheDelete(key) {
  var data = this.__data__,
      index = assocIndexOf(data, key);

  if (index < 0) {
    return false;
  }
  var lastIndex = data.length - 1;
  if (index == lastIndex) {
    data.pop();
  } else {
    splice.call(data, index, 1);
  }
  --this.size;
  return true;
}

module.exports = listCacheDelete;


/***/ }),

/***/ "./node_modules/lodash/_listCacheGet.js":
/*!**********************************************!*\
  !*** ./node_modules/lodash/_listCacheGet.js ***!
  \**********************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var assocIndexOf = __webpack_require__(/*! ./_assocIndexOf */ "./node_modules/lodash/_assocIndexOf.js");

/**
 * Gets the list cache value for `key`.
 *
 * @private
 * @name get
 * @memberOf ListCache
 * @param {string} key The key of the value to get.
 * @returns {*} Returns the entry value.
 */
function listCacheGet(key) {
  var data = this.__data__,
      index = assocIndexOf(data, key);

  return index < 0 ? undefined : data[index][1];
}

module.exports = listCacheGet;


/***/ }),

/***/ "./node_modules/lodash/_listCacheHas.js":
/*!**********************************************!*\
  !*** ./node_modules/lodash/_listCacheHas.js ***!
  \**********************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var assocIndexOf = __webpack_require__(/*! ./_assocIndexOf */ "./node_modules/lodash/_assocIndexOf.js");

/**
 * Checks if a list cache value for `key` exists.
 *
 * @private
 * @name has
 * @memberOf ListCache
 * @param {string} key The key of the entry to check.
 * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
 */
function listCacheHas(key) {
  return assocIndexOf(this.__data__, key) > -1;
}

module.exports = listCacheHas;


/***/ }),

/***/ "./node_modules/lodash/_listCacheSet.js":
/*!**********************************************!*\
  !*** ./node_modules/lodash/_listCacheSet.js ***!
  \**********************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var assocIndexOf = __webpack_require__(/*! ./_assocIndexOf */ "./node_modules/lodash/_assocIndexOf.js");

/**
 * Sets the list cache `key` to `value`.
 *
 * @private
 * @name set
 * @memberOf ListCache
 * @param {string} key The key of the value to set.
 * @param {*} value The value to set.
 * @returns {Object} Returns the list cache instance.
 */
function listCacheSet(key, value) {
  var data = this.__data__,
      index = assocIndexOf(data, key);

  if (index < 0) {
    ++this.size;
    data.push([key, value]);
  } else {
    data[index][1] = value;
  }
  return this;
}

module.exports = listCacheSet;


/***/ }),

/***/ "./node_modules/lodash/_mapCacheClear.js":
/*!***********************************************!*\
  !*** ./node_modules/lodash/_mapCacheClear.js ***!
  \***********************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var Hash = __webpack_require__(/*! ./_Hash */ "./node_modules/lodash/_Hash.js"),
    ListCache = __webpack_require__(/*! ./_ListCache */ "./node_modules/lodash/_ListCache.js"),
    Map = __webpack_require__(/*! ./_Map */ "./node_modules/lodash/_Map.js");

/**
 * Removes all key-value entries from the map.
 *
 * @private
 * @name clear
 * @memberOf MapCache
 */
function mapCacheClear() {
  this.size = 0;
  this.__data__ = {
    'hash': new Hash,
    'map': new (Map || ListCache),
    'string': new Hash
  };
}

module.exports = mapCacheClear;


/***/ }),

/***/ "./node_modules/lodash/_mapCacheDelete.js":
/*!************************************************!*\
  !*** ./node_modules/lodash/_mapCacheDelete.js ***!
  \************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var getMapData = __webpack_require__(/*! ./_getMapData */ "./node_modules/lodash/_getMapData.js");

/**
 * Removes `key` and its value from the map.
 *
 * @private
 * @name delete
 * @memberOf MapCache
 * @param {string} key The key of the value to remove.
 * @returns {boolean} Returns `true` if the entry was removed, else `false`.
 */
function mapCacheDelete(key) {
  var result = getMapData(this, key)['delete'](key);
  this.size -= result ? 1 : 0;
  return result;
}

module.exports = mapCacheDelete;


/***/ }),

/***/ "./node_modules/lodash/_mapCacheGet.js":
/*!*********************************************!*\
  !*** ./node_modules/lodash/_mapCacheGet.js ***!
  \*********************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var getMapData = __webpack_require__(/*! ./_getMapData */ "./node_modules/lodash/_getMapData.js");

/**
 * Gets the map value for `key`.
 *
 * @private
 * @name get
 * @memberOf MapCache
 * @param {string} key The key of the value to get.
 * @returns {*} Returns the entry value.
 */
function mapCacheGet(key) {
  return getMapData(this, key).get(key);
}

module.exports = mapCacheGet;


/***/ }),

/***/ "./node_modules/lodash/_mapCacheHas.js":
/*!*********************************************!*\
  !*** ./node_modules/lodash/_mapCacheHas.js ***!
  \*********************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var getMapData = __webpack_require__(/*! ./_getMapData */ "./node_modules/lodash/_getMapData.js");

/**
 * Checks if a map value for `key` exists.
 *
 * @private
 * @name has
 * @memberOf MapCache
 * @param {string} key The key of the entry to check.
 * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
 */
function mapCacheHas(key) {
  return getMapData(this, key).has(key);
}

module.exports = mapCacheHas;


/***/ }),

/***/ "./node_modules/lodash/_mapCacheSet.js":
/*!*********************************************!*\
  !*** ./node_modules/lodash/_mapCacheSet.js ***!
  \*********************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var getMapData = __webpack_require__(/*! ./_getMapData */ "./node_modules/lodash/_getMapData.js");

/**
 * Sets the map `key` to `value`.
 *
 * @private
 * @name set
 * @memberOf MapCache
 * @param {string} key The key of the value to set.
 * @param {*} value The value to set.
 * @returns {Object} Returns the map cache instance.
 */
function mapCacheSet(key, value) {
  var data = getMapData(this, key),
      size = data.size;

  data.set(key, value);
  this.size += data.size == size ? 0 : 1;
  return this;
}

module.exports = mapCacheSet;


/***/ }),

/***/ "./node_modules/lodash/_mapToArray.js":
/*!********************************************!*\
  !*** ./node_modules/lodash/_mapToArray.js ***!
  \********************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports) {

/**
 * Converts `map` to its key-value pairs.
 *
 * @private
 * @param {Object} map The map to convert.
 * @returns {Array} Returns the key-value pairs.
 */
function mapToArray(map) {
  var index = -1,
      result = Array(map.size);

  map.forEach(function(value, key) {
    result[++index] = [key, value];
  });
  return result;
}

module.exports = mapToArray;


/***/ }),

/***/ "./node_modules/lodash/_matchesStrictComparable.js":
/*!*********************************************************!*\
  !*** ./node_modules/lodash/_matchesStrictComparable.js ***!
  \*********************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports) {

/**
 * A specialized version of `matchesProperty` for source values suitable
 * for strict equality comparisons, i.e. `===`.
 *
 * @private
 * @param {string} key The key of the property to get.
 * @param {*} srcValue The value to match.
 * @returns {Function} Returns the new spec function.
 */
function matchesStrictComparable(key, srcValue) {
  return function(object) {
    if (object == null) {
      return false;
    }
    return object[key] === srcValue &&
      (srcValue !== undefined || (key in Object(object)));
  };
}

module.exports = matchesStrictComparable;


/***/ }),

/***/ "./node_modules/lodash/_memoizeCapped.js":
/*!***********************************************!*\
  !*** ./node_modules/lodash/_memoizeCapped.js ***!
  \***********************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var memoize = __webpack_require__(/*! ./memoize */ "./node_modules/lodash/memoize.js");

/** Used as the maximum memoize cache size. */
var MAX_MEMOIZE_SIZE = 500;

/**
 * A specialized version of `_.memoize` which clears the memoized function's
 * cache when it exceeds `MAX_MEMOIZE_SIZE`.
 *
 * @private
 * @param {Function} func The function to have its output memoized.
 * @returns {Function} Returns the new memoized function.
 */
function memoizeCapped(func) {
  var result = memoize(func, function(key) {
    if (cache.size === MAX_MEMOIZE_SIZE) {
      cache.clear();
    }
    return key;
  });

  var cache = result.cache;
  return result;
}

module.exports = memoizeCapped;


/***/ }),

/***/ "./node_modules/lodash/_nativeCreate.js":
/*!**********************************************!*\
  !*** ./node_modules/lodash/_nativeCreate.js ***!
  \**********************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var getNative = __webpack_require__(/*! ./_getNative */ "./node_modules/lodash/_getNative.js");

/* Built-in method references that are verified to be native. */
var nativeCreate = getNative(Object, 'create');

module.exports = nativeCreate;


/***/ }),

/***/ "./node_modules/lodash/_nativeKeys.js":
/*!********************************************!*\
  !*** ./node_modules/lodash/_nativeKeys.js ***!
  \********************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var overArg = __webpack_require__(/*! ./_overArg */ "./node_modules/lodash/_overArg.js");

/* Built-in method references for those with the same name as other `lodash` methods. */
var nativeKeys = overArg(Object.keys, Object);

module.exports = nativeKeys;


/***/ }),

/***/ "./node_modules/lodash/_nativeKeysIn.js":
/*!**********************************************!*\
  !*** ./node_modules/lodash/_nativeKeysIn.js ***!
  \**********************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports) {

/**
 * This function is like
 * [`Object.keys`](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)
 * except that it includes inherited enumerable properties.
 *
 * @private
 * @param {Object} object The object to query.
 * @returns {Array} Returns the array of property names.
 */
function nativeKeysIn(object) {
  var result = [];
  if (object != null) {
    for (var key in Object(object)) {
      result.push(key);
    }
  }
  return result;
}

module.exports = nativeKeysIn;


/***/ }),

/***/ "./node_modules/lodash/_nodeUtil.js":
/*!******************************************!*\
  !*** ./node_modules/lodash/_nodeUtil.js ***!
  \******************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(module) {var freeGlobal = __webpack_require__(/*! ./_freeGlobal */ "./node_modules/lodash/_freeGlobal.js");

/** Detect free variable `exports`. */
var freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;

/** Detect free variable `module`. */
var freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;

/** Detect the popular CommonJS extension `module.exports`. */
var moduleExports = freeModule && freeModule.exports === freeExports;

/** Detect free variable `process` from Node.js. */
var freeProcess = moduleExports && freeGlobal.process;

/** Used to access faster Node.js helpers. */
var nodeUtil = (function() {
  try {
    // Use `util.types` for Node.js 10+.
    var types = freeModule && freeModule.require && freeModule.require('util').types;

    if (types) {
      return types;
    }

    // Legacy `process.binding('util')` for Node.js < 10.
    return freeProcess && freeProcess.binding && freeProcess.binding('util');
  } catch (e) {}
}());

module.exports = nodeUtil;

/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(/*! ./../webpack/buildin/module.js */ "./node_modules/webpack/buildin/module.js")(module)))

/***/ }),

/***/ "./node_modules/lodash/_objectToString.js":
/*!************************************************!*\
  !*** ./node_modules/lodash/_objectToString.js ***!
  \************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports) {

/** Used for built-in method references. */
var objectProto = Object.prototype;

/**
 * Used to resolve the
 * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)
 * of values.
 */
var nativeObjectToString = objectProto.toString;

/**
 * Converts `value` to a string using `Object.prototype.toString`.
 *
 * @private
 * @param {*} value The value to convert.
 * @returns {string} Returns the converted string.
 */
function objectToString(value) {
  return nativeObjectToString.call(value);
}

module.exports = objectToString;


/***/ }),

/***/ "./node_modules/lodash/_overArg.js":
/*!*****************************************!*\
  !*** ./node_modules/lodash/_overArg.js ***!
  \*****************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports) {

/**
 * Creates a unary function that invokes `func` with its argument transformed.
 *
 * @private
 * @param {Function} func The function to wrap.
 * @param {Function} transform The argument transform.
 * @returns {Function} Returns the new function.
 */
function overArg(func, transform) {
  return function(arg) {
    return func(transform(arg));
  };
}

module.exports = overArg;


/***/ }),

/***/ "./node_modules/lodash/_overRest.js":
/*!******************************************!*\
  !*** ./node_modules/lodash/_overRest.js ***!
  \******************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var apply = __webpack_require__(/*! ./_apply */ "./node_modules/lodash/_apply.js");

/* Built-in method references for those with the same name as other `lodash` methods. */
var nativeMax = Math.max;

/**
 * A specialized version of `baseRest` which transforms the rest array.
 *
 * @private
 * @param {Function} func The function to apply a rest parameter to.
 * @param {number} [start=func.length-1] The start position of the rest parameter.
 * @param {Function} transform The rest array transform.
 * @returns {Function} Returns the new function.
 */
function overRest(func, start, transform) {
  start = nativeMax(start === undefined ? (func.length - 1) : start, 0);
  return function() {
    var args = arguments,
        index = -1,
        length = nativeMax(args.length - start, 0),
        array = Array(length);

    while (++index < length) {
      array[index] = args[start + index];
    }
    index = -1;
    var otherArgs = Array(start + 1);
    while (++index < start) {
      otherArgs[index] = args[index];
    }
    otherArgs[start] = transform(array);
    return apply(func, this, otherArgs);
  };
}

module.exports = overRest;


/***/ }),

/***/ "./node_modules/lodash/_root.js":
/*!**************************************!*\
  !*** ./node_modules/lodash/_root.js ***!
  \**************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var freeGlobal = __webpack_require__(/*! ./_freeGlobal */ "./node_modules/lodash/_freeGlobal.js");

/** Detect free variable `self`. */
var freeSelf = typeof self == 'object' && self && self.Object === Object && self;

/** Used as a reference to the global object. */
var root = freeGlobal || freeSelf || Function('return this')();

module.exports = root;


/***/ }),

/***/ "./node_modules/lodash/_setCacheAdd.js":
/*!*********************************************!*\
  !*** ./node_modules/lodash/_setCacheAdd.js ***!
  \*********************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports) {

/** Used to stand-in for `undefined` hash values. */
var HASH_UNDEFINED = '__lodash_hash_undefined__';

/**
 * Adds `value` to the array cache.
 *
 * @private
 * @name add
 * @memberOf SetCache
 * @alias push
 * @param {*} value The value to cache.
 * @returns {Object} Returns the cache instance.
 */
function setCacheAdd(value) {
  this.__data__.set(value, HASH_UNDEFINED);
  return this;
}

module.exports = setCacheAdd;


/***/ }),

/***/ "./node_modules/lodash/_setCacheHas.js":
/*!*********************************************!*\
  !*** ./node_modules/lodash/_setCacheHas.js ***!
  \*********************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports) {

/**
 * Checks if `value` is in the array cache.
 *
 * @private
 * @name has
 * @memberOf SetCache
 * @param {*} value The value to search for.
 * @returns {number} Returns `true` if `value` is found, else `false`.
 */
function setCacheHas(value) {
  return this.__data__.has(value);
}

module.exports = setCacheHas;


/***/ }),

/***/ "./node_modules/lodash/_setToArray.js":
/*!********************************************!*\
  !*** ./node_modules/lodash/_setToArray.js ***!
  \********************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports) {

/**
 * Converts `set` to an array of its values.
 *
 * @private
 * @param {Object} set The set to convert.
 * @returns {Array} Returns the values.
 */
function setToArray(set) {
  var index = -1,
      result = Array(set.size);

  set.forEach(function(value) {
    result[++index] = value;
  });
  return result;
}

module.exports = setToArray;


/***/ }),

/***/ "./node_modules/lodash/_setToString.js":
/*!*********************************************!*\
  !*** ./node_modules/lodash/_setToString.js ***!
  \*********************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var baseSetToString = __webpack_require__(/*! ./_baseSetToString */ "./node_modules/lodash/_baseSetToString.js"),
    shortOut = __webpack_require__(/*! ./_shortOut */ "./node_modules/lodash/_shortOut.js");

/**
 * Sets the `toString` method of `func` to return `string`.
 *
 * @private
 * @param {Function} func The function to modify.
 * @param {Function} string The `toString` result.
 * @returns {Function} Returns `func`.
 */
var setToString = shortOut(baseSetToString);

module.exports = setToString;


/***/ }),

/***/ "./node_modules/lodash/_shortOut.js":
/*!******************************************!*\
  !*** ./node_modules/lodash/_shortOut.js ***!
  \******************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports) {

/** Used to detect hot functions by number of calls within a span of milliseconds. */
var HOT_COUNT = 800,
    HOT_SPAN = 16;

/* Built-in method references for those with the same name as other `lodash` methods. */
var nativeNow = Date.now;

/**
 * Creates a function that'll short out and invoke `identity` instead
 * of `func` when it's called `HOT_COUNT` or more times in `HOT_SPAN`
 * milliseconds.
 *
 * @private
 * @param {Function} func The function to restrict.
 * @returns {Function} Returns the new shortable function.
 */
function shortOut(func) {
  var count = 0,
      lastCalled = 0;

  return function() {
    var stamp = nativeNow(),
        remaining = HOT_SPAN - (stamp - lastCalled);

    lastCalled = stamp;
    if (remaining > 0) {
      if (++count >= HOT_COUNT) {
        return arguments[0];
      }
    } else {
      count = 0;
    }
    return func.apply(undefined, arguments);
  };
}

module.exports = shortOut;


/***/ }),

/***/ "./node_modules/lodash/_stackClear.js":
/*!********************************************!*\
  !*** ./node_modules/lodash/_stackClear.js ***!
  \********************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var ListCache = __webpack_require__(/*! ./_ListCache */ "./node_modules/lodash/_ListCache.js");

/**
 * Removes all key-value entries from the stack.
 *
 * @private
 * @name clear
 * @memberOf Stack
 */
function stackClear() {
  this.__data__ = new ListCache;
  this.size = 0;
}

module.exports = stackClear;


/***/ }),

/***/ "./node_modules/lodash/_stackDelete.js":
/*!*********************************************!*\
  !*** ./node_modules/lodash/_stackDelete.js ***!
  \*********************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports) {

/**
 * Removes `key` and its value from the stack.
 *
 * @private
 * @name delete
 * @memberOf Stack
 * @param {string} key The key of the value to remove.
 * @returns {boolean} Returns `true` if the entry was removed, else `false`.
 */
function stackDelete(key) {
  var data = this.__data__,
      result = data['delete'](key);

  this.size = data.size;
  return result;
}

module.exports = stackDelete;


/***/ }),

/***/ "./node_modules/lodash/_stackGet.js":
/*!******************************************!*\
  !*** ./node_modules/lodash/_stackGet.js ***!
  \******************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports) {

/**
 * Gets the stack value for `key`.
 *
 * @private
 * @name get
 * @memberOf Stack
 * @param {string} key The key of the value to get.
 * @returns {*} Returns the entry value.
 */
function stackGet(key) {
  return this.__data__.get(key);
}

module.exports = stackGet;


/***/ }),

/***/ "./node_modules/lodash/_stackHas.js":
/*!******************************************!*\
  !*** ./node_modules/lodash/_stackHas.js ***!
  \******************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports) {

/**
 * Checks if a stack value for `key` exists.
 *
 * @private
 * @name has
 * @memberOf Stack
 * @param {string} key The key of the entry to check.
 * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
 */
function stackHas(key) {
  return this.__data__.has(key);
}

module.exports = stackHas;


/***/ }),

/***/ "./node_modules/lodash/_stackSet.js":
/*!******************************************!*\
  !*** ./node_modules/lodash/_stackSet.js ***!
  \******************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var ListCache = __webpack_require__(/*! ./_ListCache */ "./node_modules/lodash/_ListCache.js"),
    Map = __webpack_require__(/*! ./_Map */ "./node_modules/lodash/_Map.js"),
    MapCache = __webpack_require__(/*! ./_MapCache */ "./node_modules/lodash/_MapCache.js");

/** Used as the size to enable large array optimizations. */
var LARGE_ARRAY_SIZE = 200;

/**
 * Sets the stack `key` to `value`.
 *
 * @private
 * @name set
 * @memberOf Stack
 * @param {string} key The key of the value to set.
 * @param {*} value The value to set.
 * @returns {Object} Returns the stack cache instance.
 */
function stackSet(key, value) {
  var data = this.__data__;
  if (data instanceof ListCache) {
    var pairs = data.__data__;
    if (!Map || (pairs.length < LARGE_ARRAY_SIZE - 1)) {
      pairs.push([key, value]);
      this.size = ++data.size;
      return this;
    }
    data = this.__data__ = new MapCache(pairs);
  }
  data.set(key, value);
  this.size = data.size;
  return this;
}

module.exports = stackSet;


/***/ }),

/***/ "./node_modules/lodash/_strictIndexOf.js":
/*!***********************************************!*\
  !*** ./node_modules/lodash/_strictIndexOf.js ***!
  \***********************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports) {

/**
 * A specialized version of `_.indexOf` which performs strict equality
 * comparisons of values, i.e. `===`.
 *
 * @private
 * @param {Array} array The array to inspect.
 * @param {*} value The value to search for.
 * @param {number} fromIndex The index to search from.
 * @returns {number} Returns the index of the matched value, else `-1`.
 */
function strictIndexOf(array, value, fromIndex) {
  var index = fromIndex - 1,
      length = array.length;

  while (++index < length) {
    if (array[index] === value) {
      return index;
    }
  }
  return -1;
}

module.exports = strictIndexOf;


/***/ }),

/***/ "./node_modules/lodash/_stringToPath.js":
/*!**********************************************!*\
  !*** ./node_modules/lodash/_stringToPath.js ***!
  \**********************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var memoizeCapped = __webpack_require__(/*! ./_memoizeCapped */ "./node_modules/lodash/_memoizeCapped.js");

/** Used to match property names within property paths. */
var rePropName = /[^.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|$))/g;

/** Used to match backslashes in property paths. */
var reEscapeChar = /\\(\\)?/g;

/**
 * Converts `string` to a property path array.
 *
 * @private
 * @param {string} string The string to convert.
 * @returns {Array} Returns the property path array.
 */
var stringToPath = memoizeCapped(function(string) {
  var result = [];
  if (string.charCodeAt(0) === 46 /* . */) {
    result.push('');
  }
  string.replace(rePropName, function(match, number, quote, subString) {
    result.push(quote ? subString.replace(reEscapeChar, '$1') : (number || match));
  });
  return result;
});

module.exports = stringToPath;


/***/ }),

/***/ "./node_modules/lodash/_toKey.js":
/*!***************************************!*\
  !*** ./node_modules/lodash/_toKey.js ***!
  \***************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var isSymbol = __webpack_require__(/*! ./isSymbol */ "./node_modules/lodash/isSymbol.js");

/** Used as references for various `Number` constants. */
var INFINITY = 1 / 0;

/**
 * Converts `value` to a string key if it's not a string or symbol.
 *
 * @private
 * @param {*} value The value to inspect.
 * @returns {string|symbol} Returns the key.
 */
function toKey(value) {
  if (typeof value == 'string' || isSymbol(value)) {
    return value;
  }
  var result = (value + '');
  return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;
}

module.exports = toKey;


/***/ }),

/***/ "./node_modules/lodash/_toSource.js":
/*!******************************************!*\
  !*** ./node_modules/lodash/_toSource.js ***!
  \******************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports) {

/** Used for built-in method references. */
var funcProto = Function.prototype;

/** Used to resolve the decompiled source of functions. */
var funcToString = funcProto.toString;

/**
 * Converts `func` to its source code.
 *
 * @private
 * @param {Function} func The function to convert.
 * @returns {string} Returns the source code.
 */
function toSource(func) {
  if (func != null) {
    try {
      return funcToString.call(func);
    } catch (e) {}
    try {
      return (func + '');
    } catch (e) {}
  }
  return '';
}

module.exports = toSource;


/***/ }),

/***/ "./node_modules/lodash/cloneDeep.js":
/*!******************************************!*\
  !*** ./node_modules/lodash/cloneDeep.js ***!
  \******************************************/
/*! dynamic exports provided */
/*! exports used: default */
/***/ (function(module, exports, __webpack_require__) {

var baseClone = __webpack_require__(/*! ./_baseClone */ "./node_modules/lodash/_baseClone.js");

/** Used to compose bitmasks for cloning. */
var CLONE_DEEP_FLAG = 1,
    CLONE_SYMBOLS_FLAG = 4;

/**
 * This method is like `_.clone` except that it recursively clones `value`.
 *
 * @static
 * @memberOf _
 * @since 1.0.0
 * @category Lang
 * @param {*} value The value to recursively clone.
 * @returns {*} Returns the deep cloned value.
 * @see _.clone
 * @example
 *
 * var objects = [{ 'a': 1 }, { 'b': 2 }];
 *
 * var deep = _.cloneDeep(objects);
 * console.log(deep[0] === objects[0]);
 * // => false
 */
function cloneDeep(value) {
  return baseClone(value, CLONE_DEEP_FLAG | CLONE_SYMBOLS_FLAG);
}

module.exports = cloneDeep;


/***/ }),

/***/ "./node_modules/lodash/constant.js":
/*!*****************************************!*\
  !*** ./node_modules/lodash/constant.js ***!
  \*****************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports) {

/**
 * Creates a function that returns `value`.
 *
 * @static
 * @memberOf _
 * @since 2.4.0
 * @category Util
 * @param {*} value The value to return from the new function.
 * @returns {Function} Returns the new constant function.
 * @example
 *
 * var objects = _.times(2, _.constant({ 'a': 1 }));
 *
 * console.log(objects);
 * // => [{ 'a': 1 }, { 'a': 1 }]
 *
 * console.log(objects[0] === objects[1]);
 * // => true
 */
function constant(value) {
  return function() {
    return value;
  };
}

module.exports = constant;


/***/ }),

/***/ "./node_modules/lodash/eq.js":
/*!***********************************!*\
  !*** ./node_modules/lodash/eq.js ***!
  \***********************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports) {

/**
 * Performs a
 * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
 * comparison between two values to determine if they are equivalent.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to compare.
 * @param {*} other The other value to compare.
 * @returns {boolean} Returns `true` if the values are equivalent, else `false`.
 * @example
 *
 * var object = { 'a': 1 };
 * var other = { 'a': 1 };
 *
 * _.eq(object, object);
 * // => true
 *
 * _.eq(object, other);
 * // => false
 *
 * _.eq('a', 'a');
 * // => true
 *
 * _.eq('a', Object('a'));
 * // => false
 *
 * _.eq(NaN, NaN);
 * // => true
 */
function eq(value, other) {
  return value === other || (value !== value && other !== other);
}

module.exports = eq;


/***/ }),

/***/ "./node_modules/lodash/get.js":
/*!************************************!*\
  !*** ./node_modules/lodash/get.js ***!
  \************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var baseGet = __webpack_require__(/*! ./_baseGet */ "./node_modules/lodash/_baseGet.js");

/**
 * Gets the value at `path` of `object`. If the resolved value is
 * `undefined`, the `defaultValue` is returned in its place.
 *
 * @static
 * @memberOf _
 * @since 3.7.0
 * @category Object
 * @param {Object} object The object to query.
 * @param {Array|string} path The path of the property to get.
 * @param {*} [defaultValue] The value returned for `undefined` resolved values.
 * @returns {*} Returns the resolved value.
 * @example
 *
 * var object = { 'a': [{ 'b': { 'c': 3 } }] };
 *
 * _.get(object, 'a[0].b.c');
 * // => 3
 *
 * _.get(object, ['a', '0', 'b', 'c']);
 * // => 3
 *
 * _.get(object, 'a.b.c', 'default');
 * // => 'default'
 */
function get(object, path, defaultValue) {
  var result = object == null ? undefined : baseGet(object, path);
  return result === undefined ? defaultValue : result;
}

module.exports = get;


/***/ }),

/***/ "./node_modules/lodash/hasIn.js":
/*!**************************************!*\
  !*** ./node_modules/lodash/hasIn.js ***!
  \**************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var baseHasIn = __webpack_require__(/*! ./_baseHasIn */ "./node_modules/lodash/_baseHasIn.js"),
    hasPath = __webpack_require__(/*! ./_hasPath */ "./node_modules/lodash/_hasPath.js");

/**
 * Checks if `path` is a direct or inherited property of `object`.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Object
 * @param {Object} object The object to query.
 * @param {Array|string} path The path to check.
 * @returns {boolean} Returns `true` if `path` exists, else `false`.
 * @example
 *
 * var object = _.create({ 'a': _.create({ 'b': 2 }) });
 *
 * _.hasIn(object, 'a');
 * // => true
 *
 * _.hasIn(object, 'a.b');
 * // => true
 *
 * _.hasIn(object, ['a', 'b']);
 * // => true
 *
 * _.hasIn(object, 'b');
 * // => false
 */
function hasIn(object, path) {
  return object != null && hasPath(object, path, baseHasIn);
}

module.exports = hasIn;


/***/ }),

/***/ "./node_modules/lodash/identity.js":
/*!*****************************************!*\
  !*** ./node_modules/lodash/identity.js ***!
  \*****************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports) {

/**
 * This method returns the first argument it receives.
 *
 * @static
 * @since 0.1.0
 * @memberOf _
 * @category Util
 * @param {*} value Any value.
 * @returns {*} Returns `value`.
 * @example
 *
 * var object = { 'a': 1 };
 *
 * console.log(_.identity(object) === object);
 * // => true
 */
function identity(value) {
  return value;
}

module.exports = identity;


/***/ }),

/***/ "./node_modules/lodash/isArguments.js":
/*!********************************************!*\
  !*** ./node_modules/lodash/isArguments.js ***!
  \********************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var baseIsArguments = __webpack_require__(/*! ./_baseIsArguments */ "./node_modules/lodash/_baseIsArguments.js"),
    isObjectLike = __webpack_require__(/*! ./isObjectLike */ "./node_modules/lodash/isObjectLike.js");

/** Used for built-in method references. */
var objectProto = Object.prototype;

/** Used to check objects for own properties. */
var hasOwnProperty = objectProto.hasOwnProperty;

/** Built-in value references. */
var propertyIsEnumerable = objectProto.propertyIsEnumerable;

/**
 * Checks if `value` is likely an `arguments` object.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is an `arguments` object,
 *  else `false`.
 * @example
 *
 * _.isArguments(function() { return arguments; }());
 * // => true
 *
 * _.isArguments([1, 2, 3]);
 * // => false
 */
var isArguments = baseIsArguments(function() { return arguments; }()) ? baseIsArguments : function(value) {
  return isObjectLike(value) && hasOwnProperty.call(value, 'callee') &&
    !propertyIsEnumerable.call(value, 'callee');
};

module.exports = isArguments;


/***/ }),

/***/ "./node_modules/lodash/isArray.js":
/*!****************************************!*\
  !*** ./node_modules/lodash/isArray.js ***!
  \****************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports) {

/**
 * Checks if `value` is classified as an `Array` object.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is an array, else `false`.
 * @example
 *
 * _.isArray([1, 2, 3]);
 * // => true
 *
 * _.isArray(document.body.children);
 * // => false
 *
 * _.isArray('abc');
 * // => false
 *
 * _.isArray(_.noop);
 * // => false
 */
var isArray = Array.isArray;

module.exports = isArray;


/***/ }),

/***/ "./node_modules/lodash/isArrayLike.js":
/*!********************************************!*\
  !*** ./node_modules/lodash/isArrayLike.js ***!
  \********************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var isFunction = __webpack_require__(/*! ./isFunction */ "./node_modules/lodash/isFunction.js"),
    isLength = __webpack_require__(/*! ./isLength */ "./node_modules/lodash/isLength.js");

/**
 * Checks if `value` is array-like. A value is considered array-like if it's
 * not a function and has a `value.length` that's an integer greater than or
 * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is array-like, else `false`.
 * @example
 *
 * _.isArrayLike([1, 2, 3]);
 * // => true
 *
 * _.isArrayLike(document.body.children);
 * // => true
 *
 * _.isArrayLike('abc');
 * // => true
 *
 * _.isArrayLike(_.noop);
 * // => false
 */
function isArrayLike(value) {
  return value != null && isLength(value.length) && !isFunction(value);
}

module.exports = isArrayLike;


/***/ }),

/***/ "./node_modules/lodash/isArrayLikeObject.js":
/*!**************************************************!*\
  !*** ./node_modules/lodash/isArrayLikeObject.js ***!
  \**************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var isArrayLike = __webpack_require__(/*! ./isArrayLike */ "./node_modules/lodash/isArrayLike.js"),
    isObjectLike = __webpack_require__(/*! ./isObjectLike */ "./node_modules/lodash/isObjectLike.js");

/**
 * This method is like `_.isArrayLike` except that it also checks if `value`
 * is an object.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is an array-like object,
 *  else `false`.
 * @example
 *
 * _.isArrayLikeObject([1, 2, 3]);
 * // => true
 *
 * _.isArrayLikeObject(document.body.children);
 * // => true
 *
 * _.isArrayLikeObject('abc');
 * // => false
 *
 * _.isArrayLikeObject(_.noop);
 * // => false
 */
function isArrayLikeObject(value) {
  return isObjectLike(value) && isArrayLike(value);
}

module.exports = isArrayLikeObject;


/***/ }),

/***/ "./node_modules/lodash/isBuffer.js":
/*!*****************************************!*\
  !*** ./node_modules/lodash/isBuffer.js ***!
  \*****************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(module) {var root = __webpack_require__(/*! ./_root */ "./node_modules/lodash/_root.js"),
    stubFalse = __webpack_require__(/*! ./stubFalse */ "./node_modules/lodash/stubFalse.js");

/** Detect free variable `exports`. */
var freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;

/** Detect free variable `module`. */
var freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;

/** Detect the popular CommonJS extension `module.exports`. */
var moduleExports = freeModule && freeModule.exports === freeExports;

/** Built-in value references. */
var Buffer = moduleExports ? root.Buffer : undefined;

/* Built-in method references for those with the same name as other `lodash` methods. */
var nativeIsBuffer = Buffer ? Buffer.isBuffer : undefined;

/**
 * Checks if `value` is a buffer.
 *
 * @static
 * @memberOf _
 * @since 4.3.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a buffer, else `false`.
 * @example
 *
 * _.isBuffer(new Buffer(2));
 * // => true
 *
 * _.isBuffer(new Uint8Array(2));
 * // => false
 */
var isBuffer = nativeIsBuffer || stubFalse;

module.exports = isBuffer;

/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(/*! ./../webpack/buildin/module.js */ "./node_modules/webpack/buildin/module.js")(module)))

/***/ }),

/***/ "./node_modules/lodash/isEqual.js":
/*!****************************************!*\
  !*** ./node_modules/lodash/isEqual.js ***!
  \****************************************/
/*! dynamic exports provided */
/*! exports used: default */
/***/ (function(module, exports, __webpack_require__) {

var baseIsEqual = __webpack_require__(/*! ./_baseIsEqual */ "./node_modules/lodash/_baseIsEqual.js");

/**
 * Performs a deep comparison between two values to determine if they are
 * equivalent.
 *
 * **Note:** This method supports comparing arrays, array buffers, booleans,
 * date objects, error objects, maps, numbers, `Object` objects, regexes,
 * sets, strings, symbols, and typed arrays. `Object` objects are compared
 * by their own, not inherited, enumerable properties. Functions and DOM
 * nodes are compared by strict equality, i.e. `===`.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Lang
 * @param {*} value The value to compare.
 * @param {*} other The other value to compare.
 * @returns {boolean} Returns `true` if the values are equivalent, else `false`.
 * @example
 *
 * var object = { 'a': 1 };
 * var other = { 'a': 1 };
 *
 * _.isEqual(object, other);
 * // => true
 *
 * object === other;
 * // => false
 */
function isEqual(value, other) {
  return baseIsEqual(value, other);
}

module.exports = isEqual;


/***/ }),

/***/ "./node_modules/lodash/isFinite.js":
/*!*****************************************!*\
  !*** ./node_modules/lodash/isFinite.js ***!
  \*****************************************/
/*! dynamic exports provided */
/*! exports used: default */
/***/ (function(module, exports, __webpack_require__) {

var root = __webpack_require__(/*! ./_root */ "./node_modules/lodash/_root.js");

/* Built-in method references for those with the same name as other `lodash` methods. */
var nativeIsFinite = root.isFinite;

/**
 * Checks if `value` is a finite primitive number.
 *
 * **Note:** This method is based on
 * [`Number.isFinite`](https://mdn.io/Number/isFinite).
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a finite number, else `false`.
 * @example
 *
 * _.isFinite(3);
 * // => true
 *
 * _.isFinite(Number.MIN_VALUE);
 * // => true
 *
 * _.isFinite(Infinity);
 * // => false
 *
 * _.isFinite('3');
 * // => false
 */
function isFinite(value) {
  return typeof value == 'number' && nativeIsFinite(value);
}

module.exports = isFinite;


/***/ }),

/***/ "./node_modules/lodash/isFunction.js":
/*!*******************************************!*\
  !*** ./node_modules/lodash/isFunction.js ***!
  \*******************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var baseGetTag = __webpack_require__(/*! ./_baseGetTag */ "./node_modules/lodash/_baseGetTag.js"),
    isObject = __webpack_require__(/*! ./isObject */ "./node_modules/lodash/isObject.js");

/** `Object#toString` result references. */
var asyncTag = '[object AsyncFunction]',
    funcTag = '[object Function]',
    genTag = '[object GeneratorFunction]',
    proxyTag = '[object Proxy]';

/**
 * Checks if `value` is classified as a `Function` object.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a function, else `false`.
 * @example
 *
 * _.isFunction(_);
 * // => true
 *
 * _.isFunction(/abc/);
 * // => false
 */
function isFunction(value) {
  if (!isObject(value)) {
    return false;
  }
  // The use of `Object#toString` avoids issues with the `typeof` operator
  // in Safari 9 which returns 'object' for typed arrays and other constructors.
  var tag = baseGetTag(value);
  return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;
}

module.exports = isFunction;


/***/ }),

/***/ "./node_modules/lodash/isLength.js":
/*!*****************************************!*\
  !*** ./node_modules/lodash/isLength.js ***!
  \*****************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports) {

/** Used as references for various `Number` constants. */
var MAX_SAFE_INTEGER = 9007199254740991;

/**
 * Checks if `value` is a valid array-like length.
 *
 * **Note:** This method is loosely based on
 * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.
 * @example
 *
 * _.isLength(3);
 * // => true
 *
 * _.isLength(Number.MIN_VALUE);
 * // => false
 *
 * _.isLength(Infinity);
 * // => false
 *
 * _.isLength('3');
 * // => false
 */
function isLength(value) {
  return typeof value == 'number' &&
    value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;
}

module.exports = isLength;


/***/ }),

/***/ "./node_modules/lodash/isMap.js":
/*!**************************************!*\
  !*** ./node_modules/lodash/isMap.js ***!
  \**************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var baseIsMap = __webpack_require__(/*! ./_baseIsMap */ "./node_modules/lodash/_baseIsMap.js"),
    baseUnary = __webpack_require__(/*! ./_baseUnary */ "./node_modules/lodash/_baseUnary.js"),
    nodeUtil = __webpack_require__(/*! ./_nodeUtil */ "./node_modules/lodash/_nodeUtil.js");

/* Node.js helper references. */
var nodeIsMap = nodeUtil && nodeUtil.isMap;

/**
 * Checks if `value` is classified as a `Map` object.
 *
 * @static
 * @memberOf _
 * @since 4.3.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a map, else `false`.
 * @example
 *
 * _.isMap(new Map);
 * // => true
 *
 * _.isMap(new WeakMap);
 * // => false
 */
var isMap = nodeIsMap ? baseUnary(nodeIsMap) : baseIsMap;

module.exports = isMap;


/***/ }),

/***/ "./node_modules/lodash/isObject.js":
/*!*****************************************!*\
  !*** ./node_modules/lodash/isObject.js ***!
  \*****************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports) {

/**
 * Checks if `value` is the
 * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)
 * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is an object, else `false`.
 * @example
 *
 * _.isObject({});
 * // => true
 *
 * _.isObject([1, 2, 3]);
 * // => true
 *
 * _.isObject(_.noop);
 * // => true
 *
 * _.isObject(null);
 * // => false
 */
function isObject(value) {
  var type = typeof value;
  return value != null && (type == 'object' || type == 'function');
}

module.exports = isObject;


/***/ }),

/***/ "./node_modules/lodash/isObjectLike.js":
/*!*********************************************!*\
  !*** ./node_modules/lodash/isObjectLike.js ***!
  \*********************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports) {

/**
 * Checks if `value` is object-like. A value is object-like if it's not `null`
 * and has a `typeof` result of "object".
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is object-like, else `false`.
 * @example
 *
 * _.isObjectLike({});
 * // => true
 *
 * _.isObjectLike([1, 2, 3]);
 * // => true
 *
 * _.isObjectLike(_.noop);
 * // => false
 *
 * _.isObjectLike(null);
 * // => false
 */
function isObjectLike(value) {
  return value != null && typeof value == 'object';
}

module.exports = isObjectLike;


/***/ }),

/***/ "./node_modules/lodash/isSet.js":
/*!**************************************!*\
  !*** ./node_modules/lodash/isSet.js ***!
  \**************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var baseIsSet = __webpack_require__(/*! ./_baseIsSet */ "./node_modules/lodash/_baseIsSet.js"),
    baseUnary = __webpack_require__(/*! ./_baseUnary */ "./node_modules/lodash/_baseUnary.js"),
    nodeUtil = __webpack_require__(/*! ./_nodeUtil */ "./node_modules/lodash/_nodeUtil.js");

/* Node.js helper references. */
var nodeIsSet = nodeUtil && nodeUtil.isSet;

/**
 * Checks if `value` is classified as a `Set` object.
 *
 * @static
 * @memberOf _
 * @since 4.3.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a set, else `false`.
 * @example
 *
 * _.isSet(new Set);
 * // => true
 *
 * _.isSet(new WeakSet);
 * // => false
 */
var isSet = nodeIsSet ? baseUnary(nodeIsSet) : baseIsSet;

module.exports = isSet;


/***/ }),

/***/ "./node_modules/lodash/isSymbol.js":
/*!*****************************************!*\
  !*** ./node_modules/lodash/isSymbol.js ***!
  \*****************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var baseGetTag = __webpack_require__(/*! ./_baseGetTag */ "./node_modules/lodash/_baseGetTag.js"),
    isObjectLike = __webpack_require__(/*! ./isObjectLike */ "./node_modules/lodash/isObjectLike.js");

/** `Object#toString` result references. */
var symbolTag = '[object Symbol]';

/**
 * Checks if `value` is classified as a `Symbol` primitive or object.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.
 * @example
 *
 * _.isSymbol(Symbol.iterator);
 * // => true
 *
 * _.isSymbol('abc');
 * // => false
 */
function isSymbol(value) {
  return typeof value == 'symbol' ||
    (isObjectLike(value) && baseGetTag(value) == symbolTag);
}

module.exports = isSymbol;


/***/ }),

/***/ "./node_modules/lodash/isTypedArray.js":
/*!*********************************************!*\
  !*** ./node_modules/lodash/isTypedArray.js ***!
  \*********************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var baseIsTypedArray = __webpack_require__(/*! ./_baseIsTypedArray */ "./node_modules/lodash/_baseIsTypedArray.js"),
    baseUnary = __webpack_require__(/*! ./_baseUnary */ "./node_modules/lodash/_baseUnary.js"),
    nodeUtil = __webpack_require__(/*! ./_nodeUtil */ "./node_modules/lodash/_nodeUtil.js");

/* Node.js helper references. */
var nodeIsTypedArray = nodeUtil && nodeUtil.isTypedArray;

/**
 * Checks if `value` is classified as a typed array.
 *
 * @static
 * @memberOf _
 * @since 3.0.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.
 * @example
 *
 * _.isTypedArray(new Uint8Array);
 * // => true
 *
 * _.isTypedArray([]);
 * // => false
 */
var isTypedArray = nodeIsTypedArray ? baseUnary(nodeIsTypedArray) : baseIsTypedArray;

module.exports = isTypedArray;


/***/ }),

/***/ "./node_modules/lodash/keys.js":
/*!*************************************!*\
  !*** ./node_modules/lodash/keys.js ***!
  \*************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var arrayLikeKeys = __webpack_require__(/*! ./_arrayLikeKeys */ "./node_modules/lodash/_arrayLikeKeys.js"),
    baseKeys = __webpack_require__(/*! ./_baseKeys */ "./node_modules/lodash/_baseKeys.js"),
    isArrayLike = __webpack_require__(/*! ./isArrayLike */ "./node_modules/lodash/isArrayLike.js");

/**
 * Creates an array of the own enumerable property names of `object`.
 *
 * **Note:** Non-object values are coerced to objects. See the
 * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)
 * for more details.
 *
 * @static
 * @since 0.1.0
 * @memberOf _
 * @category Object
 * @param {Object} object The object to query.
 * @returns {Array} Returns the array of property names.
 * @example
 *
 * function Foo() {
 *   this.a = 1;
 *   this.b = 2;
 * }
 *
 * Foo.prototype.c = 3;
 *
 * _.keys(new Foo);
 * // => ['a', 'b'] (iteration order is not guaranteed)
 *
 * _.keys('hi');
 * // => ['0', '1']
 */
function keys(object) {
  return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);
}

module.exports = keys;


/***/ }),

/***/ "./node_modules/lodash/keysIn.js":
/*!***************************************!*\
  !*** ./node_modules/lodash/keysIn.js ***!
  \***************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var arrayLikeKeys = __webpack_require__(/*! ./_arrayLikeKeys */ "./node_modules/lodash/_arrayLikeKeys.js"),
    baseKeysIn = __webpack_require__(/*! ./_baseKeysIn */ "./node_modules/lodash/_baseKeysIn.js"),
    isArrayLike = __webpack_require__(/*! ./isArrayLike */ "./node_modules/lodash/isArrayLike.js");

/**
 * Creates an array of the own and inherited enumerable property names of `object`.
 *
 * **Note:** Non-object values are coerced to objects.
 *
 * @static
 * @memberOf _
 * @since 3.0.0
 * @category Object
 * @param {Object} object The object to query.
 * @returns {Array} Returns the array of property names.
 * @example
 *
 * function Foo() {
 *   this.a = 1;
 *   this.b = 2;
 * }
 *
 * Foo.prototype.c = 3;
 *
 * _.keysIn(new Foo);
 * // => ['a', 'b', 'c'] (iteration order is not guaranteed)
 */
function keysIn(object) {
  return isArrayLike(object) ? arrayLikeKeys(object, true) : baseKeysIn(object);
}

module.exports = keysIn;


/***/ }),

/***/ "./node_modules/lodash/last.js":
/*!*************************************!*\
  !*** ./node_modules/lodash/last.js ***!
  \*************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports) {

/**
 * Gets the last element of `array`.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Array
 * @param {Array} array The array to query.
 * @returns {*} Returns the last element of `array`.
 * @example
 *
 * _.last([1, 2, 3]);
 * // => 3
 */
function last(array) {
  var length = array == null ? 0 : array.length;
  return length ? array[length - 1] : undefined;
}

module.exports = last;


/***/ }),

/***/ "./node_modules/lodash/max.js":
/*!************************************!*\
  !*** ./node_modules/lodash/max.js ***!
  \************************************/
/*! dynamic exports provided */
/*! exports used: default */
/***/ (function(module, exports, __webpack_require__) {

var baseExtremum = __webpack_require__(/*! ./_baseExtremum */ "./node_modules/lodash/_baseExtremum.js"),
    baseGt = __webpack_require__(/*! ./_baseGt */ "./node_modules/lodash/_baseGt.js"),
    identity = __webpack_require__(/*! ./identity */ "./node_modules/lodash/identity.js");

/**
 * Computes the maximum value of `array`. If `array` is empty or falsey,
 * `undefined` is returned.
 *
 * @static
 * @since 0.1.0
 * @memberOf _
 * @category Math
 * @param {Array} array The array to iterate over.
 * @returns {*} Returns the maximum value.
 * @example
 *
 * _.max([4, 2, 8, 6]);
 * // => 8
 *
 * _.max([]);
 * // => undefined
 */
function max(array) {
  return (array && array.length)
    ? baseExtremum(array, identity, baseGt)
    : undefined;
}

module.exports = max;


/***/ }),

/***/ "./node_modules/lodash/memoize.js":
/*!****************************************!*\
  !*** ./node_modules/lodash/memoize.js ***!
  \****************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var MapCache = __webpack_require__(/*! ./_MapCache */ "./node_modules/lodash/_MapCache.js");

/** Error message constants. */
var FUNC_ERROR_TEXT = 'Expected a function';

/**
 * Creates a function that memoizes the result of `func`. If `resolver` is
 * provided, it determines the cache key for storing the result based on the
 * arguments provided to the memoized function. By default, the first argument
 * provided to the memoized function is used as the map cache key. The `func`
 * is invoked with the `this` binding of the memoized function.
 *
 * **Note:** The cache is exposed as the `cache` property on the memoized
 * function. Its creation may be customized by replacing the `_.memoize.Cache`
 * constructor with one whose instances implement the
 * [`Map`](http://ecma-international.org/ecma-262/7.0/#sec-properties-of-the-map-prototype-object)
 * method interface of `clear`, `delete`, `get`, `has`, and `set`.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Function
 * @param {Function} func The function to have its output memoized.
 * @param {Function} [resolver] The function to resolve the cache key.
 * @returns {Function} Returns the new memoized function.
 * @example
 *
 * var object = { 'a': 1, 'b': 2 };
 * var other = { 'c': 3, 'd': 4 };
 *
 * var values = _.memoize(_.values);
 * values(object);
 * // => [1, 2]
 *
 * values(other);
 * // => [3, 4]
 *
 * object.a = 2;
 * values(object);
 * // => [1, 2]
 *
 * // Modify the result cache.
 * values.cache.set(object, ['a', 'b']);
 * values(object);
 * // => ['a', 'b']
 *
 * // Replace `_.memoize.Cache`.
 * _.memoize.Cache = WeakMap;
 */
function memoize(func, resolver) {
  if (typeof func != 'function' || (resolver != null && typeof resolver != 'function')) {
    throw new TypeError(FUNC_ERROR_TEXT);
  }
  var memoized = function() {
    var args = arguments,
        key = resolver ? resolver.apply(this, args) : args[0],
        cache = memoized.cache;

    if (cache.has(key)) {
      return cache.get(key);
    }
    var result = func.apply(this, args);
    memoized.cache = cache.set(key, result) || cache;
    return result;
  };
  memoized.cache = new (memoize.Cache || MapCache);
  return memoized;
}

// Expose `MapCache`.
memoize.Cache = MapCache;

module.exports = memoize;


/***/ }),

/***/ "./node_modules/lodash/noop.js":
/*!*************************************!*\
  !*** ./node_modules/lodash/noop.js ***!
  \*************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports) {

/**
 * This method returns `undefined`.
 *
 * @static
 * @memberOf _
 * @since 2.3.0
 * @category Util
 * @example
 *
 * _.times(2, _.noop);
 * // => [undefined, undefined]
 */
function noop() {
  // No operation performed.
}

module.exports = noop;


/***/ }),

/***/ "./node_modules/lodash/property.js":
/*!*****************************************!*\
  !*** ./node_modules/lodash/property.js ***!
  \*****************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var baseProperty = __webpack_require__(/*! ./_baseProperty */ "./node_modules/lodash/_baseProperty.js"),
    basePropertyDeep = __webpack_require__(/*! ./_basePropertyDeep */ "./node_modules/lodash/_basePropertyDeep.js"),
    isKey = __webpack_require__(/*! ./_isKey */ "./node_modules/lodash/_isKey.js"),
    toKey = __webpack_require__(/*! ./_toKey */ "./node_modules/lodash/_toKey.js");

/**
 * Creates a function that returns the value at `path` of a given object.
 *
 * @static
 * @memberOf _
 * @since 2.4.0
 * @category Util
 * @param {Array|string} path The path of the property to get.
 * @returns {Function} Returns the new accessor function.
 * @example
 *
 * var objects = [
 *   { 'a': { 'b': 2 } },
 *   { 'a': { 'b': 1 } }
 * ];
 *
 * _.map(objects, _.property('a.b'));
 * // => [2, 1]
 *
 * _.map(_.sortBy(objects, _.property(['a', 'b'])), 'a.b');
 * // => [1, 2]
 */
function property(path) {
  return isKey(path) ? baseProperty(toKey(path)) : basePropertyDeep(path);
}

module.exports = property;


/***/ }),

/***/ "./node_modules/lodash/sortBy.js":
/*!***************************************!*\
  !*** ./node_modules/lodash/sortBy.js ***!
  \***************************************/
/*! dynamic exports provided */
/***/ (function(module, exports, __webpack_require__) {

var baseFlatten = __webpack_require__(/*! ./_baseFlatten */ "./node_modules/lodash/_baseFlatten.js"),
    baseOrderBy = __webpack_require__(/*! ./_baseOrderBy */ "./node_modules/lodash/_baseOrderBy.js"),
    baseRest = __webpack_require__(/*! ./_baseRest */ "./node_modules/lodash/_baseRest.js"),
    isIterateeCall = __webpack_require__(/*! ./_isIterateeCall */ "./node_modules/lodash/_isIterateeCall.js");

/**
 * Creates an array of elements, sorted in ascending order by the results of
 * running each element in a collection thru each iteratee. This method
 * performs a stable sort, that is, it preserves the original sort order of
 * equal elements. The iteratees are invoked with one argument: (value).
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Collection
 * @param {Array|Object} collection The collection to iterate over.
 * @param {...(Function|Function[])} [iteratees=[_.identity]]
 *  The iteratees to sort by.
 * @returns {Array} Returns the new sorted array.
 * @example
 *
 * var users = [
 *   { 'user': 'fred',   'age': 48 },
 *   { 'user': 'barney', 'age': 36 },
 *   { 'user': 'fred',   'age': 40 },
 *   { 'user': 'barney', 'age': 34 }
 * ];
 *
 * _.sortBy(users, [function(o) { return o.user; }]);
 * // => objects for [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 40]]
 *
 * _.sortBy(users, ['user', 'age']);
 * // => objects for [['barney', 34], ['barney', 36], ['fred', 40], ['fred', 48]]
 */
var sortBy = baseRest(function(collection, iteratees) {
  if (collection == null) {
    return [];
  }
  var length = iteratees.length;
  if (length > 1 && isIterateeCall(collection, iteratees[0], iteratees[1])) {
    iteratees = [];
  } else if (length > 2 && isIterateeCall(iteratees[0], iteratees[1], iteratees[2])) {
    iteratees = [iteratees[0]];
  }
  return baseOrderBy(collection, baseFlatten(iteratees, 1), []);
});

module.exports = sortBy;


/***/ }),

/***/ "./node_modules/lodash/stubArray.js":
/*!******************************************!*\
  !*** ./node_modules/lodash/stubArray.js ***!
  \******************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports) {

/**
 * This method returns a new empty array.
 *
 * @static
 * @memberOf _
 * @since 4.13.0
 * @category Util
 * @returns {Array} Returns the new empty array.
 * @example
 *
 * var arrays = _.times(2, _.stubArray);
 *
 * console.log(arrays);
 * // => [[], []]
 *
 * console.log(arrays[0] === arrays[1]);
 * // => false
 */
function stubArray() {
  return [];
}

module.exports = stubArray;


/***/ }),

/***/ "./node_modules/lodash/stubFalse.js":
/*!******************************************!*\
  !*** ./node_modules/lodash/stubFalse.js ***!
  \******************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports) {

/**
 * This method returns `false`.
 *
 * @static
 * @memberOf _
 * @since 4.13.0
 * @category Util
 * @returns {boolean} Returns `false`.
 * @example
 *
 * _.times(2, _.stubFalse);
 * // => [false, false]
 */
function stubFalse() {
  return false;
}

module.exports = stubFalse;


/***/ }),

/***/ "./node_modules/lodash/toNumber.js":
/*!*****************************************!*\
  !*** ./node_modules/lodash/toNumber.js ***!
  \*****************************************/
/*! dynamic exports provided */
/*! exports used: default */
/***/ (function(module, exports, __webpack_require__) {

var isObject = __webpack_require__(/*! ./isObject */ "./node_modules/lodash/isObject.js"),
    isSymbol = __webpack_require__(/*! ./isSymbol */ "./node_modules/lodash/isSymbol.js");

/** Used as references for various `Number` constants. */
var NAN = 0 / 0;

/** Used to match leading and trailing whitespace. */
var reTrim = /^\s+|\s+$/g;

/** Used to detect bad signed hexadecimal string values. */
var reIsBadHex = /^[-+]0x[0-9a-f]+$/i;

/** Used to detect binary string values. */
var reIsBinary = /^0b[01]+$/i;

/** Used to detect octal string values. */
var reIsOctal = /^0o[0-7]+$/i;

/** Built-in method references without a dependency on `root`. */
var freeParseInt = parseInt;

/**
 * Converts `value` to a number.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to process.
 * @returns {number} Returns the number.
 * @example
 *
 * _.toNumber(3.2);
 * // => 3.2
 *
 * _.toNumber(Number.MIN_VALUE);
 * // => 5e-324
 *
 * _.toNumber(Infinity);
 * // => Infinity
 *
 * _.toNumber('3.2');
 * // => 3.2
 */
function toNumber(value) {
  if (typeof value == 'number') {
    return value;
  }
  if (isSymbol(value)) {
    return NAN;
  }
  if (isObject(value)) {
    var other = typeof value.valueOf == 'function' ? value.valueOf() : value;
    value = isObject(other) ? (other + '') : other;
  }
  if (typeof value != 'string') {
    return value === 0 ? value : +value;
  }
  value = value.replace(reTrim, '');
  var isBinary = reIsBinary.test(value);
  return (isBinary || reIsOctal.test(value))
    ? freeParseInt(value.slice(2), isBinary ? 2 : 8)
    : (reIsBadHex.test(value) ? NAN : +value);
}

module.exports = toNumber;


/***/ }),

/***/ "./node_modules/lodash/toString.js":
/*!*****************************************!*\
  !*** ./node_modules/lodash/toString.js ***!
  \*****************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var baseToString = __webpack_require__(/*! ./_baseToString */ "./node_modules/lodash/_baseToString.js");

/**
 * Converts `value` to a string. An empty string is returned for `null`
 * and `undefined` values. The sign of `-0` is preserved.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to convert.
 * @returns {string} Returns the converted string.
 * @example
 *
 * _.toString(null);
 * // => ''
 *
 * _.toString(-0);
 * // => '-0'
 *
 * _.toString([1, 2, 3]);
 * // => '1,2,3'
 */
function toString(value) {
  return value == null ? '' : baseToString(value);
}

module.exports = toString;


/***/ }),

/***/ "./node_modules/lodash/unionBy.js":
/*!****************************************!*\
  !*** ./node_modules/lodash/unionBy.js ***!
  \****************************************/
/*! dynamic exports provided */
/*! exports used: default */
/***/ (function(module, exports, __webpack_require__) {

var baseFlatten = __webpack_require__(/*! ./_baseFlatten */ "./node_modules/lodash/_baseFlatten.js"),
    baseIteratee = __webpack_require__(/*! ./_baseIteratee */ "./node_modules/lodash/_baseIteratee.js"),
    baseRest = __webpack_require__(/*! ./_baseRest */ "./node_modules/lodash/_baseRest.js"),
    baseUniq = __webpack_require__(/*! ./_baseUniq */ "./node_modules/lodash/_baseUniq.js"),
    isArrayLikeObject = __webpack_require__(/*! ./isArrayLikeObject */ "./node_modules/lodash/isArrayLikeObject.js"),
    last = __webpack_require__(/*! ./last */ "./node_modules/lodash/last.js");

/**
 * This method is like `_.union` except that it accepts `iteratee` which is
 * invoked for each element of each `arrays` to generate the criterion by
 * which uniqueness is computed. Result values are chosen from the first
 * array in which the value occurs. The iteratee is invoked with one argument:
 * (value).
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Array
 * @param {...Array} [arrays] The arrays to inspect.
 * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
 * @returns {Array} Returns the new array of combined values.
 * @example
 *
 * _.unionBy([2.1], [1.2, 2.3], Math.floor);
 * // => [2.1, 1.2]
 *
 * // The `_.property` iteratee shorthand.
 * _.unionBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');
 * // => [{ 'x': 1 }, { 'x': 2 }]
 */
var unionBy = baseRest(function(arrays) {
  var iteratee = last(arrays);
  if (isArrayLikeObject(iteratee)) {
    iteratee = undefined;
  }
  return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true), baseIteratee(iteratee, 2));
});

module.exports = unionBy;


/***/ }),

/***/ "./node_modules/lodash/uniqBy.js":
/*!***************************************!*\
  !*** ./node_modules/lodash/uniqBy.js ***!
  \***************************************/
/*! dynamic exports provided */
/*! exports used: default */
/***/ (function(module, exports, __webpack_require__) {

var baseIteratee = __webpack_require__(/*! ./_baseIteratee */ "./node_modules/lodash/_baseIteratee.js"),
    baseUniq = __webpack_require__(/*! ./_baseUniq */ "./node_modules/lodash/_baseUniq.js");

/**
 * This method is like `_.uniq` except that it accepts `iteratee` which is
 * invoked for each element in `array` to generate the criterion by which
 * uniqueness is computed. The order of result values is determined by the
 * order they occur in the array. The iteratee is invoked with one argument:
 * (value).
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Array
 * @param {Array} array The array to inspect.
 * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
 * @returns {Array} Returns the new duplicate free array.
 * @example
 *
 * _.uniqBy([2.1, 1.2, 2.3], Math.floor);
 * // => [2.1, 1.2]
 *
 * // The `_.property` iteratee shorthand.
 * _.uniqBy([{ 'x': 1 }, { 'x': 2 }, { 'x': 1 }], 'x');
 * // => [{ 'x': 1 }, { 'x': 2 }]
 */
function uniqBy(array, iteratee) {
  return (array && array.length) ? baseUniq(array, baseIteratee(iteratee, 2)) : [];
}

module.exports = uniqBy;


/***/ }),

/***/ "./node_modules/react-datepicker/dist/react-datepicker.css":
/*!*****************************************************************!*\
  !*** ./node_modules/react-datepicker/dist/react-datepicker.css ***!
  \*****************************************************************/
/*! dynamic exports provided */
/***/ (function(module, exports) {

// removed by extract-text-webpack-plugin

/***/ }),

/***/ "./node_modules/react-table/react-table.css":
/*!**************************************************!*\
  !*** ./node_modules/react-table/react-table.css ***!
  \**************************************************/
/*! dynamic exports provided */
/***/ (function(module, exports) {

// removed by extract-text-webpack-plugin

/***/ }),

/***/ "./node_modules/react-tagsinput/react-tagsinput.css":
/*!**********************************************************!*\
  !*** ./node_modules/react-tagsinput/react-tagsinput.css ***!
  \**********************************************************/
/*! dynamic exports provided */
/***/ (function(module, exports) {

// removed by extract-text-webpack-plugin

/***/ }),

/***/ "./node_modules/react-toggle/style.css":
/*!*********************************************!*\
  !*** ./node_modules/react-toggle/style.css ***!
  \*********************************************/
/*! dynamic exports provided */
/***/ (function(module, exports) {

// removed by extract-text-webpack-plugin

/***/ }),

/***/ "./src/AppBundle/Resources/public/data/languages.js":
/*!**********************************************************!*\
  !*** ./src/AppBundle/Resources/public/data/languages.js ***!
  \**********************************************************/
/*! exports provided: languages */
/*! exports used: languages */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return languages; });
var languages = {
    "ab": {
        "name": "Abkhaz",
        "nativeName": "аҧсуа"
    },
    "aa": {
        "name": "Afar",
        "nativeName": "Afaraf"
    },
    "af": {
        "name": "Afrikaans",
        "nativeName": "Afrikaans"
    },
    "ak": {
        "name": "Akan",
        "nativeName": "Akan"
    },
    "sq": {
        "name": "Albanian",
        "nativeName": "Shqip"
    },
    "am": {
        "name": "Amharic",
        "nativeName": "አማርኛ"
    },
    "ar": {
        "name": "Arabic",
        "nativeName": "العربية"
    },
    "an": {
        "name": "Aragonese",
        "nativeName": "Aragonés"
    },
    "hy": {
        "name": "Armenian",
        "nativeName": "Հայերեն"
    },
    "as": {
        "name": "Assamese",
        "nativeName": "অসমীয়া"
    },
    "av": {
        "name": "Avaric",
        "nativeName": "авар мацӀ, магӀарул мацӀ"
    },
    "ae": {
        "name": "Avestan",
        "nativeName": "avesta"
    },
    "ay": {
        "name": "Aymara",
        "nativeName": "aymar aru"
    },
    "az": {
        "name": "Azerbaijani",
        "nativeName": "azərbaycan dili"
    },
    "bm": {
        "name": "Bambara",
        "nativeName": "bamanankan"
    },
    "ba": {
        "name": "Bashkir",
        "nativeName": "башҡорт теле"
    },
    "eu": {
        "name": "Basque",
        "nativeName": "euskara, euskera"
    },
    "be": {
        "name": "Belarusian",
        "nativeName": "Беларуская"
    },
    "bn": {
        "name": "Bengali",
        "nativeName": "বাংলা"
    },
    "bh": {
        "name": "Bihari",
        "nativeName": "भोजपुरी"
    },
    "bi": {
        "name": "Bislama",
        "nativeName": "Bislama"
    },
    "bs": {
        "name": "Bosnian",
        "nativeName": "bosanski jezik"
    },
    "br": {
        "name": "Breton",
        "nativeName": "brezhoneg"
    },
    "bg": {
        "name": "Bulgarian",
        "nativeName": "български език"
    },
    "my": {
        "name": "Burmese",
        "nativeName": "ဗမာစာ"
    },
    "ca": {
        "name": "Catalan; Valencian",
        "nativeName": "Català"
    },
    "ch": {
        "name": "Chamorro",
        "nativeName": "Chamoru"
    },
    "ce": {
        "name": "Chechen",
        "nativeName": "нохчийн мотт"
    },
    "ny": {
        "name": "Chichewa; Chewa; Nyanja",
        "nativeName": "chiCheŵa, chinyanja"
    },
    "zh": {
        "name": "Chinese",
        "nativeName": "中文 (Zhōngwén), 汉语, 漢語"
    },
    "cv": {
        "name": "Chuvash",
        "nativeName": "чӑваш чӗлхи"
    },
    "kw": {
        "name": "Cornish",
        "nativeName": "Kernewek"
    },
    "co": {
        "name": "Corsican",
        "nativeName": "corsu, lingua corsa"
    },
    "cr": {
        "name": "Cree",
        "nativeName": "ᓀᐦᐃᔭᐍᐏᐣ"
    },
    "hr": {
        "name": "Croatian",
        "nativeName": "hrvatski"
    },
    "cs": {
        "name": "Czech",
        "nativeName": "česky, čeština"
    },
    "da": {
        "name": "Danish",
        "nativeName": "dansk"
    },
    "dv": {
        "name": "Divehi; Dhivehi; Maldivian;",
        "nativeName": "ދިވެހި"
    },
    "nl": {
        "name": "Dutch",
        "nativeName": "Nederlands, Vlaams"
    },
    "en": {
        "name": "English",
        "nativeName": "English"
    },
    "eo": {
        "name": "Esperanto",
        "nativeName": "Esperanto"
    },
    "et": {
        "name": "Estonian",
        "nativeName": "eesti, eesti keel"
    },
    "ee": {
        "name": "Ewe",
        "nativeName": "Eʋegbe"
    },
    "fo": {
        "name": "Faroese",
        "nativeName": "føroyskt"
    },
    "fj": {
        "name": "Fijian",
        "nativeName": "vosa Vakaviti"
    },
    "fi": {
        "name": "Finnish",
        "nativeName": "suomi, suomen kieli"
    },
    "fr": {
        "name": "French",
        "nativeName": "français, langue française"
    },
    "ff": {
        "name": "Fula; Fulah; Pulaar; Pular",
        "nativeName": "Fulfulde, Pulaar, Pular"
    },
    "gl": {
        "name": "Galician",
        "nativeName": "Galego"
    },
    "ka": {
        "name": "Georgian",
        "nativeName": "ქართული"
    },
    "de": {
        "name": "German",
        "nativeName": "Deutsch"
    },
    "el": {
        "name": "Greek, Modern",
        "nativeName": "Ελληνικά"
    },
    "gn": {
        "name": "Guaraní",
        "nativeName": "Avañeẽ"
    },
    "gu": {
        "name": "Gujarati",
        "nativeName": "ગુજરાતી"
    },
    "ht": {
        "name": "Haitian; Haitian Creole",
        "nativeName": "Kreyòl ayisyen"
    },
    "ha": {
        "name": "Hausa",
        "nativeName": "Hausa, هَوُسَ"
    },
    "he": {
        "name": "Hebrew (modern)",
        "nativeName": "עברית"
    },
    "hz": {
        "name": "Herero",
        "nativeName": "Otjiherero"
    },
    "hi": {
        "name": "Hindi",
        "nativeName": "हिन्दी, हिंदी"
    },
    "ho": {
        "name": "Hiri Motu",
        "nativeName": "Hiri Motu"
    },
    "hu": {
        "name": "Hungarian",
        "nativeName": "Magyar"
    },
    "ia": {
        "name": "Interlingua",
        "nativeName": "Interlingua"
    },
    "id": {
        "name": "Indonesian",
        "nativeName": "Bahasa Indonesia"
    },
    "ie": {
        "name": "Interlingue",
        "nativeName": "Originally called Occidental; then Interlingue after WWII"
    },
    "ga": {
        "name": "Irish",
        "nativeName": "Gaeilge"
    },
    "ig": {
        "name": "Igbo",
        "nativeName": "Asụsụ Igbo"
    },
    "ik": {
        "name": "Inupiaq",
        "nativeName": "Iñupiaq, Iñupiatun"
    },
    "io": {
        "name": "Ido",
        "nativeName": "Ido"
    },
    "is": {
        "name": "Icelandic",
        "nativeName": "Íslenska"
    },
    "it": {
        "name": "Italian",
        "nativeName": "Italiano"
    },
    "iu": {
        "name": "Inuktitut",
        "nativeName": "ᐃᓄᒃᑎᑐᑦ"
    },
    "ja": {
        "name": "Japanese",
        "nativeName": "日本語 (にほんご／にっぽんご)"
    },
    "jv": {
        "name": "Javanese",
        "nativeName": "basa Jawa"
    },
    "kl": {
        "name": "Kalaallisut, Greenlandic",
        "nativeName": "kalaallisut, kalaallit oqaasii"
    },
    "kn": {
        "name": "Kannada",
        "nativeName": "ಕನ್ನಡ"
    },
    "kr": {
        "name": "Kanuri",
        "nativeName": "Kanuri"
    },
    "ks": {
        "name": "Kashmiri",
        "nativeName": "कश्मीरी, كشميري‎"
    },
    "kk": {
        "name": "Kazakh",
        "nativeName": "Қазақ тілі"
    },
    "km": {
        "name": "Khmer",
        "nativeName": "ភាសាខ្មែរ"
    },
    "ki": {
        "name": "Kikuyu, Gikuyu",
        "nativeName": "Gĩkũyũ"
    },
    "rw": {
        "name": "Kinyarwanda",
        "nativeName": "Ikinyarwanda"
    },
    "ky": {
        "name": "Kirghiz, Kyrgyz",
        "nativeName": "кыргыз тили"
    },
    "kv": {
        "name": "Komi",
        "nativeName": "коми кыв"
    },
    "kg": {
        "name": "Kongo",
        "nativeName": "KiKongo"
    },
    "ko": {
        "name": "Korean",
        "nativeName": "한국어 (韓國語), 조선말 (朝鮮語)"
    },
    "ku": {
        "name": "Kurdish",
        "nativeName": "Kurdî, كوردی‎"
    },
    "kj": {
        "name": "Kwanyama, Kuanyama",
        "nativeName": "Kuanyama"
    },
    "la": {
        "name": "Latin",
        "nativeName": "latine, lingua latina"
    },
    "lb": {
        "name": "Luxembourgish, Letzeburgesch",
        "nativeName": "Lëtzebuergesch"
    },
    "lg": {
        "name": "Luganda",
        "nativeName": "Luganda"
    },
    "li": {
        "name": "Limburgish, Limburgan, Limburger",
        "nativeName": "Limburgs"
    },
    "ln": {
        "name": "Lingala",
        "nativeName": "Lingála"
    },
    "lo": {
        "name": "Lao",
        "nativeName": "ພາສາລາວ"
    },
    "lt": {
        "name": "Lithuanian",
        "nativeName": "lietuvių kalba"
    },
    "lu": {
        "name": "Luba-Katanga",
        "nativeName": ""
    },
    "lv": {
        "name": "Latvian",
        "nativeName": "latviešu valoda"
    },
    "gv": {
        "name": "Manx",
        "nativeName": "Gaelg, Gailck"
    },
    "mk": {
        "name": "Macedonian",
        "nativeName": "македонски јазик"
    },
    "mg": {
        "name": "Malagasy",
        "nativeName": "Malagasy fiteny"
    },
    "ms": {
        "name": "Malay",
        "nativeName": "bahasa Melayu, بهاس ملايو‎"
    },
    "ml": {
        "name": "Malayalam",
        "nativeName": "മലയാളം"
    },
    "mt": {
        "name": "Maltese",
        "nativeName": "Malti"
    },
    "mi": {
        "name": "Māori",
        "nativeName": "te reo Māori"
    },
    "mr": {
        "name": "Marathi (Marāṭhī)",
        "nativeName": "मराठी"
    },
    "mh": {
        "name": "Marshallese",
        "nativeName": "Kajin M̧ajeļ"
    },
    "mn": {
        "name": "Mongolian",
        "nativeName": "монгол"
    },
    "na": {
        "name": "Nauru",
        "nativeName": "Ekakairũ Naoero"
    },
    "nv": {
        "name": "Navajo, Navaho",
        "nativeName": "Diné bizaad, Dinékʼehǰí"
    },
    "nb": {
        "name": "Norwegian Bokmål",
        "nativeName": "Norsk bokmål"
    },
    "nd": {
        "name": "North Ndebele",
        "nativeName": "isiNdebele"
    },
    "ne": {
        "name": "Nepali",
        "nativeName": "नेपाली"
    },
    "ng": {
        "name": "Ndonga",
        "nativeName": "Owambo"
    },
    "nn": {
        "name": "Norwegian Nynorsk",
        "nativeName": "Norsk nynorsk"
    },
    "no": {
        "name": "Norwegian",
        "nativeName": "Norsk"
    },
    "ii": {
        "name": "Nuosu",
        "nativeName": "ꆈꌠ꒿ Nuosuhxop"
    },
    "nr": {
        "name": "South Ndebele",
        "nativeName": "isiNdebele"
    },
    "oc": {
        "name": "Occitan",
        "nativeName": "Occitan"
    },
    "oj": {
        "name": "Ojibwe, Ojibwa",
        "nativeName": "ᐊᓂᔑᓈᐯᒧᐎᓐ"
    },
    "cu": {
        "name": "Old Church Slavonic, Church Slavic, Church Slavonic, Old Bulgarian, Old Slavonic",
        "nativeName": "ѩзыкъ словѣньскъ"
    },
    "om": {
        "name": "Oromo",
        "nativeName": "Afaan Oromoo"
    },
    "or": {
        "name": "Oriya",
        "nativeName": "ଓଡ଼ିଆ"
    },
    "os": {
        "name": "Ossetian, Ossetic",
        "nativeName": "ирон æвзаг"
    },
    "pa": {
        "name": "Panjabi, Punjabi",
        "nativeName": "ਪੰਜਾਬੀ, پنجابی‎"
    },
    "pi": {
        "name": "Pāli",
        "nativeName": "पाऴि"
    },
    "fa": {
        "name": "Persian",
        "nativeName": "فارسی"
    },
    "pl": {
        "name": "Polish",
        "nativeName": "polski"
    },
    "ps": {
        "name": "Pashto, Pushto",
        "nativeName": "پښتو"
    },
    "pt": {
        "name": "Portuguese",
        "nativeName": "Português"
    },
    "qu": {
        "name": "Quechua",
        "nativeName": "Runa Simi, Kichwa"
    },
    "rm": {
        "name": "Romansh",
        "nativeName": "rumantsch grischun"
    },
    "rn": {
        "name": "Kirundi",
        "nativeName": "kiRundi"
    },
    "ro": {
        "name": "Romanian, Moldavian, Moldovan",
        "nativeName": "română"
    },
    "ru": {
        "name": "Russian",
        "nativeName": "русский язык"
    },
    "sa": {
        "name": "Sanskrit (Saṁskṛta)",
        "nativeName": "संस्कृतम्"
    },
    "sc": {
        "name": "Sardinian",
        "nativeName": "sardu"
    },
    "sd": {
        "name": "Sindhi",
        "nativeName": "सिन्धी, سنڌي، سندھی‎"
    },
    "se": {
        "name": "Northern Sami",
        "nativeName": "Davvisámegiella"
    },
    "sm": {
        "name": "Samoan",
        "nativeName": "gagana faa Samoa"
    },
    "sg": {
        "name": "Sango",
        "nativeName": "yângâ tî sängö"
    },
    "sr": {
        "name": "Serbian",
        "nativeName": "српски језик"
    },
    "gd": {
        "name": "Scottish Gaelic; Gaelic",
        "nativeName": "Gàidhlig"
    },
    "sn": {
        "name": "Shona",
        "nativeName": "chiShona"
    },
    "si": {
        "name": "Sinhala, Sinhalese",
        "nativeName": "සිංහල"
    },
    "sk": {
        "name": "Slovak",
        "nativeName": "slovenčina"
    },
    "sl": {
        "name": "Slovene",
        "nativeName": "slovenščina"
    },
    "so": {
        "name": "Somali",
        "nativeName": "Soomaaliga, af Soomaali"
    },
    "st": {
        "name": "Southern Sotho",
        "nativeName": "Sesotho"
    },
    "es": {
        "name": "Spanish; Castilian",
        "nativeName": "español, castellano"
    },
    "su": {
        "name": "Sundanese",
        "nativeName": "Basa Sunda"
    },
    "sw": {
        "name": "Swahili",
        "nativeName": "Kiswahili"
    },
    "ss": {
        "name": "Swati",
        "nativeName": "SiSwati"
    },
    "sv": {
        "name": "Swedish",
        "nativeName": "svenska"
    },
    "ta": {
        "name": "Tamil",
        "nativeName": "தமிழ்"
    },
    "te": {
        "name": "Telugu",
        "nativeName": "తెలుగు"
    },
    "tg": {
        "name": "Tajik",
        "nativeName": "тоҷикӣ, toğikī, تاجیکی‎"
    },
    "th": {
        "name": "Thai",
        "nativeName": "ไทย"
    },
    "ti": {
        "name": "Tigrinya",
        "nativeName": "ትግርኛ"
    },
    "bo": {
        "name": "Tibetan Standard, Tibetan, Central",
        "nativeName": "བོད་ཡིག"
    },
    "tk": {
        "name": "Turkmen",
        "nativeName": "Türkmen, Түркмен"
    },
    "tl": {
        "name": "Tagalog",
        "nativeName": "Wikang Tagalog, ᜏᜒᜃᜅ᜔ ᜆᜄᜎᜓᜄ᜔"
    },
    "tn": {
        "name": "Tswana",
        "nativeName": "Setswana"
    },
    "to": {
        "name": "Tonga (Tonga Islands)",
        "nativeName": "faka Tonga"
    },
    "tr": {
        "name": "Turkish",
        "nativeName": "Türkçe"
    },
    "ts": {
        "name": "Tsonga",
        "nativeName": "Xitsonga"
    },
    "tt": {
        "name": "Tatar",
        "nativeName": "татарча, tatarça, تاتارچا‎"
    },
    "tw": {
        "name": "Twi",
        "nativeName": "Twi"
    },
    "ty": {
        "name": "Tahitian",
        "nativeName": "Reo Tahiti"
    },
    "ug": {
        "name": "Uighur, Uyghur",
        "nativeName": "Uyƣurqə, ئۇيغۇرچە‎"
    },
    "uk": {
        "name": "Ukrainian",
        "nativeName": "українська"
    },
    "ur": {
        "name": "Urdu",
        "nativeName": "اردو"
    },
    "uz": {
        "name": "Uzbek",
        "nativeName": "zbek, Ўзбек, أۇزبېك‎"
    },
    "ve": {
        "name": "Venda",
        "nativeName": "Tshivenḓa"
    },
    "vi": {
        "name": "Vietnamese",
        "nativeName": "Tiếng Việt"
    },
    "vo": {
        "name": "Volapük",
        "nativeName": "Volapük"
    },
    "wa": {
        "name": "Walloon",
        "nativeName": "Walon"
    },
    "cy": {
        "name": "Welsh",
        "nativeName": "Cymraeg"
    },
    "wo": {
        "name": "Wolof",
        "nativeName": "Wollof"
    },
    "fy": {
        "name": "Western Frisian",
        "nativeName": "Frysk"
    },
    "xh": {
        "name": "Xhosa",
        "nativeName": "isiXhosa"
    },
    "yi": {
        "name": "Yiddish",
        "nativeName": "ייִדיש"
    },
    "yo": {
        "name": "Yoruba",
        "nativeName": "Yorùbá"
    },
    "za": {
        "name": "Zhuang, Chuang",
        "nativeName": "Saɯ cueŋƅ, Saw cuengh"
    }
};

/***/ }),

/***/ "./src/AppBundle/Resources/public/javascript/buy/actions/filterActions.js":
/*!********************************************************************************!*\
  !*** ./src/AppBundle/Resources/public/javascript/buy/actions/filterActions.js ***!
  \********************************************************************************/
/*! exports provided: addRight, removeRight, updateCountries, updateExclusive, updateIncludedCountries, updateMany, updateSport, updateEvent, clearFilter, clearUpdateFilter */
/*! exports used: addRight, clearFilter, clearUpdateFilter, removeRight, updateCountries, updateEvent, updateExclusive, updateIncludedCountries, updateMany, updateSport */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return addRight; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "d", function() { return removeRight; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "e", function() { return updateCountries; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "g", function() { return updateExclusive; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "h", function() { return updateIncludedCountries; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "i", function() { return updateMany; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "j", function() { return updateSport; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "f", function() { return updateEvent; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "b", function() { return clearFilter; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "c", function() { return clearUpdateFilter; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__reducers_filter__ = __webpack_require__(/*! ../reducers/filter */ "./src/AppBundle/Resources/public/javascript/buy/reducers/filter.js");


var addRight = function addRight(id) {
    return {
        type: __WEBPACK_IMPORTED_MODULE_0__reducers_filter__["b" /* filterTypes */].ADD_RIGHT,
        id: id
    };
};

var removeRight = function removeRight(id) {
    return {
        type: __WEBPACK_IMPORTED_MODULE_0__reducers_filter__["b" /* filterTypes */].REMOVE_RIGHT,
        id: id
    };
};

var updateCountries = function updateCountries(countries) {
    return {
        type: __WEBPACK_IMPORTED_MODULE_0__reducers_filter__["b" /* filterTypes */].UPDATE_COUNTRIES,
        countries: countries
    };
};

var updateExclusive = function updateExclusive(exclusive) {
    return {
        type: __WEBPACK_IMPORTED_MODULE_0__reducers_filter__["b" /* filterTypes */].UPDATE_EXCLUSIVE,
        exclusive: exclusive
    };
};

var updateIncludedCountries = function updateIncludedCountries(includeAllCountries) {
    return {
        type: __WEBPACK_IMPORTED_MODULE_0__reducers_filter__["b" /* filterTypes */].UPDATE_INCLUDED_COUNTRIES,
        includeAllCountries: includeAllCountries
    };
};

var updateMany = function updateMany(filters) {
    return {
        type: __WEBPACK_IMPORTED_MODULE_0__reducers_filter__["b" /* filterTypes */].UPDATE_MANY,
        filters: filters
    };
};

var updateSport = function updateSport(sport) {
    return {
        type: __WEBPACK_IMPORTED_MODULE_0__reducers_filter__["b" /* filterTypes */].UPDATE_SPORT,
        sport: sport
    };
};

var updateEvent = function updateEvent(event) {
    return {
        type: __WEBPACK_IMPORTED_MODULE_0__reducers_filter__["b" /* filterTypes */].UPDATE_EVENT,
        event: event
    };
};

var clearFilter = function clearFilter() {
    return {
        type: __WEBPACK_IMPORTED_MODULE_0__reducers_filter__["b" /* filterTypes */].CLEAR
    };
};

var clearUpdateFilter = function clearUpdateFilter() {
    return {
        type: __WEBPACK_IMPORTED_MODULE_0__reducers_filter__["b" /* filterTypes */].CLEAR_UPDATE
    };
};

/***/ }),

/***/ "./src/AppBundle/Resources/public/javascript/buy/actions/index.js":
/*!************************************************************************!*\
  !*** ./src/AppBundle/Resources/public/javascript/buy/actions/index.js ***!
  \************************************************************************/
/*! exports provided: test */
/*! exports used: test */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return test; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__reducers_marketplace__ = __webpack_require__(/*! ../reducers/marketplace */ "./src/AppBundle/Resources/public/javascript/buy/reducers/marketplace.js");


var nextTodoId = 0;

var test = function test(text) {
    return {
        type: __WEBPACK_IMPORTED_MODULE_0__reducers_marketplace__["b" /* marketplaceTypes */].TEST,
        id: nextTodoId++,
        text: text
    };
};

/***/ }),

/***/ "./src/AppBundle/Resources/public/javascript/buy/components/ContentListingEventDetails.js":
/*!************************************************************************************************!*\
  !*** ./src/AppBundle/Resources/public/javascript/buy/components/ContentListingEventDetails.js ***!
  \************************************************************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_react__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__main_actions_utils__ = __webpack_require__(/*! ../../main/actions/utils */ "./src/AppBundle/Resources/public/javascript/main/actions/utils.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_prop_types__ = __webpack_require__(/*! prop-types */ "./node_modules/prop-types/index.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_prop_types___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2_prop_types__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__main_components_Icons__ = __webpack_require__(/*! ../../main/components/Icons */ "./src/AppBundle/Resources/public/javascript/main/components/Icons.js");
var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }






var ContentListingEventDetails = function (_React$Component) {
    _inherits(ContentListingEventDetails, _React$Component);

    function ContentListingEventDetails(props) {
        _classCallCheck(this, ContentListingEventDetails);

        var _this = _possibleConstructorReturn(this, (ContentListingEventDetails.__proto__ || Object.getPrototypeOf(ContentListingEventDetails)).call(this, props));

        _this.getFixtures = function () {
            var seasons = _this.props.seasons;


            var fixtures = [];

            seasons.forEach(function (s) {
                if (s.fixtures) fixtures = [].concat(_toConsumableArray(fixtures), _toConsumableArray(s.fixtures));
            });

            return fixtures;
        };

        _this.getSchedules = function () {
            var _this$props = _this.props,
                seasons = _this$props.seasons,
                schedulesBySeason = _this$props.schedulesBySeason;

            var schedules = {
                rounds: [],
                matches: []
            };
            seasons.forEach(function (s) {
                if (s.schedules) Object.entries(s.schedules).forEach(function (sh) {
                    if (sh[1].selected && schedules.rounds.indexOf(sh[0]) === -1) {
                        schedules.rounds.push(sh[0]);
                        sh[1].matches.forEach(function (m) {
                            if (m.selected) schedules.matches.push(m);
                        });
                    }
                });
            });

            if (schedulesBySeason) {
                schedulesBySeason.forEach(function (s) {
                    if (s && Object.entries(s)) Object.entries(s).forEach(function (sh) {
                        if (schedules.rounds.indexOf(sh[0]) === -1) {
                            schedules.rounds.push(sh[0]);
                            sh[1].matches.forEach(function (m) {
                                if (m.selected) schedules.matches.push(m);
                            });
                        }
                    });
                });
            }

            return schedules;
        };

        _this.showProgramInfo = function () {
            var _this$props2 = _this.props,
                rightsPackage = _this$props2.rightsPackage,
                PROGRAM_NAME = _this$props2.PROGRAM_NAME;

            var show = false;

            if (rightsPackage.length > 1) return show;
            show = Object(__WEBPACK_IMPORTED_MODULE_1__main_actions_utils__["a" /* editedProgramSelected */])(rightsPackage);
            return show && PROGRAM_NAME;
        };

        _this.getSeasonsYears = function (seasons) {
            if (!seasons || seasons.length === 0) {
                return [];
            }
            var years = [];
            seasons.forEach(function (s) {
                if (s.from) {
                    years.push(s.from);
                }
                if (s.to) {
                    years.push(s.to);
                }
                if (!s.to && !s.from && s.year) {
                    var processedYears = s.year.split("/");
                    s.from = processedYears.length === 1 ? processedYears[0] : 2000 + Number(processedYears[0]);
                    s.to = processedYears.length === 1 ? false : 2000 + Number(processedYears[1]);

                    years.push(s.from);
                    if (s.to) {
                        years.push(s.to);
                    }
                }
            });
            years = years.sort(function (a, b) {
                return a - b;
            });

            if (years.length > 1) {
                return [years[0], years[years.length - 1]];
            } else {
                return [years[0]];
            }
        };

        _this.state = {};
        return _this;
    }

    _createClass(ContentListingEventDetails, [{
        key: "render",
        value: function render() {
            var _props = this.props,
                sports = _props.sports,
                sportCategory = _props.sportCategory,
                customTournament = _props.customTournament,
                customCategory = _props.customCategory,
                customId = _props.customId,
                tournament = _props.tournament,
                seasons = _props.seasons,
                showCustomId = _props.showCustomId,
                PROGRAM_YEAR = _props.PROGRAM_YEAR,
                PROGRAM_EPISODES = _props.PROGRAM_EPISODES;


            var schedules = this.getSchedules();
            var rounds = schedules.rounds;
            var matches = schedules.matches;
            var seasonTitle = seasons.length > 1 ? "Seasons: " : "Season: ";
            var episodesText = PROGRAM_EPISODES > 1 ? "episodes" : "episode";
            var seasonName = seasonTitle + seasons.map(function (season) {
                return season.year;
            }).join(", ");
            var seasonsArray = this.getSeasonsYears(seasons);
            var roundsTitle = rounds.length > 1 ? "Rounds: " : "Round: ";
            var roundsName = roundsTitle + rounds.join(", ");

            var tournamentArray = [];
            if (tournament) {
                tournamentArray = Array.isArray(tournament) ? tournament : [tournament];
            }

            return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                "div",
                { className: "listing-attributes col" },
                __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                    "div",
                    { className: "listing-item tournament" },
                    tournamentArray && tournamentArray.length > 0 && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        "span",
                        null,
                        __WEBPACK_IMPORTED_MODULE_3__main_components_Icons__["A" /* tournamentIcon */],
                        " ",
                        tournamentArray[0].name
                    ),
                    customTournament && !customId && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        "span",
                        null,
                        __WEBPACK_IMPORTED_MODULE_3__main_components_Icons__["A" /* tournamentIcon */],
                        " ",
                        customTournament
                    ),
                    tournamentArray && tournamentArray.length === 0 && !customTournament && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        "span",
                        null,
                        __WEBPACK_IMPORTED_MODULE_3__main_components_Icons__["A" /* tournamentIcon */],
                        " ",
                        this.context.t("LISTING_DETAILS_GENERAL_CONTENT")
                    )
                ),
                __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                    "div",
                    { className: "listing-item" },
                    sports && sports.length === 1 && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        "span",
                        null,
                        __WEBPACK_IMPORTED_MODULE_3__main_components_Icons__["z" /* sportIcon */],
                        " ",
                        sports[0].name
                    ),
                    sports && sports.length > 1 && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        "span",
                        null,
                        __WEBPACK_IMPORTED_MODULE_3__main_components_Icons__["z" /* sportIcon */],
                        " ",
                        this.context.t("LISTING_DETAILS_MULTIPLE_SPORTS")
                    ),
                    sportCategory && sportCategory.length > 0 ? __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        "span",
                        null,
                        __WEBPACK_IMPORTED_MODULE_3__main_components_Icons__["y" /* sportCategoryIcon */],
                        " ",
                        sportCategory[0].name
                    ) : __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        "span",
                        null,
                        __WEBPACK_IMPORTED_MODULE_3__main_components_Icons__["y" /* sportCategoryIcon */],
                        " ",
                        this.context.t("International")
                    )
                ),
                __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                    "div",
                    { className: "listing-item" },
                    !this.showProgramInfo() && seasonsArray.length > 0 && (seasonsArray.length > 1 ? __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        "span",
                        null,
                        __WEBPACK_IMPORTED_MODULE_3__main_components_Icons__["w" /* seasonReleaseIcon */],
                        " from ",
                        seasonsArray[0],
                        " to ",
                        seasonsArray[1]
                    ) : __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        "span",
                        null,
                        __WEBPACK_IMPORTED_MODULE_3__main_components_Icons__["w" /* seasonReleaseIcon */],
                        " Season ",
                        seasonsArray[0]
                    )),
                    this.showProgramInfo() && PROGRAM_YEAR && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        "span",
                        null,
                        __WEBPACK_IMPORTED_MODULE_3__main_components_Icons__["w" /* seasonReleaseIcon */],
                        " Release year: ",
                        PROGRAM_YEAR
                    ),
                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        "span",
                        null,
                        __WEBPACK_IMPORTED_MODULE_3__main_components_Icons__["l" /* eventTimeIcon */],
                        " todo: event time"
                    ),
                    !this.showProgramInfo() && this.getFixtures().length > 1 && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        "span",
                        null,
                        __WEBPACK_IMPORTED_MODULE_3__main_components_Icons__["p" /* fixturesEpisodeIcon */],
                        " ",
                        this.getFixtures().length,
                        " fixtures"
                    ),
                    !this.showProgramInfo() && this.getFixtures().length === 1 && this.getFixtures()[0].name && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        "span",
                        null,
                        __WEBPACK_IMPORTED_MODULE_3__main_components_Icons__["p" /* fixturesEpisodeIcon */],
                        " ",
                        this.getFixtures()[0].name
                    ),
                    this.showProgramInfo() && PROGRAM_EPISODES && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        "span",
                        null,
                        __WEBPACK_IMPORTED_MODULE_3__main_components_Icons__["p" /* fixturesEpisodeIcon */],
                        " ",
                        PROGRAM_EPISODES,
                        " ",
                        episodesText
                    )
                )
            );
        }
    }]);

    return ContentListingEventDetails;
}(__WEBPACK_IMPORTED_MODULE_0_react___default.a.Component);

ContentListingEventDetails.contextTypes = {
    t: __WEBPACK_IMPORTED_MODULE_2_prop_types__["PropTypes"].func.isRequired
};

/* harmony default export */ __webpack_exports__["a"] = (ContentListingEventDetails);

/***/ }),

/***/ "./src/AppBundle/Resources/public/javascript/buy/components/ContentListingRightsPackage.js":
/*!*************************************************************************************************!*\
  !*** ./src/AppBundle/Resources/public/javascript/buy/components/ContentListingRightsPackage.js ***!
  \*************************************************************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_react__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__main_components_Icons__ = __webpack_require__(/*! ../../main/components/Icons */ "./src/AppBundle/Resources/public/javascript/main/components/Icons.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_prop_types__ = __webpack_require__(/*! prop-types */ "./node_modules/prop-types/index.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_prop_types___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2_prop_types__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_lodash_unionBy__ = __webpack_require__(/*! lodash/unionBy */ "./node_modules/lodash/unionBy.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_lodash_unionBy___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_3_lodash_unionBy__);





var ContentListingRightsPackage = function ContentListingRightsPackage(_ref, context) {
    var defaultRightsPackage = _ref.defaultRightsPackage,
        rightsPackage = _ref.rightsPackage;


    var packages = __WEBPACK_IMPORTED_MODULE_3_lodash_unionBy___default()(rightsPackage, defaultRightsPackage, "id"); // overwrite defaultRightsPackage by user chosen rightsPackage
    packages = packages.sort(function (a, b) {
        return a.id - b.id;
    }); //sort by id

    return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
        "div",
        { className: "listing-rights col" },
        packages.slice(0, 6).map(function (rp, i) {
            var icon = '';

            if (rp.exclusive == null) {
                icon = __WEBPACK_IMPORTED_MODULE_1__main_components_Icons__["q" /* greyMinusIcon */];
            } else if (rp.exclusive) {
                icon = __WEBPACK_IMPORTED_MODULE_1__main_components_Icons__["B" /* yellowCheckIcon */];
            } else {
                icon = __WEBPACK_IMPORTED_MODULE_1__main_components_Icons__["d" /* blueCheckIcon */];
            }

            return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                "div",
                { key: i, className: "listing-item" },
                __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement("img", { style: { width: 15, height: 15, margin: '0 5px' }, src: icon }),
                __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                    "div",
                    { style: { display: 'flex', flexDirection: "row" } },
                    rp.shortLabel === "PR" ? context.t("LISTING_DETAILS_EDITED_PROGRAM") : rp.name
                )
            );
        })
    );
};

ContentListingRightsPackage.contextTypes = {
    t: __WEBPACK_IMPORTED_MODULE_2_prop_types__["PropTypes"].func.isRequired
};

/* harmony default export */ __webpack_exports__["a"] = (ContentListingRightsPackage);

/***/ }),

/***/ "./src/AppBundle/Resources/public/javascript/buy/components/EventFilter.js":
/*!*********************************************************************************!*\
  !*** ./src/AppBundle/Resources/public/javascript/buy/components/EventFilter.js ***!
  \*********************************************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_react__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_react_redux__ = __webpack_require__(/*! react-redux */ "./node_modules/react-redux/es/index.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_react_select__ = __webpack_require__(/*! react-select */ "./node_modules/react-select/dist/react-select.es.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__actions_filterActions__ = __webpack_require__(/*! ../actions/filterActions */ "./src/AppBundle/Resources/public/javascript/buy/actions/filterActions.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__main_components_Icons__ = __webpack_require__(/*! ../../main/components/Icons */ "./src/AppBundle/Resources/public/javascript/main/components/Icons.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5_prop_types__ = __webpack_require__(/*! prop-types */ "./node_modules/prop-types/index.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5_prop_types___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_5_prop_types__);
var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }








var EventFilter = function (_React$Component) {
    _inherits(EventFilter, _React$Component);

    function EventFilter(props) {
        _classCallCheck(this, EventFilter);

        var _this = _possibleConstructorReturn(this, (EventFilter.__proto__ || Object.getPrototypeOf(EventFilter)).call(this, props));

        _this.getOptions = function () {
            var _this$props = _this.props,
                _this$props$filter = _this$props.filter,
                filter = _this$props$filter === undefined ? [] : _this$props$filter,
                available = _this$props.available;
            var sports = _this.state.sports;


            var countries = sports.filter(function (s) {
                return s.name;
            }).map(function (i, k) {
                return { value: i.name, label: i.name };
            });

            return [{ value: null, label: 'All sports' }].concat(_toConsumableArray(countries));
        };

        _this.showTab = function (tab) {
            _this.setState({ tab: tab });
        };

        _this.selectSport = function (e) {

            _this.props.selectSport(e);
        };

        _this.updateEvent = function (e) {
            _this.props.updateEvent(_this.refs.search_field.value);
        };

        _this.handleFilter = function () {
            var onFilter = _this.props.onFilter;

            onFilter();
        };

        _this.handleKeyPress = function (e) {
            if (e.key === 'Enter') {
                _this.handleFilter();
            }
        };

        _this.state = {
            sports: []
        };

        _this.searchIcon = __WEBPACK_IMPORTED_MODULE_4__main_components_Icons__["v" /* searchIcon */];
        return _this;
    }

    _createClass(EventFilter, [{
        key: 'componentDidMount',
        value: function componentDidMount() {
            var _this2 = this;

            if (ContentArena.Data.ActiveSports.length === 0) {
                ContentArena.Api.getActiveSports().done(function (sports) {
                    ContentArena.Data.ActiveSports = sports;
                    _this2.setState({ sports: sports });
                });
            } else {
                this.setState({ sports: ContentArena.Data.ActiveSports });
            }
        }
    }, {
        key: 'componentWillReceiveProps',
        value: function componentWillReceiveProps(nextProps) {}
    }, {
        key: 'render',
        value: function render() {
            var _props = this.props,
                sport = _props.sport,
                event = _props.event;

            return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                'div',
                null,
                __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                    'div',
                    { className: 'box' },
                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        'div',
                        { className: 'search-btn',
                            onClick: this.handleFilter
                        },
                        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('img', { src: this.searchIcon })
                    ),
                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('input', {
                        className: 'search-input ca-form-control',
                        defaultValue: event,
                        onKeyPress: this.handleKeyPress,
                        onChange: this.updateEvent,
                        ref: 'search_field',
                        type: 'text',
                        id: 'inputSearch',
                        name: 'event',
                        placeholder: this.context.t("Search", {}, "Marketplace - Placeholder for Search input") })
                ),
                __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                    'div',
                    { className: 'box' },
                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        'div',
                        { className: 'title' },
                        this.context.t("MARKETPLACE_LABEL_FILTER_SPORT")
                    ),
                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_2_react_select__["default"], {
                        name: 'form-field-name',
                        multi: false,
                        className: 'sport-input-filter',
                        onChange: this.selectSport,
                        value: sport,
                        options: this.getOptions()
                    })
                )
            );
        }
    }]);

    return EventFilter;
}(__WEBPACK_IMPORTED_MODULE_0_react___default.a.Component);

EventFilter.contextTypes = {
    t: __WEBPACK_IMPORTED_MODULE_5_prop_types__["PropTypes"].func.isRequired
};

var mapStateToProps = function mapStateToProps(state) {
    return state.filter;
};

var mapDispatchToProps = function mapDispatchToProps(dispatch) {
    return {
        onClick: function onClick(id) {
            return dispatch(test(id));
        },
        selectSport: function selectSport(sport) {
            return dispatch(Object(__WEBPACK_IMPORTED_MODULE_3__actions_filterActions__["j" /* updateSport */])(sport));
        },
        updateEvent: function updateEvent(event) {
            return dispatch(Object(__WEBPACK_IMPORTED_MODULE_3__actions_filterActions__["f" /* updateEvent */])(event));
        }
    };
};

/* harmony default export */ __webpack_exports__["a"] = (Object(__WEBPACK_IMPORTED_MODULE_1_react_redux__["connect"])(mapStateToProps, mapDispatchToProps)(EventFilter));

/***/ }),

/***/ "./src/AppBundle/Resources/public/javascript/buy/components/RightsFilter.js":
/*!**********************************************************************************!*\
  !*** ./src/AppBundle/Resources/public/javascript/buy/components/RightsFilter.js ***!
  \**********************************************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_react__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_react_redux__ = __webpack_require__(/*! react-redux */ "./node_modules/react-redux/es/index.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__actions_filterActions__ = __webpack_require__(/*! ../actions/filterActions */ "./src/AppBundle/Resources/public/javascript/buy/actions/filterActions.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__main_components_CountrySelector__ = __webpack_require__(/*! ../../main/components/CountrySelector */ "./src/AppBundle/Resources/public/javascript/main/components/CountrySelector.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_prop_types__ = __webpack_require__(/*! prop-types */ "./node_modules/prop-types/index.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_prop_types___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_4_prop_types__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__main_components_PopupCountrySelector__ = __webpack_require__(/*! ../../main/components/PopupCountrySelector */ "./src/AppBundle/Resources/public/javascript/main/components/PopupCountrySelector.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__main_components_Icons__ = __webpack_require__(/*! ../../main/components/Icons */ "./src/AppBundle/Resources/public/javascript/main/components/Icons.js");
var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }









var RightsFilter = function (_React$Component) {
    _inherits(RightsFilter, _React$Component);

    function RightsFilter(props) {
        _classCallCheck(this, RightsFilter);

        var _this = _possibleConstructorReturn(this, (RightsFilter.__proto__ || Object.getPrototypeOf(RightsFilter)).call(this, props));

        _this.selectTerritory = function (countries) {
            countries = countries[0] === null ? [] : countries;
            var includeAllCountries = _this.refs.countrySelector.state.selectedOption === "multiple";
            _this.props.updateCountries(countries);
            _this.props.updateIncludedCountries(includeAllCountries);
        };

        _this.state = {};

        _this.worldwideCountries = 242;
        return _this;
    }

    _createClass(RightsFilter, [{
        key: "componentWillReceiveProps",
        value: function componentWillReceiveProps(nextProps) {
            console.log("RightsFilter", nextProps);
        }
    }, {
        key: "render",
        value: function render() {
            var _this2 = this;

            var _props = this.props,
                rights = _props.rights,
                rightsPackage = _props.rightsPackage,
                countries = _props.countries,
                onFilter = _props.onFilter,
                exclusive = _props.exclusive,
                clearFilter = _props.clearFilter,
                includeAllCountries = _props.includeAllCountries;

            var countriesValue = countries[0] && countries[0] ? { label: countries[0], value: countries[0] } : '';

            return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                "div",
                null,
                __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                    "div",
                    { className: "box" },
                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        "div",
                        { className: "title" },
                        this.context.t("MARKETPLACE_LABEL_FILTER_TERRITORIES")
                    ),
                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        "div",
                        { style: { display: 'flex', alignItems: 'center' } },
                        countries.length <= 1 && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_3__main_components_CountrySelector__["a" /* default */], {
                            multi: false,
                            className: "base-input-select",
                            value: countriesValue,
                            onChange: function onChange(c) {
                                _this2.selectTerritory([c]);
                            } }),
                        countries.length > 1 && countries.length !== this.worldwideCountries && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement("input", { type: "text", className: "ca-form-control", value: countries.length + " territories", disabled: true }),
                        countries.length === this.worldwideCountries && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement("input", { type: "text", className: "ca-form-control", value: "Worldwide", readonly: true }),
                        countries.length > 1 && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement("img", { className: "territories-icon", src: __WEBPACK_IMPORTED_MODULE_6__main_components_Icons__["g" /* cancelIcon */],
                            onClick: function onClick() {
                                _this2.selectTerritory([]);
                            } }),
                        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_5__main_components_PopupCountrySelector__["a" /* default */], { ref: "countrySelector",
                            value: countries,
                            includeAllCountries: includeAllCountries,
                            onSelect: this.selectTerritory
                        })
                    )
                ),
                __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                    "div",
                    { className: "box" },
                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        "div",
                        { id: "rights-packages", className: "filter-rights" },
                        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                            "div",
                            { className: "title" },
                            this.context.t("MARKETPLACE_LABEL_FILTER_RIGHTS")
                        ),
                        rightsPackage && rightsPackage.map(function (right, i) {
                            return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                "div",
                                { key: right.id, className: "filter-right" },
                                __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement("input", {
                                    className: "ca-checkbox checkbox-item",
                                    type: "checkbox",
                                    checked: rights.indexOf(right.id) !== -1,
                                    onChange: function onChange(e) {
                                        if (e.target.checked) {
                                            _this2.props.addRight(right.id);
                                        } else {
                                            _this2.props.removeRight(right.id);
                                        }
                                    },
                                    id: right.id
                                }),
                                __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                    "label",
                                    { htmlFor: right.id },
                                    right.name
                                )
                            );
                        }),
                        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement("div", { style: { background: '#999', height: 1, margin: '20px 0' } }),
                        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                            "div",
                            { className: "filter-right" },
                            __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement("input", {
                                type: "checkbox",
                                checked: exclusive,
                                className: "ca-checkbox checkbox-item",
                                onChange: function onChange(e) {
                                    _this2.props.updateExclusive(e.target.checked);
                                }
                            }),
                            this.context.t("MARKETPLACE_LABEL_FILTER_EXCLUSIVE")
                        )
                    )
                ),
                __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                    "div",
                    { className: "box" },
                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        "div",
                        { style: {
                                display: 'flex',
                                alignItems: 'center',
                                flexDirection: 'column'
                            } },
                        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                            "button",
                            { className: "ca-btn ca-btn-primary", style: { margin: 5 }, onClick: onFilter },
                            this.context.t("MARKETPLACE_BUTTON_APPLY")
                        ),
                        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                            "button",
                            { className: "ca-btn ca-btn-link", style: { margin: 5 }, onClick: clearFilter },
                            this.context.t("MARKETPLACE_BUTTON_CLEAR")
                        )
                    )
                )
            );
        }
    }]);

    return RightsFilter;
}(__WEBPACK_IMPORTED_MODULE_0_react___default.a.Component);

RightsFilter.contextTypes = {
    t: __WEBPACK_IMPORTED_MODULE_4_prop_types__["PropTypes"].func.isRequired
};

var mapStateToProps = function mapStateToProps(state) {
    return state.filter;
};

var mapDispatchToProps = function mapDispatchToProps(dispatch) {
    return {
        addRight: function addRight(id) {
            return dispatch(Object(__WEBPACK_IMPORTED_MODULE_2__actions_filterActions__["a" /* addRight */])(id));
        },
        removeRight: function removeRight(id) {
            return dispatch(Object(__WEBPACK_IMPORTED_MODULE_2__actions_filterActions__["d" /* removeRight */])(id));
        },
        updateCountries: function updateCountries(countries) {
            return dispatch(Object(__WEBPACK_IMPORTED_MODULE_2__actions_filterActions__["e" /* updateCountries */])(countries));
        },
        updateExclusive: function updateExclusive(exclusive) {
            return dispatch(Object(__WEBPACK_IMPORTED_MODULE_2__actions_filterActions__["g" /* updateExclusive */])(exclusive));
        },
        updateIncludedCountries: function updateIncludedCountries(includeAllCountries) {
            return dispatch(Object(__WEBPACK_IMPORTED_MODULE_2__actions_filterActions__["h" /* updateIncludedCountries */])(includeAllCountries));
        },
        clearFilter: function clearFilter() {
            return dispatch(Object(__WEBPACK_IMPORTED_MODULE_2__actions_filterActions__["b" /* clearFilter */])());
        }
    };
};

/* harmony default export */ __webpack_exports__["a"] = (Object(__WEBPACK_IMPORTED_MODULE_1_react_redux__["connect"])(mapStateToProps, mapDispatchToProps)(RightsFilter));

/***/ }),

/***/ "./src/AppBundle/Resources/public/javascript/buy/containers/CommercialTerms.js":
/*!*************************************************************************************!*\
  !*** ./src/AppBundle/Resources/public/javascript/buy/containers/CommercialTerms.js ***!
  \*************************************************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_react__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_react_redux__ = __webpack_require__(/*! react-redux */ "./node_modules/react-redux/es/index.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__actions__ = __webpack_require__(/*! ../actions */ "./src/AppBundle/Resources/public/javascript/buy/actions/index.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__SalesPackages__ = __webpack_require__(/*! ./SalesPackages */ "./src/AppBundle/Resources/public/javascript/buy/containers/SalesPackages.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_prop_types__ = __webpack_require__(/*! prop-types */ "./node_modules/prop-types/index.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_prop_types___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_4_prop_types__);
var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }







var CommercialTerms = function (_React$Component) {
    _inherits(CommercialTerms, _React$Component);

    function CommercialTerms(props) {
        _classCallCheck(this, CommercialTerms);

        var _this = _possibleConstructorReturn(this, (CommercialTerms.__proto__ || Object.getPrototypeOf(CommercialTerms)).call(this, props));

        _this.state = {};
        _this.noInfoText = "No information available";
        return _this;
    }

    _createClass(CommercialTerms, [{
        key: "render",
        value: function render() {
            var _props = this.props,
                salesPackages = _props.salesPackages,
                onSelectPackage = _props.onSelectPackage,
                programDescription = _props.programDescription,
                profile = _props.profile,
                customId = _props.customId;

            return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                "div",
                { style: { marginTop: 25 } },
                __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                    "div",
                    { className: "full-item-box" },
                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        "label",
                        null,
                        this.context.t("LISTING_DETAILS_EVENT_TITLE_PROGRAM_DESCRIPTION")
                    ),
                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        "div",
                        { className: "full-item-content" },
                        programDescription && programDescription,
                        !programDescription && this.noInfoText
                    )
                ),
                __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_3__SalesPackages__["a" /* default */], {
                    listingId: customId,
                    profile: profile,
                    onSelectPackage: onSelectPackage,
                    salesPackages: salesPackages })
            );
        }
    }]);

    return CommercialTerms;
}(__WEBPACK_IMPORTED_MODULE_0_react___default.a.Component);

CommercialTerms.contextTypes = {
    t: __WEBPACK_IMPORTED_MODULE_4_prop_types__["PropTypes"].func.isRequired
};

var mapStateToProps = function mapStateToProps(state) {
    return state;
};

var mapDispatchToProps = function mapDispatchToProps(dispatch) {
    return {
        onClick: function onClick(id) {
            return dispatch(Object(__WEBPACK_IMPORTED_MODULE_2__actions__["a" /* test */])(id));
        }
    };
};

/* harmony default export */ __webpack_exports__["a"] = (Object(__WEBPACK_IMPORTED_MODULE_1_react_redux__["connect"])(mapStateToProps, mapDispatchToProps)(CommercialTerms));

/***/ }),

/***/ "./src/AppBundle/Resources/public/javascript/buy/containers/ContentInformation.js":
/*!****************************************************************************************!*\
  !*** ./src/AppBundle/Resources/public/javascript/buy/containers/ContentInformation.js ***!
  \****************************************************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_react__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_react_redux__ = __webpack_require__(/*! react-redux */ "./node_modules/react-redux/es/index.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__actions__ = __webpack_require__(/*! ../actions */ "./src/AppBundle/Resources/public/javascript/buy/actions/index.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__sell_components_SellFormItems__ = __webpack_require__(/*! ../../sell/components/SellFormItems */ "./src/AppBundle/Resources/public/javascript/sell/components/SellFormItems.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_prop_types__ = __webpack_require__(/*! prop-types */ "./node_modules/prop-types/index.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_prop_types___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_4_prop_types__);
var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }







var ContentInformation = function (_React$Component) {
    _inherits(ContentInformation, _React$Component);

    function ContentInformation(props) {
        _classCallCheck(this, ContentInformation);

        var _this2 = _possibleConstructorReturn(this, (ContentInformation.__proto__ || Object.getPrototypeOf(ContentInformation)).call(this, props));

        _this2.state = {
            seasons: props.seasons
        };
        _this2.baseDir = assetsBaseDir + "../";
        _this2.pdfIcon = assetsBaseDir + "app/images/pdf.png";
        return _this2;
    }

    _createClass(ContentInformation, [{
        key: "componentDidMount",
        value: function componentDidMount() {
            this.loadSchedule();
        }
    }, {
        key: "componentWillReceiveProps",
        value: function componentWillReceiveProps(nextProps) {}
    }, {
        key: "loadSchedule",
        value: function loadSchedule() {

            var _this = this;
            var _props = this.props,
                seasons = _props.seasons,
                schedulesBySeason = _props.schedulesBySeason;


            seasons.forEach(function (season, index) {
                if (!season.schedules && !season.custom) {
                    _this.setState({ loadingSchedule: true });
                    ContentArena.Api.getSchedule(season.externalId).done(function (schedules) {
                        _this.setState({ loadingSchedule: false });
                        var keys = [];
                        if (schedulesBySeason && schedulesBySeason[index]) {
                            keys = Object.keys(schedulesBySeason[index]);
                            keys.forEach(function (k) {
                                schedulesBySeason[index][k].matches.forEach(function (m) {
                                    if (m.selected) {
                                        schedules[k].matches.get(m.externalId).selected = true;
                                    }
                                });
                                schedules[k].selected = true;
                            });
                        }

                        var tempSeasons = _this.state.seasons;
                        tempSeasons[index].schedules = schedules;
                        if (keys.length > 0) tempSeasons[index].showchedules = true;

                        _this.setState({
                            seasons: tempSeasons
                        });
                    });
                }
            });
        }
    }, {
        key: "render",
        value: function render() {
            var _this3 = this;

            var _props2 = this.props,
                description = _props2.description,
                website = _props2.website,
                attachments = _props2.attachments;
            var seasons = this.state.seasons;

            return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                "div",
                { style: { marginTop: 20 } },
                seasons && seasons.length > 0 && seasons.map(function (season, key) {
                    return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        "div",
                        { key: "season-" + key, className: "season-details" },
                        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                            "div",
                            { className: "season-name" },
                            _this3.context.t("LISTING_DETAILS_EVENT_TITLE_SEASON"),
                            " ",
                            season.name
                        ),
                        (!season.fixtures || season.fixtures.length === 0) && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_3__sell_components_SellFormItems__["e" /* StaticSchedules */], { season: key, seasons: seasons }),
                        season.fixtures && season.fixtures.length > 0 && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                            "div",
                            { className: "schedule" },
                            season.fixtures.map(function (fixture) {
                                return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                    "div",
                                    { className: "matchday" },
                                    fixture.name
                                );
                            })
                        )
                    );
                }),
                description && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                    "div",
                    { className: "full-item-box" },
                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        "label",
                        null,
                        this.context.t("LISTING_DETAILS_EVENT_TITLE_DESCRIPTION")
                    ),
                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        "div",
                        { className: "full-item-content" },
                        description
                    )
                ),
                website && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                    "div",
                    { className: "full-item-box",
                        style: {
                            flexDirection: 'row',
                            width: '70%'
                        } },
                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        "label",
                        null,
                        this.context.t("LISTING_DETAILS_EVENT_TITLE_WEBSITE")
                    ),
                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        "div",
                        { style: { padding: 12, border: '1px solid lightgrey', marginLeft: 3, minWidth: 220 } },
                        website && website.map(function (website) {
                            return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                "div",
                                null,
                                __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                    "a",
                                    { target: "_blank", href: website },
                                    website
                                )
                            );
                        })
                    )
                ),
                attachments && attachments.length > 0 && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                    "div",
                    { className: "full-item-box",
                        style: {
                            flexDirection: 'row',
                            width: '70%'
                        } },
                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        "label",
                        { style: {
                                height: 'auto'
                            } },
                        this.context.t("LISTING_DETAILS_EVENT_TITLE_ATTACHMENTS")
                    ),
                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        "div",
                        { style: { display: "flex", flexDirection: 'column' } },
                        attachments.map(function (a) {
                            return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                "div",
                                { onClick: function onClick() {}, style: {
                                        padding: 12, border: '1px solid lightgrey', marginLeft: 3, minWidth: 220,
                                        display: 'flex'
                                    } },
                                __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                    "a",
                                    { download: a.name, target: "_blank", href: _this3.baseDir + a.file, style: {
                                            display: 'inline-flex',
                                            paddingRight: 30
                                        } },
                                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement("img", { style: { margin: '-2px 5px 0 0' }, src: _this3.pdfIcon }),
                                    "  ",
                                    a.name
                                )
                            );
                        })
                    )
                )
            );
        }
    }]);

    return ContentInformation;
}(__WEBPACK_IMPORTED_MODULE_0_react___default.a.Component);

ContentInformation.contextTypes = {
    t: __WEBPACK_IMPORTED_MODULE_4_prop_types__["PropTypes"].func.isRequired
};

var mapStateToProps = function mapStateToProps(state) {
    return state;
};

var mapDispatchToProps = function mapDispatchToProps(dispatch) {
    return {
        onClick: function onClick(id) {
            return dispatch(Object(__WEBPACK_IMPORTED_MODULE_2__actions__["a" /* test */])(id));
        }
    };
};

/* harmony default export */ __webpack_exports__["a"] = (Object(__WEBPACK_IMPORTED_MODULE_1_react_redux__["connect"])(mapStateToProps, mapDispatchToProps)(ContentInformation));

/***/ }),

/***/ "./src/AppBundle/Resources/public/javascript/buy/containers/ListingDetails.js":
/*!************************************************************************************!*\
  !*** ./src/AppBundle/Resources/public/javascript/buy/containers/ListingDetails.js ***!
  \************************************************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_react__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_react_redux__ = __webpack_require__(/*! react-redux */ "./node_modules/react-redux/es/index.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__actions__ = __webpack_require__(/*! ../actions */ "./src/AppBundle/Resources/public/javascript/buy/actions/index.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__CommercialTerms__ = __webpack_require__(/*! ./CommercialTerms */ "./src/AppBundle/Resources/public/javascript/buy/containers/CommercialTerms.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__ContentInformation__ = __webpack_require__(/*! ./ContentInformation */ "./src/AppBundle/Resources/public/javascript/buy/containers/ContentInformation.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__TermSheet__ = __webpack_require__(/*! ./TermSheet */ "./src/AppBundle/Resources/public/javascript/buy/containers/TermSheet.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__ProgramDetails__ = __webpack_require__(/*! ./ProgramDetails */ "./src/AppBundle/Resources/public/javascript/buy/containers/ProgramDetails.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__Seller__ = __webpack_require__(/*! ./Seller */ "./src/AppBundle/Resources/public/javascript/buy/containers/Seller.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8_moment_moment__ = __webpack_require__(/*! moment/moment */ "./node_modules/moment/moment.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8_moment_moment___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_8_moment_moment__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9_react_router_dom__ = __webpack_require__(/*! react-router-dom */ "./node_modules/react-router-dom/es/index.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_10__buy_components_ContentListingEventDetails__ = __webpack_require__(/*! ../../buy/components/ContentListingEventDetails */ "./src/AppBundle/Resources/public/javascript/buy/components/ContentListingEventDetails.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_11__main_components_DigitalSignature__ = __webpack_require__(/*! ../../main/components/DigitalSignature */ "./src/AppBundle/Resources/public/javascript/main/components/DigitalSignature.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_12__main_components_SendMessage__ = __webpack_require__(/*! ../../main/components/SendMessage */ "./src/AppBundle/Resources/public/javascript/main/components/SendMessage.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_13__main_actions_utils__ = __webpack_require__(/*! ../../main/actions/utils */ "./src/AppBundle/Resources/public/javascript/main/actions/utils.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_14__main_styles_custom__ = __webpack_require__(/*! ../../main/styles/custom */ "./src/AppBundle/Resources/public/javascript/main/styles/custom.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_15__sell_actions_validationActions__ = __webpack_require__(/*! ../../sell/actions/validationActions */ "./src/AppBundle/Resources/public/javascript/sell/actions/validationActions.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_16_react_modal__ = __webpack_require__(/*! react-modal */ "./node_modules/react-modal/lib/index.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_16_react_modal___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_16_react_modal__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_17__main_components_CountrySelector__ = __webpack_require__(/*! ../../main/components/CountrySelector */ "./src/AppBundle/Resources/public/javascript/main/components/CountrySelector.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_18_react_tooltip__ = __webpack_require__(/*! react-tooltip */ "./node_modules/react-tooltip/dist/index.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_18_react_tooltip___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_18_react_tooltip__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_19_prop_types__ = __webpack_require__(/*! prop-types */ "./node_modules/prop-types/index.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_19_prop_types___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_19_prop_types__);
var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }





















var labelStyle = { height: "30px", fontSize: "12px", width: '400px' };
var inputStyle = { width: '380px', margin: 0, height: "30px" };
var bidButtonStyle = { height: 34, width: 75, padding: 5, marginLeft: 10, fontSize: 14, marginRight: 10 };
var bidTextBoxStyle = {
    backgroundColor: "#fff",
    padding: '5px 10px',
    border: '1px solid lightgrey',
    marginLeft: 5
};

var ListingDetails = function (_React$Component) {
    _inherits(ListingDetails, _React$Component);

    function ListingDetails(props) {
        _classCallCheck(this, ListingDetails);

        var _this2 = _possibleConstructorReturn(this, (ListingDetails.__proto__ || Object.getPrototypeOf(ListingDetails)).call(this, props));

        _this2.toggleBuyingMode = function () {
            _this2.setState({ buyingMode: !_this2.state.buyingMode });
        };

        _this2.selectPackage = function (selectedPackage, customId) {
            var history = _this2.props.history;


            history.push('/listing/' + customId + '/checkout/' + selectedPackage.id);
            _this2.setState({
                selectedPackage: selectedPackage,
                buyingMode: true,
                bid: selectedPackage.fee,
                minimumBid: selectedPackage.fee
            });
        };

        _this2.ordinal_suffix_of = function (i) {
            var j = i % 10,
                k = i % 100;
            if (j === 1 && k !== 11) {
                return i + "st";
            }
            if (j === 2 && k !== 12) {
                return i + "nd";
            }
            if (j === 3 && k !== 13) {
                return i + "rd";
            }
            return i + "th";
        };

        _this2.showTab = function (tab) {
            _this2.setState({ tab: tab });
        };

        _this2.isTabHasData = function (content, tab) {
            var description = content.description,
                website = content.website,
                attachments = content.attachments;


            if (tab === "event") {
                return !!(description || website || attachments && attachments.length > 0);
            }
        };

        _this2.closeModal = function () {
            _this2.setState({ editCompanyOpen: false });
        };

        _this2.closeTerritoriesModal = function () {
            _this2.setState({ showAllTerritories: false });
        };

        _this2.closeSuccessScreen = function () {
            var history = _this2.props.history;

            history.push("/marketplace");
        };

        _this2.editCompany = function () {
            var company = _this2.state.company;


            return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                __WEBPACK_IMPORTED_MODULE_16_react_modal___default.a,
                {
                    isOpen: _this2.state.editCompanyOpen,
                    onRequestClose: _this2.closeModal,
                    bodyOpenClassName: "selector",
                    style: __WEBPACK_IMPORTED_MODULE_14__main_styles_custom__["c" /* customStyles */],
                    contentLabel: "Example Modal"
                },
                __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                    "div",
                    { className: "modal-title" },
                    "Company Information",
                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement("i", { className: "fa fa-times-circle-o close-icon", onClick: _this2.closeModal })
                ),
                __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                    "div",
                    { className: "step-content" },
                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        "div",
                        { className: "step-content-container" },
                        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                            "div",
                            { className: "base-full-input" },
                            __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                "label",
                                { style: labelStyle },
                                "Legal name"
                            ),
                            __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement("input", {
                                type: "text",
                                style: inputStyle,
                                value: company.legalName })
                        ),
                        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                            "div",
                            { className: "base-full-input" },
                            __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                "label",
                                { style: labelStyle },
                                "Registration number"
                            ),
                            __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement("input", {
                                style: inputStyle,
                                type: "text",
                                onChange: function onChange(e) {
                                    company.registrationNumber = e.target.value;
                                    _this2.setState({ company: company });
                                },
                                value: company.registrationNumber })
                        ),
                        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                            "div",
                            { className: "base-full-input" },
                            __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                "label",
                                { style: labelStyle },
                                "VAT ID number"
                            ),
                            __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement("input", {
                                style: inputStyle,
                                type: "text",
                                onChange: function onChange(e) {
                                    company.vat = e.target.value;
                                    _this2.setState({ company: company });
                                },
                                value: company.vat })
                        ),
                        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                            "div",
                            { className: "base-full-input" },
                            __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                "label",
                                { style: labelStyle },
                                "Street Name / Number"
                            ),
                            __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement("input", {
                                style: inputStyle,
                                type: "text",
                                onChange: function onChange(e) {
                                    company.address = e.target.value;
                                    _this2.setState({ company: company });
                                },
                                value: company.address })
                        ),
                        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                            "div",
                            { className: "base-full-input" },
                            __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                "label",
                                { style: labelStyle },
                                "City"
                            ),
                            __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement("input", {
                                style: inputStyle,
                                type: "text",
                                onChange: function onChange(e) {
                                    company.city = e.target.value;
                                    _this2.setState({ company: company });
                                },
                                value: company.city })
                        ),
                        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                            "div",
                            { className: "base-full-input" },
                            __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                "label",
                                { style: labelStyle },
                                "ZIP code"
                            ),
                            __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement("input", {
                                style: inputStyle,
                                type: "text",
                                onChange: function onChange(e) {
                                    company.zip = e.target.value;
                                    _this2.setState({ company: company });
                                },
                                value: company.zip })
                        ),
                        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                            "div",
                            { className: "base-full-input" },
                            __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                "label",
                                { style: labelStyle },
                                "Country"
                            ),
                            __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_17__main_components_CountrySelector__["a" /* default */], {
                                multi: false,
                                onChange: function onChange(value) {
                                    company.country.name = value.label;
                                    _this2.setState({ company: company });
                                },
                                value: { value: company.country.name, label: company.country.name } })
                        )
                    )
                ),
                __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                    "div",
                    { className: "buttons" },
                    Object(__WEBPACK_IMPORTED_MODULE_15__sell_actions_validationActions__["a" /* companyIsValid */])(company) && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        "button",
                        {
                            className: "standard-button",
                            onClick: _this2.closeModal },
                        "Ok"
                    ),
                    !Object(__WEBPACK_IMPORTED_MODULE_15__sell_actions_validationActions__["a" /* companyIsValid */])(company) && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        "button",
                        {
                            className: "standard-button",
                            disabled: true
                        },
                        "Ok"
                    )
                )
            );
        };

        _this2.showAllTerritories = function (extraTerritories) {
            _this2.setState({
                showAllTerritories: true,
                territoriesList: extraTerritories
            });
        };

        _this2.allTerritories = function () {

            return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                __WEBPACK_IMPORTED_MODULE_16_react_modal___default.a,
                {
                    isOpen: _this2.state.showAllTerritories,
                    onRequestClose: _this2.closeTerritoriesModal,
                    bodyOpenClassName: "selector",
                    style: __WEBPACK_IMPORTED_MODULE_14__main_styles_custom__["c" /* customStyles */]
                },
                __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                    "div",
                    { style: {
                            color: 'grey',
                            padding: 20,
                            display: 'flex',
                            flexWrap: 'wrap'
                        } },
                    _this2.state.territoriesList.map(function (territory) {
                        return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                            "div",
                            { className: "country-modal" },
                            territory.label
                        );
                    })
                )
            );
        };

        _this2.successScreen = function () {
            var selectedPackage = _this2.state.selectedPackage;
            var history = _this2.props.history;

            return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                __WEBPACK_IMPORTED_MODULE_16_react_modal___default.a,
                {
                    isOpen: _this2.state.showSuccessScreen,
                    onRequestClose: _this2.closeSuccessScreen,
                    bodyOpenClassName: "selector",
                    style: __WEBPACK_IMPORTED_MODULE_14__main_styles_custom__["c" /* customStyles */]
                },
                __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                    "div",
                    { style: {
                            color: 'grey',
                            padding: 20,
                            display: 'flex',
                            flexDirection: 'column',
                            alignItems: 'center'
                        } },
                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        "div",
                        { style: {
                                fontSize: 30,
                                width: 600,
                                textAlign: 'center',
                                fontWeight: 600
                            } },
                        _this2.context.t("CHECKOUT_CONGRATULATIONS")
                    ),
                    selectedPackage.salesMethod === "FIXED" && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        "div",
                        { style: {
                                fontSize: 20,
                                width: 600,
                                margin: 40,
                                textAlign: 'center'
                            } },
                        _this2.context.t("CHECKOUT_FIXED_SUCCESS_MESSAGE")
                    ),
                    selectedPackage.salesMethod === "BIDDING" && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        "div",
                        { style: {
                                fontSize: 20,
                                width: 600,
                                margin: 40,
                                textAlign: 'center'
                            } },
                        _this2.context.t("CHECKOUT_BID_SUCCESS_MESSAGE")
                    ),
                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        "div",
                        { style: { display: 'flex' } },
                        selectedPackage.salesMethod === "FIXED" && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                            "button",
                            { className: "standard-button", onClick: function onClick() {
                                    history.push("/closeddeals");
                                } },
                            _this2.context.t("CHECKOUT_FIXED_GO_TO_CLOSED_DEALS")
                        ),
                        selectedPackage.salesMethod !== "FIXED" && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                            "button",
                            { className: "standard-button", onClick: function onClick() {
                                    history.push("/bids/activebids");
                                } },
                            _this2.context.t("CHECKOUT_FIXED_GO_TO_BIDS")
                        ),
                        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                            "button",
                            { className: "standard-button", onClick: _this2.closeSuccessScreen },
                            _this2.context.t("CHECKOUT_FIXED_GO_TO_MARKETPLACE")
                        )
                    )
                )
            );
        };

        _this2.getTechnicalFee = function () {
            var content = _this2.state.content;


            var response = {
                TECHNICAL_FEE: "",
                TECHNICAL_FEE_PERCENTAGE: 0
            };

            var selected = content.rightsPackage && content.rightsPackage[0] && content.rightsPackage[0].selectedRights ? content.rightsPackage[0].selectedRights : null;

            if (selected) {
                response["TECHNICAL_FEE"] = selected["TECHNICAL_FEE"];
                response["TECHNICAL_FEE_PERCENTAGE"] = selected["TECHNICAL_FEE_PERCENTAGE"];
            }

            return selected;
        };

        _this2.getTotalFee = function () {
            var selectedPackage = _this2.state.selectedPackage;

            var technicalFee = _this2.getTechnicalFee();
            var total = Number(selectedPackage.fee);

            if (technicalFee.TECHNICAL_FEE === "ON_TOP") {
                total = total + total / 100 * Number(technicalFee.TECHNICAL_FEE_PERCENTAGE);
            }
            return total;
        };

        _this2.setBid = function () {
            var _this2$state = _this2.state,
                selectedPackage = _this2$state.selectedPackage,
                bid = _this2$state.bid;


            selectedPackage.fee = bid;

            _this2.setState({
                selectedPackage: selectedPackage,
                bidUpdated: true
            });
        };

        _this2.editBid = function () {
            _this2.setState({
                bidUpdated: false
            });
        };

        _this2.placeBid = function () {
            var _this2$state2 = _this2.state,
                bid = _this2$state2.bid,
                selectedPackage = _this2$state2.selectedPackage,
                signature = _this2$state2.signature,
                content = _this2$state2.content;

            _this2.setState({ spinner: true });
            var bidObj = {
                amount: bid,
                salesPackage: selectedPackage.id,
                signature: signature,
                totalFee: _this2.getTotalFee(),
                content: content.id,
                salesMethod: selectedPackage.salesMethod
            };

            ContentArena.ContentApi.placeBid(bidObj).then(function (r) {
                _this2.setState({ showSuccessScreen: true, soldOut: r.soldOut, spinner: false });
            });
        };

        _this2.invalidPackage = function () {
            var _this2$state3 = _this2.state,
                signature = _this2$state3.signature,
                selectedPackage = _this2$state3.selectedPackage,
                bidUpdated = _this2$state3.bidUpdated,
                terms = _this2$state3.terms;

            return !signature || selectedPackage.salesMethod === 'BIDDING' && !bidUpdated || !terms;
        };

        _this2.watchlist = function () {
            var content = _this2.state.content;
            var _this = _this2;

            content.watchlist = !content.watchlist;
            _this.setState({ content: content });

            ContentArena.Api.watchlist(content.customId).then(function (response) {
                if (response && response.success === true) {
                    content.watchlist = !!response.state;
                    _this.setState({ content: content });
                }
            });
        };

        var listing = ContentArena.Utils.contentParserFromServer(props.listing) || {};

        _this2.state = {
            content: listing,
            company: props.company,
            spinner: false,
            tab: props.tab || "bundles",
            buyingMode: props.tab && props.tab === "checkout",
            soldOut: false,
            selectedPackage: props.tab && props.tab === "checkout" ? listing.salesPackages.find(function (sp) {
                return sp.id == props.bundle;
            }) : {},
            territoriesList: [],
            editCompanyOpen: false,
            bidUpdated: false
        };
        _this2.blueCheck = assetsBaseDir + "app/images/blue_check.png";
        _this2.checkIcon = assetsBaseDir + "app/images/check.png";
        _this2.yellowCheck = assetsBaseDir + "app/images/yellow_chech.png";
        _this2.contactIcon = assetsBaseDir + "app/images/envelope.png";
        _this2.watchlistIcon = assetsBaseDir + "app/images/watchlist.png";
        _this2.bidIcon = assetsBaseDir + "app/images/hammer.png";
        _this2.packageIcon = assetsBaseDir + "app/images/bid.png";
        _this2.infoIcon = assetsBaseDir + "app/images/info.png";
        _this2.pdfIcon = assetsBaseDir + "app/images/pdf.png";
        _this2.draftIcon = assetsBaseDir + "app/images/draft.png";
        _this2.baseDir = assetsBaseDir + "../";
        return _this2;
    }

    _createClass(ListingDetails, [{
        key: "componentDidMount",
        value: function componentDidMount() {
            var salesPackage = this.props.salesPackage;
            var content = this.state.content;

            var selectedPackage = void 0;

            if (salesPackage) {
                selectedPackage = content.salesPackages.filter(function (p) {
                    return Number(p.id) === Number(salesPackage);
                })[0];
                this.selectPackage(selectedPackage);
            }
        }
    }, {
        key: "componentWillReceiveProps",
        value: function componentWillReceiveProps(nextProps) {

            this.setState({
                content: ContentArena.Utils.contentParserFromServer(nextProps.listing)
            });
        }
    }, {
        key: "render",
        value: function render() {
            var _this3 = this;

            __WEBPACK_IMPORTED_MODULE_18_react_tooltip___default.a.rebuild();
            var _props = this.props,
                onBack = _props.onBack,
                profile = _props.profile,
                history = _props.history;
            var _state = this.state,
                buyingMode = _state.buyingMode,
                selectedPackage = _state.selectedPackage,
                tab = _state.tab,
                content = _state.content,
                signature = _state.signature,
                bid = _state.bid,
                company = _state.company,
                bidUpdated = _state.bidUpdated,
                spinner = _state.spinner,
                minimumBid = _state.minimumBid;

            var listingImage = content.image ? assetsBaseDir + "../" + content.image : this.noImage;
            var technicalFee = this.getTechnicalFee();
            var extraTerritories = selectedPackage.territoriesMethod === "WORLDWIDE_EXCLUDING" ? selectedPackage.excludedTerritories : selectedPackage.territories;
            return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                "div",
                { className: "listing-details" },
                __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_12__main_components_SendMessage__["a" /* default */], { ref: "messagePopup", listingId: content.id, recipient: content.company }),
                this.editCompany(),
                this.allTerritories(),
                this.successScreen(),
                __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                    "div",
                    { className: "listing-details-content" },
                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        "div",
                        { className: "left" },
                        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                            "div",
                            { className: "image" },
                            __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement("img", { src: listingImage })
                        ),
                        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_10__buy_components_ContentListingEventDetails__["a" /* default */], this.props.listing),
                        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                            "div",
                            { style: { flex: 2, flexDirection: "column", margin: '20px 0' } },
                            content.rightsPackage.map(function (sr, i) {
                                return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                    "div",
                                    { key: i, style: {
                                            minHeight: 46,
                                            flexDirection: 'row',
                                            display: 'flex',
                                            alignItems: 'center'
                                        } },
                                    !sr.exclusive && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement("img", { style: { width: 23, height: 22, margin: '0 5px' }, src: _this3.blueCheck }),
                                    sr.exclusive && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement("img", { style: { width: 23, height: 22, margin: '0 5px' }, src: _this3.yellowCheck }),
                                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                        "div",
                                        { style: { display: 'flex', flexDirection: "row" } },
                                        sr.shortLabel !== "PR" && sr.name,
                                        sr.shortLabel === "PR" && content.PROGRAM_NAME && "Program: " + content.PROGRAM_NAME,
                                        sr.exclusive && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                            "span",
                                            { style: { fontWeight: 600, marginLeft: 3 } },
                                            " EX"
                                        )
                                    )
                                );
                            })
                        ),
                        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                            "div",
                            { className: "date" },
                            this.context.t("LISTING_DETAILS_LICENSE_START"),
                            __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                "span",
                                null,
                                content.startDateMode !== "DATE" && this.context.t("LISTING_DETAILS_LICENSE_START_CONCLUSION"),
                                content.startDateMode === "DATE" && " " + __WEBPACK_IMPORTED_MODULE_8_moment_moment___default()(content.startDate).format('DD/MM/YYYY')
                            )
                        ),
                        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                            "div",
                            { className: "date" },
                            this.context.t("LISTING_DETAILS_LICENSE_END"),
                            __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                "span",
                                null,
                                content.endDateMode === "LIMITED" && " " + content.endDateLimit + this.context.t("LISTING_DETAILS_LICENSE_END_DAYS"),
                                content.endDateMode === "DATE" && " " + __WEBPACK_IMPORTED_MODULE_8_moment_moment___default()(content.endDate).format('DD/MM/YYYY'),
                                content.endDateMode === "UNLIMITED" && this.context.t(" Unlimited")
                            )
                        ),
                        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                            "div",
                            { className: "date" },
                            this.context.t("Publishing date"),
                            __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                "span",
                                null,
                                __WEBPACK_IMPORTED_MODULE_8_moment_moment___default()().format('DD/MM/YYYY')
                            )
                        ),
                        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                            "div",
                            { className: "date" },
                            this.context.t("Expiry"),
                            __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                "span",
                                null,
                                __WEBPACK_IMPORTED_MODULE_8_moment_moment___default()(content.expiresAt).format('DD/MM/YYYY')
                            )
                        )
                    ),
                    !buyingMode && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        "div",
                        { className: "right" },
                        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                            "div",
                            { className: "header" },
                            __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                "div",
                                { className: "content" },
                                __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                    "div",
                                    { className: "name" },
                                    content.name
                                ),
                                profile === "BUYER" && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                    "div",
                                    { className: "publisher", style: {
                                            flex: 1,
                                            fontSize: 18,
                                            fontWeight: 600
                                        } },
                                    content.company.legalName
                                ),
                                profile === "BUYER" && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                    "div",
                                    { style: { margin: '0 10px', display: 'flex', cursor: 'pointer' },
                                        onClick: function onClick() {
                                            _this3.refs.messagePopup.open();
                                        } },
                                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement("img", { style: { width: 22, height: 18, marginBottom: 5 }, src: this.contactIcon }),
                                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                        "div",
                                        { style: {
                                                flex: 1,
                                                color: '#4F4F4F',
                                                fontSize: 16,
                                                margin: '0 10px'
                                            } },
                                        this.context.t("Contact Seller")
                                    )
                                ),
                                profile === "BUYER" && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                    "div",
                                    { style: { margin: '0 10px', display: 'flex', cursor: 'pointer' },
                                        onClick: this.watchlist },
                                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement("img", { style: { width: 18, height: 18, marginTop: 2 },
                                        src: content.watchlist ? this.checkIcon : this.watchlistIcon
                                    }),
                                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                        "div",
                                        { style: {
                                                flex: 1,
                                                color: '#2DA7E6',
                                                fontSize: 16,
                                                textDecoration: content.watchlist ? '' : 'underline',
                                                margin: '0 10px 0 5px'

                                            } },
                                        content.watchlist ? this.context.t('LISTING_DETAILS_ADDED_TO_WATCHLIST') : this.context.t('Watchlist')
                                    )
                                ),
                                __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                    "div",
                                    { className: "custom-id" },
                                    "#",
                                    content.customId
                                )
                            )
                        ),
                        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                            "div",
                            { className: "listing-details-buttons" },
                            __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                "button",
                                { className: tab === "bundles" ? "active" : "", onClick: function onClick() {
                                        history.push('/listing/' + content.customId + '/bundles');
                                        _this3.showTab("bundles");
                                    } },
                                this.context.t("LISTING_DETAILS_TAB_BUNDLES")
                            ),
                            this.isTabHasData(content, "event") && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                "button",
                                { className: tab === "event" ? "active" : "", onClick: function onClick() {
                                        history.push('/listing/' + content.customId + '/event');
                                        _this3.showTab("event");
                                    } },
                                this.context.t("LISTING_DETAILS_TAB_EVENT")
                            ),
                            __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                "button",
                                { className: tab === "grantofrights" ? "active" : "", onClick: function onClick() {
                                        history.push('/listing/' + content.customId + '/grantofrights');
                                        _this3.showTab("grantofrights");
                                    } },
                                this.context.t("LISTING_DETAILS_TAB_RIGHTS")
                            ),
                            content.PROGRAM_NAME && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                "button",
                                { className: tab === "editedprogram" ? "active" : "", onClick: function onClick() {
                                        history.push('/listing/' + content.customId + '/editedprogram');
                                        _this3.showTab("editedprogram");
                                    } },
                                this.context.t("LISTING_DETAILS_EDITED_PROGRAM")
                            ),
                            __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                "button",
                                { className: tab === "seller" ? "active" : "", onClick: function onClick() {
                                        history.push('/listing/' + content.customId + '/seller');
                                        _this3.showTab("seller");
                                    } },
                                this.context.t("LISTING_DETAILS_TAB_SELLER")
                            )
                        ),
                        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                            "div",
                            { className: "listing-details-tab" },
                            this.state.tab === "bundles" && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_3__CommercialTerms__["a" /* default */], _extends({
                                profile: profile,
                                onSelectPackage: this.selectPackage
                            }, content)),
                            this.state.tab === "event" && this.isTabHasData(content, "event") && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_4__ContentInformation__["a" /* default */], content),
                            this.state.tab === "grantofrights" && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_5__TermSheet__["a" /* default */], content),
                            this.state.tab === "editedprogram" && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_6__ProgramDetails__["a" /* default */], content),
                            this.state.tab === "seller" && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_7__Seller__["a" /* default */], content)
                        )
                    ),
                    buyingMode && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        "div",
                        { className: "right", style: { padding: '0 20px' } },
                        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                            "div",
                            { className: "header" },
                            __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                "div",
                                { className: "content" },
                                __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                    "div",
                                    { className: "name" },
                                    selectedPackage && selectedPackage.salesMethod === "FIXED" && "Buy now",
                                    selectedPackage && selectedPackage.salesMethod === "BIDDING" && "Bid"
                                )
                            )
                        ),
                        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                            "div",
                            { style: { display: 'flex', marginBottom: 10 } },
                            __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                "div",
                                { style: {
                                        flex: 1,
                                        paddingLeft: 30,
                                        paddingTop: 5,
                                        fontWeight: 600,
                                        display: 'flex',
                                        alignItems: 'center'

                                    } },
                                this.context.t("Sales bundle")
                            ),
                            __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                "div",
                                { style: {
                                        flex: '2.5 1 0%'
                                    } },
                                __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                    "div",
                                    { style: {
                                            padding: 12,
                                            border: '1px solid #DDE1E7',
                                            backgroundColor: '#FAFBFC',
                                            margin: 5,
                                            boxSizing: 'border-box',
                                            display: 'flex',
                                            flexDirection: 'row',
                                            color: 'grey',
                                            maxWidth: 750
                                        } },
                                    selectedPackage.bundleMethod === "SELL_AS_BUNDLE" && selectedPackage.territories.length > 1 && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                        "div",
                                        { style: {} },
                                        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement("img", { style: { width: 26, height: 23 }, src: this.packageIcon })
                                    ),
                                    selectedPackage.territories.length > 1 && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                        "div",
                                        { style: { margin: '0 15px', fontWeight: 600 } },
                                        selectedPackage.territories.length
                                    ),
                                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                        "div",
                                        null,
                                        selectedPackage.name,
                                        extraTerritories && extraTerritories.length > 3 && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                            "span",
                                            {
                                                style: {
                                                    color: '#2DA7E6',
                                                    textDecoration: 'underline',
                                                    marginLeft: 5,
                                                    cursor: 'pointer'
                                                },
                                                onClick: function onClick() {
                                                    _this3.showAllTerritories(extraTerritories);
                                                } },
                                            "+" + (extraTerritories.length - 3)
                                        )
                                    )
                                )
                            )
                        ),
                        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                            "div",
                            { style: { display: 'flex', marginBottom: 10 } },
                            __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                "div",
                                { style: {
                                        flex: 1,
                                        paddingLeft: 30,
                                        paddingTop: 5,
                                        fontWeight: 600,
                                        display: 'flex',
                                        alignItems: 'center'

                                    } },
                                this.context.t("Commercial information")
                            ),
                            __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                "div",
                                { style: {
                                        flex: '2.5 1 0%'
                                    } },
                                __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                    "div",
                                    { style: {
                                            padding: '8px 12px',
                                            border: '1px solid #DDE1E7',
                                            backgroundColor: '#FAFBFC',
                                            margin: 5,
                                            boxSizing: 'border-box',
                                            display: 'flex',
                                            flexDirection: 'row',
                                            color: 'grey',
                                            maxWidth: 750
                                        } },
                                    selectedPackage.salesMethod === "FIXED" && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                        "div",
                                        { style: { display: 'flex', alignItems: 'center' } },
                                        this.context.t("License fee:"),
                                        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                            "span",
                                            { style: bidTextBoxStyle },
                                            selectedPackage.fee,
                                            " ",
                                            Object(__WEBPACK_IMPORTED_MODULE_13__main_actions_utils__["b" /* getCurrencySymbol */])(selectedPackage.currency.code)
                                        )
                                    ),
                                    selectedPackage.salesMethod === "BIDDING" && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                        "div",
                                        { style: { display: 'flex', alignItems: 'center' } },
                                        this.context.t("Bid:"),
                                        !bidUpdated && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement("input", {
                                            style: {
                                                padding: '6px 10px',
                                                width: 100,
                                                marginLeft: 10,
                                                marginRight: 10,
                                                textAlign: 'right'
                                            },
                                            type: "number",
                                            value: bid,
                                            onChange: function onChange(e) {
                                                var value = e.target.value;
                                                _this3.setState({ bid: value });
                                            },
                                            min: selectedPackage.fee }),
                                        bidUpdated && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                            "span",
                                            { style: bidTextBoxStyle },
                                            selectedPackage.fee,
                                            " ",
                                            Object(__WEBPACK_IMPORTED_MODULE_13__main_actions_utils__["b" /* getCurrencySymbol */])(selectedPackage.currency.code)
                                        ),
                                        !bidUpdated && Object(__WEBPACK_IMPORTED_MODULE_13__main_actions_utils__["b" /* getCurrencySymbol */])(selectedPackage.currency.code),
                                        !bidUpdated && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                            "div",
                                            {
                                                "data-tip": true,
                                                "data-for": "apply-bid",
                                                "data-tip-disable": parseFloat(bid) >= parseFloat(minimumBid) },
                                            __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                                "button",
                                                { className: "standard-button",
                                                    style: bidButtonStyle,
                                                    disabled: !bid || parseFloat(bid) === 0 || parseFloat(bid) < parseFloat(minimumBid),
                                                    onClick: this.setBid },
                                                "Apply"
                                            )
                                        ),
                                        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                            __WEBPACK_IMPORTED_MODULE_18_react_tooltip___default.a,
                                            { id: "apply-bid" },
                                            __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                                "span",
                                                null,
                                                this.context.t("LISTING_DETAILS_EXCEED_MINIMUM")
                                            )
                                        ),
                                        bidUpdated && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                            "button",
                                            { className: "link-button", onClick: this.editBid },
                                            this.context.t("Raise")
                                        )
                                    ),
                                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                        "div",
                                        { style: {
                                                margin: '5px 10px'
                                            } },
                                        this.context.t("Technical fee:"),
                                        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                            "span",
                                            { style: bidTextBoxStyle },
                                            technicalFee.TECHNICAL_FEE === "ON_TOP" && technicalFee.TECHNICAL_FEE_PERCENTAGE + "%",
                                            technicalFee.TECHNICAL_FEE !== "ON_TOP" && "Included"
                                        )
                                    ),
                                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                        "div",
                                        { style: {
                                                margin: '5px 10px'
                                            } },
                                        this.context.t("Total:"),
                                        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                            "span",
                                            { style: bidTextBoxStyle },
                                            this.getTotalFee() + Object(__WEBPACK_IMPORTED_MODULE_13__main_actions_utils__["b" /* getCurrencySymbol */])(selectedPackage.currency.code)
                                        )
                                    )
                                )
                            )
                        ),
                        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                            "div",
                            { style: { display: 'flex', marginBottom: 10 } },
                            __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                "div",
                                { style: {
                                        flex: 1,
                                        paddingLeft: 30,
                                        paddingTop: 5,
                                        fontWeight: 600,
                                        display: 'flex',
                                        alignItems: 'center'

                                    } },
                                this.context.t("Payment details")
                            ),
                            __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                "div",
                                { style: {
                                        flex: '2.5 1 0%'
                                    } },
                                selectedPackage.installments && selectedPackage.installments.map(function (installment, index) {
                                    return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                        "div",
                                        { key: "installment-" + index, style: {
                                                padding: 12,
                                                border: '1px solid #DDE1E7',
                                                backgroundColor: '#FAFBFC',
                                                margin: 5,
                                                boxSizing: 'border-box',
                                                display: 'flex',
                                                flexDirection: 'row',
                                                color: 'grey',
                                                maxWidth: 750
                                            } },
                                        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                            "div",
                                            { style: {
                                                    margin: '0 10px 0 0',
                                                    fontWeight: 600
                                                } },
                                            _this3.ordinal_suffix_of(index + 1),
                                            " ",
                                            _this3.context.t("installment")
                                        ),
                                        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                            "div",
                                            { style: { margin: '0 30px' } },
                                            installment.value,
                                            "%"
                                        ),
                                        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                            "div",
                                            { style: { margin: '0 10px' } },
                                            installment.type === "DAY" && installment.days + _this3.context.t("INSTALLMENT_CLOSURE_DAYS"),
                                            installment.type === "DATE" && " " + __WEBPACK_IMPORTED_MODULE_8_moment_moment___default()(installment.date).format('DD/MM/YYYY')
                                        )
                                    );
                                })
                            )
                        ),
                        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                            "div",
                            { style: { display: 'flex', marginBottom: 10 } },
                            __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                "div",
                                { style: {
                                        flex: 1,
                                        paddingLeft: 30,
                                        paddingTop: 5,
                                        fontWeight: 600,
                                        display: 'flex',
                                        alignItems: 'center'

                                    } },
                                this.context.t("CHECKOUT_LABEL_COMPANY_ADDRESS")
                            ),
                            __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                "div",
                                { style: {
                                        flex: '2.5 1 0%'
                                    } },
                                __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                    "div",
                                    { style: {
                                            padding: 12,
                                            border: '1px solid #DDE1E7',
                                            backgroundColor: '#FAFBFC',
                                            margin: 5,
                                            boxSizing: 'border-box',
                                            display: 'flex',
                                            flexDirection: 'row',
                                            color: 'grey',
                                            maxWidth: 750
                                        } },
                                    [company.legalName, company.address, company.zip, company.country.name].join(", "),
                                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement("img", { src: this.draftIcon,
                                        onClick: function onClick(e) {
                                            _this3.setState({ editCompanyOpen: true });
                                        },
                                        style: { cursor: 'pointer', margin: '-2px 10px' } })
                                )
                            )
                        ),
                        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                            "div",
                            { style: {
                                    display: 'flex',
                                    justifyContent: 'center',
                                    textDecoration: 'underline',
                                    cursor: 'pointer',
                                    color: '#48C0FE',
                                    fontSize: 16,
                                    margin: 10
                                }, onClick: function onClick() {
                                    Object(__WEBPACK_IMPORTED_MODULE_13__main_actions_utils__["l" /* viewLicenseCustom */])(content.customId, selectedPackage.id, bid);
                                } },
                            __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement("img", { style: { marginRight: 10 }, src: this.pdfIcon }),
                            this.context.t("License agreement")
                        ),
                        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                            "div",
                            null,
                            __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_11__main_components_DigitalSignature__["a" /* default */], { signature: signature, onReady: function onReady(signature) {
                                    _this3.setState({ signature: signature });
                                } }),
                            __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                "div",
                                { style: { textAlign: 'center', padding: '20px 0 0' } },
                                __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement("input", { type: "checkbox",
                                    id: "terms-buy",
                                    className: "ca-checkbox",
                                    style: { marginRight: "5px" },
                                    onChange: function onChange(e) {
                                        _this3.setState({ terms: e.target.checked });
                                    },
                                    checked: this.state.terms
                                }),
                                __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                    "label",
                                    { htmlFor: "terms-buy" },
                                    this.context.t("CHECKOUT_TERMS")
                                )
                            )
                        ),
                        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                            "div",
                            { style: {
                                    display: 'flex',
                                    justifyContent: 'center',
                                    marginTop: 20,
                                    marginBottom: 40
                                } },
                            !spinner && selectedPackage.salesMethod === "FIXED" && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                "button",
                                { className: "standard-button",
                                    onClick: this.placeBid,
                                    disabled: this.invalidPackage() },
                                this.context.t("CHECKOUT_BUTTON_BUY")
                            ),
                            !spinner && selectedPackage.salesMethod !== "FIXED" && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                "button",
                                { className: "standard-button",
                                    onClick: this.placeBid,
                                    disabled: this.invalidPackage() },
                                this.context.t("CHECKOUT_BUTTON_PLACE_BID")
                            ),
                            spinner && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement("i", { className: "fa fa-cog fa-spin" })
                        )
                    )
                )
            );
        }
    }]);

    return ListingDetails;
}(__WEBPACK_IMPORTED_MODULE_0_react___default.a.Component);

ListingDetails.contextTypes = {
    t: __WEBPACK_IMPORTED_MODULE_19_prop_types__["PropTypes"].func.isRequired
};

var mapStateToProps = function mapStateToProps(state) {
    return state;
};

var mapDispatchToProps = function mapDispatchToProps(dispatch) {
    return {
        onClick: function onClick(id) {
            return dispatch(Object(__WEBPACK_IMPORTED_MODULE_2__actions__["a" /* test */])(id));
        }
    };
};

/* harmony default export */ __webpack_exports__["a"] = (Object(__WEBPACK_IMPORTED_MODULE_1_react_redux__["connect"])(mapStateToProps, mapDispatchToProps)(ListingDetails));

/***/ }),

/***/ "./src/AppBundle/Resources/public/javascript/buy/containers/Marketplace.js":
/*!*********************************************************************************!*\
  !*** ./src/AppBundle/Resources/public/javascript/buy/containers/Marketplace.js ***!
  \*********************************************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(jQuery) {/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_react__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_react_redux__ = __webpack_require__(/*! react-redux */ "./node_modules/react-redux/es/index.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__actions__ = __webpack_require__(/*! ../actions */ "./src/AppBundle/Resources/public/javascript/buy/actions/index.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__components_EventFilter__ = __webpack_require__(/*! ../components/EventFilter */ "./src/AppBundle/Resources/public/javascript/buy/components/EventFilter.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__components_RightsFilter__ = __webpack_require__(/*! ../components/RightsFilter */ "./src/AppBundle/Resources/public/javascript/buy/components/RightsFilter.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__main_components_ContentListing__ = __webpack_require__(/*! ../../main/components/ContentListing */ "./src/AppBundle/Resources/public/javascript/main/components/ContentListing.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__ListingDetails__ = __webpack_require__(/*! ./ListingDetails */ "./src/AppBundle/Resources/public/javascript/buy/containers/ListingDetails.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__actions_filterActions__ = __webpack_require__(/*! ../actions/filterActions */ "./src/AppBundle/Resources/public/javascript/buy/actions/filterActions.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__main_actions_utils__ = __webpack_require__(/*! ../../main/actions/utils */ "./src/AppBundle/Resources/public/javascript/main/actions/utils.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9__main_actions_userActions__ = __webpack_require__(/*! ../../main/actions/userActions */ "./src/AppBundle/Resources/public/javascript/main/actions/userActions.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_10__main_components_RightsLegend__ = __webpack_require__(/*! ../../main/components/RightsLegend */ "./src/AppBundle/Resources/public/javascript/main/components/RightsLegend.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_11_prop_types__ = __webpack_require__(/*! prop-types */ "./node_modules/prop-types/index.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_11_prop_types___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_11_prop_types__);
var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }














var queryString = __webpack_require__(/*! query-string */ "./node_modules/query-string/index.js");

var Marketplace = function (_React$Component) {
    _inherits(Marketplace, _React$Component);

    function Marketplace(props) {
        _classCallCheck(this, Marketplace);

        var _this2 = _possibleConstructorReturn(this, (Marketplace.__proto__ || Object.getPrototypeOf(Marketplace)).call(this, props));

        _this2.selectListing = function (id) {

            var _this = _this2;

            if (id === _this.state.id) {
                _this.setState({
                    showDetails: true
                });

                return;
            }

            _this.setState({
                id: id,
                loadingListingDetails: true,
                showDetails: true
            });

            ContentArena.ContentApi.getByCustomId(id).done(function (content) {

                _this.setState({
                    content: content,
                    loadingListingDetails: false
                });
            }).fail(function (error) {
                _this.setState({
                    errorMessage: error.data.responseJSON.message,
                    loadingListingDetails: false
                });
            });
        };

        _this2.parseFilter = function (filter) {
            var response = {
                rights: filter.rights,
                countries: filter.countries
            };

            if (filter.sport) {
                response.sports = filter.sport.value ? [{ name: filter.sport.label }] : !filter.sport.label ? [{ name: filter.sport }] : null;
            }
            if (filter.exclusive) response.exclusive = filter.exclusive;
            if (filter.event) response.event = filter.event;
            if (filter.includeAllCountries) response.includeAllCountries = filter.includeAllCountries;

            return response;
        };

        _this2.parseFilterForUrl = function (filter) {

            var response = {
                rights: filter.rights,
                countries: filter.countries
            };

            if (filter.sport && filter.sport.value && filter.sport.label !== "All sports") {
                response.sport = filter.sport.label;
            }

            if (filter.sport && !filter.sport.value && !filter.sport.label) {
                response.sport = filter.sport;
            }

            if (filter.exclusive) response.exclusive = filter.exclusive;
            if (filter.includeAllCountries) response.includeAllCountries = filter.includeAllCountries;
            if (filter.event) response.event = filter.event;

            return response;
        };

        _this2.getContent = function (filter) {
            var _this = _this2;

            _this.setState({
                loadingListing: true,
                listings: []
            });

            ContentArena.Api.getJsonContent(filter).done(function (listings) {

                listings = listings.map(function (listing) {
                    return ContentArena.Utils.contentParserFromServer(listing);
                });
                _this.setState({ listings: listings, loadingListing: false, sortSalesPackages: true });
            });
        };

        _this2.filter = function () {
            var filter = _this2.props.filter;

            var parsedFilter = _this2.parseFilter(filter);
            _this2.getContent(parsedFilter);
        };

        _this2.filterByRoute = function () {
            var _this2$props = _this2.props,
                history = _this2$props.history,
                filter = _this2$props.filter;

            var serialize = function serialize(obj, prefix) {
                var str = [],
                    p;
                for (p in obj) {
                    if (obj.hasOwnProperty(p)) {
                        var k = prefix ? prefix + "[" + p + "]" : p,
                            v = obj[p];
                        str.push(v !== null && (typeof v === "undefined" ? "undefined" : _typeof(v)) === "object" ? serialize(v, k) : encodeURIComponent(k) + "=" + encodeURIComponent(v));
                    }
                }
                return str.join("&");
            };
            history.push("/marketplace/filter/multi?" + serialize(_this2.parseFilterForUrl(filter)));
        };

        _this2.state = {
            defaultRightsPackage: JSON.parse(props.rights),
            company: JSON.parse(props.company),
            loadingListing: false,
            loadingListingDetails: false,
            showDetails: false,
            listings: [],
            countries: [],
            territories: [],
            profile: props.user.profile,
            errorMessage: ''
        };
        return _this2;
    }

    _createClass(Marketplace, [{
        key: "componentDidMount",
        value: function componentDidMount() {
            var _props = this.props,
                clearUpdateFilter = _props.clearUpdateFilter,
                match = _props.match,
                location = _props.location;


            if (match && match.params && match.params.customId) {
                this.selectListing(match.params.customId);
                return;
            }

            if (match && match.params && match.params.filterName) {

                switch (match.params.filterName) {
                    case "sport":
                        this.props.selectSport({ value: match.params.filterValue, label: match.params.filterValue });
                        return;
                    case "search":
                        this.props.updateEvent(match.params.filterValue);
                        return;
                    case "territory":
                        this.props.updateFilters({ countries: [match.params.filterValue] });
                        return;
                    case "multi":
                        var customFilter = queryString.parse(location.search, { arrayFormat: 'index' });
                        this.props.updateFilters(customFilter);
                        return;
                }
            }

            this.filter();
            clearUpdateFilter();
            this.props.updateProfile("BUYER");

            jQuery('body, .marketplace-container').css('background-color', '#eee'); //todo: remove this when other page redesign ready
        }
    }, {
        key: "componentWillUnmount",
        value: function componentWillUnmount() {
            jQuery('body, .marketplace-container').removeAttr('style'); //todo: remove this when other page redesign ready
        }
    }, {
        key: "componentWillReceiveProps",
        value: function componentWillReceiveProps(props) {
            var filter = props.filter,
                clearUpdateFilter = props.clearUpdateFilter;


            this.setState({ sortSalesPackages: false });
            if (filter.forceUpdate) {
                this.getContent(this.parseFilter(filter));
                clearUpdateFilter();
            }
        }
    }, {
        key: "render",
        value: function render() {
            var _this3 = this;

            var _props2 = this.props,
                filter = _props2.filter,
                salesPackage = _props2.salesPackage,
                history = _props2.history,
                location = _props2.location,
                match = _props2.match;
            var _state = this.state,
                listings = _state.listings,
                loadingListing = _state.loadingListing,
                loadingListingDetails = _state.loadingListingDetails,
                showDetails = _state.showDetails,
                content = _state.content,
                company = _state.company,
                sortSalesPackages = _state.sortSalesPackages,
                profile = _state.profile,
                errorMessage = _state.errorMessage,
                defaultRightsPackage = _state.defaultRightsPackage;


            if (errorMessage) {
                return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                    "h2",
                    { className: "text-center" },
                    errorMessage
                );
            }
            return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                "div",
                { className: "manager-content", style: { flexDirection: 'row', flexWrap: 'wrap' } },
                __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                    "div",
                    { style: { width: '100%', textAlign: 'right' } },
                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_10__main_components_RightsLegend__["a" /* default */], null)
                ),
                !showDetails && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                    "div",
                    { className: "buy-container-left" },
                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_3__components_EventFilter__["a" /* default */], {
                        onFilter: this.filter }),
                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_4__components_RightsFilter__["a" /* default */], {
                        onFilter: this.filterByRoute,
                        rightsPackage: this.state.defaultRightsPackage })
                ),
                !showDetails && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                    "div",
                    { className: "buy-container-right" },
                    listings.length > 0 && listings.map(function (listing) {
                        return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_5__main_components_ContentListing__["a" /* default */], _extends({
                            onSelect: function onSelect() {
                                return Object(__WEBPACK_IMPORTED_MODULE_8__main_actions_utils__["f" /* goToListing */])(listing.customId, true);
                            },
                            key: listing.customId,
                            filter: filter,
                            sortSalesPackages: sortSalesPackages,
                            defaultRightsPackage: defaultRightsPackage
                        }, listing));
                    }),
                    listings.length === 0 && loadingListing && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        "div",
                        { className: "big-spinner" },
                        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement("i", { className: "fa fa-cog fa-spin" })
                    ),
                    listings.length === 0 && !loadingListing && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        "span",
                        { className: "no-results" },
                        this.context.t("MARKETPLACE_NO_RESULTS")
                    )
                ),
                loadingListingDetails && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                    "div",
                    { className: "big-spinner" },
                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement("i", { className: "fa fa-cog fa-spin" })
                ),
                showDetails && !loadingListingDetails && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_6__ListingDetails__["a" /* default */], {
                    key: location.pathname,
                    tab: match.params.tab,
                    bundle: match.params.bundle,
                    history: history,
                    onBack: function onBack() {
                        _this3.setState({ showDetails: false });
                    },
                    salesPackage: salesPackage,
                    company: company,
                    profile: profile,
                    listing: content })
            );
        }
    }]);

    return Marketplace;
}(__WEBPACK_IMPORTED_MODULE_0_react___default.a.Component);

Marketplace.contextTypes = {
    t: __WEBPACK_IMPORTED_MODULE_11_prop_types__["PropTypes"].func.isRequired
};

var mapStateToProps = function mapStateToProps(state, ownProps) {
    return state;
};

var mapDispatchToProps = function mapDispatchToProps(dispatch) {
    return {
        onClick: function onClick(id) {
            return dispatch(Object(__WEBPACK_IMPORTED_MODULE_2__actions__["a" /* test */])(id));
        },
        selectSport: function selectSport(sport) {
            return dispatch(Object(__WEBPACK_IMPORTED_MODULE_7__actions_filterActions__["j" /* updateSport */])(sport));
        },
        updateEvent: function updateEvent(event) {
            return dispatch(Object(__WEBPACK_IMPORTED_MODULE_7__actions_filterActions__["f" /* updateEvent */])(event));
        },
        clearUpdateFilter: function clearUpdateFilter() {
            return dispatch(Object(__WEBPACK_IMPORTED_MODULE_7__actions_filterActions__["c" /* clearUpdateFilter */])());
        },
        addRight: function addRight(id) {
            return dispatch(Object(__WEBPACK_IMPORTED_MODULE_7__actions_filterActions__["a" /* addRight */])(id));
        },
        removeRight: function removeRight(id) {
            return dispatch(Object(__WEBPACK_IMPORTED_MODULE_7__actions_filterActions__["d" /* removeRight */])(id));
        },
        updateCountries: function updateCountries(countries) {
            return dispatch(Object(__WEBPACK_IMPORTED_MODULE_7__actions_filterActions__["e" /* updateCountries */])(countries));
        },
        updateExclusive: function updateExclusive(exclusive) {
            return dispatch(Object(__WEBPACK_IMPORTED_MODULE_7__actions_filterActions__["g" /* updateExclusive */])(exclusive));
        },
        updateFilters: function updateFilters(filters) {
            return dispatch(Object(__WEBPACK_IMPORTED_MODULE_7__actions_filterActions__["i" /* updateMany */])(filters));
        },
        updateProfile: function updateProfile(profile) {
            return dispatch(Object(__WEBPACK_IMPORTED_MODULE_9__main_actions_userActions__["b" /* updateProfile */])(profile));
        }
    };
};

/* harmony default export */ __webpack_exports__["a"] = (Object(__WEBPACK_IMPORTED_MODULE_1_react_redux__["connect"])(mapStateToProps, mapDispatchToProps)(Marketplace));
/* WEBPACK VAR INJECTION */}.call(__webpack_exports__, __webpack_require__(/*! jquery */ "./node_modules/jquery/dist/jquery.js")))

/***/ }),

/***/ "./src/AppBundle/Resources/public/javascript/buy/containers/ProgramDetails.js":
/*!************************************************************************************!*\
  !*** ./src/AppBundle/Resources/public/javascript/buy/containers/ProgramDetails.js ***!
  \************************************************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_react__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_react_redux__ = __webpack_require__(/*! react-redux */ "./node_modules/react-redux/es/index.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__actions__ = __webpack_require__(/*! ../actions */ "./src/AppBundle/Resources/public/javascript/buy/actions/index.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__main_components_ProgramTypesDefinitions__ = __webpack_require__(/*! ../../main/components/ProgramTypesDefinitions */ "./src/AppBundle/Resources/public/javascript/main/components/ProgramTypesDefinitions.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_prop_types__ = __webpack_require__(/*! prop-types */ "./node_modules/prop-types/index.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_prop_types___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_4_prop_types__);
var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }







var rowStyle = {
    borderBottom: '1px solid #EEF3F6',
    borderRight: '1px solid #EEF3F6',
    display: 'flex'
};

var titleStyle = {
    backgroundColor: '#F4F6F9',
    color: '#4F4F4F',
    fontSize: 14,
    fontWeight: 600,
    margin: '3px 0',
    padding: 10,
    width: '50%'
};

var valueStyle = {
    color: '#4F4F4F',
    fontSize: 14,
    fontWeight: 600,
    margin: '3px 0',
    padding: 10,
    width: '50%'
};

var ProgramDetails = function (_React$Component) {
    _inherits(ProgramDetails, _React$Component);

    function ProgramDetails(props) {
        _classCallCheck(this, ProgramDetails);

        var _this = _possibleConstructorReturn(this, (ProgramDetails.__proto__ || Object.getPrototypeOf(ProgramDetails)).call(this, props));

        _this.state = {};
        return _this;
    }

    _createClass(ProgramDetails, [{
        key: "render",
        value: function render() {
            var _props = this.props,
                PROGRAM_NAME = _props.PROGRAM_NAME,
                PROGRAM_YEAR = _props.PROGRAM_YEAR,
                PROGRAM_DESCRIPTION = _props.PROGRAM_DESCRIPTION,
                PROGRAM_DURATION = _props.PROGRAM_DURATION,
                PROGRAM_EPISODES = _props.PROGRAM_EPISODES,
                PROGRAM_TYPE = _props.PROGRAM_TYPE;

            return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                "div",
                { style: { padding: '20px 0' } },
                __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                    "div",
                    { className: "full-item-box", style: { width: '50%' } },
                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        "label",
                        null,
                        "PROGRAM ",
                        PROGRAM_NAME
                    ),
                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        "div",
                        null,
                        PROGRAM_TYPE && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                            "div",
                            { style: rowStyle },
                            __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                "div",
                                { style: titleStyle },
                                this.context.t("LISTING_DETAILS_PROGRAM_TITLE_TYPE")
                            ),
                            __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                "div",
                                { style: valueStyle },
                                __WEBPACK_IMPORTED_MODULE_3__main_components_ProgramTypesDefinitions__["a" /* ProgramTypesDefinitions */][PROGRAM_TYPE]
                            )
                        ),
                        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                            "div",
                            { style: rowStyle },
                            __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                "div",
                                { style: titleStyle },
                                this.context.t("LISTING_DETAILS_PROGRAM_TITLE_EPISODES")
                            ),
                            __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                "div",
                                { style: valueStyle },
                                PROGRAM_EPISODES
                            )
                        ),
                        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                            "div",
                            { style: rowStyle },
                            __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                "div",
                                { style: titleStyle },
                                this.context.t("LISTING_DETAILS_PROGRAM_TITLE_DURATION")
                            ),
                            __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                "div",
                                { style: valueStyle },
                                PROGRAM_DURATION
                            )
                        ),
                        PROGRAM_YEAR && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                            "div",
                            { style: rowStyle },
                            __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                "div",
                                { style: titleStyle },
                                this.context.t("LISTING_DETAILS_PROGRAM_TITLE_RELEASE")
                            ),
                            __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                "div",
                                { style: valueStyle },
                                PROGRAM_YEAR
                            )
                        ),
                        PROGRAM_DESCRIPTION && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                            "div",
                            { style: rowStyle },
                            __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                "div",
                                { style: titleStyle },
                                this.context.t("LISTING_DETAILS_PROGRAM_TITLE_DESCRIPTION")
                            ),
                            __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                "div",
                                { style: valueStyle },
                                PROGRAM_DESCRIPTION
                            )
                        )
                    )
                )
            );
        }
    }]);

    return ProgramDetails;
}(__WEBPACK_IMPORTED_MODULE_0_react___default.a.Component);

ProgramDetails.contextTypes = {
    t: __WEBPACK_IMPORTED_MODULE_4_prop_types__["PropTypes"].func.isRequired
};

/* harmony default export */ __webpack_exports__["a"] = (ProgramDetails);

/***/ }),

/***/ "./src/AppBundle/Resources/public/javascript/buy/containers/SalesPackages.js":
/*!***********************************************************************************!*\
  !*** ./src/AppBundle/Resources/public/javascript/buy/containers/SalesPackages.js ***!
  \***********************************************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_react__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_react_redux__ = __webpack_require__(/*! react-redux */ "./node_modules/react-redux/es/index.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__actions__ = __webpack_require__(/*! ../actions */ "./src/AppBundle/Resources/public/javascript/buy/actions/index.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__main_styles_custom__ = __webpack_require__(/*! ../../main/styles/custom */ "./src/AppBundle/Resources/public/javascript/main/styles/custom.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_react_modal__ = __webpack_require__(/*! react-modal */ "./node_modules/react-modal/lib/index.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_react_modal___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_4_react_modal__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5_moment_moment__ = __webpack_require__(/*! moment/moment */ "./node_modules/moment/moment.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5_moment_moment___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_5_moment_moment__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__main_components_LicenseDownloader__ = __webpack_require__(/*! ../../main/components/LicenseDownloader */ "./src/AppBundle/Resources/public/javascript/main/components/LicenseDownloader.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7_prop_types__ = __webpack_require__(/*! prop-types */ "./node_modules/prop-types/index.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7_prop_types___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_7_prop_types__);
var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }










var SalesPackages = function (_React$Component) {
    _inherits(SalesPackages, _React$Component);

    function SalesPackages(props) {
        _classCallCheck(this, SalesPackages);

        var _this = _possibleConstructorReturn(this, (SalesPackages.__proto__ || Object.getPrototypeOf(SalesPackages)).call(this, props));

        _this.showAllTerritories = function (extraTerritories) {
            _this.setState({
                showAllTerritories: true,
                territoriesList: extraTerritories
            });
        };

        _this.showInstallments = function (installments) {
            _this.setState({
                showInstallments: true,
                installments: installments
            });
        };

        _this.closeTerritoiesModal = function () {
            _this.setState({ showAllTerritories: false });
        };

        _this.closeInstallmentsModal = function () {
            _this.setState({ showInstallments: false });
        };

        _this.ordinal_suffix_of = function (i) {
            var j = i % 10,
                k = i % 100;
            if (j === 1 && k !== 11) {
                return i + "st";
            }
            if (j === 2 && k !== 12) {
                return i + "nd";
            }
            if (j === 3 && k !== 13) {
                return i + "rd";
            }
            return i + "th";
        };

        _this.installmentsModal = function () {
            var installments = _this.state.installments;

            return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                __WEBPACK_IMPORTED_MODULE_4_react_modal___default.a,
                {
                    isOpen: _this.state.showInstallments,
                    onRequestClose: _this.closeInstallmentsModal,
                    bodyOpenClassName: "selector",
                    style: __WEBPACK_IMPORTED_MODULE_3__main_styles_custom__["c" /* customStyles */]
                },
                __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                    "div",
                    { style: {
                            display: 'flex',
                            flexDirection: 'column'
                        } },
                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        "div",
                        { style: {
                                padding: '12px 20px',
                                backgroundColor: '#32A9E7',
                                color: 'white',
                                fontWeight: 600
                            } },
                        "Payment Details"
                    ),
                    installments && installments.map(function (installment, index) {
                        return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                            "div",
                            { style: {
                                    padding: 12,
                                    border: '1px solid #DDE1E7',
                                    backgroundColor: '#FAFBFC',
                                    margin: 5,
                                    boxSizing: 'border-box',
                                    display: 'flex',
                                    flexDirection: 'row',
                                    color: 'grey'
                                } },
                            __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                "div",
                                { style: { margin: '0 10px', fontWeight: 600 } },
                                _this.ordinal_suffix_of(index + 1),
                                " installment"
                            ),
                            __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                "div",
                                { style: { margin: '0 30px' } },
                                installment.value,
                                "%"
                            ),
                            __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                "div",
                                { style: { margin: '0 10px' } },
                                installment.type === "DAY" && installment.days + _this.context.t("INSTALLMENT_CLOSURE_DAYS"),
                                installment.type === "DATE" && " " + __WEBPACK_IMPORTED_MODULE_5_moment_moment___default()(installment.date).format('DD/MM/YYYY')
                            )
                        );
                    })
                )
            );
        };

        _this.allTerritories = function () {

            return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                __WEBPACK_IMPORTED_MODULE_4_react_modal___default.a,
                {
                    isOpen: _this.state.showAllTerritories,
                    onRequestClose: _this.closeTerritoiesModal,
                    bodyOpenClassName: "selector",
                    style: __WEBPACK_IMPORTED_MODULE_3__main_styles_custom__["c" /* customStyles */]
                },
                __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                    "div",
                    { style: {
                            color: 'grey',
                            padding: 20,
                            display: 'flex',
                            flexWrap: 'wrap'
                        } },
                    _this.state.territoriesList.map(function (territory) {
                        return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                            "div",
                            { className: "country-modal" },
                            territory.label
                        );
                    })
                )
            );
        };

        _this.getFee = function (salesPackage) {
            var feeNumber = parseFloat(salesPackage.fee);
            return feeNumber.toLocaleString() + " " + _this.getCurrencySymbol();
        };

        _this.getCurrencySymbol = function () {
            var currency = _this.props.currency;

            return currency === "EUR" ? "€" : "$";
        };

        _this.state = {
            territoriesList: [],
            installments: []
        };
        _this.bidIcon = assetsBaseDir + "app/images/hammer.png";
        _this.packageIcon = assetsBaseDir + "app/images/bid.png";
        _this.infoIcon = assetsBaseDir + "app/images/info.png";
        return _this;
    }

    _createClass(SalesPackages, [{
        key: "render",
        value: function render() {
            var _this2 = this;

            var _props = this.props,
                salesPackages = _props.salesPackages,
                onSelectPackage = _props.onSelectPackage,
                user = _props.user,
                listingId = _props.listingId;


            return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                "div",
                { className: "sales-packages" },
                this.allTerritories(),
                this.installmentsModal(),
                salesPackages.map(function (salesPackage, i) {

                    if (salesPackage.sold) return;

                    var extraTerritories = salesPackage.territoriesMethod === "WORLDWIDE_EXCLUDING" ? salesPackage.excludedTerritories : salesPackage.territories;
                    return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        "div",
                        { className: "sales-package-container", key: "sales-package-" + i },
                        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                            "div",
                            { style: { flex: 10, display: 'flex' } },
                            salesPackage.bundleMethod === "SELL_AS_BUNDLE" && salesPackage.territories.length > 1 && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                "div",
                                { style: {} },
                                __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement("img", { style: { width: 26, height: 23 }, src: _this2.packageIcon })
                            ),
                            salesPackage.territories.length > 1 && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                "div",
                                { style: { margin: '0 15px', fontWeight: 600 } },
                                salesPackage.territories.length
                            ),
                            __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                "div",
                                null,
                                salesPackage.name,
                                extraTerritories && extraTerritories.length > 3 && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                    "span",
                                    {
                                        style: {
                                            color: '#2DA7E6',
                                            textDecoration: 'underline',
                                            marginLeft: 5,
                                            cursor: 'pointer'
                                        },
                                        onClick: function onClick() {
                                            _this2.showAllTerritories(extraTerritories);
                                        } },
                                    "+" + (extraTerritories.length - 3)
                                )
                            )
                        ),
                        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_6__main_components_LicenseDownloader__["a" /* default */], {
                            type: "BUNDLE",
                            id: salesPackage.id,
                            listingId: listingId,
                            style: { flex: 1, display: 'flex', justifyContent: 'center' } }),
                        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                            "div",
                            { style: { flex: 1, display: 'flex', justifyContent: 'center', cursor: 'pointer' },
                                onClick: function onClick() {
                                    _this2.showInstallments(salesPackage.installments);
                                } },
                            __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement("img", { style: { width: 23, height: 23 }, src: _this2.infoIcon })
                        ),
                        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                            "div",
                            { style: { flex: 1.5, justifyContent: "center", display: "flex" } },
                            _this2.getFee(salesPackage)
                        ),
                        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                            "div",
                            { style: { flex: 1, justifyContent: "center", display: "flex" } },
                            salesPackage.salesMethod === "BIDDING" && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement("img", { style: { width: 23, height: 23 }, src: _this2.bidIcon })
                        ),
                        salesPackage.salesMethod === "FIXED" && user.profile === "BUYER" && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                            "button",
                            { className: "standard-button",
                                style: { width: 130 },
                                onClick: function onClick() {
                                    onSelectPackage(salesPackage, listingId);
                                } },
                            _this2.context.t("Buy now")
                        ),
                        salesPackage.salesMethod === "BIDDING" && user.profile === "BUYER" && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                            "button",
                            { className: "standard-button",
                                style: { width: 130 },
                                onClick: function onClick() {
                                    onSelectPackage(salesPackage, listingId);
                                } },
                            _this2.context.t("Place bid")
                        )
                    );
                })
            );
        }
    }]);

    return SalesPackages;
}(__WEBPACK_IMPORTED_MODULE_0_react___default.a.Component);

SalesPackages.contextTypes = {
    t: __WEBPACK_IMPORTED_MODULE_7_prop_types__["PropTypes"].func.isRequired
};

var mapStateToProps = function mapStateToProps(state) {
    return state;
};

var mapDispatchToProps = function mapDispatchToProps(dispatch) {
    return {
        onClick: function onClick(id) {
            return dispatch(Object(__WEBPACK_IMPORTED_MODULE_2__actions__["a" /* test */])(id));
        }
    };
};

/* harmony default export */ __webpack_exports__["a"] = (Object(__WEBPACK_IMPORTED_MODULE_1_react_redux__["connect"])(mapStateToProps, mapDispatchToProps)(SalesPackages));

/***/ }),

/***/ "./src/AppBundle/Resources/public/javascript/buy/containers/Seller.js":
/*!****************************************************************************!*\
  !*** ./src/AppBundle/Resources/public/javascript/buy/containers/Seller.js ***!
  \****************************************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_react__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_react_redux__ = __webpack_require__(/*! react-redux */ "./node_modules/react-redux/es/index.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__actions__ = __webpack_require__(/*! ../actions */ "./src/AppBundle/Resources/public/javascript/buy/actions/index.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_prop_types__ = __webpack_require__(/*! prop-types */ "./node_modules/prop-types/index.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_prop_types___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_3_prop_types__);
var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }






var rowStyle = {
    borderBottom: '1px solid #EEF3F6',
    borderRight: '1px solid #EEF3F6',
    display: 'flex'
};

var titleStyle = {
    backgroundColor: '#F4F6F9',
    color: '#4F4F4F',
    fontSize: 14,
    fontWeight: 600,
    margin: '3px 0',
    padding: 10,
    width: '50%'
};

var valueStyle = {
    color: '#4F4F4F',
    fontSize: 14,
    fontWeight: 600,
    margin: '3px 0',
    padding: 10,
    width: '50%'
};

var Seller = function (_React$Component) {
    _inherits(Seller, _React$Component);

    function Seller(props) {
        _classCallCheck(this, Seller);

        var _this = _possibleConstructorReturn(this, (Seller.__proto__ || Object.getPrototypeOf(Seller)).call(this, props));

        _this.state = {};
        return _this;
    }

    _createClass(Seller, [{
        key: "render",
        value: function render() {
            var company = this.props.company;

            return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                "div",
                { style: { padding: '20px 0' } },
                __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                    "div",
                    { style: { marginBottom: 20 } },
                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        "div",
                        { style: {
                                color: '#1A4B63',
                                fontSize: 20,
                                fontWeight: 600
                            } },
                        company.displayName
                    ),
                    company.website && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        "div",
                        { style: {
                                color: '#4F4F4F',
                                fontSize: 14
                            } },
                        company.website
                    )
                ),
                __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                    "div",
                    { className: "full-item-box", style: { width: '75%' } },
                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        "label",
                        null,
                        company.displayName,
                        this.context.t("LISTING_DETAILS_SELLER_TITLE_DETAILS")
                    ),
                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        "div",
                        null,
                        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                            "div",
                            { style: rowStyle },
                            __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                "div",
                                { style: titleStyle },
                                this.context.t("LISTING_DETAILS_SELLER_TITLE_NAME")
                            ),
                            __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                "div",
                                { style: valueStyle },
                                company.legalName
                            )
                        ),
                        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                            "div",
                            { style: rowStyle },
                            __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                "div",
                                { style: titleStyle },
                                this.context.t("LISTING_DETAILS_SELLER_TITLE_ADDRESS")
                            ),
                            __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                "div",
                                { style: valueStyle },
                                company.address
                            )
                        ),
                        company.city && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                            "div",
                            { style: rowStyle },
                            __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                "div",
                                { style: titleStyle },
                                this.context.t("LISTING_DETAILS_SELLER_TITLE_CITY")
                            ),
                            __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                "div",
                                { style: valueStyle },
                                company.city
                            )
                        ),
                        company.country.name && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                            "div",
                            { style: rowStyle },
                            __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                "div",
                                { style: titleStyle },
                                this.context.t("LISTING_DETAILS_SELLER_TITLE_COUNTRY")
                            ),
                            __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                "div",
                                { style: valueStyle },
                                company.country.name
                            )
                        ),
                        company.zip && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                            "div",
                            { style: rowStyle },
                            __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                "div",
                                { style: titleStyle },
                                this.context.t("LISTING_DETAILS_SELLER_TITLE_ZIP")
                            ),
                            __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                "div",
                                { style: valueStyle },
                                company.zip
                            )
                        ),
                        company.registrationNumber && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                            "div",
                            { style: rowStyle },
                            __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                "div",
                                { style: titleStyle },
                                this.context.t("LISTING_DETAILS_SELLER_TITLE_REGISTRATION_NUMBER")
                            ),
                            __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                "div",
                                { style: valueStyle },
                                company.registrationNumber
                            )
                        ),
                        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                            "div",
                            { style: rowStyle },
                            __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                "div",
                                { style: titleStyle },
                                this.context.t("LISTING_DETAILS_SELLER_TITLE_VAT")
                            ),
                            __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                "div",
                                { style: valueStyle },
                                company.vat
                            )
                        )
                    )
                ),
                company.description && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                    "div",
                    { className: "full-item-box" },
                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        "label",
                        null,
                        this.context.t("LISTING_DETAILS_SELLER_TITLE_DESCRIPTION")
                    ),
                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        "div",
                        { className: "full-item-content" },
                        company.description
                    )
                )
            );
        }
    }]);

    return Seller;
}(__WEBPACK_IMPORTED_MODULE_0_react___default.a.Component);

Seller.contextTypes = {
    t: __WEBPACK_IMPORTED_MODULE_3_prop_types__["PropTypes"].func.isRequired
};

var mapStateToProps = function mapStateToProps(state) {
    return state;
};

var mapDispatchToProps = function mapDispatchToProps(dispatch) {
    return {
        onClick: function onClick(id) {
            return dispatch(Object(__WEBPACK_IMPORTED_MODULE_2__actions__["a" /* test */])(id));
        }
    };
};

/* harmony default export */ __webpack_exports__["a"] = (Object(__WEBPACK_IMPORTED_MODULE_1_react_redux__["connect"])(mapStateToProps, mapDispatchToProps)(Seller));

/***/ }),

/***/ "./src/AppBundle/Resources/public/javascript/buy/containers/TermSheet.js":
/*!*******************************************************************************!*\
  !*** ./src/AppBundle/Resources/public/javascript/buy/containers/TermSheet.js ***!
  \*******************************************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_react__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_react_redux__ = __webpack_require__(/*! react-redux */ "./node_modules/react-redux/es/index.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__actions__ = __webpack_require__(/*! ../actions */ "./src/AppBundle/Resources/public/javascript/buy/actions/index.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__sell_components_RightDefinitions__ = __webpack_require__(/*! ../../sell/components/RightDefinitions */ "./src/AppBundle/Resources/public/javascript/sell/components/RightDefinitions.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__sell_components_ProductionStandardsDefinitions__ = __webpack_require__(/*! ../../sell/components/ProductionStandardsDefinitions */ "./src/AppBundle/Resources/public/javascript/sell/components/ProductionStandardsDefinitions.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__sell_components_RightItemsDefinitions__ = __webpack_require__(/*! ../../sell/components/RightItemsDefinitions */ "./src/AppBundle/Resources/public/javascript/sell/components/RightItemsDefinitions.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__sell_components_SuperRightDefinitions__ = __webpack_require__(/*! ../../sell/components/SuperRightDefinitions */ "./src/AppBundle/Resources/public/javascript/sell/components/SuperRightDefinitions.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7_prop_types__ = __webpack_require__(/*! prop-types */ "./node_modules/prop-types/index.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7_prop_types___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_7_prop_types__);
var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }










var TermSheet = function (_React$Component) {
    _inherits(TermSheet, _React$Component);

    function TermSheet(props) {
        _classCallCheck(this, TermSheet);

        var _this = _possibleConstructorReturn(this, (TermSheet.__proto__ || Object.getPrototypeOf(TermSheet)).call(this, props));

        _this.hasRight = function (shortLabel) {
            var rightsPackage = _this.props.rightsPackage;

            return rightsPackage.filter(function (rp) {
                return rp.shortLabel === shortLabel;
            }).length > 0;
        };

        _this.renderProgramInfo = function (values, name, i) {
            var rightsPackage = _this.props.rightsPackage;

            return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                "div",
                { className: 'row ' + (i % 2 ? 'odd-row' : ''), key: 'program' + i },
                __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                    "div",
                    { className: "right-name right-definition" },
                    name
                ),
                rightsPackage.map(function (rp, k) {
                    if (rp.selectedRights['CONTENT_DELIVERY'] === "CONTENT_DELIVERY_NON_DEDICATED") return;
                    if (rp.shortLabel !== 'PR') return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement("div", { className: "right-definition" });

                    return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        "div",
                        { className: "right-definition", key: "program_child" + k },
                        values && values.length === 0 && "No",
                        values && values.length > 0 && values.map(function (l) {
                            return l.label;
                        }).join(", ")
                    );
                })
            );
        };

        _this.renderList = function (definitions, checkContentDelivery) {
            var _this$props = _this.props,
                selectedRightsBySuperRight = _this$props.selectedRightsBySuperRight,
                rightsPackage = _this$props.rightsPackage,
                LICENSED_LANGUAGES = _this$props.LICENSED_LANGUAGES;

            if (checkContentDelivery) {
                definitions = _this.getFilteredByDelivery(definitions, rightsPackage);
            }
            return definitions.map(function (right, i) {

                if (right.key === 'CONTENT_DELIVERY') return;
                if (right.key === 'PROGRAM') return;

                if (right.key === "LICENSED_LANGUAGES") {
                    if (!LICENSED_LANGUAGES || LICENSED_LANGUAGES.length === 0) return false;
                }

                return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                    "div",
                    { className: 'row ' + (i % 2 ? 'odd-row' : ''), key: 'list' + i },
                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        "div",
                        { className: "right-name right-definition" },
                        right.name
                    ),
                    rightsPackage.map(function (rp, k) {

                        if (checkContentDelivery && rp.selectedRights['CONTENT_DELIVERY'] === "CONTENT_DELIVERY_NON_DEDICATED") return;

                        if (right.key === 'LICENSED_LANGUAGES') return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                            "div",
                            { className: "right-definition" },
                            LICENSED_LANGUAGES.map(function (l) {
                                return l.label;
                            }).join(", ")
                        );

                        var defItems = selectedRightsBySuperRight[rp.id].items;
                        var definition = defItems[right.key];
                        var label = '';

                        if (right.multiple) {
                            if (Array.isArray(defItems[right.key])) {
                                label = defItems[right.key].map(function (item) {
                                    return __WEBPACK_IMPORTED_MODULE_5__sell_components_RightItemsDefinitions__["a" /* RightItemsDefinitions */][item].label;
                                }).join(", ");
                            } else {
                                label = defItems[right.key];
                            }
                        } else {
                            var dynKey = right.key + "_TEXT";
                            if (defItems[dynKey]) {
                                label = defItems[dynKey];
                            } else {
                                label = definition && __WEBPACK_IMPORTED_MODULE_5__sell_components_RightItemsDefinitions__["a" /* RightItemsDefinitions */][definition].label;
                            }
                        }

                        if (right.key === 'RUNS' && defItems["RUNS_NUMBER"]) {
                            label = defItems["RUNS_NUMBER"];
                        }

                        if (right.key === 'GRAPHICS' && defItems["GRAPHICS_LANGUAGES"]) {
                            label = defItems["GRAPHICS_LANGUAGES"].map(function (l) {
                                return l.label;
                            }).join(", ");
                        }

                        if (right.key === 'COMMENTARY' && defItems["COMMENTARY_LANGUAGES"]) {
                            label = defItems["COMMENTARY_LANGUAGES"].map(function (l) {
                                return l.label;
                            }).join(", ");
                        }

                        return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                            "div",
                            { className: "right-definition", key: 'list_child' + k },
                            label,
                            right.key === 'CAMERA' && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                "span",
                                { style: { marginLeft: 5 } },
                                defItems["CAMERAS"]
                            )
                        );
                    })
                );
            });
        };

        _this.getFilteredByDelivery = function (definitions, rightsPackage) {
            //filter definitions by user chosen rightPackage
            return definitions.filter(function (d) {
                if (d.checkDelivery) {
                    return rightsPackage.some(function (p) {
                        return !(p.selectedRights['CONTENT_DELIVERY'] === "CONTENT_DELIVERY_NON_DEDICATED" || p.shortLabel === "PR" && d.key !== 'TECHNICAL_DELIVERY');
                    });
                } else {
                    return true;
                }
            });
        };

        _this.renderTextarea = function (definitions) {
            var _this$props2 = _this.props,
                selectedRightsBySuperRight = _this$props2.selectedRightsBySuperRight,
                rightsPackage = _this$props2.rightsPackage;

            return definitions.map(function (right, i) {
                if (right.key === 'PROGRAM' || !selectedRightsBySuperRight[rightsPackage[0].id].items[right.key + "_TEXTAREA"]) return;
                return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                    "div",
                    { className: "term-sheet-full-item-box", key: 'textarea_' + i },
                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        "label",
                        null,
                        right.name
                    ),
                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        "div",
                        { className: "full-item-content" },
                        selectedRightsBySuperRight[rightsPackage[0].id].items[right.key + "_TEXTAREA"]
                    )
                );
            });
        };

        _this.renderDetails = function (definitions) {
            var _this$props3 = _this.props,
                selectedRightsBySuperRight = _this$props3.selectedRightsBySuperRight,
                rightsPackage = _this$props3.rightsPackage;

            return definitions.map(function (right) {
                if (right.key === 'PROGRAM' || !selectedRightsBySuperRight[rightsPackage[0].id].items[right.key + "_DETAILS"]) return;
                return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                    "div",
                    { className: "full-item-box" },
                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        "label",
                        null,
                        right.name
                    ),
                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        "div",
                        { className: "full-item-content" },
                        selectedRightsBySuperRight[rightsPackage[0].id].items[right.key + "_DETAILS"]
                    )
                );
            });
        };

        _this.state = {};
        return _this;
    }

    _createClass(TermSheet, [{
        key: "render",
        value: function render() {
            var _this2 = this;

            var _props = this.props,
                selectedRightsBySuperRight = _props.selectedRightsBySuperRight,
                rightsPackage = _props.rightsPackage,
                PROGRAM_SCRIPT = _props.PROGRAM_SCRIPT,
                PROGRAM_SUBTITLES = _props.PROGRAM_SUBTITLES,
                PROGRAM_LANGUAGE = _props.PROGRAM_LANGUAGE,
                COMMENTS_RIGHTS = _props.COMMENTS_RIGHTS,
                COMMENTS_PRODUCTION = _props.COMMENTS_PRODUCTION,
                HL_INPUT = _props.HL_INPUT,
                NA_INPUT = _props.NA_INPUT;

            var packagesAvailable = rightsPackage.map(function (rp) {
                return rp.shortLabel;
            });

            return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                "div",
                { className: "term-sheet" },
                __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                    "div",
                    { className: "term-sheet-items" },
                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        "div",
                        { className: "row", style: {
                                border: 'none'
                            } },
                        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                            "div",
                            { className: "right-definition right-definition-title" },
                            this.context.t("LISTING_DETAILS_RIGHTS_HEADER_RIGHTS")
                        ),
                        rightsPackage.map(function (rp, i) {
                            return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                "div",
                                { key: "rp-grant" + i, className: "right-definition right-definition-title" },
                                rp.name,
                                _this2.context.t(" Rights")
                            );
                        })
                    ),
                    this.renderList(__WEBPACK_IMPORTED_MODULE_3__sell_components_RightDefinitions__["a" /* RightDefinitions */], false),
                    this.hasRight("NA") && this.hasRight("HL") && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        "div",
                        { className: 'row', key: 'transmission' },
                        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                            "div",
                            { className: "right-name right-definition" },
                            this.context.t("LISTING_DETAILS_RIGHTS_HEADER_GRANTED_TIME")
                        ),
                        rightsPackage.map(function (rp, k) {
                            return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                "div",
                                { className: "right-definition", key: 'list_childs' + k },
                                rp.shortLabel === "NA" && NA_INPUT + " seconds",
                                rp.shortLabel === "HL" && HL_INPUT + " minutes",
                                rp.shortLabel !== "NA" && rp.shortLabel !== "HL" && "-"
                            );
                        })
                    )
                ),
                __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                    "div",
                    null,
                    this.renderTextarea(__WEBPACK_IMPORTED_MODULE_3__sell_components_RightDefinitions__["a" /* RightDefinitions */]),
                    this.renderTextarea(__WEBPACK_IMPORTED_MODULE_4__sell_components_ProductionStandardsDefinitions__["a" /* ProductionStandardsDefinitions */])
                ),
                COMMENTS_RIGHTS && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                    "div",
                    { className: "term-sheet-full-item-box" },
                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        "label",
                        null,
                        this.context.t("LISTING_DETAILS_RIGHTS_TITLE_AMENDMENTS")
                    ),
                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        "div",
                        { className: "full-item-content" },
                        COMMENTS_RIGHTS
                    )
                ),
                __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                    "div",
                    { className: "term-sheet-items" },
                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        "div",
                        { className: "row", style: { border: 'none' } },
                        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                            "div",
                            { className: "right-definition right-definition-title" },
                            this.context.t("LISTING_DETAILS_RIGHTS_TITLE_PRODUCTION_DETAILS")
                        ),
                        rightsPackage.map(function (rp, i) {
                            if (rp.selectedRights['CONTENT_DELIVERY'] === "CONTENT_DELIVERY_NON_DEDICATED") return;
                            var viaLiveFeed = rp.selectedRights['CONTENT_DELIVERY'] === "CONTENT_DELIVERY_LIVE";

                            return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                "div",
                                { key: "rp-prod" + i, className: "right-definition right-definition-title" },
                                __WEBPACK_IMPORTED_MODULE_6__sell_components_SuperRightDefinitions__["c" /* SuperRightProductionDetailsLabels */][rp.shortLabel],
                                viaLiveFeed && " (via live feed)"
                            );
                        })
                    ),
                    this.renderList(__WEBPACK_IMPORTED_MODULE_4__sell_components_ProductionStandardsDefinitions__["a" /* ProductionStandardsDefinitions */], true),
                    packagesAvailable.indexOf("PR") !== -1 && PROGRAM_LANGUAGE && this.renderProgramInfo(PROGRAM_LANGUAGE, "Languages"),
                    packagesAvailable.indexOf("PR") !== -1 && PROGRAM_SUBTITLES && this.renderProgramInfo(PROGRAM_SUBTITLES, "Subtitles"),
                    packagesAvailable.indexOf("PR") !== -1 && PROGRAM_SCRIPT && this.renderProgramInfo(PROGRAM_SCRIPT, "Script")
                ),
                selectedRightsBySuperRight[rightsPackage[0].id].items["TECHNICAL_FEE_DETAILS"] && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                    "div",
                    { className: "term-sheet-full-item-box" },
                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        "label",
                        null,
                        this.context.t("LISTING_DETAILS_RIGHTS_TECHNICAL_FEE_DETAILS")
                    ),
                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        "div",
                        { className: "full-item-content" },
                        selectedRightsBySuperRight[rightsPackage[0].id].items["TECHNICAL_FEE_DETAILS"]
                    )
                ),
                COMMENTS_PRODUCTION && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                    "div",
                    { className: "term-sheet-full-item-box" },
                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        "label",
                        null,
                        this.context.t("LISTING_DETAILS_RIGHTS_TITLE_AMENDMENTS_2")
                    ),
                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        "div",
                        { className: "full-item-content" },
                        COMMENTS_PRODUCTION
                    )
                )
            );
        }
    }]);

    return TermSheet;
}(__WEBPACK_IMPORTED_MODULE_0_react___default.a.Component);

TermSheet.contextTypes = {
    t: __WEBPACK_IMPORTED_MODULE_7_prop_types__["PropTypes"].func.isRequired
};

var mapStateToProps = function mapStateToProps(state) {
    return state;
};

var mapDispatchToProps = function mapDispatchToProps(dispatch) {
    return {
        onClick: function onClick(id) {
            return dispatch(Object(__WEBPACK_IMPORTED_MODULE_2__actions__["a" /* test */])(id));
        }
    };
};

/* harmony default export */ __webpack_exports__["a"] = (Object(__WEBPACK_IMPORTED_MODULE_1_react_redux__["connect"])(mapStateToProps, mapDispatchToProps)(TermSheet));

/***/ }),

/***/ "./src/AppBundle/Resources/public/javascript/buy/reducers/filter.js":
/*!**************************************************************************!*\
  !*** ./src/AppBundle/Resources/public/javascript/buy/reducers/filter.js ***!
  \**************************************************************************/
/*! exports provided: filterTypes, filter */
/*! exports used: filter, filterTypes */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "b", function() { return filterTypes; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return filter; });
function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }

var filterTypes = {
    ADD_RIGHT: 'ADD_RIGHT',
    REMOVE_RIGHT: 'REMOVE_RIGHT',
    UPDATE_COUNTRIES: 'UPDATE_COUNTRIES',
    UPDATE_EXCLUSIVE: 'UPDATE_EXCLUSIVE',
    UPDATE_INCLUDED_COUNTRIES: 'UPDATE_INCLUDED_COUNTRIES',
    UPDATE_SPORT: 'UPDATE_SPORT',
    UPDATE_EVENT: 'UPDATE_EVENT',
    CLEAR: 'CLEAR',
    CLEAR_UPDATE: 'CLEAR_UPDATE',
    UPDATE_MANY: 'UPDATE_MANY'
};

var defaultFilter = {
    rights: [],
    countries: [],
    exclusive: false,
    includeAllCountries: false,
    sport: {
        value: null,
        label: "All sports"
    },
    event: "",
    forceUpdate: true

};

var filter = function filter() {
    var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : defaultFilter;
    var action = arguments[1];


    switch (action.type) {
        case filterTypes.UPDATE_INCLUDED_COUNTRIES:
            return Object.assign({}, state, {
                includeAllCountries: action.includeAllCountries
            });
        case filterTypes.CLEAR:
            return Object.assign({}, state, defaultFilter);
        case filterTypes.CLEAR_UPDATE:
            return Object.assign({}, state, {
                forceUpdate: false
            });
        case filterTypes.ADD_RIGHT:
            return Object.assign({}, state, {
                rights: [].concat(_toConsumableArray(state.rights), [action.id])
            });
        case filterTypes.REMOVE_RIGHT:

            var index = state.rights.indexOf(action.id);
            state.rights.splice(index, 1);
            return Object.assign({}, state, {
                rights: [].concat(_toConsumableArray(state.rights))
            });
        case filterTypes.UPDATE_COUNTRIES:
            return Object.assign({}, state, {
                countries: action.countries.map(function (c) {
                    return c.value;
                })
            });
        case filterTypes.UPDATE_EXCLUSIVE:
            return Object.assign({}, state, {
                exclusive: action.exclusive
            });
        case filterTypes.UPDATE_SPORT:
            return Object.assign({}, state, {
                sport: action.sport
            });
        case filterTypes.UPDATE_EVENT:
            return Object.assign({}, state, {
                event: action.event
            });
        case filterTypes.UPDATE_MANY:
            action.filters.forceUpdate = true;
            if (action.filters.rights) action.filters.rights = action.filters.rights.map(function (r) {
                return Number(r);
            });
            return Object.assign({}, defaultFilter, action.filters);
        default:
            return state;
    }
};

/***/ }),

/***/ "./src/AppBundle/Resources/public/javascript/buy/reducers/marketplace.js":
/*!*******************************************************************************!*\
  !*** ./src/AppBundle/Resources/public/javascript/buy/reducers/marketplace.js ***!
  \*******************************************************************************/
/*! exports provided: marketplaceTypes, marketplace */
/*! exports used: marketplace, marketplaceTypes */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "b", function() { return marketplaceTypes; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return marketplace; });

var marketplaceTypes = {
    TEST: 'TEST'
};

var marketplace = function marketplace() {
    var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {
        testItem: "marketplaceReducer"

    };
    var action = arguments[1];


    switch (action.type) {
        case marketplaceTypes.TEST:
            return Object.assign({}, state, {
                test: action.text,
                id: action.id
            });
        default:
            return state;
    }
};

/***/ }),

/***/ "./src/AppBundle/Resources/public/javascript/ca/ca.api.content.js":
/*!************************************************************************!*\
  !*** ./src/AppBundle/Resources/public/javascript/ca/ca.api.content.js ***!
  \************************************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(jQuery, $) {/**
* Created by JuanCruz on 4/1/2018.
*/

var __apiStore = {
    tournaments: {}
};

window.ContentArena = window.ContentArena || {};
ContentArena.ContentApi = ContentArena.ContentApi || {};

ContentArena.ContentApi = {
    saveContentAsDraft: function saveContentAsDraft(content) {
        var deferred = jQuery.Deferred(),
            _this = this;

        $.ajax({
            url: envhosturl + "content/draft/save",
            type: "POST",
            data: JSON.stringify(content),
            contentType: "application/json",
            success: function success(response) {
                deferred.resolve(response);
            },
            error: function error(data, status) {
                deferred.reject({
                    data: data,
                    status: status
                });
            }
        });

        return deferred.promise();
    },
    saveContentAsInactive: function saveContentAsInactive(content) {
        var deferred = jQuery.Deferred(),
            _this = this;

        $.ajax({
            url: envhosturl + "api/listing/save",
            type: "POST",
            data: JSON.stringify(content),
            contentType: "application/json",
            success: function success(response) {
                deferred.resolve(response);
            },
            error: function error(data, status) {
                deferred.reject({
                    data: data,
                    status: status
                });
            }
        });

        return deferred.promise();
    },
    saveContentAsActive: function saveContentAsActive(content) {
        var deferred = jQuery.Deferred(),
            _this = this;

        $.ajax({
            url: envhosturl + "api/listing/publish",
            type: "POST",
            data: JSON.stringify(content),
            contentType: "application/json",
            success: function success(response) {
                deferred.resolve(response);
            },
            error: function error(data, status) {
                deferred.reject({
                    data: data,
                    status: status
                });
            }
        });

        return deferred.promise();
    },
    sendMessage: function sendMessage(message) {
        var deferred = jQuery.Deferred(),
            _this = this;

        $.ajax({
            url: envhosturl + "api/messages/send",
            type: "POST",
            data: JSON.stringify(message),
            contentType: "application/json",
            success: function success(response) {
                deferred.resolve(response);
            },
            error: function error(data, status) {
                deferred.reject({
                    data: data,
                    status: status
                });
            }
        });

        return deferred.promise();
    },
    getUserInfo: function getUserInfo() {
        var deferred = jQuery.Deferred(),
            _this = this;

        $.ajax({
            url: envhosturl + "api/user/info",
            type: "POST",
            contentType: "application/json",
            success: function success(response) {
                deferred.resolve(response);
            },
            error: function error(data, status) {
                deferred.reject({
                    data: data,
                    status: status
                });
            }
        });

        return deferred.promise();
    },
    getCompanyUsers: function getCompanyUsers() {
        var deferred = jQuery.Deferred(),
            _this = this;

        $.ajax({
            url: envhosturl + "api/company/users",
            type: "POST",
            contentType: "application/json",
            success: function success(response) {
                deferred.resolve(response);
            },
            error: function error(data, status) {
                deferred.reject({
                    data: data,
                    status: status
                });
            }
        });

        return deferred.promise();
    },
    updateCompany: function updateCompany(company) {
        var deferred = jQuery.Deferred(),
            _this = this;

        $.ajax({
            url: envhosturl + "api/company/update",
            type: "POST",
            data: JSON.stringify({ company: company }),
            contentType: "application/json",
            success: function success(response) {
                deferred.resolve(response);
            },
            error: function error(data, status) {
                deferred.reject({
                    data: data,
                    status: status
                });
            }
        });

        return deferred.promise();
    },
    updatePassword: function updatePassword(data) {
        var deferred = jQuery.Deferred(),
            _this = this;

        $.ajax({
            url: envhosturl + "api/user/password",
            type: "POST",
            data: JSON.stringify(data),
            contentType: "application/json",
            success: function success(response) {
                deferred.resolve(response);
            },
            error: function error(data, status) {
                deferred.reject({
                    data: data,
                    status: status
                });
            }
        });

        return deferred.promise();
    },
    updateUser: function updateUser(user) {
        var deferred = jQuery.Deferred(),
            _this = this;

        $.ajax({
            url: envhosturl + "api/user/update",
            type: "POST",
            data: JSON.stringify({ user: user }),
            contentType: "application/json",
            success: function success(response) {
                deferred.resolve(response);
            },
            error: function error(data, status) {
                deferred.reject({
                    data: data,
                    status: status
                });
            }
        });

        return deferred.promise();
    },
    getThread: function getThread(customId) {
        var deferred = jQuery.Deferred(),
            _this = this;

        $.ajax({
            url: envhosturl + "api/messages/thread",
            type: "POST",
            data: JSON.stringify({ customId: customId }),
            contentType: "application/json",
            success: function success(response) {
                deferred.resolve(response);
            },
            error: function error(data, status) {
                deferred.reject({
                    data: data,
                    status: status
                });
            }
        });

        return deferred.promise();
    },
    getThreads: function getThreads() {
        var deferred = jQuery.Deferred(),
            _this = this;

        $.ajax({
            url: envhosturl + "api/messages/threads",
            type: "POST",
            contentType: "application/json",
            success: function success(response) {
                deferred.resolve(response);
            },
            error: function error(data, status) {
                deferred.reject({
                    data: data,
                    status: status
                });
            }
        });

        return deferred.promise();
    },
    placeBid: function placeBid(bid) {
        var deferred = jQuery.Deferred(),
            _this = this;

        $.ajax({
            url: envhosturl + "api/bid/place",
            type: "POST",
            data: JSON.stringify(bid),
            contentType: "application/json",
            success: function success(response) {
                deferred.resolve(response);
            },
            error: function error(data, status) {
                deferred.reject({
                    data: data,
                    status: status
                });
            }
        });

        return deferred.promise();
    },
    acceptBid: function acceptBid(bid, signature) {
        var deferred = jQuery.Deferred(),
            _this = this;

        bid.signature = signature;

        $.ajax({
            url: envhosturl + "api/bid/accept",
            type: "POST",
            data: JSON.stringify(bid),
            contentType: "application/json",
            success: function success(response) {
                deferred.resolve(response);
            },
            error: function error(data, status) {
                deferred.reject({
                    data: data,
                    status: status
                });
            }
        });

        return deferred.promise();
    },
    rejectBid: function rejectBid(bid) {
        var deferred = jQuery.Deferred(),
            _this = this;

        $.ajax({
            url: envhosturl + "api/bid/reject",
            type: "POST",
            data: JSON.stringify(bid),
            contentType: "application/json",
            success: function success(response) {
                deferred.resolve(response);
            },
            error: function error(data, status) {
                deferred.reject({
                    data: data,
                    status: status
                });
            }
        });

        return deferred.promise();
    },
    removeBid: function removeBid(bid) {
        var deferred = jQuery.Deferred(),
            _this = this;

        $.ajax({
            url: envhosturl + "api/bid/remove",
            type: "POST",
            data: JSON.stringify(bid),
            contentType: "application/json",
            success: function success(response) {
                deferred.resolve(response);
            },
            error: function error(data, status) {
                deferred.reject({
                    data: data,
                    status: status
                });
            }
        });

        return deferred.promise();
    },
    saveTmpFile: function saveTmpFile(files) {
        var deferred = jQuery.Deferred(),
            _this = this;

        var data = new FormData();
        data.append('file', files[0]);

        $.ajax({
            url: envhosturl + "content/save/file",
            type: "POST",
            data: data,
            processData: false,
            contentType: false,
            success: function success(response) {
                deferred.resolve(response);
            },
            error: function error(data, status) {
                deferred.reject({
                    data: data,
                    status: status
                });
            }
        });

        return deferred.promise();
    },
    getByCustomId: function getByCustomId(customId) {
        var deferred = jQuery.Deferred(),
            _this = this;

        $.ajax({
            url: envhosturl + "listing/details",
            type: "POST",
            data: {
                customId: customId
            },
            success: function success(response) {
                deferred.resolve(response);
            },
            error: function error(data, status) {
                deferred.reject({
                    data: data,
                    status: status
                });
            }
        });

        return deferred.promise();
    },
    getDraftListings: function getDraftListings() {
        var deferred = jQuery.Deferred();

        $.ajax({
            url: envhosturl + "api/listings/draft",
            type: "POST",
            success: function success(response) {
                deferred.resolve(response);
            },
            error: function error(data, status) {
                deferred.reject({
                    data: data,
                    status: status
                });
            }
        });

        return deferred.promise();
    },
    getInactiveListings: function getInactiveListings() {
        var deferred = jQuery.Deferred();

        $.ajax({
            url: envhosturl + "api/listings/inactive",
            type: "POST",
            success: function success(response) {
                deferred.resolve(response);
            },
            error: function error(data, status) {
                deferred.reject({
                    data: data,
                    status: status
                });
            }
        });

        return deferred.promise();
    },
    getActiveListings: function getActiveListings() {
        var deferred = jQuery.Deferred();

        $.ajax({
            url: envhosturl + "api/listings/active",
            type: "POST",
            success: function success(response) {
                deferred.resolve(response);
            },
            error: function error(data, status) {
                deferred.reject({
                    data: data,
                    status: status
                });
            }
        });

        return deferred.promise();
    },
    getExpiredListings: function getExpiredListings() {
        var deferred = jQuery.Deferred();

        $.ajax({
            url: envhosturl + "api/listings/expired",
            type: "POST",
            success: function success(response) {
                deferred.resolve(response);
            },
            error: function error(data, status) {
                deferred.reject({
                    data: data,
                    status: status
                });
            }
        });

        return deferred.promise();
    },
    removeListing: function removeListing(customId) {
        var deferred = jQuery.Deferred(),
            _this = this;

        $.ajax({
            url: envhosturl + "api/listings/remove",
            type: "POST",
            data: {
                customId: customId
            },
            success: function success(response) {
                deferred.resolve(response);
            },
            error: function error(data, status) {
                deferred.reject({
                    data: data,
                    status: status
                });
            }
        });

        return deferred.promise();
    },
    duplicateListing: function duplicateListing(customId) {
        var deferred = jQuery.Deferred(),
            _this = this;

        $.ajax({
            url: envhosturl + "api/listings/duplicate",
            type: "POST",
            data: {
                customId: customId
            },
            success: function success(response) {
                deferred.resolve(response);
            },
            error: function error(data, status) {
                deferred.reject({
                    data: data,
                    status: status
                });
            }
        });

        return deferred.promise();
    },
    deactivateListing: function deactivateListing(customId) {
        var deferred = jQuery.Deferred(),
            _this = this;

        $.ajax({
            url: envhosturl + "api/listings/deactivate",
            type: "POST",
            data: {
                customId: customId
            },
            success: function success(response) {
                deferred.resolve(response);
            },
            error: function error(data, status) {
                deferred.reject({
                    data: data,
                    status: status
                });
            }
        });

        return deferred.promise();
    },
    archiveListing: function archiveListing(customId) {
        var deferred = jQuery.Deferred(),
            _this = this;

        $.ajax({
            url: envhosturl + "api/listings/archive",
            type: "POST",
            data: {
                customId: customId
            },
            success: function success(response) {
                deferred.resolve(response);
            },
            error: function error(data, status) {
                deferred.reject({
                    data: data,
                    status: status
                });
            }
        });

        return deferred.promise();
    },
    getClosedDeals: function getClosedDeals() {
        var deferred = jQuery.Deferred();

        $.ajax({
            url: envhosturl + "api/bid/closed",
            type: "POST",
            data: {},
            success: function success(response) {
                deferred.resolve(response);
            },
            error: function error(data, status) {
                deferred.reject({
                    data: data,
                    status: status
                });
            }
        });

        return deferred.promise();
    },
    getAllDeals: function getAllDeals() {
        var deferred = jQuery.Deferred();

        $.ajax({
            url: envhosturl + "api/bid/all",
            type: "POST",
            data: {},
            success: function success(response) {
                deferred.resolve(response);
            },
            error: function error(data, status) {
                deferred.reject({
                    data: data,
                    status: status
                });
            }
        });

        return deferred.promise();
    },
    getPendingDeals: function getPendingDeals() {
        var deferred = jQuery.Deferred();

        $.ajax({
            url: envhosturl + "api/bid/pending",
            type: "POST",
            data: {},
            success: function success(response) {
                deferred.resolve(response);
            },
            error: function error(data, status) {
                deferred.reject({
                    data: data,
                    status: status
                });
            }
        });

        return deferred.promise();
    },
    getRejectedDeals: function getRejectedDeals() {
        var deferred = jQuery.Deferred();

        $.ajax({
            url: envhosturl + "api/bid/rejected",
            type: "POST",
            data: {},
            success: function success(response) {
                deferred.resolve(response);
            },
            error: function error(data, status) {
                deferred.reject({
                    data: data,
                    status: status
                });
            }
        });

        return deferred.promise();
    },
    getWatchlistListings: function getWatchlistListings() {
        var deferred = jQuery.Deferred(),
            _this = this;

        $.ajax({
            url: envhosturl + "api/listings/watchlist",
            type: "POST",
            success: function success(response) {
                deferred.resolve(response);
            },
            error: function error(data, status) {
                deferred.reject({
                    data: data,
                    status: status
                });
            }
        });

        return deferred.promise();
    }
};
/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(/*! jquery */ "./node_modules/jquery/dist/jquery.js"), __webpack_require__(/*! jquery */ "./node_modules/jquery/dist/jquery.js")))

/***/ }),

/***/ "./src/AppBundle/Resources/public/javascript/ca/ca.api.js":
/*!****************************************************************!*\
  !*** ./src/AppBundle/Resources/public/javascript/ca/ca.api.js ***!
  \****************************************************************/
/*! no exports provided */
/*! all exports used */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* WEBPACK VAR INJECTION */(function($, jQuery) {/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_axios__ = __webpack_require__(/*! axios */ "./node_modules/axios/index.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_axios___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_axios__);


/**
 * Created by JuanCruz on 4/1/2018.
 */

var __apiStore = {
    tournaments: {}
};

window.ContentArena = window.ContentArena || {};

ContentArena.Api = {
    sortByLabel: function sortByLabel(a, b) {
        return a.name > b.name ? 1 : b.name > a.name ? -1 : 0;
    },
    sortBySport: function sortBySport(a, b) {

        if (a.sport.name > b.sport.name) return 1;
        if (a.sport.name < b.sport.name) return -1;
        if (a.sportCategory.name > b.sportCategory.name) return 1;
        if (a.sportCategory.name < b.sportCategory.name) return -1;
        if (a.name > b.name) return 1;
        if (a.name < b.name) return -1;
        return 0;
    },
    prepareList: function prepareList(list, categoryId) {

        var _this = this;

        list = $.map(list, function (item) {

            // Filter by category
            if (categoryId && item.category['@attributes'].id != categoryId) return null;

            return { name: item['@attributes'].name, externalId: item['@attributes'].id };
        });

        list.sort(_this.sortByLabel);

        return list;
    },
    getContent: function getContent(filter) {
        var deferred = jQuery.Deferred();

        $.ajax({
            url: envhosturl + "buy/search",
            type: "POST",
            data: filter,
            success: function success(response) {
                deferred.resolve(response);
            },
            error: function error(data, status) {
                deferred.reject({
                    data: data,
                    status: status
                });
            }
        });

        return deferred.promise();
    },
    getJsonContent: function getJsonContent(filter) {
        var deferred = jQuery.Deferred();

        $.ajax({
            url: envhosturl + "listings/marketplace",
            type: "POST",
            data: filter,
            success: function success(response) {
                deferred.resolve(response);
            },
            error: function error(data, status) {
                deferred.reject({
                    data: data,
                    status: status
                });
            }
        });

        return deferred.promise();
    },
    saveFilter: function saveFilter(filter) {
        var deferred = jQuery.Deferred();

        $.ajax({
            url: envhosturl + "buy/filter/save",
            type: "POST",
            data: filter,
            success: function success(response) {
                deferred.resolve(response);
            },
            error: function error(data, status) {
                deferred.reject({
                    data: data,
                    status: status
                });
            }
        });

        return deferred.promise();
    },
    getCountries: function getCountries() {
        var deferred = jQuery.Deferred();
        var _this = this;

        if (ContentArena.Data.Countries && ContentArena.Data.Countries.length > 0) {
            deferred.resolve(ContentArena.Data.Countries);
        } else {
            $.ajax({
                url: envhosturl + "api/search/countries/all",
                type: "POST",
                /**
                 * @param {array} response
                 */
                success: function success(response) {
                    response.sort(_this.sortByLabel);
                    response = response.map(function (c) {
                        c.regions = c.regions.map(function (r) {
                            return r.id;
                        });
                        c.externalId = c.id;
                        return c;
                    });
                    ContentArena.Data.Countries = response;
                    deferred.resolve(response);
                },
                error: function error(data, status) {
                    deferred.reject({
                        data: data,
                        status: status
                    });
                }
            });
        }

        return deferred.promise();
    },
    getActiveSports: function getActiveSports() {
        var deferred = jQuery.Deferred();
        var _this = this;
        $.ajax({
            url: envhosturl + "api/search/sports/active",
            type: "POST",
            /**
             * @param {array} response
             */
            success: function success(response) {
                deferred.resolve(response);
            },
            error: function error(data, status) {
                deferred.reject({
                    data: data,
                    status: status
                });
            }
        });

        return deferred.promise();
    },
    getCountriesFull: function getCountriesFull() {
        var deferred = jQuery.Deferred();
        var _this = this;
        $.ajax({
            url: envhosturl + "api/search/countries/full",
            type: "POST",
            /**
             * @param {array} response
             */
            success: function success(response) {
                response.sort(_this.sortByLabel);
                deferred.resolve(response);
            },
            error: function error(data, status) {
                deferred.reject({
                    data: data,
                    status: status
                });
            }
        });

        return deferred.promise();
    },
    getTerritories: function getTerritories() {
        var deferred = jQuery.Deferred();
        var _this = this;
        $.ajax({
            url: envhosturl + "api/search/territories",
            type: "POST",
            /**
             * @param {array} response
             */
            success: function success(response) {
                response.sort(_this.sortByLabel);
                deferred.resolve(response);
            },
            error: function error(data, status) {
                deferred.reject({
                    data: data,
                    status: status
                });
            }
        });

        return deferred.promise();
    },
    getRegions: function getRegions() {
        var deferred = jQuery.Deferred();
        var _this = this;
        $.ajax({
            url: envhosturl + "api/search/regions",
            type: "POST",
            /**
             * @param {array} response
             */
            success: function success(response) {
                response.sort(_this.sortByLabel);
                deferred.resolve(response);
            },
            error: function error(data, status) {
                deferred.reject({
                    data: data,
                    status: status
                });
            }
        });

        return deferred.promise();
    },
    getRights: function getRights(rightsPackage, group) {
        var deferred = jQuery.Deferred();
        var _this = this;
        $.ajax({
            url: envhosturl + "api/search/rights",
            type: "POST",
            data: {
                rightsPackage: rightsPackage,
                group: group
            },

            /**
             * @param {array} response
             */
            success: function success(response) {
                deferred.resolve(response);
            },
            error: function error(data, status) {
                deferred.reject({
                    data: data,
                    status: status
                });
            }
        });

        return deferred.promise();
    },
    getRightsPackage: function getRightsPackage(rightsPackage, group) {
        var deferred = jQuery.Deferred();
        var _this = this;
        $.ajax({
            url: envhosturl + "api/search/rights-package",
            type: "POST",
            data: {
                rightsPackage: rightsPackage,
                group: group
            },

            /**
             * @param {array} response
             */
            success: function success(response) {
                deferred.resolve(response);
            },
            error: function error(data, status) {
                deferred.reject({
                    data: data,
                    status: status
                });
            }
        });

        return deferred.promise();
    },
    getSports: function getSports() {
        var deferred = jQuery.Deferred();
        var _this = this;
        $.ajax({
            url: externalApiUrl + "v1/feed/sports",
            type: "GET",
            /**
             * @param {{sport:object}} response
             */
            success: function success(response) {

                var sports = _this.prepareList(response.sport);
                deferred.resolve(sports);
            },
            error: function error(data, status) {
                deferred.reject({
                    data: data,
                    status: status
                });
            }
        });

        return deferred.promise();
    },
    getContentDetails: function getContentDetails(id) {
        var deferred = jQuery.Deferred(),
            _this = this;

        $.ajax({
            url: envhosturl + "content/details/",
            type: "POST",
            data: { id: id },
            success: function success(response) {
                deferred.resolve(response);
            },
            error: function error(data, status) {
                deferred.reject({
                    data: data,
                    status: status
                });
            }
        });

        return deferred.promise();
    },
    getPendingListings: function getPendingListings(id) {
        var deferred = jQuery.Deferred(),
            _this = this;

        $.ajax({
            url: envhosturl + "content/pending-listings/",
            type: "POST",
            data: { id: id },
            success: function success(response) {
                deferred.resolve(response);
            },
            error: function error(data, status) {
                deferred.reject({
                    data: data,
                    status: status
                });
            }
        });

        return deferred.promise();
    },
    getCategories: function getCategories(sportId) {
        var deferred = jQuery.Deferred(),
            _this = this,
            list = [],
            cats = [];

        _this.getTournaments(sportId).done(function () {

            if (!__apiStore.tournaments[sportId]) {
                deferred.resolve([]);
                return;
            }

            list = $.map(__apiStore.tournaments[sportId].tournament, function (item) {

                var id = item.category['@attributes'].id;

                if (cats.indexOf(id) !== -1) {
                    return null;
                } else {
                    cats.push(id);
                    return item.category;
                }
            });

            deferred.resolve(_this.prepareList(list));
        });

        return deferred.promise();
    },
    getTournaments: function getTournaments(sportId, categoryId) {
        var deferred = jQuery.Deferred(),
            _this = this;

        if (__apiStore.tournaments[sportId] !== undefined) {
            deferred.resolve(_this.prepareList(__apiStore.tournaments[sportId].tournament, categoryId));
            return deferred.promise();
        }

        $.ajax({
            url: externalApiUrl + "v1/feed/tournaments",
            type: "POST",
            data: { id: sportId },
            /**
             * @param {{tournaments:{tournament:Array}}} response
             */
            success: function success(response) {

                // A comment
                if (response.tournaments === undefined || response.tournaments.tournament === undefined) {
                    deferred.resolve([]);
                    return;
                }

                __apiStore.tournaments[sportId] = response.tournaments;
                deferred.resolve(_this.prepareList(response.tournaments.tournament, categoryId));
            },
            error: function error(data, status) {
                deferred.reject({
                    data: data,
                    status: status
                });
            }
        });
        return deferred.promise();
    },
    getSeasons: function getSeasons(tournamentId) {
        var deferred = jQuery.Deferred(),
            _this = this;

        $.ajax({
            url: externalApiUrl + "v1/feed/seasons",
            type: "POST",
            data: { id: tournamentId },
            /**
             * @param {{tournaments:{tournament:Array}}} response
             */
            success: function success(response) {

                var list;

                if (response.seasons === undefined || response.seasons.season === undefined) return false;

                if ($.isArray(response.seasons.season)) {
                    list = $.map(response.seasons.season, function (item) {
                        return {
                            name: item['@attributes'].name,
                            externalId: item['@attributes'].id,
                            endDate: item['@attributes'].end_date,
                            startDate: item['@attributes'].start_date,
                            tournamentId: item['@attributes'].tournament_id,
                            year: item['@attributes'].year
                        };
                    }).reverse();
                } else {
                    list = [{
                        name: response.seasons.season['@attributes'].name,
                        externalId: response.seasons.season['@attributes'].id,
                        endDate: response.seasons.season['@attributes'].end_date,
                        startDate: response.seasons.season['@attributes'].start_date,
                        tournamentId: response.seasons.season['@attributes'].tournament_id,
                        year: response.seasons.season['@attributes'].year
                    }];
                }

                deferred.resolve(list);
            },
            error: function error(data, status) {
                deferred.reject({
                    data: data,
                    status: status
                });
            }
        });
        return deferred.promise();
    },
    getSchedule: function getSchedule(seasonId) {
        var deferred = jQuery.Deferred(),
            _this = this;

        $.ajax({
            url: externalApiUrl + "v1/feed/schedules",
            type: "POST",
            data: { id: seasonId },
            /**
             * @param {{tournaments:{tournament:Array}}} response
             */
            success: function success(response) {

                var list = {};

                if (response.sport_events === undefined || response.sport_events.sport_event === undefined) return false;

                response.sport_events.sport_event.forEach(function (item) {

                    var round = item.tournament_round ? item.tournament_round['@attributes'] : null;

                    if (!round) return;

                    var name = round.number ? "round_" + round.number : round.name;

                    if (!list[name]) list[name] = {};

                    if (!list[name].matches) list[name].matches = new Map();

                    list[name].matches.set(item['@attributes'].id, {
                        scheduled: item['@attributes'].scheduled,
                        externalId: item['@attributes'].id,
                        status: item['@attributes'].status,
                        tournamentRound: round,
                        competitors: item.competitors ? item.competitors.competitor.map(function (competitor) {
                            return competitor['@attributes'];
                        }) : null
                    });
                });

                deferred.resolve(list);
            },
            error: function error(data, status) {
                deferred.reject({
                    data: data,
                    status: status
                });
            }
        });
        return deferred.promise();
    },
    searchCompetition: function searchCompetition(request) {

        var deferred = jQuery.Deferred();
        var _this = this;

        $.ajax({
            url: envhosturl + 'api/search/tournament',
            data: {
                "content": request
            },
            traditional: true,
            type: "POST",
            dataType: "json",
            success: function success(data) {

                data.filter(function (item) {
                    return !!item.sport;
                }).sort(_this.sortBySport);

                deferred.resolve(data);
            },
            error: function error(data, status) {
                deferred.reject({
                    data: data,
                    status: status
                });
            }
        });
        return deferred.promise();
    },
    watchlist: function watchlist(id) {
        var deferred = jQuery.Deferred(),
            _this = this;

        $.ajax({
            url: envhosturl + "api/watchlist/add",
            type: "POST",
            data: { id: id },
            success: function success(response) {
                deferred.resolve(response);
            },
            error: function error(data, status) {
                deferred.reject({
                    data: data,
                    status: status
                });
            }
        });

        return deferred.promise();
    },
    getNotifications: function getNotifications() {
        return __WEBPACK_IMPORTED_MODULE_0_axios___default.a.get(envhosturl + 'api/notifications/');
    },
    markNotificationAsSeen: function markNotificationAsSeen(id) {
        return __WEBPACK_IMPORTED_MODULE_0_axios___default.a.post(envhosturl + 'api/notifications/seen', {
            id: id
        });
    }
};
/* WEBPACK VAR INJECTION */}.call(__webpack_exports__, __webpack_require__(/*! jquery */ "./node_modules/jquery/dist/jquery.js"), __webpack_require__(/*! jquery */ "./node_modules/jquery/dist/jquery.js")))

/***/ }),

/***/ "./src/AppBundle/Resources/public/javascript/ca/ca.data.js":
/*!*****************************************************************!*\
  !*** ./src/AppBundle/Resources/public/javascript/ca/ca.data.js ***!
  \*****************************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports) {

/**
 * Created by JuanCruz on 4/1/2018.
 */

window.ContentArena = window.ContentArena || {};

ContentArena.Data = ContentArena.Data || {};
ContentArena.Languages = ContentArena.Languages || {};

ContentArena.Data.TopSports = [{ name: "Soccer", externalId: "sr:sport:1" }, { name: "Basketball", externalId: "sr:sport:2" }, { name: "Baseball", externalId: "sr:sport:3" }, { name: "Tennis", externalId: "sr:sport:5" }, { name: "Cricket", externalId: "sr:sport:21" }, { name: "Field Hockey", externalId: "sr:sport:24" }, { name: "Volleyball", externalId: "sr:sport:23" }, { name: "Table Tennis", externalId: "sr:sport:20" }, { name: "Golf", externalId: "sr:sport:9" }, { name: "American Football", externalId: "sr:sport:16" }, { name: "Handball", externalId: "sr:sport:6" }];

ContentArena.Data.FullSports = [];
ContentArena.Data.ActiveSports = [];
ContentArena.Data.Countries = [];
ContentArena.Data.Territories = [];
ContentArena.Data.Regions = [];
ContentArena.Languages.Short = {
    "mdr": "Mandarin",
    "es": "Spanish",
    "en": "English",
    "hi": "Hindi",
    "ar": "Arabic",
    "pt": "Portuguese",
    "bn": "Bengali",
    "ru": "Russian",
    "ja": "Japanese",
    "jv": "Javanese",
    "de": "German",
    "all": "Show All"
};

ContentArena.Languages.Long = {
    "aa": "Afar",
    "af": "Afrikaans",
    "ain": "Ainu",
    "akz": "Alabama",
    "sq": "Albanian",
    "ale": "Aleut",
    "arq": "Algerian Arabic",
    "en_US": "American English",
    "ase": "American Sign Language",
    "am": "Amharic",
    "egy": "Ancient Egyptian",
    "grc": "Ancient Greek",
    "ar": "Arabic",
    "arc": "Aramaic",
    "arp": "Arapaho",
    "arw": "Arawak",
    "hy": "Armenian",
    "as": "Assamese",
    "asa": "Asu",
    "en_AU": "Australian English",
    "de_AT": "Austrian German",
    "ay": "Aymara",
    "az": "Azerbaijani",
    "ban": "Balinese",
    "eu": "Basque",
    "bar": "Bavarian",
    "be": "Belarusian",
    "bn": "Bengali",
    "bik": "Bikol",
    "bin": "Bini",
    "bs": "Bosnian",
    "brh": "Brahui",
    "bra": "Braj",
    "pt_BR": "Brazilian Portuguese",
    "br": "Breton",
    "en_GB": "British English",
    "bg": "Bulgarian",
    "my": "Burmese",
    "frc": "Cajun French",
    "en_CA": "Canadian English",
    "fr_CA": "Canadian French",
    "yue": "Cantonese",
    "car": "Carib",
    "ca": "Catalan",
    "cay": "Cayuga",
    "ceb": "Cebuano",
    "shu": "Chadian Arabic",
    "ce": "Chechen",
    "chr": "Cherokee",
    "qug": "Chimborazo Highland Quichua",
    "zh": "Chinese",
    "chn": "Chinook Jargon",
    "chp": "Chipewyan",
    "cho": "Choctaw",
    "cu": "Church Slavic",
    "cv": "Chuvash",
    "nwc": "Classical Newari",
    "syc": "Classical Syriac",
    "swc": "Congo Swahili",
    "cop": "Coptic",
    "kw": "Cornish",
    "co": "Corsican",
    "cr": "Cree",
    "mus": "Creek",
    "crh": "Crimean Turkish",
    "hr": "Croatian",
    "cs": "Czech",
    "dak": "Dakota",
    "da": "Danish",
    "del": "Delaware",
    "nl": "Dutch",
    "frs": "Eastern Frisian",
    "arz": "Egyptian Arabic",
    "en": "English",
    "eo": "Esperanto",
    "et": "Estonian",
    "pt_PT": "European Portuguese",
    "es_ES": "European Spanish",
    "ee": "Ewe",
    "fan": "Fang",
    "hif": "Fiji Hindi",
    "fj": "Fijian",
    "fil": "Filipino",
    "fi": "Finnish",
    "nl_BE": "Flemish",
    "fon": "Fon",
    "fr": "French",
    "gaa": "Ga",
    "gan": "Gan Chinese",
    "ka": "Georgian",
    "de": "German",
    "got": "Gothic",
    "grb": "Grebo",
    "el": "Greek",
    "gn": "Guarani",
    "gu": "Gujarati",
    "guz": "Gusii",
    "hai": "Haida",
    "ht": "Haitian",
    "hak": "Hakka Chinese",
    "ha": "Hausa",
    "haw": "Hawaiian",
    "he": "Hebrew",
    "hz": "Herero",
    "hi": "Hindi",
    "hit": "Hittite",
    "hmn": "Hmong",
    "hu": "Hungarian",
    "is": "Icelandic",
    "io": "Ido",
    "ig": "Igbo",
    "iu": "Inuktitut",
    "ik": "Inupiaq",
    "ga": "Irish",
    "it": "Italian",
    "jam": "Jamaican Creole English",
    "ja": "Japanese",
    "jv": "Javanese",
    "kaj": "Jju",
    "dyo": "Jola-Fonyi",
    "xal": "Kalmyk",
    "kam": "Kamba",
    "kbl": "Kanembu",
    "kn": "Kannada",
    "kr": "Kanuri",
    "kaa": "Kara-Kalpak",
    "krc": "Karachay-Balkar",
    "krl": "Karelian",
    "ks": "Kashmiri",
    "csb": "Kashubian",
    "kaw": "Kawi",
    "kk": "Kazakh",
    "ken": "Kenyang",
    "kha": "Khasi",
    "km": "Khmer",
    "kho": "Khotanese",
    "khw": "Khowar",
    "ki": "Kikuyu",
    "kmb": "Kimbundu",
    "krj": "Kinaray-a",
    "rw": "Kinyarwanda",
    "kiu": "Kirmanjki",
    "tlh": "Klingon",
    "bkm": "Kom",
    "kv": "Komi",
    "koi": "Komi-Permyak",
    "kg": "Kongo",
    "kok": "Konkani",
    "ko": "Korean",
    "kfo": "Koro",
    "kos": "Kosraean",
    "avk": "Kotava",
    "khq": "Koyra Chiini",
    "ses": "Koyraboro Senni",
    "kpe": "Kpelle",
    "kri": "Krio",
    "kj": "Kuanyama",
    "kum": "Kumyk",
    "ku": "Kurdish",
    "kru": "Kurukh",
    "kut": "Kutenai",
    "nmg": "Kwasio",
    "ky": "Kyrgyz",
    "quc": "K\u02BCiche\u02BC",
    "lad": "Ladino",
    "lah": "Lahnda",
    "lkt": "Lakota",
    "lam": "Lamba",
    "lag": "Langi",
    "lo": "Lao",
    "ltg": "Latgalian",
    "la": "Latin",
    "es_419": "Latin American Spanish",
    "lv": "Latvian",
    "lzz": "Laz",
    "lez": "Lezghian",
    "lij": "Ligurian",
    "li": "Limburgish",
    "ln": "Lingala",
    "lfn": "Lingua Franca Nova",
    "lzh": "Literary Chinese",
    "lt": "Lithuanian",
    "liv": "Livonian",
    "jbo": "Lojban",
    "lmo": "Lombard",
    "nds": "Low German",
    "sli": "Lower Silesian",
    "dsb": "Lower Sorbian",
    "loz": "Lozi",
    "lu": "Luba-Katanga",
    "lua": "Luba-Lulua",
    "lui": "Luiseno",
    "smj": "Lule Sami",
    "lun": "Lunda",
    "luo": "Luo",
    "lb": "Luxembourgish",
    "luy": "Luyia",
    "mde": "Maba",
    "mk": "Macedonian",
    "jmc": "Machame",
    "mad": "Madurese",
    "maf": "Mafa",
    "mag": "Magahi",
    "vmf": "Main-Franconian",
    "mai": "Maithili",
    "mak": "Makasar",
    "mgh": "Makhuwa-Meetto",
    "kde": "Makonde",
    "mg": "Malagasy",
    "ms": "Malay",
    "ml": "Malayalam",
    "mt": "Maltese",
    "mnc": "Manchu",
    "mdr": "Mandarin",
    "man": "Mandingo",
    "mni": "Manipuri",
    "gv": "Manx",
    "mi": "Maori",
    "arn": "Mapuche",
    "mr": "Marathi",
    "chm": "Mari",
    "mh": "Marshallese",
    "mwr": "Marwari",
    "mas": "Masai",
    "mzn": "Mazanderani",
    "byv": "Medumba",
    "men": "Mende",
    "mwv": "Mentawai",
    "mer": "Meru",
    "mgo": "Meta\u02BC",
    "es_MX": "Mexican Spanish",
    "mic": "Micmac",
    "dum": "Middle Dutch",
    "enm": "Middle English",
    "frm": "Middle French",
    "gmh": "Middle High German",
    "mga": "Middle Irish",
    "nan": "Min Nan Chinese",
    "min": "Minangkabau",
    "xmf": "Mingrelian",
    "mwl": "Mirandese",
    "lus": "Mizo",
    "ar_001": "Modern Standard Arabic",
    "moh": "Mohawk",
    "mdf": "Moksha",
    "ro_MD": "Moldavian",
    "lol": "Mongo",
    "mn": "Mongolian",
    "mfe": "Morisyen",
    "ary": "Moroccan Arabic",
    "mos": "Mossi",
    "mul": "Multiple Languages",
    "mua": "Mundang",
    "ttt": "Muslim Tat",
    "mye": "Myene",
    "naq": "Nama",
    "na": "Nauru",
    "nv": "Navajo",
    "ng": "Ndonga",
    "nap": "Neapolitan",
    "ne": "Nepali",
    "new": "Newari",
    "sba": "Ngambay",
    "nnh": "Ngiemboon",
    "jgo": "Ngomba",
    "yrl": "Nheengatu",
    "nia": "Nias",
    "niu": "Niuean",
    "zxx": "No linguistic content",
    "nog": "Nogai",
    "nd": "North Ndebele",
    "frr": "Northern Frisian",
    "se": "Northern Sami",
    "nso": "Northern Sotho",
    "no": "Norwegian",
    "nb": "Norwegian Bokm\xE5l",
    "nn": "Norwegian Nynorsk",
    "nov": "Novial",
    "nus": "Nuer",
    "nym": "Nyamwezi",
    "ny": "Nyanja",
    "nyn": "Nyankole",
    "tog": "Nyasa Tonga",
    "nyo": "Nyoro",
    "nzi": "Nzima",
    "nqo": "N\u02BCKo",
    "oc": "Occitan",
    "oj": "Ojibwa",
    "ang": "Old English",
    "fro": "Old French",
    "goh": "Old High German",
    "sga": "Old Irish",
    "non": "Old Norse",
    "peo": "Old Persian",
    "pro": "Old Proven\xE7al",
    "or": "Oriya",
    "om": "Oromo",
    "osa": "Osage",
    "os": "Ossetic",
    "ota": "Ottoman Turkish",
    "pal": "Pahlavi",
    "pfl": "Palatine German",
    "pau": "Palauan",
    "pi": "Pali",
    "pdc": "Pennsylvania German",
    "fa": "Persian",
    "phn": "Phoenician",
    "pcd": "Picard",
    "pms": "Piedmontese",
    "pdt": "Plautdietsch",
    "pon": "Pohnpeian",
    "pl": "Polish",
    "pnt": "Pontic",
    "pt": "Portuguese",
    "prg": "Prussian",
    "pa": "Punjabi",
    "qu": "Quechua",
    "ro": "Romanian",
    "rm": "Romansh",
    "rom": "Romany",
    "root": "Root",
    "ru": "Russian",
    "rwk": "Rwa",
    "sah": "Sakha",
    "sam": "Samaritan Aramaic",
    "sm": "Samoan",
    "sco": "Scots",
    "gd": "Scottish Gaelic",
    "sly": "Selayar",
    "sel": "Selkup",
    "seh": "Sena",
    "see": "Seneca",
    "sr": "Serbian",
    "sh": "Serbo-Croatian",
    "srr": "Serer",
    "sei": "Seri",
    "ksb": "Shambala",
    "shn": "Shan",
    "sn": "Shona",
    "ii": "Sichuan Yi",
    "scn": "Sicilian",
    "sid": "Sidamo",
    "bla": "Siksika",
    "szl": "Silesian",
    "zh_Hans": "Simplified Chinese",
    "sd": "Sindhi",
    "si": "Sinhala",
    "sms": "Skolt Sami",
    "den": "Slave",
    "sk": "Slovak",
    "sl": "Slovenian",
    "xog": "Soga",
    "sog": "Sogdien",
    "so": "Somali",
    "snk": "Soninke",
    "ckb": "Sorani Kurdish",
    "azb": "South Azerbaijani",
    "nr": "South Ndebele",
    "alt": "Southern Altai",
    "sma": "Southern Sami",
    "st": "Southern Sotho",
    "es": "Spanish",
    "srn": "Sranan Tongo",
    "zgh": "Standard Moroccan Tamazight",
    "suk": "Sukuma",
    "sux": "Sumerian",
    "su": "Sundanese",
    "sus": "Susu",
    "sw": "Swahili",
    "ss": "Swati",
    "sv": "Swedish",
    "fr_CH": "Swiss French",
    "gsw": "Swiss German",
    "de_CH": "Swiss High German",
    "syr": "Syriac",
    "shi": "Tachelhit",
    "tl": "Tagalog",
    "ty": "Tahitian",
    "dav": "Taita",
    "tg": "Tajik",
    "tly": "Talysh",
    "tmh": "Tamashek",
    "ta": "Tamil",
    "trv": "Taroko",
    "twq": "Tasawaq",
    "tt": "Tatar",
    "te": "Telugu",
    "ter": "Tereno",
    "teo": "Teso",
    "tet": "Tetum",
    "th": "Thai",
    "bo": "Tibetan",
    "tig": "Tigre",
    "ti": "Tigrinya",
    "tem": "Timne",
    "tiv": "Tiv",
    "tli": "Tlingit",
    "tpi": "Tok Pisin",
    "tkl": "Tokelau",
    "to": "Tongan",
    "fit": "Tornedalen Finnish",
    "zh_Hant": "Traditional Chinese",
    "tkr": "Tsakhur",
    "tsd": "Tsakonian",
    "tsi": "Tsimshian",
    "ts": "Tsonga",
    "tn": "Tswana",
    "tcy": "Tulu",
    "tum": "Tumbuka",
    "aeb": "Tunisian Arabic",
    "tr": "Turkish",
    "tk": "Turkmen",
    "tru": "Turoyo",
    "tvl": "Tuvalu",
    "tyv": "Tuvinian",
    "tw": "Twi",
    "kcg": "Tyap",
    "udm": "Udmurt",
    "uga": "Ugaritic",
    "uk": "Ukrainian",
    "umb": "Umbundu",
    "und": "Unknown Language",
    "hsb": "Upper Sorbian",
    "ur": "Urdu",
    "ug": "Uyghur",
    "uz": "Uzbek",
    "vai": "Vai",
    "ve": "Venda",
    "vec": "Venetian",
    "vep": "Veps",
    "vi": "Vietnamese",
    "vo": "Volap\xFCk",
    "vro": "V\xF5ro",
    "vot": "Votic",
    "vun": "Vunjo",
    "wa": "Walloon",
    "wae": "Walser",
    "war": "Waray",
    "was": "Washo",
    "guc": "Wayuu",
    "cy": "Welsh",
    "vls": "West Flemish",
    "fy": "Western Frisian",
    "mrj": "Western Mari",
    "wal": "Wolaytta",
    "wo": "Wolof",
    "wuu": "Wu Chinese",
    "xh": "Xhosa",
    "hsn": "Xiang Chinese",
    "yav": "Yangben",
    "yao": "Yao",
    "yap": "Yapese",
    "ybb": "Yemba",
    "yi": "Yiddish",
    "yo": "Yoruba",
    "zap": "Zapotec",
    "dje": "Zarma",
    "zza": "Zaza",
    "zea": "Zeelandic",
    "zen": "Zenaga",
    "za": "Zhuang",
    "gbz": "Zoroastrian Dari",
    "zu": "Zulu",
    "zun": "Zuni"
};

/***/ }),

/***/ "./src/AppBundle/Resources/public/javascript/ca/ca.models.js":
/*!*******************************************************************!*\
  !*** ./src/AppBundle/Resources/public/javascript/ca/ca.models.js ***!
  \*******************************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function($) {/**
 * Created by JuanCruz on 4/1/2018.
 */

$(function () {

    window.ContentArena = window.ContentArena || {};

    ContentArena.Model = ContentArena.Model || {};

    ContentArena.Model.RightPackage = function () {
        this.id = null;
        this.name = null;
        this.rights = {};
    };

    ContentArena.Model.Right = function () {
        this.id = null;
        this.name = null;
        this.rightItems = {};
    };

    ContentArena.Model.RightItem = function () {
        this.id = null;
        this.name = null;
        this.inputs = [];
    };

    ContentArena.Model.SelectedRight = function () {
        this.right = null;
        this.rightItem = null;
        this.group = null;
        this.inputs = [];
    };

    ContentArena.Model.SalesPackage = function () {
        var _this = this;

        this.salesMethod = null;
        this.fee = null;
        this.currency = null;
        this.id = null;
        this.name = null;
        this.territories = null;
        this.selectedTerritories = [];
        this.excludedTerritories = [];
        this.territoryBids = false;
        this.sellAsPackage = false;

        this.validate = function () {

            var description = "Sales Package " + _this.id + ": ",
                hasErrors = false;

            if (!_this.currency) {
                hasErrors = true;
                description += "Currency can't be empty. ";
            }

            if (!_this.fee) {
                hasErrors = true;
                description += "Fee can't be empty. ";
            }

            if (!_this.territories) {
                hasErrors = true;
                description += "Territories can't be empty. ";
            }

            if (!_this.salesMethod) {
                hasErrors = true;
                description += "Sales method can't be empty. ";
            }

            return {
                hasErrors: hasErrors,
                description: description
            };
        };
    };

    ContentArena.Model.Content = function () {
        var _this2 = this;

        this.sport = {};
        this.sports = [];
        this.tournament = null;
        this.category = null;
        this.salesPackages = {};
        this.installments = {};

        this.getTitle = function () {

            console.log(_this2);

            var title = "";

            if (_this2.sports.length > 0) {
                _this2.sports.forEach(function (sport, index, array) {
                    title += sport.value;
                    if (index + 1 != array.length) title += ", ";
                });
            }

            if (_this2.sport !== null) title += _this2.sport.value;
            if (_this2.category !== null) title += " - " + _this2.category.value;
            if (_this2.tournament !== null) title += " - " + _this2.tournament.value;

            if (_this2.seasons && _this2.seasons.length > 0) {
                title += " " + _this2.seasons.map(function (season) {
                    var values = season.value.split(" ");
                    return values[values.length - 1];
                }).join(" - ");
            }

            return title;
        };

        watch(this, "sports", function () {
            console.log("Updating sports", arguments);
        });
    };
});
/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(/*! jquery */ "./node_modules/jquery/dist/jquery.js")))

/***/ }),

/***/ "./src/AppBundle/Resources/public/javascript/ca/ca.utils.js":
/*!******************************************************************!*\
  !*** ./src/AppBundle/Resources/public/javascript/ca/ca.utils.js ***!
  \******************************************************************/
/*! no exports provided */
/*! all exports used */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_moment__ = __webpack_require__(/*! moment */ "./node_modules/moment/moment.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_moment___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_moment__);
var _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"]) _i["return"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError("Invalid attempt to destructure non-iterable instance"); } }; }();

/**
 * Created by JuanCruz on 4/1/2018.
 */



window.ContentArena = window.ContentArena || {};
ContentArena.Utils = {
    contentParserFromServer: function contentParserFromServer(content) {

        if (content.parsed) return content;

        var sort = true;

        if (content.extraData) {
            Object.entries(content.extraData).forEach(function (_ref) {
                var _ref2 = _slicedToArray(_ref, 2),
                    key = _ref2[0],
                    value = _ref2[1];

                return content[key] = value;
            });
        }

        content.tournament = content.tournament ? Array.isArray(content.tournament) ? content.tournament : [content.tournament] : [];
        content.sportCategory = content.sportCategory ? Array.isArray(content.sportCategory) ? content.sportCategory : [content.sportCategory] : [];

        if (content.selectedRightsBySuperRight) {
            content.rightsPackage.forEach(function (rp) {
                rp.selectedRights = content.selectedRightsBySuperRight[rp.id]['items'];
                rp.exclusive = content.selectedRightsBySuperRight[rp.id]['exclusive'];
            });
        }

        if (content.fixturesBySeason) {
            content.seasons.forEach(function (s, i) {
                s.fixtures = content.fixturesBySeason[i];
            });
        }

        if (content.salesPackages) {
            content.salesPackages.forEach(function (sp) {
                if (sp.salesMethod) sp.salesMethod = sp.salesMethod.name;
                if (sp.excludedCountries) sp.excludedTerritories = sp.excludedCountries.map(function (t) {
                    return { label: t.name, value: t.name };
                });
                if (sp.territories) sp.territories = sp.territories.map(function (t) {
                    return { label: t.name, value: t.name };
                });
                if (!sp.territories) sort = false;
            });
            if (sort) content.salesPackages.sort(this.sortSalesPackages).reverse();
        }

        if (content.endDate) content.endDate = __WEBPACK_IMPORTED_MODULE_0_moment___default()(content.endDate);
        if (content.startDate) content.startDate = __WEBPACK_IMPORTED_MODULE_0_moment___default()(content.startDate);

        content.step = Number(content.step);
        content.customSeasons = content.seasons.filter(function (s) {
            return s.externalId && s.externalId.startsWith("ca:");
        }).map(function (s, i) {
            var years = s.year.split("/");
            s.from = years.length === 1 ? years[0] : 2000 + Number(years[0]);
            s.to = years.length === 1 ? null : 2000 + Number(years[1]);
            if (content.fixturesBySeason) {
                s.fixtures = content.fixturesBySeason[i];
            }
            return s;
        });

        content.seasons = content.seasons.map(function (s) {
            if (s.externalId && s.externalId.startsWith("ca:")) {
                s.custom = true;
            }

            return s;
        });

        content.parsed = true;

        return content;
    },
    sortSalesPackages: function sortSalesPackages(a, b) {
        var c = function c(a, b) {
            return a > b ? 1 : b > a ? -1 : 0;
        };
        return c(a.territories.length, b.territories.length) || c(b.name, a.name);
    },
    isAPIAvailable: function isAPIAvailable() {
        // Check for the various File API support.
        if (window.File && window.FileReader && window.FileList && window.Blob) {
            // Great success! All the File APIs are supported.
            return true;
        } else {
            // source: File API availability - http://caniuse.com/#feat=fileapi
            // source: <output> availability - http://html5doctor.com/the-output-element/
            document.writeln('The HTML5 APIs used in this form are only available in the following browsers:<br />');
            // 6.0 File API & 13.0 <output>
            document.writeln(' - Google Chrome: 13.0 or later<br />');
            // 3.6 File API & 6.0 <output>
            document.writeln(' - Mozilla Firefox: 6.0 or later<br />');
            // 10.0 File API & 10.0 <output>
            document.writeln(' - Internet Explorer: Not supported (partial support expected in 10.0)<br />');
            // ? File API & 5.1 <output>
            document.writeln(' - Safari: Not supported<br />');
            // ? File API & 9.2 <output>
            document.writeln(' - Opera: Not supported');
            return false;
        }
    },
    addOrdinal: function addOrdinal(n) {
        var str = n.toString().slice(-1),
            ord = '';
        switch (str) {
            case '1':
                ord = 'st';
                break;
            case '2':
                ord = 'nd';
                break;
            case '3':
                ord = 'rd';
                break;
            case '4':
            case '5':
            case '6':
            case '7':
            case '8':
            case '9':
            case '0':
                ord = 'th';
                break;
        }
        return n + ord;
    },

    /**
     *
     * @param value
     * @param arr
     * @param prop
     * @returns {number}
     */
    getIndex: function getIndex(value, arr, prop) {
        for (var i = 0; i < arr.length; i++) {
            if (arr[i][prop] === value) {
                return i;
            }
        }
        return -1; //to handle the case where the value doesn't exist
    }
};

/***/ }),

/***/ "./src/AppBundle/Resources/public/javascript/main/actions/userActions.js":
/*!*******************************************************************************!*\
  !*** ./src/AppBundle/Resources/public/javascript/main/actions/userActions.js ***!
  \*******************************************************************************/
/*! exports provided: updateProfile, loadUserData */
/*! exports used: loadUserData, updateProfile */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "b", function() { return updateProfile; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return loadUserData; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__reducers_user__ = __webpack_require__(/*! ../reducers/user */ "./src/AppBundle/Resources/public/javascript/main/reducers/user.js");


var updateProfile = function updateProfile(profile) {
    return {
        type: __WEBPACK_IMPORTED_MODULE_0__reducers_user__["b" /* userTypes */].PROFILE,
        profile: profile
    };
};

var loadUserData = function loadUserData() {
    var dataContainer = document.getElementsByClassName('marketplace-container');
    var user = {};

    if (dataContainer && dataContainer.length) {
        var userStr = dataContainer[0].dataset.loggedUserData;
        try {
            user = JSON.parse(userStr);
        } catch (e) {}
    }

    return {
        type: __WEBPACK_IMPORTED_MODULE_0__reducers_user__["b" /* userTypes */].LOAD_USER_DATA,
        user: user
    };
};

/***/ }),

/***/ "./src/AppBundle/Resources/public/javascript/main/actions/utils.js":
/*!*************************************************************************!*\
  !*** ./src/AppBundle/Resources/public/javascript/main/actions/utils.js ***!
  \*************************************************************************/
/*! exports provided: getCurrencySymbol, goTo, historyGoTo, goToListing, viewLicense, viewLicenseBid, viewLicenseBundle, viewLicenseCustom, goToMarketplace, goToClosedDeals, getFee, getFullName, limitText, editedProgramSelected, parseSeasons */
/*! exports used: editedProgramSelected, getCurrencySymbol, getFee, getFullName, goTo, goToListing, limitText, parseSeasons, viewLicense, viewLicenseBid, viewLicenseBundle, viewLicenseCustom */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "b", function() { return getCurrencySymbol; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "e", function() { return goTo; });
/* unused harmony export historyGoTo */
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "f", function() { return goToListing; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "i", function() { return viewLicense; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "j", function() { return viewLicenseBid; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "k", function() { return viewLicenseBundle; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "l", function() { return viewLicenseCustom; });
/* unused harmony export goToMarketplace */
/* unused harmony export goToClosedDeals */
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "c", function() { return getFee; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "d", function() { return getFullName; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "g", function() { return limitText; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return editedProgramSelected; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "h", function() { return parseSeasons; });
var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

var getCurrencySymbol = function getCurrencySymbol(code) {
    return code === "EUR" ? "€" : "$";
};

var goTo = function goTo(route, openNew) {

    if (openNew) {
        window.open(envhosturl + route, "_blank");
    } else {
        window.location.href = envhosturl + route;
    }
};

var historyGoTo = function historyGoTo(route) {
    window.history.pushState(null, null, envhosturl + route);
};

var goToListing = function goToListing(id, openNew) {
    goTo("listing/" + id, openNew);
};

var viewLicense = function viewLicense(id) {
    goTo("license/preview/" + id);
};

var viewLicenseBid = function viewLicenseBid(id) {
    goTo("license/bid/" + id);
};

var viewLicenseBundle = function viewLicenseBundle(id, listingId) {
    goTo("license/bundle/" + id + "/" + listingId);
};

var viewLicenseCustom = function viewLicenseCustom(listingId, bundleId, bid) {

    var serialize = function serialize(obj, prefix) {
        var str = [],
            p;
        for (p in obj) {
            if (obj.hasOwnProperty(p)) {
                var k = prefix ? prefix + "[" + p + "]" : p,
                    v = obj[p];
                str.push(v !== null && (typeof v === "undefined" ? "undefined" : _typeof(v)) === "object" ? serialize(v, k) : encodeURIComponent(k) + "=" + encodeURIComponent(v));
            }
        }
        return str.join("&");
    };

    //let queryString = Object.keys(bundle).map(key => key + '=' + bundle[key]).join('&');
    goTo("license/custom/" + listingId + "/" + bundleId + "?" + serialize({ bid: bid }));
};

var goToMarketplace = function goToMarketplace() {
    goTo("marketplace");
};

var goToClosedDeals = function goToClosedDeals() {
    goTo("closeddeals");
};

var getFee = function getFee(salesPackage) {
    var feeNumber = parseFloat(salesPackage.fee);
    return feeNumber.toLocaleString() + " " + getCurrencySymbol(salesPackage.currency.code);
};

var getFullName = function getFullName(user) {
    return user.firstName + " " + user.lastName;
};

var limitText = function limitText(txt) {
    var limit = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 25;

    return txt.length > limit ? txt.substring(0, limit) + "..." : txt;
};

var editedProgramSelected = function editedProgramSelected(rights) {
    return rights.filter(function (r) {
        return r.shortLabel === 'PR';
    }).length === 1;
};

var parseSeasons = function parseSeasons(content) {
    if (content.seasons === undefined) return content;
    content.seasons.forEach(function (season) {
        season.selectedSchedules = {};

        if (season.schedules === undefined) return;

        Object.entries(season.schedules).filter(function (round) {
            if (!round || round.length <= 1) return false;
            return round[1].selected;
        }).map(function (round) {
            if (!season.selectedSchedules[round[0]]) season.selectedSchedules[round[0]] = { matches: [] };
            if (round[1].selected) {
                Array.from(round[1].matches.values()).filter(function (match) {
                    return match.selected;
                }).forEach(function (match) {
                    season.selectedSchedules[round[0]].matches.push(match);
                });
            }
        });
    });

    return content;
};

/***/ }),

/***/ "./src/AppBundle/Resources/public/javascript/main/components/CommercialSalesBundle.js":
/*!********************************************************************************************!*\
  !*** ./src/AppBundle/Resources/public/javascript/main/components/CommercialSalesBundle.js ***!
  \********************************************************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_react__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_moment_moment__ = __webpack_require__(/*! moment/moment */ "./node_modules/moment/moment.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_moment_moment___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_moment_moment__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_react_table__ = __webpack_require__(/*! react-table */ "./node_modules/react-table/es/index.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_react_modal__ = __webpack_require__(/*! react-modal */ "./node_modules/react-modal/lib/index.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_react_modal___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_3_react_modal__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__main_components_DigitalSignature__ = __webpack_require__(/*! ../../main/components/DigitalSignature */ "./src/AppBundle/Resources/public/javascript/main/components/DigitalSignature.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__actions_utils__ = __webpack_require__(/*! ../actions/utils */ "./src/AppBundle/Resources/public/javascript/main/actions/utils.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__Icons__ = __webpack_require__(/*! ./Icons */ "./src/AppBundle/Resources/public/javascript/main/components/Icons.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__styles_custom__ = __webpack_require__(/*! ../styles/custom */ "./src/AppBundle/Resources/public/javascript/main/styles/custom.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__main_components_SendMessage__ = __webpack_require__(/*! ../../main/components/SendMessage */ "./src/AppBundle/Resources/public/javascript/main/components/SendMessage.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9_prop_types__ = __webpack_require__(/*! prop-types */ "./node_modules/prop-types/index.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9_prop_types___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_9_prop_types__);
var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }













var CommercialSalesBundle = function (_React$Component) {
    _inherits(CommercialSalesBundle, _React$Component);

    function CommercialSalesBundle(props) {
        _classCallCheck(this, CommercialSalesBundle);

        var _this2 = _possibleConstructorReturn(this, (CommercialSalesBundle.__proto__ || Object.getPrototypeOf(CommercialSalesBundle)).call(this, props));

        _this2.acceptBid = function () {
            var signature = _this2.state.signature;
            var contentId = _this2.props.contentId;

            var selectedBid = _this2.state.selectedBid;
            selectedBid.content = contentId;
            _this2.setState({ saving: true });
            ContentArena.ContentApi.acceptBid(selectedBid, signature).done(function (response) {
                _this2.setState({ approveModalIsOpen: false, saving: false });
                _this2.props.onUpdate();
            });
        };

        _this2.removeBid = function () {
            var selectedBid = _this2.state.selectedBid;
            _this2.setState({ saving: true });
            ContentArena.ContentApi.removeBid(selectedBid).done(function (response) {
                //this.setState({removeModalIsOpen : false, saving : false})
                _this2.props.onUpdate();
            });
        };

        _this2.rejectBid = function () {
            var selectedBid = _this2.state.selectedBid;
            selectedBid.message = _this2.state.message;
            _this2.setState({ saving: true });
            ContentArena.ContentApi.rejectBid(selectedBid).always(function (response) {
                _this2.setState({ rejectModalIsOpen: false, saving: false });
                _this2.props.onUpdate();
            });
        };

        _this2.closeRemoveModal = function () {
            _this2.setState({ removeModalIsOpen: false });
        };

        _this2.closeApproveModal = function () {
            _this2.setState({ approveModalIsOpen: false });
        };

        _this2.closeRejectModal = function () {
            _this2.setState({ rejectModalIsOpen: false });
        };

        _this2.renderApproveModal = function () {
            var salesBundle = _this2.props.salesBundle;
            var _this2$state = _this2.state,
                signature = _this2$state.signature,
                saving = _this2$state.saving,
                selectedBid = _this2$state.selectedBid;


            return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                __WEBPACK_IMPORTED_MODULE_3_react_modal___default.a,
                {
                    isOpen: _this2.state.approveModalIsOpen,
                    onRequestClose: _this2.closeApproveModal,
                    bodyOpenClassName: "generic-modal",
                    style: __WEBPACK_IMPORTED_MODULE_7__styles_custom__["a" /* GenericModalStyle */]
                },
                __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                    "div",
                    { className: "generic-modal-container" },
                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        "div",
                        { className: "title" },
                        _this2.context.t("COMMERCIAL_ACTIVITY_BID_TITLE_ACCEPT")
                    ),
                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        "div",
                        { className: "container" },
                        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_4__main_components_DigitalSignature__["a" /* default */], { signature: signature, onReady: function onReady(signature) {
                                _this2.setState({ signature: signature });
                            } })
                    ),
                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        "div",
                        { className: "buttons" },
                        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                            "button",
                            { style: { fontSize: 13 }, onClick: function onClick() {
                                    Object(__WEBPACK_IMPORTED_MODULE_5__actions_utils__["j" /* viewLicenseBid */])(selectedBid.customId);
                                } },
                            "View License Agreement"
                        ),
                        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                            "button",
                            { onClick: _this2.closeApproveModal },
                            _this2.context.t("COMMERCIAL_ACTIVITY_BID_BUTTON_CANCEL")
                        ),
                        !saving && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                            "button",
                            { className: "confirm", disabled: !signature, onClick: _this2.acceptBid },
                            _this2.context.t("COMMERCIAL_ACTIVITY_BID_BUTTON_ACCEPT")
                        ),
                        saving && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement("i", { className: "fa fa-spin fa-cog" })
                    )
                )
            );
        };

        _this2.renderRejectModal = function () {
            var salesBundle = _this2.props.salesBundle;
            var _this2$state2 = _this2.state,
                saving = _this2$state2.saving,
                message = _this2$state2.message;


            return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                __WEBPACK_IMPORTED_MODULE_3_react_modal___default.a,
                {
                    isOpen: _this2.state.rejectModalIsOpen,
                    onRequestClose: _this2.closeRejectModal,
                    bodyOpenClassName: "generic-modal",
                    style: __WEBPACK_IMPORTED_MODULE_7__styles_custom__["a" /* GenericModalStyle */]
                },
                __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                    "div",
                    { className: "generic-modal-container" },
                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        "div",
                        { className: "title" },
                        _this2.context.t("COMMERCIAL_ACTIVITY_BID_TITLE_REJECT")
                    ),
                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        "div",
                        { className: "container" },
                        _this2.context.t("COMMERCIAL_ACTIVITY_BID_REJECT_MESSAGE"),
                        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement("textarea", { onChange: function onChange(e) {
                                _this2.setState({ message: e.target.value });
                            }, value: message })
                    ),
                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        "div",
                        { className: "buttons" },
                        !saving && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                            "button",
                            { className: "confirm", onClick: _this2.rejectBid },
                            _this2.context.t("COMMERCIAL_ACTIVITY_BID_BUTTON_REJECT_CONFIRM")
                        ),
                        saving && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement("i", { className: "fa fa-spin fa-cog" }),
                        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                            "button",
                            { onClick: _this2.closeRejectModal },
                            _this2.context.t("COMMERCIAL_ACTIVITY_BID_BUTTON_REJECT_CANCEL")
                        )
                    )
                )
            );
        };

        _this2.renderRemoveModal = function () {
            var saving = _this2.state.saving;


            return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                __WEBPACK_IMPORTED_MODULE_3_react_modal___default.a,
                {
                    isOpen: _this2.state.removeModalIsOpen,
                    onRequestClose: _this2.closeRemoveModal,
                    bodyOpenClassName: "generic-modal",
                    style: __WEBPACK_IMPORTED_MODULE_7__styles_custom__["a" /* GenericModalStyle */]
                },
                __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                    "div",
                    { className: "generic-modal-container" },
                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        "div",
                        { className: "title" },
                        _this2.context.t("COMMERCIAL_ACTIVITY_BID_TITLE_REMOVE")
                    ),
                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement("div", { className: "container" }),
                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        "div",
                        { className: "buttons" },
                        !saving && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                            "button",
                            { onClick: _this2.removeBid, className: "confirm" },
                            _this2.context.t("COMMERCIAL_ACTIVITY_BID_BUTTON_REMOVE_CONFIRM")
                        ),
                        saving && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement("i", { className: "fa fa-spin fa-cog" }),
                        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                            "button",
                            { onClick: _this2.closeRemoveModal },
                            _this2.context.t("COMMERCIAL_ACTIVITY_BID_BUTTON_REMOVE_CANCEL")
                        )
                    )
                )
            );
        };

        _this2.state = {
            approveModalIsOpen: false,
            rejectModalIsOpen: false,
            removeModalIsOpen: false,
            showBids: props.bidsOpen

        };
        return _this2;
    }

    _createClass(CommercialSalesBundle, [{
        key: "componentWillReceiveProps",
        value: function componentWillReceiveProps() {
            this.setState({ removeModalIsOpen: false, saving: false });
        }
    }, {
        key: "render",
        value: function render() {
            var _this3 = this;

            var _props = this.props,
                salesBundle = _props.salesBundle,
                company = _props.company,
                onDelete = _props.onDelete,
                contentId = _props.contentId;
            var showBids = this.state.showBids;


            var closedDeals = salesBundle.bids.filter(function (b) {
                return b.status.name === "APPROVED";
            });
            var totalFee = closedDeals.length > 0 ? closedDeals.map(function (b) {
                return Number(b.totalFee);
            }).reduce(function (t, n) {
                return t + n;
            }) : null;
            var _this = this;

            return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                "div",
                { className: "commercial-sales-bundles" },
                this.renderApproveModal(),
                this.renderRejectModal(),
                this.renderRemoveModal(),
                __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                    "div",
                    { className: "commercial-sales-bundles-container", onClick: function onClick() {
                            _this3.setState({ showBids: !showBids });
                        } },
                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        "div",
                        { className: "sales-bundle-item" },
                        salesBundle.bundleMethod === "SELL_AS_BUNDLE" && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement("img", { style: { width: 26, height: 23 }, src: __WEBPACK_IMPORTED_MODULE_6__Icons__["o" /* fixedIcon */] }),
                        salesBundle.name
                    ),
                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        "div",
                        { className: "sales-bundle-item" },
                        salesBundle.fee > 0 && Object(__WEBPACK_IMPORTED_MODULE_5__actions_utils__["c" /* getFee */])(salesBundle),
                        salesBundle.salesMethod === "BIDDING" && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement("img", { style: { width: 23, height: 23 }, src: __WEBPACK_IMPORTED_MODULE_6__Icons__["c" /* bidIcon */] })
                    ),
                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        "div",
                        { className: "sales-bundle-item-right", style: { marginLeft: 'auto' } },
                        this.context.t(["closed deal", "closed deals", "n"], { n: closedDeals.length })
                    ),
                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        "div",
                        { className: "sales-bundle-item-right" },
                        this.context.t(["open bid", "open bids", "n"], { n: salesBundle.bids.filter(function (b) {
                                return b.status.name === "PENDING";
                            }).length })
                    ),
                    totalFee && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        "div",
                        { className: "sales-bundle-item-right" },
                        totalFee,
                        " ",
                        Object(__WEBPACK_IMPORTED_MODULE_5__actions_utils__["b" /* getCurrencySymbol */])(salesBundle.currency.code)
                    ),
                    salesBundle.bids.length > 0 && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        "div",
                        { className: "sales-bundle-show-bids" },
                        !showBids && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement("img", { src: __WEBPACK_IMPORTED_MODULE_6__Icons__["b" /* addIcon */] }),
                        showBids && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement("img", { src: __WEBPACK_IMPORTED_MODULE_6__Icons__["g" /* cancelIcon */] })
                    )
                ),
                showBids && salesBundle.bids.length > 0 && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                    "div",
                    null,
                    salesBundle.bids.map(function (b) {
                        return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_8__main_components_SendMessage__["a" /* default */], { role: 'SELLER',
                            ref: "messagePopup" + b.id,
                            listingId: contentId, recipient: b.buyerUser.company });
                    }),
                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_2_react_table__["default"], {
                        className: "ca-table",
                        defaultPageSize: 30,
                        showPageSizeOptions: false,
                        showPagination: false,
                        onPageChange: this.onPageChange,
                        minRows: 0,
                        resizable: false,
                        data: salesBundle.bids,
                        select: this.props.select,
                        columns: [{
                            accessor: function accessor(d) {
                                return d.buyerUser.company.legalName;
                            },
                            Cell: function Cell(props) {
                                return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                    "div",
                                    null,
                                    props.value
                                );
                            },
                            Header: this.context.t("Buyer"),
                            headerClassName: 'table-header-big',
                            className: 'table-header-big',
                            id: "company"
                        }, {
                            Header: this.context.t("Fee"),
                            headerClassName: 'table-header',
                            className: 'table-header',
                            id: "price",
                            accessor: function accessor(d) {
                                return { fee: d.totalFee, currency: salesBundle.currency.code };
                            },
                            Cell: function Cell(props) {
                                return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                    "div",
                                    { className: "blue" },
                                    parseFloat(props.value.fee).toLocaleString() + " " + Object(__WEBPACK_IMPORTED_MODULE_5__actions_utils__["b" /* getCurrencySymbol */])(props.value.currency)
                                );
                            }
                        }, {
                            Header: this.context.t("User"),
                            headerClassName: 'table-header-big',
                            className: 'table-header-big',
                            accessor: 'buyerUser',
                            Cell: function Cell(props) {
                                return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                    "div",
                                    null,
                                    props.value.firstName + " " + props.value.lastName
                                );
                            }

                        }, {
                            Header: this.context.t("Action"),
                            headerClassName: 'table-header',
                            className: 'table-header',
                            accessor: 'status.name',
                            Cell: function Cell(props) {
                                return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                    "div",
                                    null,
                                    props.value === "APPROVED" && "Closed Deal",
                                    props.value === "PENDING" && "Bid Placed",
                                    props.value === "REJECTED" && "Bid Declined"
                                );
                            }

                        }, {
                            Header: this.context.t("COMMERCIAL_ACTIVITY_ACTION_DATE"),
                            headerClassName: 'table-header',
                            className: 'table-header',
                            accessor: 'createdAt',
                            Cell: function Cell(props) {
                                return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                    "div",
                                    null,
                                    __WEBPACK_IMPORTED_MODULE_1_moment_moment___default()(props.value).format('DD/MM/YYYY')
                                );
                            }

                        }, {
                            Header: this.context.t("Actions"),
                            headerClassName: 'table-header',
                            className: 'table-header',
                            id: "actions",
                            accessor: function accessor(b) {
                                return { status: b.status.name, bid: b };
                            },
                            Cell: function Cell(props) {
                                return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                    "div",
                                    { className: "" },
                                    props.value.status === "REJECTED" && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement("img", { style: { margin: '0 10px', cursor: 'pointer' }, onClick: function onClick() {
                                            _this3.setState({ showRemoveConfirm: true, selectedBidForDeletion: props.value.bid });
                                        }, src: __WEBPACK_IMPORTED_MODULE_6__Icons__["f" /* bucketIcon */] }),
                                    props.value.status === "PENDING" && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement("img", { style: { margin: '0 10px', cursor: 'pointer' }, onClick: function onClick() {
                                            _this3.setState({ approveModalIsOpen: true, selectedBid: props.value.bid });
                                        }, src: __WEBPACK_IMPORTED_MODULE_6__Icons__["d" /* blueCheckIcon */] }),
                                    props.value.status === "PENDING" && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement("img", { style: { margin: '0 10px', cursor: 'pointer' }, onClick: function onClick() {
                                            _this3.setState({ rejectModalIsOpen: true, selectedBid: props.value.bid });
                                        }, src: __WEBPACK_IMPORTED_MODULE_6__Icons__["g" /* cancelIcon */] }),
                                    (props.value.status === "APPROVED" || props.value.status === "PENDING") && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement("img", { style: { margin: '0 10px', cursor: 'pointer' }, onClick: function onClick() {
                                            Object(__WEBPACK_IMPORTED_MODULE_5__actions_utils__["j" /* viewLicenseBid */])(props.value.bid.customId);
                                        }, src: __WEBPACK_IMPORTED_MODULE_6__Icons__["j" /* docIcon */] }),
                                    props.value.status === "APPROVED" && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement("img", { style: { margin: '0 10px', cursor: 'pointer' }, onClick: function onClick() {
                                            if (props.value.status === "APPROVED") {
                                                window.location.href = "/redirect-integration/messages-by-bid/" + props.value.bid.id;
                                            } else {
                                                _this.refs["messagePopup" + props.value.bid.id].open();
                                            }
                                        }, src: __WEBPACK_IMPORTED_MODULE_6__Icons__["e" /* blueEnvelopeIcon */] }),
                                    _this3.state.showRemoveConfirm && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                        "div",
                                        { className: "confirmation-tooltip" },
                                        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                            "div",
                                            { className: "confirmation-text", style: { whiteSpace: 'normal' } },
                                            _this3.context.t("COMMERCIAL_ACTIVITY_BID_TITLE_REMOVE")
                                        ),
                                        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                            "button",
                                            { className: "button button-confirm", onClick: function onClick(e) {
                                                    onDelete(_this3.state.selectedBidForDeletion.id);
                                                    _this3.setState({ showRemoveConfirm: false, selectedBidForDeletion: null });
                                                    e.stopPropagation();
                                                } },
                                            _this3.context.t("COMMERCIAL_ACTIVITY_BID_BUTTON_REMOVE_CONFIRM")
                                        ),
                                        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                            "button",
                                            { className: "button", onClick: function onClick(e) {
                                                    _this3.setState({ showRemoveConfirm: false, selectedBidForDeletion: null });
                                                    e.stopPropagation();
                                                } },
                                            _this3.context.t("COMMERCIAL_ACTIVITY_BID_BUTTON_REMOVE_CANCEL")
                                        )
                                    )
                                );
                            }
                        }]
                    })
                )
            );
        }
    }]);

    return CommercialSalesBundle;
}(__WEBPACK_IMPORTED_MODULE_0_react___default.a.Component);

CommercialSalesBundle.contextTypes = {
    t: __WEBPACK_IMPORTED_MODULE_9_prop_types__["PropTypes"].func.isRequired
};

/* harmony default export */ __webpack_exports__["a"] = (CommercialSalesBundle);

/***/ }),

/***/ "./src/AppBundle/Resources/public/javascript/main/components/ContentListing.js":
/*!*************************************************************************************!*\
  !*** ./src/AppBundle/Resources/public/javascript/main/components/ContentListing.js ***!
  \*************************************************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_react__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_moment_moment__ = __webpack_require__(/*! moment/moment */ "./node_modules/moment/moment.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_moment_moment___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_moment_moment__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__buy_components_ContentListingEventDetails__ = __webpack_require__(/*! ../../buy/components/ContentListingEventDetails */ "./src/AppBundle/Resources/public/javascript/buy/components/ContentListingEventDetails.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__buy_components_ContentListingRightsPackage__ = __webpack_require__(/*! ../../buy/components/ContentListingRightsPackage */ "./src/AppBundle/Resources/public/javascript/buy/components/ContentListingRightsPackage.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_prop_types__ = __webpack_require__(/*! prop-types */ "./node_modules/prop-types/index.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_prop_types___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_4_prop_types__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__Icons__ = __webpack_require__(/*! ./Icons */ "./src/AppBundle/Resources/public/javascript/main/components/Icons.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6_react_modal__ = __webpack_require__(/*! react-modal */ "./node_modules/react-modal/lib/index.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6_react_modal___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_6_react_modal__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__styles_custom__ = __webpack_require__(/*! ../styles/custom */ "./src/AppBundle/Resources/public/javascript/main/styles/custom.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__actions_utils__ = __webpack_require__(/*! ../actions/utils */ "./src/AppBundle/Resources/public/javascript/main/actions/utils.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9__main_components_Tooltip__ = __webpack_require__(/*! ../../main/components/Tooltip */ "./src/AppBundle/Resources/public/javascript/main/components/Tooltip.js");
var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }












var SalesPackages = function SalesPackages(_ref) {
    var salesPackages = _ref.salesPackages,
        getFee = _ref.getFee,
        showAllTerritories = _ref.showAllTerritories;

    var salesPackagesArray = Array.isArray(salesPackages) ? salesPackages : [salesPackages];
    return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
        __WEBPACK_IMPORTED_MODULE_0_react___default.a.Fragment,
        null,
        salesPackagesArray.slice(0, 3).map(function (salesPackage, i) {
            var extraTerritories = salesPackage.territoriesMethod === 'WORLDWIDE_EXCLUDING' ? salesPackage.excludedTerritories : salesPackage.territories;
            return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                "div",
                { className: "sales-package", key: "sp-" + i },
                salesPackage.bundleMethod === "SELL_AS_BUNDLE" && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                    "div",
                    { className: "icon" },
                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement("img", { src: __WEBPACK_IMPORTED_MODULE_5__Icons__["o" /* fixedIcon */] })
                ),
                __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                    "div",
                    { className: "name" },
                    salesPackage.name
                ),
                extraTerritories && extraTerritories.length > 3 && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                    "div",
                    { className: "all-territories" },
                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        "a",
                        { onClick: function onClick(e) {
                                showAllTerritories(e, extraTerritories);
                            } },
                        "+" + (extraTerritories.length - 3)
                    )
                ),
                (salesPackage.salesMethod !== "BIDDING" || salesPackage.salesMethod === "BIDDING" && salesPackage.fee > 0) && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                    "div",
                    { className: "fee" },
                    getFee(salesPackage)
                ),
                salesPackage.salesMethod === "BIDDING" && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                    "div",
                    { className: "icon" },
                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement("img", { src: __WEBPACK_IMPORTED_MODULE_5__Icons__["c" /* bidIcon */] })
                )
            );
        }),
        salesPackages.length > 3 && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
            "div",
            { className: "sales-package show-all" },
            __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                "b",
                null,
                " + ",
                salesPackages.length - 3,
                " "
            )
        )
    );
};

var ContentListing = function (_React$Component) {
    _inherits(ContentListing, _React$Component);

    function ContentListing(props) {
        _classCallCheck(this, ContentListing);

        var _this = _possibleConstructorReturn(this, (ContentListing.__proto__ || Object.getPrototypeOf(ContentListing)).call(this, props));

        _this.getFee = function (salesPackage) {
            var feeNumber = parseFloat(salesPackage.fee);
            return feeNumber.toLocaleString() + " " + _this.getCurrencySymbol();
        };

        _this.getCurrencySymbol = function () {
            var currency = _this.props.currency;

            return currency === "EUR" ? "€" : "$";
        };

        _this.onSelect = function () {
            var _this$props = _this.props,
                onSelect = _this$props.onSelect,
                customId = _this$props.customId;


            if (onSelect) onSelect(customId);
        };

        _this.confirmRemoveFromWatchlist = function (e) {
            _this.setState({ confirmWatchlistRemove: true });
            e.stopPropagation();
        };

        _this.cancelRemoveFromWatchlist = function (e) {
            _this.setState({ confirmWatchlistRemove: false });
            e.stopPropagation();
        };

        _this.removeFromWatchlist = function (e) {
            var _this$props2 = _this.props,
                customId = _this$props2.customId,
                onWatchlistRemove = _this$props2.onWatchlistRemove;

            ContentArena.Api.watchlist(customId);

            if (onWatchlistRemove) onWatchlistRemove(customId);
            e.stopPropagation();
        };

        _this.sortSalesPackages = function (a, b) {
            if (b.territoriesMethod === "WORLDWIDE") return -1;
            return _this.compareProperty(a.territories.length, b.territories.length) || _this.compareProperty(b.name, a.name);
        };

        _this.sortAfterFilter = function (a, b) {

            if (b.territoriesMethod === "WORLDWIDE") {
                return _this.compareProperty(b.territories.length, a.territories.length) || _this.compareProperty(a.name, b.name);
            }

            return _this.compareProperty(a.territories.length, b.territories.length) || _this.compareProperty(a.name, b.name);
        };

        _this.sortByFilter = function (salesPackages) {
            var filter = _this.props.filter;


            var temp = [];
            var territories = filter.countries.map(function (c) {
                return c;
            });

            salesPackages.forEach(function (e, i, l) {

                var t = e.territories.map(function (t) {
                    return t.value;
                });
                var et = e.territoriesMethod === "WORLDWIDE_EXCLUDING" ? e.excludedTerritories.map(function (t) {
                    return t.value;
                }) : [];
                var all = [].concat(_toConsumableArray(t), _toConsumableArray(et));
                var include = false;

                territories.forEach(function (t) {
                    if (all.indexOf(t) !== -1) include = true;
                });

                if (e.bundleMethod === "SELL_AS_BUNDLE" && e.territoriesMethod === "WORLDWIDE") {
                    include = true;
                }

                if (include) {
                    temp.push(e);
                }
            });

            return [].concat(temp);
        };

        _this.compareProperty = function (a, b) {
            return a > b ? 1 : b > a ? -1 : 0;
        };

        _this.closeTerritoriesModal = function (e) {
            e.stopPropagation();
            _this.setState({ showAllTerritories: false });
        };

        _this.showAllTerritories = function (e, extraTerritories) {
            e.stopPropagation();
            _this.setState({
                showAllTerritories: true,
                territoriesList: extraTerritories
            });
        };

        _this.allTerritories = function () {

            return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                __WEBPACK_IMPORTED_MODULE_6_react_modal___default.a,
                {
                    isOpen: _this.state.showAllTerritories,
                    onRequestClose: _this.closeTerritoriesModal,
                    bodyOpenClassName: "selector",
                    style: __WEBPACK_IMPORTED_MODULE_7__styles_custom__["c" /* customStyles */]
                },
                __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                    "div",
                    { className: "modal-inner" },
                    _this.state.territoriesList.map(function (territory) {
                        return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                            "div",
                            { className: "country-modal" },
                            territory.label && territory.label,
                            territory.name && territory.name
                        );
                    })
                )
            );
        };

        _this.state = {
            buyingMode: false,
            territoriesList: []
        };
        _this.noImage = assetsBaseDir + "app/images/no-image.png";
        _this.bidIcon = __WEBPACK_IMPORTED_MODULE_5__Icons__["r" /* hammerIcon */];
        _this.fixedIcon = __WEBPACK_IMPORTED_MODULE_5__Icons__["o" /* fixedIcon */];
        _this.blueCheck = __WEBPACK_IMPORTED_MODULE_5__Icons__["d" /* blueCheckIcon */];
        _this.yellowCheck = __WEBPACK_IMPORTED_MODULE_5__Icons__["B" /* yellowCheckIcon */];
        _this.bucketicon = assetsBaseDir + "app/images/bucket.png";
        return _this;
    }

    _createClass(ContentListing, [{
        key: "render",
        value: function render() {
            var _this2 = this;

            var _props = this.props,
                name = _props.name,
                expiresAt = _props.expiresAt,
                PROGRAM_NAME = _props.PROGRAM_NAME,
                onSelectName = _props.onSelectName,
                imageBase64 = _props.imageBase64,
                image = _props.image,
                filter = _props.filter,
                sortSalesPackages = _props.sortSalesPackages,
                watchlistRemove = _props.watchlistRemove,
                company = _props.company,
                defaultRightsPackage = _props.defaultRightsPackage,
                rightsPackage = _props.rightsPackage,
                owner = _props.owner,
                bid = _props.bid,
                declined = _props.declined,
                customId = _props.customId;
            var confirmWatchlistRemove = this.state.confirmWatchlistRemove;


            var salesPackages = this.props.salesPackages;
            var listingImage = imageBase64 ? imageBase64 : image ? assetsBaseDir + "../" + image : this.noImage;

            if (filter && filter.countries.length > 0 && sortSalesPackages) {
                salesPackages = this.sortByFilter(salesPackages);
                salesPackages.sort(this.sortAfterFilter);
            } else {
                salesPackages.sort(this.sortSalesPackages).reverse();
            }

            return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                "div",
                { className: "listing-list-view", onClick: this.onSelect },
                __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                    "div",
                    { className: "left" },
                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        "div",
                        { className: "image" },
                        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement("img", { src: listingImage })
                    )
                ),
                __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                    "div",
                    { className: "right" },
                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        "div",
                        { className: "name-wrapper" },
                        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                            "div",
                            { className: "name", onClick: function onClick() {
                                    if (onSelectName) onSelectName();
                                } },
                            name
                        ),
                        company && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                            "div",
                            { className: "company-name" },
                            __WEBPACK_IMPORTED_MODULE_5__Icons__["i" /* coinIcon */],
                            " ",
                            company.legalName
                        )
                    ),
                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        "div",
                        { className: "listing-wrapper" },
                        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_2__buy_components_ContentListingEventDetails__["a" /* default */], this.props),
                        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_3__buy_components_ContentListingRightsPackage__["a" /* default */], {
                            rightsPackage: rightsPackage,
                            defaultRightsPackage: defaultRightsPackage,
                            programName: PROGRAM_NAME
                        })
                    ),
                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        "div",
                        { className: "sales-bundles-wrapper" },
                        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                            "div",
                            { className: "sales-bundles" },
                            __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(SalesPackages, {
                                salesPackages: salesPackages,
                                getFee: this.getFee,
                                showAllTerritories: this.showAllTerritories
                            })
                        ),
                        expiresAt && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                            "div",
                            { className: "expires" },
                            "Expiry: ",
                            __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                "b",
                                null,
                                __WEBPACK_IMPORTED_MODULE_1_moment_moment___default()(expiresAt).format('MM/DD/YYYY')
                            )
                        )
                    )
                ),
                watchlistRemove && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                    "div",
                    { className: "watchlist-options additional" },
                    confirmWatchlistRemove ? __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        "div",
                        { className: "wrapper" },
                        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                            "div",
                            null,
                            this.context.t("WATCHLIST_REMOVE_CONFIRMATION")
                        ),
                        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                            "button",
                            { type: "button", className: "ca-btn ca-btn-primary ca-btn-small", onClick: this.removeFromWatchlist },
                            this.context.t("Yes")
                        ),
                        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                            "button",
                            { type: "button", className: "ca-btn ca-btn-danger ca-btn-small", onClick: this.cancelRemoveFromWatchlist },
                            this.context.t("Cancel")
                        )
                    ) : __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        "div",
                        null,
                        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement("i", { className: "fa fa-trash-o icon", "aria-hidden": "true",
                            onClick: this.confirmRemoveFromWatchlist
                        }),
                        owner && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                            "div",
                            { className: "owner" },
                            this.context.t("Placed by"),
                            " ",
                            __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                "b",
                                null,
                                owner.firstName,
                                " ",
                                owner.lastName
                            )
                        )
                    )
                ),
                bid && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                    "div",
                    { className: "bids-options additional" },
                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        "div",
                        { className: "wrapper" },
                        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                            "div",
                            { className: "bid-sales-wrap" },
                            __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(SalesPackages, {
                                salesPackages: bid.salesPackage,
                                getFee: this.getFee,
                                showAllTerritories: this.showAllTerritories
                            })
                        ),
                        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                            "div",
                            { className: "bid-price" },
                            parseFloat(bid.amount).toLocaleString(),
                            " ",
                            Object(__WEBPACK_IMPORTED_MODULE_8__actions_utils__["b" /* getCurrencySymbol */])(bid.salesPackage.currency.code)
                        ),
                        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                            "div",
                            { className: "bid-actions" },
                            bid.status.name === "EDITED" && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_9__main_components_Tooltip__["a" /* default */], {
                                id: "StatusTooltip",
                                icon: "bid-icon status fa fa-info-circle",
                                text: this.context.t("PENDING_BIDS_TOOLTIP_LISTING_EDITED")
                            }),
                            (!declined || declined && bid.status.name === "REJECTED" && !bid.salesPackage.sold) && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                "a",
                                { className: "ca-btn ca-btn-primary",
                                    href: envhosturl + "listing/" + customId + "/checkout/" + bid.salesPackage.id
                                },
                                this.context.t("Increase bid")
                            ),
                            bid.message && bid.message !== "" && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_9__main_components_Tooltip__["a" /* default */], {
                                onClick: function onClick(e) {
                                    e.stopPropagation();
                                    window.location.href = "/redirect-integration/messages-by-bid/" + bid.id;
                                },
                                id: "MessageTooltip",
                                icon: "bid-icon message fa fa-envelope",
                                text: bid.message
                            })
                        ),
                        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                            "div",
                            { className: "bid-author" },
                            __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                "div",
                                null,
                                __WEBPACK_IMPORTED_MODULE_1_moment_moment___default()(bid.createdAt).format('DD/MM/YYYY')
                            ),
                            this.context.t("Placed by:"),
                            " ",
                            __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                "b",
                                null,
                                bid.buyerUser.firstName + " " + bid.buyerUser.lastName
                            )
                        ),
                        bid.status.name === "REJECTED" && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                            "div",
                            { className: "bid-remove",
                                onClick: function onClick(e) {
                                    _this2.setState({ showRemoveConfirm: true });e.stopPropagation();
                                }
                            },
                            __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement("img", { src: __WEBPACK_IMPORTED_MODULE_5__Icons__["f" /* bucketIcon */] })
                        ),
                        this.state.showRemoveConfirm && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                            "div",
                            { className: "confirmation-tooltip" },
                            __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                "div",
                                { className: "confirmation-text" },
                                this.context.t("PENDING_BIDS_REMOVE_TITLE")
                            ),
                            __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                "button",
                                { className: "button button-confirm", onClick: function onClick(e) {
                                        _this2.setState({ showRemoveConfirm: false });
                                        onDelete(bid.id);
                                        e.stopPropagation();
                                    } },
                                this.context.t("PENDING_BIDS_REMOVE_BUTTON_CONFIRM")
                            ),
                            __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                "button",
                                { className: "button", onClick: function onClick(e) {
                                        _this2.setState({ showRemoveConfirm: false });
                                        e.stopPropagation();
                                    } },
                                this.context.t("PENDING_BIDS_REMOVE_BUTTON_CANCEL")
                            )
                        )
                    )
                ),
                this.allTerritories()
            );
        }
    }]);

    return ContentListing;
}(__WEBPACK_IMPORTED_MODULE_0_react___default.a.Component);

ContentListing.contextTypes = {
    t: __WEBPACK_IMPORTED_MODULE_4_prop_types__["PropTypes"].func.isRequired
};

/* harmony default export */ __webpack_exports__["a"] = (ContentListing);

/***/ }),

/***/ "./src/AppBundle/Resources/public/javascript/main/components/ContentListingCommercialActivity.js":
/*!*******************************************************************************************************!*\
  !*** ./src/AppBundle/Resources/public/javascript/main/components/ContentListingCommercialActivity.js ***!
  \*******************************************************************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_react__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_moment_moment__ = __webpack_require__(/*! moment/moment */ "./node_modules/moment/moment.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_moment_moment___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_moment_moment__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__buy_components_ContentListingEventDetails__ = __webpack_require__(/*! ../../buy/components/ContentListingEventDetails */ "./src/AppBundle/Resources/public/javascript/buy/components/ContentListingEventDetails.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__buy_components_ContentListingRightsPackage__ = __webpack_require__(/*! ../../buy/components/ContentListingRightsPackage */ "./src/AppBundle/Resources/public/javascript/buy/components/ContentListingRightsPackage.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__main_components_CommercialSalesBundle__ = __webpack_require__(/*! ../../main/components/CommercialSalesBundle */ "./src/AppBundle/Resources/public/javascript/main/components/CommercialSalesBundle.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__ContentListing__ = __webpack_require__(/*! ./ContentListing */ "./src/AppBundle/Resources/public/javascript/main/components/ContentListing.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__actions_utils__ = __webpack_require__(/*! ../actions/utils */ "./src/AppBundle/Resources/public/javascript/main/actions/utils.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__Icons__ = __webpack_require__(/*! ./Icons */ "./src/AppBundle/Resources/public/javascript/main/components/Icons.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8_prop_types__ = __webpack_require__(/*! prop-types */ "./node_modules/prop-types/index.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8_prop_types___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_8_prop_types__);
var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }











var ContentListingCommercialActivity = function (_ContentListing) {
    _inherits(ContentListingCommercialActivity, _ContentListing);

    function ContentListingCommercialActivity(props) {
        _classCallCheck(this, ContentListingCommercialActivity);

        var _this = _possibleConstructorReturn(this, (ContentListingCommercialActivity.__proto__ || Object.getPrototypeOf(ContentListingCommercialActivity)).call(this, props));

        _this.sortSalesPackages = function (a, b) {

            var aOpen = a.bids.filter(function (bid) {
                return bid.status.name === "PENDING";
            }).length > 0;
            var bOpen = b.bids.filter(function (bid) {
                return bid.status.name === "PENDING";
            }).length > 0;
            var aClosed = a.bids.filter(function (bid) {
                return bid.status.name === "APPROVED";
            }).length > 0;
            var bClosed = b.bids.filter(function (bid) {
                return bid.status.name === "APPROVED";
            }).length > 0;
            var aWorldwide = a.territoriesMethod === "WORLDWIDE";
            var bWorldwide = b.territoriesMethod === "WORLDWIDE";

            var open = !aOpen && bOpen ? 1 : !bOpen && aOpen ? -1 : 0;
            var closed = !aClosed && bClosed ? 1 : !bClosed && aClosed ? -1 : 0;
            var worldwide = !aWorldwide && bWorldwide ? 1 : !bWorldwide && aWorldwide ? -1 : 0;

            return open || closed || worldwide || _this.compareProperty(b.territories.length, a.territories.length) || _this.compareProperty(b.name, a.name);
        };

        _this.compareProperty = function (a, b) {
            return a > b ? 1 : b > a ? -1 : 0;
        };

        _this.state = {
            showSalesPackage: props.bundlesOpen
        };
        _this.noImage = assetsBaseDir + "app/images/no-image.png";
        _this.bidIcon = assetsBaseDir + "app/images/hammer.png";
        _this.fixedIcon = assetsBaseDir + "app/images/bid.png";
        _this.blueCheck = assetsBaseDir + "app/images/blue_check.png";
        _this.yellowCheck = assetsBaseDir + "app/images/yellow_chech.png";
        _this.bucketicon = assetsBaseDir + "app/images/bucket.png";
        _this.exclamationIcon = assetsBaseDir + "app/images/Exclamation.png";
        _this.envelopeIcon = assetsBaseDir + "app/images/envelope_2.png";
        return _this;
    }

    _createClass(ContentListingCommercialActivity, [{
        key: "render",
        value: function render() {
            var _this2 = this;

            var _props = this.props,
                name = _props.name,
                onDelete = _props.onDelete,
                onUpdate = _props.onUpdate,
                hideWithoutBids = _props.hideWithoutBids,
                filterByOpenBids = _props.filterByOpenBids,
                filterByClosedDeals = _props.filterByClosedDeals,
                bidsOpen = _props.bidsOpen,
                rightsPackage = _props.rightsPackage,
                imageBase64 = _props.imageBase64,
                image = _props.image,
                company = _props.company,
                id = _props.id;
            var showSalesPackage = this.state.showSalesPackage;


            var salesPackages = this.props.salesPackages;
            salesPackages.sort(this.sortSalesPackages);

            var listingImage = imageBase64 ? imageBase64 : image ? assetsBaseDir + "../" + image : this.noImage;
            var bids = salesPackages.reduce(function (t, sp) {
                return t.concat(sp.bids);
            }, []);
            var closedDeals = bids.filter(function (b) {
                return b.status.name === "APPROVED";
            });
            var openBids = bids.filter(function (b) {
                return b.status.name === "PENDING";
            });
            var total = closedDeals.length > 0 ? closedDeals.map(function (b) {
                return Number(b.totalFee);
            }).reduce(function (t, n) {
                return t + n;
            }) : 0;
            return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                "div",
                { style: { display: 'flex', flexDirection: 'column', marginBottom: 20 } },
                __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                    "div",
                    { className: "listing-list-view", style: { padding: 0, marginBottom: 0 } },
                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        "div",
                        { className: "left", style: { padding: 25 } },
                        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                            "div",
                            { className: "image" },
                            __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement("img", { src: listingImage })
                        )
                    ),
                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        "div",
                        { className: "right", style: { padding: '25px 0' } },
                        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                            "div",
                            { className: "name", onClick: this.onSelect },
                            name
                        ),
                        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                            "div",
                            { className: "listing-wrapper" },
                            __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_2__buy_components_ContentListingEventDetails__["a" /* default */], this.props),
                            __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_3__buy_components_ContentListingRightsPackage__["a" /* default */], { rightsPackage: rightsPackage })
                        )
                    ),
                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        "div",
                        { className: "bid-listing-details" },
                        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                            "div",
                            { className: "item" },
                            __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                "div",
                                null,
                                this.context.t(["closed deal", "closed deals", "n"], { n: closedDeals.length })
                            )
                        ),
                        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                            "div",
                            { className: "item" },
                            __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                "div",
                                null,
                                this.context.t(["open bid", "open bids", "n"], { n: openBids.length })
                            )
                        ),
                        bids.length > 0 && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                            "div",
                            { className: "item", style: { fontWeight: 600 } },
                            __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                "div",
                                null,
                                this.context.t("Commercial Activity Total - {n}", { n: total.toLocaleString("en", { maximumFractionDigits: 2 }) }),
                                Object(__WEBPACK_IMPORTED_MODULE_6__actions_utils__["b" /* getCurrencySymbol */])(salesPackages[0].currency.code)
                            )
                        ),
                        bids.length > 0 && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                            "div",
                            { className: "show-bundle", onClick: function onClick() {
                                    _this2.setState({ showSalesPackage: !showSalesPackage });
                                } },
                            !showSalesPackage && "Show sales bundle",
                            showSalesPackage && "Hide sales bundle",
                            !showSalesPackage && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement("img", { src: __WEBPACK_IMPORTED_MODULE_7__Icons__["b" /* addIcon */] }),
                            showSalesPackage && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement("img", { src: __WEBPACK_IMPORTED_MODULE_7__Icons__["g" /* cancelIcon */] })
                        )
                    )
                ),
                showSalesPackage && salesPackages.map(function (sb, i) {

                    var closed = sb.bids.filter(function (b) {
                        return b.status.name === "APPROVED";
                    });
                    var open = sb.bids.filter(function (b) {
                        return b.status.name === "PENDING";
                    });

                    if (hideWithoutBids && sb.bids.length === 0) return;
                    if (filterByOpenBids && open.length === 0) return;
                    if (filterByClosedDeals && closed.length === 0) return;

                    return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_4__main_components_CommercialSalesBundle__["a" /* default */], {
                        onUpdate: onUpdate,
                        onDelete: onDelete,
                        salesBundle: sb,
                        bidsOpen: bidsOpen,
                        company: company,
                        contentId: id,
                        key: i });
                })
            );
        }
    }]);

    return ContentListingCommercialActivity;
}(__WEBPACK_IMPORTED_MODULE_5__ContentListing__["a" /* default */]);

ContentListingCommercialActivity.contextTypes = {
    t: __WEBPACK_IMPORTED_MODULE_8_prop_types__["PropTypes"].func.isRequired
};

/* harmony default export */ __webpack_exports__["a"] = (ContentListingCommercialActivity);

/***/ }),

/***/ "./src/AppBundle/Resources/public/javascript/main/components/ContentListingPendingBid.js":
/*!***********************************************************************************************!*\
  !*** ./src/AppBundle/Resources/public/javascript/main/components/ContentListingPendingBid.js ***!
  \***********************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_react__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_moment_moment__ = __webpack_require__(/*! moment/moment */ "./node_modules/moment/moment.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_moment_moment___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_moment_moment__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__buy_components_ContentListingEventDetails__ = __webpack_require__(/*! ../../buy/components/ContentListingEventDetails */ "./src/AppBundle/Resources/public/javascript/buy/components/ContentListingEventDetails.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__buy_components_ContentListingRightsPackage__ = __webpack_require__(/*! ../../buy/components/ContentListingRightsPackage */ "./src/AppBundle/Resources/public/javascript/buy/components/ContentListingRightsPackage.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__ContentListing__ = __webpack_require__(/*! ./ContentListing */ "./src/AppBundle/Resources/public/javascript/main/components/ContentListing.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__main_components_SendMessage__ = __webpack_require__(/*! ../../main/components/SendMessage */ "./src/AppBundle/Resources/public/javascript/main/components/SendMessage.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__actions_utils__ = __webpack_require__(/*! ../actions/utils */ "./src/AppBundle/Resources/public/javascript/main/actions/utils.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__Icons__ = __webpack_require__(/*! ./Icons */ "./src/AppBundle/Resources/public/javascript/main/components/Icons.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8_prop_types__ = __webpack_require__(/*! prop-types */ "./node_modules/prop-types/index.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8_prop_types___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_8_prop_types__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9__DigitalSignature__ = __webpack_require__(/*! ./DigitalSignature */ "./src/AppBundle/Resources/public/javascript/main/components/DigitalSignature.js");
var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }












var ContentListingPendingBid = function (_ContentListing) {
    _inherits(ContentListingPendingBid, _ContentListing);

    function ContentListingPendingBid(props) {
        _classCallCheck(this, ContentListingPendingBid);

        var _this = _possibleConstructorReturn(this, (ContentListingPendingBid.__proto__ || Object.getPrototypeOf(ContentListingPendingBid)).call(this, props));

        _this.state = {};
        _this.noImage = assetsBaseDir + "app/images/no-image.png";
        _this.bidIcon = assetsBaseDir + "app/images/hammer.png";
        _this.fixedIcon = assetsBaseDir + "app/images/bid.png";
        _this.blueCheck = assetsBaseDir + "app/images/blue_check.png";
        _this.yellowCheck = assetsBaseDir + "app/images/yellow_chech.png";
        _this.exclamationIcon = assetsBaseDir + "app/images/Exclamation.png";
        _this.envelopeIcon = assetsBaseDir + "app/images/envelope_2.png";
        return _this;
    }

    _createClass(ContentListingPendingBid, [{
        key: "render",
        value: function render() {
            var _this2 = this;

            var _props = this.props,
                name = _props.name,
                expiresAt = _props.expiresAt,
                onDelete = _props.onDelete,
                rightsPackage = _props.rightsPackage,
                imageBase64 = _props.imageBase64,
                image = _props.image,
                declined = _props.declined,
                id = _props.id,
                company = _props.company,
                customId = _props.customId,
                bid = _props.bid;
            var _state = this.state,
                showMessage = _state.showMessage,
                showEdited = _state.showEdited;


            var listingImage = imageBase64 ? imageBase64 : image ? assetsBaseDir + "../" + image : this.noImage;

            return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                "div",
                { className: "listing-list-view" },
                __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_5__main_components_SendMessage__["a" /* default */], { ref: "messagePopup" + id,
                    listingId: id,
                    recipient: company }),
                __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                    "div",
                    { className: "left" },
                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        "div",
                        { className: "image" },
                        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement("img", { src: listingImage })
                    )
                ),
                __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                    "div",
                    { className: "right", style: { padding: '25px 0' } },
                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        "div",
                        { className: "name", onClick: this.onSelect },
                        name
                    ),
                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        "div",
                        { style: { display: 'flex', alignItems: 'center' } },
                        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                            "div",
                            null,
                            "Expiry: ",
                            __WEBPACK_IMPORTED_MODULE_1_moment_moment___default()(expiresAt).format('DD/MM/YYYY')
                        ),
                        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                            "div",
                            { className: "custom-id" },
                            "#",
                            customId
                        )
                    ),
                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        "div",
                        { className: "company", onClick: function onClick(e) {
                                _this2.refs["messagePopup" + id].open();
                                e.stopPropagation();
                            } },
                        company.legalName,
                        " ",
                        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement("img", { style: { marginLeft: 5 }, src: this.envelopeIcon })
                    ),
                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        "div",
                        { style: { display: 'flex' } },
                        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                            "div",
                            { className: "listing-wrapper", style: { flex: '1 0 0', overflow: 'auto' } },
                            __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_2__buy_components_ContentListingEventDetails__["a" /* default */], this.props),
                            __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_3__buy_components_ContentListingRightsPackage__["a" /* default */], { rightsPackage: rightsPackage })
                        ),
                        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                            "div",
                            { style: {
                                    flex: '240px 0 0',
                                    backgroundColor: '#FAFBFC',
                                    borderLeft: '1px solid #E6E6E6',
                                    alignItems: 'center',
                                    display: 'flex',
                                    flexDirection: 'column',
                                    paddingRop: 15,
                                    justifyContent: 'space-evenly',
                                    padding: '20px 0',
                                    position: 'relative'
                                } },
                            __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                "div",
                                { style: {
                                        display: 'flex',
                                        justifyContent: 'space-evenly',
                                        flexDirection: 'row',
                                        alignItems: 'center',
                                        width: '100%'
                                    } },
                                __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                    "div",
                                    null,
                                    __WEBPACK_IMPORTED_MODULE_1_moment_moment___default()(bid.createdAt).format('DD/MM/YYYY')
                                )
                            ),
                            __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                "div",
                                { style: {
                                        backgroundColor: '#fff',
                                        border: '1px solid lightgrey',
                                        padding: 10,
                                        margin: '0 20px'
                                    } },
                                __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                    "div",
                                    null,
                                    bid.salesPackage.name
                                )
                            ),
                            __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                "div",
                                { style: {
                                        fontSize: 24,
                                        fontWeight: 600,
                                        marginBottom: 10
                                    } },
                                __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                    "div",
                                    null,
                                    parseFloat(bid.amount).toLocaleString(),
                                    " ",
                                    Object(__WEBPACK_IMPORTED_MODULE_6__actions_utils__["b" /* getCurrencySymbol */])(bid.salesPackage.currency.code)
                                )
                            ),
                            __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                "div",
                                { style: {
                                        display: 'flex',
                                        flexDirection: 'row',
                                        alignItems: 'center',
                                        position: 'relative'
                                    } },
                                bid.status.name === "EDITED" && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement("img", { src: __WEBPACK_IMPORTED_MODULE_7__Icons__["s" /* infoIcon */],
                                    style: {
                                        marginRight: 5,
                                        cursor: 'pointer'
                                    },
                                    onMouseOver: function onMouseOver() {
                                        _this2.setState({ showEdited: true });
                                    },
                                    onMouseLeave: function onMouseLeave() {
                                        _this2.setState({ showEdited: false });
                                    } }),
                                (!declined || declined && bid.status.name === "REJECTED" && !bid.salesPackage.sold) && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                    "a",
                                    { className: "standard-button", style: {
                                            height: 36,
                                            fontSize: 16,
                                            marginBottom: 10
                                        }, href: envhosturl + "listing/" + customId + "/checkout/" + bid.salesPackage.id },
                                    this.context.t("Increase bid")
                                ),
                                bid.message && bid.message !== "" && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement("img", { src: __WEBPACK_IMPORTED_MODULE_7__Icons__["e" /* blueEnvelopeIcon */],
                                    style: {
                                        marginLeft: 5,
                                        cursor: 'pointer'
                                    },
                                    onMouseOver: function onMouseOver() {
                                        _this2.setState({ showMessage: true });
                                    },
                                    onMouseLeave: function onMouseLeave() {
                                        _this2.setState({ showMessage: false });
                                    } }),
                                showMessage && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                    "div",
                                    { className: "status-tooltip" },
                                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                        "div",
                                        { className: "option" },
                                        bid.message
                                    )
                                ),
                                showEdited && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                    "div",
                                    { className: "status-tooltip" },
                                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                        "div",
                                        { className: "option" },
                                        this.context.t("PENDING_BIDS_TOOLTIP_LISTING_EDITED")
                                    )
                                )
                            ),
                            __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                "div",
                                { style: {
                                        fontSize: 12,
                                        fontWeight: 600
                                    } },
                                __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                    "div",
                                    null,
                                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                        "span",
                                        { style: { fontWeight: 400, fontStyle: 'italic' } },
                                        this.context.t("Placed by:")
                                    ),
                                    " " + bid.buyerUser.firstName + " " + bid.buyerUser.lastName
                                )
                            ),
                            bid.status.name === "REJECTED" && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                "div",
                                { style: {
                                        position: 'absolute',
                                        cursor: 'pointer',
                                        top: 20,
                                        right: 20
                                    }, onClick: function onClick(e) {
                                        _this2.setState({ showRemoveConfirm: true });
                                        e.stopPropagation();
                                    } },
                                __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement("img", { src: __WEBPACK_IMPORTED_MODULE_7__Icons__["f" /* bucketIcon */] })
                            ),
                            this.state.showRemoveConfirm && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                "div",
                                { className: "confirmation-tooltip" },
                                __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                    "div",
                                    { className: "confirmation-text" },
                                    this.context.t("PENDING_BIDS_REMOVE_TITLE")
                                ),
                                __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                    "button",
                                    { className: "button button-confirm", onClick: function onClick(e) {
                                            _this2.setState({ showRemoveConfirm: false });
                                            onDelete(bid.id);
                                            e.stopPropagation();
                                        } },
                                    this.context.t("PENDING_BIDS_REMOVE_BUTTON_CONFIRM")
                                ),
                                __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                    "button",
                                    { className: "button", onClick: function onClick(e) {
                                            _this2.setState({ showRemoveConfirm: false });
                                            e.stopPropagation();
                                        } },
                                    this.context.t("PENDING_BIDS_REMOVE_BUTTON_CANCEL")
                                )
                            )
                        )
                    )
                )
            );
        }
    }]);

    return ContentListingPendingBid;
}(__WEBPACK_IMPORTED_MODULE_4__ContentListing__["a" /* default */]);

ContentListingPendingBid.contextTypes = {
    t: __WEBPACK_IMPORTED_MODULE_8_prop_types__["PropTypes"].func.isRequired
};

/* unused harmony default export */ var _unused_webpack_default_export = (ContentListingPendingBid);

/***/ }),

/***/ "./src/AppBundle/Resources/public/javascript/main/components/CountrySelector.js":
/*!**************************************************************************************!*\
  !*** ./src/AppBundle/Resources/public/javascript/main/components/CountrySelector.js ***!
  \**************************************************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_react__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_react_select__ = __webpack_require__(/*! react-select */ "./node_modules/react-select/dist/react-select.es.js");
var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }




var CountrySelector = function (_React$Component) {
    _inherits(CountrySelector, _React$Component);

    function CountrySelector(props) {
        _classCallCheck(this, CountrySelector);

        var _this2 = _possibleConstructorReturn(this, (CountrySelector.__proto__ || Object.getPrototypeOf(CountrySelector)).call(this, props));

        _this2.getOptions = function () {
            var _this2$props = _this2.props,
                _this2$props$filter = _this2$props.filter,
                filter = _this2$props$filter === undefined ? [] : _this2$props$filter,
                available = _this2$props.available;


            var countries = Object.values(ContentArena.Data.Countries).map(function (i, k) {
                return { value: i.name, label: i.name };
            });

            if (available && available.length > 0) countries = available.map(function (i, k) {
                return { value: i, label: i };
            });

            countries = countries.filter(function (country) {
                return filter.indexOf(country.value) === -1;
            });

            return countries;
        };

        _this2.state = {
            countries: []
        };
        return _this2;
    }

    _createClass(CountrySelector, [{
        key: 'componentDidMount',
        value: function componentDidMount() {
            var _this = this;
            ContentArena.Api.getCountries().done(function (countries) {
                _this.setState({ countries: countries });
            });
        }
    }, {
        key: 'render',
        value: function render() {
            var _props = this.props,
                value = _props.value,
                onChange = _props.onChange,
                className = _props.className,
                _props$multi = _props.multi,
                multi = _props$multi === undefined ? true : _props$multi,
                _props$disabled = _props.disabled,
                disabled = _props$disabled === undefined ? false : _props$disabled;

            return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_1_react_select__["default"], {
                className: className,
                name: 'form-field-name',
                onChange: onChange,
                placeholder: disabled ? 'Disabled' : 'Select...',
                disabled: disabled,
                value: value,
                multi: multi,
                options: this.getOptions()
            });
        }
    }]);

    return CountrySelector;
}(__WEBPACK_IMPORTED_MODULE_0_react___default.a.Component);

/* harmony default export */ __webpack_exports__["a"] = (CountrySelector);

/***/ }),

/***/ "./src/AppBundle/Resources/public/javascript/main/components/DigitalSignature.js":
/*!***************************************************************************************!*\
  !*** ./src/AppBundle/Resources/public/javascript/main/components/DigitalSignature.js ***!
  \***************************************************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_react__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_react_signature_pad__ = __webpack_require__(/*! react-signature-pad */ "./node_modules/react-signature-pad/lib/app.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_react_signature_pad___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_react_signature_pad__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_prop_types__ = __webpack_require__(/*! prop-types */ "./node_modules/prop-types/index.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_prop_types___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2_prop_types__);
var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }





var DigitalSignature = function (_React$Component) {
    _inherits(DigitalSignature, _React$Component);

    function DigitalSignature(props) {
        _classCallCheck(this, DigitalSignature);

        var _this = _possibleConstructorReturn(this, (DigitalSignature.__proto__ || Object.getPrototypeOf(DigitalSignature)).call(this, props));

        _this.clear = function () {
            _this.refs.signature.clear();
        };

        _this.done = function () {
            var blank = _this.state.blank;
            var onReady = _this.props.onReady;
            var signature = _this.refs.signature;


            var data = signature.toDataURL();

            if (data === blank) return;

            _this.setState({ ready: true });
            if (onReady) onReady(data);
        };

        _this.edit = function () {
            var onReady = _this.props.onReady;

            _this.setState({ ready: false });
            if (onReady) onReady(null);
        };

        _this.state = {
            ready: false
        };
        return _this;
    }

    _createClass(DigitalSignature, [{
        key: 'componentDidMount',
        value: function componentDidMount() {
            this.setState({ blank: this.refs.signature.toDataURL() });
        }
    }, {
        key: 'render',
        value: function render() {
            var signature = this.props.signature;
            var ready = this.state.ready;


            return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                'div',
                { className: 'digital-signature' },
                __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                    'div',
                    { className: "digital-signature-placeholder" },
                    this.context.t("DIGITAL_SIGNATURE_TITLE")
                ),
                signature && ready && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('img', { style: { width: 800, height: 300, margin: '0 auto' }, src: signature }),
                !ready && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_1_react_signature_pad___default.a, { ref: 'signature' }),
                __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                    'div',
                    { className: "buttons" },
                    !ready && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        'button',
                        { onClick: this.clear, className: 'standard-button-small transparent' },
                        this.context.t("DIGITAL_SIGNATURE_BUTTON_CLEAR")
                    ),
                    !ready && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        'button',
                        { onClick: this.done, className: 'standard-button-small' },
                        this.context.t("DIGITAL_SIGNATURE_BUTTON_DONE")
                    ),
                    ready && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        'button',
                        { onClick: this.edit, className: 'standard-button-big' },
                        this.context.t("DIGITAL_SIGNATURE_BUTTON_NEW")
                    )
                )
            );
        }
    }]);

    return DigitalSignature;
}(__WEBPACK_IMPORTED_MODULE_0_react___default.a.Component);

DigitalSignature.contextTypes = {
    t: __WEBPACK_IMPORTED_MODULE_2_prop_types__["PropTypes"].func.isRequired
};
/* harmony default export */ __webpack_exports__["a"] = (DigitalSignature);

/***/ }),

/***/ "./src/AppBundle/Resources/public/javascript/main/components/FileSelector.js":
/*!***********************************************************************************!*\
  !*** ./src/AppBundle/Resources/public/javascript/main/components/FileSelector.js ***!
  \***********************************************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function($) {/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_react__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_prop_types__ = __webpack_require__(/*! prop-types */ "./node_modules/prop-types/index.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_prop_types___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_prop_types__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__HeaderBar__ = __webpack_require__(/*! ./HeaderBar */ "./src/AppBundle/Resources/public/javascript/main/components/HeaderBar.js");
var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }





var FileItem = function FileItem(_ref) {
    var item = _ref.item,
        onClick = _ref.onClick;
    return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
        "div",
        { style: {
                border: '1px solid lightgray',
                padding: 10,
                marginTop: 5,
                cursor: 'normal'
            } },
        item.name,
        " ",
        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement("img", { style: { right: 10, position: 'absolute', cursor: 'pointer' }, src: assetsBaseDir + "app/images/cancel.png", onClick: onClick })
    );
};

var InvalidFileItem = function InvalidFileItem(_ref2) {
    var item = _ref2.item,
        onClick = _ref2.onClick;
    return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
        "div",
        { style: {
                border: '1px solid red',
                padding: 10,
                marginTop: 5,
                cursor: 'normal',
                color: "red"
            } },
        item,
        " has an invalid format ",
        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement("img", { style: { right: 10, position: 'absolute', cursor: 'pointer' }, src: assetsBaseDir + "app/images/cancel.png", onClick: onClick })
    );
};

var imageStyle = {
    maxHeight: 250,
    marginBottom: 5,
    marginTop: 10
};

var FileSelector = function (_Component) {
    _inherits(FileSelector, _Component);

    function FileSelector(props) {
        _classCallCheck(this, FileSelector);

        var _this2 = _possibleConstructorReturn(this, (FileSelector.__proto__ || Object.getPrototypeOf(FileSelector)).call(this, props));

        _this2.handleUploadFile = function (event) {
            var _this2$props = _this2.props,
                isImage = _this2$props.isImage,
                onSelect = _this2$props.onSelect,
                target = _this2$props.target,
                tmp = _this2$props.tmp;

            var _this = _this2;

            _this2.state.form.append(event.target.files[0].size, event.target.files[0]);
            _this2.setState({
                form: _this2.state.form
            });

            if (tmp) {
                _this2.setState({ uploading: true });

                ContentArena.ContentApi.saveTmpFile(event.target.files).then(function (response) {

                    if (response.success) {
                        if (onSelect) onSelect(response);
                        _this2.setState({ uploading: false });
                    } else {
                        _this2.setState(function (prev) {
                            return {
                                failed: [].concat(_toConsumableArray(prev.failed), [response.name]),
                                uploading: false
                            };
                        });
                    }
                });
            }

            if (isImage) {
                _this2.getBase64(event.target.files[0], function (response) {
                    _this.setState({
                        image: response
                    });

                    if (onSelect) {
                        onSelect(target, response);
                        onSelect("image", null);
                    }
                });
            }
        };

        _this2.getItems = function () {
            var list = [];
            var _iteratorNormalCompletion = true;
            var _didIteratorError = false;
            var _iteratorError = undefined;

            try {
                for (var _iterator = _this2.state.form.values()[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
                    var value = _step.value;

                    list.push(value);
                }
            } catch (err) {
                _didIteratorError = true;
                _iteratorError = err;
            } finally {
                try {
                    if (!_iteratorNormalCompletion && _iterator.return) {
                        _iterator.return();
                    }
                } finally {
                    if (_didIteratorError) {
                        throw _iteratorError;
                    }
                }
            }

            return list;
        };

        _this2.remove = function (name) {
            _this2.state.form.delete(name);
            _this2.setState({ form: _this2.state.form });
        };

        _this2.removeFailed = function (index) {
            _this2.setState(function (prev) {
                prev.failed.splice(index, 1);

                return {
                    failed: prev.failed
                };
            });
        };

        _this2.getBase64 = function (file, cb) {
            var reader = new FileReader();
            reader.readAsDataURL(file);
            reader.onload = function () {
                cb(reader.result);
            };
            reader.onerror = function (error) {
                console.log('Error: ', error);
            };
        };

        var form = new FormData();

        _this2.state = {
            failed: [],
            form: form,
            uploading: false,
            accept: props.accept || [".png", ".jpg"]
        };
        return _this2;
    }

    _createClass(FileSelector, [{
        key: "render",
        value: function render() {
            var _this3 = this;

            var _props = this.props,
                label = _props.label,
                isImage = _props.isImage,
                previousImage = _props.previousImage,
                selected = _props.selected,
                onRemove = _props.onRemove,
                infoText = _props.infoText;
            var _state = this.state,
                image = _state.image,
                uploading = _state.uploading,
                failed = _state.failed;


            return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                "div",
                { className: "base-input custom-selector", style: { flexDirection: 'column' } },
                __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                    "div",
                    { style: { display: 'flex' } },
                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        "label",
                        null,
                        label ? label : "Files",
                        infoText && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement("i", { className: "fa fa-info-circle tooltip-icon", title: infoText })
                    ),
                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        "button",
                        {
                            className: "standard-button",
                            disabled: uploading,
                            onClick: function onClick() {
                                $("#input-" + _this3.props.target).trigger("click");
                            } },
                        this.context.t("Upload")
                    ),
                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement("input", {
                        className: "is-hidden",
                        onChange: this.handleUploadFile,
                        accept: this.state.accept.join(", "),
                        id: "input-" + this.props.target,
                        type: "file",
                        name: this.props.target + "[]" }),
                    uploading && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement("i", { className: "fa fa-cog fa-spin" })
                ),
                __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                    "div",
                    null,
                    failed && failed.map(function (item, i) {
                        return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(InvalidFileItem, { key: "failed" + i, item: item, onClick: function onClick() {
                                return _this3.removeFailed(i);
                            } });
                    }),
                    selected && selected.length > 0 && selected.map(function (s, i) {
                        return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(FileItem, { key: "key-" + i, item: { name: s.name }, onClick: onRemove });
                    }),
                    isImage && image && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement("img", { src: image, style: imageStyle }),
                    previousImage && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement("img", { src: assetsBaseDir + "../" + previousImage,
                        style: imageStyle })
                )
            );
        }
    }]);

    return FileSelector;
}(__WEBPACK_IMPORTED_MODULE_0_react__["Component"]);

FileSelector.contextTypes = {
    t: __WEBPACK_IMPORTED_MODULE_1_prop_types__["PropTypes"].func.isRequired
};

/* harmony default export */ __webpack_exports__["a"] = (FileSelector);
/* WEBPACK VAR INJECTION */}.call(__webpack_exports__, __webpack_require__(/*! jquery */ "./node_modules/jquery/dist/jquery.js")))

/***/ }),

/***/ "./src/AppBundle/Resources/public/javascript/main/components/HeaderBar.js":
/*!********************************************************************************!*\
  !*** ./src/AppBundle/Resources/public/javascript/main/components/HeaderBar.js ***!
  \********************************************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_react__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__actions_utils__ = __webpack_require__(/*! ../actions/utils */ "./src/AppBundle/Resources/public/javascript/main/actions/utils.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_react_router_dom__ = __webpack_require__(/*! react-router-dom */ "./node_modules/react-router-dom/es/index.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_prop_types__ = __webpack_require__(/*! prop-types */ "./node_modules/prop-types/index.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_prop_types___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_3_prop_types__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__HeaderNotifications__ = __webpack_require__(/*! ./HeaderNotifications */ "./src/AppBundle/Resources/public/javascript/main/components/HeaderNotifications.js");
var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }







var HeaderBarTab = function HeaderBarTab(_ref) {
    var match = _ref.match,
        children = _ref.children,
        route = _ref.route;

    return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
        "div",
        { className: match ? "tab active-tab" : "tab" },
        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
            __WEBPACK_IMPORTED_MODULE_2_react_router_dom__["Link"],
            { to: route },
            children
        )
    );
};

var CustomLink = function CustomLink(_ref2) {
    var match = _ref2.match,
        children = _ref2.children,
        route = _ref2.route;

    return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
        "div",
        { className: match ? "tab active-tab" : "tab" },
        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
            "a",
            { href: route },
            children
        )
    );
};

var HeaderBar = function (_React$Component) {
    _inherits(HeaderBar, _React$Component);

    function HeaderBar(props) {
        _classCallCheck(this, HeaderBar);

        var _this = _possibleConstructorReturn(this, (HeaderBar.__proto__ || Object.getPrototypeOf(HeaderBar)).call(this, props));

        _this.getLogoUrl = function () {
            var profile = _this.props.profile;


            if (profile === "SELLER") {
                return "managelistings";
            } else {
                return "marketplace";
            }
        };

        _this.state = {};

        return _this;
    }

    _createClass(HeaderBar, [{
        key: "render",
        value: function render() {
            var _props = this.props,
                tab = _props.tab,
                profile = _props.profile,
                match = _props.match;

            var logoUrl = this.getLogoUrl(tab);

            return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                "div",
                { className: "manager-header" },
                __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                    "div",
                    { className: "logo", onClick: function onClick() {
                            return Object(__WEBPACK_IMPORTED_MODULE_1__actions_utils__["e" /* goTo */])(logoUrl);
                        } },
                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement("img", { src: assetsBaseDir + "app/images/logo.png", alt: "" })
                ),
                profile === "BUYER" && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                    HeaderBarTab,
                    {
                        match: match.url === "/marketplace",
                        route: "/marketplace"
                    },
                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        "b",
                        null,
                        this.context.t("HEADER_LINK_MARKETPLACE")
                    )
                ),
                profile === "BUYER" && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                    HeaderBarTab,
                    { match: match.url === "/watchlist", route: "/watchlist" },
                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        "b",
                        null,
                        this.context.t("HEADER_LINK_WATCHLIST")
                    )
                ),
                profile === "BUYER" && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                    HeaderBarTab,
                    {
                        match: match.url === "/bids/activebids" || match.url === "/bids/declinedbids",
                        route: "/bids/activebids"
                    },
                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        "b",
                        null,
                        this.context.t("HEADER_LINK_BIDS")
                    )
                ),
                profile === "BUYER" && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                    HeaderBarTab,
                    {
                        match: match.url === "/closeddeals",
                        route: "/closeddeals"
                    },
                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        "b",
                        null,
                        this.context.t("HEADER_LINK_CLOSED_DEALS")
                    )
                ),
                profile === "SELLER" && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                    HeaderBarTab,
                    {
                        match: match.url === "/managelistings",
                        route: "/managelistings"
                    },
                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        "b",
                        null,
                        this.context.t("HEADER_LINK_MANAGE_LISTINGS")
                    )
                ),
                profile === "SELLER" && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                    HeaderBarTab,
                    {
                        match: match.url === "/commercialactivity",
                        route: "/commercialactivity"
                    },
                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        "b",
                        null,
                        this.context.t("HEADER_LINK_COMMERCIAL_ACTIVITY")
                    )
                ),
                profile === "SELLER" && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                    CustomLink,
                    {
                        match: match.path === "/contentlisting/:customId?/:step?",
                        route: "/contentlisting/new"
                    },
                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        "b",
                        null,
                        this.context.t("HEADER_LINK_CREATE_LISTING")
                    )
                ),
                __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement("div", { className: "spacer" }),
                profile === "BUYER" && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                    HeaderBarTab,
                    { className: "tab", route: "/managelistings" },
                    this.context.t("HEADER_LINK_SELLING_MODE")
                ),
                profile === "SELLER" && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                    HeaderBarTab,
                    { className: "tab", route: "/marketplace" },
                    this.context.t("HEADER_LINK_BUYING_MODE")
                ),
                __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                    HeaderBarTab,
                    { className: "tab", route: "/messages" },
                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement("i", { className: "fa fa-envelope" }),
                    this.context.t("HEADER_LINK_MESSAGES")
                ),
                __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_4__HeaderNotifications__["a" /* default */], null),
                __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                    "div",
                    { className: "settings" },
                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement("i", { className: "fa fa-2x fa-gear" }),
                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        "div",
                        { className: "popup" },
                        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                            "div",
                            { className: "wrap" },
                            __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                HeaderBarTab,
                                {
                                    route: "/settings",
                                    className: "tab" },
                                this.context.t("HEADER_LINK_SETTINGS")
                            ),
                            __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                "a",
                                { href: "/logout", className: "tab" },
                                this.context.t("HEADER_LINK_LOGOUT")
                            )
                        )
                    )
                )
            );
        }
    }]);

    return HeaderBar;
}(__WEBPACK_IMPORTED_MODULE_0_react___default.a.Component);

HeaderBar.contextTypes = {
    t: __WEBPACK_IMPORTED_MODULE_3_prop_types__["PropTypes"].func.isRequired
};

/* harmony default export */ __webpack_exports__["a"] = (HeaderBar);

/***/ }),

/***/ "./src/AppBundle/Resources/public/javascript/main/components/HeaderNotifications.js":
/*!******************************************************************************************!*\
  !*** ./src/AppBundle/Resources/public/javascript/main/components/HeaderNotifications.js ***!
  \******************************************************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_react__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_classnames__ = __webpack_require__(/*! classnames */ "./node_modules/classnames/index.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_classnames___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_classnames__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_lodash_uniqBy__ = __webpack_require__(/*! lodash/uniqBy */ "./node_modules/lodash/uniqBy.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_lodash_uniqBy___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2_lodash_uniqBy__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_lodash_sortBy__ = __webpack_require__(/*! lodash/sortBy */ "./node_modules/lodash/sortBy.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_lodash_sortBy___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_3_lodash_sortBy__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_prop_types__ = __webpack_require__(/*! prop-types */ "./node_modules/prop-types/index.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_prop_types___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_4_prop_types__);
var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }







var HeaderNotifications = function (_React$Component) {
    _inherits(HeaderNotifications, _React$Component);

    function HeaderNotifications(props) {
        _classCallCheck(this, HeaderNotifications);

        var _this = _possibleConstructorReturn(this, (HeaderNotifications.__proto__ || Object.getPrototypeOf(HeaderNotifications)).call(this, props));

        _this.onNotificationClicked = function (item) {
            var typeName = item.type.name;
            if (typeName === 'MESSAGE') {
                ContentArena.Api.markNotificationAsSeen(item.id);
                document.location.href = '/messages/' + item.referenceId;
            }
        };

        _this.state = {
            dataLoading: true,
            notifications: []
        };
        return _this;
    }

    _createClass(HeaderNotifications, [{
        key: 'componentDidMount',
        value: function componentDidMount() {
            this.loadNotifications();
        }
    }, {
        key: 'render',
        value: function render() {
            var _this2 = this;

            var _state = this.state,
                notifications = _state.notifications,
                dataLoading = _state.dataLoading,
                unseenNotificationsCount = _state.unseenNotificationsCount;

            var nCount = notifications.length;

            return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                'div',
                { className: 'notifications' },
                __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('i', { className: 'fa fa-bell', title: 'Notifications' }),
                !!unseenNotificationsCount && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                    'div',
                    { className: 'counter' },
                    unseenNotificationsCount
                ),
                __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                    'div',
                    { className: 'expanded-list' },
                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        'div',
                        { className: 'caption' },
                        dataLoading ? 'Loading notifications...' : 'Notifications'
                    ),
                    !dataLoading && !!nCount && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        'div',
                        { className: 'items' },
                        notifications.map(function (item) {
                            var id = item.id,
                                seen = item.seen,
                                text = item.text;

                            return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                'div',
                                {
                                    key: "notification-" + id,
                                    className: __WEBPACK_IMPORTED_MODULE_1_classnames___default()('item', { 'unread': !seen }),
                                    onClick: _this2.onNotificationClicked.bind(_this2, item)
                                },
                                text
                            );
                        })
                    ),
                    !dataLoading && !nCount && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        'div',
                        { className: 'no-notifications' },
                        this.context.t("NOTIFICATIONS_EMPTY")
                    )
                )
            );
        }
    }, {
        key: 'loadNotifications',
        value: function loadNotifications() {
            var _this3 = this;

            ContentArena.Api.getNotifications().then(function (_ref) {
                var data = _ref.data;


                if (data === undefined) return;

                data.sort(function (a, b) {
                    return b.id - a.id;
                });

                var uniqNotifications = __WEBPACK_IMPORTED_MODULE_2_lodash_uniqBy___default()(data, 'referenceId');
                var unseenNotificationsCount = uniqNotifications.filter(function (item) {
                    return !item.seen;
                }).length;

                _this3.setState({
                    dataLoading: false,
                    unseenNotificationsCount: unseenNotificationsCount,
                    notifications: uniqNotifications
                });
            });
        }
    }]);

    return HeaderNotifications;
}(__WEBPACK_IMPORTED_MODULE_0_react___default.a.Component);

HeaderNotifications.contextTypes = {
    t: __WEBPACK_IMPORTED_MODULE_4_prop_types__["PropTypes"].func.isRequired
};

/* harmony default export */ __webpack_exports__["a"] = (HeaderNotifications);

/***/ }),

/***/ "./src/AppBundle/Resources/public/javascript/main/components/Icons.js":
/*!****************************************************************************!*\
  !*** ./src/AppBundle/Resources/public/javascript/main/components/Icons.js ***!
  \****************************************************************************/
/*! exports provided: cancelIcon, bucketIcon, addIcon, exclamationRoundIcon, clockRoundIcon, playIcon, bidIcon, fixedIcon, docIcon, pdfIcon, editIcon, blueEnvelopeIcon, infoIcon, soldIcon, expiredIcon, filterIcon, searchIcon, hammerIcon, yellowCheckIcon, blueCheckIcon, greyMinusIcon, tournamentIcon, seasonReleaseIcon, sportIcon, fixturesEpisodeIcon, sportCategoryIcon, eventTimeIcon, coinIcon, Spinner */
/*! exports used: Spinner, addIcon, bidIcon, blueCheckIcon, blueEnvelopeIcon, bucketIcon, cancelIcon, clockRoundIcon, coinIcon, docIcon, editIcon, eventTimeIcon, exclamationRoundIcon, expiredIcon, fixedIcon, fixturesEpisodeIcon, greyMinusIcon, hammerIcon, infoIcon, pdfIcon, playIcon, searchIcon, seasonReleaseIcon, soldIcon, sportCategoryIcon, sportIcon, tournamentIcon, yellowCheckIcon */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "g", function() { return cancelIcon; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "f", function() { return bucketIcon; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "b", function() { return addIcon; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "m", function() { return exclamationRoundIcon; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "h", function() { return clockRoundIcon; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "u", function() { return playIcon; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "c", function() { return bidIcon; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "o", function() { return fixedIcon; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "j", function() { return docIcon; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "t", function() { return pdfIcon; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "k", function() { return editIcon; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "e", function() { return blueEnvelopeIcon; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "s", function() { return infoIcon; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "x", function() { return soldIcon; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "n", function() { return expiredIcon; });
/* unused harmony export filterIcon */
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "v", function() { return searchIcon; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "r", function() { return hammerIcon; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "B", function() { return yellowCheckIcon; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "d", function() { return blueCheckIcon; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "q", function() { return greyMinusIcon; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "A", function() { return tournamentIcon; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "w", function() { return seasonReleaseIcon; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "z", function() { return sportIcon; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "p", function() { return fixturesEpisodeIcon; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "y", function() { return sportCategoryIcon; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "l", function() { return eventTimeIcon; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "i", function() { return coinIcon; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return Spinner; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_react__);


var cancelIcon = assetsBaseDir + "app/images/cancel.png";
var bucketIcon = assetsBaseDir + "app/images/bucket.png";
var addIcon = assetsBaseDir + "app/images/add.png";
var exclamationRoundIcon = assetsBaseDir + "app/images/exclamation_round.png";
var clockRoundIcon = assetsBaseDir + "app/images/clock.png";
var playIcon = assetsBaseDir + "app/images/play.png";

var bidIcon = assetsBaseDir + "app/images/hammer.png";
var fixedIcon = assetsBaseDir + "app/images/bid.png";
var docIcon = assetsBaseDir + "app/images/doc.png";
var pdfIcon = assetsBaseDir + "app/images/pdf.png";
var editIcon = assetsBaseDir + "app/images/edit.png";
var blueEnvelopeIcon = assetsBaseDir + "app/images/envelope_2.png";
var infoIcon = assetsBaseDir + "app/images/info_blue.png";
var soldIcon = assetsBaseDir + "app/images/sold.png";
var expiredIcon = assetsBaseDir + "app/images/expired.png";
var filterIcon = assetsBaseDir + "app/images/filter.png";
var searchIcon = assetsBaseDir + "app/images/search.svg";
var hammerIcon = assetsBaseDir + "app/images/listing/hammer.svg";

//rights
var yellowCheckIcon = assetsBaseDir + "app/images/rights/exclusive.svg";
var blueCheckIcon = assetsBaseDir + "app/images/rights/non-exclusive.svg";
var greyMinusIcon = assetsBaseDir + "app/images/rights/non-included.svg";

//events
var tournamentIcon = __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement("img", { src: assetsBaseDir + "app/images/listing/trophy.svg", alt: "" });
var seasonReleaseIcon = __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement("img", { src: assetsBaseDir + "app/images/listing/calendar.svg", alt: "" });
var sportIcon = __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement("img", { src: assetsBaseDir + "app/images/listing/tennis-ball.svg", alt: "" });
var fixturesEpisodeIcon = __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement("i", { className: "fa fa-play-circle", "aria-hidden": "true", style: { color: '#2aaaec', fontSize: 18 } });
var sportCategoryIcon = __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement("img", { src: assetsBaseDir + "app/images/listing/flag.svg", alt: "" });
var eventTimeIcon = __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement("img", { src: assetsBaseDir + "app/images/listing/calendar-clock.svg", alt: "" });
var coinIcon = __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement("img", { src: assetsBaseDir + "app/images/listing/coin.svg", alt: "" });

var Spinner = function Spinner(_ref) {
    var test = _ref.test;
    return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
        "div",
        null,
        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement("i", { className: "fa fa-cog fa-spin" })
    );
};

/***/ }),

/***/ "./src/AppBundle/Resources/public/javascript/main/components/LanguageSelector.js":
/*!***************************************************************************************!*\
  !*** ./src/AppBundle/Resources/public/javascript/main/components/LanguageSelector.js ***!
  \***************************************************************************************/
/*! exports provided: allValue, LanguageSelector */
/*! exports used: LanguageSelector, allValue */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "b", function() { return allValue; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return LanguageSelector; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_react__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_react_select__ = __webpack_require__(/*! react-select */ "./node_modules/react-select/dist/react-select.es.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__data_languages__ = __webpack_require__(/*! ../../../data/languages */ "./src/AppBundle/Resources/public/data/languages.js");
var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }





var allValue = {
    value: 'all',
    label: 'All'
};

var LanguageSelector = function (_React$Component) {
    _inherits(LanguageSelector, _React$Component);

    function LanguageSelector(props) {
        _classCallCheck(this, LanguageSelector);

        var _this = _possibleConstructorReturn(this, (LanguageSelector.__proto__ || Object.getPrototypeOf(LanguageSelector)).call(this, props));

        _this.handleOnChange = function (selection) {
            var onChange = _this.props.onChange;

            var hasAll = !!selection.find(function (item) {
                return item.value === 'all';
            });
            var hasAllPrev = !!_this.prevSelection.find(function (item) {
                return item.value === 'all';
            });
            //const itemsChanged = selection.length !== this.prevSelection.length;

            if (hasAll) {
                if (hasAllPrev) {
                    // Remove All
                    selection = selection.filter(function (item) {
                        return item.value !== 'all';
                    });
                } else {
                    // Add All and remove others
                    selection = [allValue];
                }
            }

            _this.prevSelection = selection;

            onChange(selection);
        };

        _this.state = {};

        _this.prevSelection = props.value ? [].concat(_toConsumableArray(props.value)) : [];
        return _this;
    }

    _createClass(LanguageSelector, [{
        key: 'render',
        value: function render() {
            var _props = this.props,
                value = _props.value,
                _props$multi = _props.multi,
                multi = _props$multi === undefined ? true : _props$multi;

            var realLanguages = Object.values(__WEBPACK_IMPORTED_MODULE_2__data_languages__["a" /* languages */]).map(function (i, k) {
                return { value: i.name, label: i.name };
            });
            var allLanguages = [allValue].concat(_toConsumableArray(realLanguages));

            return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_1_react_select__["default"], {
                name: 'form-field-name',
                onChange: this.handleOnChange,
                value: value,
                multi: multi,
                options: allLanguages
            });
        }
    }]);

    return LanguageSelector;
}(__WEBPACK_IMPORTED_MODULE_0_react___default.a.Component);



/***/ }),

/***/ "./src/AppBundle/Resources/public/javascript/main/components/LanguageSelectorExtended.js":
/*!***********************************************************************************************!*\
  !*** ./src/AppBundle/Resources/public/javascript/main/components/LanguageSelectorExtended.js ***!
  \***********************************************************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_react__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_react_select__ = __webpack_require__(/*! react-select */ "./node_modules/react-select/dist/react-select.es.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__data_languages__ = __webpack_require__(/*! ../../../data/languages */ "./src/AppBundle/Resources/public/data/languages.js");
var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }





var LanguageSelectorExtended = function (_React$Component) {
    _inherits(LanguageSelectorExtended, _React$Component);

    function LanguageSelectorExtended(props) {
        _classCallCheck(this, LanguageSelectorExtended);

        var _this = _possibleConstructorReturn(this, (LanguageSelectorExtended.__proto__ || Object.getPrototypeOf(LanguageSelectorExtended)).call(this, props));

        _this.handleOnChange = function (selection) {
            var onChange = _this.props.onChange;

            onChange(selection ? selection.value : null);
        };

        _this.componentDidMount = function () {};

        _this.state = {};
        return _this;
    }

    _createClass(LanguageSelectorExtended, [{
        key: 'render',
        value: function render() {
            var _props = this.props,
                value = _props.value,
                _props$multi = _props.multi,
                multi = _props$multi === undefined ? true : _props$multi,
                placeholder = _props.placeholder;

            return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_1_react_select__["default"], {
                name: 'form-field-name',
                onChange: this.handleOnChange,
                value: { value: value, label: value },
                placeholder: placeholder,
                multi: multi,
                options: Object.values(__WEBPACK_IMPORTED_MODULE_2__data_languages__["a" /* languages */]).map(function (i, k) {
                    return { value: i.name, label: i.name };
                })
            });
        }
    }]);

    return LanguageSelectorExtended;
}(__WEBPACK_IMPORTED_MODULE_0_react___default.a.Component);

/* harmony default export */ __webpack_exports__["a"] = (LanguageSelectorExtended);

/***/ }),

/***/ "./src/AppBundle/Resources/public/javascript/main/components/LicenseDownloader.js":
/*!****************************************************************************************!*\
  !*** ./src/AppBundle/Resources/public/javascript/main/components/LicenseDownloader.js ***!
  \****************************************************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_react__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__Icons__ = __webpack_require__(/*! ./Icons */ "./src/AppBundle/Resources/public/javascript/main/components/Icons.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__actions_utils__ = __webpack_require__(/*! ../actions/utils */ "./src/AppBundle/Resources/public/javascript/main/actions/utils.js");
var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }





var LicenseDownloader = function (_React$Component) {
    _inherits(LicenseDownloader, _React$Component);

    function LicenseDownloader(props) {
        _classCallCheck(this, LicenseDownloader);

        var _this = _possibleConstructorReturn(this, (LicenseDownloader.__proto__ || Object.getPrototypeOf(LicenseDownloader)).call(this, props));

        _this.getLicense = function () {
            var _this$props = _this.props,
                type = _this$props.type,
                id = _this$props.id,
                listingId = _this$props.listingId,
                bundle = _this$props.bundle;

            switch (type) {
                case "BID":
                    Object(__WEBPACK_IMPORTED_MODULE_2__actions_utils__["j" /* viewLicenseBid */])(id);
                    break;
                case "BUNDLE":
                    Object(__WEBPACK_IMPORTED_MODULE_2__actions_utils__["k" /* viewLicenseBundle */])(id, listingId);
                    break;
                case "CUSTOM":
                    Object(__WEBPACK_IMPORTED_MODULE_2__actions_utils__["l" /* viewLicenseCustom */])(listingId, bundle);
                    break;
                default:
                    Object(__WEBPACK_IMPORTED_MODULE_2__actions_utils__["i" /* viewLicense */])(id);
            }
        };

        _this.state = {};
        return _this;
    }

    _createClass(LicenseDownloader, [{
        key: "render",
        value: function render() {
            var _props = this.props,
                _props$style = _props.style,
                style = _props$style === undefined ? {} : _props$style,
                _props$iconStyle = _props.iconStyle,
                iconStyle = _props$iconStyle === undefined ? { height: 23 } : _props$iconStyle;

            return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                "div",
                { style: _extends({}, style, { cursor: 'pointer' }),
                    onClick: this.getLicense },
                __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement("img", { style: iconStyle, src: __WEBPACK_IMPORTED_MODULE_1__Icons__["t" /* pdfIcon */] })
            );
        }
    }]);

    return LicenseDownloader;
}(__WEBPACK_IMPORTED_MODULE_0_react___default.a.Component);

/* harmony default export */ __webpack_exports__["a"] = (LicenseDownloader);

/***/ }),

/***/ "./src/AppBundle/Resources/public/javascript/main/components/NewSeason.js":
/*!********************************************************************************!*\
  !*** ./src/AppBundle/Resources/public/javascript/main/components/NewSeason.js ***!
  \********************************************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_react__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__sell_actions_contentActions__ = __webpack_require__(/*! ../../sell/actions/contentActions */ "./src/AppBundle/Resources/public/javascript/sell/actions/contentActions.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_react_redux__ = __webpack_require__(/*! react-redux */ "./node_modules/react-redux/es/index.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_prop_types__ = __webpack_require__(/*! prop-types */ "./node_modules/prop-types/index.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_prop_types___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_3_prop_types__);
var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }






var NewSeason = function (_React$Component) {
    _inherits(NewSeason, _React$Component);

    function NewSeason(props) {
        _classCallCheck(this, NewSeason);

        var _this = _possibleConstructorReturn(this, (NewSeason.__proto__ || Object.getPrototypeOf(NewSeason)).call(this, props));

        _this.getEndOptions = function () {
            var values = [];
            var _this$props = _this.props,
                index = _this$props.index,
                seasons = _this$props.seasons;

            if (seasons[index].from) {
                values.push(Number(seasons[index].from));
                values.push(Number(seasons[index].from) + 1);

                return values.map(function (value) {
                    return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        "option",
                        { selected: Number(seasons[index].from) === value, value: value },
                        value
                    );
                });
            }

            return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                "option",
                null,
                "Year"
            );
        };

        _this.setDate = function (key, value) {
            var index = _this.props.index;

            _this.props.updateFromMultiple(index, key, value);
        };

        var startYear = 2030;
        var years = [];

        for (var i = 0; i < 81; i++) {
            years.push(startYear - i);
        }

        _this.state = {
            startDate: null,
            endDate: null,
            years: years
        };
        return _this;
    }

    _createClass(NewSeason, [{
        key: "render",
        value: function render() {
            var _this2 = this;

            var _props = this.props,
                index = _props.index,
                seasons = _props.seasons;

            return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                "div",
                null,
                __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                    "div",
                    { className: "base-input" },
                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        "label",
                        null,
                        "Season"
                    ),
                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        "label",
                        { className: "season-selector-label" },
                        "From"
                    ),
                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        "select",
                        {
                            value: seasons[index].from,
                            onChange: function onChange(e) {
                                _this2.setDate('from', e.target.value);
                            } },
                        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement("option", null),
                        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                            "option",
                            { disabled: true },
                            this.context.t("Year")
                        ),
                        this.state.years.map(function (year, i) {
                            return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                "option",
                                { key: i, value: year },
                                year
                            );
                        })
                    ),
                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        "label",
                        { className: "season-selector-label" },
                        "/",
                        this.context.t("To")
                    ),
                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        "select",
                        {
                            value: seasons[index].to,
                            onChange: function onChange(e) {
                                _this2.setDate('to', e.target.value);
                            },
                            disabled: !seasons[index].from },
                        this.getEndOptions(),
                        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                            "option",
                            { value: 0 },
                            this.context.t("Not applicable")
                        )
                    ),
                    this.props.showClose && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        "button",
                        { className: "standard-button", onClick: this.props.onRemove },
                        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement("i", { className: "fa fa-close" })
                    )
                )
            );
        }
    }]);

    return NewSeason;
}(__WEBPACK_IMPORTED_MODULE_0_react___default.a.Component);

NewSeason.contextTypes = {
    t: __WEBPACK_IMPORTED_MODULE_3_prop_types__["PropTypes"].func.isRequired
};

var mapStateToProps = function mapStateToProps(state) {
    return state.content;
};

var mapDispatchToProps = function mapDispatchToProps(dispatch) {
    return {
        updateFromMultiple: function updateFromMultiple(index, key, value) {
            return dispatch({
                type: 'UPDATE_FROM_MULTIPLE',
                selectorType: 'seasons',
                index: index,
                key: key,
                value: value
            });
        }

    };
};

/* harmony default export */ __webpack_exports__["a"] = (Object(__WEBPACK_IMPORTED_MODULE_2_react_redux__["connect"])(mapStateToProps, mapDispatchToProps)(NewSeason));

/***/ }),

/***/ "./src/AppBundle/Resources/public/javascript/main/components/PopupCountrySelector.js":
/*!*******************************************************************************************!*\
  !*** ./src/AppBundle/Resources/public/javascript/main/components/PopupCountrySelector.js ***!
  \*******************************************************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_react__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_react_modal__ = __webpack_require__(/*! react-modal */ "./node_modules/react-modal/lib/index.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_react_modal___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_react_modal__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__styles_custom__ = __webpack_require__(/*! ../styles/custom */ "./src/AppBundle/Resources/public/javascript/main/styles/custom.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__Icons__ = __webpack_require__(/*! ./Icons */ "./src/AppBundle/Resources/public/javascript/main/components/Icons.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_prop_types__ = __webpack_require__(/*! prop-types */ "./node_modules/prop-types/index.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_prop_types___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_4_prop_types__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__RegionCountrySelector__ = __webpack_require__(/*! ./RegionCountrySelector */ "./src/AppBundle/Resources/public/javascript/main/components/RegionCountrySelector.js");
var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }








var PopupCountrySelector = function (_React$Component) {
    _inherits(PopupCountrySelector, _React$Component);

    function PopupCountrySelector(props) {
        _classCallCheck(this, PopupCountrySelector);

        var _this = _possibleConstructorReturn(this, (PopupCountrySelector.__proto__ || Object.getPrototypeOf(PopupCountrySelector)).call(this, props));

        _this.openModal = function () {
            _this.setState({ isOpen: true });
        };

        _this.closeModal = function () {
            var _this$props$onSelect = _this.props.onSelect,
                onSelect = _this$props$onSelect === undefined ? true : _this$props$onSelect;

            _this.setState({
                isOpen: false,
                value: []
            });
            onSelect(_this.refs.selector.state.selection);
        };

        _this.cancelModal = function () {
            _this.setState({ isOpen: false });
        };

        _this.handleOptionChange = function (changeEvent) {
            _this.setState({
                selectedOption: changeEvent.target.value
            });
        };

        _this.handleCountryChange = function (value) {
            _this.setState({ value: value });
        };

        _this.renderModal = function () {
            var value = _this.state.value;


            return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                __WEBPACK_IMPORTED_MODULE_1_react_modal___default.a,
                {
                    isOpen: _this.state.isOpen,
                    bodyOpenClassName: "selector",
                    style: __WEBPACK_IMPORTED_MODULE_2__styles_custom__["c" /* customStyles */]
                },
                __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                    'div',
                    { className: 'modal-title' },
                    _this.context.t("Country Selector"),
                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        'div',
                        { className: 'close', onClick: _this.cancelModal },
                        'X'
                    )
                ),
                __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                    'div',
                    { className: 'step-content' },
                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_5__RegionCountrySelector__["a" /* default */], {
                        value: value,
                        ref: 'selector',
                        worldwide: true,
                        onChange: _this.handleCountryChange
                    })
                ),
                __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                    'div',
                    { style: {
                            display: "flex",
                            margin: 20

                        } },
                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('input', { type: 'radio',
                        value: 'single',
                        className: 'ca-radio',
                        style: { height: '20px', width: 20, marginRight: 15 },
                        defaultChecked: true,
                        checked: _this.state.selectedOption === 'single',
                        onChange: _this.handleOptionChange
                    }),
                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        'span',
                        { style: { color: 'black', marginRight: 30, fontSize: '14px' } },
                        _this.context.t("MARKETPLACE_FILTER_ONE_TERRITORY")
                    ),
                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('input', { type: 'radio',
                        value: 'multiple',
                        className: 'ca-radio',
                        style: { height: '20px', width: 20, marginRight: 15 },
                        checked: _this.state.selectedOption === 'multiple',
                        onChange: _this.handleOptionChange
                    }),
                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        'span',
                        { style: { color: 'black', fontSize: '14px' } },
                        _this.context.t("MARKETPLACE_FILTER_ALL_TERRITORIES")
                    )
                ),
                __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                    'div',
                    { className: "buttons" },
                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        'button',
                        {
                            disabled: !value || value.length === 0,
                            className: "standard-button",
                            onClick: _this.closeModal },
                        'Ok'
                    )
                )
            );
        };

        _this.state = {
            isOpen: false,
            value: props.value,
            selectedOption: props.includeAllCountries ? 'multiple' : 'single'
        };
        return _this;
    }

    _createClass(PopupCountrySelector, [{
        key: 'render',
        value: function render() {
            var _props$showTerritorie = this.props.showTerritories,
                showTerritories = _props$showTerritorie === undefined ? true : _props$showTerritorie;
            var _state = this.state,
                territories = _state.territories,
                activeTerritory = _state.activeTerritory;


            return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                'div',
                { className: 'popup-country-selector' },
                this.renderModal(),
                __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                    'div',
                    { className: 'filter-btn' },
                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('i', { className: 'fa fa-sliders', 'aria-hidden': 'true', onClick: this.openModal })
                )
            );
        }
    }]);

    return PopupCountrySelector;
}(__WEBPACK_IMPORTED_MODULE_0_react___default.a.Component);

PopupCountrySelector.contextTypes = {
    t: __WEBPACK_IMPORTED_MODULE_4_prop_types__["PropTypes"].func.isRequired
};

/* harmony default export */ __webpack_exports__["a"] = (PopupCountrySelector);

/***/ }),

/***/ "./src/AppBundle/Resources/public/javascript/main/components/ProgramTypesDefinitions.js":
/*!**********************************************************************************************!*\
  !*** ./src/AppBundle/Resources/public/javascript/main/components/ProgramTypesDefinitions.js ***!
  \**********************************************************************************************/
/*! exports provided: ProgramTypesDefinitions */
/*! exports used: ProgramTypesDefinitions */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return ProgramTypesDefinitions; });
var ProgramTypesDefinitions = {
    HIGHLIGHT_SHOW: "Highlight show",
    DOCUMENTARY: "Documentary",
    PREVIEW: "Preview",
    TALK_SHOW: "Talk show",
    OTHER: "Other"
};

/***/ }),

/***/ "./src/AppBundle/Resources/public/javascript/main/components/RegionCountrySelector.js":
/*!********************************************************************************************!*\
  !*** ./src/AppBundle/Resources/public/javascript/main/components/RegionCountrySelector.js ***!
  \********************************************************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_react__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_react_select__ = __webpack_require__(/*! react-select */ "./node_modules/react-select/dist/react-select.es.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__CountrySelector__ = __webpack_require__(/*! ./CountrySelector */ "./src/AppBundle/Resources/public/javascript/main/components/CountrySelector.js");
var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }





var RegionCountrySelector = function (_React$Component) {
    _inherits(RegionCountrySelector, _React$Component);

    function RegionCountrySelector(props) {
        _classCallCheck(this, RegionCountrySelector);

        var _this2 = _possibleConstructorReturn(this, (RegionCountrySelector.__proto__ || Object.getPrototypeOf(RegionCountrySelector)).call(this, props));

        _this2.selectWorldwide = function () {
            var onChange = _this2.props.onChange;
            var countries = _this2.state.countries;

            var selection = countries.map(function (i, k) {
                return { value: i.name, label: i.name };
            });
            _this2.setState({ selection: selection });
            if (onChange) onChange(selection);
        };

        _this2.selectRegion = function (id) {
            var countries = _this2.state.countries;
            var _this2$props = _this2.props,
                _this2$props$filter = _this2$props.filter,
                filter = _this2$props$filter === undefined ? [] : _this2$props$filter,
                onChange = _this2$props.onChange;

            var selection = countries.filter(function (c) {
                return c.regions.indexOf(id) !== -1 && filter.indexOf(c.name) === -1;
            }).map(function (i, k) {
                return { value: i.name, label: i.name };
            });
            _this2.setState({ selection: selection });
            if (onChange) onChange(selection);
        };

        _this2.handleChange = function (selection) {
            var _this2$props2 = _this2.props,
                onChange = _this2$props2.onChange,
                value = _this2$props2.value;


            if (onChange) onChange(selection);

            _this2.setState({ selection: selection });
        };

        _this2.state = {
            countries: [],
            selection: props.value,
            territories: [],
            regions: [],
            activeTerritory: null
        };
        return _this2;
    }

    _createClass(RegionCountrySelector, [{
        key: 'componentDidMount',
        value: function componentDidMount() {
            var _this = this;
            ContentArena.Api.getCountries().done(function (countries) {
                _this.setState({ countries: countries });
            });

            if (ContentArena.Data.Territories.length === 0) {
                ContentArena.Api.getTerritories().done(function (territories) {
                    ContentArena.Data.Territories = territories;
                    _this.setState({ territories: territories });
                });
            } else {
                _this.setState({ territories: ContentArena.Data.Territories });
            }

            if (ContentArena.Data.Regions.length === 0) {
                ContentArena.Api.getRegions().done(function (regions) {
                    ContentArena.Data.Regions = regions;
                    _this.setState({ regions: regions });
                });
            } else {
                _this.setState({ regions: ContentArena.Data.Regions });
            }
        }
    }, {
        key: 'componentWillReceiveProps',
        value: function componentWillReceiveProps(nextProps) {
            this.setState({ selection: nextProps.value });
        }
    }, {
        key: 'selectTerritory',
        value: function selectTerritory(id) {
            var _props = this.props,
                _props$filter = _props.filter,
                filter = _props$filter === undefined ? [] : _props$filter,
                onChange = _props.onChange;
            var countries = this.state.countries;

            var selection = countries.filter(function (c) {
                return c.territoryId === id && filter.indexOf(c.name) === -1;
            }).map(function (i, k) {
                return { value: i.name, label: i.name };
            });
            this.setState({ selection: selection });
            if (onChange) onChange(selection);
        }
    }, {
        key: 'render',
        value: function render() {
            var _this3 = this;

            var _props2 = this.props,
                filter = _props2.filter,
                disabled = _props2.disabled,
                worldwide = _props2.worldwide;
            var _state = this.state,
                territories = _state.territories,
                regions = _state.regions;


            return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                'div',
                { className: 'country-selector' },
                !disabled && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                    'div',
                    null,
                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        'div',
                        { className: 'regions' },
                        territories.map(function (territory, i) {
                            return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                'button',
                                { className: "region",
                                    key: "territory-" + i,
                                    onClick: function onClick() {
                                        _this3.selectTerritory(territory.id);
                                    } },
                                territory.name
                            );
                        }),
                        worldwide && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                            'button',
                            { className: "region", onClick: this.selectWorldwide },
                            'Worldwide'
                        )
                    ),
                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        'div',
                        { className: 'regions' },
                        regions.map(function (region, i) {
                            return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                'button',
                                { className: "region",
                                    key: "region-" + i,
                                    onClick: function onClick() {
                                        _this3.selectRegion(region.id);
                                    } },
                                region.name
                            );
                        })
                    )
                ),
                __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_2__CountrySelector__["a" /* default */], {
                    filter: filter,
                    disabled: disabled,
                    onChange: this.handleChange,
                    value: this.state.selection
                })
            );
        }
    }]);

    return RegionCountrySelector;
}(__WEBPACK_IMPORTED_MODULE_0_react___default.a.Component);

/* harmony default export */ __webpack_exports__["a"] = (RegionCountrySelector);

/***/ }),

/***/ "./src/AppBundle/Resources/public/javascript/main/components/RightsLegend.js":
/*!***********************************************************************************!*\
  !*** ./src/AppBundle/Resources/public/javascript/main/components/RightsLegend.js ***!
  \***********************************************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_react__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_prop_types__ = __webpack_require__(/*! prop-types */ "./node_modules/prop-types/index.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_prop_types___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_prop_types__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__main_components_Icons__ = __webpack_require__(/*! ../../main/components/Icons */ "./src/AppBundle/Resources/public/javascript/main/components/Icons.js");




var RightsLegend = function RightsLegend(props, context) {
    return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
        'div',
        { className: 'RightsLegend' },
        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
            'div',
            { className: 'item' },
            __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('img', { className: 'icon', src: __WEBPACK_IMPORTED_MODULE_2__main_components_Icons__["B" /* yellowCheckIcon */], alt: '' }),
            __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                'span',
                { className: 'name' },
                context.t("MARKETPLACE_RIGHTS_LABEL_EXCLUSIVE")
            )
        ),
        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
            'div',
            { className: 'item' },
            __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('img', { className: 'icon', src: __WEBPACK_IMPORTED_MODULE_2__main_components_Icons__["d" /* blueCheckIcon */], alt: '' }),
            __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                'span',
                { className: 'name' },
                context.t("MARKETPLACE_RIGHTS_LABEL_NON_EXCLUSIVE")
            )
        ),
        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
            'div',
            { className: 'item' },
            __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('img', { className: 'icon', src: __WEBPACK_IMPORTED_MODULE_2__main_components_Icons__["q" /* greyMinusIcon */], alt: '' }),
            __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                'span',
                { className: 'name' },
                context.t("MARKETPLACE_RIGHTS_LABEL_NON_INCLUDED")
            )
        )
    );
};

RightsLegend.contextTypes = {
    t: __WEBPACK_IMPORTED_MODULE_1_prop_types___default.a.func.isRequired
};

/* harmony default export */ __webpack_exports__["a"] = (RightsLegend);

/***/ }),

/***/ "./src/AppBundle/Resources/public/javascript/main/components/SearchCompetition.js":
/*!****************************************************************************************!*\
  !*** ./src/AppBundle/Resources/public/javascript/main/components/SearchCompetition.js ***!
  \****************************************************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_react__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_react_table__ = __webpack_require__(/*! react-table */ "./node_modules/react-table/es/index.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_prop_types__ = __webpack_require__(/*! prop-types */ "./node_modules/prop-types/index.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_prop_types___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2_prop_types__);
var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }





var SearchCompetition = function (_React$Component) {
    _inherits(SearchCompetition, _React$Component);

    function SearchCompetition(props) {
        _classCallCheck(this, SearchCompetition);

        var _this2 = _possibleConstructorReturn(this, (SearchCompetition.__proto__ || Object.getPrototypeOf(SearchCompetition)).call(this, props));

        _this2.search = function () {
            var _this = _this2;

            _this2.setState({
                searching: true
            });

            ContentArena.Api.searchCompetition(_this2.state.input).done(function (results) {
                _this.setState({
                    results: results,
                    searching: false,
                    searchDone: true
                });
                _this.setState({
                    resultMessage: _this.getResultMessage(0)
                });
            }).always(function () {
                _this.setState({
                    searching: false,
                    searchDone: true
                });
            });
        };

        _this2.handleInput = function (e) {

            var input = e.target.value;

            _this2.setState(function (prevState) {
                return {
                    valid: input.length > 2,
                    input: input,
                    searchDone: input.length > 0 ? prevState.searchDone : false
                };
            });
        };

        _this2.handleKeyPress = function (e) {
            var _this2$state = _this2.state,
                searching = _this2$state.searching,
                valid = _this2$state.valid;

            if (e.key === 'Enter' && !searching && valid) {
                _this2.search();
            }
        };

        _this2.getResultMessage = function (page) {
            page++;
            var total = _this2.state.results.length;
            var pageTotal = _this2.state.pageSize * page;
            var pageQuantity = page === 1 ? 1 : _this2.state.pageSize * (page - 1) + 1;

            if (pageTotal > total) pageTotal = total;

            return pageQuantity + "-" + pageTotal + " of " + total + " results for '" + _this2.state.input + "'";
        };

        _this2.onPageChange = function (page) {
            var resultMessage = _this2.getResultMessage(page);
            _this2.setState(function () {
                return {
                    resultMessage: resultMessage
                };
            });
        };

        _this2.state = {
            pageSize: 20,
            input: "",
            valid: false,
            searching: false,
            searchDone: false,
            results: [],
            resultMessage: ""
        };
        return _this2;
    }

    _createClass(SearchCompetition, [{
        key: 'render',
        value: function render() {
            var _this3 = this;

            return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                'div',
                { className: 'step-content-container' },
                __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                    'div',
                    { className: 'step-item-description' },
                    this.context.t("CL_STEP1_SEARCH_TITLE")
                ),
                __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                    'div',
                    { className: "base-input" },
                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        'label',
                        null,
                        this.context.t("Competition")
                    ),
                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('input', { type: 'text',
                        onKeyPress: this.handleKeyPress,
                        onChange: this.handleInput,
                        placeholder: this.context.t("CL_STEP1_SEARCH_PLACEHOLDER") }),
                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        'button',
                        { className: 'standard-button', disabled: !this.state.valid || this.state.searching, onClick: this.search },
                        'Search'
                    )
                ),
                this.state.searching && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                    'div',
                    null,
                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('i', { className: 'fa fa-cog fa-spin' })
                ),
                this.state.searchDone && this.state.results.length > 0 && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                    'div',
                    null,
                    this.state.resultMessage
                ),
                this.state.results.length > 0 && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                    'div',
                    null,
                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_1_react_table__["default"], {
                        defaultPageSize: this.state.pageSize,
                        showPageSizeOptions: false,
                        onPageChange: this.onPageChange,
                        minRows: 0,
                        data: this.state.results,
                        select: this.props.select,
                        className: 'ca-table',
                        columns: [{
                            Header: this.context.t("CL_STEP1_SEARCH_HEADER_COMPETITION"),
                            accessor: 'name' // String-based value accessors!
                        }, {
                            Header: this.context.t("CL_STEP1_SEARCH_HEADER_COUNTRY"),
                            accessor: 'sportCategory.name'
                        }, {
                            accessor: 'sport.name', // Required because our accessor is not a string
                            Header: this.context.t("CL_STEP1_SEARCH_HEADER_SPORT")
                        }, {
                            Header: '', // Custom header components!
                            Cell: function Cell(props) {
                                return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                    'button',
                                    { className: "blue-button", onClick: function onClick() {
                                            _this3.props.select(props.original);
                                        } },
                                    _this3.context.t("CL_STEP1_SEARCH_BUTTON_SELECT")
                                );
                            }
                        }]
                    })
                ),
                __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                    'div',
                    { style: { display: "inline-flex" } },
                    this.state.searchDone && this.state.results.length === 0 && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        'div',
                        null,
                        this.context.t("CL_STEP1_SEARCH_NO_RESULTS", { n: this.state.input })
                    ),
                    !this.state.searchDone && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        'div',
                        { className: 'step-item-description' },
                        this.context.t("CL_STEP1_SEARCH_CANT_FIND_2")
                    ),
                    this.state.searchDone && this.state.results.length > 0 && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        'div',
                        { className: 'step-item-description' },
                        this.context.t("CL_STEP1_SEARCH_CANT_FIND")
                    ),
                    this.state.searchDone && this.state.results.length === 0 && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        'div',
                        { className: 'step-item-description' },
                        this.context.t("CL_STEP1_SEARCH_TRY")
                    ),
                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        'button',
                        { className: "standard-button standard-button-big", onClick: this.props.close },
                        this.context.t("CL_STEP1_ENTER_MANUALLY")
                    )
                )
            );
        }
    }]);

    return SearchCompetition;
}(__WEBPACK_IMPORTED_MODULE_0_react___default.a.Component);

SearchCompetition.contextTypes = {
    t: __WEBPACK_IMPORTED_MODULE_2_prop_types__["PropTypes"].func.isRequired
};

/* harmony default export */ __webpack_exports__["a"] = (SearchCompetition);

/***/ }),

/***/ "./src/AppBundle/Resources/public/javascript/main/components/SeasonSelector.js":
/*!*************************************************************************************!*\
  !*** ./src/AppBundle/Resources/public/javascript/main/components/SeasonSelector.js ***!
  \*************************************************************************************/
/*! exports provided: NewFixture, default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* unused harmony export NewFixture */
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_react__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__NewSeason__ = __webpack_require__(/*! ./NewSeason */ "./src/AppBundle/Resources/public/javascript/main/components/NewSeason.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__sell_components_SellFormItems__ = __webpack_require__(/*! ../../sell/components/SellFormItems */ "./src/AppBundle/Resources/public/javascript/sell/components/SellFormItems.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_react_redux__ = __webpack_require__(/*! react-redux */ "./node_modules/react-redux/es/index.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__sell_actions_contentActions__ = __webpack_require__(/*! ../../sell/actions/contentActions */ "./src/AppBundle/Resources/public/javascript/sell/actions/contentActions.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5_react_datepicker__ = __webpack_require__(/*! react-datepicker */ "./node_modules/react-datepicker/es/index.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6_moment_moment__ = __webpack_require__(/*! moment/moment */ "./node_modules/moment/moment.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6_moment_moment___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_6_moment_moment__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__Icons__ = __webpack_require__(/*! ./Icons */ "./src/AppBundle/Resources/public/javascript/main/components/Icons.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8_prop_types__ = __webpack_require__(/*! prop-types */ "./node_modules/prop-types/index.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8_prop_types___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_8_prop_types__);
var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }











var NewFixture = function NewFixture(_ref, context) {
    var onRemove = _ref.onRemove,
        onAdd = _ref.onAdd,
        onChange = _ref.onChange,
        value = _ref.value,
        showAdd = _ref.showAdd,
        date = _ref.date,
        handleDate = _ref.handleDate;
    return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
        'div',
        { className: 'base-input', style: { display: 'flex', alignItems: 'center' } },
        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
            'label',
            null,
            context.t("Fixture")
        ),
        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('input', {
            className: 'new-category',
            type: 'text',
            placeholder: context.t("Enter fixture"),
            onChange: onChange,
            value: value }),
        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_5_react_datepicker__["default"], {
            className: "date-picker",
            selected: date ? __WEBPACK_IMPORTED_MODULE_6_moment_moment___default()(date) : undefined,
            onChange: handleDate,
            placeholderText: "dd/mm/yyyy"
        }),
        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
            'div',
            { style: {
                    display: 'flex',
                    alignItems: 'center',
                    minWidth: 50,
                    marginLeft: 30,
                    justifyContent: 'flex-end'
                } },
            showAdd && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('img', { src: __WEBPACK_IMPORTED_MODULE_7__Icons__["b" /* addIcon */], onClick: onAdd, style: { cursor: 'pointer', width: 20, height: 20, marginRight: 5 } }),
            __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('img', { src: __WEBPACK_IMPORTED_MODULE_7__Icons__["g" /* cancelIcon */], onClick: onRemove, style: { cursor: 'pointer', width: 20, height: 20 } })
        )
    );
};

var SeasonSelector = function (_React$Component) {
    _inherits(SeasonSelector, _React$Component);

    function SeasonSelector(props) {
        _classCallCheck(this, SeasonSelector);

        var _this = _possibleConstructorReturn(this, (SeasonSelector.__proto__ || Object.getPrototypeOf(SeasonSelector)).call(this, props));

        _this.toggle = function () {
            var _this$props = _this.props,
                updateFromMultiple = _this$props.updateFromMultiple,
                seasons = _this$props.seasons,
                index = _this$props.index;

            updateFromMultiple("seasons", index, "showSchedule", !seasons[index].showSchedule);
        };

        _this.addFixture = function () {
            var _this$props2 = _this.props,
                updateFromMultiple = _this$props2.updateFromMultiple,
                seasons = _this$props2.seasons,
                index = _this$props2.index;

            var fixtures = seasons[index].fixtures || [];
            updateFromMultiple("seasons", index, "fixtures", [].concat(_toConsumableArray(fixtures), [{ name: "" }]));
        };

        _this.onChangeFixture = function (i, value) {
            var _this$props3 = _this.props,
                updateFromMultiple = _this$props3.updateFromMultiple,
                seasons = _this$props3.seasons,
                index = _this$props3.index;

            var fixtures = seasons[index].fixtures;

            fixtures[i].name = value;
            updateFromMultiple("seasons", index, "fixtures", fixtures);
        };

        _this.onChangeFixtureDate = function (i, value) {
            var _this$props4 = _this.props,
                updateFromMultiple = _this$props4.updateFromMultiple,
                seasons = _this$props4.seasons,
                index = _this$props4.index;

            var fixtures = seasons[index].fixtures;

            fixtures[i].date = value;
            updateFromMultiple("seasons", index, "fixtures", fixtures);
        };

        _this.removeFixture = function (i) {
            var _this$props5 = _this.props,
                updateFromMultiple = _this$props5.updateFromMultiple,
                seasons = _this$props5.seasons,
                index = _this$props5.index;

            var fixtures = seasons[index].fixtures || [];
            fixtures.splice(i, 1);
            updateFromMultiple("seasons", index, "fixtures", fixtures);
        };

        _this.state = {};
        return _this;
    }

    _createClass(SeasonSelector, [{
        key: 'render',
        value: function render() {
            var _this2 = this;

            var _props = this.props,
                index = _props.index,
                season = _props.season,
                seasons = _props.seasons;

            var activeSeason = seasons[season];
            return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                'div',
                { style: { zIndex: 1 } },
                !this.props.isCustom && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                    'div',
                    { className: 'base-input' },
                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        'label',
                        null,
                        this.context.t("Season")
                    ),
                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('input', {
                        type: 'text',
                        value: this.props.value || "",
                        readOnly: true,
                        disabled: this.props.loading,
                        onClick: this.props.openSelector,
                        placeholder: this.context.t("Season") }),
                    this.props.showClose && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        'button',
                        { onClick: this.props.removeSeason, className: "standard-button" },
                        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('i', { className: 'fa fa-close' })
                    )
                ),
                this.props.isCustom && activeSeason && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_1__NewSeason__["a" /* default */], { showClose: this.props.showClose,
                    onBlur: this.props.onBlur,
                    index: index,
                    onRemove: this.props.removeSeason }),
                this.props.showAddNew && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                    'div',
                    null,
                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        'button',
                        { className: 'link-button', onClick: this.props.addSeason },
                        this.context.t("CL_STEP1_ADD_SEASON")
                    )
                ),
                this.props.showAddNew && activeSeason && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                    'div',
                    { className: 'step-item-description' },
                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        'button',
                        { className: 'link-button', onClick: this.addFixture },
                        this.context.t("CL_STEP1_ADD_FIXTURES")
                    )
                ),
                activeSeason && activeSeason.fixtures && activeSeason.fixtures.length > 0 && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                    'div',
                    null,
                    activeSeason.fixtures.map(function (fixture, i, list) {
                        return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(NewFixture, {
                            key: i,
                            onAdd: _this2.addFixture,
                            value: fixture.name,
                            date: fixture.date,
                            handleDate: function handleDate(e) {
                                return _this2.onChangeFixtureDate(i, e);
                            },
                            onChange: function onChange(e) {
                                return _this2.onChangeFixture(i, e.target.value);
                            },
                            onRemove: function onRemove() {
                                return _this2.removeFixture(i);
                            },
                            showAdd: i === list.length - 1
                        });
                    })
                )
            );
        }
    }]);

    return SeasonSelector;
}(__WEBPACK_IMPORTED_MODULE_0_react___default.a.Component);

SeasonSelector.contextTypes = {
    t: __WEBPACK_IMPORTED_MODULE_8_prop_types__["PropTypes"].func.isRequired
};

NewFixture.contextTypes = {
    t: __WEBPACK_IMPORTED_MODULE_8_prop_types__["PropTypes"].func.isRequired
};

var mapStateToProps = function mapStateToProps(state) {
    return state.content;
};

var mapDispatchToProps = function mapDispatchToProps(dispatch) {
    return {
        updateFromMultiple: function updateFromMultiple(type, index, key, value) {
            return dispatch({
                type: 'UPDATE_FROM_MULTIPLE',
                selectorType: type,
                index: index,
                key: key,
                value: value
            });
        },
        updateContentValue: function updateContentValue(key, value) {
            return dispatch({
                type: 'UPDATE_CONTENT_VALUE',
                key: key,
                value: value
            });
        }

    };
};

/* harmony default export */ __webpack_exports__["a"] = (Object(__WEBPACK_IMPORTED_MODULE_3_react_redux__["connect"])(mapStateToProps, mapDispatchToProps)(SeasonSelector));

/***/ }),

/***/ "./src/AppBundle/Resources/public/javascript/main/components/Selector.js":
/*!*******************************************************************************!*\
  !*** ./src/AppBundle/Resources/public/javascript/main/components/Selector.js ***!
  \*******************************************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_react__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_react_redux__ = __webpack_require__(/*! react-redux */ "./node_modules/react-redux/es/index.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__main_store__ = __webpack_require__(/*! ../../main/store */ "./src/AppBundle/Resources/public/javascript/main/store.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_react_modal__ = __webpack_require__(/*! react-modal */ "./node_modules/react-modal/lib/index.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_react_modal___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_3_react_modal__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__styles_custom__ = __webpack_require__(/*! ../styles/custom */ "./src/AppBundle/Resources/public/javascript/main/styles/custom.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5_prop_types__ = __webpack_require__(/*! prop-types */ "./node_modules/prop-types/index.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5_prop_types___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_5_prop_types__);
var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }








__WEBPACK_IMPORTED_MODULE_3_react_modal___default.a.setAppElement('#home-wrapper');

var SelectorItem = function SelectorItem(_ref) {
    var label = _ref.label,
        selected = _ref.selected,
        onClick = _ref.onClick,
        disabled = _ref.disabled;
    return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
        'div',
        { className: "selector-item " + (selected ? "selector-item-selected " : "") + (disabled && "selector-item-disabled"), onClick: !disabled ? onClick : undefined },
        label
    );
};

var Selector = function (_React$Component) {
    _inherits(Selector, _React$Component);

    function Selector(props) {
        _classCallCheck(this, Selector);

        var _this2 = _possibleConstructorReturn(this, (Selector.__proto__ || Object.getPrototypeOf(Selector)).call(this, props));

        _this2.openModal = function () {
            _this2.props.openSelector();
        };

        _this2.afterOpenModal = function () {};

        _this2.closeModal = function () {
            _this2.setState({ updated: false, filterUpdated: false, customCountry: false });
            _this2.props.closeSelector();
        };

        _this2.getActiveFilter = function () {
            var activeFilter = _this2.getActiveFilterName();
            return _this2.state.filter[activeFilter];
        };

        _this2.getActiveFilterName = function () {
            return _this2.props.activeFilter && !_this2.state.filterUpdated ? _this2.props.activeFilter : _this2.state.activeFilter;
        };

        _this2.shouldShowFilters = function () {
            return _this2.state.selectorItems && _this2.state.selectorItems.length > 30;
        };

        _this2.shouldShowInternationalFilter = function () {

            var show = false;

            _this2.state.selectorItems.some(function (item) {
                show = item.name.match(/international/gi) !== null;
                return show;
            });

            return show;
        };

        _this2.setActiveFilter = function (filterName) {
            _this2.setState({ activeFilter: filterName, filterUpdated: true });
        };

        _this2.applySelection = function () {

            var extended = false,
                selectedItems = _this2.state.selectedItems,
                prevCountries = _this2.state.prevCountries;

            if (_this2.state.customCountry) {
                selectedItems.forEach(function (item) {
                    if (!prevCountries.has(item.externalId)) {
                        item.extended = true;
                        extended = true;
                    }
                });
            }

            if (extended) {
                _this2.props.addNewSeason(0, []);
            }

            _this2.setState({ updated: false, filterUpdated: false, customCountry: false });
            _this2.props.applySelection(_this2.props.selectorType, selectedItems, _this2.props.multiple, _this2.props.index, _this2.props.clean);
        };

        _this2.addNewSport = function (index) {
            _this2.setState({ updated: false, filterUpdated: false });
            _this2.props.addNewSport(index, _this2.props.clean);
            if (index === 0) _this2.props.addNewSeason(index, []);
            _this2.props.closeSelector();
        };

        _this2.addNewTournament = function (index) {
            _this2.setState({ updated: false, filterUpdated: false });
            _this2.props.addNewTournament(index, _this2.props.clean);
            _this2.props.addNewSeason(index, []);
            _this2.props.closeSelector();
        };

        _this2.addNewSeason = function (index) {
            _this2.setState({ updated: false, filterUpdated: false });
            _this2.props.addNewSeason(index, _this2.props.clean);
            _this2.props.closeSelector();
        };

        _this2.addNewCategory = function (index) {
            _this2.setState({ updated: false, filterUpdated: false });
            _this2.props.addNewCategory(index, _this2.props.clean);
            _this2.props.addNewTournament(0, []);
            _this2.props.addNewSeason(0, []);
            _this2.props.closeSelector();
        };

        _this2.selectItem = function (item) {

            var _this = _this2;

            _this2.setState(function (prevState) {

                if (prevState.selectedItems.has(item.externalId)) {
                    if (_this.props.multiple) {
                        prevState.selectedItems.delete(item.externalId);
                    }
                } else {

                    if (!_this.props.multiple) {
                        prevState.selectedItems.clear();
                    }

                    prevState.selectedItems.set(item.externalId, item);
                }

                return {
                    selectedItems: prevState.selectedItems,
                    updated: true
                };
            });
        };

        _this2.isItemSelected = function (item) {
            return _this2.state.selectedItems.has(item.externalId);
        };

        _this2.isItemDisabled = function (item) {

            return _this2.state.disabled.has(item.externalId);
        };

        _this2.showAllCountries = function () {

            if (!ContentArena.Data.Countries || ContentArena.Data.Countries.length === 0) return;

            _this2.setState(function (prevState) {
                return {
                    prevCountries: new Map(prevState.selectorItems.map(function (i) {
                        return [i.externalId, i];
                    })),
                    selectorItems: ContentArena.Data.Countries,
                    customCountry: true
                };
            });
        };

        _this2.filterLetter = function (item) {
            var filter = _this2.getActiveFilter();
            return filter.values.indexOf(item.name[0].toLowerCase()) !== -1;
        };

        _this2.filterInternational = function (item) {
            return item.name.match(/international/gi) !== null;
        };

        _this2.getItems = function () {
            var filter = _this2.getActiveFilter();
            if (filter.type === "origin") {
                if (_this2.props[filter.value]) return _this2.props[filter.value];
                if (!_this2.shouldShowFilters()) return _this2.state.selectorItems;

                return _this2.state.selectorItems.filter(_this2.filterLetter);
            }

            if (filter.type === "international") return _this2.state.selectorItems.filter(_this2.filterInternational);

            if (filter.type === "firstLetter") {

                if (!_this2.shouldShowFilters()) return _this2.state.selectorItems;

                return _this2.state.selectorItems.filter(_this2.filterLetter);
            }
        };

        _this2.state = {
            updated: false,
            filterUpdated: false,
            open: props.selector,
            prevCountries: new Map(),
            customCountry: false,
            selectorItems: props.selectorItems || [],
            popularItems: props.popularItems || [],
            filter: {
                "ag": { type: "firstLetter", values: ["a", 'b', 'c', 'd', 'e', 'f', 'g'] },
                "hn": { type: "firstLetter", values: ["h", 'i', 'j', 'k', 'l', 'm', 'n'] },
                "ot": { type: "firstLetter", values: ["o", 'p', 'q', 'r', 's', 't'] },
                "uz": { type: "firstLetter", values: ["u", 'v', 'w', 'x', 'y', 'z'] },
                "popular": { type: "origin", value: "popularItems" },
                "international": { type: "international", value: "international" }
            },
            activeFilter: props.activeFilter || "ag",
            selectedItems: new Map(),
            disabled: new Map()
        };

        __WEBPACK_IMPORTED_MODULE_2__main_store__["a" /* default */].subscribe(function (a) {});
        return _this2;
    }

    _createClass(Selector, [{
        key: 'componentWillReceiveProps',
        value: function componentWillReceiveProps(nextProps) {

            var disabled = new Map(),
                selectedItems = new Map();

            if (nextProps.disabled) disabled = nextProps.disabled;
            if (nextProps.selectedItems) {
                nextProps.selectedItems.forEach(function (v, k) {
                    var key = v.externalId ? v.externalId : "custom" + k;
                    selectedItems.set(key, v);
                });
            }

            this.setState({
                disabled: disabled,
                selectedItems: selectedItems,
                selectorItems: nextProps.selectorItems
            });
        }
    }, {
        key: 'render',
        value: function render() {
            var _this3 = this;

            var _this = this;
            return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                __WEBPACK_IMPORTED_MODULE_3_react_modal___default.a,
                {
                    isOpen: this.props.open,
                    onAfterOpen: this.afterOpenModal,
                    onRequestClose: this.closeModal,
                    bodyOpenClassName: "selector",
                    style: __WEBPACK_IMPORTED_MODULE_4__styles_custom__["b" /* SelectorModalStyle */],
                    className: 'ReactModal__Selector',
                    contentLabel: 'Example Modal'
                },
                __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                    'div',
                    null,
                    this.props.popularItems && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        'button',
                        { className: "selector-filter " + (this.getActiveFilterName() === "popular" && "selector-filter-active"),
                            onClick: function onClick() {
                                _this3.setActiveFilter("popular");
                            } },
                        this.context.t("Popular")
                    ),
                    this.shouldShowFilters() && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        'button',
                        { className: "selector-filter " + (this.getActiveFilterName() === "ag" && "selector-filter-active"),
                            onClick: function onClick() {
                                _this3.setActiveFilter("ag");
                            } },
                        'A-G'
                    ),
                    this.shouldShowFilters() && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        'button',
                        { className: "selector-filter " + (this.getActiveFilterName() === "hn" && "selector-filter-active"),
                            onClick: function onClick() {
                                _this3.setActiveFilter("hn");
                            } },
                        'H-N'
                    ),
                    this.shouldShowFilters() && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        'button',
                        { className: "selector-filter " + (this.getActiveFilterName() === "ot" && "selector-filter-active"),
                            onClick: function onClick() {
                                _this3.setActiveFilter("ot");
                            } },
                        'O-T'
                    ),
                    this.shouldShowFilters() && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        'button',
                        { className: "selector-filter " + (this.getActiveFilterName() === "uz" && "selector-filter-active"),
                            onClick: function onClick() {
                                _this3.setActiveFilter("uz");
                            } },
                        'U-Z'
                    ),
                    this.shouldShowInternationalFilter() && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        'button',
                        { className: "selector-filter " + (this.getActiveFilterName() === "international" && "selector-filter-active"),
                            onClick: function onClick() {
                                _this3.setActiveFilter("international");
                            } },
                        this.context.t("International")
                    )
                ),
                __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                    'div',
                    { className: 'selector-content' },
                    this.getItems().map(function (item, i) {
                        return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(SelectorItem, { key: i,
                            label: item.name,
                            onClick: function onClick() {
                                return _this.selectItem(item);
                            },
                            selected: _this.isItemSelected(item),
                            disabled: _this.isItemDisabled(item)
                        });
                    })
                ),
                __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                    'div',
                    { className: "buttons" },
                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        'button',
                        { className: "light-blue-button", style: { backgroundColor: __WEBPACK_IMPORTED_MODULE_4__styles_custom__["b" /* SelectorModalStyle */].content.backgroundColor }, onClick: this.closeModal },
                        this.context.t("Cancel")
                    ),
                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        'button',
                        { className: "standard-button", onClick: this.applySelection, disabled: !this.state.updated },
                        this.context.t("Apply")
                    )
                ),
                this.props.showNewSport && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                    'div',
                    { className: "extras" },
                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        'div',
                        { className: "message" },
                        this.context.t("CL_STEP1_SELECTOR_SPORT_1")
                    ),
                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        'button',
                        { className: "link-button", onClick: function onClick() {
                                _this3.addNewSport(_this3.props.index);
                            } },
                        this.context.t("CL_STEP1_SELECTOR_ADD_SPORT")
                    )
                ),
                this.props.showNewTournament && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                    'div',
                    { className: "extras" },
                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        'div',
                        { className: "message" },
                        this.context.t("CL_STEP1_SELECTOR_TOURNAMENT_1")
                    ),
                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        'button',
                        { className: "link-button", onClick: function onClick() {
                                _this3.addNewTournament(_this3.props.index);
                            } },
                        this.context.t("CL_STEP1_SELECTOR_ADD_TOURNAMENT")
                    )
                ),
                this.props.showNewSeason && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                    'div',
                    { className: "extras" },
                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        'div',
                        { className: "message" },
                        this.context.t("CL_STEP1_SELECTOR_SEASON_1")
                    ),
                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        'button',
                        { className: "link-button", onClick: function onClick() {
                                _this3.addNewSeason(_this3.props.index);
                            } },
                        this.context.t("CL_STEP1_SELECTOR_ADD_SEASON")
                    )
                ),
                this.props.showAllCountries && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                    'div',
                    { className: "extras" },
                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        'div',
                        { className: "message" },
                        this.context.t("CL_STEP1_SELECTOR_COUNTRY_1")
                    ),
                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        'button',
                        { className: "link-button", onClick: this.showAllCountries },
                        this.context.t("CL_STEP1_SELECTOR_COUNTRIES_ALL")
                    )
                ),
                this.props.showNewCategory && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                    'div',
                    { className: "extras" },
                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        'div',
                        { className: "message" },
                        this.context.t("CL_STEP1_SELECTOR_CATEGORY_1")
                    ),
                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        'button',
                        { className: "link-button", onClick: function onClick() {
                                _this3.addNewCategory(_this3.props.index);
                            } },
                        this.context.t("CL_STEP1_SELECTOR_ADD_CATEGORY")
                    )
                )
            );
        }
    }]);

    return Selector;
}(__WEBPACK_IMPORTED_MODULE_0_react___default.a.Component);

Selector.contextTypes = {
    t: __WEBPACK_IMPORTED_MODULE_5_prop_types__["PropTypes"].func.isRequired
};

var mapStateToProps = function mapStateToProps(state) {
    return state.selector;
};

var mapDispatchToProps = function mapDispatchToProps(dispatch) {
    return {
        openSelector: function openSelector() {
            return dispatch({
                type: 'OPEN_SELECTOR'
            });
        },
        closeSelector: function closeSelector() {
            return dispatch({
                type: 'CLOSE_SELECTOR'
            });
        },
        applySelection: function applySelection(selectorType, selectedItems, multiple, index, clean) {
            return dispatch({
                type: 'APPLY_SELECTION',
                selectorType: selectorType,
                selectedItems: selectedItems,
                multiple: multiple,
                index: index,
                clean: clean
            });
        },
        addNewSport: function addNewSport(index, clean) {
            return dispatch({
                type: 'ADD_NEW',
                index: index,
                selectorType: "sports",
                clean: clean
            });
        },
        addNewCategory: function addNewCategory(index, clean) {
            return dispatch({
                type: 'ADD_NEW',
                index: index,
                selectorType: "sportCategory",
                clean: clean
            });
        },
        addNewTournament: function addNewTournament(index, clean) {
            return dispatch({
                type: 'ADD_NEW',
                index: index,
                selectorType: "tournament",
                clean: clean
            });
        },
        addNewSeason: function addNewSeason(index, clean) {
            return dispatch({
                type: 'ADD_NEW',
                index: index,
                selectorType: "seasons",
                clean: clean
            });
        }
    };
};

/* harmony default export */ __webpack_exports__["a"] = (Object(__WEBPACK_IMPORTED_MODULE_1_react_redux__["connect"])(mapStateToProps, mapDispatchToProps)(Selector));

/***/ }),

/***/ "./src/AppBundle/Resources/public/javascript/main/components/SendMessage.js":
/*!**********************************************************************************!*\
  !*** ./src/AppBundle/Resources/public/javascript/main/components/SendMessage.js ***!
  \**********************************************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_react__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_react_modal__ = __webpack_require__(/*! react-modal */ "./node_modules/react-modal/lib/index.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_react_modal___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_react_modal__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__styles_custom__ = __webpack_require__(/*! ../styles/custom */ "./src/AppBundle/Resources/public/javascript/main/styles/custom.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_prop_types__ = __webpack_require__(/*! prop-types */ "./node_modules/prop-types/index.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_prop_types___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_3_prop_types__);
var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }






var SendMessage = function (_React$Component) {
    _inherits(SendMessage, _React$Component);

    function SendMessage(props) {
        _classCallCheck(this, SendMessage);

        var _this = _possibleConstructorReturn(this, (SendMessage.__proto__ || Object.getPrototypeOf(SendMessage)).call(this, props));

        _this.open = function () {
            _this.setState({ isOpen: true });
        };

        _this.close = function () {
            _this.setState({ isOpen: false, showSuccess: false });
        };

        _this.send = function () {
            var _this$props = _this.props,
                listingId = _this$props.listingId,
                recipient = _this$props.recipient,
                role = _this$props.role;


            var message = {
                content: _this.state.message,
                listing: listingId,
                recipient: recipient.id,
                role: role || "BUYER"
            };

            _this.setState({ saving: true });

            ContentArena.ContentApi.sendMessage(message).done(function (r) {
                _this.setState({ saving: false, showSuccess: true, message: null });
            });
        };

        _this.state = {
            isOpen: props.isOpen
        };
        return _this;
    }

    _createClass(SendMessage, [{
        key: 'render',
        value: function render() {
            var _this2 = this;

            var recipient = this.props.recipient;
            var _state = this.state,
                showSuccess = _state.showSuccess,
                saving = _state.saving,
                message = _state.message;


            return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                __WEBPACK_IMPORTED_MODULE_1_react_modal___default.a,
                {
                    isOpen: this.state.isOpen,
                    onRequestClose: this.close,
                    bodyOpenClassName: "generic-modal",
                    style: __WEBPACK_IMPORTED_MODULE_2__styles_custom__["a" /* GenericModalStyle */]
                },
                __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                    'div',
                    { className: "generic-modal-container" },
                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        'div',
                        { className: 'title' },
                        this.context.t("Contact"),
                        ' ',
                        recipient.legalName
                    ),
                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        'div',
                        { className: 'container' },
                        !saving && !showSuccess && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('textarea', { onChange: function onChange(e) {
                                _this2.setState({ message: e.target.value });
                            }, value: message }),
                        saving && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                            'div',
                            null,
                            __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('i', { className: 'fa fa-cog fa-spin' })
                        ),
                        showSuccess && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                            'div',
                            null,
                            this.context.t("MESSAGE_POPUP_SENT")
                        )
                    ),
                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        'div',
                        { className: "buttons" },
                        !saving && !showSuccess && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                            'button',
                            { className: "confirm", disabled: !message, onClick: this.send },
                            this.context.t("MESSAGE_POPUP_BUTTON_SEND")
                        ),
                        !showSuccess && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                            'button',
                            { onClick: this.close },
                            this.context.t("MESSAGE_POPUP_BUTTON_CANCEL")
                        ),
                        showSuccess && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                            'button',
                            { className: "confirm", onClick: this.close },
                            this.context.t("MESSAGE_POPUP_BUTTON_CLOSE")
                        )
                    )
                )
            );
        }
    }]);

    return SendMessage;
}(__WEBPACK_IMPORTED_MODULE_0_react___default.a.Component);

SendMessage.contextTypes = {
    t: __WEBPACK_IMPORTED_MODULE_3_prop_types__["PropTypes"].func.isRequired
};

/* harmony default export */ __webpack_exports__["a"] = (SendMessage);

/***/ }),

/***/ "./src/AppBundle/Resources/public/javascript/main/components/Tooltip.js":
/*!******************************************************************************!*\
  !*** ./src/AppBundle/Resources/public/javascript/main/components/Tooltip.js ***!
  \******************************************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_react__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_react_tooltip__ = __webpack_require__(/*! react-tooltip */ "./node_modules/react-tooltip/dist/index.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_react_tooltip___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_react_tooltip__);



var Tooltip = function Tooltip(_ref) {
    var id = _ref.id,
        text = _ref.text,
        icon = _ref.icon,
        onClick = _ref.onClick;

    return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
        'i',
        {
            onClick: onClick,
            className: icon ? icon : "ca-tooltip fa fa-info-circle",
            'data-for': id, 'data-tip': text
        },
        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_1_react_tooltip___default.a, { id: id, place: 'top', type: 'dark', effect: 'solid' })
    );
};

/* harmony default export */ __webpack_exports__["a"] = (Tooltip);

/***/ }),

/***/ "./src/AppBundle/Resources/public/javascript/main/containers/TestPage.js":
/*!*******************************************************************************!*\
  !*** ./src/AppBundle/Resources/public/javascript/main/containers/TestPage.js ***!
  \*******************************************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_react__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_react_redux__ = __webpack_require__(/*! react-redux */ "./node_modules/react-redux/es/index.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__main_store__ = __webpack_require__(/*! ../../main/store */ "./src/AppBundle/Resources/public/javascript/main/store.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__main_actions_userActions__ = __webpack_require__(/*! ../../main/actions/userActions */ "./src/AppBundle/Resources/public/javascript/main/actions/userActions.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__components_RegionCountrySelector__ = __webpack_require__(/*! ../components/RegionCountrySelector */ "./src/AppBundle/Resources/public/javascript/main/components/RegionCountrySelector.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__components_PopupCountrySelector__ = __webpack_require__(/*! ../components/PopupCountrySelector */ "./src/AppBundle/Resources/public/javascript/main/components/PopupCountrySelector.js");
var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }









var TestPage = function (_React$Component) {
    _inherits(TestPage, _React$Component);

    function TestPage(props) {
        _classCallCheck(this, TestPage);

        var _this = _possibleConstructorReturn(this, (TestPage.__proto__ || Object.getPrototypeOf(TestPage)).call(this, props));

        _this.componentDidMount = function () {};

        _this.state = {};

        __WEBPACK_IMPORTED_MODULE_2__main_store__["a" /* default */].subscribe(function (a) {
            //console.log(store.getState());
        });
        return _this;
    }

    _createClass(TestPage, [{
        key: 'render',
        value: function render() {
            var history = this.props.history;

            return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                'div',
                { className: 'manager-content' },
                __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_4__components_RegionCountrySelector__["a" /* default */], {
                    onSelect: function onSelect(s) {
                        console.log(s);
                    }
                }),
                __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_5__components_PopupCountrySelector__["a" /* default */], null)
            );
        }
    }]);

    return TestPage;
}(__WEBPACK_IMPORTED_MODULE_0_react___default.a.Component);

var mapStateToProps = function mapStateToProps(state, ownProps) {
    return ownProps;
};

var mapDispatchToProps = function mapDispatchToProps(dispatch) {
    return {
        contentListingInit: function contentListingInit(content) {
            return dispatch({
                type: 'CONTENT_INIT',
                content: content
            });
        },
        updateProfile: function updateProfile(profile) {
            return dispatch(Object(__WEBPACK_IMPORTED_MODULE_3__main_actions_userActions__["b" /* updateProfile */])(profile));
        }
    };
};

/* harmony default export */ __webpack_exports__["a"] = (Object(__WEBPACK_IMPORTED_MODULE_1_react_redux__["connect"])(mapStateToProps, mapDispatchToProps)(TestPage));

/***/ }),

/***/ "./src/AppBundle/Resources/public/javascript/main/main.js":
/*!****************************************************************!*\
  !*** ./src/AppBundle/Resources/public/javascript/main/main.js ***!
  \****************************************************************/
/*! no exports provided */
/*! all exports used */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_react__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_react_dom__ = __webpack_require__(/*! react-dom */ "./node_modules/react-dom/index.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_react_dom___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_react_dom__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_react_redux__ = __webpack_require__(/*! react-redux */ "./node_modules/react-redux/es/index.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__store__ = __webpack_require__(/*! ./store */ "./src/AppBundle/Resources/public/javascript/main/store.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__router__ = __webpack_require__(/*! ./router */ "./src/AppBundle/Resources/public/javascript/main/router.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5_redux_i18n__ = __webpack_require__(/*! redux-i18n */ "./node_modules/redux-i18n/dist/index.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5_redux_i18n___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_5_redux_i18n__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__translations_translations__ = __webpack_require__(/*! ../translations/translations */ "./src/AppBundle/Resources/public/javascript/translations/translations.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7_react_table_react_table_css__ = __webpack_require__(/*! react-table/react-table.css */ "./node_modules/react-table/react-table.css");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7_react_table_react_table_css___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_7_react_table_react_table_css__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8_react_tagsinput_react_tagsinput_css__ = __webpack_require__(/*! react-tagsinput/react-tagsinput.css */ "./node_modules/react-tagsinput/react-tagsinput.css");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8_react_tagsinput_react_tagsinput_css___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_8_react_tagsinput_react_tagsinput_css__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9_react_datepicker_dist_react_datepicker_css__ = __webpack_require__(/*! react-datepicker/dist/react-datepicker.css */ "./node_modules/react-datepicker/dist/react-datepicker.css");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9_react_datepicker_dist_react_datepicker_css___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_9_react_datepicker_dist_react_datepicker_css__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_10_react_toggle_style_css__ = __webpack_require__(/*! react-toggle/style.css */ "./node_modules/react-toggle/style.css");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_10_react_toggle_style_css___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_10_react_toggle_style_css__);
/**
 * Created by JuanCruz on 4/1/2018.
 */









 // If using WebPack and style-loader.


// import 'react-select/dist/react-select.css';
__webpack_require__(/*! ../ca/ca.data */ "./src/AppBundle/Resources/public/javascript/ca/ca.data.js");
__webpack_require__(/*! ../ca/ca.api.content */ "./src/AppBundle/Resources/public/javascript/ca/ca.api.content.js");
__webpack_require__(/*! ../ca/ca.api */ "./src/AppBundle/Resources/public/javascript/ca/ca.api.js");
__webpack_require__(/*! ../ca/ca.utils */ "./src/AppBundle/Resources/public/javascript/ca/ca.utils.js");
__webpack_require__(/*! ../ca/ca.models */ "./src/AppBundle/Resources/public/javascript/ca/ca.models.js");

var homeWrapper = document.getElementById('home-wrapper');

__WEBPACK_IMPORTED_MODULE_1_react_dom___default.a.render(__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
    __WEBPACK_IMPORTED_MODULE_2_react_redux__["Provider"],
    { store: __WEBPACK_IMPORTED_MODULE_3__store__["a" /* default */] },
    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
        __WEBPACK_IMPORTED_MODULE_5_redux_i18n___default.a,
        { translations: __WEBPACK_IMPORTED_MODULE_6__translations_translations__["a" /* translations */] },
        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_4__router__["a" /* default */], homeWrapper.dataset)
    )
), homeWrapper);

/***/ }),

/***/ "./src/AppBundle/Resources/public/javascript/main/reducers/user.js":
/*!*************************************************************************!*\
  !*** ./src/AppBundle/Resources/public/javascript/main/reducers/user.js ***!
  \*************************************************************************/
/*! exports provided: userTypes, user */
/*! exports used: user, userTypes */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "b", function() { return userTypes; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return user; });
var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var userTypes = {
    LOGOUT: 'LOGOUT',
    LOGIN: 'LOGIN',
    PROFILE: 'PROFILE',
    LOAD_USER_DATA: 'LOAD_USER_DATA'
};

var defaultUser = {
    profile: "BUYER"

};

var user = function user() {
    var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : defaultUser;
    var action = arguments[1];


    switch (action.type) {
        case userTypes.LOGOUT:
            return Object.assign({}, state, defaultUser);
        case userTypes.LOGIN:
            return Object.assign({}, state, {
                email: action.email
            });
        case userTypes.PROFILE:
            return Object.assign({}, state, {
                profile: action.profile
            });
        case userTypes.LOAD_USER_DATA:
            return Object.assign({}, state, _extends({}, action.user));
        default:
            return state;
    }
};

/***/ }),

/***/ "./src/AppBundle/Resources/public/javascript/main/router.js":
/*!******************************************************************!*\
  !*** ./src/AppBundle/Resources/public/javascript/main/router.js ***!
  \******************************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_react__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__routes__ = __webpack_require__(/*! ./routes */ "./src/AppBundle/Resources/public/javascript/main/routes.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_prop_types__ = __webpack_require__(/*! prop-types */ "./node_modules/prop-types/index.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_prop_types___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2_prop_types__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_react_router_dom__ = __webpack_require__(/*! react-router-dom */ "./node_modules/react-router-dom/es/index.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_react_redux__ = __webpack_require__(/*! react-redux */ "./node_modules/react-redux/es/index.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__actions_userActions__ = __webpack_require__(/*! ./actions/userActions */ "./src/AppBundle/Resources/public/javascript/main/actions/userActions.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6_redux_i18n__ = __webpack_require__(/*! redux-i18n */ "./node_modules/redux-i18n/dist/index.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6_redux_i18n___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_6_redux_i18n__);
var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }










var fakeAuth = {
    isAuthenticated: false,
    authenticate: function authenticate(cb) {
        this.isAuthenticated = true;
        setTimeout(cb, 100); // fake async
    },
    signout: function signout(cb) {
        this.isAuthenticated = false;
        setTimeout(cb, 100);
    }
};

var PrivateRoute = function PrivateRoute(_ref) {
    var Component = _ref.component,
        updateByPath = _ref.updateByPath,
        rest = _objectWithoutProperties(_ref, ["component", "updateByPath"]);

    return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_3_react_router_dom__["Route"], _extends({}, rest, {
        render: function render(props) {
            return fakeAuth.isAuthenticated ? props.match.path === "/" ? __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_3_react_router_dom__["Redirect"], {
                to: {
                    pathname: "/marketplace",
                    state: { from: props.location }
                }
            }) : Component && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(Component, _extends({}, props, rest, { key: updateByPath ? props.location.pathname : props.location.search })) : __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_3_react_router_dom__["Redirect"], {
                to: {
                    pathname: "/landing",
                    state: { from: props.location }
                }
            });
        }
    }));
};

var PublicRoute = function PublicRoute(_ref2) {
    var Component = _ref2.component,
        rest = _objectWithoutProperties(_ref2, ["component"]);

    return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_3_react_router_dom__["Route"], _extends({}, rest, {
        render: function render(props) {
            if (!Component) return null;
            return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(Component, _extends({}, props, rest));
        }
    }));
};

var Login = function (_React$Component) {
    _inherits(Login, _React$Component);

    function Login() {
        var _ref3;

        var _temp, _this, _ret;

        _classCallCheck(this, Login);

        for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
            args[_key] = arguments[_key];
        }

        return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref3 = Login.__proto__ || Object.getPrototypeOf(Login)).call.apply(_ref3, [this].concat(args))), _this), _this.state = {
            redirectToReferrer: false
        }, _this.login = function () {
            fakeAuth.authenticate(function () {
                _this.setState({ redirectToReferrer: true });
            });
        }, _temp), _possibleConstructorReturn(_this, _ret);
    }

    _createClass(Login, [{
        key: "render",
        value: function render() {
            var _ref4 = this.props.location.state || { from: { pathname: "/" } },
                from = _ref4.from;

            var redirectToReferrer = this.state.redirectToReferrer;


            if (redirectToReferrer) {
                return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_3_react_router_dom__["Redirect"], { to: from });
            }

            return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                "div",
                null,
                __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                    "p",
                    null,
                    "You must log in to view the page at ",
                    from.pathname
                ),
                __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                    "a",
                    { href: "/login" },
                    "Log in"
                )
            );
        }
    }]);

    return Login;
}(__WEBPACK_IMPORTED_MODULE_0_react___default.a.Component);

var Logout = function (_React$Component2) {
    _inherits(Logout, _React$Component2);

    function Logout() {
        var _ref5;

        var _temp2, _this2, _ret2;

        _classCallCheck(this, Logout);

        for (var _len2 = arguments.length, args = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
            args[_key2] = arguments[_key2];
        }

        return _ret2 = (_temp2 = (_this2 = _possibleConstructorReturn(this, (_ref5 = Logout.__proto__ || Object.getPrototypeOf(Logout)).call.apply(_ref5, [this].concat(args))), _this2), _this2.logout = function () {
            fakeAuth.signout(function () {
                return history.push("/");
            });
        }, _temp2), _possibleConstructorReturn(_this2, _ret2);
    }

    _createClass(Logout, [{
        key: "render",
        value: function render() {
            return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                "div",
                null,
                __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                    "p",
                    null,
                    "Are you sure you want to sign out?"
                ),
                __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                    "button",
                    { onClick: this.logout },
                    "Yes, sign out"
                )
            );
        }
    }]);

    return Logout;
}(__WEBPACK_IMPORTED_MODULE_0_react___default.a.Component);

var AuthRouter = function (_React$Component3) {
    _inherits(AuthRouter, _React$Component3);

    function AuthRouter(props) {
        _classCallCheck(this, AuthRouter);

        var _this3 = _possibleConstructorReturn(this, (AuthRouter.__proto__ || Object.getPrototypeOf(AuthRouter)).call(this, props));

        if (props.loggedUser) fakeAuth.authenticate(function () {});

        _this3.state = {};
        return _this3;
    }

    _createClass(AuthRouter, [{
        key: "componentWillMount",
        value: function componentWillMount() {
            this.props.loadUserData();
            this.props.setLanguage("en");
        }
    }, {
        key: "render",
        value: function render() {
            var _this4 = this;

            var user = this.props.user;


            return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                __WEBPACK_IMPORTED_MODULE_3_react_router_dom__["BrowserRouter"],
                null,
                __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                    "div",
                    { className: "manager-container" },
                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_3_react_router_dom__["Route"], { path: "/landing", component: Login }),
                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_3_react_router_dom__["Route"], { path: "/logout", component: Logout }),
                    __WEBPACK_IMPORTED_MODULE_1__routes__["a" /* routes */].map(function (route, index) {
                        return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(PublicRoute, {
                            key: index,
                            path: route.path,
                            exact: route.exact,
                            component: route.header,
                            profile: user.profile
                        });
                    }),
                    __WEBPACK_IMPORTED_MODULE_1__routes__["a" /* routes */].map(function (route, index) {
                        return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(PrivateRoute, _extends({
                            key: index,
                            path: route.path,
                            exact: route.exact,
                            updateByPath: route.updateByPath,
                            component: route.main
                        }, _this4.props));
                    })
                )
            );
        }
    }]);

    return AuthRouter;
}(__WEBPACK_IMPORTED_MODULE_0_react___default.a.Component);

AuthRouter.contextTypes = {
    t: __WEBPACK_IMPORTED_MODULE_2_prop_types__["PropTypes"].func.isRequired
};

var mapStateToProps = function mapStateToProps(state) {
    return state;
};

var mapDispatchToProps = function mapDispatchToProps(dispatch) {
    return {
        login: function login(email) {
            return dispatch({
                type: 'LOGIN',
                email: email
            });
        },
        updateProfile: function updateProfile(profile) {
            return dispatch(Object(__WEBPACK_IMPORTED_MODULE_5__actions_userActions__["b" /* updateProfile */])(profile));
        },
        loadUserData: function loadUserData() {
            return dispatch(Object(__WEBPACK_IMPORTED_MODULE_5__actions_userActions__["a" /* loadUserData */])());
        },
        setLanguage: function setLanguage(lang) {
            return dispatch(Object(__WEBPACK_IMPORTED_MODULE_6_redux_i18n__["setLanguage"])(lang));
        }
    };
};

/* harmony default export */ __webpack_exports__["a"] = (Object(__WEBPACK_IMPORTED_MODULE_4_react_redux__["connect"])(mapStateToProps, mapDispatchToProps)(AuthRouter));

/***/ }),

/***/ "./src/AppBundle/Resources/public/javascript/main/routes.js":
/*!******************************************************************!*\
  !*** ./src/AppBundle/Resources/public/javascript/main/routes.js ***!
  \******************************************************************/
/*! exports provided: routes */
/*! exports used: routes */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return routes; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__manage_containers_Watchlist__ = __webpack_require__(/*! ../manage/containers/Watchlist */ "./src/AppBundle/Resources/public/javascript/manage/containers/Watchlist.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__manage_containers_ClosedDeals__ = __webpack_require__(/*! ../manage/containers/ClosedDeals */ "./src/AppBundle/Resources/public/javascript/manage/containers/ClosedDeals.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__manage_containers_PendingDeals__ = __webpack_require__(/*! ../manage/containers/PendingDeals */ "./src/AppBundle/Resources/public/javascript/manage/containers/PendingDeals.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__manage_containers_CommercialActivity__ = __webpack_require__(/*! ../manage/containers/CommercialActivity */ "./src/AppBundle/Resources/public/javascript/manage/containers/CommercialActivity.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__manage_containers_Messages__ = __webpack_require__(/*! ../manage/containers/Messages */ "./src/AppBundle/Resources/public/javascript/manage/containers/Messages.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__manage_containers_Settings__ = __webpack_require__(/*! ../manage/containers/Settings */ "./src/AppBundle/Resources/public/javascript/manage/containers/Settings.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__manage_containers_ManageListings__ = __webpack_require__(/*! ../manage/containers/ManageListings */ "./src/AppBundle/Resources/public/javascript/manage/containers/ManageListings.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__components_HeaderBar__ = __webpack_require__(/*! ./components/HeaderBar */ "./src/AppBundle/Resources/public/javascript/main/components/HeaderBar.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__buy_containers_Marketplace__ = __webpack_require__(/*! ../buy/containers/Marketplace */ "./src/AppBundle/Resources/public/javascript/buy/containers/Marketplace.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9__sell_components_SellForm__ = __webpack_require__(/*! ../sell/components/SellForm */ "./src/AppBundle/Resources/public/javascript/sell/components/SellForm.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_10__containers_TestPage__ = __webpack_require__(/*! ./containers/TestPage */ "./src/AppBundle/Resources/public/javascript/main/containers/TestPage.js");












var routes = [{
    path: "/",
    exact: true,
    main: __WEBPACK_IMPORTED_MODULE_8__buy_containers_Marketplace__["a" /* default */]
}, {
    path: "/marketplace",
    exact: true,
    header: __WEBPACK_IMPORTED_MODULE_7__components_HeaderBar__["a" /* default */],
    main: __WEBPACK_IMPORTED_MODULE_8__buy_containers_Marketplace__["a" /* default */]
}, {
    path: "/test",
    exact: true,
    header: __WEBPACK_IMPORTED_MODULE_7__components_HeaderBar__["a" /* default */],
    main: __WEBPACK_IMPORTED_MODULE_10__containers_TestPage__["a" /* default */]
}, {
    path: "/marketplace/filter/:filterName/:filterValue?",
    header: __WEBPACK_IMPORTED_MODULE_7__components_HeaderBar__["a" /* default */],
    main: __WEBPACK_IMPORTED_MODULE_8__buy_containers_Marketplace__["a" /* default */]
}, {
    path: "/contentlisting/:customId?/:step?",
    header: __WEBPACK_IMPORTED_MODULE_7__components_HeaderBar__["a" /* default */],
    main: __WEBPACK_IMPORTED_MODULE_9__sell_components_SellForm__["a" /* default */],
    updateByPath: true
}, {
    path: "/commercialactivity",
    header: __WEBPACK_IMPORTED_MODULE_7__components_HeaderBar__["a" /* default */],
    exact: true,
    main: __WEBPACK_IMPORTED_MODULE_3__manage_containers_CommercialActivity__["a" /* default */]
}, {
    path: "/commercialactivity/filter/:filterName/:filterValue?",
    header: __WEBPACK_IMPORTED_MODULE_7__components_HeaderBar__["a" /* default */],
    main: __WEBPACK_IMPORTED_MODULE_3__manage_containers_CommercialActivity__["a" /* default */],
    updateByPath: true
}, {
    path: "/listing/:customId/:tab?/:bundle?",
    header: __WEBPACK_IMPORTED_MODULE_7__components_HeaderBar__["a" /* default */],
    main: __WEBPACK_IMPORTED_MODULE_8__buy_containers_Marketplace__["a" /* default */]
}, {
    path: "/watchlist",
    header: __WEBPACK_IMPORTED_MODULE_7__components_HeaderBar__["a" /* default */],
    main: __WEBPACK_IMPORTED_MODULE_0__manage_containers_Watchlist__["a" /* default */]
}, {
    path: "/closeddeals",
    header: __WEBPACK_IMPORTED_MODULE_7__components_HeaderBar__["a" /* default */],
    main: __WEBPACK_IMPORTED_MODULE_1__manage_containers_ClosedDeals__["a" /* default */]
}, {
    path: "/settings/:filter?",
    header: __WEBPACK_IMPORTED_MODULE_7__components_HeaderBar__["a" /* default */],
    main: __WEBPACK_IMPORTED_MODULE_5__manage_containers_Settings__["a" /* default */],
    updateByPath: true
}, {
    path: "/messages/:customId?",
    header: __WEBPACK_IMPORTED_MODULE_7__components_HeaderBar__["a" /* default */],
    main: __WEBPACK_IMPORTED_MODULE_4__manage_containers_Messages__["a" /* default */],
    updateByPath: true
}, {
    path: "/managelistings",
    header: __WEBPACK_IMPORTED_MODULE_7__components_HeaderBar__["a" /* default */],
    main: __WEBPACK_IMPORTED_MODULE_6__manage_containers_ManageListings__["a" /* default */]
}, {
    path: "/bids/:tab?",
    header: __WEBPACK_IMPORTED_MODULE_7__components_HeaderBar__["a" /* default */],
    main: __WEBPACK_IMPORTED_MODULE_2__manage_containers_PendingDeals__["a" /* default */],
    updateByPath: true
}];

/***/ }),

/***/ "./src/AppBundle/Resources/public/javascript/main/store.js":
/*!*****************************************************************!*\
  !*** ./src/AppBundle/Resources/public/javascript/main/store.js ***!
  \*****************************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_react__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_redux__ = __webpack_require__(/*! redux */ "./node_modules/redux/es/index.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_redux_i18n__ = __webpack_require__(/*! redux-i18n */ "./node_modules/redux-i18n/dist/index.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_redux_i18n___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2_redux_i18n__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__sell_reducers_content__ = __webpack_require__(/*! ../sell/reducers/content */ "./src/AppBundle/Resources/public/javascript/sell/reducers/content.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__sell_reducers_selector__ = __webpack_require__(/*! ../sell/reducers/selector */ "./src/AppBundle/Resources/public/javascript/sell/reducers/selector.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__buy_reducers_filter__ = __webpack_require__(/*! ../buy/reducers/filter */ "./src/AppBundle/Resources/public/javascript/buy/reducers/filter.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__buy_reducers_marketplace__ = __webpack_require__(/*! ../buy/reducers/marketplace */ "./src/AppBundle/Resources/public/javascript/buy/reducers/marketplace.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__manage_reducers_manage__ = __webpack_require__(/*! ../manage/reducers/manage */ "./src/AppBundle/Resources/public/javascript/manage/reducers/manage.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__reducers_user__ = __webpack_require__(/*! ./reducers/user */ "./src/AppBundle/Resources/public/javascript/main/reducers/user.js");
/**
 * Created by JuanCruz on 4/1/2018.
 */













var reducers = Object(__WEBPACK_IMPORTED_MODULE_1_redux__["combineReducers"])({
    content: __WEBPACK_IMPORTED_MODULE_3__sell_reducers_content__["a" /* content */],
    selector: __WEBPACK_IMPORTED_MODULE_4__sell_reducers_selector__["a" /* selector */],
    marketplace: __WEBPACK_IMPORTED_MODULE_6__buy_reducers_marketplace__["a" /* marketplace */],
    filter: __WEBPACK_IMPORTED_MODULE_5__buy_reducers_filter__["a" /* filter */],
    manage: __WEBPACK_IMPORTED_MODULE_7__manage_reducers_manage__["a" /* manage */],
    user: __WEBPACK_IMPORTED_MODULE_8__reducers_user__["a" /* user */],
    i18nState: __WEBPACK_IMPORTED_MODULE_2_redux_i18n__["i18nState"]
});

/* harmony default export */ __webpack_exports__["a"] = (Object(__WEBPACK_IMPORTED_MODULE_1_redux__["createStore"])(reducers));

/***/ }),

/***/ "./src/AppBundle/Resources/public/javascript/main/styles/custom.js":
/*!*************************************************************************!*\
  !*** ./src/AppBundle/Resources/public/javascript/main/styles/custom.js ***!
  \*************************************************************************/
/*! exports provided: customStyles, SelectorModalStyle, GenericModalStyle */
/*! exports used: GenericModalStyle, SelectorModalStyle, customStyles */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "c", function() { return customStyles; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "b", function() { return SelectorModalStyle; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return GenericModalStyle; });
var customStyles = {
    content: {
        top: '50%',
        left: '50%',
        right: 'auto',
        bottom: 'auto',
        marginRight: '-50%',
        transform: 'translate(-50%, -50%)',
        backgroundColor: '#F4F6F9',
        border: 'none',
        borderRadius: 0,
        borderBottom: '4px solid #2AAAEC'
    },
    overlay: {
        zIndex: 100
    }
};

var SelectorModalStyle = {
    content: {
        top: '50%',
        left: '50%',
        right: 'auto',
        bottom: 'auto',
        marginRight: '-50%',
        transform: 'translate(-50%, -50%)',
        backgroundColor: '#F4F6F9',
        border: 'none',
        borderRadius: 0,
        borderBottom: '4px solid #2AAAEC',
        padding: "20px"
    },
    overlay: {
        zIndex: 100
    }
};

var GenericModalStyle = {
    content: {
        top: '50%',
        left: '50%',
        right: 'auto',
        bottom: 'auto',
        marginRight: '-50%',
        transform: 'translate(-50%, -50%)',
        backgroundColor: '#FFFFFF',
        border: 'none',
        borderRadius: 0,
        padding: "20px"
    },
    overlay: {
        zIndex: 100,
        backgroundColor: 'rgba(0, 0, 0, 0.6)'
    }
};

/***/ }),

/***/ "./src/AppBundle/Resources/public/javascript/manage/components/BoardListing.js":
/*!*************************************************************************************!*\
  !*** ./src/AppBundle/Resources/public/javascript/manage/components/BoardListing.js ***!
  \*************************************************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_react__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_moment_moment__ = __webpack_require__(/*! moment/moment */ "./node_modules/moment/moment.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_moment_moment___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_moment_moment__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__buy_components_ContentListingEventDetails__ = __webpack_require__(/*! ../../buy/components/ContentListingEventDetails */ "./src/AppBundle/Resources/public/javascript/buy/components/ContentListingEventDetails.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__main_actions_utils__ = __webpack_require__(/*! ../../main/actions/utils */ "./src/AppBundle/Resources/public/javascript/main/actions/utils.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__main_components_Icons__ = __webpack_require__(/*! ../../main/components/Icons */ "./src/AppBundle/Resources/public/javascript/main/components/Icons.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__sell_components_SuperRightDefinitions__ = __webpack_require__(/*! ../../sell/components/SuperRightDefinitions */ "./src/AppBundle/Resources/public/javascript/sell/components/SuperRightDefinitions.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6_prop_types__ = __webpack_require__(/*! prop-types */ "./node_modules/prop-types/index.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6_prop_types___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_6_prop_types__);
var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }









var BoardListing = function (_React$Component) {
    _inherits(BoardListing, _React$Component);

    function BoardListing(props) {
        _classCallCheck(this, BoardListing);

        var _this = _possibleConstructorReturn(this, (BoardListing.__proto__ || Object.getPrototypeOf(BoardListing)).call(this, props));

        _this.onSelect = function () {
            var _this$props = _this.props,
                onSelect = _this$props.onSelect,
                customId = _this$props.customId;


            if (onSelect) onSelect(customId);
        };

        _this.toggleOptions = function (e) {
            _this.setState({ showOptions: !_this.state.showOptions });
            e.stopPropagation();
        };

        _this.edit = function () {
            var _this$props2 = _this.props,
                customId = _this$props2.customId,
                step = _this$props2.step;

            var stepToShow = step + 1;
            Object(__WEBPACK_IMPORTED_MODULE_3__main_actions_utils__["e" /* goTo */])("contentlisting/" + customId + "/" + (step > 4 ? 'sign' : stepToShow));
        };

        _this.submit = function () {
            var customId = _this.props.customId;

            Object(__WEBPACK_IMPORTED_MODULE_3__main_actions_utils__["e" /* goTo */])("contentlisting/" + customId + "/sign");
        };

        _this.view = function () {
            var customId = _this.props.customId;

            Object(__WEBPACK_IMPORTED_MODULE_3__main_actions_utils__["e" /* goTo */])("listing/" + customId, true);
        };

        _this.hideOptions = function (e) {
            var defaultAction = _this.props.defaultAction;
            var showOptions = _this.state.showOptions;

            _this.setState({ showOptions: false });
            if (defaultAction && !showOptions) {
                if (defaultAction === "EDIT") {
                    _this.edit();
                }

                if (defaultAction === "VIEW") {
                    _this.view();
                }

                if (defaultAction === "SUBMIT") {
                    _this.submit();
                }
            }

            e.stopPropagation();
        };

        _this.state = {
            showOptions: false,
            showRemoveConfirm: false,
            showArchiveConfirm: false,
            showDeactivateConfirm: false
        };
        _this.clockIcon = assetsBaseDir + "app/images/clock.png";
        _this.exclamationIcon = assetsBaseDir + "app/images/exclamation_round.png";
        _this.playIcon = assetsBaseDir + "app/images/play.png";
        _this.bucketIcon = assetsBaseDir + "app/images/bucket_blue.png";
        _this.editIcon = assetsBaseDir + "app/images/edit.png";
        _this.duplicateIcon = assetsBaseDir + "app/images/duplicate.png";
        _this.viewIcon = assetsBaseDir + "app/images/search.png";
        _this.submitIcon = assetsBaseDir + "app/images/submit.png";
        _this.dotsIcon = assetsBaseDir + "app/images/dots.png";
        _this.deactivateIcon = assetsBaseDir + "app/images/close_red.png";
        return _this;
    }

    _createClass(BoardListing, [{
        key: "render",
        value: function render() {
            var _this2 = this;

            var _props = this.props,
                PROGRAM_NAME = _props.PROGRAM_NAME,
                name = _props.name,
                customId = _props.customId,
                expiresAt = _props.expiresAt,
                salesPackages = _props.salesPackages,
                rightsPackage = _props.rightsPackage,
                tournament = _props.tournament,
                seasons = _props.seasons,
                className = _props.className,
                showEdit = _props.showEdit,
                showRemove = _props.showRemove,
                showArchive = _props.showArchive,
                showSubmit = _props.showSubmit,
                showDuplicate = _props.showDuplicate,
                showDeactivate = _props.showDeactivate,
                showView = _props.showView,
                onRemove = _props.onRemove,
                onArchive = _props.onArchive,
                onDuplicate = _props.onDuplicate,
                onDeactivate = _props.onDeactivate,
                lastAction = _props.lastAction,
                lastActionDate = _props.lastActionDate,
                lastActionUser = _props.lastActionUser,
                owner = _props.owner,
                status = _props.status,
                hasActivity = _props.hasActivity,
                hasPendingBids = _props.hasPendingBids,
                onSubmit = _props.onSubmit,
                style = _props.style;
            var _state = this.state,
                showOptions = _state.showOptions,
                showRemoveConfirm = _state.showRemoveConfirm,
                showDeactivateConfirm = _state.showDeactivateConfirm,
                showArchiveConfirm = _state.showArchiveConfirm,
                showStatusInfo = _state.showStatusInfo;


            return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                "div",
                { className: className, style: style, onClick: this.hideOptions },
                showOptions && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                    "div",
                    { className: "options-tooltip" },
                    showSubmit && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        "div",
                        { className: "option", onClick: this.submit },
                        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement("img", { src: this.submitIcon }),
                        " ",
                        this.context.t("Submit")
                    ),
                    showEdit && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        "div",
                        { className: "option", onClick: this.edit },
                        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement("img", { src: this.editIcon }),
                        " ",
                        this.context.t("Edit")
                    ),
                    showDuplicate && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        "div",
                        { className: "option", onClick: function onClick() {
                                _this2.setState({ showOptions: false });
                                onDuplicate(customId);
                            } },
                        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement("img", { src: this.duplicateIcon }),
                        this.context.t("Duplicate")
                    ),
                    showView && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        "div",
                        { className: "option", onClick: this.view },
                        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement("img", { src: this.viewIcon }),
                        this.context.t("View")
                    ),
                    showRemove && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        "div",
                        { className: "option", onClick: function onClick() {
                                _this2.setState({ showRemoveConfirm: true });
                            } },
                        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement("img", { src: this.bucketIcon }),
                        this.context.t("MANAGE_LISTINGS_REMOVE_BUTTON_CONFIRM")
                    ),
                    showArchive && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        "div",
                        { className: "option", onClick: function onClick() {
                                _this2.setState({ showArchiveConfirm: true });
                            } },
                        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement("img", { src: this.bucketIcon }),
                        this.context.t("MANAGE_LISTINGS_ARCHIVE_BUTTON_CONFIRM")
                    ),
                    showDeactivate && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        "div",
                        { className: "option", onClick: function onClick() {
                                _this2.setState({ showDeactivateConfirm: true });
                            } },
                        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement("img", { src: this.deactivateIcon, style: { width: 16 } }),
                        this.context.t("MANAGE_LISTINGS_DEACTIVATE_BUTTON_CONFIRM")
                    ),
                    lastAction && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        "div",
                        { className: "last-action" },
                        this.context.t("MANAGE_LISTINGS_LAST_ACTION"),
                        lastAction.description,
                        " ",
                        lastActionUser && "by " + lastActionUser.firstName + " " + lastActionUser.lastName,
                        " ",
                        lastActionDate && "on " + __WEBPACK_IMPORTED_MODULE_1_moment_moment___default()(lastActionDate).format('HH:mm DD/MM/YYYY')
                    ),
                    owner && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        "div",
                        { className: "last-action" },
                        this.context.t("MANAGE_LISTINGS_LISTING_OWNER"),
                        owner.firstName + " " + owner.lastName
                    )
                ),
                showDeactivateConfirm && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                    "div",
                    { className: "confirmation-tooltip" },
                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        "div",
                        { className: "confirmation-text" },
                        this.context.t("MANAGE_LISTINGS_DEACTIVATE_CONFIRMATION")
                    ),
                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        "button",
                        { className: "button button-confirm", onClick: function onClick(e) {
                                _this2.setState({ showDeactivateConfirm: false });
                                onDeactivate();
                                e.stopPropagation();
                            } },
                        this.context.t("MANAGE_LISTINGS_DEACTIVATE_BUTTON_CONFIRM")
                    ),
                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        "button",
                        { className: "button", onClick: function onClick(e) {
                                _this2.setState({ showDeactivateConfirm: false });
                                e.stopPropagation();
                            } },
                        this.context.t("MANAGE_LISTINGS_DEACTIVATE_BUTTON_CANCEL")
                    )
                ),
                showRemoveConfirm && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                    "div",
                    { className: "confirmation-tooltip" },
                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        "div",
                        { className: "confirmation-text" },
                        this.context.t("MANAGE_LISTINGS_REMOVE_CONFIRMATION")
                    ),
                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        "button",
                        { className: "button button-confirm", onClick: function onClick(e) {
                                _this2.setState({ showRemoveConfirm: false });
                                onRemove();
                                e.stopPropagation();
                            } },
                        this.context.t("MANAGE_LISTINGS_REMOVE_BUTTON_CONFIRM")
                    ),
                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        "button",
                        { className: "button", onClick: function onClick(e) {
                                _this2.setState({ showRemoveConfirm: false });
                                e.stopPropagation();
                            } },
                        this.context.t("MANAGE_LISTINGS_REMOVE_BUTTON_CANCEL")
                    )
                ),
                showArchiveConfirm && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                    "div",
                    { className: "confirmation-tooltip" },
                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        "div",
                        { className: "confirmation-text" },
                        this.context.t("MANAGE_LISTINGS_ARCHIVE_CONFIRMATION")
                    ),
                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        "button",
                        { className: "button button-confirm", onClick: function onClick(e) {
                                _this2.setState({ showArchiveConfirm: false });
                                onArchive();
                                e.stopPropagation();
                            } },
                        this.context.t("MANAGE_LISTINGS_ARCHIVE_BUTTON_CONFIRM")
                    ),
                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        "button",
                        { className: "button", onClick: function onClick(e) {
                                _this2.setState({ showArchiveConfirm: false });
                                e.stopPropagation();
                            } },
                        this.context.t("MANAGE_LISTINGS_ARCHIVE_BUTTON_CANCEL")
                    )
                ),
                showStatusInfo && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                    "div",
                    { className: "status-tooltip" },
                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        "div",
                        { className: "option" },
                        status.name === 'PENDING' && "Listing under review. Not visible in the marketplace yet.",
                        status.name === 'INACTIVE' && "Listing is deactivated.",
                        status.name === 'REJECTED' && "Listing rejected. Please edit or contact support.",
                        status.name === 'EXPIRED' && "This listing has expired.",
                        status.name === 'SOLD_OUT' && "All sales bundle of this listing were sold.",
                        hasPendingBids && "There are open bids on this listing. You can view the bid via the Commercial Activity tab. Until the bid is processed, the edit, decline and remove functionality will be unavailable"
                    )
                ),
                (status.name !== 'DRAFT' && status.name !== 'EDITED' || hasPendingBids) && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                    "div",
                    {
                        className: "status-icon",
                        onMouseOver: function onMouseOver() {
                            _this2.setState({ showStatusInfo: true });
                        },
                        onMouseLeave: function onMouseLeave() {
                            _this2.setState({ showStatusInfo: false });
                        } },
                    status.name === 'PENDING' && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement("img", { src: __WEBPACK_IMPORTED_MODULE_4__main_components_Icons__["h" /* clockRoundIcon */] }),
                    status.name === 'INACTIVE' && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement("img", { src: __WEBPACK_IMPORTED_MODULE_4__main_components_Icons__["u" /* playIcon */] }),
                    status.name === 'REJECTED' && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement("img", { src: __WEBPACK_IMPORTED_MODULE_4__main_components_Icons__["m" /* exclamationRoundIcon */] }),
                    status.name === 'EXPIRED' && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement("img", { src: __WEBPACK_IMPORTED_MODULE_4__main_components_Icons__["n" /* expiredIcon */] }),
                    status.name === 'SOLD_OUT' && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement("img", { src: __WEBPACK_IMPORTED_MODULE_4__main_components_Icons__["x" /* soldIcon */] }),
                    hasPendingBids && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement("img", { src: __WEBPACK_IMPORTED_MODULE_4__main_components_Icons__["m" /* exclamationRoundIcon */] })
                ),
                __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                    "div",
                    { className: "menu-icon", onClick: this.toggleOptions },
                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement("img", { src: this.dotsIcon })
                ),
                __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                    "div",
                    { className: "name", title: name },
                    name
                ),
                __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                    "div",
                    { className: "tournament" },
                    tournament && tournament.length === 1 && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        "div",
                        { className: "item" },
                        tournament[0].name
                    ),
                    tournament && tournament.length === 0 && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        "div",
                        { className: "item" },
                        this.context.t("LISTING_DETAILS_GENERAL_CONTENT")
                    ),
                    seasons && seasons.length > 1 && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        "div",
                        { className: "item" },
                        this.context.t("MANAGE_LISTINGS_MULTIPLE_SEASONS")
                    ),
                    seasons && seasons.length === 1 && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        "div",
                        { className: "item" },
                        this.context.t("MANAGE_LISTINGS_SEASON"),
                        seasons[0].year
                    )
                ),
                __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                    "div",
                    { className: "rights" },
                    rightsPackage && rightsPackage.map(function (rp, i, l) {
                        return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                            "span",
                            { key: "rp-" + i },
                            !rp.exclusive && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement("img", { src: __WEBPACK_IMPORTED_MODULE_4__main_components_Icons__["d" /* blueCheckIcon */] }),
                            rp.exclusive && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement("img", { src: __WEBPACK_IMPORTED_MODULE_4__main_components_Icons__["B" /* yellowCheckIcon */] }),
                            __WEBPACK_IMPORTED_MODULE_5__sell_components_SuperRightDefinitions__["a" /* SuperRightBoardLabels */][rp.shortLabel],
                            rp.shortLabel === "PR" && PROGRAM_NAME && _this2.context.t("Program: ") + PROGRAM_NAME
                        );
                    })
                ),
                __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                    "div",
                    { className: "expiry" },
                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        "div",
                        null,
                        salesPackages.length,
                        " sales bundle",
                        salesPackages.length > 1 && "s"
                    ),
                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        "div",
                        null,
                        this.context.t("Expiry:"),
                        " ",
                        expiresAt ? __WEBPACK_IMPORTED_MODULE_1_moment_moment___default()(expiresAt).format('DD/MM/YYYY') : 'Not set'
                    )
                )
            );
        }
    }]);

    return BoardListing;
}(__WEBPACK_IMPORTED_MODULE_0_react___default.a.Component);

BoardListing.contextTypes = {
    t: __WEBPACK_IMPORTED_MODULE_6_prop_types__["PropTypes"].func.isRequired
};
/* harmony default export */ __webpack_exports__["a"] = (BoardListing);

/***/ }),

/***/ "./src/AppBundle/Resources/public/javascript/manage/containers/ClosedDeals.js":
/*!************************************************************************************!*\
  !*** ./src/AppBundle/Resources/public/javascript/manage/containers/ClosedDeals.js ***!
  \************************************************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_react__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_react_redux__ = __webpack_require__(/*! react-redux */ "./node_modules/react-redux/es/index.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_react_table__ = __webpack_require__(/*! react-table */ "./node_modules/react-table/es/index.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__main_components_ContentListing__ = __webpack_require__(/*! ../../main/components/ContentListing */ "./src/AppBundle/Resources/public/javascript/main/components/ContentListing.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__main_components_SendMessage__ = __webpack_require__(/*! ../../main/components/SendMessage */ "./src/AppBundle/Resources/public/javascript/main/components/SendMessage.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__main_actions_utils__ = __webpack_require__(/*! ../../main/actions/utils */ "./src/AppBundle/Resources/public/javascript/main/actions/utils.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6_moment_moment__ = __webpack_require__(/*! moment/moment */ "./node_modules/moment/moment.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6_moment_moment___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_6_moment_moment__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7_react_tooltip__ = __webpack_require__(/*! react-tooltip */ "./node_modules/react-tooltip/dist/index.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7_react_tooltip___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_7_react_tooltip__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8_prop_types__ = __webpack_require__(/*! prop-types */ "./node_modules/prop-types/index.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8_prop_types___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_8_prop_types__);
var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }











var rightImageStyle = {
    width: 17,
    height: 17
};

var ClosedDeals = function (_React$Component) {
    _inherits(ClosedDeals, _React$Component);

    function ClosedDeals(props) {
        _classCallCheck(this, ClosedDeals);

        var _this2 = _possibleConstructorReturn(this, (ClosedDeals.__proto__ || Object.getPrototypeOf(ClosedDeals)).call(this, props));

        _this2.selectListing = function (id) {
            Object(__WEBPACK_IMPORTED_MODULE_5__main_actions_utils__["e" /* goTo */])("listing/" + id);
        };

        _this2.state = {
            loading: false,
            bids: []
        };
        _this2.cancelIcon = assetsBaseDir + "app/images/cancel.png";
        _this2.checkIcon = assetsBaseDir + "app/images/blue_check.png";
        _this2.docIcon = assetsBaseDir + "app/images/doc.png";
        _this2.blueEnvelopeIcon = assetsBaseDir + "app/images/envelope_2.png";
        return _this2;
    }

    _createClass(ClosedDeals, [{
        key: "componentDidMount",
        value: function componentDidMount() {
            var _this = this;
            this.setState({ loading: true });
            ContentArena.ContentApi.getClosedDeals().done(function (bids) {
                _this.setState({ bids: bids, loading: false });
            });
        }
    }, {
        key: "render",
        value: function render() {
            var _this3 = this;

            var _state = this.state,
                loading = _state.loading,
                bids = _state.bids;


            return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                "div",
                { style: {
                        display: 'flex',
                        flexDirection: 'column',
                        flex: 1
                    } },
                bids.length > 0 && bids.map(function (b, i) {
                    return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_4__main_components_SendMessage__["a" /* default */], { key: i,
                        ref: "messagePopup" + b.id,
                        listingId: b.content.id,
                        recipient: b.content.company });
                }),
                bids.length > 0 && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                    "div",
                    null,
                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_2_react_table__["default"], {
                        className: "ca-table",
                        defaultPageSize: 30,
                        showPageSizeOptions: false,
                        showPagination: false,
                        onPageChange: this.onPageChange,
                        minRows: 0,
                        resizable: false,
                        data: bids,
                        select: this.props.select,
                        columns: [{
                            Header: 'Deal ID',
                            headerClassName: 'table-header',
                            className: 'table-header table-header-left',
                            accessor: 'customId',
                            Cell: function Cell(props) {
                                return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                    "div",
                                    null,
                                    "#" + props.value
                                );
                            }
                        }, {
                            Header: function Header() {
                                return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                    "span",
                                    null,
                                    _this3.context.t("Listing name"),
                                    " ",
                                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement("i", { className: "fa fa-sort" })
                                );
                            },
                            headerClassName: 'table-header-big',
                            className: 'table-header-big sorting',
                            id: 'name',
                            accessor: function accessor(d) {
                                return {
                                    name: d.content.name,
                                    customId: d.content.customId
                                };
                            },
                            Cell: function Cell(props) {
                                return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                    "div",
                                    null,
                                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                        "a",
                                        { href: "listing/" + props.value.customId },
                                        Object(__WEBPACK_IMPORTED_MODULE_5__main_actions_utils__["g" /* limitText */])(props.value.name)
                                    )
                                );
                            }
                        }, {
                            accessor: 'content.company.legalName', // Required because our accessor is not a string
                            Header: function Header() {
                                return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                    "span",
                                    null,
                                    _this3.context.t("Seller"),
                                    " ",
                                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement("i", { className: "fa fa-sort" })
                                );
                            },
                            headerClassName: 'table-header-big',
                            className: 'table-header-big'
                        }, {
                            Header: function Header() {
                                return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                    "span",
                                    { "data-tip": "Live transmission" },
                                    "LT"
                                );
                            },
                            //accessor: 'soldListing.rightsPackage',
                            accessor: function accessor(d) {
                                return d.soldListing ? d.soldListing.rightsPackage : d.content.rightsPackage;
                            },
                            id: 'LT',
                            headerClassName: 'table-header-small',
                            className: 'table-header-small',
                            Cell: function Cell(props) {
                                return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                    "div",
                                    {
                                        className: "blue" },
                                    props.value.map(function (r) {
                                        return r.shortLabel;
                                    }).indexOf("LT") !== -1 && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement("img", { style: rightImageStyle, src: _this3.checkIcon })
                                );
                            }
                        }, {
                            Header: function Header() {
                                return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                    "span",
                                    { "data-tip": "Live betting" },
                                    "LB"
                                );
                            },
                            accessor: function accessor(d) {
                                return d.soldListing ? d.soldListing.rightsPackage : d.content.rightsPackage;
                            },
                            id: 'LB',
                            headerClassName: 'table-header-small',
                            className: 'table-header-small',
                            Cell: function Cell(props) {
                                return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                    "div",
                                    {
                                        className: "blue" },
                                    props.value.map(function (r) {
                                        return r.shortLabel;
                                    }).indexOf("LB") !== -1 && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement("img", { style: rightImageStyle, src: _this3.checkIcon })
                                );
                            }
                        }, {
                            Header: function Header() {
                                return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                    "span",
                                    { "data-tip": "Delayed & Archive" },
                                    "DT"
                                );
                            },
                            accessor: function accessor(d) {
                                return d.soldListing ? d.soldListing.rightsPackage : d.content.rightsPackage;
                            },
                            id: 'DT',
                            headerClassName: 'table-header-small',
                            className: 'table-header-small',
                            Cell: function Cell(props) {
                                return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                    "div",
                                    {
                                        className: "blue" },
                                    props.value.map(function (r) {
                                        return r.shortLabel;
                                    }).indexOf("DT") !== -1 && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement("img", { style: rightImageStyle, src: _this3.checkIcon })
                                );
                            }
                        }, {
                            Header: function Header() {
                                return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                    "span",
                                    { "data-tip": "Highlights" },
                                    "HL"
                                );
                            },
                            accessor: function accessor(d) {
                                return d.soldListing ? d.soldListing.rightsPackage : d.content.rightsPackage;
                            },
                            id: 'HL',
                            headerClassName: 'table-header-small',
                            className: 'table-header-small',
                            Cell: function Cell(props) {
                                return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                    "div",
                                    {
                                        className: "blue" },
                                    props.value.map(function (r) {
                                        return r.shortLabel;
                                    }).indexOf("HL") !== -1 && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement("img", { style: rightImageStyle, src: _this3.checkIcon })
                                );
                            }
                        }, {
                            Header: function Header() {
                                return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                    "span",
                                    { "data-tip": "News access" },
                                    "NA"
                                );
                            },
                            accessor: function accessor(d) {
                                return d.soldListing ? d.soldListing.rightsPackage : d.content.rightsPackage;
                            },
                            id: 'NA',
                            headerClassName: 'table-header-small',
                            className: 'table-header-small',
                            Cell: function Cell(props) {
                                return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                    "div",
                                    {
                                        className: "blue" },
                                    props.value.map(function (r) {
                                        return r.shortLabel;
                                    }).indexOf("NA") !== -1 && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement("img", { style: rightImageStyle, src: _this3.checkIcon })
                                );
                            }
                        }, {
                            Header: function Header() {
                                return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                    "span",
                                    { "data-tip": "Program" },
                                    "PR"
                                );
                            },
                            accessor: function accessor(d) {
                                return d.soldListing ? d.soldListing.rightsPackage : d.content.rightsPackage;
                            },
                            id: 'PR',
                            headerClassName: 'table-header-small',
                            className: 'table-header-small',
                            Cell: function Cell(props) {
                                return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                    "div",
                                    {
                                        className: "blue" },
                                    props.value.map(function (r) {
                                        return r.shortLabel;
                                    }).indexOf("PR") !== -1 && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement("img", { style: rightImageStyle, src: _this3.checkIcon })
                                );
                            }
                        }, {
                            Header: function Header() {
                                return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                    "span",
                                    null,
                                    _this3.context.t("Territories"),
                                    " ",
                                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement("i", { className: "fa fa-sort" })
                                );
                            },
                            headerClassName: 'table-header',
                            className: 'table-header',
                            id: "territories",
                            accessor: function accessor(d) {
                                return {
                                    size: d.salesPackage.territories.length,
                                    territories: d.salesPackage.territories,
                                    excludedCountries: d.salesPackage.excludedCountries,
                                    worldwide: d.salesPackage.territoriesMethod === "WORLDWIDE" && d.salesPackage.bundleMethod === "SELL_AS_BUNDLE",
                                    excluding: d.salesPackage.territoriesMethod === "WORLDWIDE_EXCLUDING" && d.salesPackage.bundleMethod === "SELL_AS_BUNDLE" && d.salesPackage.excludedCountries.length === 1
                                };
                            },
                            Cell: function Cell(props) {
                                var _props$value = props.value,
                                    size = _props$value.size,
                                    territories = _props$value.territories,
                                    worldwide = _props$value.worldwide,
                                    excluding = _props$value.excluding,
                                    excludedCountries = _props$value.excludedCountries;


                                return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                    "div",
                                    { className: "blue" },
                                    !worldwide && !excluding && size > 1 && size + " territories",
                                    !worldwide && !excluding && size === 1 && territories[0].name,
                                    excluding && "Worldwide excluding " + excludedCountries[0].name,
                                    worldwide && _this3.context.t("Worldwide")
                                );
                            }
                        }, {
                            Header: function Header() {
                                return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                    "span",
                                    null,
                                    _this3.context.t("Price"),
                                    " ",
                                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement("i", { className: "fa fa-sort" })
                                );
                            },
                            headerClassName: 'table-header',
                            className: 'table-header',
                            id: "price",
                            accessor: function accessor(d) {
                                return { fee: d.totalFee, currency: d.salesPackage.currency.code };
                            },
                            Cell: function Cell(props) {
                                return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                    "div",
                                    { className: "blue" },
                                    parseFloat(props.value.fee).toLocaleString() + " " + Object(__WEBPACK_IMPORTED_MODULE_5__main_actions_utils__["b" /* getCurrencySymbol */])(props.value.currency)
                                );
                            }
                        }, {
                            Header: function Header() {
                                return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                    "span",
                                    null,
                                    _this3.context.t("Date of sale"),
                                    " ",
                                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement("i", { className: "fa fa-sort" })
                                );
                            },
                            headerClassName: 'table-header',
                            className: 'table-header',
                            accessor: 'createdAt',
                            Cell: function Cell(props) {
                                return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                    "div",
                                    null,
                                    __WEBPACK_IMPORTED_MODULE_6_moment_moment___default()(props.value).format('DD/MM/YYYY')
                                );
                            }

                        }, {
                            Header: function Header() {
                                return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                    "span",
                                    null,
                                    _this3.context.t("Buyer name"),
                                    " ",
                                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement("i", { className: "fa fa-sort" })
                                );
                            },
                            headerClassName: 'table-header-big',
                            className: 'table-header-big',
                            accessor: 'buyerUser',
                            Cell: function Cell(props) {
                                return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                    "div",
                                    null,
                                    props.value.firstName + " " + props.value.lastName
                                );
                            }

                        }, {
                            headerClassName: 'table-header',
                            className: 'table-header',
                            Header: this.context.t("Actions"), // Custom header components!
                            id: 'header',
                            accessor: function accessor(d) {
                                return {
                                    id: d.id,
                                    customId: d.customId
                                };
                            },
                            Cell: function Cell(props) {
                                return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                    "div",
                                    { className: "" },
                                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement("img", { style: { margin: '0 10px', cursor: 'pointer' }, onClick: function onClick() {
                                            Object(__WEBPACK_IMPORTED_MODULE_5__main_actions_utils__["j" /* viewLicenseBid */])(props.value.customId);
                                        }, src: _this3.docIcon }),
                                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement("img", { style: { margin: '0 10px', cursor: 'pointer' }, onClick: function onClick() {
                                            window.location.href = "/redirect-integration/messages-by-bid/" + props.value.id;
                                        }, src: _this3.blueEnvelopeIcon })
                                );
                            }
                        }]
                    }),
                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_7_react_tooltip___default.a, { place: "top", type: "dark", effect: "solid" })
                ),
                bids.length === 0 && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                    "div",
                    { className: "manager-content-message" },
                    loading && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        "div",
                        { className: "big-spinner" },
                        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement("i", { className: "fa fa-cog fa-spin" })
                    ),
                    !loading && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        "div",
                        { className: "big-spinner", style: {
                                fontSize: 30
                            } },
                        this.context.t("CLOSED_DEALS_EMPTY_MESSAGE")
                    )
                )
            );
        }
    }]);

    return ClosedDeals;
}(__WEBPACK_IMPORTED_MODULE_0_react___default.a.Component);

ClosedDeals.contextTypes = {
    t: __WEBPACK_IMPORTED_MODULE_8_prop_types__["PropTypes"].func.isRequired
};

var mapStateToProps = function mapStateToProps(state, ownProps) {
    return state;
};

var mapDispatchToProps = function mapDispatchToProps(dispatch) {
    return {};
};

/* harmony default export */ __webpack_exports__["a"] = (Object(__WEBPACK_IMPORTED_MODULE_1_react_redux__["connect"])(mapStateToProps, mapDispatchToProps)(ClosedDeals));

/***/ }),

/***/ "./src/AppBundle/Resources/public/javascript/manage/containers/CommercialActivity.js":
/*!*******************************************************************************************!*\
  !*** ./src/AppBundle/Resources/public/javascript/manage/containers/CommercialActivity.js ***!
  \*******************************************************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_react__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_react_redux__ = __webpack_require__(/*! react-redux */ "./node_modules/react-redux/es/index.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_react_select__ = __webpack_require__(/*! react-select */ "./node_modules/react-select/dist/react-select.es.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__main_components_ContentListingCommercialActivity__ = __webpack_require__(/*! ../../main/components/ContentListingCommercialActivity */ "./src/AppBundle/Resources/public/javascript/main/components/ContentListingCommercialActivity.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__main_actions_utils__ = __webpack_require__(/*! ../../main/actions/utils */ "./src/AppBundle/Resources/public/javascript/main/actions/utils.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5_prop_types__ = __webpack_require__(/*! prop-types */ "./node_modules/prop-types/index.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5_prop_types___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_5_prop_types__);
var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }








var CommercialActivity = function (_React$Component) {
    _inherits(CommercialActivity, _React$Component);

    function CommercialActivity(props) {
        _classCallCheck(this, CommercialActivity);

        var _this2 = _possibleConstructorReturn(this, (CommercialActivity.__proto__ || Object.getPrototypeOf(CommercialActivity)).call(this, props));

        _this2.deleteBid = function (id) {
            ContentArena.ContentApi.removeBid({ id: id }).done(function (r) {
                _this2.update();
            });
        };

        _this2.update = function () {
            var _this = _this2;
            _this2.setState({ loading: true });

            ContentArena.ContentApi.getAllDeals().done(function (listings) {
                listings.forEach(function (l) {
                    return ContentArena.Utils.contentParserFromServer(l);
                });
                _this.setState({ listings: listings, loading: false });
            });
        };

        _this2.filtered = function () {
            var _this2$state = _this2.state,
                filter = _this2$state.filter,
                selectedListings = _this2$state.selectedListings;


            var listings = _this2.state.listings || [];

            if (selectedListings.length > 0) {
                return _this2.state.listings.filter(function (b) {
                    return selectedListings.indexOf(b.customId) !== -1;
                });
            }

            switch (filter) {
                case "closeddeals":
                    return listings.filter(function (b) {
                        return b.salesPackages.filter(function (sp) {
                            return sp.bids.filter(function (b) {
                                return b.status.name === "APPROVED";
                            }).length > 0;
                        }).length > 0;
                    });
                case "openbids":
                    return listings.filter(function (b) {
                        return b.salesPackages.filter(function (sp) {
                            return sp.bids.filter(function (b) {
                                return b.status.name === "PENDING";
                            }).length > 0;
                        }).length > 0;
                    });
                case "withactivity":
                    return listings.filter(function (b) {
                        return b.salesPackages.filter(function (sp) {
                            return sp.bids.length > 0;
                        }).length > 0;
                    });
                case "ALL":
                    return listings;
                default:
                    return listings;

            }
        };

        _this2.remove = function (customId) {
            _this2.setState({
                listings: _this2.state.listings.filter(function (l) {
                    return l.customId !== customId;
                })
            });
        };

        _this2.state = {
            loading: false,
            listings: [],
            selectedListings: [],
            filter: 'ALL',
            bundlesOpen: false,
            bidsOpen: false

        };
        _this2.bulletIcon = assetsBaseDir + "app/images/bullet.png";
        _this2.activeBulletIcon = assetsBaseDir + "app/images/active_bullet.png";

        return _this2;
    }

    _createClass(CommercialActivity, [{
        key: 'componentDidMount',
        value: function componentDidMount() {
            var match = this.props.match;


            var params = void 0,
                filter = void 0,
                listings = [];

            if (match && match.params && match.params.filterName) {

                params = match.params.filterName.split("&");

                if (params.length > 1) {
                    listings.push(params[0]);
                    filter = params[1];
                } else {
                    if (params[0].length === 5) {
                        listings.push(params[0]);
                        filter = "ALL";
                    } else {
                        filter = params[0];
                    }
                }

                this.setState({
                    filter: filter,
                    selectedListings: listings
                });
            }

            this.update();
        }
    }, {
        key: 'render',
        value: function render() {
            var _this3 = this;

            var _state = this.state,
                loading = _state.loading,
                filter = _state.filter,
                selectedListings = _state.selectedListings;
            var history = this.props.history;

            var listings = this.filtered();
            var allListings = this.state.listings;
            return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                'div',
                { style: { height: '100%' } },
                __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                    'div',
                    { className: "manager-filter-container" },
                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        'div',
                        { className: "listing-filter" },
                        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_2_react_select__["default"], {
                            name: 'form-field-name',
                            placeholder: 'All listings',
                            isClearable: true,
                            onChange: function onChange(selected) {
                                var filterString = filter !== "ALL" ? selected ? "&" + filter : filter : "";
                                var idString = selected ? selected.value : "";
                                var prefix = !selected && filter === "ALL" ? "" : "/filter/";
                                history.push("/commercialactivity" + prefix + idString + filterString);
                            },
                            multi: false,
                            value: selectedListings[0],
                            options: allListings.map(function (b) {
                                return { value: b.customId, label: b.name };
                            })
                        })
                    ),
                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        'div',
                        { className: "status-filter" },
                        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                            'div',
                            { className: "status-filter-item",
                                onClick: function onClick() {
                                    var filterString = selectedListings.length > 0 ? "/filter/" + selectedListings[0] : "";
                                    history.push("/commercialactivity" + filterString);
                                } },
                            filter === "ALL" && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('img', { src: this.activeBulletIcon }),
                            filter !== "ALL" && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('img', { src: this.bulletIcon }),
                            this.context.t("COMMERCIAL_ACTIVITY_FILTER_ALL")
                        ),
                        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                            'div',
                            { className: "status-filter-item",
                                onClick: function onClick() {
                                    var filterString = selectedListings.length > 0 ? selectedListings[0] + "&" : "";
                                    history.push("/commercialactivity/filter/" + filterString + "withactivity");
                                } },
                            filter === "withactivity" && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('img', { src: this.activeBulletIcon }),
                            filter !== "withactivity" && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('img', { src: this.bulletIcon }),
                            this.context.t("COMMERCIAL_ACTIVITY_FILTER_WITH_ACTIVITY")
                        ),
                        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                            'div',
                            { className: "status-filter-item",
                                onClick: function onClick() {
                                    var filterString = selectedListings.length > 0 ? selectedListings[0] + "&" : "";
                                    history.push("/commercialactivity/filter/" + filterString + "openbids");
                                } },
                            filter === "openbids" && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('img', { src: this.activeBulletIcon }),
                            filter !== "openbids" && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('img', { src: this.bulletIcon }),
                            this.context.t("COMMERCIAL_ACTIVITY_FILTER_OPEN_BIDS")
                        ),
                        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                            'div',
                            { className: "status-filter-item",
                                onClick: function onClick() {
                                    var filterString = selectedListings.length > 0 ? selectedListings[0] + "&" : "";
                                    history.push("/commercialactivity/filter/" + filterString + "closeddeals");
                                } },
                            filter === "closeddeals" && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('img', { src: this.activeBulletIcon }),
                            filter !== "closeddeals" && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('img', { src: this.bulletIcon }),
                            this.context.t("COMMERCIAL_ACTIVITY_FILTER_CLOSED_DEALS")
                        )
                    )
                ),
                listings.length > 0 && listings.map(function (listing, i, list) {
                    return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_3__main_components_ContentListingCommercialActivity__["a" /* default */], _extends({
                        onUpdate: _this3.update,
                        onDelete: _this3.deleteBid,
                        bidsOpen: list.length === 1 || _this3.state.filter !== "ALL",
                        bundlesOpen: list.length === 1 || _this3.state.filter !== "ALL",
                        hideWithoutBids: _this3.state.filter === "withactivity",
                        filterByOpenBids: _this3.state.filter === "openbids",
                        filterByClosedDeals: _this3.state.filter === "closeddeals",
                        onSelect: function onSelect(id) {
                            return Object(__WEBPACK_IMPORTED_MODULE_4__main_actions_utils__["f" /* goToListing */])(id, true);
                        },
                        key: i + "-" + listing.customId
                    }, listing));
                }),
                listings.length === 0 && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                    'div',
                    { className: 'manager-content-message' },
                    loading && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        'div',
                        { className: 'big-spinner' },
                        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('i', { className: 'fa fa-cog fa-spin' })
                    ),
                    !loading && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        'div',
                        { className: 'big-spinner', style: {
                                fontSize: 30
                            } },
                        this.context.t("COMMERCIAL_ACTIVITY_EMPTY_MESSAGE")
                    )
                )
            );
        }
    }]);

    return CommercialActivity;
}(__WEBPACK_IMPORTED_MODULE_0_react___default.a.Component);

CommercialActivity.contextTypes = {
    t: __WEBPACK_IMPORTED_MODULE_5_prop_types__["PropTypes"].func.isRequired
};

var mapStateToProps = function mapStateToProps(state, ownProps) {
    return state;
};

var mapDispatchToProps = function mapDispatchToProps(dispatch) {
    return {};
};

/* harmony default export */ __webpack_exports__["a"] = (Object(__WEBPACK_IMPORTED_MODULE_1_react_redux__["connect"])(mapStateToProps, mapDispatchToProps)(CommercialActivity));

/***/ }),

/***/ "./src/AppBundle/Resources/public/javascript/manage/containers/ManageListings.js":
/*!***************************************************************************************!*\
  !*** ./src/AppBundle/Resources/public/javascript/manage/containers/ManageListings.js ***!
  \***************************************************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_react__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_react_redux__ = __webpack_require__(/*! react-redux */ "./node_modules/react-redux/es/index.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__main_actions_utils__ = __webpack_require__(/*! ../../main/actions/utils */ "./src/AppBundle/Resources/public/javascript/main/actions/utils.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__components_BoardListing__ = __webpack_require__(/*! ../components/BoardListing */ "./src/AppBundle/Resources/public/javascript/manage/components/BoardListing.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__main_actions_userActions__ = __webpack_require__(/*! ../../main/actions/userActions */ "./src/AppBundle/Resources/public/javascript/main/actions/userActions.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5_prop_types__ = __webpack_require__(/*! prop-types */ "./node_modules/prop-types/index.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5_prop_types___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_5_prop_types__);
var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }








var ManageListings = function (_React$Component) {
    _inherits(ManageListings, _React$Component);

    function ManageListings(props) {
        _classCallCheck(this, ManageListings);

        var _this2 = _possibleConstructorReturn(this, (ManageListings.__proto__ || Object.getPrototypeOf(ManageListings)).call(this, props));

        _this2.selectListing = function (id) {
            Object(__WEBPACK_IMPORTED_MODULE_2__main_actions_utils__["e" /* goTo */])("listing/" + id);
        };

        _this2.duplicate = function (customId) {
            var draft = _this2.state.draft;
            _this2.setState({ loadingDraft: true });
            ContentArena.ContentApi.duplicateListing(customId).done(function (response) {
                if (response.success) {
                    draft.unshift(response.listing);
                    _this2.setState({ draft: draft, loadingDraft: false });
                }
            });
        };

        _this2.deactivate = function (customId) {
            var inactive = _this2.state.inactive;
            _this2.setState({ loadingInactive: true });
            ContentArena.ContentApi.deactivateListing(customId).done(function (response) {
                if (response.success) {
                    //inactive.unshift(ContentArena.Utils.contentParserFromServer(response.listing));
                    inactive.unshift(response.listing);
                    _this2.setState({ inactive: inactive, loadingInactive: false });
                }
            });
        };

        _this2.state = {
            loading: false,
            loadingDraft: false,
            loadingInactive: false,
            loadingActive: false,
            loadingExpired: false,
            draft: [],
            active: [],
            inactive: [],
            expired: []
        };
        return _this2;
    }

    _createClass(ManageListings, [{
        key: "componentDidMount",
        value: function componentDidMount() {
            var _this = this;
            this.setState({
                loadingDraft: true,
                loadingInactive: true,
                loadingActive: true,
                loadingExpired: true
            });

            ContentArena.ContentApi.getDraftListings().done(function (listings) {
                listings = listings.map(function (listing) {
                    return ContentArena.Utils.contentParserFromServer(listing);
                });
                _this.setState({ draft: listings, loadingDraft: false });
            });

            ContentArena.ContentApi.getInactiveListings().done(function (listings) {
                listings = listings.map(function (listing) {
                    return ContentArena.Utils.contentParserFromServer(listing);
                });
                _this.setState({ inactive: listings, loadingInactive: false });
            });

            ContentArena.ContentApi.getActiveListings().done(function (listings) {
                listings = listings.map(function (listing) {
                    return ContentArena.Utils.contentParserFromServer(listing);
                });
                _this.setState({ active: listings, loadingActive: false });
            });

            ContentArena.ContentApi.getExpiredListings().done(function (listings) {
                listings = listings.map(function (listing) {
                    return ContentArena.Utils.contentParserFromServer(listing);
                });
                _this.setState({ expired: listings, loadingExpired: false });
            });

            this.props.updateProfile("SELLER");
        }
    }, {
        key: "render",
        value: function render() {
            var _this3 = this;

            var _state = this.state,
                loadingDraft = _state.loadingDraft,
                loadingActive = _state.loadingActive,
                loadingExpired = _state.loadingExpired,
                loadingInactive = _state.loadingInactive,
                draft = _state.draft,
                active = _state.active,
                inactive = _state.inactive,
                expired = _state.expired;

            return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                "div",
                { style: {
                        display: 'flex',
                        flexDirection: 'column',
                        flex: 1
                    } },
                __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                    "div",
                    { style: {
                            display: 'flex',
                            flexDirection: 'row',
                            padding: '0 0 5px',
                            color: '#4F4F4F',
                            fontSize: 16,
                            fontWeight: 600,
                            alignItems: 'center',
                            marginTop: '-15px'

                        } },
                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        "div",
                        { style: { margin: '0 20px', flex: 1, display: 'flex', alignItems: 'center' } },
                        this.context.t("MANAGE_LISTINGS_TITLE_DRAFT"),
                        "(",
                        draft.length,
                        ")"
                    ),
                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        "div",
                        { style: { margin: '0 20px', flex: 1 } },
                        this.context.t("MANAGE_LISTINGS_TITLE_INACTIVE"),
                        "(",
                        inactive.length,
                        ")"
                    ),
                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        "div",
                        { style: { margin: '0 20px', flex: 1 } },
                        this.context.t("MANAGE_LISTINGS_TITLE_ACTIVE"),
                        "(",
                        active.length,
                        ")"
                    ),
                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        "div",
                        { style: { margin: '0 20px', flex: 1 } },
                        this.context.t("MANAGE_LISTINGS_TITLE_EXPIRED"),
                        " (",
                        expired.length,
                        ")"
                    )
                ),
                __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                    "div",
                    { className: "board" },
                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        "div",
                        { className: "column" },
                        loadingDraft && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                            "div",
                            { className: "medium-spinner" },
                            __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement("i", { className: "fa fa-cog fa-spin" })
                        ),
                        draft.length > 0 && draft.map(function (listing, i, list) {
                            return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_3__components_BoardListing__["a" /* default */], _extends({
                                key: "draft-" + i,
                                className: "listing",
                                style: {
                                    zIndex: list.length - i
                                },
                                defaultAction: "EDIT",
                                showEdit: true,
                                showRemove: true,
                                showDuplicate: true,
                                showView: false,
                                onRemove: function onRemove() {
                                    list.splice(i, 1);
                                    _this3.setState({ draft: list });
                                    ContentArena.ContentApi.removeListing(listing.customId);
                                },
                                onDuplicate: _this3.duplicate
                            }, listing));
                        })
                    ),
                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        "div",
                        { className: "column" },
                        loadingInactive && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                            "div",
                            { className: "medium-spinner" },
                            __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement("i", { className: "fa fa-cog fa-spin" })
                        ),
                        inactive.length > 0 && inactive.map(function (listing, i, list) {
                            return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_3__components_BoardListing__["a" /* default */], _extends({
                                key: "inactive-" + i,
                                className: "listing",
                                style: {
                                    zIndex: list.length - i
                                },
                                defaultAction: "SUBMIT",
                                showEdit: true,
                                showRemove: true,
                                showDuplicate: true,
                                showSubmit: true,
                                showView: true,
                                onRemove: function onRemove() {
                                    list.splice(i, 1);
                                    _this3.setState({ inactive: list });
                                    ContentArena.ContentApi.removeListing(listing.customId);
                                },
                                onDuplicate: _this3.duplicate
                            }, listing));
                        })
                    ),
                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        "div",
                        { className: "column" },
                        active.length === 0 && loadingActive && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                            "div",
                            { className: "medium-spinner" },
                            __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement("i", { className: "fa fa-cog fa-spin" })
                        ),
                        active.length > 0 && active.map(function (listing, i, list) {
                            return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_3__components_BoardListing__["a" /* default */], _extends({
                                key: "active-" + i,
                                className: "listing",
                                style: {
                                    zIndex: list.length - i
                                },
                                showEdit: !listing.hasPendingBids,
                                showRemove: !listing.hasActivity,
                                showDeactivate: !listing.hasPendingBids,
                                showDuplicate: true,
                                showArchive: !listing.hasPendingBids && listing.hasActivity,
                                showView: true,
                                defaultAction: "VIEW",
                                onDeactivate: function onDeactivate() {
                                    list.splice(i, 1);
                                    _this3.setState({ active: list });
                                    _this3.deactivate(listing.customId);
                                },
                                onRemove: function onRemove() {
                                    list.splice(i, 1);
                                    _this3.setState({ active: list });
                                    ContentArena.ContentApi.removeListing(listing.customId);
                                },
                                onArchive: function onArchive() {
                                    list.splice(i, 1);
                                    _this3.setState({ active: list });
                                    ContentArena.ContentApi.archiveListing(listing.customId);
                                },
                                onDuplicate: _this3.duplicate
                            }, listing));
                        })
                    ),
                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        "div",
                        { className: "column" },
                        expired.length === 0 && loadingExpired && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                            "div",
                            { className: "medium-spinner" },
                            __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement("i", { className: "fa fa-cog fa-spin" })
                        ),
                        expired.length > 0 && expired.map(function (listing, i, list) {
                            return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_3__components_BoardListing__["a" /* default */], _extends({
                                key: "expired-" + i,
                                className: "listing",
                                style: {
                                    zIndex: list.length - i
                                },
                                showRemove: !listing.hasActivity,
                                showDuplicate: true,
                                showArchive: listing.hasActivity,
                                showView: true,
                                onRemove: function onRemove() {
                                    list.splice(i, 1);
                                    _this3.setState({ expired: list });
                                    ContentArena.ContentApi.removeListing(listing.customId);
                                },
                                onArchive: function onArchive() {
                                    list.splice(i, 1);
                                    _this3.setState({ expired: list });
                                    ContentArena.ContentApi.archiveListing(listing.customId);
                                },
                                onDuplicate: _this3.duplicate
                            }, listing));
                        })
                    )
                )
            );
        }
    }]);

    return ManageListings;
}(__WEBPACK_IMPORTED_MODULE_0_react___default.a.Component);

ManageListings.contextTypes = {
    t: __WEBPACK_IMPORTED_MODULE_5_prop_types__["PropTypes"].func.isRequired
};

var mapStateToProps = function mapStateToProps(state, ownProps) {
    return state;
};

var mapDispatchToProps = function mapDispatchToProps(dispatch) {
    return {
        updateProfile: function updateProfile(profile) {
            return dispatch(Object(__WEBPACK_IMPORTED_MODULE_4__main_actions_userActions__["b" /* updateProfile */])(profile));
        }
    };
};

/* harmony default export */ __webpack_exports__["a"] = (Object(__WEBPACK_IMPORTED_MODULE_1_react_redux__["connect"])(mapStateToProps, mapDispatchToProps)(ManageListings));

/***/ }),

/***/ "./src/AppBundle/Resources/public/javascript/manage/containers/Messages.js":
/*!*********************************************************************************!*\
  !*** ./src/AppBundle/Resources/public/javascript/manage/containers/Messages.js ***!
  \*********************************************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_react__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_react_redux__ = __webpack_require__(/*! react-redux */ "./node_modules/react-redux/es/index.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__main_actions_utils__ = __webpack_require__(/*! ../../main/actions/utils */ "./src/AppBundle/Resources/public/javascript/main/actions/utils.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_moment_moment__ = __webpack_require__(/*! moment/moment */ "./node_modules/moment/moment.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_moment_moment___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_3_moment_moment__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_prop_types__ = __webpack_require__(/*! prop-types */ "./node_modules/prop-types/index.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_prop_types___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_4_prop_types__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5_classnames__ = __webpack_require__(/*! classnames */ "./node_modules/classnames/index.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5_classnames___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_5_classnames__);
var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }








var Messages = function (_React$Component) {
    _inherits(Messages, _React$Component);

    function Messages(props) {
        _classCallCheck(this, Messages);

        var _this = _possibleConstructorReturn(this, (Messages.__proto__ || Object.getPrototypeOf(Messages)).call(this, props));

        _this.selectThread = function (selectedThread) {
            var history = _this.props.history;


            history.push("/messages/" + selectedThread.customId);
        };

        _this.updateMessages = function (thread) {
            var selectedThread = thread || _this.state.selectedThread;

            if (!selectedThread) return;

            _this.setState({
                loadingMessages: true,
                messages: []
            });

            ContentArena.ContentApi.getThread(selectedThread.customId).done(function (r) {
                _this.setState({
                    loadingMessages: false,
                    messages: r
                });
            });
        };

        _this.send = function () {
            var _this$state = _this.state,
                selectedThread = _this$state.selectedThread,
                inputMessage = _this$state.inputMessage,
                messages = _this$state.messages;


            var message = {
                content: inputMessage,
                thread: selectedThread.id,
                listing: selectedThread.listing.id
            };

            _this.setState({ inputMessage: "", saving: true });

            ContentArena.ContentApi.sendMessage(message).done(function (r) {
                _this.setState({ saving: false, showSuccess: true, messages: [].concat(_toConsumableArray(messages), [r]) });
            });
        };

        _this.state = {
            threads: [],
            loadingThreads: false,
            loadingMessages: false,
            selectedThread: null,
            inputMessage: null,
            messages: []
        };
        return _this;
    }

    _createClass(Messages, [{
        key: "componentDidMount",
        value: function componentDidMount() {
            var _this2 = this;

            this.setState({
                loadingThreads: true
            });

            ContentArena.ContentApi.getThreads().done(function (r) {

                var selectedThread = void 0;

                r.sort(function (a, b) {
                    var aDate = __WEBPACK_IMPORTED_MODULE_3_moment_moment___default()(a.lastMessageDate);
                    var bDate = __WEBPACK_IMPORTED_MODULE_3_moment_moment___default()(b.lastMessageDate);
                    return aDate > bDate ? 1 : bDate > a.bDate ? -1 : 0;
                }).reverse();

                if (_this2.props.match.params.customId) {
                    selectedThread = r.filter(function (t) {
                        return t.customId === _this2.props.match.params.customId;
                    })[0];
                } else if (r.length > 0) {
                    selectedThread = r[0];
                }

                _this2.setState({
                    threads: r,
                    selectedThread: selectedThread,
                    loadingThreads: false
                });
                _this2.updateMessages();
            });
        }
    }, {
        key: "render",
        value: function render() {
            var _this3 = this;

            var _state = this.state,
                loadingThreads = _state.loadingThreads,
                loadingMessages = _state.loadingMessages,
                selectedThread = _state.selectedThread,
                threads = _state.threads,
                inputMessage = _state.inputMessage,
                messages = _state.messages,
                saving = _state.saving;
            var user = this.props.user;


            return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                "div",
                { className: "messages-container" },
                __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                    "div",
                    { className: "threads" },
                    loadingThreads && threads.length === 0 && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement("i", { className: "fa fa-cog fa-spin" }),
                    !loadingThreads && threads.length === 0 && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        "div",
                        null,
                        this.context.t("MESSAGES_NO_THREADS_YET")
                    ),
                    !loadingThreads && threads.map(function (t, i) {
                        return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                            "div",
                            { className: selectedThread && selectedThread.id === t.id ? "thread thread-selected" : "thread",
                                key: "thread-" + i,
                                onClick: function onClick() {
                                    _this3.selectThread(t);
                                } },
                            __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                "div",
                                { className: "date" },
                                t.lastMessageDate && __WEBPACK_IMPORTED_MODULE_3_moment_moment___default()(t.lastMessageDate).format('YYYY/MM/DD')
                            ),
                            __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                "div",
                                { className: "listing-name" },
                                t.listing.name
                            ),
                            __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                "div",
                                { className: "company" },
                                t.oppositeParty.legalName
                            ),
                            __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                "div",
                                { className: "user" },
                                t.lastMessageUser ? Object(__WEBPACK_IMPORTED_MODULE_2__main_actions_utils__["d" /* getFullName */])(t.lastMessageUser) : ''
                            ),
                            __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                "div",
                                { className: "last-message" },
                                t.lastMessageContent && Object(__WEBPACK_IMPORTED_MODULE_2__main_actions_utils__["g" /* limitText */])(t.lastMessageContent)
                            )
                        );
                    })
                ),
                selectedThread && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                    "div",
                    { className: "thread-content" },
                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        "div",
                        { className: "thread-title" },
                        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                            "div",
                            { className: "listing-name", onClick: function onClick() {
                                    Object(__WEBPACK_IMPORTED_MODULE_2__main_actions_utils__["f" /* goToListing */])(selectedThread.listing.customId, true);
                                } },
                            selectedThread.listing.name
                        ),
                        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                            "div",
                            { className: "company-name" },
                            selectedThread.oppositeParty.legalName
                        )
                    ),
                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        "div",
                        { className: "messages" },
                        loadingMessages && messages.length === 0 && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                            "div",
                            null,
                            __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement("i", { className: "fa fa-cog fa-spin" })
                        ),
                        !loadingMessages && messages.map(function (m, i) {
                            var ownCompanyMessage = user.company.id === m.sender.company.id;
                            var ownMessage = user.id === m.sender.id;

                            return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                "div",
                                { key: i, className: __WEBPACK_IMPORTED_MODULE_5_classnames___default()("message", { "own-message": ownMessage, 'own-company': ownCompanyMessage }) },
                                __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                    "div",
                                    { className: "message-sender" },
                                    Object(__WEBPACK_IMPORTED_MODULE_2__main_actions_utils__["d" /* getFullName */])(m.sender)
                                ),
                                __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                    "div",
                                    { className: "message-content" },
                                    m.content
                                ),
                                __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                    "div",
                                    { className: "message-date" },
                                    __WEBPACK_IMPORTED_MODULE_3_moment_moment___default()(m.createdAt).format('YYYY/MM/DD HH:mm')
                                )
                            );
                        })
                    ),
                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        "div",
                        { className: "message-input" },
                        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                            "div",
                            { className: "message-input-title" },
                            this.context.t("MESSAGES_TITLE")
                        ),
                        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement("textarea", {
                            value: inputMessage,
                            onChange: function onChange(e) {
                                _this3.setState({ inputMessage: e.target.value });
                            },
                            className: "message-content",
                            placeholder: this.context.t("MESSAGES_PLACEHOLDER_WRITE") }),
                        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                            "button",
                            { className: "standard-button",
                                onClick: this.send,
                                disabled: !inputMessage || inputMessage === "" || saving },
                            !saving && this.context.t("MESSAGES_SEND_BUTTON"),
                            saving && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement("i", { className: "fa fa-cog fa-spin" })
                        )
                    )
                ),
                !selectedThread && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                    "div",
                    null,
                    this.context.t("MESSAGES_NO_THREAD_SELECTED")
                )
            );
        }
    }]);

    return Messages;
}(__WEBPACK_IMPORTED_MODULE_0_react___default.a.Component);

Messages.contextTypes = {
    t: __WEBPACK_IMPORTED_MODULE_4_prop_types__["PropTypes"].func.isRequired
};

var mapStateToProps = function mapStateToProps(state, ownProps) {
    return state;
};

var mapDispatchToProps = function mapDispatchToProps(dispatch) {
    return {};
};

/* harmony default export */ __webpack_exports__["a"] = (Object(__WEBPACK_IMPORTED_MODULE_1_react_redux__["connect"])(mapStateToProps, mapDispatchToProps)(Messages));

/***/ }),

/***/ "./src/AppBundle/Resources/public/javascript/manage/containers/PendingDeals.js":
/*!*************************************************************************************!*\
  !*** ./src/AppBundle/Resources/public/javascript/manage/containers/PendingDeals.js ***!
  \*************************************************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_react__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_react_redux__ = __webpack_require__(/*! react-redux */ "./node_modules/react-redux/es/index.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__main_components_ContentListingPendingBid__ = __webpack_require__(/*! ../../main/components/ContentListingPendingBid */ "./src/AppBundle/Resources/public/javascript/main/components/ContentListingPendingBid.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__main_actions_utils__ = __webpack_require__(/*! ../../main/actions/utils */ "./src/AppBundle/Resources/public/javascript/main/actions/utils.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_prop_types__ = __webpack_require__(/*! prop-types */ "./node_modules/prop-types/index.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_prop_types___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_4_prop_types__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__main_components_ContentListing__ = __webpack_require__(/*! ../../main/components/ContentListing */ "./src/AppBundle/Resources/public/javascript/main/components/ContentListing.js");
var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }








var PendingDeals = function (_React$Component) {
    _inherits(PendingDeals, _React$Component);

    function PendingDeals(props) {
        _classCallCheck(this, PendingDeals);

        var _this2 = _possibleConstructorReturn(this, (PendingDeals.__proto__ || Object.getPrototypeOf(PendingDeals)).call(this, props));

        _this2.selectListing = function (id) {
            Object(__WEBPACK_IMPORTED_MODULE_3__main_actions_utils__["e" /* goTo */])("listing/" + id, true);
        };

        _this2.update = function () {
            var _this = _this2;
            _this2.setState({ loading: true, loadingDeclined: true });
            ContentArena.ContentApi.getPendingDeals().done(function (bids) {
                _this.setState({ bids: bids, loading: false });
            });

            ContentArena.ContentApi.getRejectedDeals().done(function (declinedBids) {
                _this.setState({ declinedBids: declinedBids, loadingDeclined: false });
            });
        };

        _this2.deleteBid = function (id) {
            ContentArena.ContentApi.removeBid({ id: id }).done(function (r) {
                _this2.update();
            });
        };

        _this2.remove = function (customId) {
            _this2.setState({
                bids: _this2.state.bids.filter(function (l) {
                    return l.customId !== customId;
                })
            });
        };

        _this2.state = {
            loading: false,
            loadingDeclined: false,
            bids: [],
            declinedBids: [],
            tab: props.match.params.tab || "activebids"

        };
        _this2.bulletIcon = assetsBaseDir + "app/images/bullet.png";
        _this2.activeBulletIcon = assetsBaseDir + "app/images/active_bullet.png";
        return _this2;
    }

    _createClass(PendingDeals, [{
        key: 'componentDidMount',
        value: function componentDidMount() {
            this.update();
        }
    }, {
        key: 'render',
        value: function render() {
            var _this3 = this;

            var _state = this.state,
                loading = _state.loading,
                bids = _state.bids,
                tab = _state.tab,
                declinedBids = _state.declinedBids,
                loadingDeclined = _state.loadingDeclined;
            var history = this.props.history;

            var defaultRightsPackage = JSON.parse(this.props.rights);

            return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                'div',
                { style: {
                        display: 'flex',
                        flexDirection: 'column',
                        flex: 1
                    } },
                __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                    'div',
                    { style: {
                            display: 'flex',
                            padding: '0 0 20px',
                            color: '#4F4F4F',
                            fontSize: 18,
                            fontWeight: 600
                        } },
                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        'div',
                        { style: { margin: '0 20px' } },
                        'Bids'
                    ),
                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        'div',
                        { style: { margin: '0 20px', cursor: 'pointer' },
                            onClick: function onClick() {
                                history.push('/bids/activebids');
                            } },
                        tab === "activebids" && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('img', { style: { margin: '0px 10px 3px' }, src: this.activeBulletIcon }),
                        tab !== "activebids" && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('img', { style: { margin: '0px 10px 3px' }, src: this.bulletIcon }),
                        this.context.t("PENDING_BIDS_FILTER_ACTIVE")
                    ),
                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        'div',
                        { style: { margin: '0 20px', cursor: 'pointer' },
                            onClick: function onClick() {
                                history.push('/bids/declinedbids');
                            } },
                        tab === "declinedbids" && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('img', { style: { margin: '0px 10px 3px' }, src: this.activeBulletIcon }),
                        tab !== "declinedbids" && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('img', { style: { margin: '0px 10px 3px' }, src: this.bulletIcon }),
                        this.context.t("PENDING_BIDS_FILTER_DECLINED")
                    )
                ),
                tab === "activebids" && (bids.length > 0 ? bids.map(function (bid, i) {
                    return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_5__main_components_ContentListing__["a" /* default */], _extends({
                        onSelect: _this3.selectListing,
                        onDelete: _this3.deleteBid,
                        key: i + "-" + bid.content.customId,
                        bid: bid,
                        defaultRightsPackage: defaultRightsPackage
                    }, bid.content));
                }) : __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                    'div',
                    { className: 'manager-content-message' },
                    loading && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        'div',
                        { className: 'big-spinner' },
                        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('i', { className: 'fa fa-cog fa-spin' })
                    ),
                    !loading && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        'div',
                        { className: 'big-spinner', style: { fontSize: 30 } },
                        this.context.t("PENDING_BIDS_MADE_EMPTY_MESSAGE")
                    )
                )),
                tab === "declinedbids" && (declinedBids.length > 0 ? declinedBids.map(function (bid, i) {
                    return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_5__main_components_ContentListing__["a" /* default */], _extends({
                        onSelect: _this3.selectListing,
                        onDelete: _this3.deleteBid,
                        key: i + "-" + bid.content.customId,
                        bid: bid,
                        declined: true,
                        defaultRightsPackage: defaultRightsPackage
                    }, bid.content));
                }) : __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                    'div',
                    { className: 'manager-content-message' },
                    loadingDeclined && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        'div',
                        { className: 'big-spinner' },
                        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('i', { className: 'fa fa-cog fa-spin' })
                    ),
                    !loadingDeclined && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        'div',
                        { className: 'big-spinner', style: { fontSize: 30 } },
                        this.context.t("PENDING_BIDS_MADE_DECLINED_EMPTY_MESSAGE")
                    )
                ))
            );
        }
    }]);

    return PendingDeals;
}(__WEBPACK_IMPORTED_MODULE_0_react___default.a.Component);

PendingDeals.contextTypes = {
    t: __WEBPACK_IMPORTED_MODULE_4_prop_types__["PropTypes"].func.isRequired
};

var mapStateToProps = function mapStateToProps(state, ownProps) {
    return state;
};

var mapDispatchToProps = function mapDispatchToProps(dispatch) {
    return {};
};

/* harmony default export */ __webpack_exports__["a"] = (Object(__WEBPACK_IMPORTED_MODULE_1_react_redux__["connect"])(mapStateToProps, mapDispatchToProps)(PendingDeals));

/***/ }),

/***/ "./src/AppBundle/Resources/public/javascript/manage/containers/Settings.js":
/*!*********************************************************************************!*\
  !*** ./src/AppBundle/Resources/public/javascript/manage/containers/Settings.js ***!
  \*********************************************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_react__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_react_redux__ = __webpack_require__(/*! react-redux */ "./node_modules/react-redux/es/index.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_react_table__ = __webpack_require__(/*! react-table */ "./node_modules/react-table/es/index.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__main_actions_utils__ = __webpack_require__(/*! ../../main/actions/utils */ "./src/AppBundle/Resources/public/javascript/main/actions/utils.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__main_components_CountrySelector__ = __webpack_require__(/*! ../../main/components/CountrySelector */ "./src/AppBundle/Resources/public/javascript/main/components/CountrySelector.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5_moment_moment__ = __webpack_require__(/*! moment/moment */ "./node_modules/moment/moment.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5_moment_moment___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_5_moment_moment__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__main_components_Icons__ = __webpack_require__(/*! ../../main/components/Icons */ "./src/AppBundle/Resources/public/javascript/main/components/Icons.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7_prop_types__ = __webpack_require__(/*! prop-types */ "./node_modules/prop-types/index.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7_prop_types___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_7_prop_types__);
var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }










var Settings = function (_React$Component) {
    _inherits(Settings, _React$Component);

    function Settings(props) {
        _classCallCheck(this, Settings);

        var _this = _possibleConstructorReturn(this, (Settings.__proto__ || Object.getPrototypeOf(Settings)).call(this, props));

        _this.updateCompany = function () {
            var history = _this.props.history;

            _this.setState({ updatingCompany: true, editCompanyInfo: false });
            ContentArena.ContentApi.updateCompany(_this.state.user.company).done(function () {
                history.push("/settings");
            });
        };

        _this.updateUser = function () {
            var history = _this.props.history;

            _this.setState({ updatingUser: true, editPersonalInfo: false });
            ContentArena.ContentApi.updateUser(_this.state.user).done(function () {
                history.push("/settings");
            });
        };

        _this.updatePassword = function () {
            _this.setState({ updatingPassword: true });
            ContentArena.ContentApi.updatePassword({
                id: _this.state.user.id,
                password: _this.state.password
            }).done(function () {
                _this.setState({
                    updatingPassword: false,
                    password: null,
                    passwordCheck: null,
                    passwordUpdated: true
                });
            });
        };

        _this.validate = function (pass) {
            return {
                length: pass.length >= 8,
                digit: /\d/.test(pass),
                upper: /[A-Z]/.test(pass),
                special: /[!@#$%^&*()_+\-=\[\]{};':"\\|,.<>\/?]/.test(pass)
            };
        };

        _this.invalidPassword = function () {
            var _this$state = _this.state,
                oldPassword = _this$state.oldPassword,
                password = _this$state.password,
                passwordCheck = _this$state.passwordCheck;


            if (!oldPassword || !password || !passwordCheck) return true;

            var valid = _this.validate(password);

            return password !== passwordCheck || !valid.length || !valid.digit || !valid.upper || !valid.special;
        };

        _this.state = {
            loading: false,
            updatingCompany: false,
            updatingUser: false,
            updatingPassword: false,
            loadingCompanyUsers: false,
            editPersonalInfo: props.match.params.filter === "editpersonal",
            editCompanyInfo: props.match.params.filter === "editcompany",
            companyUsers: [],
            user: {}
        };
        return _this;
    }

    _createClass(Settings, [{
        key: "componentDidMount",
        value: function componentDidMount() {
            var _this2 = this;

            this.setState({ loading: true, loadingCompanyUsers: true });

            ContentArena.ContentApi.getUserInfo().done(function (user) {
                _this2.setState({ loading: false, user: user });
            });

            ContentArena.ContentApi.getCompanyUsers().done(function (companyUsers) {
                _this2.setState({ loadingCompanyUsers: false, companyUsers: companyUsers });
            });
        }
    }, {
        key: "render",
        value: function render() {
            var _this3 = this;

            var history = this.props.history;
            var _state = this.state,
                loading = _state.loading,
                editPersonalInfo = _state.editPersonalInfo,
                editCompanyInfo = _state.editCompanyInfo,
                loadingCompanyUsers = _state.loadingCompanyUsers,
                companyUsers = _state.companyUsers,
                updatingCompany = _state.updatingCompany,
                updatingUser = _state.updatingUser,
                updatingPassword = _state.updatingPassword,
                password = _state.password,
                passwordCheck = _state.passwordCheck,
                passwordUpdated = _state.passwordUpdated;

            var user = this.state.user;

            var country = user && user.company && user.company.country ? { label: user.company.country.name, value: user.company.country.name } : null;

            return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                "div",
                { className: "settings-container" },
                __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                    "div",
                    { className: "title" },
                    this.context.t("SETTINGS_TITLE_COMPANY"),
                    !editCompanyInfo && !updatingCompany && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        "div",
                        { className: "edit-button", onClick: function onClick(e) {
                                history.push("/settings/editcompany");
                            } },
                        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement("img", { src: __WEBPACK_IMPORTED_MODULE_6__main_components_Icons__["k" /* editIcon */] }),
                        this.context.t("SETTINGS_BUTTON_EDIT")
                    ),
                    editCompanyInfo && !updatingCompany && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        "div",
                        { className: "edit-button", onClick: this.updateCompany },
                        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement("img", { src: __WEBPACK_IMPORTED_MODULE_6__main_components_Icons__["k" /* editIcon */] }),
                        this.context.t("SETTINGS_BUTTON_SAVE")
                    ),
                    updatingCompany && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_6__main_components_Icons__["a" /* Spinner */], null)
                ),
                user.company && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                    "div",
                    { className: "setting" },
                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        "div",
                        { className: "row" },
                        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                            "div",
                            { className: "item" },
                            __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                "label",
                                null,
                                this.context.t("SETTINGS_LABEL_COMPANY_NAME")
                            ),
                            __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement("input", { value: user.company.legalName, disabled: !editCompanyInfo, onChange: function onChange(e) {
                                    user.company.legalName = e.target.value;
                                    _this3.setState({ user: user });
                                } })
                        ),
                        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                            "div",
                            { className: "item" },
                            __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                "label",
                                null,
                                this.context.t("SETTINGS_LABEL_COMPANY_REGISTRATION_NUMBER")
                            ),
                            __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement("input", { value: user.company.registrationNumber, disabled: !editCompanyInfo, onChange: function onChange(e) {
                                    user.company.registrationNumber = e.target.value;
                                    _this3.setState({ user: user });
                                } })
                        ),
                        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                            "div",
                            { className: "item" },
                            __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                "label",
                                null,
                                this.context.t("SETTINGS_LABEL_COMPANY_VAT")
                            ),
                            __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement("input", { value: user.company.vat, disabled: !editCompanyInfo, onChange: function onChange(e) {
                                    user.company.vat = e.target.value;
                                    _this3.setState({ user: user });
                                } })
                        )
                    ),
                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        "div",
                        { className: "row" },
                        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                            "div",
                            { className: "item" },
                            __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                "label",
                                null,
                                this.context.t("SETTINGS_LABEL_COMPANY_ADDRESS")
                            ),
                            __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement("input", { value: user.company.address, disabled: !editCompanyInfo, onChange: function onChange(e) {
                                    user.company.address = e.target.value;
                                    _this3.setState({ user: user });
                                } })
                        ),
                        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                            "div",
                            { className: "item" },
                            __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                "label",
                                null,
                                this.context.t("SETTINGS_LABEL_COMPANY_CITY")
                            ),
                            __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement("input", { value: user.company.city, disabled: !editCompanyInfo, onChange: function onChange(e) {
                                    user.company.city = e.target.value;
                                    _this3.setState({ user: user });
                                } })
                        ),
                        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                            "div",
                            { className: "item" },
                            __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                "label",
                                null,
                                this.context.t("SETTINGS_LABEL_COMPANY_ZIP")
                            ),
                            __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement("input", { value: user.company.zip, disabled: !editCompanyInfo, onChange: function onChange(e) {
                                    user.company.zip = e.target.value;
                                    _this3.setState({ user: user });
                                } })
                        ),
                        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                            "div",
                            { className: "item" },
                            __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                "label",
                                null,
                                this.context.t("SETTINGS_LABEL_COMPANY_COUNTRY")
                            ),
                            __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_4__main_components_CountrySelector__["a" /* default */], { multi: false, value: country, disabled: !editCompanyInfo, onChange: function onChange(e) {
                                    user.company.country.name = e.value;
                                    _this3.setState({ user: user });
                                } })
                        )
                    ),
                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        "div",
                        null,
                        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                            "label",
                            null,
                            this.context.t("SETTINGS_LABEL_COMPANY_DESCRIPTION")
                        ),
                        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement("textarea", { value: user.company.description, disabled: !editCompanyInfo, onChange: function onChange(e) {
                                user.company.description = e.target.value;
                                _this3.setState({ user: user });
                            } })
                    ),
                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        "div",
                        { style: { margin: '20px 0' } },
                        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                            "label",
                            null,
                            "Active Users"
                        ),
                        loadingCompanyUsers && companyUsers.length === 0 && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_6__main_components_Icons__["a" /* Spinner */], null),
                        !loadingCompanyUsers && companyUsers.length > 0 && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                            "div",
                            null,
                            __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_2_react_table__["default"], {
                                className: "closed-deals-table",
                                defaultPageSize: 30,
                                showPageSizeOptions: false,
                                showPagination: false,
                                minRows: 0,
                                resizable: false,
                                data: companyUsers,
                                columns: [{
                                    Header: this.context.t("SETTINGS_LABEL_USER_FAMILY_NAME"),
                                    headerClassName: 'table-header',
                                    className: 'table-header',
                                    accessor: 'lastName'
                                }, {
                                    accessor: 'firstName', // Required because our accessor is not a string
                                    Header: this.context.t("SETTINGS_LABEL_USER_FIRST_NAME"),
                                    headerClassName: 'table-header',
                                    className: 'table-header'
                                }, {
                                    Header: this.context.t("SETTINGS_LABEL_USER_EMAIL"),
                                    accessor: 'email',
                                    headerClassName: 'table-header',
                                    className: 'table-header'
                                }, {
                                    Header: this.context.t("SETTINGS_LABEL_USER_PHONE_NUMBER"),
                                    accessor: 'phone',
                                    headerClassName: 'table-header',
                                    className: 'table-header'
                                }, {
                                    Header: this.context.t("SETTINGS_LABEL_USER_COMPANY_POSITION"),
                                    accessor: 'title',
                                    headerClassName: 'table-header',
                                    className: 'table-header'
                                }]
                            })
                        )
                    )
                ),
                __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                    "div",
                    { className: "title" },
                    this.context.t("SETTINGS_LABEL_USER_TITLE_INFO"),
                    !editPersonalInfo && !updatingUser && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        "div",
                        { className: "edit-button", onClick: function onClick(e) {
                                history.push("/settings/editpersonal");
                            } },
                        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement("img", { src: __WEBPACK_IMPORTED_MODULE_6__main_components_Icons__["k" /* editIcon */] }),
                        this.context.t("Edit")
                    ),
                    editPersonalInfo && !updatingUser && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        "div",
                        { className: "edit-button", onClick: this.updateUser },
                        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement("img", { src: __WEBPACK_IMPORTED_MODULE_6__main_components_Icons__["k" /* editIcon */] }),
                        this.context.t("Save")
                    ),
                    updatingUser && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_6__main_components_Icons__["a" /* Spinner */], null)
                ),
                __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                    "div",
                    { className: "setting" },
                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        "div",
                        { className: "row" },
                        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                            "div",
                            { className: "item" },
                            __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                "label",
                                null,
                                this.context.t("SETTINGS_LABEL_USER_FIRST_NAME")
                            ),
                            __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement("input", { value: user.firstName, disabled: !editPersonalInfo, onChange: function onChange(e) {
                                    user.firstName = e.target.value;
                                    _this3.setState({ user: user });
                                } })
                        ),
                        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                            "div",
                            { className: "item" },
                            __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                "label",
                                null,
                                this.context.t("SETTINGS_LABEL_USER_FAMILY_NAME")
                            ),
                            __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement("input", { value: user.lastName, disabled: !editPersonalInfo, onChange: function onChange(e) {
                                    user.lastName = e.target.value;
                                    _this3.setState({ user: user });
                                } })
                        ),
                        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                            "div",
                            { className: "item" },
                            __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                "label",
                                null,
                                this.context.t("SETTINGS_LABEL_USER_TITLE")
                            ),
                            __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement("input", { value: user.title, disabled: !editPersonalInfo, onChange: function onChange(e) {
                                    user.title = e.target.value;
                                    _this3.setState({ user: user });
                                } })
                        )
                    ),
                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        "div",
                        { className: "row" },
                        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                            "div",
                            { className: "item" },
                            __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                "label",
                                null,
                                this.context.t("SETTINGS_LABEL_USER_EMAIL")
                            ),
                            __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement("input", { value: user.email, disabled: !editPersonalInfo, onChange: function onChange(e) {
                                    user.email = e.target.value;
                                    _this3.setState({ user: user });
                                } })
                        ),
                        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                            "div",
                            { className: "item" },
                            __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                "label",
                                null,
                                this.context.t("SETTINGS_LABEL_USER_PHONE_NUMBER")
                            ),
                            __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement("input", { value: user.phone, disabled: !editPersonalInfo, onChange: function onChange(e) {
                                    user.phone = e.target.value;
                                    _this3.setState({ user: user });
                                } })
                        )
                    )
                ),
                __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                    "div",
                    { className: "title" },
                    this.context.t("SETTINGS_LABEL_CHANGE_PASSWORD")
                ),
                __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                    "div",
                    { className: "subtitle" },
                    this.context.t("SETTINGS_LABEL_CHANGE_PASSWORD_2")
                ),
                __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                    "div",
                    { className: "setting", style: { display: 'flex' } },
                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        "div",
                        { className: "password" },
                        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                            "label",
                            null,
                            this.context.t("SETTINGS_LABEL_TYPE_CURRENT_PASSWORD")
                        ),
                        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement("input", { type: "password", onChange: function onChange(e) {
                                _this3.setState({
                                    oldPassword: e.target.value
                                });
                            } }),
                        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                            "label",
                            null,
                            this.context.t("SETTINGS_LABEL_TYPE_NEW_PASSWORD")
                        ),
                        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement("input", { type: "password", onChange: function onChange(e) {
                                _this3.setState({
                                    password: e.target.value
                                });
                            } }),
                        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                            "label",
                            null,
                            this.context.t("SETTINGS_LABEL_RETYPE_NEW_PASSWORD")
                        ),
                        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement("input", { type: "password", onChange: function onChange(e) {
                                _this3.setState({
                                    passwordCheck: e.target.value
                                });
                            } }),
                        !updatingPassword && !passwordUpdated && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                            "button",
                            { onClick: this.updatePassword,
                                disabled: this.invalidPassword(),
                                className: "standard-button" },
                            this.context.t("SETTINGS_BUTTON_SAVE_PASSWORD")
                        ),
                        updatingPassword && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_6__main_components_Icons__["a" /* Spinner */], null),
                        passwordUpdated && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                            "div",
                            null,
                            this.context.t("SETTINGS_LABEL_PASSWORD_UPDATED")
                        )
                    ),
                    password && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        "div",
                        { className: "password-validation" },
                        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                            "div",
                            null,
                            this.validate(password).length && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement("img", { src: __WEBPACK_IMPORTED_MODULE_6__main_components_Icons__["d" /* blueCheckIcon */] }),
                            !this.validate(password).length && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement("img", { src: __WEBPACK_IMPORTED_MODULE_6__main_components_Icons__["g" /* cancelIcon */] }),
                            this.context.t("SETTINGS_LABEL_PASSWORD_VALIDATE_1")
                        ),
                        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                            "div",
                            null,
                            this.validate(password).upper && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement("img", { src: __WEBPACK_IMPORTED_MODULE_6__main_components_Icons__["d" /* blueCheckIcon */] }),
                            !this.validate(password).upper && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement("img", { src: __WEBPACK_IMPORTED_MODULE_6__main_components_Icons__["g" /* cancelIcon */] }),
                            this.context.t("SETTINGS_LABEL_PASSWORD_VALIDATE_2")
                        ),
                        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                            "div",
                            null,
                            this.validate(password).digit && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement("img", { src: __WEBPACK_IMPORTED_MODULE_6__main_components_Icons__["d" /* blueCheckIcon */] }),
                            !this.validate(password).digit && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement("img", { src: __WEBPACK_IMPORTED_MODULE_6__main_components_Icons__["g" /* cancelIcon */] }),
                            this.context.t("SETTINGS_LABEL_PASSWORD_VALIDATE_3")
                        ),
                        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                            "div",
                            null,
                            this.validate(password).special && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement("img", { src: __WEBPACK_IMPORTED_MODULE_6__main_components_Icons__["d" /* blueCheckIcon */] }),
                            !this.validate(password).special && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement("img", { src: __WEBPACK_IMPORTED_MODULE_6__main_components_Icons__["g" /* cancelIcon */] }),
                            this.context.t("SETTINGS_LABEL_PASSWORD_VALIDATE_4")
                        ),
                        passwordCheck && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                            "div",
                            null,
                            passwordCheck === password && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement("img", { src: __WEBPACK_IMPORTED_MODULE_6__main_components_Icons__["d" /* blueCheckIcon */] }),
                            passwordCheck !== password && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement("img", { src: __WEBPACK_IMPORTED_MODULE_6__main_components_Icons__["g" /* cancelIcon */] }),
                            this.context.t("SETTINGS_LABEL_PASSWORD_VALIDATE_5")
                        )
                    )
                )
            );
        }
    }]);

    return Settings;
}(__WEBPACK_IMPORTED_MODULE_0_react___default.a.Component);

Settings.contextTypes = {
    t: __WEBPACK_IMPORTED_MODULE_7_prop_types__["PropTypes"].func.isRequired
};

var mapStateToProps = function mapStateToProps(state, ownProps) {
    return state;
};

var mapDispatchToProps = function mapDispatchToProps(dispatch) {
    return {};
};

/* harmony default export */ __webpack_exports__["a"] = (Object(__WEBPACK_IMPORTED_MODULE_1_react_redux__["connect"])(mapStateToProps, mapDispatchToProps)(Settings));

/***/ }),

/***/ "./src/AppBundle/Resources/public/javascript/manage/containers/Watchlist.js":
/*!**********************************************************************************!*\
  !*** ./src/AppBundle/Resources/public/javascript/manage/containers/Watchlist.js ***!
  \**********************************************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_react__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_react_redux__ = __webpack_require__(/*! react-redux */ "./node_modules/react-redux/es/index.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__main_components_ContentListing__ = __webpack_require__(/*! ../../main/components/ContentListing */ "./src/AppBundle/Resources/public/javascript/main/components/ContentListing.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__main_actions_utils__ = __webpack_require__(/*! ../../main/actions/utils */ "./src/AppBundle/Resources/public/javascript/main/actions/utils.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_prop_types__ = __webpack_require__(/*! prop-types */ "./node_modules/prop-types/index.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_prop_types___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_4_prop_types__);
var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }







var Watchlist = function (_React$Component) {
    _inherits(Watchlist, _React$Component);

    function Watchlist(props) {
        _classCallCheck(this, Watchlist);

        var _this2 = _possibleConstructorReturn(this, (Watchlist.__proto__ || Object.getPrototypeOf(Watchlist)).call(this, props));

        _this2.selectListing = function (id) {
            Object(__WEBPACK_IMPORTED_MODULE_3__main_actions_utils__["e" /* goTo */])("listing/" + id);
        };

        _this2.remove = function (customId) {
            _this2.setState({
                listings: _this2.state.listings.filter(function (l) {
                    return l.customId !== customId;
                })
            });
        };

        _this2.state = {
            loading: false,
            listings: []
        };
        return _this2;
    }

    _createClass(Watchlist, [{
        key: 'componentDidMount',
        value: function componentDidMount() {
            var _this = this;
            this.setState({ loading: true });
            ContentArena.ContentApi.getWatchlistListings().done(function (listings) {
                if (!Array.isArray(listings)) {
                    listings = Object.values(listings);
                }

                listings = listings.map(function (listing) {
                    return ContentArena.Utils.contentParserFromServer(listing);
                });
                _this.setState({ listings: listings, loading: false });
            });
        }
    }, {
        key: 'render',
        value: function render() {
            var _this3 = this;

            var _state = this.state,
                loading = _state.loading,
                listings = _state.listings;

            return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                'div',
                { style: {
                        display: 'flex',
                        flexDirection: 'column',
                        flex: 1
                    } },
                listings.length > 0 && listings.map(function (listing) {
                    return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_2__main_components_ContentListing__["a" /* default */], _extends({
                        onSelect: _this3.selectListing,
                        key: listing.customId
                    }, listing, {
                        watchlistRemove: true,
                        onWatchlistRemove: _this3.remove,
                        defaultRightsPackage: JSON.parse(_this3.props.rights)
                    }));
                }),
                listings.length === 0 && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                    'div',
                    { className: 'manager-content-message' },
                    loading && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        'div',
                        { className: 'big-spinner' },
                        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('i', { className: 'fa fa-cog fa-spin' })
                    ),
                    !loading && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        'div',
                        { className: 'big-spinner', style: {
                                fontSize: 30
                            } },
                        this.context.t("WATCHLIST_EMPTY_MESSAGE")
                    )
                )
            );
        }
    }]);

    return Watchlist;
}(__WEBPACK_IMPORTED_MODULE_0_react___default.a.Component);

Watchlist.contextTypes = {
    t: __WEBPACK_IMPORTED_MODULE_4_prop_types__["PropTypes"].func.isRequired
};

var mapStateToProps = function mapStateToProps(state, ownProps) {
    return state;
};

var mapDispatchToProps = function mapDispatchToProps(dispatch) {
    return {};
};

/* harmony default export */ __webpack_exports__["a"] = (Object(__WEBPACK_IMPORTED_MODULE_1_react_redux__["connect"])(mapStateToProps, mapDispatchToProps)(Watchlist));

/***/ }),

/***/ "./src/AppBundle/Resources/public/javascript/manage/reducers/manage.js":
/*!*****************************************************************************!*\
  !*** ./src/AppBundle/Resources/public/javascript/manage/reducers/manage.js ***!
  \*****************************************************************************/
/*! exports provided: manageTypes, manage */
/*! exports used: manage */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* unused harmony export manageTypes */
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return manage; });

var manageTypes = {
    TEST: 'TEST'
};

var manage = function manage() {
    var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {
        testItem: "manageReducer"

    };
    var action = arguments[1];


    switch (action.type) {
        case manageTypes.TEST:
            return Object.assign({}, state, {
                test: action.text,
                id: action.id
            });
        default:
            return state;
    }
};

/***/ }),

/***/ "./src/AppBundle/Resources/public/javascript/sell/actions/contentActions.js":
/*!**********************************************************************************!*\
  !*** ./src/AppBundle/Resources/public/javascript/sell/actions/contentActions.js ***!
  \**********************************************************************************/
/*! exports provided: scrollTopMainContent, goToPreviousStep, goToNextStep, goToStep, stepChangeReset, updateContentValue */
/*! exports used: goToNextStep, goToPreviousStep, goToStep, scrollTopMainContent, stepChangeReset, updateContentValue */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "d", function() { return scrollTopMainContent; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "b", function() { return goToPreviousStep; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return goToNextStep; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "c", function() { return goToStep; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "e", function() { return stepChangeReset; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "f", function() { return updateContentValue; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__reducers_content__ = __webpack_require__(/*! ../reducers/content */ "./src/AppBundle/Resources/public/javascript/sell/reducers/content.js");


var scrollTopMainContent = function scrollTopMainContent() {
    var mainContent = document.querySelectorAll('body > .main-content')[0];

    if (mainContent) {
        mainContent.scrollIntoView();
    }
};

var goToPreviousStep = function goToPreviousStep() {
    scrollTopMainContent();

    return {
        type: __WEBPACK_IMPORTED_MODULE_0__reducers_content__["b" /* contentType */].GO_TO_PREVIOUS_STEP
    };
};

var goToNextStep = function goToNextStep() {
    scrollTopMainContent();

    return {
        type: __WEBPACK_IMPORTED_MODULE_0__reducers_content__["b" /* contentType */].GO_TO_NEXT_STEP
    };
};

var goToStep = function goToStep(step) {
    scrollTopMainContent();

    return {
        type: __WEBPACK_IMPORTED_MODULE_0__reducers_content__["b" /* contentType */].GO_TO_STEP,
        step: step
    };
};

var stepChangeReset = function stepChangeReset() {
    return {
        type: __WEBPACK_IMPORTED_MODULE_0__reducers_content__["b" /* contentType */].STEP_CHANGE_RESET
    };
};

var updateContentValue = function updateContentValue(key, value) {
    return {
        type: 'UPDATE_CONTENT_VALUE',
        key: key,
        value: value
    };
};

/***/ }),

/***/ "./src/AppBundle/Resources/public/javascript/sell/actions/validationActions.js":
/*!*************************************************************************************!*\
  !*** ./src/AppBundle/Resources/public/javascript/sell/actions/validationActions.js ***!
  \*************************************************************************************/
/*! exports provided: companyIsValid */
/*! exports used: companyIsValid */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return companyIsValid; });
var companyIsValid = function companyIsValid(company) {
    return company.legalName !== undefined && company.legalName !== "" && company.vat !== undefined && company.vat !== "" && company.zip !== undefined && company.zip !== "" && company.address !== undefined && company.address !== "" && company.city !== undefined && company.city !== "" && company.country !== undefined;
};

/***/ }),

/***/ "./src/AppBundle/Resources/public/javascript/sell/components/ApplicableLaw.js":
/*!************************************************************************************!*\
  !*** ./src/AppBundle/Resources/public/javascript/sell/components/ApplicableLaw.js ***!
  \************************************************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_react__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_react_redux__ = __webpack_require__(/*! react-redux */ "./node_modules/react-redux/es/index.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_prop_types__ = __webpack_require__(/*! prop-types */ "./node_modules/prop-types/index.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_prop_types___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2_prop_types__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__main_components_LanguageSelectorExtended__ = __webpack_require__(/*! ../../main/components/LanguageSelectorExtended */ "./src/AppBundle/Resources/public/javascript/main/components/LanguageSelectorExtended.js");
var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }






var ApplicableLaw = function (_React$Component) {
    _inherits(ApplicableLaw, _React$Component);

    function ApplicableLaw(props) {
        _classCallCheck(this, ApplicableLaw);

        var _this = _possibleConstructorReturn(this, (ApplicableLaw.__proto__ || Object.getPrototypeOf(ApplicableLaw)).call(this, props));

        _this.select = function (value) {
            _this.props.updateContentValue("law", value);
        };

        _this.state = {};
        return _this;
    }

    _createClass(ApplicableLaw, [{
        key: "render",
        value: function render() {
            var law = this.props.law;

            return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                "div",
                { className: "base-input" },
                __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                    "label",
                    null,
                    this.context.t("CL_STEP4_LABEL_APPLICABLE_LAW")
                ),
                __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_3__main_components_LanguageSelectorExtended__["a" /* default */], {
                    value: law,
                    multi: false,
                    placeholder: this.context.t("CL_STEP4_PLACEHOLDER_APPLICABLE_LAW"),
                    onChange: this.select })
            );
        }
    }]);

    return ApplicableLaw;
}(__WEBPACK_IMPORTED_MODULE_0_react___default.a.Component);

ApplicableLaw.contextTypes = {
    t: __WEBPACK_IMPORTED_MODULE_2_prop_types__["PropTypes"].func.isRequired
};

var mapStateToProps = function mapStateToProps(state) {
    return state.content;
};

var mapDispatchToProps = function mapDispatchToProps(dispatch) {
    return {
        updateContentValue: function updateContentValue(key, value) {
            return dispatch({
                type: 'UPDATE_CONTENT_VALUE',
                key: key,
                value: value
            });
        }
    };
};

/* harmony default export */ __webpack_exports__["a"] = (Object(__WEBPACK_IMPORTED_MODULE_1_react_redux__["connect"])(mapStateToProps, mapDispatchToProps)(ApplicableLaw));

/***/ }),

/***/ "./src/AppBundle/Resources/public/javascript/sell/components/Comments.js":
/*!*******************************************************************************!*\
  !*** ./src/AppBundle/Resources/public/javascript/sell/components/Comments.js ***!
  \*******************************************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_react__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_react_redux__ = __webpack_require__(/*! react-redux */ "./node_modules/react-redux/es/index.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_react_modal__ = __webpack_require__(/*! react-modal */ "./node_modules/react-modal/lib/index.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_react_modal___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2_react_modal__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__main_styles_custom__ = __webpack_require__(/*! ../../main/styles/custom */ "./src/AppBundle/Resources/public/javascript/main/styles/custom.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_prop_types__ = __webpack_require__(/*! prop-types */ "./node_modules/prop-types/index.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_prop_types___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_4_prop_types__);
var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }







var Comments = function (_React$Component) {
    _inherits(Comments, _React$Component);

    function Comments(props) {
        _classCallCheck(this, Comments);

        var _this = _possibleConstructorReturn(this, (Comments.__proto__ || Object.getPrototypeOf(Comments)).call(this, props));

        _this.closeModal = function () {
            _this.setState({ isOpen: false });
        };

        _this.updateContent = function (e) {
            var propName = _this.props.propName;


            _this.props.updateContentValue(propName, e.target.value);
        };

        _this.addComments = function () {
            _this.setState({ isOpen: true });
        };

        _this.renderModal = function () {
            var comments = _this.props.comments;


            return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                __WEBPACK_IMPORTED_MODULE_2_react_modal___default.a,
                {
                    isOpen: _this.state.isOpen,
                    onRequestClose: _this.closeModal,
                    bodyOpenClassName: "selector",
                    style: __WEBPACK_IMPORTED_MODULE_3__main_styles_custom__["c" /* customStyles */]
                },
                __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                    'div',
                    { className: 'modal-title' },
                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        'div',
                        { style: { width: "470px" } },
                        _this.context.t("CL_STEP3_AMENDMENT")
                    ),
                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('i', { className: 'fa fa-times close-icon', onClick: _this.closeModal })
                ),
                __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                    'div',
                    { className: 'step-content', style: { padding: "0 15px 5px" } },
                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        'div',
                        { className: 'step-content-container' },
                        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                            'div',
                            { className: 'base-full-input' },
                            __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('textarea', {
                                className: "big-textarea",
                                onChange: _this.updateContent,
                                value: comments })
                        )
                    )
                ),
                __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                    'div',
                    { className: "buttons popup-buttons" },
                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        'button',
                        {
                            className: "standard-button",
                            onClick: _this.closeModal },
                        _this.context.t("Accept")
                    )
                )
            );
        };

        _this.state = {
            isOpen: false
        };
        return _this;
    }

    _createClass(Comments, [{
        key: 'render',
        value: function render() {
            return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                'div',
                { style: { marginBottom: 20 } },
                this.renderModal(),
                __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                    'button',
                    { className: "link-button", onClick: this.addComments },
                    this.context.t("CL_STEP3_AMENDMENT")
                )
            );
        }
    }]);

    return Comments;
}(__WEBPACK_IMPORTED_MODULE_0_react___default.a.Component);

Comments.contextTypes = {
    t: __WEBPACK_IMPORTED_MODULE_4_prop_types__["PropTypes"].func.isRequired
};

var mapStateToProps = function mapStateToProps(state) {
    return state.content;
};

var mapDispatchToProps = function mapDispatchToProps(dispatch) {
    return {
        updateContentValue: function updateContentValue(key, value) {
            return dispatch({
                type: 'UPDATE_CONTENT_VALUE',
                key: key,
                value: value
            });
        }
    };
};

/* harmony default export */ __webpack_exports__["a"] = (Object(__WEBPACK_IMPORTED_MODULE_1_react_redux__["connect"])(mapStateToProps, mapDispatchToProps)(Comments));

/***/ }),

/***/ "./src/AppBundle/Resources/public/javascript/sell/components/CompanyInformation.js":
/*!*****************************************************************************************!*\
  !*** ./src/AppBundle/Resources/public/javascript/sell/components/CompanyInformation.js ***!
  \*****************************************************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_react__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_react_redux__ = __webpack_require__(/*! react-redux */ "./node_modules/react-redux/es/index.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__main_styles_custom__ = __webpack_require__(/*! ../../main/styles/custom */ "./src/AppBundle/Resources/public/javascript/main/styles/custom.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_react_modal__ = __webpack_require__(/*! react-modal */ "./node_modules/react-modal/lib/index.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_react_modal___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_3_react_modal__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__main_components_CountrySelector__ = __webpack_require__(/*! ../../main/components/CountrySelector */ "./src/AppBundle/Resources/public/javascript/main/components/CountrySelector.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__actions_validationActions__ = __webpack_require__(/*! ../actions/validationActions */ "./src/AppBundle/Resources/public/javascript/sell/actions/validationActions.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6_prop_types__ = __webpack_require__(/*! prop-types */ "./node_modules/prop-types/index.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6_prop_types___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_6_prop_types__);
var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }









var labelStyle = { height: "30px", fontSize: "12px", width: '400px' };
var inputStyle = { width: '380px', margin: 0, height: "30px" };

var CompanyInformation = function (_React$Component) {
    _inherits(CompanyInformation, _React$Component);

    function CompanyInformation(props) {
        _classCallCheck(this, CompanyInformation);

        var _this = _possibleConstructorReturn(this, (CompanyInformation.__proto__ || Object.getPrototypeOf(CompanyInformation)).call(this, props));

        _this.closeModal = function () {
            _this.setState({
                isOpen: false,
                company: _this.props.company
            });
        };

        _this.updateCompanyContent = function (e, name) {
            var company = _extends({}, _this.state.company);

            company[name] = e.target.value;
            _this.onDataChange("company", company);
        };

        _this.updateCountry = function (value) {
            var company = _extends({}, _this.state.company);

            company.country.name = value.label;
            _this.onDataChange("company", company);
        };

        _this.renderModal = function () {
            var company = _this.state.company;


            return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                __WEBPACK_IMPORTED_MODULE_3_react_modal___default.a,
                {
                    isOpen: _this.state.isOpen,
                    onRequestClose: _this.closeModal,
                    bodyOpenClassName: "selector",
                    style: __WEBPACK_IMPORTED_MODULE_2__main_styles_custom__["c" /* customStyles */],
                    contentLabel: "Example Modal"
                },
                __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                    "div",
                    { className: "modal-title" },
                    _this.context.t("Company Information"),
                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement("i", { className: "fa fa-times-circle-o close-icon", onClick: _this.closeModal })
                ),
                __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                    "div",
                    { className: "step-content custom" },
                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        "div",
                        { className: "step-content-container" },
                        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                            "div",
                            { className: "base-full-input" },
                            __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                "label",
                                { style: labelStyle },
                                _this.context.t("Legal name")
                            ),
                            __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement("input", {
                                type: "text",
                                style: inputStyle,
                                onChange: function onChange(e) {
                                    _this.updateCompanyContent(e, "legalName");
                                },
                                value: company.legalName })
                        ),
                        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                            "div",
                            { className: "base-full-input" },
                            __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                "label",
                                { style: labelStyle },
                                _this.context.t("Registration number")
                            ),
                            __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement("input", {
                                style: inputStyle,
                                type: "text",
                                onChange: function onChange(e) {
                                    _this.updateCompanyContent(e, "registrationNumber");
                                },
                                value: company.registrationNumber })
                        ),
                        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                            "div",
                            { className: "base-full-input" },
                            __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                "label",
                                { style: labelStyle },
                                _this.context.t("VAT ID number")
                            ),
                            __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement("input", {
                                style: inputStyle,
                                type: "text",
                                onChange: function onChange(e) {
                                    _this.updateCompanyContent(e, "vat");
                                },
                                value: company.vat })
                        ),
                        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                            "div",
                            { className: "base-full-input" },
                            __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                "label",
                                { style: labelStyle },
                                _this.context.t("Street Name / Number")
                            ),
                            __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement("input", {
                                style: inputStyle,
                                type: "text",
                                onChange: function onChange(e) {
                                    _this.updateCompanyContent(e, "address");
                                },
                                defaultValue: company.address })
                        ),
                        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                            "div",
                            { className: "base-full-input" },
                            __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                "label",
                                { style: labelStyle },
                                _this.context.t("City")
                            ),
                            __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement("input", {
                                style: inputStyle,
                                type: "text",
                                onChange: function onChange(e) {
                                    _this.updateCompanyContent(e, "city");
                                },
                                value: company.city })
                        ),
                        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                            "div",
                            { className: "base-full-input" },
                            __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                "label",
                                { style: labelStyle },
                                _this.context.t("ZIP code")
                            ),
                            __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement("input", {
                                style: inputStyle,
                                type: "text",
                                onChange: function onChange(e) {
                                    _this.updateCompanyContent(e, "zip");
                                },
                                value: company.zip })
                        ),
                        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                            "div",
                            { className: "base-full-input" },
                            __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                "label",
                                { style: labelStyle },
                                _this.context.t("Country")
                            ),
                            __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_4__main_components_CountrySelector__["a" /* default */], {
                                multi: false,
                                onChange: function onChange(val) {
                                    _this.updateCompanyContent(val);
                                },
                                value: { value: company.country.name, label: company.country.name } })
                        )
                    )
                ),
                __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                    "div",
                    { className: "buttons" },
                    Object(__WEBPACK_IMPORTED_MODULE_5__actions_validationActions__["a" /* companyIsValid */])(company) && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        "button",
                        {
                            className: "standard-button",
                            onClick: _this.onOKClick },
                        _this.context.t("Ok")
                    ),
                    !Object(__WEBPACK_IMPORTED_MODULE_5__actions_validationActions__["a" /* companyIsValid */])(company) && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        "button",
                        {
                            className: "standard-button",
                            disabled: true
                        },
                        _this.context.t("Ok")
                    )
                )
            );
        };

        _this.onOKClick = function () {
            var _this$props = _this.props,
                updateContentValue = _this$props.updateContentValue,
                counter = _this$props.counter;
            var company = _this.state.company;


            updateContentValue("company", company);
            updateContentValue("counter", counter + 1);

            _this.closeModal();
        };

        _this.state = {
            isOpen: false,
            company: props.company
        };
        return _this;
    }

    _createClass(CompanyInformation, [{
        key: "componentWillReceiveProps",
        value: function componentWillReceiveProps(nextProps) {
            this.setState({ company: nextProps.company });
        }
    }, {
        key: "render",
        value: function render() {
            var _this2 = this;

            var company = this.props.company;

            return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                "div",
                { className: "base-input" },
                this.renderModal(),
                __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                    "label",
                    null,
                    this.context.t("Company address")
                ),
                __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement("input", {
                    type: "text",
                    value: company.legalName + ", " + company.address,
                    onClick: function onClick() {
                        _this2.setState({ isOpen: true });
                    },
                    placeholder: "" }),
                __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement("i", { className: "fa fa-edit", onClick: function onClick() {
                        _this2.setState({ isOpen: true });
                    } })
            );
        }
    }, {
        key: "onDataChange",
        value: function onDataChange(name, value) {
            this.setState(_defineProperty({}, name, value));
        }
    }]);

    return CompanyInformation;
}(__WEBPACK_IMPORTED_MODULE_0_react___default.a.Component);

CompanyInformation.contextTypes = {
    t: __WEBPACK_IMPORTED_MODULE_6_prop_types__["PropTypes"].func.isRequired
};

var mapStateToProps = function mapStateToProps(state) {
    return state.content;
};

var mapDispatchToProps = function mapDispatchToProps(dispatch) {
    return {
        updateContentValue: function updateContentValue(key, value) {
            return dispatch({
                type: 'UPDATE_CONTENT_VALUE',
                key: key,
                value: value
            });
        }
    };
};

/* harmony default export */ __webpack_exports__["a"] = (Object(__WEBPACK_IMPORTED_MODULE_1_react_redux__["connect"])(mapStateToProps, mapDispatchToProps)(CompanyInformation));

/***/ }),

/***/ "./src/AppBundle/Resources/public/javascript/sell/components/CurrencySelector.js":
/*!***************************************************************************************!*\
  !*** ./src/AppBundle/Resources/public/javascript/sell/components/CurrencySelector.js ***!
  \***************************************************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_react__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_classnames__ = __webpack_require__(/*! classnames */ "./node_modules/classnames/index.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_classnames___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_classnames__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_prop_types__ = __webpack_require__(/*! prop-types */ "./node_modules/prop-types/index.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_prop_types___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2_prop_types__);
var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }





var CURRENCIES = ['USD', 'EUR'];

var CurrencySelector = function (_React$Component) {
    _inherits(CurrencySelector, _React$Component);

    function CurrencySelector(props) {
        _classCallCheck(this, CurrencySelector);

        var _this = _possibleConstructorReturn(this, (CurrencySelector.__proto__ || Object.getPrototypeOf(CurrencySelector)).call(this, props));

        _this.state = {};
        return _this;
    }

    _createClass(CurrencySelector, [{
        key: 'render',
        value: function render() {
            var _props = this.props,
                _onClick = _props.onClick,
                selected = _props.selected;


            return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                'div',
                { className: 'select-currency' },
                __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                    'div',
                    { className: 'select-text' },
                    this.context.t("Currency")
                ),
                __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                    'div',
                    { className: 'currency-selector' },
                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        'div',
                        { className: 'current' },
                        selected
                    ),
                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        'div',
                        { className: 'dropdown' },
                        CURRENCIES.filter(function (currency) {
                            return currency !== selected;
                        }).map(function (currency) {
                            return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                'div',
                                { className: __WEBPACK_IMPORTED_MODULE_1_classnames___default()('currency-item'), onClick: function onClick() {
                                        return _onClick(currency);
                                    } },
                                currency
                            );
                        })
                    )
                )
            );
        }
    }]);

    return CurrencySelector;
}(__WEBPACK_IMPORTED_MODULE_0_react___default.a.Component);

CurrencySelector.contextTypes = {
    t: __WEBPACK_IMPORTED_MODULE_2_prop_types__["PropTypes"].func.isRequired
};

/* harmony default export */ __webpack_exports__["a"] = (CurrencySelector);

/***/ }),

/***/ "./src/AppBundle/Resources/public/javascript/sell/components/ExpirationDateSelector.js":
/*!*********************************************************************************************!*\
  !*** ./src/AppBundle/Resources/public/javascript/sell/components/ExpirationDateSelector.js ***!
  \*********************************************************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_react__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_react_datepicker__ = __webpack_require__(/*! react-datepicker */ "./node_modules/react-datepicker/es/index.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_moment__ = __webpack_require__(/*! moment */ "./node_modules/moment/moment.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_moment___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2_moment__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_react_redux__ = __webpack_require__(/*! react-redux */ "./node_modules/react-redux/es/index.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_prop_types__ = __webpack_require__(/*! prop-types */ "./node_modules/prop-types/index.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_prop_types___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_4_prop_types__);
var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }







var ExpirationDateSelector = function (_React$Component) {
    _inherits(ExpirationDateSelector, _React$Component);

    function ExpirationDateSelector(props) {
        _classCallCheck(this, ExpirationDateSelector);

        var _this = _possibleConstructorReturn(this, (ExpirationDateSelector.__proto__ || Object.getPrototypeOf(ExpirationDateSelector)).call(this, props));

        _this.handleStartDate = function (date) {
            _this.props.updateContentValue("expiresAt", date);
        };

        _this.state = {};
        return _this;
    }

    _createClass(ExpirationDateSelector, [{
        key: 'render',
        value: function render() {
            var expiresAt = this.props.expiresAt;


            return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                'div',
                { className: 'base-input' },
                __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                    'label',
                    null,
                    this.context.t("CL_STEP4_TITLE_EXPIRY")
                ),
                __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_1_react_datepicker__["default"], {
                    className: "date-picker",
                    selected: expiresAt ? __WEBPACK_IMPORTED_MODULE_2_moment___default()(expiresAt) : undefined,
                    onChange: this.handleStartDate,
                    minDate: __WEBPACK_IMPORTED_MODULE_2_moment___default()(),
                    fixedHeight: true,
                    placeholderText: "dd/mm/yyyy"
                })
            );
        }
    }]);

    return ExpirationDateSelector;
}(__WEBPACK_IMPORTED_MODULE_0_react___default.a.Component);

ExpirationDateSelector.contextTypes = {
    t: __WEBPACK_IMPORTED_MODULE_4_prop_types__["PropTypes"].func.isRequired
};

var mapStateToProps = function mapStateToProps(state) {
    return state.content;
};

var mapDispatchToProps = function mapDispatchToProps(dispatch) {
    return {
        updateContentValue: function updateContentValue(key, value) {
            return dispatch({
                type: 'UPDATE_CONTENT_VALUE',
                key: key,
                value: value
            });
        }
    };
};

/* harmony default export */ __webpack_exports__["a"] = (Object(__WEBPACK_IMPORTED_MODULE_3_react_redux__["connect"])(mapStateToProps, mapDispatchToProps)(ExpirationDateSelector));

/***/ }),

/***/ "./src/AppBundle/Resources/public/javascript/sell/components/JurisdictionSelector.js":
/*!*******************************************************************************************!*\
  !*** ./src/AppBundle/Resources/public/javascript/sell/components/JurisdictionSelector.js ***!
  \*******************************************************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_react__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_react_redux__ = __webpack_require__(/*! react-redux */ "./node_modules/react-redux/es/index.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__main_components_CountrySelector__ = __webpack_require__(/*! ../../main/components/CountrySelector */ "./src/AppBundle/Resources/public/javascript/main/components/CountrySelector.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_prop_types__ = __webpack_require__(/*! prop-types */ "./node_modules/prop-types/index.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_prop_types___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_3_prop_types__);
var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }






var JurisdictionSelector = function (_React$Component) {
    _inherits(JurisdictionSelector, _React$Component);

    function JurisdictionSelector(props) {
        _classCallCheck(this, JurisdictionSelector);

        var _this = _possibleConstructorReturn(this, (JurisdictionSelector.__proto__ || Object.getPrototypeOf(JurisdictionSelector)).call(this, props));

        _this.selectTerritory = function (value) {
            _this.props.updateContentValue("jurisdiction", value);
        };

        _this.state = {};
        return _this;
    }

    _createClass(JurisdictionSelector, [{
        key: "render",
        value: function render() {
            var jurisdiction = this.props.jurisdiction;

            return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                "div",
                { className: "base-input" },
                __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                    "label",
                    null,
                    this.context.t("CL_STEP4_LABEL_JURISDICTION")
                ),
                __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_2__main_components_CountrySelector__["a" /* default */], {
                    className: "base-input-select", multi: false, value: jurisdiction,
                    onChange: this.selectTerritory })
            );
        }
    }]);

    return JurisdictionSelector;
}(__WEBPACK_IMPORTED_MODULE_0_react___default.a.Component);

JurisdictionSelector.contextTypes = {
    t: __WEBPACK_IMPORTED_MODULE_3_prop_types__["PropTypes"].func.isRequired
};

var mapStateToProps = function mapStateToProps(state) {
    return state.content;
};

var mapDispatchToProps = function mapDispatchToProps(dispatch) {
    return {
        updateContentValue: function updateContentValue(key, value) {
            return dispatch({
                type: 'UPDATE_CONTENT_VALUE',
                key: key,
                value: value
            });
        }
    };
};

/* harmony default export */ __webpack_exports__["a"] = (Object(__WEBPACK_IMPORTED_MODULE_1_react_redux__["connect"])(mapStateToProps, mapDispatchToProps)(JurisdictionSelector));

/***/ }),

/***/ "./src/AppBundle/Resources/public/javascript/sell/components/LicenseDateSelector.js":
/*!******************************************************************************************!*\
  !*** ./src/AppBundle/Resources/public/javascript/sell/components/LicenseDateSelector.js ***!
  \******************************************************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_react__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_react_datepicker__ = __webpack_require__(/*! react-datepicker */ "./node_modules/react-datepicker/es/index.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_moment__ = __webpack_require__(/*! moment */ "./node_modules/moment/moment.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_moment___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2_moment__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_react_modal__ = __webpack_require__(/*! react-modal */ "./node_modules/react-modal/lib/index.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_react_modal___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_3_react_modal__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__main_styles_custom__ = __webpack_require__(/*! ../../main/styles/custom */ "./src/AppBundle/Resources/public/javascript/main/styles/custom.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5_prop_types__ = __webpack_require__(/*! prop-types */ "./node_modules/prop-types/index.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5_prop_types___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_5_prop_types__);
var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }








var LicenseDateSelector = function (_React$Component) {
    _inherits(LicenseDateSelector, _React$Component);

    function LicenseDateSelector(props) {
        _classCallCheck(this, LicenseDateSelector);

        var _this = _possibleConstructorReturn(this, (LicenseDateSelector.__proto__ || Object.getPrototypeOf(LicenseDateSelector)).call(this, props));

        _this.handleStartDate = function (date) {
            _this.onDataChange("startDate", date);
            _this.onDataChange("endDate", null);
        };

        _this.handleEndDate = function (date) {
            _this.onDataChange("endDate", date);
        };

        _this.handleEndDateLimit = function (e) {
            _this.onDataChange("endDateLimit", e.target.value);
        };

        _this.onOKClick = function () {
            var _this$props = _this.props,
                onClose = _this$props.onClose,
                onUpdate = _this$props.onUpdate;
            var _this$state = _this.state,
                startDate = _this$state.startDate,
                endDate = _this$state.endDate,
                endDateLimit = _this$state.endDateLimit,
                startDateMode = _this$state.startDateMode,
                endDateMode = _this$state.endDateMode;


            onUpdate("startDate", startDate);
            onUpdate("endDate", endDate);
            onUpdate("endDateLimit", endDateLimit);
            onUpdate("startDateMode", startDateMode);
            onUpdate("endDateMode", endDateMode);

            onClose();
        };

        _this.state = {
            isOpen: props.isOpen,
            startDate: props.startDate,
            endDate: props.endDate,
            endDateLimit: props.endDateLimit,
            startDateMode: props.startDateMode,
            endDateMode: props.endDateMode
        };
        return _this;
    }

    _createClass(LicenseDateSelector, [{
        key: 'componentWillReceiveProps',
        value: function componentWillReceiveProps(nextProps) {
            this.setState({
                isOpen: nextProps.isOpen,
                startDate: nextProps.startDate,
                endDate: nextProps.endDate,
                endDateLimit: nextProps.endDateLimit,
                startDateMode: nextProps.startDateMode,
                endDateMode: nextProps.endDateMode
            });
        }
    }, {
        key: 'render',
        value: function render() {
            var _this2 = this;

            var onClose = this.props.onClose;
            var _state = this.state,
                startDate = _state.startDate,
                endDate = _state.endDate,
                endDateLimit = _state.endDateLimit,
                startDateMode = _state.startDateMode,
                endDateMode = _state.endDateMode;

            var saveButtonTooltip = this.context.t(this.getSaveButtonTooltip());

            return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                __WEBPACK_IMPORTED_MODULE_3_react_modal___default.a,
                {
                    isOpen: this.state.isOpen,
                    bodyOpenClassName: "selector",
                    style: __WEBPACK_IMPORTED_MODULE_4__main_styles_custom__["c" /* customStyles */]
                },
                __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                    'div',
                    { className: 'modal-title' },
                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('i', { className: 'fa fa-edit' }),
                    this.context.t("license period"),
                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('i', { className: 'fa fa-times close-icon', onClick: onClose })
                ),
                __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                    'div',
                    { className: 'step-content step-content-custom' },
                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        'div',
                        { className: 'step-content-container' },
                        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                            'div',
                            { className: 'modal-input' },
                            __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                'label',
                                null,
                                this.context.t("CL_STEP3_LICENSE_POPUP_START")
                            ),
                            __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                'div',
                                { className: 'row' },
                                __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                    'div',
                                    { className: 'column' },
                                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('input', { type: 'radio',
                                        checked: startDateMode === "LICENSE",
                                        onChange: function onChange(e) {
                                            _this2.onDataChange("startDateMode", "LICENSE");
                                        },
                                        id: "license-start-contract",
                                        className: 'ca-radio package-selector'
                                    }),
                                    this.context.t("CL_STEP3_LICENSE_POPUP_START_CONCLUSION")
                                ),
                                __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                    'div',
                                    { className: 'column' },
                                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('input', { type: 'radio',
                                        checked: startDateMode === "DATE",
                                        onChange: function onChange(e) {
                                            _this2.onDataChange("startDateMode", "DATE");
                                        },
                                        id: "license-start",
                                        className: 'ca-radio package-selector'
                                    }),
                                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_1_react_datepicker__["default"], {
                                        className: "date-picker",
                                        selected: startDate ? __WEBPACK_IMPORTED_MODULE_2_moment___default()(startDate) : undefined,
                                        disabled: startDateMode !== "DATE",
                                        onChange: this.handleStartDate,
                                        placeholderText: "dd/mm/yyyy"
                                    })
                                )
                            )
                        ),
                        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                            'div',
                            { className: 'modal-input' },
                            __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                'label',
                                null,
                                this.context.t("CL_STEP3_LICENSE_POPUP_END")
                            ),
                            __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                'div',
                                { className: 'row' },
                                __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                    'div',
                                    { className: 'column' },
                                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('input', { type: 'radio',
                                        checked: endDateMode === "LIMITED",
                                        onChange: function onChange(e) {
                                            _this2.onDataChange("endDateMode", "LIMITED");
                                        },
                                        id: "license-end-input",
                                        className: 'ca-radio package-selector'
                                    }),
                                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('input', {
                                        type: "number",
                                        disabled: endDateMode !== "LIMITED",
                                        value: endDateLimit,
                                        onChange: this.handleEndDateLimit,
                                        placeholder: "Enter number" }),
                                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                        'span',
                                        { className: "small-label" },
                                        this.context.t("LISTING_DETAILS_LICENSE_END_DAYS")
                                    )
                                ),
                                __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                    'div',
                                    { className: 'column' },
                                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('input', { type: 'radio',
                                        checked: endDateMode === "DATE",
                                        onChange: function onChange(e) {
                                            _this2.onDataChange("endDateMode", "DATE");
                                        },
                                        id: "license-end",
                                        className: 'ca-radio package-selector'
                                    }),
                                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_1_react_datepicker__["default"], {
                                        className: "date-picker",
                                        minDate: startDateMode !== "DATE" ? __WEBPACK_IMPORTED_MODULE_2_moment___default()() : __WEBPACK_IMPORTED_MODULE_2_moment___default()(startDate),
                                        selected: endDate ? __WEBPACK_IMPORTED_MODULE_2_moment___default()(endDate) : undefined,
                                        disabled: endDateMode !== "DATE",
                                        onChange: this.handleEndDate,
                                        placeholderText: "dd/mm/yyyy"
                                    })
                                ),
                                __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                    'div',
                                    { className: 'column' },
                                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('input', { type: 'radio',
                                        checked: endDateMode === "UNLIMITED",
                                        onChange: function onChange(e) {
                                            _this2.onDataChange("endDateMode", "UNLIMITED");
                                        },
                                        id: "license-end-unlimited",
                                        className: 'ca-radio package-selector'
                                    }),
                                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                        'span',
                                        { style: { padding: '12px 0' } },
                                        this.context.t("Unlimited")
                                    )
                                )
                            )
                        )
                    )
                ),
                __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                    'div',
                    { className: "buttons popup-buttons" },
                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        'button',
                        {
                            title: saveButtonTooltip,
                            disabled: !!saveButtonTooltip,
                            className: "standard-button",
                            onClick: this.onOKClick },
                        this.context.t("Accept")
                    )
                )
            );
        }
    }, {
        key: 'getSaveButtonTooltip',
        value: function getSaveButtonTooltip() {
            var _state2 = this.state,
                startDate = _state2.startDate,
                endDate = _state2.endDate,
                endDateLimit = _state2.endDateLimit,
                startDateMode = _state2.startDateMode,
                endDateMode = _state2.endDateMode;


            if (startDateMode === 'DATE' && (!startDate || !__WEBPACK_IMPORTED_MODULE_2_moment___default()(startDate).isValid())) {
                return 'Please specify correct date for Start of license period';
            }

            if (endDateMode === 'DATE' && (!endDate || !__WEBPACK_IMPORTED_MODULE_2_moment___default()(endDate).isValid() || endDate.isBefore(startDate))) {
                return 'Please specify correct date for End of license period';
            }

            if (endDateMode === 'LIMITED' && (!endDateLimit || isNaN(endDateLimit) || endDateLimit < 1)) {
                return 'Please specify correct days limit for End of license period';
            }

            if (!endDateMode) {
                return 'Please specify End of license period';
            }
        }
    }, {
        key: 'onDataChange',
        value: function onDataChange(name, value) {
            this.setState(_defineProperty({}, name, value));
        }
    }]);

    return LicenseDateSelector;
}(__WEBPACK_IMPORTED_MODULE_0_react___default.a.Component);

LicenseDateSelector.contextTypes = {
    t: __WEBPACK_IMPORTED_MODULE_5_prop_types__["PropTypes"].func.isRequired
};

/* harmony default export */ __webpack_exports__["a"] = (LicenseDateSelector);

/***/ }),

/***/ "./src/AppBundle/Resources/public/javascript/sell/components/ListingName.js":
/*!**********************************************************************************!*\
  !*** ./src/AppBundle/Resources/public/javascript/sell/components/ListingName.js ***!
  \**********************************************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_react__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_react_redux__ = __webpack_require__(/*! react-redux */ "./node_modules/react-redux/es/index.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_prop_types__ = __webpack_require__(/*! prop-types */ "./node_modules/prop-types/index.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_prop_types___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2_prop_types__);
var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }





var ListingName = function (_React$Component) {
    _inherits(ListingName, _React$Component);

    function ListingName(props) {
        _classCallCheck(this, ListingName);

        var _this = _possibleConstructorReturn(this, (ListingName.__proto__ || Object.getPrototypeOf(ListingName)).call(this, props));

        _this.updateName = function (e) {
            _this.props.updateContentValue("name", e.target.value);
        };

        _this.state = {};
        return _this;
    }

    _createClass(ListingName, [{
        key: "componentDidMount",
        value: function componentDidMount() {
            var element = document.querySelectorAll('.step-content.step-4 .listing-summary');

            if (element) {
                var node = element[0];
                this.setState({
                    name: node.textContent
                });
            }
        }
    }, {
        key: "render",
        value: function render() {
            var name = this.props.name;

            return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                "div",
                { className: "base-input" },
                __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                    "label",
                    null,
                    this.context.t("Listing name")
                ),
                __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement("input", {
                    type: "text",
                    value: name || this.state.name,
                    onChange: this.updateName,
                    placeholder: "",
                    maxLength: 70
                })
            );
        }
    }]);

    return ListingName;
}(__WEBPACK_IMPORTED_MODULE_0_react___default.a.Component);

ListingName.contextTypes = {
    t: __WEBPACK_IMPORTED_MODULE_2_prop_types__["PropTypes"].func.isRequired
};

var mapStateToProps = function mapStateToProps(state) {
    return state.content;
};

var mapDispatchToProps = function mapDispatchToProps(dispatch) {
    return {
        updateContentValue: function updateContentValue(key, value) {
            return dispatch({
                type: 'UPDATE_CONTENT_VALUE',
                key: key,
                value: value
            });
        }
    };
};

/* harmony default export */ __webpack_exports__["a"] = (Object(__WEBPACK_IMPORTED_MODULE_1_react_redux__["connect"])(mapStateToProps, mapDispatchToProps)(ListingName));

/***/ }),

/***/ "./src/AppBundle/Resources/public/javascript/sell/components/Match.js":
/*!****************************************************************************!*\
  !*** ./src/AppBundle/Resources/public/javascript/sell/components/Match.js ***!
  \****************************************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_react__);
var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }



var Match = function (_React$Component) {
    _inherits(Match, _React$Component);

    function Match(props) {
        _classCallCheck(this, Match);

        var _this = _possibleConstructorReturn(this, (Match.__proto__ || Object.getPrototypeOf(Match)).call(this, props));

        _this.toggle = function (e) {
            _this.setState(function (prevState) {
                return {
                    selected: !prevState.selected
                };
            });

            _this.props.onUpdate(!_this.state.selected);

            e.stopPropagation();
        };

        _this.update = function (selected) {
            _this.setState({ selected: selected });
        };

        _this.state = {
            match: props.match,
            selected: props.selected || false
        };
        return _this;
    }

    _createClass(Match, [{
        key: "render",
        value: function render() {
            var _this2 = this;

            var competitorsLen = this.props.match.competitors.length;
            return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                "div",
                { className: "match ", onClick: function onClick() {
                        _this2.props.onSelect(_this2.props.match.externalId);
                    } },
                this.props.match.selected && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement("i", { className: "fa fa-circle" }),
                !this.props.match.selected && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement("i", { className: "fa fa-circle-o" }),
                this.props.match.competitors.map(function (competitor, i) {
                    return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        "span",
                        { key: i },
                        competitor.name,
                        " ",
                        competitorsLen !== i + 1 && " vs "
                    );
                })
            );
        }
    }]);

    return Match;
}(__WEBPACK_IMPORTED_MODULE_0_react___default.a.Component);

/* harmony default export */ __webpack_exports__["a"] = (Match);

/***/ }),

/***/ "./src/AppBundle/Resources/public/javascript/sell/components/PopupRight.js":
/*!*********************************************************************************!*\
  !*** ./src/AppBundle/Resources/public/javascript/sell/components/PopupRight.js ***!
  \*********************************************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_react__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_react_modal__ = __webpack_require__(/*! react-modal */ "./node_modules/react-modal/lib/index.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_react_modal___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_react_modal__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_lodash_cloneDeep__ = __webpack_require__(/*! lodash/cloneDeep */ "./node_modules/lodash/cloneDeep.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_lodash_cloneDeep___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2_lodash_cloneDeep__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_lodash_toNumber__ = __webpack_require__(/*! lodash/toNumber */ "./node_modules/lodash/toNumber.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_lodash_toNumber___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_3_lodash_toNumber__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_lodash_isFinite__ = __webpack_require__(/*! lodash/isFinite */ "./node_modules/lodash/isFinite.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_lodash_isFinite___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_4_lodash_isFinite__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5_lodash_isEqual__ = __webpack_require__(/*! lodash/isEqual */ "./node_modules/lodash/isEqual.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5_lodash_isEqual___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_5_lodash_isEqual__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__main_styles_custom__ = __webpack_require__(/*! ../../main/styles/custom */ "./src/AppBundle/Resources/public/javascript/main/styles/custom.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__RightItemsDefinitions__ = __webpack_require__(/*! ./RightItemsDefinitions */ "./src/AppBundle/Resources/public/javascript/sell/components/RightItemsDefinitions.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__main_components_LanguageSelector__ = __webpack_require__(/*! ../../main/components/LanguageSelector */ "./src/AppBundle/Resources/public/javascript/main/components/LanguageSelector.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9__SuperRightDefinitions__ = __webpack_require__(/*! ./SuperRightDefinitions */ "./src/AppBundle/Resources/public/javascript/sell/components/SuperRightDefinitions.js");
var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }












var numberFieldStyle = { width: '30px', paddingLeft: '10px' };

var getLanguagesString = function getLanguagesString(languages) {
    return languages.map(function (item) {
        return item.label;
    }).join(', ');
};

var getCustomValueString = function getCustomValueString(firstPackage, currentRights, rightItemsDefinitions, item, predicate) {
    var rightLabel = nameToCustomValueConfig[item].key;
    var rightLabelCustom = nameToCustomValueConfig[item].value;

    if (currentRights === rightLabel) {
        return predicate(firstPackage.selectedRights[rightLabelCustom]);
    } else {
        return rightItemsDefinitions[currentRights].label;
    }
};

var nameToCustomValueConfig = {
    CAMERA: {
        key: 'CAMERA_MINIMUM',
        value: 'CAMERAS'
    },
    RUNS: {
        key: 'RUNS_LIMITED',
        value: 'RUNS_NUMBER'
    },
    ASPECT_RATIO: {
        key: 'ASPECT_RATIO_CUSTOM',
        value: 'ASPECT_RATIO_TEXT'
    },
    COMMENTARY: {
        key: 'COMMENTARY_YES',
        value: 'COMMENTARY_LANGUAGES'
    },
    GRAPHICS: {
        key: 'GRAPHICS_YES',
        value: 'GRAPHICS_LANGUAGES'
    }
};

var PopupRight = function (_React$Component) {
    _inherits(PopupRight, _React$Component);

    function PopupRight(props) {
        _classCallCheck(this, PopupRight);

        var _this = _possibleConstructorReturn(this, (PopupRight.__proto__ || Object.getPrototypeOf(PopupRight)).call(this, props));

        _this.toggleAll = function (rightItem) {
            var selection = _this.state.selection;

            if (selection.get(rightItem).has(0)) {
                selection.get(rightItem).clear();
            } else {
                _this.state.activePackages.forEach(function (rightPackage) {
                    selection.get(rightItem).set(rightPackage.id, true);
                });

                selection.get(rightItem).set(0, true);
            }

            _this.setState({ selection: selection });
        };

        _this.select = function (rightItem, rightPackage) {
            var selection = _this.state.selection;

            if (!_this.state.activePackages.has(rightPackage)) return false;

            if (!_this.props.data.multiple) {

                selection.forEach(function (item, key) {
                    if (key !== rightItem) item.clear();
                });
            }
            selection.get(rightItem).set(rightPackage, true);
            _this.setState({ selection: selection });
        };

        _this.unselect = function (rightItem, rightPackage) {
            var selection = _this.state.selection;
            selection.get(rightItem).delete(rightPackage);
            selection.get(rightItem).delete(0);
            _this.setState({ selection: selection });
        };

        _this.toggle = function (rightItem, rightPackage) {
            var selection = _this.state.selection;
            if (selection.get(rightItem).has(rightPackage)) {
                _this.unselect(rightItem, rightPackage);
            } else {
                _this.select(rightItem, rightPackage);
            }
        };

        _this.isSelected = function (rightItem, rightPackage) {
            var selection = _this.state.selection;
            return selection.get(rightItem).has(rightPackage);
        };

        _this.packageIsActive = function (id) {
            return _this.state.activePackages.has(id) && _this.state.availablePackages.has(id);
        };

        _this.setDate = function (date, rightItem, rightPackage) {
            var selection = _this.state.selection;

            if (!_this.state.activePackages.has(rightPackage)) return false;

            selection.get(rightItem).set(rightPackage, date);
            _this.setState({ selection: selection });
        };

        _this.togglePopup = function () {
            var _this$props = _this.props,
                onProgram = _this$props.onProgram,
                id = _this$props.id,
                onUpdate = _this$props.onUpdate;


            if (id === "PROGRAM") {
                onProgram();
                return;
            }

            _this.setState(function (_ref) {
                var isOpen = _ref.isOpen,
                    rightsPackage = _ref.rightsPackage;

                if (!isOpen) {
                    _this.prevRightsPackage = new Map();
                    rightsPackage.forEach(function (item) {
                        _this.prevRightsPackage.set(item.id, __WEBPACK_IMPORTED_MODULE_2_lodash_cloneDeep___default()(item));
                    });
                }

                return {
                    isOpen: !isOpen
                };
            });
        };

        _this.closePopupAndRestoreData = function () {
            var onUpdate = _this.props.onUpdate;


            onUpdate(_this.prevRightsPackage);
            _this.prevRightsPackage = null;
            _this.togglePopup();
        };

        _this.onOKClicked = function () {
            _this.togglePopup();
        };

        _this.updateSelection = function (val, id, rightPackage) {
            var rightsPackage = _this.state.rightsPackage;
            rightPackage.selectedRights[id] = val;
            rightsPackage.set(rightPackage.id, rightPackage);

            _this.props.onUpdate(rightsPackage);
        };

        _this.updateMultipleSelection = function (val, id, rightPackage) {

            var rightsPackage = _this.state.rightsPackage;
            var index = rightPackage.selectedRights[id].indexOf(val);
            var all = __WEBPACK_IMPORTED_MODULE_7__RightItemsDefinitions__["a" /* RightItemsDefinitions */][val].all;
            var alls = __WEBPACK_IMPORTED_MODULE_7__RightItemsDefinitions__["a" /* RightItemsDefinitions */];

            if (index === -1) {

                if (all) {
                    rightPackage.selectedRights[id] = [val];
                } else {
                    rightPackage.selectedRights[id] = [].concat(_toConsumableArray(rightPackage.selectedRights[id]), [val]);

                    rightPackage.selectedRights[id].forEach(function (item, index, object) {
                        var m = item.match(/_ALL/g);
                        if (m) {
                            object.splice(index, 1);
                        }
                    });
                }
            } else {
                if (rightPackage.selectedRights[id].length > 1) rightPackage.selectedRights[id].splice(index, 1);
            }

            rightsPackage.set(rightPackage.id, rightPackage);

            _this.props.onUpdate(rightsPackage);
        };

        _this.updateSelectionInAllPackages = function (val, id) {

            var rightsPackage = _this.state.rightsPackage;
            rightsPackage.forEach(function (rightPackage) {
                rightPackage.selectedRights[id] = val;
            });
            _this.props.onUpdate(rightsPackage);
        };

        _this.isMultipleValuesSelected = function (id, rightsPackages) {
            var custom = false;
            var selected = void 0;

            rightsPackages.forEach(function (rightsPackage) {
                if (!rightsPackage.selectedRights) {
                    return false;
                }

                var current = rightsPackage.selectedRights[id];

                switch (id) {
                    case 'RUNS':
                        var rightLabel = nameToCustomValueConfig[id].key;
                        var rightLabelCustom = nameToCustomValueConfig[id].value;

                        if (current === rightLabel) {
                            current = rightsPackage.selectedRights[rightLabelCustom];
                        }
                        break;
                    default:
                        break;
                }

                if (selected === undefined) {
                    selected = current;
                    return false;
                }

                if (Array.isArray(current) && Array.isArray(selected)) {
                    current = [].concat(_toConsumableArray(current));
                    current.sort();
                    selected.sort();

                    if (!__WEBPACK_IMPORTED_MODULE_5_lodash_isEqual___default()(current, selected)) {
                        custom = true;
                        return true;
                    }
                } else if (current != selected) {
                    custom = true;
                    return true;
                }
            });

            return custom;
        };

        _this.hasSelection = function (id, value, superRights) {
            var checkContentDelivery = _this.props.checkContentDelivery;


            var has = false;

            superRights.forEach(function (superRight) {

                if (checkContentDelivery && superRight.selectedRights.CONTENT_DELIVERY === "CONTENT_DELIVERY_NON_DEDICATED") return false;

                var selected = superRight.selectedRights[id];
                if (Array.isArray(selected)) {
                    if (selected.indexOf(value) !== -1) has = true;
                } else if (selected === value) has = true;
            });

            return has;
        };

        _this.renderModalRow = function (rightPackage) {
            var _this$props2 = _this.props,
                multiple = _this$props2.multiple,
                options = _this$props2.options,
                id = _this$props2.id,
                productionLabel = _this$props2.productionLabel,
                rightsPackage = _this$props2.rightsPackage;
            var productionLabels = _this.state.productionLabels;

            var packagesAvailable = rightsPackage.map(function (rp) {
                return rp.shortLabel;
            });
            return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                'div',
                { className: 'row' },
                __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                    'div',
                    { className: 'column', style: { justifyContent: "flex-start", flex: 3 } },
                    !productionLabel && rightPackage.name,
                    productionLabel && productionLabels[rightPackage.shortLabel]
                ),
                options.map(function (option, i, list) {

                    var flex = list.length > 2 ? 2 : 3;
                    var disabled = false;
                    var definition = __WEBPACK_IMPORTED_MODULE_7__RightItemsDefinitions__["a" /* RightItemsDefinitions */][option];
                    if (__WEBPACK_IMPORTED_MODULE_7__RightItemsDefinitions__["a" /* RightItemsDefinitions */][option].language) flex = flex + 2;
                    if (definition.hideIf && definition.hideIf.filter(function (sl) {
                        return packagesAvailable.indexOf(sl) !== -1;
                    }).length > 0) return null;
                    if (definition.disabledIf && definition.disabledIf.indexOf(rightPackage.shortLabel) !== -1) disabled = true;
                    return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        'div',
                        { className: 'column', style: { flex: flex } },
                        multiple && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('input', { checked: rightPackage.selectedRights[id].indexOf(option) !== -1,
                            onChange: function onChange(e) {
                                _this.updateMultipleSelection(option, id, rightPackage);
                            },
                            type: 'checkbox',
                            id: rightPackage.shortLabel + "_" + option }),
                        multiple && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('label', { htmlFor: rightPackage.shortLabel + "_" + option }),
                        !multiple && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('input', {
                            checked: rightPackage.selectedRights[id] === option,
                            type: 'radio',
                            className: 'ca-radio',
                            disabled: disabled,
                            onChange: function onChange(e) {
                                _this.updateSelection(e.target.value, id, rightPackage);
                            },
                            name: rightPackage.shortLabel + "_" + id, value: option }),
                        __WEBPACK_IMPORTED_MODULE_7__RightItemsDefinitions__["a" /* RightItemsDefinitions */][option].language && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_8__main_components_LanguageSelector__["a" /* LanguageSelector */], {
                            onChange: function onChange(value) {
                                _this.updateSelection(value, id + "_LANGUAGES", rightPackage);
                                _this.updateSelection(option, id, rightPackage);
                            },
                            value: rightPackage.selectedRights[id + "_LANGUAGES"] }),
                        __WEBPACK_IMPORTED_MODULE_7__RightItemsDefinitions__["a" /* RightItemsDefinitions */][option].textField && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('input', {
                            onChange: function onChange(e) {
                                _this.updateSelection(e.target.value, id + "_TEXT", rightPackage);
                            },
                            value: rightPackage.selectedRights[id + "_TEXT"],
                            className: 'text-field',
                            type: 'text' }),
                        __WEBPACK_IMPORTED_MODULE_7__RightItemsDefinitions__["a" /* RightItemsDefinitions */][option].numberField && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('input', {
                            className: 'text-field',
                            style: numberFieldStyle,
                            type: 'number',
                            onChange: function onChange(e) {
                                _this.updateSelection(e.target.value, _this.getNumberFieldKey(__WEBPACK_IMPORTED_MODULE_7__RightItemsDefinitions__["a" /* RightItemsDefinitions */][option], id), rightPackage);
                            },
                            value: rightPackage.selectedRights[_this.getNumberFieldKey(__WEBPACK_IMPORTED_MODULE_7__RightItemsDefinitions__["a" /* RightItemsDefinitions */][option], id)],
                            min: 0 }),
                        __WEBPACK_IMPORTED_MODULE_7__RightItemsDefinitions__["a" /* RightItemsDefinitions */][option].bigTextField && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('textarea', { style: { minHeight: "50px", margin: "5px 0px" } })
                    );
                })
            );
        };

        _this.renderModal = function () {
            var _this$props3 = _this.props,
                name = _this$props3.name,
                description = _this$props3.description,
                options = _this$props3.options,
                id = _this$props3.id,
                superRights = _this$props3.superRights,
                showTextArea = _this$props3.showTextArea,
                rightsPackage = _this$props3.rightsPackage,
                technicalFee = _this$props3.technicalFee,
                checkContentDelivery = _this$props3.checkContentDelivery,
                global = _this$props3.global,
                language = _this$props3.language,
                languages = _this$props3.languages,
                onUpdateListing = _this$props3.onUpdateListing;


            var packagesAvailable = rightsPackage.map(function (rp) {
                return rp.shortLabel;
            });
            var deliveryViaLiveFeed = rightsPackage.filter(function (rp) {
                return rp.selectedRights.CONTENT_DELIVERY === "CONTENT_DELIVERY_LIVE";
            });

            return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                __WEBPACK_IMPORTED_MODULE_1_react_modal___default.a,
                {
                    isOpen: _this.state.isOpen,
                    bodyOpenClassName: "selector",
                    style: __WEBPACK_IMPORTED_MODULE_6__main_styles_custom__["c" /* customStyles */]
                },
                __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                    'div',
                    { className: 'modal-title' },
                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('i', { className: 'fa fa-edit' }),
                    name,
                    description && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('i', { className: 'fa fa-info-circle tooltip-icon', title: description }),
                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('i', { className: 'fa fa-comments' }),
                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('i', { className: 'fa fa-times close-icon', onClick: _this.closePopupAndRestoreData })
                ),
                __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                    'div',
                    { className: 'step-content' },
                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        'div',
                        { className: 'step-content-container' },
                        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                            'div',
                            { className: 'modal-table' },
                            __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                'div',
                                { className: 'row row-header' },
                                !global && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('div', { className: 'column', style: { justifyContent: "flex-start", flex: 3 } }),
                                global && language && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                    'div',
                                    { className: 'column', style: { flex: 3 } },
                                    'Licensed languages'
                                ),
                                options.map(function (option, i, list) {
                                    var flex = list.length > 2 ? 2 : 3;

                                    var definition = __WEBPACK_IMPORTED_MODULE_7__RightItemsDefinitions__["a" /* RightItemsDefinitions */][option];
                                    if (definition.language) flex = flex + 2;
                                    var label = definition.label;

                                    if (definition.hideIf && definition.hideIf.filter(function (sl) {
                                        return packagesAvailable.indexOf(sl) !== -1;
                                    }).length > 0) return null;

                                    return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                        'div',
                                        { className: 'column', style: { flex: flex } },
                                        label && label
                                    );
                                })
                            ),
                            global && language && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_8__main_components_LanguageSelector__["a" /* LanguageSelector */], {
                                onChange: function onChange(value) {
                                    onUpdateListing("LICENSED_LANGUAGES", value);
                                },
                                value: languages }),
                            deliveryViaLiveFeed.length > 0 && id !== "CONTENT_DELIVERY" && packagesAvailable.indexOf("LT") === -1 && checkContentDelivery && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                'div',
                                { className: 'row' },
                                __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                    'div',
                                    { className: 'column', style: { justifyContent: "flex-start", flex: 3 } },
                                    'Live Transmission'
                                ),
                                options.map(function (option, i, list) {
                                    var flex = list.length > 2 ? 2 : 3;
                                    var disabled = false;
                                    var definition = __WEBPACK_IMPORTED_MODULE_7__RightItemsDefinitions__["a" /* RightItemsDefinitions */][option];
                                    if (definition.language) flex = flex + 2;
                                    if (definition.hideIf && definition.hideIf.filter(function (sl) {
                                        return packagesAvailable.indexOf(sl) !== -1;
                                    }).length > 0) return null;

                                    var customId = "LIVE_FEED_" + id;
                                    var customProp = rightsPackage[0].selectedRights[customId];
                                    return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                        'div',
                                        { className: 'column', style: { flex: flex } },
                                        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('input', {
                                            defaultChecked: customProp === option,
                                            type: 'radio',
                                            className: 'ca-radio',
                                            disabled: disabled,
                                            onChange: function onChange(e) {
                                                _this.updateSelection(e.target.value, customId, rightsPackage[0]);
                                            },
                                            name: customId + "_" + id, value: option }),
                                        definition.language && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_8__main_components_LanguageSelector__["a" /* LanguageSelector */], {
                                            onChange: function onChange(value) {
                                                _this.updateSelection(value, customId + "_LANGUAGES", rightsPackage[0]);
                                            },
                                            value: rightsPackage[0].selectedRights[customId + "_LANGUAGES"] }),
                                        definition.textField && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('input', {
                                            onChange: function onChange(e) {
                                                _this.updateSelection(e.target.value, customId + "_TEXT", rightsPackage[0]);
                                            },
                                            value: rightsPackage[0].selectedRights[customId + "_TEXT"],
                                            className: 'text-field',
                                            type: 'text' }),
                                        definition.numberField && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('input', {
                                            className: 'text-field',
                                            style: numberFieldStyle,
                                            type: 'number',
                                            onChange: function onChange(e) {
                                                _this.updateSelection(e.target.value, _this.getNumberFieldKey(definition, customId), rightsPackage[0]);
                                            },
                                            value: rightsPackage[0].selectedRights[_this.getNumberFieldKey(definition, customId)],
                                            min: 0 })
                                    );
                                })
                            ),
                            !global && rightsPackage.map(function (rightPackage) {
                                if (superRights.length > 0 && superRights.indexOf(rightPackage.shortLabel) === -1) return;

                                if (checkContentDelivery && id !== "CONTENT_DELIVERY" && (rightPackage.selectedRights.CONTENT_DELIVERY === "CONTENT_DELIVERY_NON_DEDICATED" || rightPackage.selectedRights.CONTENT_DELIVERY === "CONTENT_DELIVERY_LIVE")
                                //&& packagesAvailable.indexOf("LT") === -1
                                ) {
                                        return;
                                    }
                                return _this.renderModalRow(rightPackage);
                            }),
                            showTextArea && (showTextArea === "ALL" || _this.hasSelection(id, showTextArea, rightsPackage)) && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('textarea', {
                                placeholder: "Enter text to proceed",
                                onChange: function onChange(e) {
                                    _this.updateSelectionInAllPackages(e.target.value, id + "_TEXTAREA");
                                },
                                value: rightsPackage[0].selectedRights[id + "_TEXTAREA"] }),
                            showTextArea && showTextArea === "FURTHER_DETAILS" && rightsPackage && rightsPackage.length > 0 && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                'div',
                                { style: { padding: "0 15px" } },
                                __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                    'div',
                                    { style: { fontWeight: 600, padding: "15px 0 5px" } },
                                    'Further details'
                                ),
                                __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('textarea', {

                                    onChange: function onChange(e) {
                                        _this.updateSelectionInAllPackages(e.target.value, "TECHNICAL_FEE_DETAILS");
                                    },
                                    value: rightsPackage[0].selectedRights["TECHNICAL_FEE_DETAILS"] })
                            ),
                            technicalFee && _this.hasSelection(id, technicalFee, rightsPackage) && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                'div',
                                { style: { padding: "0 15px" } },
                                __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                    'div',
                                    { style: { fontWeight: 600, padding: "15px 0 5px" } },
                                    'Technical fee'
                                ),
                                __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                    'div',
                                    null,
                                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('input', {
                                        style: { width: '20px' },
                                        defaultChecked: rightsPackage[0].selectedRights["TECHNICAL_FEE"] === "INCLUDED",
                                        type: 'radio',
                                        className: 'ca-radio',
                                        value: "INCLUDED",
                                        onChange: function onChange(e) {
                                            _this.updateSelectionInAllPackages(e.target.value, "TECHNICAL_FEE");
                                        },
                                        name: 'TECHNICAL_FEE' }),
                                    ' Technical fee included in license fee'
                                ),
                                __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                    'div',
                                    null,
                                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('input', {
                                        style: { width: '20px' },
                                        checked: rightsPackage[0].selectedRights["TECHNICAL_FEE"] === "ON_TOP",
                                        type: 'radio',
                                        className: 'ca-radio',
                                        value: "ON_TOP",
                                        onChange: function onChange(e) {
                                            _this.updateSelectionInAllPackages(e.target.value, "TECHNICAL_FEE");
                                        },
                                        name: 'TECHNICAL_FEE' }),
                                    ' Technical fee charged on top of license fee',
                                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('input', {
                                        style: { width: '70px', margin: '1px 10px' },
                                        onChange: function onChange(e) {
                                            _this.updateSelectionInAllPackages(e.target.value, "TECHNICAL_FEE_PERCENTAGE");
                                        },
                                        value: rightsPackage[0].selectedRights["TECHNICAL_FEE_PERCENTAGE"],
                                        type: 'number',
                                        max: 100,
                                        min: 0,
                                        onFocus: function onFocus(e) {
                                            _this.updateSelectionInAllPackages("ON_TOP", "TECHNICAL_FEE");
                                        } }),
                                    '% technical fee'
                                )
                            )
                        )
                    )
                ),
                __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                    'div',
                    { className: "buttons popup-buttons" },
                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        'button',
                        {
                            className: "cancel-button",
                            onClick: _this.closePopupAndRestoreData },
                        'Cancel'
                    ),
                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        'button',
                        {
                            disabled: !_this.showOkButton(),
                            className: "standard-button",
                            onClick: _this.onOKClicked },
                        'Accept'
                    )
                )
            );
        };

        _this.showOkButton = function () {
            var _this$props4 = _this.props,
                name = _this$props4.name,
                multiple = _this$props4.multiple,
                options = _this$props4.options,
                id = _this$props4.id,
                superRights = _this$props4.superRights,
                showTextArea = _this$props4.showTextArea,
                rightsPackage = _this$props4.rightsPackage,
                technicalFee = _this$props4.technicalFee,
                global = _this$props4.global,
                language = _this$props4.language,
                languages = _this$props4.languages;


            var response = true;
            var contentDeliveryCounter = 0;

            if (global && language) {
                return languages.length > 0;
            }

            if (showTextArea) {
                if (showTextArea === "ALL" || _this.hasSelection(id, showTextArea, rightsPackage)) {
                    if (!rightsPackage[0].selectedRights[id + "_TEXTAREA"] || rightsPackage[0].selectedRights[id + "_TEXTAREA"] === "") return false;
                }
            }

            if (id === "CONTENT_DELIVERY") {
                rightsPackage.forEach(function (rp) {
                    if (rp.selectedRights[id] === "CONTENT_DELIVERY_NON_DEDICATED") contentDeliveryCounter++;
                });
                if (rightsPackage.length === contentDeliveryCounter) response = false;
            }

            if (rightsPackage && rightsPackage[0] && rightsPackage[0].selectedRights) {
                rightsPackage.forEach(function (right) {
                    if (__WEBPACK_IMPORTED_MODULE_7__RightItemsDefinitions__["a" /* RightItemsDefinitions */][right.selectedRights[id]] && __WEBPACK_IMPORTED_MODULE_7__RightItemsDefinitions__["a" /* RightItemsDefinitions */][right.selectedRights[id]].language) {
                        if (!right.selectedRights[id + '_LANGUAGES'] || right.selectedRights[id + '_LANGUAGES'].length === 0) {
                            response = false;
                        }
                    }
                });

                rightsPackage.forEach(function (right) {
                    if (__WEBPACK_IMPORTED_MODULE_7__RightItemsDefinitions__["a" /* RightItemsDefinitions */][right.selectedRights[id]] && __WEBPACK_IMPORTED_MODULE_7__RightItemsDefinitions__["a" /* RightItemsDefinitions */][right.selectedRights[id]].textField) {
                        if (!right.selectedRights[id + '_TEXT'] || right.selectedRights[id + '_TEXT'].length === 0) {
                            response = false;
                        }
                    }
                });

                rightsPackage.forEach(function (right) {
                    if (__WEBPACK_IMPORTED_MODULE_7__RightItemsDefinitions__["a" /* RightItemsDefinitions */][right.selectedRights[id]] && __WEBPACK_IMPORTED_MODULE_7__RightItemsDefinitions__["a" /* RightItemsDefinitions */][right.selectedRights[id]].numberField) {
                        var numberKey = _this.getNumberFieldKey(__WEBPACK_IMPORTED_MODULE_7__RightItemsDefinitions__["a" /* RightItemsDefinitions */][right.selectedRights[id]], id);
                        var numberString = right.selectedRights[numberKey];
                        var number = numberString ? __WEBPACK_IMPORTED_MODULE_3_lodash_toNumber___default()(numberString) : null;

                        if (!number || !__WEBPACK_IMPORTED_MODULE_4_lodash_isFinite___default()(number) || number < 0) {
                            response = false;
                        }
                    }
                });
            }
            return response;
        };

        _this.state = {
            rightsPackage: new Map(props.rightsPackage.map(function (i) {
                return [i.id, i];
            })),
            isOpen: false,
            selected: props.selected,
            custom: false,
            productionLabels: __WEBPACK_IMPORTED_MODULE_9__SuperRightDefinitions__["c" /* SuperRightProductionDetailsLabels */]
        };
        return _this;
    }

    _createClass(PopupRight, [{
        key: 'componentWillReceiveProps',
        value: function componentWillReceiveProps(props) {
            //console.log("PopupRight - props",props);
            this.setState({
                rightsPackage: new Map(props.rightsPackage.map(function (i) {
                    return [i.id, i];
                }))
            });
        }
    }, {
        key: 'filterRightsPackage',
        value: function filterRightsPackage(id, rightsPackages) {
            var _props = this.props,
                checkContentDelivery = _props.checkContentDelivery,
                superRights = _props.superRights;


            return rightsPackages.filter(function (rightsPackage) {
                if (superRights.length > 0 && superRights.indexOf(rightsPackage.shortLabel) === -1) {
                    return false;
                }

                if (checkContentDelivery && id !== "CONTENT_DELIVERY" && (rightsPackage.selectedRights.CONTENT_DELIVERY === "CONTENT_DELIVERY_NON_DEDICATED" || rightsPackage.selectedRights.CONTENT_DELIVERY === "CONTENT_DELIVERY_LIVE")) {
                    return false;
                }

                return true;
            });
        }
    }, {
        key: 'getNumberFieldKey',
        value: function getNumberFieldKey(rightItemDefinition, id) {
            return rightItemDefinition.numberFieldValue || id + "_NUMBER";
        }
    }, {
        key: 'render',
        value: function render() {
            var _props2 = this.props,
                name = _props2.name,
                rightsPackage = _props2.rightsPackage,
                programName = _props2.programName,
                languages = _props2.languages,
                checkContentDelivery = _props2.checkContentDelivery;

            var id = this.props.id;

            var rightsPackageFiltered = this.filterRightsPackage(id, rightsPackage);

            var isMultipleValuesSelected = this.isMultipleValuesSelected(id, rightsPackageFiltered);
            var displayedValue = '';
            var packagesAvailable = rightsPackage.map(function (rp) {
                return rp.shortLabel;
            });
            var deliveryViaLiveFeed = rightsPackage.filter(function (rp) {
                return rp.selectedRights.CONTENT_DELIVERY === "CONTENT_DELIVERY_LIVE";
            });

            if (deliveryViaLiveFeed.length > 0 && id !== "CONTENT_DELIVERY" && packagesAvailable.indexOf("LT") === -1 && checkContentDelivery) id = "LIVE_FEED_" + id;

            if (rightsPackageFiltered.length > 0) {
                var firstPackage = rightsPackageFiltered[0];
                var currentRights = firstPackage.selectedRights[id];
                var getCurrentCustomValueString = getCustomValueString.bind(null, firstPackage, currentRights, __WEBPACK_IMPORTED_MODULE_7__RightItemsDefinitions__["a" /* RightItemsDefinitions */]);

                switch (id) {
                    case 'PROGRAM':
                        displayedValue = programName;
                        break;
                    case 'LICENSED_LANGUAGES':
                        displayedValue = getLanguagesString(languages);
                        break;
                    case 'CAMERA':
                        displayedValue = getCurrentCustomValueString(id, function (value) {
                            return 'Minimum cameras: ' + value;
                        });
                        break;
                    case 'RUNS':
                        displayedValue = getCurrentCustomValueString(id, function (value) {
                            return value + ' Runs';
                        });
                        break;
                    case 'ASPECT_RATIO':
                        displayedValue = getCurrentCustomValueString(id, function (value) {
                            return '' + value;
                        });
                        break;
                    case 'COMMENTARY':
                        displayedValue = getCurrentCustomValueString(id, function (value) {
                            return getLanguagesString(value);
                        });
                        break;
                    case 'GRAPHICS':
                        displayedValue = getCurrentCustomValueString(id, function (value) {
                            return getLanguagesString(value);
                        });
                        break;
                    default:
                        if (firstPackage.selectedRights) {
                            var isSingleLabel = !Array.isArray(currentRights);
                            if (isSingleLabel) {
                                displayedValue = __WEBPACK_IMPORTED_MODULE_7__RightItemsDefinitions__["a" /* RightItemsDefinitions */][currentRights].label;
                            } else {
                                displayedValue = currentRights.map(function (item) {
                                    return __WEBPACK_IMPORTED_MODULE_7__RightItemsDefinitions__["a" /* RightItemsDefinitions */][item].label;
                                }).join(', ');
                            }
                        }
                }
            }

            var value = isMultipleValuesSelected ? "Multiple values selected" : displayedValue;

            return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                'div',
                { className: 'base-input', style: { width: "49%" } },
                __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                    'label',
                    null,
                    name
                ),
                __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                    'div',
                    {
                        className: 'display-label',
                        onClick: this.togglePopup
                    },
                    value || 'Select'
                ),
                __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('i', { className: 'fa fa-edit', onClick: this.togglePopup }),
                this.renderModal()
            );
        }
    }]);

    return PopupRight;
}(__WEBPACK_IMPORTED_MODULE_0_react___default.a.Component);

/* harmony default export */ __webpack_exports__["a"] = (PopupRight);

/***/ }),

/***/ "./src/AppBundle/Resources/public/javascript/sell/components/ProductionStandardsDefinitions.js":
/*!*****************************************************************************************************!*\
  !*** ./src/AppBundle/Resources/public/javascript/sell/components/ProductionStandardsDefinitions.js ***!
  \*****************************************************************************************************/
/*! exports provided: ProductionStandardsDefinitions */
/*! exports used: ProductionStandardsDefinitions */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return ProductionStandardsDefinitions; });
var ProductionStandardsDefinitions = [{
    name: "Content Delivery",
    key: "CONTENT_DELIVERY",
    superRights: [],
    options: ["CONTENT_DELIVERY_LIVE", "CONTENT_DELIVERY_DEDICATED", "CONTENT_DELIVERY_NON_DEDICATED"],
    multiple: false
}, {
    name: "Video Standard",
    key: "VIDEO_STANDARD",
    superRights: ["LT", "HL", "LB", "NA", "DT"],
    productionLabel: true,
    options: ["VIDEO_STANDARD_HD", "VIDEO_STANDARD_SD", "VIDEO_STANDARD_UHD", "VIDEO_STANDARD_VR", "VIDEO_STANDARD_NOT_AVAILABLE"],
    multiple: false,
    checkDelivery: true
}, {
    name: "Aspect ratio",
    key: "ASPECT_RATIO",
    superRights: ["LT", "HL", "LB", "NA", "DT"],
    productionLabel: true,
    options: ["ASPECT_RATIO_16_9", "ASPECT_RATIO_4_3", "ASPECT_RATIO_CUSTOM", "ASPECT_RATIO_NOT_AVAILABLE"],
    multiple: false,
    checkDelivery: true
}, {
    name: "Graphics",
    key: "GRAPHICS",
    superRights: ["LT", "HL", "LB", "NA", "DT"],
    productionLabel: true,
    options: ["GRAPHICS_NO", "GRAPHICS_YES", "GRAPHICS_NOT_AVAILABLE"],
    multiple: false,
    checkDelivery: true
}, {
    name: "Commentary",
    key: "COMMENTARY",
    productionLabel: true,
    superRights: ["LT", "HL", "LB", "NA", "DT"],
    options: ["COMMENTARY_NO", "COMMENTARY_YES", "COMMENTARY_NOT_AVAILABLE"],
    multiple: false,
    checkDelivery: true
}, {
    name: "Camera standards",
    key: "CAMERA",
    productionLabel: true,
    superRights: ["LT", "HL", "LB", "NA", "DT"],
    options: ["CAMERA_MINIMUM", "CAMERA_NOT_AVAILABLE"],
    multiple: false,
    checkDelivery: true
}, {
    name: "Delivery Method",
    key: "TECHNICAL_DELIVERY",
    productionLabel: true,
    superRights: [],
    options: ["TECHNICAL_DELIVERY_SATELLITE", "TECHNICAL_DELIVERY_IP", "TECHNICAL_DELIVERY_FTP", "TECHNICAL_DELIVERY_FIBER"],
    multiple: true,
    showTextArea: "FURTHER_DETAILS",
    technicalFee: "TECHNICAL_DELIVERY_SATELLITE",
    checkDelivery: true
}, {
    name: "Program Details",
    key: "PROGRAM",
    superRights: ['PR'],
    options: [],
    multiple: false
}];

/***/ }),

/***/ "./src/AppBundle/Resources/public/javascript/sell/components/RightDefaults.js":
/*!************************************************************************************!*\
  !*** ./src/AppBundle/Resources/public/javascript/sell/components/RightDefaults.js ***!
  \************************************************************************************/
/*! exports provided: RightDefaults */
/*! exports used: RightDefaults */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return RightDefaults; });
var RightDefaults = {
    "CUTS": "CUT_AVAILABLE_NO",
    "BROADCASTING": "BROADCASTING_NO",
    "SUBLICENSE": "SUBLICENSE_YES_APPROVAL",
    "TRANSMISSION_MEANS": ["TRANSMISSION_MEANS_ALL"],
    "EXPLOITATION_FORM": ["EXPLOITATION_FORM_ALL"],
    "VIDEO_STANDARD": "VIDEO_STANDARD_HD",
    "RUNS": "RUNS_UNLIMITED",
    "EXPLOITATION_WINDOW": "EXPLOITATION_WINDOW_UNLIMITED",
    "RESERVED_RIGHTS": "RESERVED_RIGHTS_NO",
    "ASPECT_RATIO": "ASPECT_RATIO_16_9",
    "COMMENTARY": "COMMENTARY_NO",
    "GRAPHICS": "GRAPHICS_NO",
    "CAMERA": "CAMERA_MINIMUM",
    "CONTENT": "CONTENT_ALL",
    "TECHNICAL_DELIVERY": ["TECHNICAL_DELIVERY_SATELLITE"],
    "TECHNICAL_FEE": "INCLUDED",
    "CAMERAS": 4,
    LIVE_FEED_ASPECT_RATIO: "ASPECT_RATIO_16_9",
    LIVE_FEED_COMMENTARY: "COMMENTARY_NO",
    LIVE_FEED_GRAPHICS: "GRAPHICS_NO",
    LIVE_FEED_CAMERA: "CAMERA_MINIMUM",
    LIVE_FEED_TECHNICAL_DELIVERY: "TECHNICAL_DELIVERY_SATELLITE",
    LIVE_FEED_CAMERAS: 4,
    LIVE_FEED_VIDEO_STANDARD: "VIDEO_STANDARD_HD",
    "LICENSED_LANGUAGES": "LICENSED_LANGUAGES_YES"
};

/***/ }),

/***/ "./src/AppBundle/Resources/public/javascript/sell/components/RightDefaultsBySuperRight.js":
/*!************************************************************************************************!*\
  !*** ./src/AppBundle/Resources/public/javascript/sell/components/RightDefaultsBySuperRight.js ***!
  \************************************************************************************************/
/*! exports provided: RightDefaultsBySuperRight */
/*! exports used: RightDefaultsBySuperRight */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return RightDefaultsBySuperRight; });
var RightDefaultsBySuperRight = {
    "LT": {
        "CONTENT_DELIVERY": "CONTENT_DELIVERY_DEDICATED"
    },
    "PR": {
        "CONTENT_DELIVERY": "CONTENT_DELIVERY_DEDICATED"
    },
    "NA": {
        "CONTENT_DELIVERY": "CONTENT_DELIVERY_NON_DEDICATED"
    },
    "DT": {
        "CONTENT_DELIVERY": "CONTENT_DELIVERY_NON_DEDICATED"
    },
    "HL": {
        "CONTENT_DELIVERY": "CONTENT_DELIVERY_NON_DEDICATED"
    },
    "LB": {
        "CONTENT_DELIVERY": "CONTENT_DELIVERY_NON_DEDICATED"
    }

};

/***/ }),

/***/ "./src/AppBundle/Resources/public/javascript/sell/components/RightDefinitions.js":
/*!***************************************************************************************!*\
  !*** ./src/AppBundle/Resources/public/javascript/sell/components/RightDefinitions.js ***!
  \***************************************************************************************/
/*! exports provided: RightDefinitions */
/*! exports used: RightDefinitions */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return RightDefinitions; });
var RightDefinitions = [{
    name: "Right to sublicense",
    key: "SUBLICENSE",
    superRights: [],
    options: ["SUBLICENSE_YES", "SUBLICENSE_YES_APPROVAL", "SUBLICENSE_NO"],
    multiple: false,
    description: 'Means the licensee\'s right to sublicense the program to a third party.'
}, {
    name: "Transmission Obligation",
    key: "BROADCASTING",
    superRights: [],
    options: ["BROADCASTING_NO", "BROADCASTING_YES"],
    showTextArea: "BROADCASTING_YES",
    multiple: false,
    description: 'Means the licensee\'s obligation to transmit the program.'
}, {
    name: "Transmission means",
    key: "TRANSMISSION_MEANS",
    superRights: [],
    options: ["TRANSMISSION_MEANS_ALL", "TRANSMISSION_MEANS_CABLE", "TRANSMISSION_MEANS_SATELLITE", "TRANSMISSION_MEANS_DIGITAL", "TRANSMISSION_MEANS_OTT", "TRANSMISSION_MEANS_INTERNET", "TRANSMISSION_MEANS_MOBILE"],
    multiple: true,
    description: 'Means the technical means on which the licensee may transmit the program to the end-user.'
}, {
    name: "Transmission Form",
    key: "EXPLOITATION_FORM",
    superRights: [],
    options: ["EXPLOITATION_FORM_ALL", "EXPLOITATION_FORM_FREE", "EXPLOITATION_FORM_PAY", "EXPLOITATION_FORM_IN-SHIP", "EXPLOITATION_FORM_CLOSED"],
    multiple: true,
    description: 'Means the commercial form by means of which the licensee may transmit the program to the end-user.'
}, {
    name: "Licensed languages",
    key: "LICENSED_LANGUAGES",
    superRights: [],
    options: [],
    global: true,
    language: true,
    description: 'Means the language in which the licensee my exploit the granted rights.'
}, {
    name: "Number of runs",
    key: "RUNS",
    superRights: ["CL", "NA", "PR", "DT", "HL"],
    options: ["RUNS_UNLIMITED", "RUNS_LIMITED"],
    multiple: false,
    description: 'Means the number of Transmission of the Program.'
}, {
    name: "Exploitation window",
    key: "EXPLOITATION_WINDOW",
    superRights: ["CL", "NA", "PR", "DT", "HL"],
    options: ["EXPLOITATION_WINDOW_UNLIMITED", "EXPLOITATION_WINDOW_LIMITED"],
    multiple: false,
    description: 'Means the specific time frame within the license period in which the licensee may exploit a specific right.',
    showTextArea: "EXPLOITATION_WINDOW_LIMITED"
}, {
    name: "Reserved rights",
    key: "RESERVED_RIGHTS",
    superRights: [],
    options: ["RESERVED_RIGHTS_NO", "RESERVED_RIGHTS_YES"],
    multiple: false,
    description: 'Means the audio-visual rights to the program that you, or your sublicensee, may exploit irrespective of any exclusivity granted.',
    showTextArea: "RESERVED_RIGHTS_YES"

}];

/***/ }),

/***/ "./src/AppBundle/Resources/public/javascript/sell/components/RightItemsDefinitions.js":
/*!********************************************************************************************!*\
  !*** ./src/AppBundle/Resources/public/javascript/sell/components/RightItemsDefinitions.js ***!
  \********************************************************************************************/
/*! exports provided: RightItemsDefinitions */
/*! exports used: RightItemsDefinitions */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return RightItemsDefinitions; });
var RightItemsDefinitions = {
    "BROADCASTING_YES": {
        "parent": "Transmission Obligation",
        "label": "Yes"
    },
    "BROADCASTING_NO": {
        "parent": "Transmission Obligation",
        "label": "No"
    },
    "SUBLICENSE_YES": {
        "parent": "Right to sublicense",
        "label": "Yes"
    },
    "SUBLICENSE_YES_APPROVAL": {
        "parent": "Right to sublicense",
        "label": "Yes, but remains subject to seller's approval"
    },
    "SUBLICENSE_NO": {
        "parent": "Right to sublicense",
        "label": "No"
    },
    "CUT_AVAILABLE_YES": {
        "parent": "Cut available",
        "label": "Yes"
    },
    "CUT_AVAILABLE_NO": {
        "parent": "Cut available",
        "label": "No"
    },
    "TRANSMISSION_MEANS_ALL": {
        "parent": "Transmission means",
        "label": "All",
        all: true
    },
    "TRANSMISSION_MEANS_CABLE": {
        "parent": "Transmission means",
        "label": "Cable & IPTV"
    },
    "TRANSMISSION_MEANS_SATELLITE": {
        "parent": "Transmission means",
        "label": "Satellite"
    },
    "TRANSMISSION_MEANS_DIGITAL": {
        "parent": "Transmission means",
        "label": "Digital Terrestrial"
    },
    "TRANSMISSION_MEANS_OTT": {
        "parent": "Transmission means",
        "label": "OTT"
    },
    "TRANSMISSION_MEANS_INTERNET": {
        "parent": "Transmission means",
        "label": "Internet"
    },
    "TRANSMISSION_MEANS_MOBILE": {
        "parent": "Transmission means",
        "label": "Mobile"
    },
    "EXPLOITATION_FORM_ALL": {
        "parent": "Transmission Form",
        "label": "All",
        all: true
    },
    "EXPLOITATION_FORM_FREE": {
        "parent": "Exploitation form",
        "label": "Free Only"
    },
    "EXPLOITATION_FORM_PAY": {
        "parent": "Exploitation form",
        "label": "Pay Only"
    },
    "EXPLOITATION_FORM_IN-SHIP": {
        "parent": "Exploitation form",
        "label": "In-Ship & In-Flight"
    },
    "EXPLOITATION_FORM_CLOSED": {
        "parent": "Exploitation form",
        "label": "Closed Circuit"
    },
    "RUNS_UNLIMITED": {
        "parent": "Number of runs",
        "label": "Unlimited"
    },
    "RUNS_LIMITED": {
        "parent": "Number of runs",
        "label": "Limited",
        numberField: true
    },
    "EXPLOITATION_WINDOW_UNLIMITED": {
        "parent": "Exploitation window",
        "label": "Unlimited"
    },
    "EXPLOITATION_WINDOW_LIMITED": {
        "parent": "Exploitation window",
        "label": "Limited"
    },

    "VIDEO_STANDARD_HD": {
        "parent": "Video standard",
        "label": "HD"
    },
    "VIDEO_STANDARD_SD": {
        "parent": "Video standard",
        "label": "SD"
    },
    "VIDEO_STANDARD_UHD": {
        "parent": "Video standard",
        "label": "UHD"
    },
    "VIDEO_STANDARD_VR": {
        "parent": "Video standard",
        "label": "VR"
    },
    "VIDEO_STANDARD_NOT_AVAILABLE": {
        "parent": "Video standard",
        "label": "Info not available yet"
    },
    "RESERVED_RIGHTS_NO": {
        "parent": "Reserved rights",
        "label": "No"
    },
    "RESERVED_RIGHTS_YES": {
        "parent": "Reserved rights",
        "label": "Yes"

    },
    "ASPECT_RATIO_16_9": {
        "parent": "Aspect ratio",
        "label": "16:9"
    },
    "ASPECT_RATIO_4_3": {
        "parent": "Aspect ratio",
        "label": "4:3"
    },
    "ASPECT_RATIO_CUSTOM": {
        "parent": "Aspect ratio",
        "label": "Other",
        textField: true
    },
    "ASPECT_RATIO_NOT_AVAILABLE": {
        "parent": "Aspect ratio",
        "label": "Info not available yet"
    },
    "GRAPHICS_NO": {
        "parent": "Graphics",
        "label": "No"
    },
    "GRAPHICS_YES": {
        "parent": "Graphics",
        "label": "Yes",
        language: true,
        languages: []
    },
    "GRAPHICS_NOT_AVAILABLE": {
        "parent": "Graphics",
        "label": "Info not available yet"
    },
    "COMMENTARY_NO": {
        "parent": "Commentary",
        "label": "No"
    },
    "COMMENTARY_YES": {
        "parent": "Commentary",
        "label": "Yes",
        language: true,
        languages: [],
        validate: true
    },
    "COMMENTARY_NOT_AVAILABLE": {
        "parent": "Commentary",
        "label": "Info not available yet"
    },
    "LICENSED_LANGUAGES_YES": {
        label: '',
        language: true,
        languages: []
    },
    "CAMERA_MINIMUM": {
        "parent": "Camera standards",
        "label": "Minimum cameras",
        numberField: true,
        numberFieldValue: "CAMERAS"
    },
    "CAMERA_TEXT": {
        "parent": "Camera standards",
        "label": "",
        textField: true
    },
    "CAMERA_NOT_AVAILABLE": {
        "parent": "Camera standards",
        "label": "Info not available yet"
    },
    "CONTENT_ALL": {
        "parent": "Content production",
        "label": "All content produced"
    },
    "CONTENT_TEXT": {
        "parent": "Content production",
        "label": "Content partially produced"
    },

    "TECHNICAL_DELIVERY_SATELLITE": {
        "parent": "Technical delivery",
        "label": "Satellite"
    },

    "TECHNICAL_DELIVERY_IP": {
        "parent": "Technical delivery",
        "label": "IP"
    },

    "TECHNICAL_DELIVERY_FTP": {
        "parent": "Technical delivery",
        "label": "FTP-server"
    },

    "TECHNICAL_DELIVERY_FIBER": {
        "parent": "Technical delivery",
        "label": "Fiber"
    },

    "CONTENT_DELIVERY_LIVE": {
        "parent": "Content Delivery",
        "label": "Delivered via live feed",
        hideIf: ["LT", "PR"]

    },

    "CONTENT_DELIVERY_DEDICATED": {
        "parent": "Content Delivery",
        "label": "Dedicated content delivery"
    },

    "CONTENT_DELIVERY_NON_DEDICATED": {
        "parent": "Content Delivery",
        "label": "No dedicated content delivery",
        disabledIf: ["LT", "PR"]
    }

};

/***/ }),

/***/ "./src/AppBundle/Resources/public/javascript/sell/components/Round.js":
/*!****************************************************************************!*\
  !*** ./src/AppBundle/Resources/public/javascript/sell/components/Round.js ***!
  \****************************************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_react__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__Match__ = __webpack_require__(/*! ./Match */ "./src/AppBundle/Resources/public/javascript/sell/components/Match.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_react_redux__ = __webpack_require__(/*! react-redux */ "./node_modules/react-redux/es/index.js");
var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }





var Round = function (_React$Component) {
    _inherits(Round, _React$Component);

    function Round(props) {
        _classCallCheck(this, Round);

        var _this = _possibleConstructorReturn(this, (Round.__proto__ || Object.getPrototypeOf(Round)).call(this, props));

        _this.toggle = function (e) {
            var _this$props = _this.props,
                seasons = _this$props.seasons,
                season = _this$props.season,
                round = _this$props.round,
                updateFromMultiple = _this$props.updateFromMultiple;

            var selected = e.target.checked;
            var schedules = seasons[season].schedules;
            var activeRound = schedules[round];
            activeRound.selected = selected;

            updateFromMultiple("seasons", season, "schedules", schedules);

            e.stopPropagation();
            _this.selectAll(selected);
        };

        _this.toggleMatches = function (e) {
            var _this$props2 = _this.props,
                seasons = _this$props2.seasons,
                season = _this$props2.season,
                round = _this$props2.round,
                updateFromMultiple = _this$props2.updateFromMultiple;


            var schedules = seasons[season].schedules;
            var activeRound = schedules[round];
            activeRound.showMatches = !activeRound.showMatches;
            updateFromMultiple("seasons", season, "schedules", schedules);

            e.stopPropagation();
        };

        _this.selectAll = function (selected) {
            var _this$props3 = _this.props,
                seasons = _this$props3.seasons,
                season = _this$props3.season,
                round = _this$props3.round,
                updateFromMultiple = _this$props3.updateFromMultiple;


            var schedules = seasons[season].schedules;
            var activeRound = schedules[round];
            activeRound.matches.forEach(function (match) {
                match.selected = selected;
            });
            updateFromMultiple("seasons", season, "schedules", schedules);
        };

        _this.onSelect = function (id) {
            var _this$props4 = _this.props,
                seasons = _this$props4.seasons,
                season = _this$props4.season,
                round = _this$props4.round,
                updateFromMultiple = _this$props4.updateFromMultiple;


            var schedules = seasons[season].schedules;
            var activeRound = schedules[round];
            activeRound.matches.get(id).selected = !activeRound.matches.get(id).selected;

            if (activeRound.matches.get(id).selected) activeRound.selected = true;

            updateFromMultiple("seasons", season, "schedules", schedules);
        };

        _this.getSelected = function () {
            var _this$props5 = _this.props,
                seasons = _this$props5.seasons,
                season = _this$props5.season,
                round = _this$props5.round;


            var schedule = seasons[season].schedules;
            var activeRound = schedule[round];
            return Array.from(activeRound.matches.values()).filter(function (m) {
                return m.selected;
            }).length;
        };

        _this.state = {};
        return _this;
    }

    _createClass(Round, [{
        key: 'render',
        value: function render() {
            var _this2 = this;

            var _props = this.props,
                seasons = _props.seasons,
                season = _props.season,
                round = _props.round;


            var schedule = seasons[season].schedules;
            var activeRound = schedule[round];

            return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                'div',
                { className: "matchday" },
                __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                    'div',
                    { className: 'ca-checkbox select-box-checkbox' },
                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('input', { type: 'checkbox',
                        checked: activeRound.selected,
                        onChange: this.toggle,
                        id: "round-" + round }),
                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('label', { htmlFor: "round-" + round }),
                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        'div',
                        { style: { width: '100%' } },
                        isNaN(round) && round,
                        !isNaN(round) && "Matchday " + round,
                        this.getSelected() === 0 && this.getSelected() !== activeRound.matches.size && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                            'span',
                            { onClick: this.toggleMatches },
                            'Select >'
                        ),
                        this.getSelected() !== 0 && this.getSelected() === activeRound.matches.size && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                            'span',
                            { onClick: this.toggleMatches },
                            'All >'
                        ),
                        this.getSelected() !== 0 && this.getSelected() !== activeRound.matches.size && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                            'span',
                            { onClick: this.toggleMatches },
                            this.getSelected(),
                            ' Selected >'
                        )
                    )
                ),
                activeRound.showMatches && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                    'div',
                    { className: "match-group" },
                    activeRound.matches.size > 0 && Array.from(activeRound.matches.values()).map(function (item, i) {
                        return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_1__Match__["a" /* default */], { match: item,
                            key: item.externalId,
                            onSelect: _this2.onSelect });
                    })
                )
            );
        }
    }]);

    return Round;
}(__WEBPACK_IMPORTED_MODULE_0_react___default.a.Component);

var mapStateToProps = function mapStateToProps(state) {
    return state.content;
};

var mapDispatchToProps = function mapDispatchToProps(dispatch) {
    return {
        updateFromMultiple: function updateFromMultiple(type, index, key, value) {
            return dispatch({
                type: 'UPDATE_FROM_MULTIPLE',
                selectorType: type,
                index: index,
                key: key,
                value: value
            });
        },
        updateContentValue: function updateContentValue(key, value) {
            return dispatch({
                type: 'UPDATE_CONTENT_VALUE',
                key: key,
                value: value
            });
        }
    };
};

/* harmony default export */ __webpack_exports__["a"] = (Object(__WEBPACK_IMPORTED_MODULE_2_react_redux__["connect"])(mapStateToProps, mapDispatchToProps)(Round));

/***/ }),

/***/ "./src/AppBundle/Resources/public/javascript/sell/components/SalesPackageEdit.js":
/*!***************************************************************************************!*\
  !*** ./src/AppBundle/Resources/public/javascript/sell/components/SalesPackageEdit.js ***!
  \***************************************************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_react__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_react_modal__ = __webpack_require__(/*! react-modal */ "./node_modules/react-modal/lib/index.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_react_modal___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_react_modal__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__main_styles_custom__ = __webpack_require__(/*! ../../main/styles/custom */ "./src/AppBundle/Resources/public/javascript/main/styles/custom.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__main_components_CountrySelector__ = __webpack_require__(/*! ../../main/components/CountrySelector */ "./src/AppBundle/Resources/public/javascript/main/components/CountrySelector.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_react_datepicker__ = __webpack_require__(/*! react-datepicker */ "./node_modules/react-datepicker/es/index.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5_prop_types__ = __webpack_require__(/*! prop-types */ "./node_modules/prop-types/index.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5_prop_types___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_5_prop_types__);
function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }








var labelStyle = { height: "30px", fontSize: "12px" };
var installmentIconStyle = { margin: "0 10px", position: "relative" };
var smallContainerStyle = {
    display: 'inline-block',
    overflowY: 'overlay',
    maxHeight: '200px'
};
var containerStyle = {
    display: 'inline-block'
};

var SalesPackageEdit = function (_React$Component) {
    _inherits(SalesPackageEdit, _React$Component);

    function SalesPackageEdit(props) {
        _classCallCheck(this, SalesPackageEdit);

        var _this = _possibleConstructorReturn(this, (SalesPackageEdit.__proto__ || Object.getPrototypeOf(SalesPackageEdit)).call(this, props));

        _initialiseProps.call(_this);

        var salesPackage = props.salesPackages[props.salesPackageId] || {};

        _this.asBundle = "SELL_AS_BUNDLE";
        _this.individually = "SELL_INDIVIDUALLY";
        _this.worldwide = "WORLDWIDE";
        _this.worldwideExcluding = "WORLDWIDE_EXCLUDING";
        _this.selectedTerritories = "SELECTED_TERRITORIES";
        _this.fixed = "FIXED";
        _this.bidding = "BIDDING";
        _this.limit = 3;

        _this.state = {
            isOpen: props.isOpen,
            bundleMethod: salesPackage.bundleMethod,
            territoriesMethod: salesPackage.territoriesMethod,
            salesMethod: salesPackage.salesMethod,
            territories: salesPackage.territoriesMethod === "WORLDWIDE_EXCLUDING" ? salesPackage.excludedTerritories : salesPackage.territories,
            filterTerritories: [],
            installments: salesPackage.installments || [],
            fee: salesPackage.fee,
            salesPackageId: salesPackage.id,
            isNew: true
        };
        _this.bidIcon = assetsBaseDir + "app/images/auction.svg";
        _this.fixedIcon = assetsBaseDir + "app/images/bid.png";

        return _this;
    }

    return SalesPackageEdit;
}(__WEBPACK_IMPORTED_MODULE_0_react___default.a.Component);

var _initialiseProps = function _initialiseProps() {
    var _this2 = this;

    this.update = function (selected) {
        _this2.setState({ selected: selected });
    };

    this.setBundleMethod = function (bundleMethod) {
        _this2.setState({ bundleMethod: bundleMethod });
        _this2.fillTerritories(_this2.state.territoriesMethod, bundleMethod);
    };

    this.setTerritoriesMethod = function (territoriesMethod) {
        _this2.setState({ territoriesMethod: territoriesMethod });
        _this2.fillTerritories(territoriesMethod, _this2.state.bundleMethod);
    };

    this.fillTerritories = function (territoriesMethod, bundleMethod) {
        if (territoriesMethod === _this2.worldwide && bundleMethod === _this2.individually) {
            _this2.setState({ territories: Object.values(ContentArena.Data.Countries).map(function (i, k) {
                    return { value: i.name, label: i.name };
                }) });
        } else {
            _this2.setState({ territories: [] });
        }
    };

    this.getFilterTerritories = function () {
        var _props = _this2.props,
            exclusivity = _props.exclusivity,
            salesPackages = _props.salesPackages,
            salesPackageId = _props.salesPackageId;

        var filter = [];

        if (!exclusivity) return filter;

        salesPackages.forEach(function (salesPackage, id) {
            if (salesPackageId !== id) filter = [].concat(_toConsumableArray(filter), _toConsumableArray(salesPackage.territories.map(function (t) {
                return t.value;
            })));
        });

        return filter;
    };

    this.getExcludedTerritories = function () {
        var territories = _this2.state.territories;


        var filter = _this2.getFilterTerritories();

        var selected = territories.map(function (t) {
            return t.value;
        });
        filter = [].concat(_toConsumableArray(filter), _toConsumableArray(selected));

        return filter.filter(function (item, pos, self) {
            return self.indexOf(item) == pos;
        }).map(function (t) {
            return { value: t, label: t };
        });
    };

    this.preselectedExcluded = function () {
        var salesPackages = _this2.props.salesPackages;

        return salesPackages.filter(function (salesPackage) {
            return salesPackage.territoriesMethod === _this2.selectedTerritories;
        }).length === 0;
    };

    this.setSalesMethod = function (salesMethod) {
        _this2.setState({ salesMethod: salesMethod });
    };

    this.closeModal = function () {
        var onClose = _this2.props.onClose;

        if (onClose) onClose();
    };

    this.getName = function () {
        var exclusivity = _this2.props.exclusivity;
        var territoriesMethod = _this2.state.territoriesMethod;

        var excludedTerritories = exclusivity ? _this2.getExcludedTerritories() : _this2.state.territories;
        var territories = _this2.state.territories;

        var name = "";

        if (territoriesMethod === _this2.worldwide) {
            name = "Worldwide";
        } else if (territoriesMethod === _this2.selectedTerritories) {
            name = territories.slice(0, 3).map(function (territory, i) {
                return territory.label;
            }).join(", ");
        } else if (territoriesMethod === _this2.worldwideExcluding) {

            name = "Worldwide excluding " + excludedTerritories.slice(0, 3).map(function (territory, i) {
                return territory.label;
            }).join(", ");
        }

        return name;
    };

    this.applySelection = function () {
        var _state = _this2.state,
            fee = _state.fee,
            bundleMethod = _state.bundleMethod,
            territoriesMethod = _state.territoriesMethod,
            salesMethod = _state.salesMethod,
            installments = _state.installments;
        var _props2 = _this2.props,
            salesPackageId = _props2.salesPackageId,
            exclusivity = _props2.exclusivity;

        var excludedTerritories = exclusivity ? _this2.getExcludedTerritories() : _this2.state.territories;
        var territories = _this2.state.territories;
        var allTerritories = Object.values(ContentArena.Data.Countries).map(function (i, k) {
            return { value: i.name, label: i.name };
        });
        var territoriesByLabel = exclusivity ? _this2.getExcludedTerritories().map(function (t) {
            return t.label;
        }) : territories.map(function (t) {
            return t.label;
        });
        if (territoriesMethod === _this2.worldwideExcluding) territories = allTerritories.filter(function (t) {
            return territoriesByLabel.indexOf(t.label) === -1;
        });
        _this2.props.onUpdate({
            name: _this2.getName(),
            territories: territories,
            excludedTerritories: territoriesMethod === _this2.worldwideExcluding ? excludedTerritories : [],
            fee: fee,
            salesMethod: salesMethod,
            territoriesMethod: territoriesMethod,
            bundleMethod: bundleMethod,
            installments: installments,
            id: _this2.state.salesPackageId,
            edited: true
        }, salesPackageId);
        _this2.closeModal();
    };

    this.selectTerritories = function (territories) {
        _this2.setState({ territories: territories });
    };

    this.setInstallmentType = function (type, i) {
        var installments = _this2.state.installments;
        installments[i].type = type;
        _this2.setState({ installments: installments });
    };

    this.setInstallmentDate = function (date, i) {
        var installments = _this2.state.installments;
        installments[i].date = date;
        _this2.setState({ installments: installments });
    };

    this.setInstallmentDays = function (days, i) {
        var installments = _this2.state.installments;
        installments[i].days = days;
        _this2.setState({ installments: installments });
    };

    this.setInstallmentValue = function (value, i) {
        var installments = _this2.state.installments;
        installments[i].value = value;
        _this2.setState({ installments: installments });
    };

    this.addInstallment = function () {
        var installments = _this2.state.installments;
        installments.push({ value: 100, type: "DAY", days: 30 });
        _this2.setState({ installments: installments });
    };

    this.removeInstallment = function (i) {
        var installments = _this2.state.installments;
        installments.splice(i, 1);
        _this2.setState({ installments: installments });
    };

    this.updateFee = function (e) {
        var fee = e.target.value;
        _this2.setState({ fee: fee });
    };

    this.render = function () {
        var _props3 = _this2.props,
            salesPackages = _props3.salesPackages,
            salesPackageId = _props3.salesPackageId;

        var salesPackage = salesPackages[salesPackageId] || {};

        return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
            __WEBPACK_IMPORTED_MODULE_1_react_modal___default.a,
            {
                isOpen: _this2.state.isOpen,
                onRequestClose: _this2.closeModal,
                bodyOpenClassName: "selector",
                style: __WEBPACK_IMPORTED_MODULE_2__main_styles_custom__["c" /* customStyles */],
                contentLabel: 'Example Modal'
            },
            __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                'div',
                { className: 'modal-title' },
                _this2.context.t("Sales bundle"),
                __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('i', { className: 'fa fa-times-circle-o close-icon', onClick: _this2.closeModal })
            ),
            __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                'div',
                { className: 'step-content' },
                __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                    'div',
                    { className: 'step-content-container' },
                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        'div',
                        { className: 'base-full-input' },
                        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                            'label',
                            { style: labelStyle },
                            _this2.context.t("CL_STEP4_EDIT_BUNDLE_TITLE_TERRITORIES"),
                            _this2.state.territoriesMethod === _this2.worldwideExcluding && ": Worldwide excluding"
                        )
                    ),
                    _this2.state.bundleMethod === _this2.asBundle && _this2.state.territoriesMethod === _this2.selectedTerritories && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_3__main_components_CountrySelector__["a" /* default */], {
                        className: "small-select",
                        value: _this2.state.territories,
                        onChange: _this2.selectTerritories,
                        filter: _this2.getFilterTerritories() }),
                    _this2.state.bundleMethod === _this2.asBundle && _this2.state.territoriesMethod === _this2.worldwideExcluding && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_3__main_components_CountrySelector__["a" /* default */], {
                        className: "small-select",
                        value: _this2.getExcludedTerritories(),
                        onChange: _this2.selectTerritories }),
                    _this2.state.bundleMethod === _this2.individually && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        'div',
                        { style: { padding: '10px 5px 20px' } },
                        salesPackage.name
                    ),
                    _this2.state.bundleMethod === _this2.asBundle && _this2.state.territoriesMethod === _this2.worldwide && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        'div',
                        { style: { padding: '10px 5px 20px' } },
                        _this2.context.t("Worldwide")
                    ),
                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        'div',
                        { className: 'base-full-input' },
                        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                            'label',
                            { style: labelStyle },
                            _this2.context.t("Sales method")
                        ),
                        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                            'div',
                            { className: "content" },
                            __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                'div',
                                { className: "item", onClick: function onClick() {
                                        _this2.setSalesMethod(_this2.fixed);
                                    } },
                                _this2.state.salesMethod !== _this2.fixed && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('i', { className: 'fa fa-circle-thin' }),
                                _this2.state.salesMethod === _this2.fixed && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('i', { className: 'fa fa-check-circle-o' }),
                                __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                    'div',
                                    { className: "title" },
                                    _this2.context.t("Fixed fee")
                                )
                            ),
                            __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                'div',
                                { className: "item", onClick: function onClick() {
                                        _this2.setSalesMethod(_this2.bidding);
                                    } },
                                _this2.state.salesMethod !== _this2.bidding && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('i', { className: 'fa fa-circle-thin' }),
                                _this2.state.salesMethod === _this2.bidding && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('i', { className: 'fa fa-check-circle-o' }),
                                __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                    'div',
                                    { className: "title" },
                                    _this2.context.t("Bidding")
                                )
                            ),
                            __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                'div',
                                { className: "item", style: { paddingLeft: 0, paddingRight: 0 } },
                                __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                    'span',
                                    null,
                                    _this2.state.salesMethod === _this2.fixed && "Fixed fee",
                                    _this2.state.salesMethod !== _this2.fixed && "Minimum bid (optional)"
                                ),
                                __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('input', {
                                    type: 'number',
                                    min: 0,
                                    onChange: _this2.updateFee,
                                    value: _this2.state.fee,
                                    style: { height: "26px", width: "80px" } }),
                                __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                    'span',
                                    { style: { width: 'auto', padding: '0 10px' } },
                                    _this2.getCurrencySymbol()
                                )
                            )
                        )
                    ),
                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        'div',
                        { className: 'base-full-input' },
                        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                            'label',
                            { style: labelStyle },
                            _this2.context.t("CL_STEP4_EDIT_BUNDLE_TITLE_PAYMENT")
                        ),
                        _this2.state.installments.map(function (installment, i, list) {
                            return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                'div',
                                { className: "content" },
                                __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                    'div',
                                    { className: "item", style: { paddingLeft: 0 } },
                                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                        'div',
                                        { className: "title" },
                                        i + 1,
                                        ' Instalment ',
                                        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('input', { onChange: function onChange(e) {
                                                _this2.setInstallmentValue(e.target.value, i);
                                            }, style: { height: "26px", width: "50px" }, type: 'number', max: 100, value: installment.value }),
                                        ' % of payment'
                                    ),
                                    installment.type !== "DATE" && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('i', { style: installmentIconStyle, className: 'fa fa-circle-thin', onClick: function onClick() {
                                            _this2.setInstallmentType("DATE", i);
                                        } }),
                                    installment.type === "DATE" && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('i', { style: installmentIconStyle, className: 'fa fa-check-circle-o' }),
                                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                        'div',
                                        { className: "title" },
                                        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_4_react_datepicker__["default"], {
                                            disabled: installment.type !== "DATE",
                                            selected: installment.date,
                                            placeholderText: "dd/mm/yyyy",
                                            onChange: function onChange(date) {
                                                _this2.setInstallmentDate(date, i);
                                            },
                                            className: 'small-datepicker' })
                                    ),
                                    installment.type !== "DAY" && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('i', { style: installmentIconStyle, className: 'fa fa-circle-thin', onClick: function onClick() {
                                            _this2.setInstallmentType("DAY", i);
                                        } }),
                                    installment.type === "DAY" && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('i', { style: installmentIconStyle, className: 'fa fa-check-circle-o' }),
                                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                        'div',
                                        { className: "title" },
                                        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('input', {
                                            type: 'number',
                                            min: 0,
                                            onChange: function onChange(e) {
                                                _this2.setInstallmentDays(e.target.value, i);
                                            },
                                            disabled: installment.type !== "DAY",
                                            value: installment.days,
                                            style: { height: "26px", width: "40px" } }),
                                        _this2.context.t("CL_STEP4_EDIT_BUNDLE_INSTALLMENT_DAYS")
                                    ),
                                    i !== 0 && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('i', { style: { margin: 0, position: "relative" }, className: 'fa fa-minus-circle', onClick: function onClick() {
                                            _this2.removeInstallment(i);
                                        } }),
                                    i === list.length - 1 && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('i', { style: { margin: 0, position: "relative" }, className: 'fa fa-plus-circle', onClick: _this2.addInstallment })
                                )
                            );
                        })
                    )
                )
            ),
            __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                'div',
                { className: 'error', style: {
                        width: '100%',
                        textAlign: 'center',
                        fontSize: '12px',
                        color: 'red'
                    } },
                _this2.installmentsIncomplete() && _this2.context.t("CL_STEP4_EDIT_BUNDLE_INSTALLMENT_WARNING")
            ),
            __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                'div',
                { className: "buttons" },
                __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                    'button',
                    {
                        className: 'standard-button',
                        disabled: _this2.state.salesMethod === _this2.fixed && Number(_this2.state.fee) === 0 || _this2.state.territoriesMethod !== _this2.worldwide && _this2.state.territories.length === 0 || _this2.installmentsIncomplete(),
                        onClick: _this2.applySelection },
                    'Ok'
                )
            )
        );
    };

    this.installmentsIncomplete = function () {
        var installments = _this2.state.installments;

        var total = 0;

        installments.forEach(function (i) {
            total += Number(i.value);
        });

        return total !== 100;
    };

    this.getFee = function (salesPackage) {
        return salesPackage.fee + " " + _this2.getCurrencySymbol();
    };

    this.getCurrencySymbol = function () {
        var currency = _this2.props.currency;

        return currency === "EUR" ? "€" : "$";
    };
};

SalesPackageEdit.contextTypes = {
    t: __WEBPACK_IMPORTED_MODULE_5_prop_types__["PropTypes"].func.isRequired
};

/* harmony default export */ __webpack_exports__["a"] = (SalesPackageEdit);

/***/ }),

/***/ "./src/AppBundle/Resources/public/javascript/sell/components/SalesPackageForm.js":
/*!***************************************************************************************!*\
  !*** ./src/AppBundle/Resources/public/javascript/sell/components/SalesPackageForm.js ***!
  \***************************************************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_react__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_react_modal__ = __webpack_require__(/*! react-modal */ "./node_modules/react-modal/lib/index.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_react_modal___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_react_modal__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__main_styles_custom__ = __webpack_require__(/*! ../../main/styles/custom */ "./src/AppBundle/Resources/public/javascript/main/styles/custom.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__main_components_CountrySelector__ = __webpack_require__(/*! ../../main/components/CountrySelector */ "./src/AppBundle/Resources/public/javascript/main/components/CountrySelector.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__components_CurrencySelector__ = __webpack_require__(/*! ../components/CurrencySelector */ "./src/AppBundle/Resources/public/javascript/sell/components/CurrencySelector.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5_react_datepicker__ = __webpack_require__(/*! react-datepicker */ "./node_modules/react-datepicker/es/index.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__main_components_Tooltip__ = __webpack_require__(/*! ../../main/components/Tooltip */ "./src/AppBundle/Resources/public/javascript/main/components/Tooltip.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__main_components_LicenseDownloader__ = __webpack_require__(/*! ../../main/components/LicenseDownloader */ "./src/AppBundle/Resources/public/javascript/main/components/LicenseDownloader.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8_prop_types__ = __webpack_require__(/*! prop-types */ "./node_modules/prop-types/index.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8_prop_types___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_8_prop_types__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9__main_components_RegionCountrySelector__ = __webpack_require__(/*! ../../main/components/RegionCountrySelector */ "./src/AppBundle/Resources/public/javascript/main/components/RegionCountrySelector.js");
var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }












var labelStyle = { height: "30px", fontSize: "12px" };
var installmentIconStyle = { margin: "0 10px", position: "relative" };
var smallContainerStyle = {
    display: 'inline-block',
    overflowY: 'overlay',
    maxHeight: '200px',
    paddingRight: 20
};
var containerStyle = {
    display: 'inline-block',
    paddingTop: 5
};

var SalesPackageForm = function (_React$Component) {
    _inherits(SalesPackageForm, _React$Component);

    function SalesPackageForm(props) {
        _classCallCheck(this, SalesPackageForm);

        var _this = _possibleConstructorReturn(this, (SalesPackageForm.__proto__ || Object.getPrototypeOf(SalesPackageForm)).call(this, props));

        _this.editSalesPackage = function (salesPackage, index) {
            var onEdit = _this.props.onEdit;

            if (onEdit) onEdit(index);
        };

        _this.update = function (selected) {
            _this.setState({ selected: selected });
        };

        _this.setBundleMethod = function (bundleMethod) {
            _this.setState({ bundleMethod: bundleMethod });
        };

        _this.setTerritoriesMethod = function (territoriesMethod) {
            _this.setState({ territoriesMethod: territoriesMethod, territories: [] });
            _this.fillTerritories(territoriesMethod, _this.state.bundleMethod);
        };

        _this.fillTerritories = function (territoriesMethod, bundleMethod) {
            if (territoriesMethod === _this.worldwide && bundleMethod === _this.individually) {
                _this.setState({ territories: Object.values(ContentArena.Data.Countries).map(function (i, k) {
                        return { value: i.name, label: i.name };
                    }) });
            } else {
                _this.setState({ territories: [] });
            }
        };

        _this.getFilterTerritories = function () {
            var _this$props = _this.props,
                exclusivity = _this$props.exclusivity,
                salesPackages = _this$props.salesPackages;

            var filter = [];

            if (!exclusivity) return filter;

            salesPackages.forEach(function (salesPackage) {
                filter = [].concat(_toConsumableArray(filter), _toConsumableArray(salesPackage.territories.map(function (t) {
                    return t.value;
                })));
            });

            return filter;
        };

        _this.getExcludedTerritories = function () {
            var territories = _this.state.territories;

            var territoriesArray = [];

            if (!Array.isArray(territories)) {
                territoriesArray = [territories];
            } else {
                territoriesArray = territories;
            }
            var filter = _this.getFilterTerritories();

            var selected = territoriesArray.map(function (t) {
                return t.value;
            });
            filter = [].concat(_toConsumableArray(filter), _toConsumableArray(selected));

            return filter.filter(function (item, pos, self) {
                return self.indexOf(item) == pos;
            }).map(function (t) {
                return { value: t, label: t };
            });
        };

        _this.worldwideAvailable = function () {
            var _this$props2 = _this.props,
                salesPackages = _this$props2.salesPackages,
                exclusivity = _this$props2.exclusivity;


            if (!exclusivity) return true;

            return salesPackages.filter(function (salesPackage) {
                return salesPackage.territoriesMethod === _this.worldwideExcluding;
            }).length === 0;
        };

        _this.setSalesMethod = function (salesMethod) {
            _this.setState({ salesMethod: salesMethod });
        };

        _this.closeModal = function () {
            _this.setState({ isOpen: false });
        };

        _this.closeTerritoriesModal = function () {
            _this.setState({ showAllTerritories: false });
        };

        _this.applySelection = function () {
            _this.setState({ isOpen: false });

            var _this$state = _this.state,
                bundleMethod = _this$state.bundleMethod,
                territoriesMethod = _this$state.territoriesMethod,
                fee = _this$state.fee,
                salesMethod = _this$state.salesMethod,
                installments = _this$state.installments;
            var exclusivity = _this.props.exclusivity;


            var territoriesAsArray = Array.isArray(_this.state.territories) ? _this.state.territories : [_this.state.territories];
            var salesPackagesList = [],
                name = "";
            var excludedTerritories = exclusivity ? _this.getExcludedTerritories() : territoriesAsArray;
            var territories = territoriesAsArray;
            var allTerritories = Object.values(ContentArena.Data.Countries).map(function (i, k) {
                return { value: i.name, label: i.name };
            });
            var territoriesByLabel = exclusivity ? _this.getExcludedTerritories().map(function (t) {
                return t.label;
            }) : territories.map(function (t) {
                return t.label;
            });
            if (_this.state.isNew) {

                if (bundleMethod === _this.individually) {

                    if (territoriesMethod === _this.worldwideExcluding) {
                        salesPackagesList = allTerritories.filter(function (t) {
                            return territoriesByLabel.indexOf(t.label) === -1;
                        }).map(function (territory) {
                            return {
                                name: territory.label,
                                territories: [territory],
                                fee: fee,
                                salesMethod: salesMethod,
                                bundleMethod: bundleMethod,
                                territoriesMethod: territoriesMethod,
                                installments: installments
                            };
                        });
                    } else {
                        salesPackagesList = allTerritories.map(function (territory) {
                            return {
                                name: territory.label,
                                territories: [territory],

                                fee: fee,
                                salesMethod: salesMethod,
                                bundleMethod: bundleMethod,
                                territoriesMethod: territoriesMethod,
                                installments: installments
                            };
                        });
                    }
                } else {

                    if (territoriesMethod === _this.worldwide) {
                        name = "Worldwide";
                    } else if (territoriesMethod === _this.selectedTerritories) {
                        name = territories.slice(0, 3).map(function (territory, i) {
                            return territory.label;
                        }).join(", ");
                    } else if (territoriesMethod === _this.worldwideExcluding) {
                        territories = allTerritories.filter(function (t) {
                            return territoriesByLabel.indexOf(t.label) === -1;
                        });
                        name = "Worldwide excluding " + excludedTerritories.slice(0, 3).map(function (territory, i) {
                            return territory.label;
                        }).join(", ");
                    }

                    salesPackagesList = [{
                        name: name,
                        territories: territories,
                        excludedTerritories: excludedTerritories,
                        fee: fee,
                        salesMethod: salesMethod,
                        bundleMethod: bundleMethod,
                        territoriesMethod: territoriesMethod,
                        installments: installments
                    }];
                }

                _this.props.onAdd(salesPackagesList);
            } else {
                _this.props.onUpdate(_this.state, _this.state.index);
            }

            _this.setState({
                fee: 0,
                territories: []
                // territoriesMethod: (this.worldwideAvailable()) ? this.worldwide : this.selectedTerritories
            });
        };

        _this.selectTerritories = function (territories) {
            _this.setState({ territories: territories });
        };

        _this.setInstallmentType = function (type, i) {
            var installments = _this.state.installments;
            installments[i].type = type;
            _this.setState({ installments: installments });
        };

        _this.setInstallmentDate = function (date, i) {
            var installments = _this.state.installments;
            installments[i].date = date;
            _this.setState({ installments: installments });
        };

        _this.setInstallmentDays = function (days, i) {
            var installments = _this.state.installments;
            installments[i].days = days;
            _this.setState({ installments: installments });
        };

        _this.setInstallmentValue = function (value, i) {
            var installments = _this.state.installments;
            installments[i].value = value;
            _this.setState({ installments: installments });
        };

        _this.addInstallment = function () {
            var installments = _this.state.installments;
            installments.push({ value: 100, type: "DAY", days: 30 });
            _this.setState({ installments: installments });
        };

        _this.removeInstallment = function (i) {
            var installments = _this.state.installments;
            installments.splice(i, 1);
            _this.setState({ installments: installments });
        };

        _this.updateFee = function (e) {
            var fee = e.target.value;
            _this.setState({ fee: fee });
        };

        _this.addBundlesAvailable = function () {
            var _this$props3 = _this.props,
                exclusivity = _this$props3.exclusivity,
                salesPackages = _this$props3.salesPackages;
            var countries = _this.state.countries;

            var territories = [],
                worldwide = false;

            if (exclusivity) {
                salesPackages.map(function (sp) {
                    if (sp.territoriesMethod === "WORLDWIDE" && sp.bundleMethod === _this.asBundle) worldwide = true;
                    territories = [].concat(_toConsumableArray(territories), _toConsumableArray(sp.territories));
                });
            }

            return !worldwide && territories.length !== Object.values(countries).length;
        };

        _this.handleTerritories = function (type) {
            _this.setState({ territoriesQuantity: type });
        };

        _this.renderModal = function () {
            var _this$props4 = _this.props,
                onClose = _this$props4.onClose,
                exclusivity = _this$props4.exclusivity,
                salesPackages = _this$props4.salesPackages;
            var _this$state2 = _this.state,
                territoriesQuantity = _this$state2.territoriesQuantity,
                territoriesMethod = _this$state2.territoriesMethod,
                territories = _this$state2.territories;


            var isFilterEnabled = territoriesMethod === _this.selectedTerritories;
            var isMultipleEnabled = territoriesQuantity === 'multiple';
            return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                __WEBPACK_IMPORTED_MODULE_1_react_modal___default.a,
                {
                    isOpen: _this.state.isOpen,
                    onRequestClose: _this.closeModal,
                    bodyOpenClassName: "selector",
                    style: __WEBPACK_IMPORTED_MODULE_2__main_styles_custom__["c" /* customStyles */],
                    contentLabel: 'Example Modal'
                },
                __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                    'div',
                    { className: 'modal-title' },
                    'Sales bundle',
                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('i', { className: 'fa fa-times-circle-o close-icon', onClick: _this.closeModal })
                ),
                __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                    'div',
                    { className: 'step-content' },
                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        'div',
                        { className: 'step-content-container' },
                        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                            'div',
                            { className: 'base-full-input' },
                            __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                'label',
                                { style: labelStyle },
                                _this.context.t("CL_STEP4_EDIT_BUNDLE_TITLE_TERRITORIES_MODE")
                            ),
                            __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                'div',
                                { className: "content" },
                                __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                    'div',
                                    { className: "item", onClick: function onClick() {
                                            return _this.handleTerritories('single');
                                        } },
                                    territoriesQuantity === 'single' ? __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('i', { className: 'fa fa-check-circle-o' }) : __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('i', { className: 'fa fa-circle-thin' }),
                                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                        'div',
                                        { className: "title" },
                                        _this.context.t("CL_STEP4_EDIT_BUNDLE_TITLE_SINGLE_TERRITORY")
                                    )
                                ),
                                __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                    'div',
                                    { className: "item", onClick: function onClick() {
                                            return _this.handleTerritories('multiple');
                                        } },
                                    territoriesQuantity === 'multiple' ? __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('i', { className: 'fa fa-check-circle-o' }) : __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('i', { className: 'fa fa-circle-thin' }),
                                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                        'div',
                                        { className: "title" },
                                        _this.context.t("CL_STEP4_EDIT_BUNDLE_TITLE_MULTIPLE_TERRITORIES")
                                    )
                                )
                            )
                        ),
                        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                            'div',
                            { className: 'base-full-input', style: { display: 'block' } },
                            __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                'label',
                                { style: labelStyle },
                                'Select territories'
                            ),
                            territoriesQuantity === 'multiple' && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                'div',
                                { className: "content" },
                                __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                    'div',
                                    { className: "item", onClick: function onClick() {
                                            _this.setTerritoriesMethod(_this.selectedTerritories);
                                        } },
                                    territoriesMethod !== _this.selectedTerritories && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('i', { className: 'fa fa-circle-thin' }),
                                    territoriesMethod === _this.selectedTerritories && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('i', { className: 'fa fa-check-circle-o' }),
                                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                        'div',
                                        { className: "title" },
                                        _this.context.t("CL_STEP4_EDIT_BUNDLE_TITLE_SELECTED_TERRITORIES")
                                    )
                                ),
                                (!exclusivity || exclusivity && salesPackages.length === 0) && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                    'div',
                                    { className: "item", onClick: function onClick() {
                                            _this.setTerritoriesMethod(_this.worldwide);
                                        } },
                                    territoriesMethod !== _this.worldwide && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('i', { className: 'fa fa-circle-thin' }),
                                    territoriesMethod === _this.worldwide && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('i', { className: 'fa fa-check-circle-o' }),
                                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                        'div',
                                        { className: "title" },
                                        _this.context.t("CL_STEP4_EDIT_BUNDLE_TITLE_WORLDWIDE")
                                    )
                                ),
                                _this.worldwideAvailable() && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                    'div',
                                    { className: "item", onClick: function onClick() {
                                            _this.setTerritoriesMethod(_this.worldwideExcluding);
                                        } },
                                    territoriesMethod !== _this.worldwideExcluding && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('i', { className: 'fa fa-circle-thin' }),
                                    territoriesMethod === _this.worldwideExcluding && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('i', { className: 'fa fa-check-circle-o' }),
                                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                        'div',
                                        { className: "title" },
                                        _this.context.t("CL_STEP4_EDIT_BUNDLE_TITLE_WORLDWIDE_EXCLUDING")
                                    )
                                )
                            ),
                            __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                'div',
                                { style: { marginTop: '10px', padding: "0 15px" } },
                                !isMultipleEnabled && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_3__main_components_CountrySelector__["a" /* default */], {
                                    className: "small-select",
                                    onChange: function onChange(c) {
                                        _this.selectTerritories([c]);
                                    },
                                    value: territories[0],
                                    filter: isFilterEnabled ? _this.getFilterTerritories() : [],
                                    multi: false

                                }),
                                isMultipleEnabled && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_9__main_components_RegionCountrySelector__["a" /* default */], {
                                    className: "small-select",
                                    onChange: _this.selectTerritories,
                                    value: isExcludedTerritoriesEnabled ? _this.getExcludedTerritories() : territories,
                                    filter: isFilterEnabled ? _this.getFilterTerritories() : [],
                                    disabled: isWorldwideEnabled
                                }),
                                territoriesQuantity === 'multiple' && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                    'div',
                                    null,
                                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('input', { type: 'checkbox',
                                        className: 'ca-checkbox',
                                        style: { width: 'inherit', height: '20px' },
                                        defaultChecked: _this.state.bundleMethod === _this.asBundle,
                                        onChange: function onChange(e) {
                                            _this.setBundleMethod(e.target.checked ? _this.asBundle : _this.individually);
                                        }
                                    }),
                                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                        'span',
                                        { style: { verticalAlign: 'middle', marginLeft: '5px', fontSize: '14px' } },
                                        _this.context.t("CL_STEP4_EDIT_BUNDLE_AS_PACKAGE")
                                    ),
                                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_6__main_components_Tooltip__["a" /* default */], {
                                        id: 'offer_info',
                                        text: 'Test text'
                                    })
                                )
                            )
                        ),
                        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                            'div',
                            { className: 'base-full-input' },
                            __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                'label',
                                { style: labelStyle },
                                'Sales method'
                            ),
                            __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                'div',
                                { className: "content" },
                                __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                    'div',
                                    { className: "item", onClick: function onClick() {
                                            _this.setSalesMethod(_this.fixed);
                                        } },
                                    _this.state.salesMethod !== _this.fixed && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('i', { className: 'fa fa-circle-thin' }),
                                    _this.state.salesMethod === _this.fixed && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('i', { className: 'fa fa-check-circle-o' }),
                                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                        'div',
                                        { className: "title" },
                                        _this.context.t("CL_STEP4_EDIT_BUNDLE_TYPE_FIXED")
                                    )
                                ),
                                __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                    'div',
                                    { className: "item", onClick: function onClick() {
                                            _this.setSalesMethod(_this.bidding);
                                        } },
                                    _this.state.salesMethod !== _this.bidding && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('i', { className: 'fa fa-circle-thin' }),
                                    _this.state.salesMethod === _this.bidding && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('i', { className: 'fa fa-check-circle-o' }),
                                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                        'div',
                                        { className: "title" },
                                        _this.context.t("CL_STEP4_EDIT_BUNDLE_TYPE_BIDDING")
                                    )
                                ),
                                __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                    'div',
                                    { className: "item", style: { paddingLeft: 0, paddingRight: 0 } },
                                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                        'span',
                                        null,
                                        _this.state.salesMethod === _this.fixed && "Fixed fee",
                                        _this.state.salesMethod !== _this.fixed && "Minimum bid (optional)"
                                    ),
                                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('input', {
                                        type: 'number',
                                        min: 0,
                                        onChange: _this.updateFee,
                                        value: _this.state.fee,
                                        style: { height: "26px", width: "100px" } }),
                                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                        'span',
                                        { style: { width: 'auto', padding: '0 10px' } },
                                        _this.getCurrencySymbol()
                                    )
                                )
                            )
                        ),
                        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                            'div',
                            { className: 'base-full-input' },
                            __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                'label',
                                { style: labelStyle },
                                'Payment details'
                            ),
                            _this.state.installments.map(function (installment, i, list) {
                                return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                    'div',
                                    { className: "content" },
                                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                        'div',
                                        { className: "item", style: { paddingLeft: 0 } },
                                        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                            'div',
                                            { className: "title" },
                                            i + 1,
                                            ' Instalment ',
                                            __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('input', { onChange: function onChange(e) {
                                                    _this.setInstallmentValue(e.target.value, i);
                                                }, style: { height: "26px", width: "70px" }, type: 'number', max: 100, value: installment.value }),
                                            ' % of payment'
                                        ),
                                        installment.type !== "DATE" && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('i', { style: installmentIconStyle, className: 'fa fa-circle-thin', onClick: function onClick() {
                                                _this.setInstallmentType("DATE", i);
                                            } }),
                                        installment.type === "DATE" && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('i', { style: installmentIconStyle, className: 'fa fa-check-circle-o' }),
                                        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                            'div',
                                            { className: "title" },
                                            __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_5_react_datepicker__["default"], {
                                                disabled: installment.type !== "DATE",
                                                selected: installment.date,
                                                placeholderText: "dd/mm/yyyy",
                                                onChange: function onChange(date) {
                                                    _this.setInstallmentDate(date, i);
                                                },
                                                className: 'small-datepicker' })
                                        ),
                                        installment.type !== "DAY" && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('i', { style: installmentIconStyle, className: 'fa fa-circle-thin', onClick: function onClick() {
                                                _this.setInstallmentType("DAY", i);
                                            } }),
                                        installment.type === "DAY" && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('i', { style: installmentIconStyle, className: 'fa fa-check-circle-o' }),
                                        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                            'div',
                                            { className: "title" },
                                            __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('input', {
                                                type: 'number',
                                                min: 0,
                                                onChange: function onChange(e) {
                                                    _this.setInstallmentDays(e.target.value, i);
                                                },
                                                disabled: installment.type !== "DAY",
                                                value: installment.days,
                                                style: { height: "26px", width: "70px" } }),
                                            ' days after contract conclusion'
                                        ),
                                        i !== 0 && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('i', { style: { margin: 0, position: "relative" }, className: 'fa fa-minus-circle', onClick: function onClick() {
                                                _this.removeInstallment(i);
                                            } }),
                                        i === list.length - 1 && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('i', { style: { margin: 0, position: "relative" }, className: 'fa fa-plus-circle', onClick: _this.addInstallment })
                                    )
                                );
                            })
                        )
                    )
                ),
                __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                    'div',
                    { className: 'error', style: {
                            width: '100%',
                            textAlign: 'center',
                            fontSize: '12px',
                            color: 'red'
                        } },
                    _this.installmentsIncomplete() && _this.context.t("CL_STEP4_EDIT_BUNDLE_INSTALLMENT_WARNING")
                ),
                __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                    'div',
                    { className: "buttons" },
                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        'button',
                        {
                            className: 'standard-button',
                            disabled: _this.state.salesMethod === _this.fixed && Number(_this.state.fee) === 0 || _this.territoriesIncomplete() || _this.installmentsIncomplete(),
                            onClick: _this.applySelection },
                        'Ok'
                    )
                )
            );
            var isExcludedTerritoriesEnabled = territoriesMethod === _this.worldwideExcluding;

            var isWorldwideEnabled = territoriesMethod === _this.worldwide;
        };

        _this.territoriesIncomplete = function () {
            var _this$state3 = _this.state,
                territoriesMethod = _this$state3.territoriesMethod,
                territories = _this$state3.territories;


            if (territoriesMethod === _this.selectedTerritories && territories.length === 0) return true;

            if (territoriesMethod === _this.worldwideExcluding && territories.length === 0 && _this.getExcludedTerritories().length === 0) return true;
        };

        _this.showAllTerritories = function (extraTerritories) {
            _this.setState({
                showAllTerritories: true,
                territoriesList: extraTerritories
            });
        };

        _this.allTerritories = function () {

            return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                __WEBPACK_IMPORTED_MODULE_1_react_modal___default.a,
                {
                    isOpen: _this.state.showAllTerritories,
                    onRequestClose: _this.closeTerritoriesModal,
                    bodyOpenClassName: "selector",
                    style: __WEBPACK_IMPORTED_MODULE_2__main_styles_custom__["c" /* customStyles */]
                },
                __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                    'div',
                    { className: 'modal-inner' },
                    _this.state.territoriesList.map(function (territory) {
                        return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                            'div',
                            { className: 'country-modal' },
                            territory.label
                        );
                    })
                )
            );
        };

        _this.showTerritories = function (salesPackage) {
            return salesPackage.bundleMethod === _this.individually && salesPackage.territoriesMethod === _this.worldwide || salesPackage.territoriesMethod !== _this.worldwide;
        };

        _this.installmentsIncomplete = function () {
            var installments = _this.state.installments;

            var total = 0;

            installments.forEach(function (i) {
                total += Number(i.value);
            });

            return total !== 100;
        };

        _this.getFee = function (salesPackage) {
            var feeNumber = parseFloat(salesPackage.fee);
            return feeNumber.toLocaleString() + " " + _this.getCurrencySymbol();
        };

        _this.getCurrencySymbol = function () {
            var currency = _this.props.currency;

            return currency === "EUR" ? "€" : "$";
        };

        _this.sortSalesPackages = function (a, b) {

            var aWorldwide = a.territoriesMethod === "WORLDWIDE";
            var bWorldwide = b.territoriesMethod === "WORLDWIDE";

            var worldwide = aWorldwide && !bWorldwide ? 1 : bWorldwide && !aWorldwide ? -1 : 0;

            return worldwide || _this.compareProperty(a.territories.length, b.territories.length) || _this.compareProperty(a.name, b.name);
        };

        _this.compareProperty = function (a, b) {
            return a > b ? 1 : b > a ? -1 : 0;
        };

        _this.asBundle = "SELL_AS_BUNDLE";
        _this.individually = "SELL_INDIVIDUALLY";
        _this.worldwide = "WORLDWIDE";
        _this.worldwideExcluding = "WORLDWIDE_EXCLUDING";
        _this.selectedTerritories = "SELECTED_TERRITORIES";
        _this.fixed = "FIXED";
        _this.bidding = "BIDDING";
        _this.limit = 3;
        _this.state = {
            isOpen: props.isOpen,
            bundleMethod: _this.asBundle,
            territoriesMethod: _this.selectedTerritories,
            salesMethod: _this.fixed,
            territories: [],
            excludedTerritories: [],
            filterTerritories: [],
            territoriesList: [],
            installments: [{ value: 100, type: "DAY", days: 30 }],
            fee: 0,
            isNew: true,
            territoriesQuantity: 'single',
            countries: ContentArena.Data.Countries
        };
        _this.bidIcon = assetsBaseDir + "app/images/hammer.png";
        _this.fixedIcon = assetsBaseDir + "app/images/bid.png";
        _this.draftIcon = assetsBaseDir + "app/images/draft.png";
        _this.cancelIcon = assetsBaseDir + "app/images/cancel.png";
        return _this;
    }

    _createClass(SalesPackageForm, [{
        key: 'componentDidMount',
        value: function componentDidMount() {
            var _this2 = this;

            ContentArena.Api.getCountries().done(function (countries) {
                _this2.setState({ countries: countries });
            });
        }
    }, {
        key: 'render',
        value: function render() {
            var _this3 = this;

            var _props = this.props,
                onRemove = _props.onRemove,
                hideButtons = _props.hideButtons,
                currency = _props.currency,
                fullSize = _props.fullSize,
                sort = _props.sort,
                listingId = _props.listingId,
                selectCurrency = _props.selectCurrency;

            var inputStyle = fullSize ? { maxWidth: 'none' } : null;
            var salesPackages = this.props.salesPackages;

            if (sort) salesPackages.sort(this.sortSalesPackages);
            return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                'div',
                { className: 'sales-package-form' },
                this.renderModal(),
                this.allTerritories(),
                __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                    'div',
                    { className: 'base-full-input', style: inputStyle },
                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        'label',
                        null,
                        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                            'div',
                            { className: 'label-text' },
                            this.context.t("CL_STEP4_SALES_BUNDLES"),
                            __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('i', { className: 'fa fa-info-circle tooltip-icon', title: 'Offer individual sales bundles to buyers. A sales bundle may consist out of one or multiple territories. For each sales bundle, you can set an individual payment method (fixed fee or bid) and payment schedule.' })
                        ),
                        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_4__components_CurrencySelector__["a" /* default */], { onClick: selectCurrency, selected: currency }),
                        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('div', { className: 'clearfix' })
                    ),
                    !salesPackages.length && this.addBundlesAvailable() && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        'div',
                        { className: 'sales-bundles-placeholder' },
                        this.renderAddSalesBundleButton()
                    ),
                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        'div',
                        { className: 'content', style: hideButtons ? containerStyle : smallContainerStyle },
                        salesPackages.map(function (salesPackage, i) {

                            var extraTerritories = salesPackage.territoriesMethod === _this3.worldwideExcluding ? salesPackage.excludedTerritories : salesPackage.territories;

                            return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                'div',
                                { className: 'sales-package-container', key: i },
                                __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                    'div',
                                    { className: 'sales-package', key: "sales-package-" + i },
                                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                        'div',
                                        { style: { flex: 5, cursor: 'default' } },
                                        salesPackage.name,
                                        extraTerritories && extraTerritories.length > 3 && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                            'span',
                                            {
                                                style: {
                                                    color: '#2DA7E6',
                                                    textDecoration: 'underline',
                                                    marginLeft: 5
                                                },
                                                onClick: function onClick() {
                                                    _this3.showAllTerritories(extraTerritories);
                                                } },
                                            "+" + (extraTerritories.length - 3)
                                        )
                                    ),
                                    hideButtons && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_7__main_components_LicenseDownloader__["a" /* default */], {
                                        type: "BUNDLE",
                                        id: salesPackage.id,
                                        listingId: listingId,
                                        style: { flex: 1, display: 'flex', justifyContent: 'center' } }),
                                    salesPackage.territories.length !== 1 && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                        'div',
                                        { style: { marginLeft: 20, justifyContent: "flex-end", display: "flex" } },
                                        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('img', { style: { marginTop: '2px', width: 26, height: 23 }, src: _this3.fixedIcon })
                                    ),
                                    salesPackage.salesMethod === "BIDDING" && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                        'div',
                                        { style: { marginLeft: 20, justifyContent: "flex-end", display: "flex" } },
                                        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('img', { style: { width: 23, height: 23 }, src: _this3.bidIcon })
                                    ),
                                    (salesPackage.salesMethod !== "BIDDING" || salesPackage.salesMethod === "BIDDING" && salesPackage.fee > 0) && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                        'div',
                                        { style: { marginLeft: 20, justifyContent: "flex-end", display: "flex", cursor: 'default' } },
                                        _this3.getFee(salesPackage)
                                    )
                                ),
                                !hideButtons && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('img', { style: { width: 23, height: 23, cursor: 'pointer', margin: '15px 5px 0' },
                                    src: _this3.cancelIcon,
                                    onClick: function onClick() {
                                        onRemove(i);
                                    } }),
                                !hideButtons && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('img', { style: { width: 23, height: 23, cursor: 'pointer', margin: '15px 5px 0', color: 'grey' },
                                    src: _this3.draftIcon,
                                    onClick: function onClick() {
                                        _this3.editSalesPackage(salesPackage, i);
                                    } })
                            );
                        })
                    )
                ),
                !hideButtons && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                    'div',
                    { style: { display: "flex", justifyContent: "flex-end" } },
                    this.addBundlesAvailable() && this.renderAddSalesBundleButton(),
                    salesPackages.length > 0 && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        'div',
                        { className: "add-item", onClick: this.props.onRemoveAll },
                        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('i', { className: 'fa fa-minus-circle' }),
                        this.context.t("CL_STEP4_REMOVE_ALL_BUNDLES")
                    )
                )
            );
        }
    }, {
        key: 'renderAddSalesBundleButton',
        value: function renderAddSalesBundleButton() {
            var _this4 = this;

            return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                'div',
                { className: "add-item", onClick: function onClick() {
                        _this4.setState({ isOpen: true, isNew: true });
                    } },
                __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('i', { className: 'fa fa-plus-circle' }),
                this.context.t("CL_STEP4_ADD_SALES_BUNDLE")
            );
        }
    }]);

    return SalesPackageForm;
}(__WEBPACK_IMPORTED_MODULE_0_react___default.a.Component);

SalesPackageForm.contextTypes = {
    t: __WEBPACK_IMPORTED_MODULE_8_prop_types__["PropTypes"].func.isRequired
};

/* harmony default export */ __webpack_exports__["a"] = (SalesPackageForm);

/***/ }),

/***/ "./src/AppBundle/Resources/public/javascript/sell/components/SellForm.js":
/*!*******************************************************************************!*\
  !*** ./src/AppBundle/Resources/public/javascript/sell/components/SellForm.js ***!
  \*******************************************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_react__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__containers_SellButtons__ = __webpack_require__(/*! ../containers/SellButtons */ "./src/AppBundle/Resources/public/javascript/sell/containers/SellButtons.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__containers_SellFormSteps__ = __webpack_require__(/*! ../containers/SellFormSteps */ "./src/AppBundle/Resources/public/javascript/sell/containers/SellFormSteps.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__containers_SellFormStep1__ = __webpack_require__(/*! ../containers/SellFormStep1 */ "./src/AppBundle/Resources/public/javascript/sell/containers/SellFormStep1.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__containers_SellFormStep2__ = __webpack_require__(/*! ../containers/SellFormStep2 */ "./src/AppBundle/Resources/public/javascript/sell/containers/SellFormStep2.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__containers_SellFormStep3__ = __webpack_require__(/*! ../containers/SellFormStep3 */ "./src/AppBundle/Resources/public/javascript/sell/containers/SellFormStep3.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__containers_SellFormStep4__ = __webpack_require__(/*! ../containers/SellFormStep4 */ "./src/AppBundle/Resources/public/javascript/sell/containers/SellFormStep4.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__containers_ReviewAndSign__ = __webpack_require__(/*! ../containers/ReviewAndSign */ "./src/AppBundle/Resources/public/javascript/sell/containers/ReviewAndSign.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__main_components_Selector__ = __webpack_require__(/*! ../../main/components/Selector */ "./src/AppBundle/Resources/public/javascript/main/components/Selector.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9_react_redux__ = __webpack_require__(/*! react-redux */ "./node_modules/react-redux/es/index.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_10__main_store__ = __webpack_require__(/*! ../../main/store */ "./src/AppBundle/Resources/public/javascript/main/store.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_11_react_tooltip__ = __webpack_require__(/*! react-tooltip */ "./node_modules/react-tooltip/dist/index.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_11_react_tooltip___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_11_react_tooltip__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_12__main_actions_userActions__ = __webpack_require__(/*! ../../main/actions/userActions */ "./src/AppBundle/Resources/public/javascript/main/actions/userActions.js");
var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
















var SellForm = function (_React$Component) {
    _inherits(SellForm, _React$Component);

    function SellForm(props) {
        _classCallCheck(this, SellForm);

        var _this = _possibleConstructorReturn(this, (SellForm.__proto__ || Object.getPrototypeOf(SellForm)).call(this, props));

        _this.componentDidMount = function () {
            _this.props.contentListingInit(_this.state.content);
            _this.props.updateProfile('SELLER');
        };

        var content = props.content.initialized ? props.content : JSON.parse(props.newListing);
        content.jurisdiction = {
            label: content.company.country.name,
            value: content.company.country.name
        };

        content = ContentArena.Utils.contentParserFromServer(content);

        if (props.match && props.match.params.step) {

            content.step = props.match.params.step === "sign" ? 5 : Number(props.match.params.step);
        }

        _this.state = {
            content: content,
            showSearch: props.match.params.customId === "new"
        };

        __WEBPACK_IMPORTED_MODULE_10__main_store__["a" /* default */].subscribe(function (a) {
            //console.log(store.getState());
        });
        return _this;
    }

    _createClass(SellForm, [{
        key: "render",
        value: function render() {
            var history = this.props.history;

            var defaultRightsPackage = JSON.parse(this.props.rights);
            return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                "div",
                { className: "manager-content" },
                __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_8__main_components_Selector__["a" /* default */], { style: { zIndex: 100 } }),
                __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_2__containers_SellFormSteps__["a" /* default */], { history: history }),
                __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_3__containers_SellFormStep1__["a" /* default */], { history: history, showSearch: this.state.showSearch }),
                __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_4__containers_SellFormStep2__["a" /* default */], { packages: this.props.packages }),
                __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_5__containers_SellFormStep3__["a" /* default */], { packages: this.props.packages }),
                __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_6__containers_SellFormStep4__["a" /* default */], { packages: this.props.packages }),
                __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_7__containers_ReviewAndSign__["a" /* default */], { history: history, defaultRightsPackage: defaultRightsPackage }),
                __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_1__containers_SellButtons__["a" /* default */], { history: history }),
                __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_11_react_tooltip___default.a, { html: true })
            );
        }
    }]);

    return SellForm;
}(__WEBPACK_IMPORTED_MODULE_0_react___default.a.Component);

var mapStateToProps = function mapStateToProps(state, ownProps) {
    return ownProps;
};

var mapDispatchToProps = function mapDispatchToProps(dispatch) {
    return {
        contentListingInit: function contentListingInit(content) {
            return dispatch({
                type: 'CONTENT_INIT',
                content: content
            });
        },
        updateProfile: function updateProfile(profile) {
            return dispatch(Object(__WEBPACK_IMPORTED_MODULE_12__main_actions_userActions__["b" /* updateProfile */])(profile));
        }
    };
};

/* harmony default export */ __webpack_exports__["a"] = (Object(__WEBPACK_IMPORTED_MODULE_9_react_redux__["connect"])(mapStateToProps, mapDispatchToProps)(SellForm));

/***/ }),

/***/ "./src/AppBundle/Resources/public/javascript/sell/components/SellFormItems.js":
/*!************************************************************************************!*\
  !*** ./src/AppBundle/Resources/public/javascript/sell/components/SellFormItems.js ***!
  \************************************************************************************/
/*! exports provided: Description, TitleBar, SummaryText, NewCategory, NewTournament, Schedules, StaticSchedules, SportSelector */
/*! exports used: Description, NewCategory, NewTournament, SportSelector, StaticSchedules, SummaryText, TitleBar */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return Description; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "g", function() { return TitleBar; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "f", function() { return SummaryText; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "b", function() { return NewCategory; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "c", function() { return NewTournament; });
/* unused harmony export Schedules */
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "e", function() { return StaticSchedules; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "d", function() { return SportSelector; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_react__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_moment__ = __webpack_require__(/*! moment */ "./node_modules/moment/moment.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_moment___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_moment__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__components_Round__ = __webpack_require__(/*! ../components/Round */ "./src/AppBundle/Resources/public/javascript/sell/components/Round.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__components_StaticRound__ = __webpack_require__(/*! ../components/StaticRound */ "./src/AppBundle/Resources/public/javascript/sell/components/StaticRound.js");
var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }






var Description = function Description(_ref) {
    var value = _ref.value,
        onChange = _ref.onChange,
        _ref$title = _ref.title,
        title = _ref$title === undefined ? "Enter a description" : _ref$title,
        _ref$placeholder = _ref.placeholder,
        placeholder = _ref$placeholder === undefined ? "Provide a short description of your content listing" : _ref$placeholder;
    return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
        'div',
        { className: 'textarea-input' },
        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
            'label',
            null,
            title,
            ' (optional)'
        ),
        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('textarea', { onChange: onChange, value: value, placeholder: placeholder })
    );
};

var TitleBar = function TitleBar(_ref2) {
    var title = _ref2.title,
        subtitle = _ref2.subtitle,
        infoText = _ref2.infoText;
    return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
        'div',
        { className: 'title-bar' },
        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('hr', null),
        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
            'div',
            { className: "title" },
            title
        ),
        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
            'div',
            { className: "subtitle" },
            subtitle
        ),
        infoText && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('i', { className: 'fa fa-info-circle tooltip-icon', title: infoText })
    );
};

var SummaryText = function SummaryText(_ref3) {
    var sports = _ref3.sports,
        sportCategory = _ref3.sportCategory,
        tournament = _ref3.tournament,
        seasons = _ref3.seasons;


    var summary = "",
        rounds = [],
        fixtures = [],
        matches = [];

    if (sports.length === 0 && sportCategory.length === 0 && tournament.length === 0) return null;

    summary += sports[0].name;
    if (sportCategory.length > 0) summary += " - " + sportCategory[0].name;
    if (tournament.length > 0) summary += " - " + tournament[0].name;
    if (seasons.length > 0) {
        var seasonsStr = [];
        seasons.forEach(function (s) {
            var str = s.custom ? s.from + '/' + s.to : s.year;
            seasonsStr.push(str);
            if (s.fixtures) fixtures = [].concat(_toConsumableArray(fixtures), _toConsumableArray(s.fixtures));
        });

        if (seasonsStr.length) {
            summary += " - " + seasonsStr.join(' - ');
        }
    }

    if (rounds.length <= 1 && fixtures.length === 1) summary += ' - ' + fixtures[0].name + ' (' + __WEBPACK_IMPORTED_MODULE_1_moment___default()(fixtures[0].date).format('DD-MM-YYYY') + ')';
    if (rounds.length <= 1 && fixtures.length > 1) summary += " - " + fixtures.length + " Fixtures";
    if (rounds.length <= 1 && matches.length === 1) summary += " - " + matches[0].competitors.map(function (competitor) {
        return competitor.name;
    }).join(" vs ");
    if (rounds.length === 1 && matches.length !== 1) summary += " - " + rounds[0];
    if (rounds.length > 1) summary += " - Multiple rounds";

    return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
        'span',
        null,
        summary
    );
};

var NewCategory = function NewCategory(_ref4) {
    var onClick = _ref4.onClick,
        showClose = _ref4.showClose,
        onBlur = _ref4.onBlur,
        value = _ref4.value;
    return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
        'div',
        { className: 'base-input' },
        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
            'label',
            null,
            'Country/Category'
        ),
        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('input', {
            className: 'new-category',
            type: 'text',
            placeholder: 'Enter Country/Category',
            onBlur: onBlur,
            defaultValue: value }),
        showClose && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
            'button',
            { onClick: onClick, className: "standard-button" },
            __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('i', { className: 'fa fa-close' })
        )
    );
};

var NewTournament = function NewTournament(_ref5) {
    var onClick = _ref5.onClick,
        showClose = _ref5.showClose,
        onBlur = _ref5.onBlur,
        value = _ref5.value;
    return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
        'div',
        { className: 'base-input' },
        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
            'label',
            null,
            'Competition'
        ),
        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('input', {
            className: 'new-category',
            type: 'text',
            onBlur: onBlur,
            defaultValue: value,
            placeholder: 'Enter competition name' }),
        showClose && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
            'button',
            { onClick: onClick, className: "standard-button" },
            __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('i', { className: 'fa fa-close' })
        )
    );
};

var Schedules = function Schedules(_ref6) {
    var season = _ref6.season,
        seasons = _ref6.seasons;
    return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
        'div',
        { className: 'schedule' },
        seasons && seasons[season] && seasons[season].schedules && Object.keys(seasons[season].schedules).map(function (number, i) {
            return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_2__components_Round__["a" /* default */], { seasons: seasons, key: i, round: number, season: season });
        })
    );
};

var StaticSchedules = function StaticSchedules(_ref7) {
    var season = _ref7.season,
        seasons = _ref7.seasons;
    return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
        'div',
        { className: 'schedule' },
        seasons && seasons[season] && seasons[season].schedules && Object.keys(seasons[season].schedules).map(function (number, i) {
            return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_3__components_StaticRound__["a" /* default */], { seasons: seasons, key: i, round: number, season: season });
        })
    );
};

var SportSelector = function (_React$Component) {
    _inherits(SportSelector, _React$Component);

    function SportSelector(props) {
        _classCallCheck(this, SportSelector);

        var _this = _possibleConstructorReturn(this, (SportSelector.__proto__ || Object.getPrototypeOf(SportSelector)).call(this, props));

        _this.handle = function (e) {
            var onUpdateNew = _this.props.onUpdateNew;


            if (onUpdateNew) onUpdateNew(e.target.value);
        };

        _this.state = {};
        return _this;
    }

    _createClass(SportSelector, [{
        key: 'render',
        value: function render() {
            var _props = this.props,
                sports = _props.sports,
                index = _props.index;

            return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                'div',
                null,
                __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                    'div',
                    { className: 'base-input' },
                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        'label',
                        null,
                        'Sport'
                    ),
                    !this.props.isCustom && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('input', { type: 'text',
                        value: this.props.value,
                        readOnly: true,
                        onClick: this.props.onClick,
                        placeholder: "e.g. Soccer" }),
                    this.props.isCustom && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('input', {
                        className: 'new-sport',
                        type: 'text',
                        value: sports[index].value,
                        onChange: this.handle,
                        placeholder: 'Enter sport' }),
                    (this.props.isCustom || this.props.showClose) && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        'button',
                        { className: 'standard-button', onClick: this.props.remove },
                        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('i', { className: 'fa fa-close' })
                    )
                ),
                this.props.showAddNew && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                    'button',
                    { style: { marginBottom: "25px" }, className: "link-button", onClick: this.props.addSportSelector },
                    'Add sport'
                )
            );
        }
    }]);

    return SportSelector;
}(__WEBPACK_IMPORTED_MODULE_0_react___default.a.Component);

/***/ }),

/***/ "./src/AppBundle/Resources/public/javascript/sell/components/StaticRound.js":
/*!**********************************************************************************!*\
  !*** ./src/AppBundle/Resources/public/javascript/sell/components/StaticRound.js ***!
  \**********************************************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_react__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__Match__ = __webpack_require__(/*! ./Match */ "./src/AppBundle/Resources/public/javascript/sell/components/Match.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_react_redux__ = __webpack_require__(/*! react-redux */ "./node_modules/react-redux/es/index.js");
var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }





var StaticRound = function (_React$Component) {
    _inherits(StaticRound, _React$Component);

    function StaticRound(props) {
        _classCallCheck(this, StaticRound);

        var _this = _possibleConstructorReturn(this, (StaticRound.__proto__ || Object.getPrototypeOf(StaticRound)).call(this, props));

        _this.toggle = function (e) {
            var _this$props = _this.props,
                seasons = _this$props.seasons,
                season = _this$props.season,
                round = _this$props.round,
                updateFromMultiple = _this$props.updateFromMultiple;

            var selected = e.target.checked;
            var schedules = seasons[season].schedules;
            var activeRound = schedules[round];
            activeRound.selected = selected;

            updateFromMultiple("seasons", season, "schedules", schedules);

            e.stopPropagation();
            _this.selectAll(selected);
        };

        _this.toggleMatches = function (e) {
            var _this$state = _this.state,
                seasons = _this$state.seasons,
                season = _this$state.season,
                round = _this$state.round;


            var schedules = seasons[season].schedules;
            var activeRound = schedules[round];
            activeRound.showMatches = !activeRound.showMatches;
            _this.setState({ seasons: seasons });
            e.stopPropagation();
        };

        _this.selectAll = function (selected) {
            var _this$props2 = _this.props,
                seasons = _this$props2.seasons,
                season = _this$props2.season,
                round = _this$props2.round,
                updateFromMultiple = _this$props2.updateFromMultiple;


            var schedules = seasons[season].schedules;
            var activeRound = schedules[round];
            activeRound.matches.forEach(function (match) {
                match.selected = selected;
            });
            updateFromMultiple("seasons", season, "schedules", schedules);
        };

        _this.getSelected = function () {
            var _this$props3 = _this.props,
                seasons = _this$props3.seasons,
                season = _this$props3.season,
                round = _this$props3.round;


            var schedule = seasons[season].schedules;
            var activeRound = schedule[round];
            return Array.from(activeRound.matches.values()).filter(function (m) {
                return m.selected;
            }).length;
        };

        _this.completeSeason = function () {
            var _this$props4 = _this.props,
                seasons = _this$props4.seasons,
                season = _this$props4.season,
                round = _this$props4.round;

            var schedule = seasons[season].schedules;
            return Object.values(schedule).filter(function (r) {
                return Array.from(r.matches.values()).filter(function (m) {
                    return m.selected;
                }).length > 0;
            }).length === 0;
        };

        _this.state = {
            seasons: props.seasons,
            season: props.season,
            round: props.round
        };
        return _this;
    }

    _createClass(StaticRound, [{
        key: 'render',
        value: function render() {
            var _state = this.state,
                seasons = _state.seasons,
                season = _state.season,
                round = _state.round;


            var schedule = seasons[season].schedules;
            var activeRound = schedule[round];
            var complete = this.completeSeason();
            var selected = this.getSelected();

            if (!complete && selected === 0) return null;

            return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                'div',
                { className: "matchday" },
                __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                    'div',
                    { className: 'ca-checkbox select-box-checkbox' },
                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        'div',
                        { style: { width: '100%' } },
                        isNaN(round) && round,
                        !isNaN(round) && "Matchday " + round,
                        (complete || selected === activeRound.matches.size) && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                            'span',
                            { onClick: this.toggleMatches },
                            'All >'
                        ),
                        !complete && selected !== activeRound.matches.size && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                            'span',
                            { onClick: this.toggleMatches },
                            selected,
                            ' Selected >'
                        )
                    )
                ),
                activeRound.showMatches && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                    'div',
                    { className: "match-group" },
                    activeRound.matches.size > 0 && Array.from(activeRound.matches.values()).map(function (item, i) {
                        return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                            'div',
                            { className: "match", key: "match-" + i },
                            (item.selected || complete) && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('i', { className: 'fa fa-circle' }),
                            !item.selected && !complete && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('i', { className: 'fa fa-circle-o' }),
                            item.competitors.map(function (competitor, ci, list) {
                                return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                    'span',
                                    { key: ci },
                                    competitor.name,
                                    ' ',
                                    list.length !== ci + 1 && " vs "
                                );
                            })
                        );
                    })
                )
            );
        }
    }]);

    return StaticRound;
}(__WEBPACK_IMPORTED_MODULE_0_react___default.a.Component);

/* harmony default export */ __webpack_exports__["a"] = (StaticRound);

/***/ }),

/***/ "./src/AppBundle/Resources/public/javascript/sell/components/SuperRightDefinitions.js":
/*!********************************************************************************************!*\
  !*** ./src/AppBundle/Resources/public/javascript/sell/components/SuperRightDefinitions.js ***!
  \********************************************************************************************/
/*! exports provided: SuperRightDefinitions, SuperRightProductionDetailsLabels, SuperRightBoardLabels */
/*! exports used: SuperRightBoardLabels, SuperRightDefinitions, SuperRightProductionDetailsLabels */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "b", function() { return SuperRightDefinitions; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "c", function() { return SuperRightProductionDetailsLabels; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return SuperRightBoardLabels; });
var SuperRightDefinitions = {
    "LT": ["means the right to a real-time (subject to latency) Transmission of a Live Feed of the Event other than in Betting Shops and on Betting Platforms."],
    "DT": ["means the right to a full-length delayed Transmission of a Live Feed of the Event commencing not before end of the Event or the Time Embargo defined."],
    "LB": ["means the right to real-time (subject to latency) Transmission of a Live Feed of the Event in Betting Shops and on Betting Platforms;"],
    "NA": ["means the right to a Transmission of Footage of the Event not exceeding", {
        key: "NA_INPUT"
    }, "seconds in news programs not before the end of the relevant Event or the Time Embargo defined"],
    "HL": ["means the right to a Transmission of Highlight footage of the Event not exceeding", {
        key: "HL_INPUT"
    }, "minutes not before the end of the relevant Event or the Time Embargo defined"],
    "PR": ["means the right to a Transmission of the specific Programs provided by Licensor to Licensee."]
};

var SuperRightProductionDetailsLabels = {
    "LT": "Live Feed",
    "DT": "Delayed & Archive Content",
    "LB": "Live Betting Feed",
    "HL": "Highlight & Clip Footage",
    "NA": "News Footage",
    "PR": "Edited Program"
};

var SuperRightBoardLabels = {
    "LT": "Live",
    "DT": "Delayed&Archive",
    "LB": "Betting",
    "HL": "Highlights&Clips",
    "NA": "News",
    "PR": "Program"
};

/***/ }),

/***/ "./src/AppBundle/Resources/public/javascript/sell/containers/PackageSelector.js":
/*!**************************************************************************************!*\
  !*** ./src/AppBundle/Resources/public/javascript/sell/containers/PackageSelector.js ***!
  \**************************************************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_react__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_react_redux__ = __webpack_require__(/*! react-redux */ "./node_modules/react-redux/es/index.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_react_toggle__ = __webpack_require__(/*! react-toggle */ "./node_modules/react-toggle/dist/component/index.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_react_toggle___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2_react_toggle__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__components_RightDefaults__ = __webpack_require__(/*! ../components/RightDefaults */ "./src/AppBundle/Resources/public/javascript/sell/components/RightDefaults.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__actions_contentActions__ = __webpack_require__(/*! ../actions/contentActions */ "./src/AppBundle/Resources/public/javascript/sell/actions/contentActions.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__components_SuperRightDefinitions__ = __webpack_require__(/*! ../components/SuperRightDefinitions */ "./src/AppBundle/Resources/public/javascript/sell/components/SuperRightDefinitions.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__components_RightDefaultsBySuperRight__ = __webpack_require__(/*! ../components/RightDefaultsBySuperRight */ "./src/AppBundle/Resources/public/javascript/sell/components/RightDefaultsBySuperRight.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7_prop_types__ = __webpack_require__(/*! prop-types */ "./node_modules/prop-types/index.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7_prop_types___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_7_prop_types__);
var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }










var SuperRight = function (_React$Component) {
    _inherits(SuperRight, _React$Component);

    function SuperRight(props) {
        _classCallCheck(this, SuperRight);

        var _this2 = _possibleConstructorReturn(this, (SuperRight.__proto__ || Object.getPrototypeOf(SuperRight)).call(this, props));

        _this2.state = {
            checked: props.checked
        };
        return _this2;
    }

    _createClass(SuperRight, [{
        key: 'componentWillReceiveProps',
        value: function componentWillReceiveProps(nextProps) {
            this.setState({ checked: nextProps.checked });
        }
    }, {
        key: 'render',
        value: function render() {
            var _this3 = this;

            var _props = this.props,
                onExclusive = _props.onExclusive,
                superRight = _props.superRight,
                exclusive = _props.exclusive,
                onChangeInput = _props.onChangeInput,
                inputValues = _props.inputValues;

            var defByLabel = __WEBPACK_IMPORTED_MODULE_5__components_SuperRightDefinitions__["b" /* SuperRightDefinitions */][superRight.shortLabel] || [];

            var inputData = defByLabel[1];

            return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                'div',
                { className: 'select-box-item' },
                __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                    'div',
                    { className: 'select-box-item-child' },
                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('input', { type: 'checkbox',
                        defaultChecked: this.props.checked,
                        checked: this.state.checked,
                        onChange: function onChange(e) {
                            _this3.setState({ checked: e.target.checked });
                            _this3.props.onChange(_this3.props.superRight, e.target.checked);
                        },
                        id: "super-right-" + this.props.superRight.id,

                        className: 'ca-checkbox package-selector' }),
                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('div', { className: 'checkbox-custom' }),
                    superRight.name
                ),
                __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                    'div',
                    { className: 'select-box-item-child' },
                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_2_react_toggle___default.a, {
                        icons: false,
                        checked: exclusive,
                        disabled: !this.state.checked,
                        onChange: function onChange(e) {
                            _this3.setState({ exclusive: e.target.checked });
                            onExclusive(superRight, e.target.checked);
                        }
                    })
                ),
                __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                    'div',
                    { className: 'select-box-item-child' },
                    defByLabel[0],
                    inputData && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('input', {
                        type: "number",
                        onChange: function onChange(e) {
                            onChangeInput(inputData.key, Number(e.target.value));
                        },
                        value: inputValues[inputData.key],
                        disabled: !this.state.checked,
                        style: {
                            margin: '0 5px',
                            padding: 4,
                            width: 70,
                            fontSize: 12
                        } }),
                    defByLabel[2] && defByLabel[2]
                )
            );
        }
    }]);

    return SuperRight;
}(__WEBPACK_IMPORTED_MODULE_0_react___default.a.Component);

var PackageSelector = function (_React$Component2) {
    _inherits(PackageSelector, _React$Component2);

    function PackageSelector(props) {
        _classCallCheck(this, PackageSelector);

        var _this4 = _possibleConstructorReturn(this, (PackageSelector.__proto__ || Object.getPrototypeOf(PackageSelector)).call(this, props));

        _this4.updateSuperRightsList = function (superRight, status) {
            if (status && !_this4.state.rightsPackage.has(superRight.id)) _this4.state.rightsPackage.set(superRight.id, superRight);
            if (!status && _this4.state.rightsPackage.has(superRight.id)) _this4.state.rightsPackage.delete(superRight.id);
            _this4.props.superRightsUpdated(_this4.state.rightsPackage);
        };

        _this4.onExclusive = function (superRight, status) {

            var rightPackage = _this4.state.rightsPackage.get(superRight.id);
            rightPackage.exclusive = status;
            _this4.state.rightsPackage.set(superRight.id, rightPackage);
            _this4.props.superRightsUpdated(_this4.state.rightsPackage);
        };

        _this4.state = {
            packages: JSON.parse(props.packages).map(function (p) {
                p.selectedRights = Object.assign({}, __WEBPACK_IMPORTED_MODULE_3__components_RightDefaults__["a" /* RightDefaults */]);
                if (__WEBPACK_IMPORTED_MODULE_6__components_RightDefaultsBySuperRight__["a" /* RightDefaultsBySuperRight */][p.shortLabel] !== undefined) {
                    p.selectedRights = Object.assign({}, p.selectedRights, __WEBPACK_IMPORTED_MODULE_6__components_RightDefaultsBySuperRight__["a" /* RightDefaultsBySuperRight */][p.shortLabel]);
                }

                return p;
            }),
            rightsPackage: new Map(props.rightsPackage.map(function (i) {
                if (!i.selectedRights) i.selectedRights = Object.assign({}, __WEBPACK_IMPORTED_MODULE_3__components_RightDefaults__["a" /* RightDefaults */]);
                return [i.id, i];
            })),
            defaultRights: false
        };
        return _this4;
    }

    _createClass(PackageSelector, [{
        key: 'componentWillReceiveProps',
        value: function componentWillReceiveProps(nextProps) {
            this.setState({ rightsPackage: new Map(nextProps.rightsPackage.map(function (i) {
                    return [i.id, i];
                })) });
        }
    }, {
        key: 'render',
        value: function render() {
            var _this = this;
            var _props2 = this.props,
                HL_INPUT = _props2.HL_INPUT,
                NA_INPUT = _props2.NA_INPUT;

            return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                'div',
                { className: 'package-selector table' },
                __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                    'div',
                    { className: 'package-selector-title' },
                    this.context.t("CL_STEP2_RIGHTS_TITLE")
                ),
                __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                    'div',
                    { className: 'package-selector-container' },
                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        'div',
                        { style: { margin: 20 } },
                        this.context.t("CL_STEP2_RIGHTS_TEXT")
                    ),
                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        'div',
                        { className: 'package-exclusive' },
                        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('div', { className: 'package-exclusive-item' }),
                        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                            'div',
                            { className: 'package-exclusive-item' },
                            this.context.t("Exclusive")
                        ),
                        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('div', { className: 'package-exclusive-item' })
                    ),
                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        'div',
                        { className: 'package-selector-content' },
                        this.state.packages.map(function (superRight) {
                            return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(SuperRight, {
                                key: superRight.id,
                                onExclusive: _this.onExclusive,
                                superRight: superRight,
                                inputValues: {
                                    HL_INPUT: HL_INPUT,
                                    NA_INPUT: NA_INPUT
                                },
                                onChange: _this.updateSuperRightsList,
                                onChangeInput: _this.props.updateContentValue,
                                checked: _this.state.rightsPackage.has(superRight.id),
                                exclusive: _this.state.rightsPackage.has(superRight.id) ? _this.state.rightsPackage.get(superRight.id).exclusive : false
                            });
                        })
                    )
                )
            );
        }
    }]);

    return PackageSelector;
}(__WEBPACK_IMPORTED_MODULE_0_react___default.a.Component);

PackageSelector.contextTypes = {
    t: __WEBPACK_IMPORTED_MODULE_7_prop_types__["PropTypes"].func.isRequired
};

var mapStateToProps = function mapStateToProps(state) {
    return state.content;
};

var mapDispatchToProps = function mapDispatchToProps(dispatch) {
    return {
        superRightsUpdated: function superRightsUpdated(rightsPackage) {
            return dispatch({
                type: 'SUPER_RIGHTS_UPDATED',
                rightsPackage: rightsPackage
            });
        },
        resetSuperRigths: function resetSuperRigths() {
            return dispatch({
                type: 'SUPER_RIGHTS_UPDATED',
                reset: true
            });
        },
        updateContentValue: function updateContentValue(k, v) {
            return dispatch(Object(__WEBPACK_IMPORTED_MODULE_4__actions_contentActions__["f" /* updateContentValue */])(k, v));
        }
    };
};

/* harmony default export */ __webpack_exports__["a"] = (Object(__WEBPACK_IMPORTED_MODULE_1_react_redux__["connect"])(mapStateToProps, mapDispatchToProps)(PackageSelector));

/***/ }),

/***/ "./src/AppBundle/Resources/public/javascript/sell/containers/ReviewAndSign.js":
/*!************************************************************************************!*\
  !*** ./src/AppBundle/Resources/public/javascript/sell/containers/ReviewAndSign.js ***!
  \************************************************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_react__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_react_redux__ = __webpack_require__(/*! react-redux */ "./node_modules/react-redux/es/index.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__main_store__ = __webpack_require__(/*! ../../main/store */ "./src/AppBundle/Resources/public/javascript/main/store.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__components_SalesPackageForm__ = __webpack_require__(/*! ../components/SalesPackageForm */ "./src/AppBundle/Resources/public/javascript/sell/components/SalesPackageForm.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__components_SalesPackageEdit__ = __webpack_require__(/*! ../components/SalesPackageEdit */ "./src/AppBundle/Resources/public/javascript/sell/components/SalesPackageEdit.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__buy_containers_ListingDetails__ = __webpack_require__(/*! ./../../buy/containers/ListingDetails */ "./src/AppBundle/Resources/public/javascript/buy/containers/ListingDetails.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__main_components_ContentListing__ = __webpack_require__(/*! ../../main/components/ContentListing */ "./src/AppBundle/Resources/public/javascript/main/components/ContentListing.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__actions_contentActions__ = __webpack_require__(/*! ../actions/contentActions */ "./src/AppBundle/Resources/public/javascript/sell/actions/contentActions.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__main_components_DigitalSignature__ = __webpack_require__(/*! ../../main/components/DigitalSignature */ "./src/AppBundle/Resources/public/javascript/main/components/DigitalSignature.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9__main_actions_utils__ = __webpack_require__(/*! ../../main/actions/utils */ "./src/AppBundle/Resources/public/javascript/main/actions/utils.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_10__main_styles_custom__ = __webpack_require__(/*! ../../main/styles/custom */ "./src/AppBundle/Resources/public/javascript/main/styles/custom.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_11_react_modal__ = __webpack_require__(/*! react-modal */ "./node_modules/react-modal/lib/index.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_11_react_modal___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_11_react_modal__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_12_prop_types__ = __webpack_require__(/*! prop-types */ "./node_modules/prop-types/index.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_12_prop_types___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_12_prop_types__);
var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }















var ReviewAndSign = function (_React$Component) {
    _inherits(ReviewAndSign, _React$Component);

    function ReviewAndSign(props) {
        _classCallCheck(this, ReviewAndSign);

        var _this2 = _possibleConstructorReturn(this, (ReviewAndSign.__proto__ || Object.getPrototypeOf(ReviewAndSign)).call(this, props));

        _this2.showTerritories = function (salesPackage) {
            return salesPackage.bundleMethod === _this2.individually && salesPackage.territoriesMethod === _this2.worldwide || salesPackage.territoriesMethod !== _this2.worldwide;
        };

        _this2.scroll = function () {
            var _this2$props = _this2.props,
                stepChange = _this2$props.stepChange,
                stepChangeReset = _this2$props.stepChangeReset;


            if (stepChange) {
                window.scrollTo(0, 0);
                stepChangeReset();
            }
        };

        _this2.submit = function () {
            var updateContentValue = _this2.props.updateContentValue;

            var content = __WEBPACK_IMPORTED_MODULE_2__main_store__["a" /* default */].getState().content;
            var _this = _this2;
            content = Object(__WEBPACK_IMPORTED_MODULE_9__main_actions_utils__["h" /* parseSeasons */])(content);
            _this2.setState({ showSubmitting: true });
            ContentArena.ContentApi.saveContentAsActive(content).done(function (response) {

                if (response.success && response.contentId) {
                    updateContentValue("id", response.contentId);
                    _this.setState({ showSuccessScreen: true, showSubmitting: false });
                }
            });
        };

        _this2.closeSuccessScreen = function () {
            _this2.setState({ showSuccessScreen: false });
            Object(__WEBPACK_IMPORTED_MODULE_9__main_actions_utils__["e" /* goTo */])("managelistings");
        };

        _this2.successScreen = function () {
            return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                __WEBPACK_IMPORTED_MODULE_11_react_modal___default.a,
                {
                    isOpen: _this2.state.showSuccessScreen,
                    onRequestClose: _this2.closeSuccessScreen,
                    bodyOpenClassName: "selector",
                    style: __WEBPACK_IMPORTED_MODULE_10__main_styles_custom__["c" /* customStyles */]
                },
                __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                    'div',
                    { style: {
                            color: 'grey',
                            padding: 20,
                            display: 'flex',
                            flexDirection: 'column',
                            alignItems: 'center'
                        } },
                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        'div',
                        { style: {
                                fontSize: 30,
                                width: 600,
                                textAlign: 'center',
                                fontWeight: 600
                            } },
                        _this2.context.t("CL_STEP5_MODAL_SUCCESS_MESSAGE_1")
                    ),
                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        'div',
                        { style: {
                                fontSize: 20,
                                width: 600,
                                margin: 40,
                                textAlign: 'center'
                            } },
                        _this2.context.t("CL_STEP5_MODAL_SUCCESS_MESSAGE_2")
                    ),
                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        'div',
                        null,
                        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                            'button',
                            { className: 'standard-button', onClick: _this2.closeSuccessScreen },
                            _this2.context.t("CL_STEP5_MODAL_BUTTON")
                        )
                    )
                )
            );
        };

        _this2.updateSalesPackage = function (salesPackage, index) {
            _this2.props.updateSalesPackages("save", salesPackage, index);
        };

        _this2.removeSalesPackage = function (index) {
            _this2.props.updateSalesPackages("remove", null, index);
        };

        _this2.editSalesPackage = function (index) {
            _this2.setState({
                salesPackageToEdit: index,
                editOpen: true
            });
        };

        _this2.toggleDetails = function () {
            _this2.setState({ showDetails: !_this2.state.showDetails });
        };

        _this2.asBundle = "SELL_AS_BUNDLE";
        _this2.individually = "SELL_INDIVIDUALLY";
        _this2.worldwide = "WORLDWIDE";
        _this2.worldwideExcluding = "WORLDWIDE_EXCLUDING";
        _this2.selectedTerritories = "SELECTED_TERRITORIES";
        _this2.fixed = "FIXED";
        _this2.bidding = "BIDDING";
        _this2.limit = 3;
        _this2.state = {};
        return _this2;
    }

    _createClass(ReviewAndSign, [{
        key: 'componentWillReceiveProps',
        value: function componentWillReceiveProps(nextProps) {
            var status = nextProps.status,
                step = nextProps.step,
                updateContentValue = nextProps.updateContentValue;


            if (step === 5 && status && (status.name === "APPROVED" || status.name === "EDITED") && !this.termsAutoSelected) {
                updateContentValue('terms', true);
                updateContentValue('terms_arena', true);
                this.termsAutoSelected = true;
            }
        }
    }, {
        key: 'render',
        value: function render() {
            var _this3 = this;

            if (this.props.step !== 5) return null;
            this.scroll();
            var _props = this.props,
                salesPackages = _props.salesPackages,
                updateContentValue = _props.updateContentValue,
                signature = _props.signature,
                currency = _props.currency,
                company = _props.company,
                terms_arena = _props.terms_arena,
                terms = _props.terms,
                history = _props.history,
                customId = _props.customId,
                status = _props.status,
                defaultRightsPackage = _props.defaultRightsPackage;
            var _state = this.state,
                showDetails = _state.showDetails,
                showSubmitting = _state.showSubmitting;


            return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                'div',
                { className: 'step-content' },
                this.successScreen(),
                __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                    'div',
                    { className: 'buttons' },
                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        'div',
                        { className: "buttons-container", style: { justifyContent: 'flex-start' } },
                        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                            'button',
                            { className: 'light-blue-button', onClick: function onClick() {
                                    history.push("/contentlisting/" + customId + "/4");
                                } },
                            __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('i', { className: 'fa fa-chevron-left' }),
                            ' ',
                            this.context.t("Edit")
                        )
                    )
                ),
                !showDetails && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                    'div',
                    { className: 'step-title' },
                    this.context.t("CL_STEP5_TITLE_REVIEW")
                ),
                showDetails && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                    'div',
                    { className: 'step-title' },
                    this.context.t("CL_STEP5_TITLE_PREVIEW")
                ),
                showDetails && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                    'div',
                    null,
                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_5__buy_containers_ListingDetails__["a" /* default */], {
                        onBack: this.toggleDetails,
                        company: company,
                        content: this.props })
                ),
                !showDetails && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                    'div',
                    { className: 'step-content-container' },
                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_6__main_components_ContentListing__["a" /* default */], _extends({}, this.props, { onSelectName: this.toggleDetails, defaultRightsPackage: defaultRightsPackage })),
                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_3__components_SalesPackageForm__["a" /* default */], {
                        hideButtons: true,
                        sort: true,
                        listingId: customId,
                        fullSize: true,
                        salesPackages: salesPackages,
                        currency: currency,
                        onEdit: this.editSalesPackage,
                        onUpdate: this.updateSalesPackage,
                        onRemove: this.removeSalesPackage }),
                    this.state.editOpen && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_4__components_SalesPackageEdit__["a" /* default */], {
                        isOpen: this.state.editOpen,
                        onClose: function onClose() {
                            _this3.setState({
                                editOpen: false
                            });
                        },
                        onUpdate: this.updateSalesPackage,
                        salesPackageId: this.state.salesPackageToEdit,
                        salesPackages: salesPackages
                    }),
                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        'div',
                        { className: "terms-confirm",
                            style: {
                                padding: '40px 0px',
                                width: '50%',
                                margin: '0 auto'
                            } },
                        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                            'div',
                            { style: { display: 'flex', marginBottom: 10 } },
                            __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('input', {
                                type: 'checkbox',
                                className: 'ca-checkbox',
                                defaultChecked: terms,
                                value: terms,
                                onChange: function onChange(e) {
                                    updateContentValue('terms', e.target.checked);
                                },
                                id: 'terms',
                                style: { marginRight: 10 }
                            }),
                            __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('label', { htmlFor: 'terms' }),
                            this.context.t("CL_STEP5_TERMS_1")
                        ),
                        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                            'div',
                            { style: { display: 'flex', marginBottom: 10 } },
                            __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('input', {
                                type: 'checkbox',
                                className: 'ca-checkbox',
                                defaultChecked: terms_arena,
                                value: terms_arena,
                                onChange: function onChange(e) {
                                    updateContentValue('terms_arena', e.target.checked);
                                },
                                id: 'terms_arena',
                                style: { marginRight: 10 }
                            }),
                            __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('label', { htmlFor: 'terms_arena' }),
                            this.context.t("CL_STEP5_TERMS_2")
                        )
                    ),
                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_8__main_components_DigitalSignature__["a" /* default */], {
                        onReady: function onReady(signature) {
                            updateContentValue("signature", signature);
                        },
                        signature: signature
                    }),
                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        'div',
                        { className: 'buttons', style: { marginTop: 20 } },
                        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                            'div',
                            { className: 'buttons-container' },
                            !showSubmitting && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                'button',
                                { disabled: !(terms && terms_arena && signature), id: 'draft-listing', className: 'standard-button-big steps', onClick: this.submit },
                                (!status || status.name === "DRAFT" || status.name === "INACTIVE" || status.name === "AUTO_INACTIVE") && this.context.t("CL_STEP5_BUTTON_SUBMIT"),
                                status && (status.name === "APPROVED" || status.name === "PENDING" || status.name === "EDITED") && this.context.t("CL_STEP5_BUTTON_SAVE")
                            ),
                            showSubmitting && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('i', { className: 'fa fa-cog fa-spin' })
                        )
                    )
                )
            );
        }
    }]);

    return ReviewAndSign;
}(__WEBPACK_IMPORTED_MODULE_0_react___default.a.Component);

ReviewAndSign.contextTypes = {
    t: __WEBPACK_IMPORTED_MODULE_12_prop_types__["PropTypes"].func.isRequired
};

var mapStateToProps = function mapStateToProps(state) {
    return state.content;
};

var mapDispatchToProps = function mapDispatchToProps(dispatch) {
    return {
        updateContentValue: function updateContentValue(key, value) {
            return dispatch({
                type: 'UPDATE_CONTENT_VALUE',
                key: key,
                value: value
            });
        },
        updateSalesPackages: function updateSalesPackages(name, salesPackage, index) {
            return dispatch({
                type: 'UPDATE_SALES_PACKAGES',
                index: index,
                salesPackage: salesPackage,
                name: name
            });
        },
        stepChangeReset: function stepChangeReset() {
            return dispatch(Object(__WEBPACK_IMPORTED_MODULE_7__actions_contentActions__["e" /* stepChangeReset */])());
        }
    };
};

/* harmony default export */ __webpack_exports__["a"] = (Object(__WEBPACK_IMPORTED_MODULE_1_react_redux__["connect"])(mapStateToProps, mapDispatchToProps)(ReviewAndSign));

/***/ }),

/***/ "./src/AppBundle/Resources/public/javascript/sell/containers/SellButtons.js":
/*!**********************************************************************************!*\
  !*** ./src/AppBundle/Resources/public/javascript/sell/containers/SellButtons.js ***!
  \**********************************************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_react__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_react_redux__ = __webpack_require__(/*! react-redux */ "./node_modules/react-redux/es/index.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_classnames__ = __webpack_require__(/*! classnames */ "./node_modules/classnames/index.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_classnames___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2_classnames__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__main_store__ = __webpack_require__(/*! ../../main/store */ "./src/AppBundle/Resources/public/javascript/main/store.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__actions_contentActions__ = __webpack_require__(/*! ../actions/contentActions */ "./src/AppBundle/Resources/public/javascript/sell/actions/contentActions.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__actions_validationActions__ = __webpack_require__(/*! ../actions/validationActions */ "./src/AppBundle/Resources/public/javascript/sell/actions/validationActions.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6_react_tooltip__ = __webpack_require__(/*! react-tooltip */ "./node_modules/react-tooltip/dist/index.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6_react_tooltip___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_6_react_tooltip__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__main_actions_utils__ = __webpack_require__(/*! ../../main/actions/utils */ "./src/AppBundle/Resources/public/javascript/main/actions/utils.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8_prop_types__ = __webpack_require__(/*! prop-types */ "./node_modules/prop-types/index.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8_prop_types___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_8_prop_types__);
var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }











var MIN_PROGRAM_DESC_LENGTH = 30;

var SellButtons = function (_React$Component) {
    _inherits(SellButtons, _React$Component);

    function SellButtons(props) {
        _classCallCheck(this, SellButtons);

        var _this = _possibleConstructorReturn(this, (SellButtons.__proto__ || Object.getPrototypeOf(SellButtons)).call(this, props));

        _this.saveAndGoNext = function () {
            var history = _this.props.history;

            _this.setState({ saving: true });

            var content = __WEBPACK_IMPORTED_MODULE_3__main_store__["a" /* default */].getState().content;
            content = Object(__WEBPACK_IMPORTED_MODULE_7__main_actions_utils__["h" /* parseSeasons */])(content);
            ContentArena.ContentApi.saveContentAsDraft(content).done(function (response) {

                var nextStep = Number(content.step) + 1;

                if (response.success && response.contentId) {
                    _this.props.updateContentValue("id", response.contentId);
                    _this.props.updateContentValue("customId", response.customId);
                }

                _this.setState({ saving: false, savingSuccess: true });

                history.push("/contentlisting/" + response.customId + "/" + nextStep);
                Object(__WEBPACK_IMPORTED_MODULE_4__actions_contentActions__["d" /* scrollTopMainContent */])();
            }).fail(function () {
                _this.setState({ saving: false, savingSuccess: false });
                //history.push("/contentlisting/"+ response.customId + "/" + nextStep);
            });
        };

        _this.reviewAndSignEnabled = function () {
            var _this$props = _this.props,
                expiresAt = _this$props.expiresAt,
                vat = _this$props.vat,
                vatPercentage = _this$props.vatPercentage,
                salesPackages = _this$props.salesPackages,
                company = _this$props.company,
                name = _this$props.name;


            return expiresAt && (vat === "no" || vatPercentage && vatPercentage != 0 && vatPercentage !== "") && salesPackages.length > 0 && name && name !== "" && Object(__WEBPACK_IMPORTED_MODULE_5__actions_validationActions__["a" /* companyIsValid */])(company);
        };

        _this.reviewAndSignGetMessages = function () {
            var _this$props2 = _this.props,
                expiresAt = _this$props2.expiresAt,
                vat = _this$props2.vat,
                vatPercentage = _this$props2.vatPercentage,
                salesPackages = _this$props2.salesPackages,
                company = _this$props2.company,
                name = _this$props2.name;

            var message = "Please complete missing information\n";

            if (salesPackages.length === 0) message += "<br/>- Select at least one sales bundle.\n";
            if (!expiresAt) message += "<br/>- Select listing expiry.";
            if (!Object(__WEBPACK_IMPORTED_MODULE_5__actions_validationActions__["a" /* companyIsValid */])(company)) message += "<br/>- Enter company information.";
            if (!name || name === "") message += "<br/>- Enter a name for the listing.";

            if (vat === "yes" && (!vatPercentage || vatPercentage === 0 || vatPercentage === "")) message += "<br/>- Enter VAT percentage.";

            return message;
        };

        _this.programIsValid = function () {
            var _this$props3 = _this.props,
                rightsPackage = _this$props3.rightsPackage,
                PROGRAM_NAME = _this$props3.PROGRAM_NAME,
                PROGRAM_EPISODES = _this$props3.PROGRAM_EPISODES,
                PROGRAM_DURATION = _this$props3.PROGRAM_DURATION,
                PROGRAM_TYPE = _this$props3.PROGRAM_TYPE;


            var program = Object(__WEBPACK_IMPORTED_MODULE_7__main_actions_utils__["a" /* editedProgramSelected */])(rightsPackage);

            if (!program) return true;

            return PROGRAM_NAME && PROGRAM_NAME !== "" && PROGRAM_EPISODES && PROGRAM_EPISODES !== "" && PROGRAM_DURATION && PROGRAM_DURATION !== "" && PROGRAM_TYPE !== "SELECT";
        };

        _this.step2Enabled = function () {
            var _this$props4 = _this.props,
                rightsPackage = _this$props4.rightsPackage,
                programDescription = _this$props4.programDescription;


            var program = _this.programIsValid();

            return rightsPackage.length > 0 && program && programDescription && programDescription.length >= MIN_PROGRAM_DESC_LENGTH;
        };

        _this.step3Enabled = function () {
            var endDateMode = _this.props.endDateMode;

            return endDateMode !== undefined;
        };

        _this.step3GetMessages = function () {
            var endDateMode = _this.props.endDateMode;

            var message = "Please complete missing information\n";
            if (endDateMode === undefined) message += "<br/>- Select when the license period ends.";

            return message;
        };

        _this.step1Enabled = function () {
            var sports = _this.props.sports;

            return sports.length > 0;
        };

        _this.step1GetMessages = function () {
            var _this$props5 = _this.props,
                sports = _this$props5.sports,
                name = _this$props5.name;

            var message = "Please complete missing information\n";

            if (sports.length === 0) message += "<br/>- Select a sport.\n";
            //if ( name === undefined || name === "" ) message += "<br/>- Enter a name for the listing.";

            return message;
        };

        _this.step2GetMessages = function () {
            var _this$props6 = _this.props,
                programDescription = _this$props6.programDescription,
                rightsPackage = _this$props6.rightsPackage;

            var message = "Please complete missing information\n";
            var program = _this.programIsValid();;
            if (rightsPackage.length === 0) message += "<br/>- Select at least one right.\n";
            if (!programDescription || programDescription.length < MIN_PROGRAM_DESC_LENGTH) message += "<br/>- Program description must be at least " + MIN_PROGRAM_DESC_LENGTH + " characters length";
            if (!program) message += "<br/>-  Enter program information.";

            return message;
        };

        _this.getTooltipMessages = function () {
            var step = _this.props.step;


            if (step === 1 && !_this.step1Enabled()) return _this.step1GetMessages();
            if (step === 2 && !_this.step2Enabled()) return _this.step2GetMessages();
            if (step === 3 && !_this.step3Enabled()) return _this.step3GetMessages();
            if (step === 4 && !_this.reviewAndSignEnabled()) return _this.reviewAndSignGetMessages();
        };

        _this.getReviewButtonTooltipMessages = function () {
            var step = _this.props.step;


            if (step === 4 && !_this.reviewAndSignEnabled()) return _this.reviewAndSignGetMessages();
        };

        _this.onClickStep = function (stepSelected) {
            var maxStep = _this.props.maxStep;


            if (stepSelected <= maxStep) {
                _this.goToStep(stepSelected);
            }
        };

        _this.goToReviewAndSign = function () {
            var history = _this.props.history;

            var savePromise = null;
            var content = __WEBPACK_IMPORTED_MODULE_3__main_store__["a" /* default */].getState().content;
            content = Object(__WEBPACK_IMPORTED_MODULE_7__main_actions_utils__["h" /* parseSeasons */])(content);
            _this.setState({ saving: true });

            if (!content.status || content.status.name === 'DRAFT' && content.step === 4) {
                //we are in new mode or editing draft
                savePromise = ContentArena.ContentApi.saveContentAsInactive(_extends({}, content, { status: 'AUTO_INACTIVE' }));
            } else {
                savePromise = ContentArena.ContentApi.saveContentAsDraft(content);
            }

            savePromise.done(function (response) {
                if (response.success && response.contentId) {

                    if (response.salesPackages && Array.isArray(response.salesPackages)) {
                        response.salesPackages.forEach(function (sp, i) {

                            if (sp.salesMethod) sp.salesMethod = sp.salesMethod.name;
                            if (sp.excludedCountries) sp.excludedTerritories = sp.excludedCountries.map(function (t) {
                                return { label: t.name, value: t.name };
                            });
                            if (sp.territories) sp.territories = sp.territories.map(function (t) {
                                return { label: t.name, value: t.name };
                            });

                            _this.props.updateSalesPackages("save", sp, i);
                        });
                    }

                    _this.props.updateContentValue("id", response.contentId);
                    _this.setState({ saving: false, savingSuccess: true });
                    history.push("/contentlisting/" + response.customId + "/sign");

                    Object(__WEBPACK_IMPORTED_MODULE_4__actions_contentActions__["d" /* scrollTopMainContent */])();
                }
            });
        };

        _this.goToPreviousStep = function () {
            var history = _this.props.history;

            var content = __WEBPACK_IMPORTED_MODULE_3__main_store__["a" /* default */].getState().content;
            var prevStep = Number(content.step) - 1;

            history.push("/contentlisting/" + content.customId + "/" + prevStep);

            Object(__WEBPACK_IMPORTED_MODULE_4__actions_contentActions__["d" /* scrollTopMainContent */])();
        };

        _this.goToNextStep = function () {};

        _this.goToStep = function (step) {
            var history = _this.props.history;

            var content = __WEBPACK_IMPORTED_MODULE_3__main_store__["a" /* default */].getState().content;
            history.push("/contentlisting/" + content.customId + "/" + step);

            Object(__WEBPACK_IMPORTED_MODULE_4__actions_contentActions__["d" /* scrollTopMainContent */])();
        };

        _this.state = {
            date: new Date(),
            lastStep: props.lastStep || 5,
            saving: false,
            savingSuccess: false,
            visited: [1]
        };
        return _this;
    }

    _createClass(SellButtons, [{
        key: 'componentWillReceiveProps',
        value: function componentWillReceiveProps(props) {

            if (this.state.visited.indexOf(props.step) === -1) {
                this.setState({
                    visited: [].concat(_toConsumableArray(this.state.visited), [props.step])
                });
            }
            __WEBPACK_IMPORTED_MODULE_6_react_tooltip___default.a.rebuild();
        }

        /**
         * if currency selected, listing image inserted, expiry date selected, sales bundles added,
         * company address complete, place of jurisdiction selected and if vat = yes, percentage is inserted
         * @returns {boolean}
         */

    }, {
        key: 'render',
        value: function render() {
            var _this2 = this;

            var _props = this.props,
                step = _props.step,
                maxStep = _props.maxStep;
            var _state = this.state,
                lastStep = _state.lastStep,
                saving = _state.saving;

            var cantReviewAndSign = step === 4 && !this.reviewAndSignEnabled();

            return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                'div',
                { className: 'buttons' },
                this.props.step < lastStep && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                    'div',
                    { className: 'buttons-container step-1 step-2' },
                    this.props.step !== 1 && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        'button',
                        { className: 'standard-button prev',
                            onClick: this.goToPreviousStep },
                        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('i', { className: 'fa fa-arrow-left' }),
                        ' ',
                        this.context.t("Back")
                    ),
                    [1, 2, 3, 4].map(function (v, k) {
                        return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                            'div',
                            { className: __WEBPACK_IMPORTED_MODULE_2_classnames___default()("step", { 'step-active': _this2.props.step === v, 'step-visited': v <= maxStep }),
                                onClick: function onClick() {
                                    _this2.onClickStep(v);
                                },
                                key: k },
                            v
                        );
                    }),
                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        'div',
                        { 'data-tip': cantReviewAndSign ? this.getReviewButtonTooltipMessages() : this.getTooltipMessages() },
                        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                            'button',
                            {
                                id: 'next-step',
                                className: 'standard-button',
                                disabled: step === 1 && !this.step1Enabled() || step === 2 && !this.step2Enabled() || step === 3 && !this.step3Enabled() || cantReviewAndSign,
                                onClick: function onClick() {
                                    return step === 4 ? _this2.goToReviewAndSign() : _this2.saveAndGoNext();
                                } },
                            this.context.t("Next"),
                            saving ? __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('i', { className: 'fa fa-cog fa-spin' }) : __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('i', { className: 'fa fa-arrow-right' })
                        )
                    )
                )
            );
        }
    }]);

    return SellButtons;
}(__WEBPACK_IMPORTED_MODULE_0_react___default.a.Component);

SellButtons.contextTypes = {
    t: __WEBPACK_IMPORTED_MODULE_8_prop_types__["PropTypes"].func.isRequired
};

var mapStateToProps = function mapStateToProps(state) {
    return state.content;
};

var mapDispatchToProps = function mapDispatchToProps(dispatch) {
    return {
        goToPreviousStep: function goToPreviousStep() {
            return dispatch(Object(__WEBPACK_IMPORTED_MODULE_4__actions_contentActions__["b" /* goToPreviousStep */])());
        },
        goToNextStep: function goToNextStep() {
            return dispatch(Object(__WEBPACK_IMPORTED_MODULE_4__actions_contentActions__["a" /* goToNextStep */])());
        },
        goToStep: function goToStep(step) {
            return dispatch(Object(__WEBPACK_IMPORTED_MODULE_4__actions_contentActions__["c" /* goToStep */])(step));
        },
        updateContentValue: function updateContentValue(key, value) {
            return dispatch(Object(__WEBPACK_IMPORTED_MODULE_4__actions_contentActions__["f" /* updateContentValue */])(key, value));
        },
        updateSalesPackages: function updateSalesPackages(name, salesPackage, index) {
            return dispatch({
                type: 'UPDATE_SALES_PACKAGES',
                index: index,
                salesPackage: salesPackage,
                name: name
            });
        }
    };
};

/* harmony default export */ __webpack_exports__["a"] = (Object(__WEBPACK_IMPORTED_MODULE_1_react_redux__["connect"])(mapStateToProps, mapDispatchToProps)(SellButtons));

/***/ }),

/***/ "./src/AppBundle/Resources/public/javascript/sell/containers/SellFormStep1.js":
/*!************************************************************************************!*\
  !*** ./src/AppBundle/Resources/public/javascript/sell/containers/SellFormStep1.js ***!
  \************************************************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_react__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_react_redux__ = __webpack_require__(/*! react-redux */ "./node_modules/react-redux/es/index.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__main_components_FileSelector__ = __webpack_require__(/*! ../../main/components/FileSelector */ "./src/AppBundle/Resources/public/javascript/main/components/FileSelector.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__main_components_SearchCompetition__ = __webpack_require__(/*! ../../main/components/SearchCompetition */ "./src/AppBundle/Resources/public/javascript/main/components/SearchCompetition.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__main_components_SeasonSelector__ = __webpack_require__(/*! ../../main/components/SeasonSelector */ "./src/AppBundle/Resources/public/javascript/main/components/SeasonSelector.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5_react_tagsinput__ = __webpack_require__(/*! react-tagsinput */ "./node_modules/react-tagsinput/react-tagsinput.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5_react_tagsinput___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_5_react_tagsinput__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__actions_contentActions__ = __webpack_require__(/*! ../actions/contentActions */ "./src/AppBundle/Resources/public/javascript/sell/actions/contentActions.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__components_SellFormItems__ = __webpack_require__(/*! ../components/SellFormItems */ "./src/AppBundle/Resources/public/javascript/sell/components/SellFormItems.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8_prop_types__ = __webpack_require__(/*! prop-types */ "./node_modules/prop-types/index.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8_prop_types___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_8_prop_types__);
var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }












var SellFormStep1 = function (_React$Component) {
    _inherits(SellFormStep1, _React$Component);

    function SellFormStep1(props) {
        _classCallCheck(this, SellFormStep1);

        var _this2 = _possibleConstructorReturn(this, (SellFormStep1.__proto__ || Object.getPrototypeOf(SellFormStep1)).call(this, props));

        _this2.updateContentValue = function (event, key) {
            _this2.props.updateContentValue(key, event.target.value);
        };

        _this2.forceCustomTournament = function () {
            return _this2.hasCustomSport() || _this2.hasCustomCategory() || _this2.state.sportCategoryExtended;
        };

        _this2.forceCustomCategory = function () {
            return _this2.hasCustomSport();
        };

        _this2.forceCustomSeason = function () {
            var response = _this2.hasCustomSport() || _this2.hasCustomTournament();
            return response;
        };

        _this2.hasCustomSport = function () {

            var hasCustomSport = false;
            var response = void 0;

            _this2.props.sports.forEach(function (sport) {
                if (sport.custom) hasCustomSport = true;
            });

            response = hasCustomSport && _this2.props.sports.length === 1;

            return response;
        };

        _this2.hasCustomCategory = function () {

            var hasCustomCategory = false;
            var response = void 0;

            _this2.state.sportCategories.forEach(function (sportCategory) {
                if (sportCategory.custom) hasCustomCategory = true;
            });

            response = _this2.forceCustomCategory() || hasCustomCategory;
            return response;
        };

        _this2.hasCustomTournament = function () {
            var hasCustomTournament = false;
            var response = void 0;
            _this2.state.tournaments.forEach(function (tournament) {
                if (tournament.custom) hasCustomTournament = true;
            });

            response = _this2.forceCustomTournament() || hasCustomTournament || _this2.state.sportCategoryExtended;
            return response;
        };

        _this2.hasCustomSeason = function () {

            var hasCustomSeason = false;
            var response = void 0;
            _this2.props.seasons.forEach(function (season) {
                if (season.custom) hasCustomSeason = true;
            });

            response = _this2.forceCustomSeason() || hasCustomSeason;
            return response;
        };

        _this2.addSeason = function () {
            console.log("ADDSEASON");
            var seasons = _this2.props.seasons;


            _this2.setState(function (prevState) {
                return {
                    seasonSelectors: [].concat(_toConsumableArray(Array(seasons.length + 1).keys()))
                };
            });

            if (_this2.hasCustomTournament()) {
                _this2.props.addNewSeason(_this2.props.seasons.length);
            }
        };

        _this2.addSportSelector = function () {
            _this2.setState(function (prevState) {
                return {
                    sportSelectors: [].concat(_toConsumableArray(prevState.sportSelectors), [1])
                };
            });
        };

        _this2.removeSport = function (i) {

            if (i === 0) {
                _this2.props.removeNewSport(i);
                return;
            }

            _this2.setState(function (prevState) {
                prevState.sportSelectors.splice(i, 1);
                return {
                    sportSelectors: prevState.sportSelectors
                };
            });

            _this2.props.removeFromMultiple(i, "sports");
        };

        _this2.removeSeason = function (i) {

            if (i === 0) {
                _this2.props.removeNewSeason(i);
                return;
            }

            _this2.setState(function (prevState) {
                prevState.seasonSelectors.splice(i, 1);
                return {
                    seasonSelectors: prevState.seasonSelectors
                };
            });

            _this2.props.removeFromMultiple(i, "seasons");
        };

        _this2.toggleSearch = function (tournament) {
            var history = _this2.props.history;

            var _this = _this2;
            history.push("/contentlisting/1");
            if (tournament) {
                setTimeout(function () {
                    _this.props.selectTournament(tournament);
                }, 1000);
            }
        };

        _this2.websitesUpdated = function (websites) {
            _this2.setState({ websites: websites });
            _this2.props.updateContentValue("website", websites);
        };

        _this2.handleWebsiteChange = function (website) {
            _this2.setState({ website: website });
        };

        _this2.selectTournament = function (tournament) {

            _this2.toggleSearch(tournament);
        };

        _this2.clear = function () {
            _this2.props.reset();
            var history = _this2.props.history;

            history.push("/contentlisting/new");
        };

        _this2.scroll = function () {
            var _this2$props = _this2.props,
                stepChange = _this2$props.stepChange,
                stepChangeReset = _this2$props.stepChangeReset;


            if (stepChange) {
                window.scrollTo(0, 0);
                stepChangeReset();
            }
        };

        _this2.addFile = function (response) {
            var attachments = _this2.props.attachments;

            var index = attachments.length;
            _this2.props.updateAttachments("save", index, { file: response.file, name: response.name });
        };

        _this2.removeFile = function (index) {
            _this2.props.updateAttachments("remove", index, null);
        };

        _this2.showSeasonSelector = function () {
            var show = _this2.state.sportSelectors.length === 1 && (_this2.state.seasons.length > 0 || _this2.forceCustomSeason()) && _this2.state.seasonSelectors.length > 0;
            return show;
        };

        if (props.step !== 1) return _possibleConstructorReturn(_this2);
        _this2.state = {
            lastSportId: null,
            lastCategoryId: null,
            lastTournamentId: null,
            loadingCategories: false,
            loadingTournaments: false,
            loadingSeasons: false,
            loadingSchedule: false,
            seasonSelectors: [1],
            sportSelectors: [1],
            seasons: [],
            schedules: {},
            showSearch: props.showSearch,
            websites: [],
            website: '',
            tournaments: [],
            sportCategories: [],
            sportCategoryExtended: false
        };
        return _this2;
    }

    _createClass(SellFormStep1, [{
        key: 'componentDidMount',
        value: function componentDidMount() {

            if (this.props.step !== 1) return;

            ContentArena.Api.getSports().done(function (sports) {
                ContentArena.Data.FullSports = sports;
            });

            ContentArena.Api.getCountries().done(function (countries) {});

            this.props.updateContentValue("lastUpdate", new Date().getTime());
        }
    }, {
        key: 'loadCategories',
        value: function loadCategories(sport) {
            var _this3 = this;

            var sportId = sport.externalId;

            if (sportId === this.state.lastSportId) return;

            this.setState({ loadingCategories: true });
            ContentArena.Api.getCategories(sportId).done(function (categories) {
                ContentArena.Data.Categories = categories;
                _this3.setState({ lastSportId: sportId, loadingCategories: false });
            });
        }
    }, {
        key: 'loadTournaments',
        value: function loadTournaments(sport, category) {
            var _this4 = this;

            if (sport.custom) return;

            var sportId = sport.externalId;
            var categoryId = category ? category.externalId : null;

            if (sportId === this.state.lastSportId && categoryId === this.state.lastCategoryId) return;

            this.setState({ loadingTournaments: true });
            ContentArena.Api.getTournaments(sportId, categoryId).done(function (tournaments) {
                ContentArena.Data.Tournaments = tournaments;

                if (tournaments.length === 0) {
                    if (!_this4.state.customSeasonsParsed) {
                        _this4.props.addNewCategory();
                        _this4.props.addNewTournament();

                        if (_this4.props.customSeasons.length > 0) {

                            _this4.props.customSeasons.forEach(function (s, i) {
                                _this4.props.addNewSeason(i);
                                _this4.props.updateFromMultiple("seasons", i, "from", s.from);
                                _this4.props.updateFromMultiple("seasons", i, "to", s.to);
                                if (s.fixtures) _this4.props.updateFromMultiple("seasons", i, "fixtures", s.fixtures);
                            });
                        } else {
                            _this4.props.addNewSeason(0);
                        }
                    }

                    _this4.setState({
                        loadingTournaments: false,
                        customSeasonsParsed: true
                    });

                    return;
                }

                _this4.setState({
                    lastSportId: sportId,
                    loadingTournaments: false,
                    lastCategoryId: categoryId
                });
            });
        }
    }, {
        key: 'loadSeasons',
        value: function loadSeasons(tournaments) {
            var _this5 = this;

            var tournamentId = tournaments.length > 0 ? tournaments[0].externalId : null;

            if (tournamentId === this.state.lastTournamentId) return;

            this.setState({ loadingSeasons: true });
            ContentArena.Api.getSeasons(tournamentId).done(function (seasons) {
                ContentArena.Data.Seasons = seasons;

                if (seasons.length === 0) {
                    _this5.props.addNewSeason(0);
                    _this5.setState({
                        loadingSeasons: false
                    });
                    return;
                }

                _this5.setState({
                    lastTournamentId: tournamentId,
                    loadingSeasons: false,
                    seasons: seasons
                });
            }).always(function () {});
        }
    }, {
        key: 'loadSchedule',
        value: function loadSchedule(nextProps) {

            var _this = this;
            var updateFromMultiple = this.props.updateFromMultiple;
            var seasons = nextProps.seasons,
                schedulesBySeason = nextProps.schedulesBySeason;


            seasons.forEach(function (season, index) {
                if (!season.schedules && !season.custom) {
                    _this.setState({ loadingSchedule: true });
                    ContentArena.Api.getSchedule(season.externalId).done(function (schedules) {
                        _this.setState({ loadingSchedule: false });
                        var keys = [];
                        if (schedulesBySeason && schedulesBySeason[index]) {
                            keys = Object.keys(schedulesBySeason[index]);
                            keys.forEach(function (k) {
                                schedulesBySeason[index][k].matches.forEach(function (m) {
                                    if (m.selected) {
                                        schedules[k].matches.get(m.externalId).selected = true;
                                    }
                                });
                                schedules[k].selected = true;
                            });
                        }

                        updateFromMultiple("seasons", index, "schedules", schedules);
                        if (keys.length > 0) updateFromMultiple("seasons", index, "showSchedule", true);
                    });
                }
            });
        }
    }, {
        key: 'componentWillReceiveProps',
        value: function componentWillReceiveProps(nextProps) {

            if (nextProps.step !== 1) return;

            var _state = this.state,
                loadingCategories = _state.loadingCategories,
                loadingTournaments = _state.loadingTournaments,
                loadingSeasons = _state.loadingSeasons;

            var tournaments = void 0,
                seasons = void 0,
                sportCategories = void 0,
                websites = void 0,
                name = nextProps.name;

            tournaments = Array.isArray(nextProps.tournament) ? nextProps.tournament : [nextProps.tournament];
            seasons = Array.isArray(nextProps.seasons) ? nextProps.seasons : [nextProps.seasons];
            sportCategories = Array.isArray(nextProps.sportCategory) ? nextProps.sportCategory : [nextProps.sportCategory];
            websites = Array.isArray(nextProps.website) ? nextProps.website : nextProps.website ? [nextProps.website] : [];

            if (nextProps.sports.length === 1 && !loadingCategories) {
                this.loadCategories(nextProps.sports[0]);
                this.setState(function () {
                    return {
                        showSearch: false
                    };
                });
            }

            if (nextProps.sports.length === 0) {
                this.setState(function () {
                    return {
                        seasons: [],
                        schedules: []
                    };
                });
                sportCategories = [];
                tournaments = [];

                this.props.updateContentValue("name", "");
            }

            if (nextProps.sports.length === 1 && !loadingTournaments) {
                this.loadTournaments(nextProps.sports[0], sportCategories[0]);
            }

            if (tournaments.length === 1 && !loadingSeasons) {
                if (!tournaments[0].custom) {
                    this.loadSeasons(tournaments);
                }
            }

            if (tournaments.length === 0) {
                this.setState({ seasons: [] });
            }

            this.setState({
                sportCategories: sportCategories,
                tournaments: tournaments
            });

            if (sportCategories.length === 1) {
                this.setState({ sportCategoryExtended: sportCategories[0].extended });

                if (sportCategories[0].extended) {
                    this.props.updateContentValue("customCategory", sportCategories[0].name);
                }
            }

            if (seasons.length > 0) {
                this.setState(function () {
                    return {
                        seasonSelectors: [].concat(_toConsumableArray(Array(seasons.length).keys()))
                    };
                });
                //this.loadSchedule(nextProps);
            }

            if (websites && websites.length > 0) {
                this.setState({ websites: websites });
            }
        }

        /**
         *
         * @param event
         * @param key
         */

    }, {
        key: 'render',
        value: function render() {
            var _this6 = this;

            if (this.props.step !== 1) return null;

            var _state2 = this.state,
                websites = _state2.websites,
                website = _state2.website;

            var websitePlaceholder = websites.length > 0 ? '' : this.context.t("CL_STEP1_PLACEHOLDER_WEBSITE");

            this.scroll();

            var inputProps = {
                sports: [{ value: "", custom: false }],
                sportCategory: { value: "", custom: false },
                tournament: { value: "", custom: false },
                seasons: [{ value: "", custom: false }]
            };

            if (this.props.sports.length > 0) {
                inputProps.sports = [];
                this.props.sports.forEach(function (sport) {
                    inputProps.sports.push({
                        value: sport.name,
                        isCustom: sport.custom
                    });
                });
            }
            if (this.props.seasons.length > 0) {
                inputProps.seasons = [];
                this.props.seasons.forEach(function (season) {
                    inputProps.seasons.push({
                        value: season.name,
                        from: season.from,
                        to: season.to,
                        isCustom: season.custom });
                });
            }
            if (this.state.sportCategories.length > 0 && this.props.sportCategory.length === 0) {
                inputProps.sportCategory = {
                    value: this.state.sportCategories[0].name,
                    isCustom: this.state.sportCategories[0].isCustom
                };
            }
            if (this.state.tournaments.length > 0 && this.props.tournament.length === 0) {
                inputProps.tournament = {
                    value: this.state.tournaments[0].name,
                    isCustom: this.state.tournaments[0].isCustom
                };
            }
            if (this.props.tournament.length > 0) {
                inputProps.tournament = {
                    value: this.props.tournament[0].name,
                    isCustom: this.props.tournament[0].isCustom
                };
            }
            if (this.props.sportCategory.length > 0) {
                inputProps.sportCategory = {
                    value: this.props.sportCategory[0].name,
                    isCustom: this.props.sportCategory[0].isCustom
                };
            }

            return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                'div',
                { className: 'step-content' },
                __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                    'div',
                    { className: 'step-title' },
                    this.state.title
                ),
                this.state.showSearch && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_3__main_components_SearchCompetition__["a" /* default */], { close: function close() {
                        _this6.toggleSearch(false);
                    }, select: this.selectTournament }),
                !this.state.showSearch && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                    'div',
                    { className: 'buttons' },
                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        'div',
                        { className: "buttons-container", style: { justifyContent: 'flex-start' } },
                        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                            'button',
                            { className: 'light-blue-button', onClick: this.clear },
                            this.context.t("CL_STEP1_BUTTON_START_OVER")
                        )
                    )
                ),
                !this.state.showSearch && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                    'div',
                    { className: 'step-content-container' },
                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        'div',
                        { className: 'step-item-description' },
                        this.context.t("CL_STEP1_DESCRIPTION_1")
                    ),
                    this.state.sportSelectors.map(function (item, i, list) {
                        return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_7__components_SellFormItems__["d" /* SportSelector */], {
                            key: i,
                            index: i,
                            sports: _this6.props.sports,
                            remove: function remove() {
                                return _this6.removeSport(i);
                            },
                            showAddNew: list.length > 1 && list.length === i + 1,
                            onUpdateNew: function onUpdateNew(name) {
                                _this6.props.updateFromMultiple("sports", i, "value", name);
                            },
                            showClose: i > 0,
                            isCustom: inputProps.sports[i] ? inputProps.sports[i].isCustom : false,
                            addSportSelector: _this6.addSportSelector,
                            onClick: function onClick() {
                                _this6.props.openSportSelector(i, _this6.props.sports);
                            },
                            value: inputProps.sports[i] ? inputProps.sports[i].value : "" });
                    }),
                    this.state.sportSelectors.length === 1 && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        'div',
                        { className: 'step-item-description', style: { marginTop: "-15px" } },
                        this.context.t("CL_STEP1_DESCRIPTION_MULTIPLE_SPORTS"),
                        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                            'button',
                            { className: "link-button", onClick: this.addSportSelector },
                            this.context.t("CL_STEP1_BUTTON_MULTIPLE_SPORTS")
                        )
                    ),
                    this.state.sportSelectors.length === 1 && !this.hasCustomCategory() && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        'div',
                        { className: 'base-input' },
                        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                            'label',
                            null,
                            this.context.t("CL_STEP1_LABEL_COUNTRY")
                        ),
                        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('input', {
                            type: 'text',
                            value: inputProps.sportCategory.value || "",
                            readOnly: true,
                            disabled: this.props.sports.length === 0 || this.state.loadingCategories,
                            onClick: function onClick() {
                                _this6.props.openCategorySelector(_this6.state.sportCategories);
                            },
                            placeholder: this.context.t("CL_STEP1_PLACEHOLDER_COUNTRY") }),
                        this.state.loadingCategories && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('i', { className: 'fa fa-cog fa-spin' })
                    ),
                    this.state.sportSelectors.length === 1 && this.hasCustomCategory() && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_7__components_SellFormItems__["b" /* NewCategory */], {
                        showClose: !this.forceCustomCategory(),
                        value: this.props.customCategory,
                        onBlur: function onBlur(e) {
                            return _this6.updateContentValue(e, "customCategory");
                        },
                        onClick: this.props.removeNewCategory
                    }),
                    this.state.sportSelectors.length === 1 && !this.hasCustomTournament() && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        'div',
                        { className: 'base-input' },
                        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                            'label',
                            null,
                            this.context.t("CL_STEP1_LABEL_COMPETITION")
                        ),
                        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('input', { type: 'text',
                            value: inputProps.tournament.value || "",
                            readOnly: true,
                            disabled: this.props.sports.length === 0 || this.state.loadingTournaments,
                            onClick: function onClick() {
                                _this6.props.openTournamentSelector(_this6.state.tournaments);
                            },
                            placeholder: this.context.t("CL_STEP1_PLACEHOLDER_COMPETITION") }),
                        this.state.loadingTournaments && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('i', { className: 'fa fa-cog fa-spin' })
                    ),
                    this.state.sportSelectors.length === 1 && this.hasCustomTournament() && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_7__components_SellFormItems__["c" /* NewTournament */], { showClose: !this.forceCustomTournament(),
                        value: this.props.customTournament,
                        onBlur: function onBlur(e) {
                            return _this6.updateContentValue(e, "customTournament");
                        },
                        onClick: this.props.removeNewTournament }),
                    this.showSeasonSelector() && this.state.seasonSelectors.map(function (season, i) {
                        return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_4__main_components_SeasonSelector__["a" /* default */], {
                            key: i,
                            season: i,
                            index: i,
                            addSeason: _this6.addSeason,
                            removeSeason: function removeSeason() {
                                return _this6.removeSeason(i);
                            },
                            value: inputProps.seasons[i] ? inputProps.seasons[i].value : "",
                            loading: _this6.state.loadingSeasons,
                            showClose: i > 0 || !_this6.forceCustomSeason() && _this6.hasCustomSeason(),
                            onBlur: function onBlur(e) {
                                return _this6.updateContentValue(e, "customSeason");
                            },
                            isCustom: inputProps.seasons[i] ? inputProps.seasons[i].isCustom || _this6.forceCustomSeason() : _this6.forceCustomSeason(),
                            showAddNew: _this6.state.seasonSelectors.length === i + 1,
                            openSelector: function openSelector() {
                                return _this6.props.openSeasonSelector(i, _this6.props.seasons);
                            } });
                    }),
                    (this.state.loadingSeasons || this.state.loadingSchedule) && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        'div',
                        null,
                        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('i', { className: 'fa fa-cog fa-spin' })
                    ),
                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_7__components_SellFormItems__["a" /* Description */], { value: this.props.description, onChange: function onChange(e) {
                            return _this6.updateContentValue(e, "description");
                        } }),
                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        'div',
                        { className: 'step-item-description', style: {} },
                        this.context.t("CL_STEP1_LABEL_ADDITIONAL_INFO"),
                        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('i', { className: 'fa fa-info-circle tooltip-icon', title: 'The website link and the attached files will be made available to buyers in the listing details, when clicking on a listing in the marketplace.' })
                    ),
                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        'div',
                        { className: 'base-input' },
                        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                            'label',
                            null,
                            this.context.t("CL_STEP1_LABEL_WEBSITE")
                        ),
                        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_5_react_tagsinput___default.a, {
                            inputProps: { placeholder: websitePlaceholder },
                            value: websites,
                            ref: 'tagsinput',
                            onChange: this.websitesUpdated,
                            inputValue: website,
                            onChangeInput: this.handleWebsiteChange
                        })
                    ),
                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_2__main_components_FileSelector__["a" /* default */], {
                        target: "attachments",
                        selected: this.props.attachments,
                        onSelect: this.addFile,
                        onRemove: this.removeFile,
                        accept: ["image/png", "image/jpg", ".pdf", ".doc", ".docx", ".cvs", ".ppt", ".xls", ".xlsx"],
                        acceptType: ["image/jpeg", "image/png", "application/pdf"],
                        tmp: true })
                )
            );
        }
    }]);

    return SellFormStep1;
}(__WEBPACK_IMPORTED_MODULE_0_react___default.a.Component);

SellFormStep1.contextTypes = {
    t: __WEBPACK_IMPORTED_MODULE_8_prop_types__["PropTypes"].func.isRequired
};

var mapStateToProps = function mapStateToProps(state) {
    return state.content;
};

var mapDispatchToProps = function mapDispatchToProps(dispatch) {
    return {
        updateFromMultiple: function updateFromMultiple(type, index, key, value) {
            return dispatch({
                type: 'UPDATE_FROM_MULTIPLE',
                selectorType: type,
                index: index,
                key: key,
                value: value
            });
        },
        updateAttachments: function updateAttachments(name, index, value) {
            return dispatch({
                type: 'UPDATE_ATTACHMENTS',
                name: name,
                index: index,
                value: value
            });
        },
        openSportSelector: function openSportSelector(index, selectedItems) {
            return dispatch({
                type: 'OPEN_SELECTOR',
                selectorItems: ContentArena.Data.FullSports,
                popularItems: ContentArena.Data.TopSports,
                selectorType: "sports",
                activeFilter: "popular",
                clean: ["tournament", "seasons", "sportCategory"],
                selectedItems: selectedItems,
                showNewSport: true,
                index: index
            });
        },
        openCategorySelector: function openCategorySelector(selectedItems) {
            return dispatch({
                type: 'OPEN_SELECTOR',
                selectorItems: ContentArena.Data.Categories,
                selectorType: "sportCategory",
                activeFilter: "ag",
                showAllCountries: true,
                showNewCategory: true,
                selectedItems: selectedItems,
                index: 0,
                clean: ["tournament", "seasons", "customCategory", "customTournament"]
            });
        },
        openTournamentSelector: function openTournamentSelector(selectedItems) {
            return dispatch({
                type: 'OPEN_SELECTOR',
                selectorItems: ContentArena.Data.Tournaments,
                selectorType: "tournament",
                activeFilter: "ag",
                index: 0,
                selectedItems: selectedItems,
                showNewTournament: true,
                clean: ["seasons"]
            });
        },
        openSeasonSelector: function openSeasonSelector(index, selectedItems) {
            return dispatch({
                type: 'OPEN_SELECTOR',
                selectorItems: ContentArena.Data.Seasons,
                selectorType: "seasons",
                multiple: true,
                index: index,
                showNewSeason: true,
                clean: [],
                selectedItems: selectedItems
            });
        },
        removeFromMultiple: function removeFromMultiple(index, selectorType) {
            return dispatch({
                type: 'REMOVE_FROM_MULTIPLE',
                selectorType: selectorType,
                index: index
            });
        },
        updateContentValue: function updateContentValue(key, value) {
            return dispatch({
                type: 'UPDATE_CONTENT_VALUE',
                key: key,
                value: value
            });
        },
        removeNewSport: function removeNewSport(index) {
            return dispatch({
                type: 'REMOVE_NEW',
                index: index,
                selectorType: "sports"
            });
        },
        removeNewTournament: function removeNewTournament(index) {
            return dispatch({
                type: 'REMOVE_NEW',
                index: index,
                selectorType: "tournament"
            });
        },
        removeNewCategory: function removeNewCategory(index) {
            return dispatch({
                type: 'REMOVE_NEW',
                index: index,
                selectorType: "sportCategory"
            });
        },
        removeNewSeason: function removeNewSeason(index) {
            return dispatch({
                type: 'REMOVE_NEW',
                index: index,
                selectorType: "seasons"
            });
        },
        addNewSeason: function addNewSeason(index) {
            return dispatch({
                type: 'ADD_NEW',
                index: index,
                selectorType: "seasons",
                clean: []
            });
        },
        addNewCategory: function addNewCategory() {
            return dispatch({
                type: 'ADD_NEW',
                index: 0,
                selectorType: "sportCategory",
                clean: ["tournament", "seasons"]
            });
        },
        addNewTournament: function addNewTournament() {
            return dispatch({
                type: 'ADD_NEW',
                index: 0,
                selectorType: "tournament",
                clean: ["seasons"]
            });
        },
        reset: function reset() {
            return dispatch({
                type: 'RESET'
            });
        },
        selectTournament: function selectTournament(tournament) {
            return dispatch({ type: 'SELECT_TOURNAMENT', tournament: tournament });
        },
        stepChangeReset: function stepChangeReset() {
            return dispatch(Object(__WEBPACK_IMPORTED_MODULE_6__actions_contentActions__["e" /* stepChangeReset */])());
        }

    };
};

/* harmony default export */ __webpack_exports__["a"] = (Object(__WEBPACK_IMPORTED_MODULE_1_react_redux__["connect"])(mapStateToProps, mapDispatchToProps)(SellFormStep1));

/***/ }),

/***/ "./src/AppBundle/Resources/public/javascript/sell/containers/SellFormStep2.js":
/*!************************************************************************************!*\
  !*** ./src/AppBundle/Resources/public/javascript/sell/containers/SellFormStep2.js ***!
  \************************************************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_react__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_react_redux__ = __webpack_require__(/*! react-redux */ "./node_modules/react-redux/es/index.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__containers_PackageSelector__ = __webpack_require__(/*! ../containers/PackageSelector */ "./src/AppBundle/Resources/public/javascript/sell/containers/PackageSelector.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__components_SellFormItems__ = __webpack_require__(/*! ../components/SellFormItems */ "./src/AppBundle/Resources/public/javascript/sell/components/SellFormItems.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__components_RightDefinitions__ = __webpack_require__(/*! ../components/RightDefinitions */ "./src/AppBundle/Resources/public/javascript/sell/components/RightDefinitions.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__components_ProductionStandardsDefinitions__ = __webpack_require__(/*! ../components/ProductionStandardsDefinitions */ "./src/AppBundle/Resources/public/javascript/sell/components/ProductionStandardsDefinitions.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__actions_contentActions__ = __webpack_require__(/*! ../actions/contentActions */ "./src/AppBundle/Resources/public/javascript/sell/actions/contentActions.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__main_actions_utils__ = __webpack_require__(/*! ../../main/actions/utils */ "./src/AppBundle/Resources/public/javascript/main/actions/utils.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8_prop_types__ = __webpack_require__(/*! prop-types */ "./node_modules/prop-types/index.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8_prop_types___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_8_prop_types__);
var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }











var SellFormStep2 = function (_React$Component) {
    _inherits(SellFormStep2, _React$Component);

    function SellFormStep2(props) {
        _classCallCheck(this, SellFormStep2);

        var _this2 = _possibleConstructorReturn(this, (SellFormStep2.__proto__ || Object.getPrototypeOf(SellFormStep2)).call(this, props));

        _this2.loadRights = function (rightsPackage, group) {
            var _this = _this2;
            ContentArena.Api.getRights(rightsPackage.map(function (p) {
                return p.id;
            }), group).done(function (rights) {
                _this.setState({ rights: rights });
            });
        };

        _this2.updateRight = function (rightsPackage) {
            _this2.props.superRightsUpdated(rightsPackage);
        };

        _this2.superRightsEnabled = function (superRights) {

            var selected = _this2.props.rightsPackage.map(function (a) {
                return a.shortLabel;
            });

            return superRights.filter(function (r) {
                return selected.indexOf(r) !== -1;
            }).length > 0;
        };

        _this2.scroll = function () {
            var _this2$props = _this2.props,
                stepChange = _this2$props.stepChange,
                stepChangeReset = _this2$props.stepChangeReset;


            if (stepChange) {
                window.scrollTo(0, 0);
                stepChangeReset();
            }
        };

        var startYear = 2030;
        var years = [];

        for (var i = 0; i < 81; i++) {
            years.push(startYear - i);
        }

        _this2.state = {
            years: years,
            title: "Step 2 - Configure Rights",
            licensePopup: false,
            rights: __WEBPACK_IMPORTED_MODULE_4__components_RightDefinitions__["a" /* RightDefinitions */],
            productionStandards: __WEBPACK_IMPORTED_MODULE_5__components_ProductionStandardsDefinitions__["a" /* ProductionStandardsDefinitions */]
        };
        return _this2;
    }

    _createClass(SellFormStep2, [{
        key: "componentWillReceiveProps",
        value: function componentWillReceiveProps(nextProps) {
            console.log("Step 2 - props", nextProps);
            window.content = nextProps;
        }
    }, {
        key: "render",
        value: function render() {
            var _props = this.props,
                programDescription = _props.programDescription,
                updateContentValue = _props.updateContentValue,
                PROGRAM_NAME = _props.PROGRAM_NAME,
                PROGRAM_EPISODES = _props.PROGRAM_EPISODES,
                PROGRAM_YEAR = _props.PROGRAM_YEAR,
                PROGRAM_TYPE = _props.PROGRAM_TYPE,
                PROGRAM_DURATION = _props.PROGRAM_DURATION,
                PROGRAM_DESCRIPTION = _props.PROGRAM_DESCRIPTION,
                rightsPackage = _props.rightsPackage,
                step = _props.step,
                sports = _props.sports,
                sportCategory = _props.sportCategory,
                tournament = _props.tournament,
                seasons = _props.seasons;

            if (step !== 2) return null;

            var editedProgram = Object(__WEBPACK_IMPORTED_MODULE_7__main_actions_utils__["a" /* editedProgramSelected */])(rightsPackage);

            this.scroll();
            return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                "div",
                { className: "step-content step-2" },
                (sports.length || sportCategory.length || tournament.length || seasons.length) && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                    "div",
                    { className: "listing-summary" },
                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_3__components_SellFormItems__["f" /* SummaryText */], this.props)
                ),
                __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                    "div",
                    { className: "step-content-container" },
                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        "div",
                        { className: "textarea-input" },
                        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                            "label",
                            null,
                            this.context.t("CL_STEP2_PROGRAM_DESCRIPTION_TITLE"),
                            __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement("i", { className: "fa fa-info-circle tooltip-icon", title: 'The program description represents the core of the license agreement. It defines what is licensed by you, the licensor. You either can license produced content (e.g. live transmission of an event) or an event itself (e.g. a tennis tournament). In the license agreement, all rights selected below will directly refer to this program description.' })
                        ),
                        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                            "div",
                            { className: "textarea-input-text" },
                            this.context.t("CL_STEP2_PROGRAM_DESCRIPTION_TEXT")
                        ),
                        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement("textarea", {
                            onChange: function onChange(e) {
                                return updateContentValue("programDescription", e.target.value);
                            },
                            defaultValue: programDescription,
                            placeholder: this.context.t("CL_STEP2_PROGRAM_DESCRIPTION_PLACEHOLDER") })
                    )
                ),
                __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_2__containers_PackageSelector__["a" /* default */], { packages: this.props.packages }),
                editedProgram && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                    "div",
                    null,
                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        "div",
                        { className: "left" },
                        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                            "div",
                            { className: "modal-input" },
                            __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                "label",
                                null,
                                this.context.t("CL_STEP2_PROGRAM_NAME")
                            ),
                            __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement("input", {
                                type: "text",
                                value: PROGRAM_NAME,
                                onChange: function onChange(e) {
                                    updateContentValue("PROGRAM_NAME", e.target.value);
                                } })
                        ),
                        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                            "div",
                            { className: "modal-input" },
                            __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                "label",
                                null,
                                this.context.t("CL_STEP2_PROGRAM_EPISODES")
                            ),
                            __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement("input", {
                                type: "number",
                                value: PROGRAM_EPISODES,
                                onChange: function onChange(e) {
                                    updateContentValue("PROGRAM_EPISODES", Number(e.target.value));
                                } })
                        ),
                        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                            "div",
                            { className: "modal-input" },
                            __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                "label",
                                null,
                                this.context.t("CL_STEP2_PROGRAM_DURATION")
                            ),
                            __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement("input", {
                                type: "number",
                                value: PROGRAM_DURATION,
                                onChange: function onChange(e) {
                                    updateContentValue("PROGRAM_DURATION", Number(e.target.value));
                                } })
                        ),
                        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                            "div",
                            { className: "modal-input" },
                            __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                "label",
                                null,
                                this.context.t("CL_STEP2_PROGRAM_TYPE")
                            ),
                            __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                "select",
                                {
                                    value: PROGRAM_TYPE,
                                    onChange: function onChange(e) {
                                        updateContentValue("PROGRAM_TYPE", e.target.value);
                                    } },
                                __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                    "option",
                                    { value: "SELECT" },
                                    "Select"
                                ),
                                __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                    "option",
                                    { value: "HIGHLIGHT_SHOW" },
                                    "Highlight show"
                                ),
                                __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                    "option",
                                    { value: "DOCUMENTARY" },
                                    "Documentary"
                                ),
                                __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                    "option",
                                    { value: "PREVIEW" },
                                    "Preview"
                                ),
                                __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                    "option",
                                    { value: "TALK_SHOW" },
                                    "Talk show"
                                ),
                                __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                    "option",
                                    { value: "OTHER" },
                                    "Other"
                                )
                            )
                        ),
                        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                            "div",
                            { className: "modal-input" },
                            __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                "label",
                                null,
                                this.context.t("CL_STEP2_PROGRAM_YEAR")
                            ),
                            __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                "select",
                                {
                                    value: PROGRAM_YEAR,
                                    onChange: function onChange(e) {
                                        updateContentValue("PROGRAM_YEAR", e.target.value);
                                    } },
                                __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                    "option",
                                    { value: "Year" },
                                    "Year"
                                ),
                                this.state.years.map(function (year, i) {
                                    return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                        "option",
                                        { key: i, value: year },
                                        year
                                    );
                                })
                            )
                        )
                    ),
                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        "div",
                        { className: "right" },
                        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                            "div",
                            { className: "modal-input" },
                            __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                "label",
                                null,
                                this.context.t("CL_STEP2_PROGRAM_DESCRIPTION_OPTIONAL")
                            ),
                            __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                "textarea",
                                {
                                    onChange: function onChange(e) {
                                        updateContentValue("PROGRAM_DESCRIPTION", e.target.value);
                                    },
                                    placeholder: this.context.t("CL_STEP2_PROGRAM_DESCRIPTION_OPTIONAL_PLACEHOLDER") },
                                PROGRAM_DESCRIPTION
                            )
                        )
                    ),
                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement("div", { className: "clearfix" })
                )
            );
        }
    }]);

    return SellFormStep2;
}(__WEBPACK_IMPORTED_MODULE_0_react___default.a.Component);

SellFormStep2.contextTypes = {
    t: __WEBPACK_IMPORTED_MODULE_8_prop_types__["PropTypes"].func.isRequired
};

var mapStateToProps = function mapStateToProps(state) {
    return state.content;
};

var mapDispatchToProps = function mapDispatchToProps(dispatch) {
    return {
        superRightsUpdated: function superRightsUpdated(rightsPackage) {
            return dispatch({
                type: 'SUPER_RIGHTS_UPDATED',
                rightsPackage: rightsPackage
            });
        },
        updateContentValue: function updateContentValue(key, value) {
            return dispatch({
                type: 'UPDATE_CONTENT_VALUE',
                key: key,
                value: value
            });
        },
        stepChangeReset: function stepChangeReset() {
            return dispatch(Object(__WEBPACK_IMPORTED_MODULE_6__actions_contentActions__["e" /* stepChangeReset */])());
        }
    };
};

/* harmony default export */ __webpack_exports__["a"] = (Object(__WEBPACK_IMPORTED_MODULE_1_react_redux__["connect"])(mapStateToProps, mapDispatchToProps)(SellFormStep2));

/***/ }),

/***/ "./src/AppBundle/Resources/public/javascript/sell/containers/SellFormStep3.js":
/*!************************************************************************************!*\
  !*** ./src/AppBundle/Resources/public/javascript/sell/containers/SellFormStep3.js ***!
  \************************************************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_react__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_react_redux__ = __webpack_require__(/*! react-redux */ "./node_modules/react-redux/es/index.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_react_modal__ = __webpack_require__(/*! react-modal */ "./node_modules/react-modal/lib/index.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_react_modal___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2_react_modal__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_moment__ = __webpack_require__(/*! moment */ "./node_modules/moment/moment.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_moment___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_3_moment__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__containers_PackageSelector__ = __webpack_require__(/*! ../containers/PackageSelector */ "./src/AppBundle/Resources/public/javascript/sell/containers/PackageSelector.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__components_PopupRight__ = __webpack_require__(/*! ../components/PopupRight */ "./src/AppBundle/Resources/public/javascript/sell/components/PopupRight.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__components_Comments__ = __webpack_require__(/*! ../components/Comments */ "./src/AppBundle/Resources/public/javascript/sell/components/Comments.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__components_LicenseDateSelector__ = __webpack_require__(/*! ../components/LicenseDateSelector */ "./src/AppBundle/Resources/public/javascript/sell/components/LicenseDateSelector.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__components_RightDefinitions__ = __webpack_require__(/*! ../components/RightDefinitions */ "./src/AppBundle/Resources/public/javascript/sell/components/RightDefinitions.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9__components_ProductionStandardsDefinitions__ = __webpack_require__(/*! ../components/ProductionStandardsDefinitions */ "./src/AppBundle/Resources/public/javascript/sell/components/ProductionStandardsDefinitions.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_10__components_SellFormItems__ = __webpack_require__(/*! ../components/SellFormItems */ "./src/AppBundle/Resources/public/javascript/sell/components/SellFormItems.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_11__actions_contentActions__ = __webpack_require__(/*! ../actions/contentActions */ "./src/AppBundle/Resources/public/javascript/sell/actions/contentActions.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_12__main_components_LanguageSelector__ = __webpack_require__(/*! ../../main/components/LanguageSelector */ "./src/AppBundle/Resources/public/javascript/main/components/LanguageSelector.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_13__main_styles_custom__ = __webpack_require__(/*! ../../main/styles/custom */ "./src/AppBundle/Resources/public/javascript/main/styles/custom.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_14_prop_types__ = __webpack_require__(/*! prop-types */ "./node_modules/prop-types/index.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_14_prop_types___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_14_prop_types__);
var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }




















var licenseStyles = {
    fontSize: "15px",
    fontWeight: "100",
    justifyContent: "left"
};

var SellFormStep3 = function (_React$Component) {
    _inherits(SellFormStep3, _React$Component);

    function SellFormStep3(props) {
        _classCallCheck(this, SellFormStep3);

        var _this2 = _possibleConstructorReturn(this, (SellFormStep3.__proto__ || Object.getPrototypeOf(SellFormStep3)).call(this, props));

        _this2.loadRights = function (rightsPackage, group) {
            var _this = _this2;
            ContentArena.Api.getRights(rightsPackage.map(function (p) {
                return p.id;
            }), group).done(function (rights) {
                _this.setState({ rights: rights });
            });
        };

        _this2.closeProgramsPopup = function () {
            _this2.setState({ programPopupActive: false });
        };

        _this2.closeLicensePopup = function () {
            _this2.setState({ licensePopup: false });
        };

        _this2.selectCurrency = function (currency) {
            _this2.props.updateContentValue('currency', currency);
        };

        _this2.selectLicenseDates = function (key, value) {
            _this2.props.updateContentValue(key, value);
        };

        _this2.updateRight = function (rightsPackage) {
            _this2.props.superRightsUpdated(rightsPackage);
        };

        _this2.superRightsEnabled = function (superRights) {

            var selected = _this2.props.rightsPackage.map(function (a) {
                return a.shortLabel;
            });

            return superRights.filter(function (r) {
                return selected.indexOf(r) !== -1;
            }).length > 0;
        };

        _this2.skipContentDelivery = function (right) {
            var rightsPackage = _this2.props.rightsPackage;


            var selected = rightsPackage.map(function (a) {
                return a.shortLabel;
            });

            return right.key === "CONTENT_DELIVERY" && selected.indexOf("NA") === -1 && selected.indexOf("LB") === -1 && selected.indexOf("HL") === -1 && selected.indexOf("DT") === -1;
        };

        _this2.scroll = function () {
            var _this2$props = _this2.props,
                stepChange = _this2$props.stepChange,
                stepChangeReset = _this2$props.stepChangeReset;


            if (stepChange) {
                window.scrollTo(0, 0);
                stepChangeReset();
            }
        };

        _this2.showLicensePopup = function () {
            _this2.setState({
                licensePopup: true
            });
        };

        _this2.state = {
            programPopupActive: false,
            licensePopup: false,
            rights: __WEBPACK_IMPORTED_MODULE_8__components_RightDefinitions__["a" /* RightDefinitions */],
            productionStandards: __WEBPACK_IMPORTED_MODULE_9__components_ProductionStandardsDefinitions__["a" /* ProductionStandardsDefinitions */]
        };
        _this2.blueCheck = assetsBaseDir + "app/images/blue_check.png";
        _this2.yellowCheck = assetsBaseDir + "app/images/yellow_chech.png";

        return _this2;
    }

    _createClass(SellFormStep3, [{
        key: 'renderProgramPopup',
        value: function renderProgramPopup() {
            var _props = this.props,
                updateContentValue = _props.updateContentValue,
                PROGRAM_SUBTITLES = _props.PROGRAM_SUBTITLES,
                PROGRAM_SCRIPT = _props.PROGRAM_SCRIPT,
                PROGRAM_LANGUAGE = _props.PROGRAM_LANGUAGE;

            return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                __WEBPACK_IMPORTED_MODULE_2_react_modal___default.a,
                {
                    isOpen: this.state.programPopupActive,
                    onRequestClose: this.closeProgramsPopup,
                    bodyOpenClassName: "selector",
                    style: __WEBPACK_IMPORTED_MODULE_13__main_styles_custom__["c" /* customStyles */],
                    contentLabel: 'Example Modal'
                },
                __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                    'div',
                    { className: 'modal-title' },
                    this.context.t("CL_STEP3_PROGRAM_MODAL_TITLE"),
                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('i', { className: 'fa fa-times-circle-o', onClick: this.closeProgramsPopup })
                ),
                __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                    'div',
                    { className: 'step-content custom' },
                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        'div',
                        { className: 'step-content-container', style: { minWidth: 500 } },
                        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                            'div',
                            { className: 'modal-input' },
                            __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                'label',
                                null,
                                this.context.t("CL_STEP3_PROGRAM_MODAL_LANGUAGE")
                            ),
                            __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_12__main_components_LanguageSelector__["a" /* LanguageSelector */], {
                                value: PROGRAM_LANGUAGE,
                                onChange: function onChange(value) {
                                    updateContentValue('PROGRAM_LANGUAGE', value);
                                } })
                        ),
                        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                            'div',
                            { className: 'modal-input' },
                            __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                'label',
                                null,
                                this.context.t("CL_STEP3_PROGRAM_MODAL_SUBTITLES")
                            ),
                            __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_12__main_components_LanguageSelector__["a" /* LanguageSelector */], {
                                value: PROGRAM_SUBTITLES,
                                onChange: function onChange(value) {
                                    updateContentValue('PROGRAM_SUBTITLES', value);
                                } })
                        ),
                        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                            'div',
                            { className: 'modal-input' },
                            __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                'label',
                                null,
                                this.context.t("CL_STEP3_PROGRAM_MODAL_SCRIPT")
                            ),
                            __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_12__main_components_LanguageSelector__["a" /* LanguageSelector */], {
                                value: PROGRAM_SCRIPT,
                                onChange: function onChange(value) {
                                    updateContentValue('PROGRAM_SCRIPT', value);
                                } })
                        )
                    )
                ),
                __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                    'div',
                    { className: "buttons" },
                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        'button',
                        {
                            className: "standard-button",
                            onClick: this.closeProgramsPopup },
                        this.context.t("CL_STEP3_PROGRAM_MODAL_BUTTON_OK")
                    )
                )
            );
        }
    }, {
        key: 'render',
        value: function render() {
            var _this3 = this;

            var _props2 = this.props,
                step = _props2.step,
                rightsPackage = _props2.rightsPackage,
                startDateMode = _props2.startDateMode,
                endDateMode = _props2.endDateMode,
                endDate = _props2.endDate,
                COMMENTS_RIGHTS = _props2.COMMENTS_RIGHTS,
                COMMENTS_PRODUCTION = _props2.COMMENTS_PRODUCTION,
                updateContentValue = _props2.updateContentValue,
                PROGRAM_NAME = _props2.PROGRAM_NAME,
                LICENSED_LANGUAGES = _props2.LICENSED_LANGUAGES;

            if (step !== 3) return null;
            this.scroll();

            return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                'div',
                { className: 'step-content step-3' },
                this.renderProgramPopup(),
                __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                    'div',
                    { className: 'listing-summary' },
                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_10__components_SellFormItems__["f" /* SummaryText */], this.props)
                ),
                __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                    'div',
                    { className: 'step-content-container' },
                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        'div',
                        { className: "rights-box" },
                        rightsPackage.map(function (sr, i) {
                            return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                'div',
                                { key: i, className: "rights-box-item" },
                                !sr.exclusive && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('img', { style: { width: 23, height: 22, margin: '0 5px' }, src: _this3.blueCheck }),
                                sr.exclusive && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('img', { style: { width: 23, height: 22, margin: '0 5px' }, src: _this3.yellowCheck }),
                                __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                    'div',
                                    { style: { display: 'flex', flexDirection: "row" } },
                                    sr.shortLabel !== "PR" && sr.name,
                                    sr.shortLabel === "PR" && content.PROGRAM_NAME && "Edited Program",
                                    sr.exclusive && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                        'span',
                                        { style: { fontWeight: 600, marginLeft: 3 } },
                                        ' EX'
                                    )
                                )
                            );
                        })
                    ),
                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_7__components_LicenseDateSelector__["a" /* default */], {
                        isOpen: this.state.licensePopup,
                        onUpdate: this.selectLicenseDates,
                        startDate: this.props.startDate,
                        endDateLimit: this.props.endDateLimit,
                        endDateMode: endDateMode,
                        startDateMode: startDateMode,
                        endDate: endDate,
                        onClose: this.closeLicensePopup
                    }),
                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_10__components_SellFormItems__["g" /* TitleBar */], { title: "License period", infoText: 'Means the time period during which the licensee may exploit the program.' }),
                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        'div',
                        { className: "license-date-container" },
                        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                            'div',
                            { className: 'table-right' },
                            __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                'div',
                                { className: 'row' },
                                __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                    'div',
                                    { className: 'column right-name' },
                                    this.context.t("CL_STEP3_TITLE_LICENSE_PERIOD_START")
                                ),
                                __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                    'div',
                                    { className: 'column right-item-content', style: licenseStyles, onClick: this.showLicensePopup },
                                    this.props.startDateMode === "LICENSE" && " contract conclusion",
                                    this.props.startDateMode === "DATE" && __WEBPACK_IMPORTED_MODULE_3_moment___default()(this.props.startDate).format('DD/MM/YYYY')
                                ),
                                __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                    'div',
                                    { className: 'column right-name' },
                                    this.context.t("CL_STEP3_TITLE_LICENSE_PERIOD_END")
                                ),
                                __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                    'div',
                                    { className: 'column right-item-content', style: licenseStyles, onClick: this.showLicensePopup },
                                    endDateMode === "LIMITED" && this.props.endDateLimit + this.context.t("LISTING_DETAILS_LICENSE_END_DAYS"),
                                    endDateMode === "DATE" && __WEBPACK_IMPORTED_MODULE_3_moment___default()(this.props.endDate).format('DD/MM/YYYY'),
                                    endDateMode === "UNLIMITED" && this.context.t("Unlimited"),
                                    !endDateMode && this.context.t("CL_STEP3_SELECT_LICENSE_PERIOD"),
                                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                        'div',
                                        { className: 'column right-item-content edit-item', onClick: this.showLicensePopup },
                                        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('i', { className: 'fa fa-edit' })
                                    )
                                )
                            )
                        )
                    ),
                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_10__components_SellFormItems__["g" /* TitleBar */], { title: this.context.t("CL_STEP3_TITLE_GRANT_RIGHT") }),
                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        'div',
                        { className: 'rights-container' },
                        this.state.rights.length > 0 && this.state.rights.map(function (right, i) {

                            if (right.superRights.length > 0 && !_this3.superRightsEnabled(right.superRights)) return;

                            return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_5__components_PopupRight__["a" /* default */], {
                                key: right.key,
                                id: right.key,
                                name: right.name,
                                description: right.description,
                                global: right.global,
                                language: right.language,
                                languages: LICENSED_LANGUAGES,
                                options: right.options,
                                multiple: right.multiple,
                                superRights: right.superRights,
                                showTextArea: right.showTextArea,
                                onUpdate: _this3.updateRight,
                                onUpdateListing: function onUpdateListing(k, v) {
                                    updateContentValue(k, v);
                                },
                                rightsPackage: _this3.props.rightsPackage });
                        })
                    ),
                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_6__components_Comments__["a" /* default */], { comments: COMMENTS_RIGHTS, propName: "COMMENTS_RIGHTS" }),
                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_10__components_SellFormItems__["g" /* TitleBar */], { title: this.context.t("CL_STEP3_TITLE_PRODUCTION_STANDARDS") }),
                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        'div',
                        { className: 'rights-container' },
                        this.state.productionStandards.length > 0 && this.state.productionStandards.map(function (right, i) {

                            var superRights = right.superRights;

                            if (right.superRights.length > 0 && !_this3.superRightsEnabled(right.superRights)) return;

                            if (_this3.skipContentDelivery(right)) return;

                            return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_5__components_PopupRight__["a" /* default */], {
                                key: right.key,
                                id: right.key,
                                name: right.name,
                                description: right.description,
                                selected: _this3.props[right.key],
                                options: right.options,
                                multiple: right.multiple,
                                productionLabel: right.productionLabel,
                                checkContentDelivery: true,
                                programName: PROGRAM_NAME,
                                onProgram: function onProgram() {
                                    _this3.setState({
                                        programPopupActive: true
                                    });
                                },
                                content: _this3.props,
                                superRights: superRights,
                                showTextArea: right.showTextArea,
                                technicalFee: right.technicalFee,
                                onUpdate: _this3.updateRight,
                                onUpdateListing: function onUpdateListing(k, v) {
                                    updateContentValue(k, v);
                                },
                                rightsPackage: _this3.props.rightsPackage
                            });
                        })
                    ),
                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_6__components_Comments__["a" /* default */], { comments: COMMENTS_PRODUCTION, propName: "COMMENTS_PRODUCTION" })
                )
            );
        }
    }]);

    return SellFormStep3;
}(__WEBPACK_IMPORTED_MODULE_0_react___default.a.Component);

SellFormStep3.contextTypes = {
    t: __WEBPACK_IMPORTED_MODULE_14_prop_types__["PropTypes"].func.isRequired
};

var mapStateToProps = function mapStateToProps(state) {
    return state.content;
};

var mapDispatchToProps = function mapDispatchToProps(dispatch) {
    return {
        superRightsUpdated: function superRightsUpdated(rightsPackage) {
            return dispatch({
                type: 'SUPER_RIGHTS_UPDATED',
                rightsPackage: rightsPackage
            });
        },
        removeNewSport: function removeNewSport(index) {
            return dispatch({
                type: 'REMOVE_NEW',
                index: index,
                selectorType: "sports"
            });
        },
        updateContentValue: function updateContentValue(key, value) {
            return dispatch({
                type: 'UPDATE_CONTENT_VALUE',
                key: key,
                value: value
            });
        },
        updateProgram: function updateProgram(index, program, name) {
            return dispatch({
                type: 'UPDATE_PROGRAMS',
                index: index,
                program: program,
                name: name
            });
        },
        stepChangeReset: function stepChangeReset() {
            return dispatch(Object(__WEBPACK_IMPORTED_MODULE_11__actions_contentActions__["e" /* stepChangeReset */])());
        }
    };
};

/* harmony default export */ __webpack_exports__["a"] = (Object(__WEBPACK_IMPORTED_MODULE_1_react_redux__["connect"])(mapStateToProps, mapDispatchToProps)(SellFormStep3));

/***/ }),

/***/ "./src/AppBundle/Resources/public/javascript/sell/containers/SellFormStep4.js":
/*!************************************************************************************!*\
  !*** ./src/AppBundle/Resources/public/javascript/sell/containers/SellFormStep4.js ***!
  \************************************************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_react__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_react_redux__ = __webpack_require__(/*! react-redux */ "./node_modules/react-redux/es/index.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__main_components_FileSelector__ = __webpack_require__(/*! ../../main/components/FileSelector */ "./src/AppBundle/Resources/public/javascript/main/components/FileSelector.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__components_SalesPackageForm__ = __webpack_require__(/*! ../components/SalesPackageForm */ "./src/AppBundle/Resources/public/javascript/sell/components/SalesPackageForm.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__components_SalesPackageEdit__ = __webpack_require__(/*! ../components/SalesPackageEdit */ "./src/AppBundle/Resources/public/javascript/sell/components/SalesPackageEdit.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__components_ExpirationDateSelector__ = __webpack_require__(/*! ../components/ExpirationDateSelector */ "./src/AppBundle/Resources/public/javascript/sell/components/ExpirationDateSelector.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__components_JurisdictionSelector__ = __webpack_require__(/*! ../components/JurisdictionSelector */ "./src/AppBundle/Resources/public/javascript/sell/components/JurisdictionSelector.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__components_CompanyInformation__ = __webpack_require__(/*! ../components/CompanyInformation */ "./src/AppBundle/Resources/public/javascript/sell/components/CompanyInformation.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__components_ListingName__ = __webpack_require__(/*! ../components/ListingName */ "./src/AppBundle/Resources/public/javascript/sell/components/ListingName.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9__main_components_CountrySelector__ = __webpack_require__(/*! ../../main/components/CountrySelector */ "./src/AppBundle/Resources/public/javascript/main/components/CountrySelector.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_10__actions_contentActions__ = __webpack_require__(/*! ../actions/contentActions */ "./src/AppBundle/Resources/public/javascript/sell/actions/contentActions.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_11__components_SellFormItems__ = __webpack_require__(/*! ../components/SellFormItems */ "./src/AppBundle/Resources/public/javascript/sell/components/SellFormItems.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_12_prop_types__ = __webpack_require__(/*! prop-types */ "./node_modules/prop-types/index.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_12_prop_types___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_12_prop_types__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_13__components_ApplicableLaw__ = __webpack_require__(/*! ../components/ApplicableLaw */ "./src/AppBundle/Resources/public/javascript/sell/components/ApplicableLaw.js");
var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
















var SellFormStep4 = function (_React$Component) {
    _inherits(SellFormStep4, _React$Component);

    function SellFormStep4(props) {
        _classCallCheck(this, SellFormStep4);

        var _this = _possibleConstructorReturn(this, (SellFormStep4.__proto__ || Object.getPrototypeOf(SellFormStep4)).call(this, props));

        _this.selectCurrency = function (currency) {
            _this.props.updateContentValue("currency", currency);
        };

        _this.updateName = function (e) {
            _this.props.updateContentValue("name", e.target.value);
        };

        _this.editSalesPackage = function (index) {
            _this.setState({
                salesPackageToEdit: index,
                editOpen: true
            });
        };

        _this.addSalesPackage = function (salesPackages) {
            var currency = _this.props.currency;

            salesPackages.forEach(function (sp) {
                return sp.currency = { code: currency };
            });
            _this.props.addSalesPackages(salesPackages);
        };

        _this.updateSalesPackage = function (salesPackage, index) {
            _this.props.updateSalesPackages("save", salesPackage, index);
        };

        _this.removeSalesPackage = function (index) {
            _this.props.updateSalesPackages("remove", null, index);
        };

        _this.removeAllSalesPackage = function () {
            _this.props.updateSalesPackages("removeAll");
        };

        _this.exclusivity = function () {
            var rightsPackage = _this.props.rightsPackage;

            return rightsPackage.filter(function (rp) {
                return rp.exclusive;
            }).length > 0;
        };

        _this.scroll = function () {
            var _this$props = _this.props,
                stepChange = _this$props.stepChange,
                stepChangeReset = _this$props.stepChangeReset;


            if (stepChange) {
                window.scrollTo(0, 0);
                stepChangeReset();
            }
        };

        _this.addFile = function (response) {
            var annex = _this.props.annex;

            var index = annex.length;
            _this.props.updateAnnex("save", index, { file: response.file, name: response.name });
        };

        _this.removeFile = function (index) {
            _this.props.updateAnnex("remove", index, null);
        };

        _this.state = {
            title: "Step 4",
            name: "",
            salesPackages: []
        };
        return _this;
    }

    /**
     *
     * @returns {boolean}
     */


    _createClass(SellFormStep4, [{
        key: 'render',
        value: function render() {
            var _this2 = this;

            var _props = this.props,
                step = _props.step,
                annex = _props.annex,
                salesPackages = _props.salesPackages,
                currency = _props.currency,
                updateContentValue = _props.updateContentValue,
                sports = _props.sports,
                sportCategory = _props.sportCategory,
                tournament = _props.tournament,
                image = _props.image;


            if (step !== 4) return null;
            this.scroll();
            return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                'div',
                { className: 'step-content step-4' },
                (sports.length || sportCategory.length || tournament.length || seasons.length) && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                    'div',
                    { className: 'listing-summary' },
                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_11__components_SellFormItems__["f" /* SummaryText */], this.props)
                ),
                __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                    'div',
                    { className: 'step-content-container' },
                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_3__components_SalesPackageForm__["a" /* default */], {
                        currency: currency,
                        exclusivity: this.exclusivity(),
                        salesPackages: salesPackages,
                        onAdd: this.addSalesPackage,
                        onUpdate: this.updateSalesPackage,
                        onRemove: this.removeSalesPackage,
                        onEdit: this.editSalesPackage,
                        onRemoveAll: this.removeAllSalesPackage,
                        selectCurrency: this.selectCurrency
                    }),
                    this.state.editOpen && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_4__components_SalesPackageEdit__["a" /* default */], {
                        isOpen: this.state.editOpen,
                        onClose: function onClose() {
                            _this2.setState({
                                editOpen: false
                            });
                        },
                        exclusivity: this.exclusivity(),
                        onUpdate: this.updateSalesPackage,
                        salesPackageId: this.state.salesPackageToEdit,
                        salesPackages: salesPackages
                    }),
                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_11__components_SellFormItems__["g" /* TitleBar */], { title: this.context.t("CL_STEP4_TITLE_INFO") }),
                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_7__components_CompanyInformation__["a" /* default */], null),
                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_6__components_JurisdictionSelector__["a" /* default */], null),
                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_13__components_ApplicableLaw__["a" /* default */], null),
                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_2__main_components_FileSelector__["a" /* default */], {
                        label: this.context.t('CL_STEP4_LABEL_ANNEX'),
                        target: "annex",
                        selected: annex,
                        onSelect: this.addFile,
                        onRemove: this.removeFile,
                        accept: [".pdf"],
                        acceptType: ["application/pdf"],
                        tmp: true,
                        infoText: this.context.t('CL_STEP4_INFO_ANNEX')
                    }),
                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_11__components_SellFormItems__["g" /* TitleBar */], { title: this.context.t("CL_STEP4_LISTING_DETAILS_TEXT"), infoText: this.context.t('CL_STEP4_INFO_DETAILS') }),
                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        'div',
                        { className: 'step-item-description', style: { marginTop: 0 } },
                        this.context.t("CL_STEP4_LISTING_DETAILS_TEXT")
                    ),
                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_8__components_ListingName__["a" /* default */], null),
                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        'div',
                        { className: 'row' },
                        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_5__components_ExpirationDateSelector__["a" /* default */], null),
                        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_2__main_components_FileSelector__["a" /* default */], {
                            label: this.context.t("CL_STEP4_LABEL_IMAGE"),
                            isImage: true,
                            onSelect: updateContentValue,
                            previousImage: image,
                            target: "imageBase64" }),
                        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('div', { className: 'clearfix' })
                    )
                )
            );
        }
    }]);

    return SellFormStep4;
}(__WEBPACK_IMPORTED_MODULE_0_react___default.a.Component);

SellFormStep4.contextTypes = {
    t: __WEBPACK_IMPORTED_MODULE_12_prop_types__["PropTypes"].func.isRequired
};

var mapStateToProps = function mapStateToProps(state) {
    return state.content;
};

var mapDispatchToProps = function mapDispatchToProps(dispatch) {
    return {
        updateContentValue: function updateContentValue(key, value) {
            return dispatch({
                type: 'UPDATE_CONTENT_VALUE',
                key: key,
                value: value
            });
        },
        updateSalesPackages: function updateSalesPackages(name, salesPackage, index) {
            return dispatch({
                type: 'UPDATE_SALES_PACKAGES',
                index: index,
                salesPackage: salesPackage,
                name: name
            });
        },
        addSalesPackages: function addSalesPackages(salesPackages) {
            return dispatch({
                type: 'ADD_SALES_PACKAGES',
                salesPackages: salesPackages
            });
        },
        updateAnnex: function updateAnnex(name, index, value) {
            return dispatch({
                type: 'UPDATE_ANNEX',
                name: name,
                index: index,
                value: value
            });
        },
        stepChangeReset: function stepChangeReset() {
            return dispatch(Object(__WEBPACK_IMPORTED_MODULE_10__actions_contentActions__["e" /* stepChangeReset */])());
        }
    };
};

/* harmony default export */ __webpack_exports__["a"] = (Object(__WEBPACK_IMPORTED_MODULE_1_react_redux__["connect"])(mapStateToProps, mapDispatchToProps)(SellFormStep4));

/***/ }),

/***/ "./src/AppBundle/Resources/public/javascript/sell/containers/SellFormSteps.js":
/*!************************************************************************************!*\
  !*** ./src/AppBundle/Resources/public/javascript/sell/containers/SellFormSteps.js ***!
  \************************************************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_react__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_react_redux__ = __webpack_require__(/*! react-redux */ "./node_modules/react-redux/es/index.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_classnames__ = __webpack_require__(/*! classnames */ "./node_modules/classnames/index.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_classnames___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2_classnames__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__actions_contentActions__ = __webpack_require__(/*! ../actions/contentActions */ "./src/AppBundle/Resources/public/javascript/sell/actions/contentActions.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_prop_types__ = __webpack_require__(/*! prop-types */ "./node_modules/prop-types/index.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_prop_types___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_4_prop_types__);
var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }







var SellFormStep = function SellFormStep(_ref) {
    var step = _ref.step,
        active = _ref.active,
        title = _ref.title,
        _onClick = _ref.onClick,
        stepVisited = _ref.stepVisited,
        stepFinished = _ref.stepFinished;
    return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
        "div",
        { className: __WEBPACK_IMPORTED_MODULE_2_classnames___default()("step", { "step-active": active, "visited": stepVisited, "finished": stepFinished }), onClick: function onClick() {
                _onClick(step);
            } },
        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
            "div",
            { className: "step-label" },
            "Step ",
            step
        ),
        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
            "div",
            { className: "step-title" },
            title
        ),
        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
            "div",
            { className: "step-icon" },
            __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement("i", { className: "fa fa-check" }),
            __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement("i", { className: "fa fa-ellipsis-h" })
        )
    );
};

var SellFormSteps = function (_React$Component) {
    _inherits(SellFormSteps, _React$Component);

    function SellFormSteps(props) {
        _classCallCheck(this, SellFormSteps);

        var _this = _possibleConstructorReturn(this, (SellFormSteps.__proto__ || Object.getPrototypeOf(SellFormSteps)).call(this, props));

        _this.onClick = function (stepSelected) {
            var _this$props = _this.props,
                goToStep = _this$props.goToStep,
                customId = _this$props.customId,
                history = _this$props.history,
                maxStep = _this$props.maxStep;


            if (stepSelected <= maxStep) {
                goToStep(stepSelected);
                history.push("/contentlisting/" + customId + "/" + stepSelected);
            }
        };

        _this.state = {
            steps: [{ step: 1, title: "Event selection" }, { step: 2, title: "Program & Rights Selection" }, { step: 3, title: "Grant of Rights & Production Details" }, { step: 4, title: "Commercial Details" }]
        };
        return _this;
    }

    _createClass(SellFormSteps, [{
        key: "render",
        value: function render() {
            var _this2 = this;

            var _props = this.props,
                maxStep = _props.maxStep,
                step = _props.step;


            return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                "div",
                { className: "box-header" },
                this.state.steps.map(function (stepItem, i) {
                    return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(SellFormStep, {
                        key: i,
                        active: step === stepItem.step,
                        stepVisited: stepItem.step <= maxStep,
                        stepFinished: stepItem.step < maxStep,
                        onClick: _this2.onClick,
                        step: stepItem.step,
                        title: stepItem.title
                    });
                })
            );
        }
    }]);

    return SellFormSteps;
}(__WEBPACK_IMPORTED_MODULE_0_react___default.a.Component);

SellFormSteps.contextTypes = {
    t: __WEBPACK_IMPORTED_MODULE_4_prop_types__["PropTypes"].func.isRequired
};

var mapStateToProps = function mapStateToProps(state) {
    return {
        step: state.content.step,
        maxStep: state.content.maxStep,
        customId: state.content.customId
    };
};

var mapDispatchToProps = function mapDispatchToProps(dispatch) {
    return {
        goToStep: function goToStep(step) {
            return dispatch(Object(__WEBPACK_IMPORTED_MODULE_3__actions_contentActions__["c" /* goToStep */])(step));
        }
    };
};

/* harmony default export */ __webpack_exports__["a"] = (Object(__WEBPACK_IMPORTED_MODULE_1_react_redux__["connect"])(mapStateToProps, mapDispatchToProps)(SellFormSteps));

/***/ }),

/***/ "./src/AppBundle/Resources/public/javascript/sell/reducers/content.js":
/*!****************************************************************************!*\
  !*** ./src/AppBundle/Resources/public/javascript/sell/reducers/content.js ***!
  \****************************************************************************/
/*! exports provided: contentType, EmptyListing, content */
/*! exports used: content, contentType */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function($) {/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "b", function() { return contentType; });
/* unused harmony export EmptyListing */
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return content; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_lodash_max__ = __webpack_require__(/*! lodash/max */ "./node_modules/lodash/max.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_lodash_max___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_lodash_max__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__main_components_LanguageSelector__ = __webpack_require__(/*! ./../../main/components/LanguageSelector */ "./src/AppBundle/Resources/public/javascript/main/components/LanguageSelector.js");
function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }




var contentType = {
    CONTENT_INIT: 'CONTENT_INIT',
    STEP_CHANGE_RESET: 'STEP_CHANGE_RESET',
    GO_TO_STEP: 'GO_TO_STEP',
    GO_TO_NEXT_STEP: 'GO_TO_NEXT_STEP',
    GO_TO_PREVIOUS_STEP: 'GO_TO_PREVIOUS_STEP',
    ADD_NEW: 'ADD_NEW',
    REMOVE_NEW: 'REMOVE_NEW',
    SUPER_RIGHTS_UPDATED: 'SUPER_RIGHTS_UPDATED',
    UPDATE_CONTENT_VALUE: 'UPDATE_CONTENT_VALUE',
    SELECT_TOURNAMENT: 'SELECT_TOURNAMENT',
    REMOVE_FROM_MULTIPLE: 'REMOVE_FROM_MULTIPLE',
    UPDATE_FROM_MULTIPLE: 'UPDATE_FROM_MULTIPLE',
    APPLY_SELECTION: 'APPLY_SELECTION',
    UPDATE_SALES_PACKAGES: 'UPDATE_SALES_PACKAGES',
    UPDATE_ATTACHMENTS: 'UPDATE_ATTACHMENTS',
    UPDATE_ANNEX: 'UPDATE_ANNEX',
    ADD_SALES_PACKAGES: 'ADD_SALES_PACKAGES',
    RESET: 'RESET'

};

var EmptyListing = {
    step: 1,
    maxStep: 1,
    rightsPackage: [],
    tournament: [],
    sportCategory: [],
    sports: [],
    seasons: [],
    customSeasons: [],
    salesPackages: [],
    customTournament: null,
    customCategory: null,
    description: '',
    programDescription: null,
    attachments: [],
    annex: [],
    endDateLimit: 30,
    counter: 0,
    currency: "EUR",
    startDateMode: "LICENSE",
    stepChange: false,
    vat: "no",
    NA_INPUT: 90,
    HL_INPUT: 5,
    LICENSED_LANGUAGES: [__WEBPACK_IMPORTED_MODULE_1__main_components_LanguageSelector__["b" /* allValue */]],
    PROGRAM_LANGUAGE: [],
    PROGRAM_SUBTITLES: [],
    PROGRAM_SCRIPT: [],
    website: null,
    law: "English"
};

var content = function content() {
    var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : EmptyListing;
    var action = arguments[1];


    var newState = {};

    switch (action.type) {
        case contentType.RESET:
            return Object.assign({}, state, EmptyListing);
        case contentType.CONTENT_INIT:
            action.content.initialized = true;
            return Object.assign({}, state, action.content, { maxStep: __WEBPACK_IMPORTED_MODULE_0_lodash_max___default()([action.content.step, state.maxStep]) });
        case contentType.GO_TO_NEXT_STEP:
            var newStep = state.step + 1;
            return Object.assign({}, state, {
                step: newStep,
                stepChange: true,
                maxStep: __WEBPACK_IMPORTED_MODULE_0_lodash_max___default()([newStep, state.maxStep])
            });
        case contentType.GO_TO_STEP:
            return Object.assign({}, state, {
                step: action.step,
                stepChange: true,
                maxStep: __WEBPACK_IMPORTED_MODULE_0_lodash_max___default()([action.step, state.maxStep])
            });
        case contentType.STEP_CHANGE_RESET:
            return Object.assign({}, state, {
                stepChange: false
            });
        case contentType.GO_TO_PREVIOUS_STEP:
            return Object.assign({}, state, {
                step: state.step - 1,
                stepChange: true
            });
        case contentType.REMOVE_NEW:
            newState = {};
            newState[action.selectorType] = [].concat(_toConsumableArray(state[action.selectorType]));
            newState[action.selectorType].splice(action.index, 1);

            return Object.assign({}, state, newState);
        case contentType.ADD_NEW:
            newState = {};
            newState[action.selectorType] = [].concat(_toConsumableArray(state[action.selectorType]));
            newState[action.selectorType][action.index] = {
                custom: true,
                name: ""
            };

            if (action.clean) {
                action.clean.forEach(function (selectorType) {
                    newState[selectorType] = $.isArray(state[selectorType]) ? [] : null;
                });
            }

            return Object.assign({}, state, newState);
        case contentType.UPDATE_CONTENT_VALUE:
            newState = {};
            newState[action.key] = action.value;
            newState.listingEdited = true;

            return Object.assign({}, state, newState);
        case contentType.SELECT_TOURNAMENT:
            newState = {};
            newState.tournament = [action.tournament];
            newState.sports = action.tournament.sport ? [action.tournament.sport] : [];
            newState.sportCategory = [action.tournament.sportCategory];

            return Object.assign({}, state, newState);
        case contentType.APPLY_SELECTION:

            newState = {};

            var selectedItems = Array.from(action.selectedItems.values());

            newState[action.selectorType] = [].concat(_toConsumableArray(state[action.selectorType]));

            if (action.multiple) {
                newState[action.selectorType] = selectedItems;
            } else {
                newState[action.selectorType][action.index] = selectedItems[0];
            }

            if (action.clean) {
                action.clean.forEach(function (selectorType) {
                    newState[selectorType] = $.isArray(state[selectorType]) ? [] : null;
                });
            }

            return Object.assign({}, state, newState);
        case contentType.REMOVE_FROM_MULTIPLE:
            newState = {};
            newState[action.selectorType] = [].concat(_toConsumableArray(state[action.selectorType]));
            newState[action.selectorType].splice(action.index, 1);
            return Object.assign({}, state, newState);
        case contentType.UPDATE_FROM_MULTIPLE:
            newState = {};
            newState[action.selectorType] = [].concat(_toConsumableArray(state[action.selectorType]));
            newState[action.selectorType][action.index][action.key] = action.value;
            return Object.assign({}, state, newState);
        case contentType.SUPER_RIGHTS_UPDATED:

            if (action.reset) return Object.assign({}, state, { rightsPackage: [] });
            return Object.assign({}, state, {
                rightsPackage: Array.from(action.rightsPackage.values())
            });
        case contentType.UPDATE_SALES_PACKAGES:

            var salesPackages = [].concat(_toConsumableArray(state.salesPackages));

            if (action.name === "remove") {

                if (salesPackages.length >= 1) {
                    salesPackages.splice(action.index, 1);
                }
            }

            if (action.name === "removeAll") {
                salesPackages = [];
            }

            if (action.name === "save") salesPackages[action.index] = action.salesPackage;

            return Object.assign({}, state, {
                salesPackages: salesPackages
            });

        case contentType.UPDATE_ATTACHMENTS:

            var attachments = [].concat(_toConsumableArray(state.attachments));

            if (action.name === "remove") {

                if (attachments.length >= 1) {
                    attachments.splice(action.index, 1);
                }
            }

            if (action.name === "removeAll") {
                attachments = [];
            }

            if (action.name === "save") attachments[action.index] = action.value;

            return Object.assign({}, state, {
                attachments: attachments
            });

        case contentType.UPDATE_ANNEX:

            var annex = [].concat(_toConsumableArray(state.annex));

            if (action.name === "remove") {

                if (annex.length >= 1) {
                    annex.splice(action.index, 1);
                }
            }

            if (action.name === "removeAll") {
                annex = [];
            }

            if (action.name === "save") annex[action.index] = action.value;

            return Object.assign({}, state, {
                annex: annex
            });

        case contentType.ADD_SALES_PACKAGES:
            return Object.assign({}, state, {
                salesPackages: [].concat(_toConsumableArray(state.salesPackages), _toConsumableArray(action.salesPackages))
            });

        default:
            return state;
    }
};
/* WEBPACK VAR INJECTION */}.call(__webpack_exports__, __webpack_require__(/*! jquery */ "./node_modules/jquery/dist/jquery.js")))

/***/ }),

/***/ "./src/AppBundle/Resources/public/javascript/sell/reducers/selector.js":
/*!*****************************************************************************!*\
  !*** ./src/AppBundle/Resources/public/javascript/sell/reducers/selector.js ***!
  \*****************************************************************************/
/*! exports provided: selectorType, selector */
/*! exports used: selector */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* unused harmony export selectorType */
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return selector; });

var selectorType = {
    TEST: 'TEST',
    OPEN_SELECTOR: 'OPEN_SELECTOR',
    CLOSE_SELECTOR: 'CLOSE_SELECTOR',
    APPLY_SELECTION: 'APPLY_SELECTION'
};

var selector = function selector() {
    var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {
        type: "sport",
        open: false,
        selectorItems: [],
        popularItems: []

    };
    var action = arguments[1];


    switch (action.type) {
        case selectorType.TEST:
            return Object.assign({}, state, {
                open: true
            });
        case selectorType.OPEN_SELECTOR:
            return Object.assign({}, state, {
                selectorType: action.selectorType,
                open: true,
                index: action.index,
                selectorItems: action.selectorItems,
                popularItems: action.popularItems,
                activeFilter: action.activeFilter,
                multiple: action.multiple,
                disabled: action.disabled,
                showNewSport: action.showNewSport,
                showNewTournament: action.showNewTournament,
                showNewCategory: action.showNewCategory,
                showNewSeason: action.showNewSeason,
                showAllCountries: action.showAllCountries,
                clean: action.clean,
                selectedItems: action.selectedItems
            });
        case selectorType.CLOSE_SELECTOR:
            return Object.assign({}, state, {
                selectorType: "",
                open: false,
                selectorItems: [],
                popularItems: []
            });
        case selectorType.APPLY_SELECTION:
            return Object.assign({}, state, {
                selectorType: "",
                open: false,
                selectorItems: [],
                popularItems: []
            });
        default:
            return state;
    }
};

/***/ }),

/***/ "./src/AppBundle/Resources/public/javascript/translations/translations.js":
/*!********************************************************************************!*\
  !*** ./src/AppBundle/Resources/public/javascript/translations/translations.js ***!
  \********************************************************************************/
/*! exports provided: translations */
/*! exports used: translations */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return translations; });
var translations = {
  'de': {
    'Marketplace': 'Marktplatz'
  },
  'options': {
    'plural_rule': 'n != 1',
    'plural_number': '2'
  },
  'en': {
    'LISTING_DETAILS_GENERAL_CONTENT': 'General Content',
    'LISTING_DETAILS_MULTIPLE_SPORTS': 'Multiple Sports',
    'International': 'International',
    'Release year:': 'Release Year (optional)',
    'episodes': 'episodes',
    'LISTING_DETAILS_EDITED_PROGRAM': 'Edited Program',
    'Search': 'Search',
    'MARKETPLACE_LABEL_FILTER_SPORT': 'Sports',
    'MARKETPLACE_LABEL_FILTER_TERRITORIES': 'Territories',
    'MARKETPLACE_LABEL_FILTER_RIGHTS': 'Rights',
    'MARKETPLACE_LABEL_FILTER_EXCLUSIVE': 'Contains exclusive rights',
    'MARKETPLACE_BUTTON_APPLY': 'Apply',
    'MARKETPLACE_BUTTON_CLEAR': 'Clear',
    'LISTING_DETAILS_EVENT_TITLE_PROGRAM_DESCRIPTION': 'PROGRAMS DESCRIPTION',
    'LISTING_DETAILS_EVENT_TITLE_SEASON': 'Season :',
    'LISTING_DETAILS_EVENT_TITLE_DESCRIPTION': 'EVENT DESCRIPTION',
    'LISTING_DETAILS_EVENT_TITLE_WEBSITE': 'CONTENT WEBSITE',
    'LISTING_DETAILS_EVENT_TITLE_ATTACHMENTS': 'ATTACHMENTS',
    'CHECKOUT_CONGRATULATIONS': 'Congratulations!',
    'CHECKOUT_FIXED_SUCCESS_MESSAGE': 'You have successfully acquired the package!',
    'CHECKOUT_BID_SUCCESS_MESSAGE': 'Your bid was placed successfully!',
    'CHECKOUT_FIXED_GO_TO_CLOSED_DEALS': 'View Closed Deals',
    'CHECKOUT_FIXED_GO_TO_BIDS': 'View Bids',
    'CHECKOUT_FIXED_GO_TO_MARKETPLACE': 'Return to Marketplace',
    'LISTING_DETAILS_LICENSE_START': 'Start of License Period',
    'LISTING_DETAILS_LICENSE_START_CONCLUSION': ' With contract conclusion',
    'LISTING_DETAILS_LICENSE_END': 'End of license period',
    'LISTING_DETAILS_LICENSE_END_DAYS': ' days after contract conclusion',
    ' Unlimited': ' Unlimited',
    'Publishing date': 'Publishing Date',
    'Expiry': 'Expiry',
    'Contact Seller': 'Contact Seller',
    'LISTING_DETAILS_ADDED_TO_WATCHLIST': 'Added to watchlist',
    'Watchlist': 'Watchlist',
    'LISTING_DETAILS_TAB_BUNDLES': 'Program & Sales Bundles',
    'LISTING_DETAILS_TAB_EVENT': 'Event',
    'LISTING_DETAILS_TAB_RIGHTS': 'Grant of Rights & Production',
    'LISTING_DETAILS_TAB_SELLER': 'Seller Information',
    'Sales bundle': 'Sales bundle',
    'Commercial information': 'Commercial Information',
    'License fee:': 'License Fee:',
    'Bid:': 'Bid:',
    'LISTING_DETAILS_EXCEED_MINIMUM': 'The bid must exceed minimum bid',
    'Raise': 'Raise',
    'Technical fee:': 'Technical Fee:',
    'Total:': 'Total:',
    'Payment details': 'Payment Details',
    'installment': 'installment',
    'INSTALLMENT_CLOSURE_DAYS': ' days after contract closure',
    'CHECKOUT_LABEL_COMPANY_ADDRESS': 'Company address',
    'License agreement': 'License Agreement',
    'CHECKOUT_TERMS': 'Accept terms conditions',
    'CHECKOUT_BUTTON_BUY': 'Buy',
    'CHECKOUT_BUTTON_PLACE_BID': 'Place Bid',
    'MARKETPLACE_NO_RESULTS': 'Sorry, no results. Try changing the filter settings!',
    'LISTING_DETAILS_PROGRAM_TITLE_TYPE': 'Program type',
    'LISTING_DETAILS_PROGRAM_TITLE_EPISODES': 'Number of episodes',
    'LISTING_DETAILS_PROGRAM_TITLE_DURATION': 'Average episode duration (min)',
    'LISTING_DETAILS_PROGRAM_TITLE_RELEASE': 'Year of program release',
    'LISTING_DETAILS_PROGRAM_TITLE_DESCRIPTION': 'Description',
    'Buy now': 'Buy now',
    'Place bid': 'Place bid',
    'LISTING_DETAILS_SELLER_TITLE_DETAILS': 'DETAILS',
    'LISTING_DETAILS_SELLER_TITLE_NAME': 'Legal name',
    'LISTING_DETAILS_SELLER_TITLE_ADDRESS': 'Street Name / Number',
    'LISTING_DETAILS_SELLER_TITLE_CITY': 'City',
    'LISTING_DETAILS_SELLER_TITLE_COUNTRY': 'Country',
    'LISTING_DETAILS_SELLER_TITLE_ZIP': 'ZIP',
    'LISTING_DETAILS_SELLER_TITLE_REGISTRATION_NUMBER': 'Company registration number',
    'LISTING_DETAILS_SELLER_TITLE_VAT': 'VAT ID number',
    'LISTING_DETAILS_SELLER_TITLE_DESCRIPTION': 'DESCRIPTION',
    'LISTING_DETAILS_RIGHTS_HEADER_RIGHTS': 'Grant of Rights',
    ' Rights': ' Rights',
    'LISTING_DETAILS_RIGHTS_HEADER_GRANTED_TIME': 'Granted Transmission Time',
    'LISTING_DETAILS_RIGHTS_TITLE_AMENDMENTS': 'Amendment(s) to the Grant of Rights / Special Conditions',
    'LISTING_DETAILS_RIGHTS_TITLE_PRODUCTION_DETAILS': 'Production details',
    'LISTING_DETAILS_RIGHTS_TECHNICAL_FEE_DETAILS': 'Technical Fee Details',
    'LISTING_DETAILS_RIGHTS_TITLE_AMENDMENTS_2': 'Amendment(s) to the Content Delivery / Special Conditions',
    'COMMERCIAL_ACTIVITY_BID_TITLE_ACCEPT': 'Are you sure you want to accept this bid?',
    'COMMERCIAL_ACTIVITY_BID_BUTTON_CANCEL': 'Cancel',
    'COMMERCIAL_ACTIVITY_BID_BUTTON_ACCEPT': 'Accept Bid',
    'COMMERCIAL_ACTIVITY_BID_TITLE_REJECT': 'Are you sure you want to decline this bid?',
    'COMMERCIAL_ACTIVITY_BID_REJECT_MESSAGE': 'Enter Message (optional)',
    'COMMERCIAL_ACTIVITY_BID_BUTTON_REJECT_CONFIRM': 'Confirm',
    'COMMERCIAL_ACTIVITY_BID_BUTTON_REJECT_CANCEL': 'Cancel',
    'COMMERCIAL_ACTIVITY_BID_TITLE_REMOVE': 'Are you sure you want to remove this bid?',
    'COMMERCIAL_ACTIVITY_BID_BUTTON_REMOVE_CONFIRM': 'Confirm',
    'COMMERCIAL_ACTIVITY_BID_BUTTON_REMOVE_CANCEL': 'Cancel',
    'closed deal': '{n} Closed Deal',
    'closed deals': '{n} Closed Deals',
    'open bid': '{n} Open Bid',
    'open bids': '{n} Open Bids',
    'Buyer': 'Buyer Company',
    'Fee': 'License Fee / Bid',
    'User': 'Buyer User',
    'Action': 'Action',
    'COMMERCIAL_ACTIVITY_ACTION_DATE': 'Date of Action',
    'Actions': 'Actions',
    'WATCHLIST_REMOVE_CONFIRMATION': 'Are you sure that you want to remove this listing from your Watchlist?',
    'Yes': 'Yes',
    'Cancel': 'Cancel',
    'Placed by': 'Placed by:',
    'PENDING_BIDS_TOOLTIP_LISTING_EDITED': 'Listing edited after last bid. Please review term sheet.',
    'Increase bid': 'Increase bid',
    'Placed by:': 'Placed by:',
    'PENDING_BIDS_REMOVE_TITLE': 'Are you sure you want to remove this bid?',
    'PENDING_BIDS_REMOVE_BUTTON_CONFIRM': 'Remove',
    'PENDING_BIDS_REMOVE_BUTTON_CANCEL': 'Cancel',
    'Commercial Activity Total - {n}': 'Total: {n}',
    'DIGITAL_SIGNATURE_TITLE': 'Digital Signatur',
    'DIGITAL_SIGNATURE_BUTTON_CLEAR': 'Clear',
    'DIGITAL_SIGNATURE_BUTTON_DONE': 'Done',
    'DIGITAL_SIGNATURE_BUTTON_NEW': 'New Signatur',
    'Upload': 'Upload',
    'HEADER_LINK_MARKETPLACE': 'Marketplace',
    'HEADER_LINK_WATCHLIST': 'Watchlist',
    'HEADER_LINK_BIDS': 'Bids',
    'HEADER_LINK_CLOSED_DEALS': 'Closed Deals',
    'HEADER_LINK_MANAGE_LISTINGS': 'Manage Listings',
    'HEADER_LINK_COMMERCIAL_ACTIVITY': 'Commercial Activity',
    'HEADER_LINK_CREATE_LISTING': 'Create Listing',
    'HEADER_LINK_SELLING_MODE': 'Enter Selling Mode',
    'HEADER_LINK_BUYING_MODE': 'Enter Buying Mode',
    'HEADER_LINK_MESSAGES': 'Messages',
    'HEADER_LINK_SETTINGS': 'Settings',
    'HEADER_LINK_LOGOUT': 'Logout',
    'NOTIFICATIONS_EMPTY': 'No notifications',
    'Year': 'Year',
    'To': 'To',
    'Not applicable': 'Not applicable',
    'Country Selector': 'Country Selector',
    'MARKETPLACE_FILTER_ONE_TERRITORY': 'Show listings for at least one selected territory',
    'MARKETPLACE_FILTER_ALL_TERRITORIES': 'Show listings for all selected territories',
    'MARKETPLACE_RIGHTS_LABEL_EXCLUSIVE': 'Exclusive',
    'MARKETPLACE_RIGHTS_LABEL_NON_EXCLUSIVE': 'Non exclusive',
    'MARKETPLACE_RIGHTS_LABEL_NON_INCLUDED': 'Non included',
    'CL_STEP1_SEARCH_TITLE': 'Please enter the competition name for which you would like to sell content. Select “Enter Content Manually” if you cannot find the competition in the database or if your content is not related to a specific competition.',
    'Competition': 'Competition',
    'CL_STEP1_SEARCH_PLACEHOLDER': 'Enter competition name (e.g. Bundesliga)',
    'CL_STEP1_SEARCH_HEADER_COMPETITION': 'Competition',
    'CL_STEP1_SEARCH_HEADER_COUNTRY': 'Country/Category',
    'CL_STEP1_SEARCH_HEADER_SPORT': 'Sport',
    'CL_STEP1_SEARCH_BUTTON_SELECT': 'Select',
    'CL_STEP1_SEARCH_NO_RESULTS': 'Your search "{n}" did not match any products.',
    'CL_STEP1_SEARCH_CANT_FIND_2': 'Did you not find your competition in the database or are you not selling a competition?',
    'CL_STEP1_SEARCH_CANT_FIND': 'Can\'t find your competition in our list?',
    'CL_STEP1_SEARCH_TRY': 'Try another search or enter content manually',
    'CL_STEP1_ENTER_MANUALLY': 'Enter content manually',
    'Fixture': 'Fixture',
    'Enter fixture': 'Enter fixture',
    'Season': 'Season',
    'CL_STEP1_ADD_SEASON': 'Add season',
    'CL_STEP1_ADD_FIXTURES': 'Add fixtures',
    'Popular': 'Popular',
    'Apply': 'Apply',
    'CL_STEP1_SELECTOR_SPORT_1': 'Can\'t find your sport in the list?',
    'CL_STEP1_SELECTOR_ADD_SPORT': 'Add new sport',
    'CL_STEP1_SELECTOR_TOURNAMENT_1': 'Can\'t find your competition in the list?',
    'CL_STEP1_SELECTOR_ADD_TOURNAMENT': 'Add new competition',
    'CL_STEP1_SELECTOR_SEASON_1': 'Can’t find the relevant season(s)?',
    'CL_STEP1_SELECTOR_ADD_SEASON': 'Add new season',
    'CL_STEP1_SELECTOR_COUNTRY_1': 'Can\'t find your country in the list?',
    'CL_STEP1_SELECTOR_COUNTRIES_ALL': 'Show all countries',
    'CL_STEP1_SELECTOR_CATEGORY_1': 'Can\'t find your category in the list?',
    'CL_STEP1_SELECTOR_ADD_CATEGORY': 'Add new Category',
    'Contact': 'Contact',
    'MESSAGE_POPUP_SENT': 'Message sent!',
    'MESSAGE_POPUP_BUTTON_SEND': 'Send',
    'MESSAGE_POPUP_BUTTON_CANCEL': 'Cancel',
    'MESSAGE_POPUP_BUTTON_CLOSE': 'Close',
    'Submit': 'Submit',
    'Edit': 'Edit',
    'Duplicate': 'Duplicate',
    'View': 'View',
    'MANAGE_LISTINGS_REMOVE_BUTTON_CONFIRM': 'Remove',
    'MANAGE_LISTINGS_ARCHIVE_BUTTON_CONFIRM': 'Archive',
    'MANAGE_LISTINGS_DEACTIVATE_BUTTON_CONFIRM': 'Deactivate',
    'MANAGE_LISTINGS_LAST_ACTION': 'Last action: ',
    'MANAGE_LISTINGS_LISTING_OWNER': 'Listing owner: ',
    'MANAGE_LISTINGS_DEACTIVATE_CONFIRMATION': 'Are you sure you want to deactivate the listing?',
    'MANAGE_LISTINGS_DEACTIVATE_BUTTON_CANCEL': 'Cancel',
    'MANAGE_LISTINGS_REMOVE_CONFIRMATION': 'Are you sure that you want to remove the listing?',
    'MANAGE_LISTINGS_REMOVE_BUTTON_CANCEL': 'Cancel',
    'MANAGE_LISTINGS_ARCHIVE_CONFIRMATION': 'Are you sure you want to archive this listing?',
    'MANAGE_LISTINGS_ARCHIVE_BUTTON_CANCEL': 'Cancel',
    'MANAGE_LISTINGS_MULTIPLE_SEASONS': 'Season: Multiple seasons',
    'MANAGE_LISTINGS_SEASON': 'Season:  ',
    'Program: ': 'Program: ',
    'Expiry:': 'Expiry:',
    'Listing name': 'Listing Name',
    'Seller': 'Seller Company',
    'Territories': 'Included Territories',
    'Worldwide': 'Worldwide',
    'Price': 'Price',
    'Date of sale': 'Date of Sale',
    'Buyer name': 'Buyer name',
    'CLOSED_DEALS_EMPTY_MESSAGE': 'You don\'t have closed deal yet',
    'COMMERCIAL_ACTIVITY_FILTER_ALL': 'All bundles',
    'COMMERCIAL_ACTIVITY_FILTER_WITH_ACTIVITY': 'With activity',
    'COMMERCIAL_ACTIVITY_FILTER_OPEN_BIDS': 'Open bids',
    'COMMERCIAL_ACTIVITY_FILTER_CLOSED_DEALS': 'Closed deals',
    'COMMERCIAL_ACTIVITY_EMPTY_MESSAGE': 'You have no offers yet',
    'MANAGE_LISTINGS_TITLE_DRAFT': 'Draft',
    'MANAGE_LISTINGS_TITLE_INACTIVE': 'Inactive listings',
    'MANAGE_LISTINGS_TITLE_ACTIVE': 'Active listings',
    'MANAGE_LISTINGS_TITLE_EXPIRED': 'Expired & Sold Listings',
    'MESSAGES_NO_THREADS_YET': 'No threads yet',
    'MESSAGES_TITLE': 'Write a message',
    'MESSAGES_PLACEHOLDER_WRITE': 'Write a message',
    'MESSAGES_SEND_BUTTON': 'Send',
    'MESSAGES_NO_THREAD_SELECTED': 'No thread selected',
    'PENDING_BIDS_FILTER_ACTIVE': 'Active',
    'PENDING_BIDS_FILTER_DECLINED': 'Declined',
    'PENDING_BIDS_MADE_EMPTY_MESSAGE': 'You haven\'t made any bids yet!',
    'PENDING_BIDS_MADE_DECLINED_EMPTY_MESSAGE': 'You haven\'t any declined bids yet!',
    'SETTINGS_TITLE_COMPANY': 'Company information',
    'SETTINGS_BUTTON_EDIT': 'Edit',
    'SETTINGS_BUTTON_SAVE': 'Save',
    'SETTINGS_LABEL_COMPANY_NAME': 'Legal Company Name',
    'SETTINGS_LABEL_COMPANY_REGISTRATION_NUMBER': 'Company Registration Number',
    'SETTINGS_LABEL_COMPANY_VAT': 'VAT ID numbe',
    'SETTINGS_LABEL_COMPANY_ADDRESS': 'Address',
    'SETTINGS_LABEL_COMPANY_CITY': 'City',
    'SETTINGS_LABEL_COMPANY_ZIP': 'ZIP code',
    'SETTINGS_LABEL_COMPANY_COUNTRY': 'Country',
    'SETTINGS_LABEL_COMPANY_DESCRIPTION': 'Company description',
    'SETTINGS_LABEL_USER_FAMILY_NAME': 'Family name',
    'SETTINGS_LABEL_USER_FIRST_NAME': 'First name',
    'SETTINGS_LABEL_USER_EMAIL': 'Email address',
    'SETTINGS_LABEL_USER_PHONE_NUMBER': 'Phone number',
    'SETTINGS_LABEL_USER_COMPANY_POSITION': 'Position',
    'SETTINGS_LABEL_USER_TITLE_INFO': 'Personal information',
    'Save': 'Save Changes',
    'SETTINGS_LABEL_USER_TITLE': 'Title',
    'SETTINGS_LABEL_CHANGE_PASSWORD': 'Change Password',
    'SETTINGS_LABEL_CHANGE_PASSWORD_2': 'Choose a unique password to protect your account',
    'SETTINGS_LABEL_TYPE_CURRENT_PASSWORD': 'Type your current password',
    'SETTINGS_LABEL_TYPE_NEW_PASSWORD': 'Type your new password',
    'SETTINGS_LABEL_RETYPE_NEW_PASSWORD': 'Retype your new password',
    'SETTINGS_BUTTON_SAVE_PASSWORD': 'Save password',
    'SETTINGS_LABEL_PASSWORD_UPDATED': 'Password updated successfully',
    'SETTINGS_LABEL_PASSWORD_VALIDATE_1': 'At least 8 characters long',
    'SETTINGS_LABEL_PASSWORD_VALIDATE_2': 'One uppercase character',
    'SETTINGS_LABEL_PASSWORD_VALIDATE_3': 'One number',
    'SETTINGS_LABEL_PASSWORD_VALIDATE_4': 'One special character',
    'SETTINGS_LABEL_PASSWORD_VALIDATE_5': 'Passwords don\'t match',
    'WATCHLIST_EMPTY_MESSAGE': 'Your watchlist is empty!',
    'CL_STEP4_LABEL_APPLICABLE_LAW': 'Applicable Law',
    'CL_STEP4_PLACEHOLDER_APPLICABLE_LAW': 'Select language',
    'Applicable Law': 'Applicable Law',
    'CL_STEP3_AMENDMENT': 'Create an amendment. This will be included in the license agreement.',
    'Accept': 'Accept',
    'Company Information': 'Company Information',
    'Legal name': 'Legal Company Name',
    'Registration number': 'Company Registration Number',
    'VAT ID number': 'VAT ID Number',
    'Street Name / Number': 'Street Name / Number',
    'City': 'City',
    'ZIP code': 'ZIP code',
    'Country': 'Country',
    'Ok': 'Ok',
    'Company address': 'Company Address',
    'Currency': 'Currency',
    'CL_STEP4_TITLE_EXPIRY': 'Listing expiry',
    'CL_STEP4_LABEL_JURISDICTION': 'Place of jurisdiction',
    'Edit license period': 'Edit license period',
    'CL_STEP3_LICENSE_POPUP_START': 'Start of License Period',
    'CL_STEP3_LICENSE_POPUP_START_CONCLUSION': ' With contract conclusion',
    'CL_STEP3_LICENSE_POPUP_END': 'End of license period',
    'Unlimited': 'Unlimited',
    'CL_STEP4_EDIT_BUNDLE_TITLE_TERRITORIES': 'Territories',
    'Sales method': 'Sales Method',
    'Fixed fee': 'Fixed Fee',
    'Bidding': 'Bidding',
    'CL_STEP4_EDIT_BUNDLE_TITLE_PAYMENT': 'Payment details',
    'CL_STEP4_EDIT_BUNDLE_INSTALLMENT_DAYS': 'days after contract conclusion',
    'CL_STEP4_EDIT_BUNDLE_INSTALLMENT_WARNING': 'the total installment percentage must accumulate to 100%',
    'CL_STEP4_EDIT_BUNDLE_TITLE_TERRITORIES_MODE': 'How would you like to sell your content?',
    'CL_STEP4_EDIT_BUNDLE_TITLE_SINGLE_TERRITORY': 'Add single territory',
    'CL_STEP4_EDIT_BUNDLE_TITLE_MULTIPLE_TERRITORIES': 'Add multiple territories',
    'CL_STEP4_EDIT_BUNDLE_TITLE_SELECTED_TERRITORIES': 'Selected territories only',
    'CL_STEP4_EDIT_BUNDLE_TITLE_WORLDWIDE': 'Worldwide',
    'CL_STEP4_EDIT_BUNDLE_TITLE_WORLDWIDE_EXCLUDING': 'Worldwide excluding',
    'CL_STEP4_EDIT_BUNDLE_AS_PACKAGE': 'Offer selected territories together as one territory package',
    'CL_STEP4_EDIT_BUNDLE_TYPE_FIXED': 'Fixed fee',
    'CL_STEP4_EDIT_BUNDLE_TYPE_BIDDING': 'Bidding',
    'CL_STEP4_SALES_BUNDLES': 'Sales Bundles',
    'CL_STEP4_REMOVE_ALL_BUNDLES': 'Remove al',
    'CL_STEP4_ADD_SALES_BUNDLE': 'Add sales bundle',
    'CL_STEP2_RIGHTS_TITLE': 'RIGHTS SELECTION',
    'CL_STEP2_RIGHTS_TEXT': 'Which rights fdo you want to grant to the buyer?',
    'Exclusive': 'Offer exclusively',
    'CL_STEP5_MODAL_SUCCESS_MESSAGE_1': 'Congratulations!',
    'CL_STEP5_MODAL_SUCCESS_MESSAGE_2': 'The listing was submitted successfully!',
    'CL_STEP5_MODAL_BUTTON': 'Continue',
    'CL_STEP5_TITLE_REVIEW': 'Review & Sign',
    'CL_STEP5_TITLE_PREVIEW': 'Marketplace Preview',
    'CL_STEP5_TERMS_1': 'I confirm that I have verified the terms stated above. They are correct and ready to be published.',
    'CL_STEP5_TERMS_2': 'I confirm that I have verified the terms and conditions that have been outlined by Content Arena Pte. Ltd.',
    'CL_STEP5_BUTTON_SUBMIT': 'Submit listing',
    'CL_STEP5_BUTTON_SAVE': 'Save',
    'Back': 'Back',
    'Next': 'Next',
    'CL_STEP1_PLACEHOLDER_WEBSITE': 'e.g. bundesliga.de',
    'CL_STEP1_BUTTON_START_OVER': 'Start over',
    'CL_STEP1_DESCRIPTION_1': 'Please fill in the fields below. “Country/Category” and “Competition” are optional.',
    'CL_STEP1_DESCRIPTION_MULTIPLE_SPORTS': 'Your content covers multiple sports?',
    'CL_STEP1_BUTTON_MULTIPLE_SPORTS': 'Please click here',
    'CL_STEP1_LABEL_COUNTRY': 'Country/Category',
    'CL_STEP1_PLACEHOLDER_COUNTRY': 'e.g. Germany',
    'CL_STEP1_LABEL_COMPETITION': 'Competition',
    'CL_STEP1_PLACEHOLDER_COMPETITION': 'e.g. Bundesliga',
    'CL_STEP1_LABEL_ADDITIONAL_INFO': 'Additional Information (optional(',
    'CL_STEP1_LABEL_WEBSITE': 'Website',
    'CL_STEP2_PROGRAM_DESCRIPTION_TITLE': 'PROGRAM DEFINITION',
    'CL_STEP2_PROGRAM_DESCRIPTION_TEXT': 'Please describe which program you would like to license specifically.',
    'CL_STEP2_PROGRAM_DESCRIPTION_PLACEHOLDER': 'The program definition represents the basis of the license agreement. All rights selected will be granted for the programs as defined here.',
    'CL_STEP2_PROGRAM_NAME': 'Enter program name',
    'CL_STEP2_PROGRAM_EPISODES': 'Number of episodes',
    'CL_STEP2_PROGRAM_DURATION': 'Average episode duration in minutes',
    'CL_STEP2_PROGRAM_TYPE': 'Enter program type',
    'CL_STEP2_PROGRAM_YEAR': 'Release year (optional)',
    'CL_STEP2_PROGRAM_DESCRIPTION_OPTIONAL': 'Edited Program Description (optional)',
    'CL_STEP2_PROGRAM_DESCRIPTION_OPTIONAL_PLACEHOLDER': 'Provide a description of your content listing.',
    'CL_STEP3_PROGRAM_MODAL_TITLE': 'Program details',
    'CL_STEP3_PROGRAM_MODAL_LANGUAGE': 'Program language',
    'CL_STEP3_PROGRAM_MODAL_SUBTITLES': 'Subtitles (if available)',
    'CL_STEP3_PROGRAM_MODAL_SCRIPT': 'Script (if available)',
    'CL_STEP3_PROGRAM_MODAL_BUTTON_OK': 'Ok',
    'CL_STEP3_TITLE_LICENSE_PERIOD_START': 'Start',
    'CL_STEP3_TITLE_LICENSE_PERIOD_END': 'End',
    'CL_STEP3_SELECT_LICENSE_PERIOD': 'Please select',
    'CL_STEP3_TITLE_GRANT_RIGHT': 'Grant of Rights',
    'CL_STEP3_TITLE_PRODUCTION_STANDARDS': 'Configure Production Standards',
    'CL_STEP4_TITLE_INFO': 'Further information',
    'CL_STEP4_LABEL_ANNEX': 'Annex',
    'CL_STEP4_INFO_ANNEX': 'All files uploaded here will be merged with the license agreement. You may upload only PDF files.',
    'CL_STEP4_LISTING_DETAILS_TEXT': 'Please define listing details below. This determines how your listing is shown to potential buyers.',
    'CL_STEP4_LABEL_IMAGE': 'Listing image (opt.)'
  }
};

/***/ }),

/***/ 0:
/*!**********************************************************************!*\
  !*** multi ./src/AppBundle/Resources/public/javascript/main/main.js ***!
  \**********************************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__(/*! ./src/AppBundle/Resources/public/javascript/main/main.js */"./src/AppBundle/Resources/public/javascript/main/main.js");


/***/ })

},[0]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvYXhpb3MvaW5kZXguanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2F4aW9zL2xpYi9hZGFwdGVycy94aHIuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2F4aW9zL2xpYi9heGlvcy5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvYXhpb3MvbGliL2NhbmNlbC9DYW5jZWwuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2F4aW9zL2xpYi9jYW5jZWwvQ2FuY2VsVG9rZW4uanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2F4aW9zL2xpYi9jYW5jZWwvaXNDYW5jZWwuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2F4aW9zL2xpYi9jb3JlL0F4aW9zLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9heGlvcy9saWIvY29yZS9JbnRlcmNlcHRvck1hbmFnZXIuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2F4aW9zL2xpYi9jb3JlL2NyZWF0ZUVycm9yLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9heGlvcy9saWIvY29yZS9kaXNwYXRjaFJlcXVlc3QuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2F4aW9zL2xpYi9jb3JlL2VuaGFuY2VFcnJvci5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvYXhpb3MvbGliL2NvcmUvc2V0dGxlLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9heGlvcy9saWIvY29yZS90cmFuc2Zvcm1EYXRhLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9heGlvcy9saWIvZGVmYXVsdHMuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2F4aW9zL2xpYi9oZWxwZXJzL2JpbmQuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2F4aW9zL2xpYi9oZWxwZXJzL2J0b2EuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2F4aW9zL2xpYi9oZWxwZXJzL2J1aWxkVVJMLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9heGlvcy9saWIvaGVscGVycy9jb21iaW5lVVJMcy5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvYXhpb3MvbGliL2hlbHBlcnMvY29va2llcy5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvYXhpb3MvbGliL2hlbHBlcnMvaXNBYnNvbHV0ZVVSTC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvYXhpb3MvbGliL2hlbHBlcnMvaXNVUkxTYW1lT3JpZ2luLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9heGlvcy9saWIvaGVscGVycy9ub3JtYWxpemVIZWFkZXJOYW1lLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9heGlvcy9saWIvaGVscGVycy9wYXJzZUhlYWRlcnMuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2F4aW9zL2xpYi9oZWxwZXJzL3NwcmVhZC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvYXhpb3MvbGliL3V0aWxzLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9pcy1idWZmZXIvaW5kZXguanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2xvZGFzaC9fRGF0YVZpZXcuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2xvZGFzaC9fSGFzaC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvbG9kYXNoL19MaXN0Q2FjaGUuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2xvZGFzaC9fTWFwLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9sb2Rhc2gvX01hcENhY2hlLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9sb2Rhc2gvX1Byb21pc2UuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2xvZGFzaC9fU2V0LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9sb2Rhc2gvX1NldENhY2hlLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9sb2Rhc2gvX1N0YWNrLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9sb2Rhc2gvX1N5bWJvbC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvbG9kYXNoL19VaW50OEFycmF5LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9sb2Rhc2gvX1dlYWtNYXAuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2xvZGFzaC9fYXBwbHkuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2xvZGFzaC9fYXJyYXlFYWNoLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9sb2Rhc2gvX2FycmF5RmlsdGVyLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9sb2Rhc2gvX2FycmF5SW5jbHVkZXMuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2xvZGFzaC9fYXJyYXlJbmNsdWRlc1dpdGguanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2xvZGFzaC9fYXJyYXlMaWtlS2V5cy5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvbG9kYXNoL19hcnJheU1hcC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvbG9kYXNoL19hcnJheVB1c2guanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2xvZGFzaC9fYXJyYXlTb21lLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9sb2Rhc2gvX2Fzc2lnblZhbHVlLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9sb2Rhc2gvX2Fzc29jSW5kZXhPZi5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvbG9kYXNoL19iYXNlQXNzaWduLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9sb2Rhc2gvX2Jhc2VBc3NpZ25Jbi5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvbG9kYXNoL19iYXNlQXNzaWduVmFsdWUuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2xvZGFzaC9fYmFzZUNsb25lLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9sb2Rhc2gvX2Jhc2VDcmVhdGUuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2xvZGFzaC9fYmFzZUVhY2guanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2xvZGFzaC9fYmFzZUV4dHJlbXVtLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9sb2Rhc2gvX2Jhc2VGaW5kSW5kZXguanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2xvZGFzaC9fYmFzZUZsYXR0ZW4uanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2xvZGFzaC9fYmFzZUZvci5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvbG9kYXNoL19iYXNlRm9yT3duLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9sb2Rhc2gvX2Jhc2VHZXQuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2xvZGFzaC9fYmFzZUdldEFsbEtleXMuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2xvZGFzaC9fYmFzZUdldFRhZy5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvbG9kYXNoL19iYXNlR3QuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2xvZGFzaC9fYmFzZUhhc0luLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9sb2Rhc2gvX2Jhc2VJbmRleE9mLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9sb2Rhc2gvX2Jhc2VJc0FyZ3VtZW50cy5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvbG9kYXNoL19iYXNlSXNFcXVhbC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvbG9kYXNoL19iYXNlSXNFcXVhbERlZXAuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2xvZGFzaC9fYmFzZUlzTWFwLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9sb2Rhc2gvX2Jhc2VJc01hdGNoLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9sb2Rhc2gvX2Jhc2VJc05hTi5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvbG9kYXNoL19iYXNlSXNOYXRpdmUuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2xvZGFzaC9fYmFzZUlzU2V0LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9sb2Rhc2gvX2Jhc2VJc1R5cGVkQXJyYXkuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2xvZGFzaC9fYmFzZUl0ZXJhdGVlLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9sb2Rhc2gvX2Jhc2VLZXlzLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9sb2Rhc2gvX2Jhc2VLZXlzSW4uanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2xvZGFzaC9fYmFzZU1hcC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvbG9kYXNoL19iYXNlTWF0Y2hlcy5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvbG9kYXNoL19iYXNlTWF0Y2hlc1Byb3BlcnR5LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9sb2Rhc2gvX2Jhc2VPcmRlckJ5LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9sb2Rhc2gvX2Jhc2VQcm9wZXJ0eS5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvbG9kYXNoL19iYXNlUHJvcGVydHlEZWVwLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9sb2Rhc2gvX2Jhc2VSZXN0LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9sb2Rhc2gvX2Jhc2VTZXRUb1N0cmluZy5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvbG9kYXNoL19iYXNlU29ydEJ5LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9sb2Rhc2gvX2Jhc2VUaW1lcy5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvbG9kYXNoL19iYXNlVG9TdHJpbmcuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2xvZGFzaC9fYmFzZVVuYXJ5LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9sb2Rhc2gvX2Jhc2VVbmlxLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9sb2Rhc2gvX2NhY2hlSGFzLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9sb2Rhc2gvX2Nhc3RQYXRoLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9sb2Rhc2gvX2Nsb25lQXJyYXlCdWZmZXIuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2xvZGFzaC9fY2xvbmVCdWZmZXIuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2xvZGFzaC9fY2xvbmVEYXRhVmlldy5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvbG9kYXNoL19jbG9uZVJlZ0V4cC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvbG9kYXNoL19jbG9uZVN5bWJvbC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvbG9kYXNoL19jbG9uZVR5cGVkQXJyYXkuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2xvZGFzaC9fY29tcGFyZUFzY2VuZGluZy5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvbG9kYXNoL19jb21wYXJlTXVsdGlwbGUuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2xvZGFzaC9fY29weUFycmF5LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9sb2Rhc2gvX2NvcHlPYmplY3QuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2xvZGFzaC9fY29weVN5bWJvbHMuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2xvZGFzaC9fY29weVN5bWJvbHNJbi5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvbG9kYXNoL19jb3JlSnNEYXRhLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9sb2Rhc2gvX2NyZWF0ZUJhc2VFYWNoLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9sb2Rhc2gvX2NyZWF0ZUJhc2VGb3IuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2xvZGFzaC9fY3JlYXRlU2V0LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9sb2Rhc2gvX2RlZmluZVByb3BlcnR5LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9sb2Rhc2gvX2VxdWFsQXJyYXlzLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9sb2Rhc2gvX2VxdWFsQnlUYWcuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2xvZGFzaC9fZXF1YWxPYmplY3RzLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9sb2Rhc2gvX2ZyZWVHbG9iYWwuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2xvZGFzaC9fZ2V0QWxsS2V5cy5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvbG9kYXNoL19nZXRBbGxLZXlzSW4uanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2xvZGFzaC9fZ2V0TWFwRGF0YS5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvbG9kYXNoL19nZXRNYXRjaERhdGEuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2xvZGFzaC9fZ2V0TmF0aXZlLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9sb2Rhc2gvX2dldFByb3RvdHlwZS5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvbG9kYXNoL19nZXRSYXdUYWcuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2xvZGFzaC9fZ2V0U3ltYm9scy5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvbG9kYXNoL19nZXRTeW1ib2xzSW4uanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2xvZGFzaC9fZ2V0VGFnLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9sb2Rhc2gvX2dldFZhbHVlLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9sb2Rhc2gvX2hhc1BhdGguanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2xvZGFzaC9faGFzaENsZWFyLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9sb2Rhc2gvX2hhc2hEZWxldGUuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2xvZGFzaC9faGFzaEdldC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvbG9kYXNoL19oYXNoSGFzLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9sb2Rhc2gvX2hhc2hTZXQuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2xvZGFzaC9faW5pdENsb25lQXJyYXkuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2xvZGFzaC9faW5pdENsb25lQnlUYWcuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2xvZGFzaC9faW5pdENsb25lT2JqZWN0LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9sb2Rhc2gvX2lzRmxhdHRlbmFibGUuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2xvZGFzaC9faXNJbmRleC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvbG9kYXNoL19pc0l0ZXJhdGVlQ2FsbC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvbG9kYXNoL19pc0tleS5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvbG9kYXNoL19pc0tleWFibGUuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2xvZGFzaC9faXNNYXNrZWQuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2xvZGFzaC9faXNQcm90b3R5cGUuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2xvZGFzaC9faXNTdHJpY3RDb21wYXJhYmxlLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9sb2Rhc2gvX2xpc3RDYWNoZUNsZWFyLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9sb2Rhc2gvX2xpc3RDYWNoZURlbGV0ZS5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvbG9kYXNoL19saXN0Q2FjaGVHZXQuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2xvZGFzaC9fbGlzdENhY2hlSGFzLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9sb2Rhc2gvX2xpc3RDYWNoZVNldC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvbG9kYXNoL19tYXBDYWNoZUNsZWFyLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9sb2Rhc2gvX21hcENhY2hlRGVsZXRlLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9sb2Rhc2gvX21hcENhY2hlR2V0LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9sb2Rhc2gvX21hcENhY2hlSGFzLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9sb2Rhc2gvX21hcENhY2hlU2V0LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9sb2Rhc2gvX21hcFRvQXJyYXkuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2xvZGFzaC9fbWF0Y2hlc1N0cmljdENvbXBhcmFibGUuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2xvZGFzaC9fbWVtb2l6ZUNhcHBlZC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvbG9kYXNoL19uYXRpdmVDcmVhdGUuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2xvZGFzaC9fbmF0aXZlS2V5cy5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvbG9kYXNoL19uYXRpdmVLZXlzSW4uanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2xvZGFzaC9fbm9kZVV0aWwuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2xvZGFzaC9fb2JqZWN0VG9TdHJpbmcuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2xvZGFzaC9fb3ZlckFyZy5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvbG9kYXNoL19vdmVyUmVzdC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvbG9kYXNoL19yb290LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9sb2Rhc2gvX3NldENhY2hlQWRkLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9sb2Rhc2gvX3NldENhY2hlSGFzLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9sb2Rhc2gvX3NldFRvQXJyYXkuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2xvZGFzaC9fc2V0VG9TdHJpbmcuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2xvZGFzaC9fc2hvcnRPdXQuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2xvZGFzaC9fc3RhY2tDbGVhci5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvbG9kYXNoL19zdGFja0RlbGV0ZS5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvbG9kYXNoL19zdGFja0dldC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvbG9kYXNoL19zdGFja0hhcy5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvbG9kYXNoL19zdGFja1NldC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvbG9kYXNoL19zdHJpY3RJbmRleE9mLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9sb2Rhc2gvX3N0cmluZ1RvUGF0aC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvbG9kYXNoL190b0tleS5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvbG9kYXNoL190b1NvdXJjZS5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvbG9kYXNoL2Nsb25lRGVlcC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvbG9kYXNoL2NvbnN0YW50LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9sb2Rhc2gvZXEuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2xvZGFzaC9nZXQuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2xvZGFzaC9oYXNJbi5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvbG9kYXNoL2lkZW50aXR5LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9sb2Rhc2gvaXNBcmd1bWVudHMuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2xvZGFzaC9pc0FycmF5LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9sb2Rhc2gvaXNBcnJheUxpa2UuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2xvZGFzaC9pc0FycmF5TGlrZU9iamVjdC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvbG9kYXNoL2lzQnVmZmVyLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9sb2Rhc2gvaXNFcXVhbC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvbG9kYXNoL2lzRmluaXRlLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9sb2Rhc2gvaXNGdW5jdGlvbi5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvbG9kYXNoL2lzTGVuZ3RoLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9sb2Rhc2gvaXNNYXAuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2xvZGFzaC9pc09iamVjdC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvbG9kYXNoL2lzT2JqZWN0TGlrZS5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvbG9kYXNoL2lzU2V0LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9sb2Rhc2gvaXNTeW1ib2wuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2xvZGFzaC9pc1R5cGVkQXJyYXkuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2xvZGFzaC9rZXlzLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9sb2Rhc2gva2V5c0luLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9sb2Rhc2gvbGFzdC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvbG9kYXNoL21heC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvbG9kYXNoL21lbW9pemUuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2xvZGFzaC9ub29wLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9sb2Rhc2gvcHJvcGVydHkuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2xvZGFzaC9zb3J0QnkuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2xvZGFzaC9zdHViQXJyYXkuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2xvZGFzaC9zdHViRmFsc2UuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2xvZGFzaC90b051bWJlci5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvbG9kYXNoL3RvU3RyaW5nLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9sb2Rhc2gvdW5pb25CeS5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvbG9kYXNoL3VuaXFCeS5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcmVhY3QtZGF0ZXBpY2tlci9kaXN0L3JlYWN0LWRhdGVwaWNrZXIuY3NzPzY0NWMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3JlYWN0LXRhYmxlL3JlYWN0LXRhYmxlLmNzcz8wN2U5Iiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9yZWFjdC10YWdzaW5wdXQvcmVhY3QtdGFnc2lucHV0LmNzcz82NzZhIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9yZWFjdC10b2dnbGUvc3R5bGUuY3NzPzQzNjAiLCJ3ZWJwYWNrOi8vLy4vc3JjL0FwcEJ1bmRsZS9SZXNvdXJjZXMvcHVibGljL2RhdGEvbGFuZ3VhZ2VzLmpzIiwid2VicGFjazovLy8uL3NyYy9BcHBCdW5kbGUvUmVzb3VyY2VzL3B1YmxpYy9qYXZhc2NyaXB0L2J1eS9hY3Rpb25zL2ZpbHRlckFjdGlvbnMuanMiLCJ3ZWJwYWNrOi8vLy4vc3JjL0FwcEJ1bmRsZS9SZXNvdXJjZXMvcHVibGljL2phdmFzY3JpcHQvYnV5L2FjdGlvbnMvaW5kZXguanMiLCJ3ZWJwYWNrOi8vLy4vc3JjL0FwcEJ1bmRsZS9SZXNvdXJjZXMvcHVibGljL2phdmFzY3JpcHQvYnV5L2NvbXBvbmVudHMvQ29udGVudExpc3RpbmdFdmVudERldGFpbHMuanMiLCJ3ZWJwYWNrOi8vLy4vc3JjL0FwcEJ1bmRsZS9SZXNvdXJjZXMvcHVibGljL2phdmFzY3JpcHQvYnV5L2NvbXBvbmVudHMvQ29udGVudExpc3RpbmdSaWdodHNQYWNrYWdlLmpzIiwid2VicGFjazovLy8uL3NyYy9BcHBCdW5kbGUvUmVzb3VyY2VzL3B1YmxpYy9qYXZhc2NyaXB0L2J1eS9jb21wb25lbnRzL0V2ZW50RmlsdGVyLmpzIiwid2VicGFjazovLy8uL3NyYy9BcHBCdW5kbGUvUmVzb3VyY2VzL3B1YmxpYy9qYXZhc2NyaXB0L2J1eS9jb21wb25lbnRzL1JpZ2h0c0ZpbHRlci5qcyIsIndlYnBhY2s6Ly8vLi9zcmMvQXBwQnVuZGxlL1Jlc291cmNlcy9wdWJsaWMvamF2YXNjcmlwdC9idXkvY29udGFpbmVycy9Db21tZXJjaWFsVGVybXMuanMiLCJ3ZWJwYWNrOi8vLy4vc3JjL0FwcEJ1bmRsZS9SZXNvdXJjZXMvcHVibGljL2phdmFzY3JpcHQvYnV5L2NvbnRhaW5lcnMvQ29udGVudEluZm9ybWF0aW9uLmpzIiwid2VicGFjazovLy8uL3NyYy9BcHBCdW5kbGUvUmVzb3VyY2VzL3B1YmxpYy9qYXZhc2NyaXB0L2J1eS9jb250YWluZXJzL0xpc3RpbmdEZXRhaWxzLmpzIiwid2VicGFjazovLy8uL3NyYy9BcHBCdW5kbGUvUmVzb3VyY2VzL3B1YmxpYy9qYXZhc2NyaXB0L2J1eS9jb250YWluZXJzL01hcmtldHBsYWNlLmpzIiwid2VicGFjazovLy8uL3NyYy9BcHBCdW5kbGUvUmVzb3VyY2VzL3B1YmxpYy9qYXZhc2NyaXB0L2J1eS9jb250YWluZXJzL1Byb2dyYW1EZXRhaWxzLmpzIiwid2VicGFjazovLy8uL3NyYy9BcHBCdW5kbGUvUmVzb3VyY2VzL3B1YmxpYy9qYXZhc2NyaXB0L2J1eS9jb250YWluZXJzL1NhbGVzUGFja2FnZXMuanMiLCJ3ZWJwYWNrOi8vLy4vc3JjL0FwcEJ1bmRsZS9SZXNvdXJjZXMvcHVibGljL2phdmFzY3JpcHQvYnV5L2NvbnRhaW5lcnMvU2VsbGVyLmpzIiwid2VicGFjazovLy8uL3NyYy9BcHBCdW5kbGUvUmVzb3VyY2VzL3B1YmxpYy9qYXZhc2NyaXB0L2J1eS9jb250YWluZXJzL1Rlcm1TaGVldC5qcyIsIndlYnBhY2s6Ly8vLi9zcmMvQXBwQnVuZGxlL1Jlc291cmNlcy9wdWJsaWMvamF2YXNjcmlwdC9idXkvcmVkdWNlcnMvZmlsdGVyLmpzIiwid2VicGFjazovLy8uL3NyYy9BcHBCdW5kbGUvUmVzb3VyY2VzL3B1YmxpYy9qYXZhc2NyaXB0L2J1eS9yZWR1Y2Vycy9tYXJrZXRwbGFjZS5qcyIsIndlYnBhY2s6Ly8vLi9zcmMvQXBwQnVuZGxlL1Jlc291cmNlcy9wdWJsaWMvamF2YXNjcmlwdC9jYS9jYS5hcGkuY29udGVudC5qcyIsIndlYnBhY2s6Ly8vLi9zcmMvQXBwQnVuZGxlL1Jlc291cmNlcy9wdWJsaWMvamF2YXNjcmlwdC9jYS9jYS5hcGkuanMiLCJ3ZWJwYWNrOi8vLy4vc3JjL0FwcEJ1bmRsZS9SZXNvdXJjZXMvcHVibGljL2phdmFzY3JpcHQvY2EvY2EuZGF0YS5qcyIsIndlYnBhY2s6Ly8vLi9zcmMvQXBwQnVuZGxlL1Jlc291cmNlcy9wdWJsaWMvamF2YXNjcmlwdC9jYS9jYS5tb2RlbHMuanMiLCJ3ZWJwYWNrOi8vLy4vc3JjL0FwcEJ1bmRsZS9SZXNvdXJjZXMvcHVibGljL2phdmFzY3JpcHQvY2EvY2EudXRpbHMuanMiLCJ3ZWJwYWNrOi8vLy4vc3JjL0FwcEJ1bmRsZS9SZXNvdXJjZXMvcHVibGljL2phdmFzY3JpcHQvbWFpbi9hY3Rpb25zL3VzZXJBY3Rpb25zLmpzIiwid2VicGFjazovLy8uL3NyYy9BcHBCdW5kbGUvUmVzb3VyY2VzL3B1YmxpYy9qYXZhc2NyaXB0L21haW4vYWN0aW9ucy91dGlscy5qcyIsIndlYnBhY2s6Ly8vLi9zcmMvQXBwQnVuZGxlL1Jlc291cmNlcy9wdWJsaWMvamF2YXNjcmlwdC9tYWluL2NvbXBvbmVudHMvQ29tbWVyY2lhbFNhbGVzQnVuZGxlLmpzIiwid2VicGFjazovLy8uL3NyYy9BcHBCdW5kbGUvUmVzb3VyY2VzL3B1YmxpYy9qYXZhc2NyaXB0L21haW4vY29tcG9uZW50cy9Db250ZW50TGlzdGluZy5qcyIsIndlYnBhY2s6Ly8vLi9zcmMvQXBwQnVuZGxlL1Jlc291cmNlcy9wdWJsaWMvamF2YXNjcmlwdC9tYWluL2NvbXBvbmVudHMvQ29udGVudExpc3RpbmdDb21tZXJjaWFsQWN0aXZpdHkuanMiLCJ3ZWJwYWNrOi8vLy4vc3JjL0FwcEJ1bmRsZS9SZXNvdXJjZXMvcHVibGljL2phdmFzY3JpcHQvbWFpbi9jb21wb25lbnRzL0NvbnRlbnRMaXN0aW5nUGVuZGluZ0JpZC5qcyIsIndlYnBhY2s6Ly8vLi9zcmMvQXBwQnVuZGxlL1Jlc291cmNlcy9wdWJsaWMvamF2YXNjcmlwdC9tYWluL2NvbXBvbmVudHMvQ291bnRyeVNlbGVjdG9yLmpzIiwid2VicGFjazovLy8uL3NyYy9BcHBCdW5kbGUvUmVzb3VyY2VzL3B1YmxpYy9qYXZhc2NyaXB0L21haW4vY29tcG9uZW50cy9EaWdpdGFsU2lnbmF0dXJlLmpzIiwid2VicGFjazovLy8uL3NyYy9BcHBCdW5kbGUvUmVzb3VyY2VzL3B1YmxpYy9qYXZhc2NyaXB0L21haW4vY29tcG9uZW50cy9GaWxlU2VsZWN0b3IuanMiLCJ3ZWJwYWNrOi8vLy4vc3JjL0FwcEJ1bmRsZS9SZXNvdXJjZXMvcHVibGljL2phdmFzY3JpcHQvbWFpbi9jb21wb25lbnRzL0hlYWRlckJhci5qcyIsIndlYnBhY2s6Ly8vLi9zcmMvQXBwQnVuZGxlL1Jlc291cmNlcy9wdWJsaWMvamF2YXNjcmlwdC9tYWluL2NvbXBvbmVudHMvSGVhZGVyTm90aWZpY2F0aW9ucy5qcyIsIndlYnBhY2s6Ly8vLi9zcmMvQXBwQnVuZGxlL1Jlc291cmNlcy9wdWJsaWMvamF2YXNjcmlwdC9tYWluL2NvbXBvbmVudHMvSWNvbnMuanMiLCJ3ZWJwYWNrOi8vLy4vc3JjL0FwcEJ1bmRsZS9SZXNvdXJjZXMvcHVibGljL2phdmFzY3JpcHQvbWFpbi9jb21wb25lbnRzL0xhbmd1YWdlU2VsZWN0b3IuanMiLCJ3ZWJwYWNrOi8vLy4vc3JjL0FwcEJ1bmRsZS9SZXNvdXJjZXMvcHVibGljL2phdmFzY3JpcHQvbWFpbi9jb21wb25lbnRzL0xhbmd1YWdlU2VsZWN0b3JFeHRlbmRlZC5qcyIsIndlYnBhY2s6Ly8vLi9zcmMvQXBwQnVuZGxlL1Jlc291cmNlcy9wdWJsaWMvamF2YXNjcmlwdC9tYWluL2NvbXBvbmVudHMvTGljZW5zZURvd25sb2FkZXIuanMiLCJ3ZWJwYWNrOi8vLy4vc3JjL0FwcEJ1bmRsZS9SZXNvdXJjZXMvcHVibGljL2phdmFzY3JpcHQvbWFpbi9jb21wb25lbnRzL05ld1NlYXNvbi5qcyIsIndlYnBhY2s6Ly8vLi9zcmMvQXBwQnVuZGxlL1Jlc291cmNlcy9wdWJsaWMvamF2YXNjcmlwdC9tYWluL2NvbXBvbmVudHMvUG9wdXBDb3VudHJ5U2VsZWN0b3IuanMiLCJ3ZWJwYWNrOi8vLy4vc3JjL0FwcEJ1bmRsZS9SZXNvdXJjZXMvcHVibGljL2phdmFzY3JpcHQvbWFpbi9jb21wb25lbnRzL1Byb2dyYW1UeXBlc0RlZmluaXRpb25zLmpzIiwid2VicGFjazovLy8uL3NyYy9BcHBCdW5kbGUvUmVzb3VyY2VzL3B1YmxpYy9qYXZhc2NyaXB0L21haW4vY29tcG9uZW50cy9SZWdpb25Db3VudHJ5U2VsZWN0b3IuanMiLCJ3ZWJwYWNrOi8vLy4vc3JjL0FwcEJ1bmRsZS9SZXNvdXJjZXMvcHVibGljL2phdmFzY3JpcHQvbWFpbi9jb21wb25lbnRzL1JpZ2h0c0xlZ2VuZC5qcyIsIndlYnBhY2s6Ly8vLi9zcmMvQXBwQnVuZGxlL1Jlc291cmNlcy9wdWJsaWMvamF2YXNjcmlwdC9tYWluL2NvbXBvbmVudHMvU2VhcmNoQ29tcGV0aXRpb24uanMiLCJ3ZWJwYWNrOi8vLy4vc3JjL0FwcEJ1bmRsZS9SZXNvdXJjZXMvcHVibGljL2phdmFzY3JpcHQvbWFpbi9jb21wb25lbnRzL1NlYXNvblNlbGVjdG9yLmpzIiwid2VicGFjazovLy8uL3NyYy9BcHBCdW5kbGUvUmVzb3VyY2VzL3B1YmxpYy9qYXZhc2NyaXB0L21haW4vY29tcG9uZW50cy9TZWxlY3Rvci5qcyIsIndlYnBhY2s6Ly8vLi9zcmMvQXBwQnVuZGxlL1Jlc291cmNlcy9wdWJsaWMvamF2YXNjcmlwdC9tYWluL2NvbXBvbmVudHMvU2VuZE1lc3NhZ2UuanMiLCJ3ZWJwYWNrOi8vLy4vc3JjL0FwcEJ1bmRsZS9SZXNvdXJjZXMvcHVibGljL2phdmFzY3JpcHQvbWFpbi9jb21wb25lbnRzL1Rvb2x0aXAuanMiLCJ3ZWJwYWNrOi8vLy4vc3JjL0FwcEJ1bmRsZS9SZXNvdXJjZXMvcHVibGljL2phdmFzY3JpcHQvbWFpbi9jb250YWluZXJzL1Rlc3RQYWdlLmpzIiwid2VicGFjazovLy8uL3NyYy9BcHBCdW5kbGUvUmVzb3VyY2VzL3B1YmxpYy9qYXZhc2NyaXB0L21haW4vbWFpbi5qcyIsIndlYnBhY2s6Ly8vLi9zcmMvQXBwQnVuZGxlL1Jlc291cmNlcy9wdWJsaWMvamF2YXNjcmlwdC9tYWluL3JlZHVjZXJzL3VzZXIuanMiLCJ3ZWJwYWNrOi8vLy4vc3JjL0FwcEJ1bmRsZS9SZXNvdXJjZXMvcHVibGljL2phdmFzY3JpcHQvbWFpbi9yb3V0ZXIuanMiLCJ3ZWJwYWNrOi8vLy4vc3JjL0FwcEJ1bmRsZS9SZXNvdXJjZXMvcHVibGljL2phdmFzY3JpcHQvbWFpbi9yb3V0ZXMuanMiLCJ3ZWJwYWNrOi8vLy4vc3JjL0FwcEJ1bmRsZS9SZXNvdXJjZXMvcHVibGljL2phdmFzY3JpcHQvbWFpbi9zdG9yZS5qcyIsIndlYnBhY2s6Ly8vLi9zcmMvQXBwQnVuZGxlL1Jlc291cmNlcy9wdWJsaWMvamF2YXNjcmlwdC9tYWluL3N0eWxlcy9jdXN0b20uanMiLCJ3ZWJwYWNrOi8vLy4vc3JjL0FwcEJ1bmRsZS9SZXNvdXJjZXMvcHVibGljL2phdmFzY3JpcHQvbWFuYWdlL2NvbXBvbmVudHMvQm9hcmRMaXN0aW5nLmpzIiwid2VicGFjazovLy8uL3NyYy9BcHBCdW5kbGUvUmVzb3VyY2VzL3B1YmxpYy9qYXZhc2NyaXB0L21hbmFnZS9jb250YWluZXJzL0Nsb3NlZERlYWxzLmpzIiwid2VicGFjazovLy8uL3NyYy9BcHBCdW5kbGUvUmVzb3VyY2VzL3B1YmxpYy9qYXZhc2NyaXB0L21hbmFnZS9jb250YWluZXJzL0NvbW1lcmNpYWxBY3Rpdml0eS5qcyIsIndlYnBhY2s6Ly8vLi9zcmMvQXBwQnVuZGxlL1Jlc291cmNlcy9wdWJsaWMvamF2YXNjcmlwdC9tYW5hZ2UvY29udGFpbmVycy9NYW5hZ2VMaXN0aW5ncy5qcyIsIndlYnBhY2s6Ly8vLi9zcmMvQXBwQnVuZGxlL1Jlc291cmNlcy9wdWJsaWMvamF2YXNjcmlwdC9tYW5hZ2UvY29udGFpbmVycy9NZXNzYWdlcy5qcyIsIndlYnBhY2s6Ly8vLi9zcmMvQXBwQnVuZGxlL1Jlc291cmNlcy9wdWJsaWMvamF2YXNjcmlwdC9tYW5hZ2UvY29udGFpbmVycy9QZW5kaW5nRGVhbHMuanMiLCJ3ZWJwYWNrOi8vLy4vc3JjL0FwcEJ1bmRsZS9SZXNvdXJjZXMvcHVibGljL2phdmFzY3JpcHQvbWFuYWdlL2NvbnRhaW5lcnMvU2V0dGluZ3MuanMiLCJ3ZWJwYWNrOi8vLy4vc3JjL0FwcEJ1bmRsZS9SZXNvdXJjZXMvcHVibGljL2phdmFzY3JpcHQvbWFuYWdlL2NvbnRhaW5lcnMvV2F0Y2hsaXN0LmpzIiwid2VicGFjazovLy8uL3NyYy9BcHBCdW5kbGUvUmVzb3VyY2VzL3B1YmxpYy9qYXZhc2NyaXB0L21hbmFnZS9yZWR1Y2Vycy9tYW5hZ2UuanMiLCJ3ZWJwYWNrOi8vLy4vc3JjL0FwcEJ1bmRsZS9SZXNvdXJjZXMvcHVibGljL2phdmFzY3JpcHQvc2VsbC9hY3Rpb25zL2NvbnRlbnRBY3Rpb25zLmpzIiwid2VicGFjazovLy8uL3NyYy9BcHBCdW5kbGUvUmVzb3VyY2VzL3B1YmxpYy9qYXZhc2NyaXB0L3NlbGwvYWN0aW9ucy92YWxpZGF0aW9uQWN0aW9ucy5qcyIsIndlYnBhY2s6Ly8vLi9zcmMvQXBwQnVuZGxlL1Jlc291cmNlcy9wdWJsaWMvamF2YXNjcmlwdC9zZWxsL2NvbXBvbmVudHMvQXBwbGljYWJsZUxhdy5qcyIsIndlYnBhY2s6Ly8vLi9zcmMvQXBwQnVuZGxlL1Jlc291cmNlcy9wdWJsaWMvamF2YXNjcmlwdC9zZWxsL2NvbXBvbmVudHMvQ29tbWVudHMuanMiLCJ3ZWJwYWNrOi8vLy4vc3JjL0FwcEJ1bmRsZS9SZXNvdXJjZXMvcHVibGljL2phdmFzY3JpcHQvc2VsbC9jb21wb25lbnRzL0NvbXBhbnlJbmZvcm1hdGlvbi5qcyIsIndlYnBhY2s6Ly8vLi9zcmMvQXBwQnVuZGxlL1Jlc291cmNlcy9wdWJsaWMvamF2YXNjcmlwdC9zZWxsL2NvbXBvbmVudHMvQ3VycmVuY3lTZWxlY3Rvci5qcyIsIndlYnBhY2s6Ly8vLi9zcmMvQXBwQnVuZGxlL1Jlc291cmNlcy9wdWJsaWMvamF2YXNjcmlwdC9zZWxsL2NvbXBvbmVudHMvRXhwaXJhdGlvbkRhdGVTZWxlY3Rvci5qcyIsIndlYnBhY2s6Ly8vLi9zcmMvQXBwQnVuZGxlL1Jlc291cmNlcy9wdWJsaWMvamF2YXNjcmlwdC9zZWxsL2NvbXBvbmVudHMvSnVyaXNkaWN0aW9uU2VsZWN0b3IuanMiLCJ3ZWJwYWNrOi8vLy4vc3JjL0FwcEJ1bmRsZS9SZXNvdXJjZXMvcHVibGljL2phdmFzY3JpcHQvc2VsbC9jb21wb25lbnRzL0xpY2Vuc2VEYXRlU2VsZWN0b3IuanMiLCJ3ZWJwYWNrOi8vLy4vc3JjL0FwcEJ1bmRsZS9SZXNvdXJjZXMvcHVibGljL2phdmFzY3JpcHQvc2VsbC9jb21wb25lbnRzL0xpc3RpbmdOYW1lLmpzIiwid2VicGFjazovLy8uL3NyYy9BcHBCdW5kbGUvUmVzb3VyY2VzL3B1YmxpYy9qYXZhc2NyaXB0L3NlbGwvY29tcG9uZW50cy9NYXRjaC5qcyIsIndlYnBhY2s6Ly8vLi9zcmMvQXBwQnVuZGxlL1Jlc291cmNlcy9wdWJsaWMvamF2YXNjcmlwdC9zZWxsL2NvbXBvbmVudHMvUG9wdXBSaWdodC5qcyIsIndlYnBhY2s6Ly8vLi9zcmMvQXBwQnVuZGxlL1Jlc291cmNlcy9wdWJsaWMvamF2YXNjcmlwdC9zZWxsL2NvbXBvbmVudHMvUHJvZHVjdGlvblN0YW5kYXJkc0RlZmluaXRpb25zLmpzIiwid2VicGFjazovLy8uL3NyYy9BcHBCdW5kbGUvUmVzb3VyY2VzL3B1YmxpYy9qYXZhc2NyaXB0L3NlbGwvY29tcG9uZW50cy9SaWdodERlZmF1bHRzLmpzIiwid2VicGFjazovLy8uL3NyYy9BcHBCdW5kbGUvUmVzb3VyY2VzL3B1YmxpYy9qYXZhc2NyaXB0L3NlbGwvY29tcG9uZW50cy9SaWdodERlZmF1bHRzQnlTdXBlclJpZ2h0LmpzIiwid2VicGFjazovLy8uL3NyYy9BcHBCdW5kbGUvUmVzb3VyY2VzL3B1YmxpYy9qYXZhc2NyaXB0L3NlbGwvY29tcG9uZW50cy9SaWdodERlZmluaXRpb25zLmpzIiwid2VicGFjazovLy8uL3NyYy9BcHBCdW5kbGUvUmVzb3VyY2VzL3B1YmxpYy9qYXZhc2NyaXB0L3NlbGwvY29tcG9uZW50cy9SaWdodEl0ZW1zRGVmaW5pdGlvbnMuanMiLCJ3ZWJwYWNrOi8vLy4vc3JjL0FwcEJ1bmRsZS9SZXNvdXJjZXMvcHVibGljL2phdmFzY3JpcHQvc2VsbC9jb21wb25lbnRzL1JvdW5kLmpzIiwid2VicGFjazovLy8uL3NyYy9BcHBCdW5kbGUvUmVzb3VyY2VzL3B1YmxpYy9qYXZhc2NyaXB0L3NlbGwvY29tcG9uZW50cy9TYWxlc1BhY2thZ2VFZGl0LmpzIiwid2VicGFjazovLy8uL3NyYy9BcHBCdW5kbGUvUmVzb3VyY2VzL3B1YmxpYy9qYXZhc2NyaXB0L3NlbGwvY29tcG9uZW50cy9TYWxlc1BhY2thZ2VGb3JtLmpzIiwid2VicGFjazovLy8uL3NyYy9BcHBCdW5kbGUvUmVzb3VyY2VzL3B1YmxpYy9qYXZhc2NyaXB0L3NlbGwvY29tcG9uZW50cy9TZWxsRm9ybS5qcyIsIndlYnBhY2s6Ly8vLi9zcmMvQXBwQnVuZGxlL1Jlc291cmNlcy9wdWJsaWMvamF2YXNjcmlwdC9zZWxsL2NvbXBvbmVudHMvU2VsbEZvcm1JdGVtcy5qcyIsIndlYnBhY2s6Ly8vLi9zcmMvQXBwQnVuZGxlL1Jlc291cmNlcy9wdWJsaWMvamF2YXNjcmlwdC9zZWxsL2NvbXBvbmVudHMvU3RhdGljUm91bmQuanMiLCJ3ZWJwYWNrOi8vLy4vc3JjL0FwcEJ1bmRsZS9SZXNvdXJjZXMvcHVibGljL2phdmFzY3JpcHQvc2VsbC9jb21wb25lbnRzL1N1cGVyUmlnaHREZWZpbml0aW9ucy5qcyIsIndlYnBhY2s6Ly8vLi9zcmMvQXBwQnVuZGxlL1Jlc291cmNlcy9wdWJsaWMvamF2YXNjcmlwdC9zZWxsL2NvbnRhaW5lcnMvUGFja2FnZVNlbGVjdG9yLmpzIiwid2VicGFjazovLy8uL3NyYy9BcHBCdW5kbGUvUmVzb3VyY2VzL3B1YmxpYy9qYXZhc2NyaXB0L3NlbGwvY29udGFpbmVycy9SZXZpZXdBbmRTaWduLmpzIiwid2VicGFjazovLy8uL3NyYy9BcHBCdW5kbGUvUmVzb3VyY2VzL3B1YmxpYy9qYXZhc2NyaXB0L3NlbGwvY29udGFpbmVycy9TZWxsQnV0dG9ucy5qcyIsIndlYnBhY2s6Ly8vLi9zcmMvQXBwQnVuZGxlL1Jlc291cmNlcy9wdWJsaWMvamF2YXNjcmlwdC9zZWxsL2NvbnRhaW5lcnMvU2VsbEZvcm1TdGVwMS5qcyIsIndlYnBhY2s6Ly8vLi9zcmMvQXBwQnVuZGxlL1Jlc291cmNlcy9wdWJsaWMvamF2YXNjcmlwdC9zZWxsL2NvbnRhaW5lcnMvU2VsbEZvcm1TdGVwMi5qcyIsIndlYnBhY2s6Ly8vLi9zcmMvQXBwQnVuZGxlL1Jlc291cmNlcy9wdWJsaWMvamF2YXNjcmlwdC9zZWxsL2NvbnRhaW5lcnMvU2VsbEZvcm1TdGVwMy5qcyIsIndlYnBhY2s6Ly8vLi9zcmMvQXBwQnVuZGxlL1Jlc291cmNlcy9wdWJsaWMvamF2YXNjcmlwdC9zZWxsL2NvbnRhaW5lcnMvU2VsbEZvcm1TdGVwNC5qcyIsIndlYnBhY2s6Ly8vLi9zcmMvQXBwQnVuZGxlL1Jlc291cmNlcy9wdWJsaWMvamF2YXNjcmlwdC9zZWxsL2NvbnRhaW5lcnMvU2VsbEZvcm1TdGVwcy5qcyIsIndlYnBhY2s6Ly8vLi9zcmMvQXBwQnVuZGxlL1Jlc291cmNlcy9wdWJsaWMvamF2YXNjcmlwdC9zZWxsL3JlZHVjZXJzL2NvbnRlbnQuanMiLCJ3ZWJwYWNrOi8vLy4vc3JjL0FwcEJ1bmRsZS9SZXNvdXJjZXMvcHVibGljL2phdmFzY3JpcHQvc2VsbC9yZWR1Y2Vycy9zZWxlY3Rvci5qcyIsIndlYnBhY2s6Ly8vLi9zcmMvQXBwQnVuZGxlL1Jlc291cmNlcy9wdWJsaWMvamF2YXNjcmlwdC90cmFuc2xhdGlvbnMvdHJhbnNsYXRpb25zLmpzIl0sIm5hbWVzIjpbImxhbmd1YWdlcyIsImFkZFJpZ2h0IiwidHlwZSIsImZpbHRlclR5cGVzIiwiQUREX1JJR0hUIiwiaWQiLCJyZW1vdmVSaWdodCIsIlJFTU9WRV9SSUdIVCIsInVwZGF0ZUNvdW50cmllcyIsIlVQREFURV9DT1VOVFJJRVMiLCJjb3VudHJpZXMiLCJ1cGRhdGVFeGNsdXNpdmUiLCJVUERBVEVfRVhDTFVTSVZFIiwiZXhjbHVzaXZlIiwidXBkYXRlSW5jbHVkZWRDb3VudHJpZXMiLCJVUERBVEVfSU5DTFVERURfQ09VTlRSSUVTIiwiaW5jbHVkZUFsbENvdW50cmllcyIsInVwZGF0ZU1hbnkiLCJVUERBVEVfTUFOWSIsImZpbHRlcnMiLCJ1cGRhdGVTcG9ydCIsIlVQREFURV9TUE9SVCIsInNwb3J0IiwidXBkYXRlRXZlbnQiLCJVUERBVEVfRVZFTlQiLCJldmVudCIsImNsZWFyRmlsdGVyIiwiQ0xFQVIiLCJjbGVhclVwZGF0ZUZpbHRlciIsIkNMRUFSX1VQREFURSIsIm5leHRUb2RvSWQiLCJ0ZXN0IiwibWFya2V0cGxhY2VUeXBlcyIsIlRFU1QiLCJ0ZXh0IiwiQ29udGVudExpc3RpbmdFdmVudERldGFpbHMiLCJwcm9wcyIsImdldEZpeHR1cmVzIiwic2Vhc29ucyIsImZpeHR1cmVzIiwiZm9yRWFjaCIsInMiLCJnZXRTY2hlZHVsZXMiLCJzY2hlZHVsZXNCeVNlYXNvbiIsInNjaGVkdWxlcyIsInJvdW5kcyIsIm1hdGNoZXMiLCJPYmplY3QiLCJlbnRyaWVzIiwic2giLCJzZWxlY3RlZCIsImluZGV4T2YiLCJwdXNoIiwibSIsInNob3dQcm9ncmFtSW5mbyIsInJpZ2h0c1BhY2thZ2UiLCJQUk9HUkFNX05BTUUiLCJzaG93IiwibGVuZ3RoIiwiZWRpdGVkUHJvZ3JhbVNlbGVjdGVkIiwiZ2V0U2Vhc29uc1llYXJzIiwieWVhcnMiLCJmcm9tIiwidG8iLCJ5ZWFyIiwicHJvY2Vzc2VkWWVhcnMiLCJzcGxpdCIsIk51bWJlciIsInNvcnQiLCJhIiwiYiIsInN0YXRlIiwic3BvcnRzIiwic3BvcnRDYXRlZ29yeSIsImN1c3RvbVRvdXJuYW1lbnQiLCJjdXN0b21DYXRlZ29yeSIsImN1c3RvbUlkIiwidG91cm5hbWVudCIsInNob3dDdXN0b21JZCIsIlBST0dSQU1fWUVBUiIsIlBST0dSQU1fRVBJU09ERVMiLCJzZWFzb25UaXRsZSIsImVwaXNvZGVzVGV4dCIsInNlYXNvbk5hbWUiLCJtYXAiLCJzZWFzb24iLCJqb2luIiwic2Vhc29uc0FycmF5Iiwicm91bmRzVGl0bGUiLCJyb3VuZHNOYW1lIiwidG91cm5hbWVudEFycmF5IiwiQXJyYXkiLCJpc0FycmF5IiwidG91cm5hbWVudEljb24iLCJuYW1lIiwiY29udGV4dCIsInQiLCJzcG9ydEljb24iLCJzcG9ydENhdGVnb3J5SWNvbiIsInNlYXNvblJlbGVhc2VJY29uIiwiZXZlbnRUaW1lSWNvbiIsImZpeHR1cmVzRXBpc29kZUljb24iLCJSZWFjdCIsIkNvbXBvbmVudCIsImNvbnRleHRUeXBlcyIsIlByb3BUeXBlcyIsImZ1bmMiLCJpc1JlcXVpcmVkIiwiQ29udGVudExpc3RpbmdSaWdodHNQYWNrYWdlIiwiZGVmYXVsdFJpZ2h0c1BhY2thZ2UiLCJwYWNrYWdlcyIsInVuaW9uQnkiLCJzbGljZSIsInJwIiwiaSIsImljb24iLCJ3aWR0aCIsImhlaWdodCIsIm1hcmdpbiIsImRpc3BsYXkiLCJmbGV4RGlyZWN0aW9uIiwic2hvcnRMYWJlbCIsIkV2ZW50RmlsdGVyIiwiZ2V0T3B0aW9ucyIsImZpbHRlciIsImF2YWlsYWJsZSIsImsiLCJ2YWx1ZSIsImxhYmVsIiwic2hvd1RhYiIsInRhYiIsInNldFN0YXRlIiwic2VsZWN0U3BvcnQiLCJlIiwicmVmcyIsInNlYXJjaF9maWVsZCIsImhhbmRsZUZpbHRlciIsIm9uRmlsdGVyIiwiaGFuZGxlS2V5UHJlc3MiLCJrZXkiLCJzZWFyY2hJY29uIiwiQ29udGVudEFyZW5hIiwiRGF0YSIsIkFjdGl2ZVNwb3J0cyIsIkFwaSIsImdldEFjdGl2ZVNwb3J0cyIsImRvbmUiLCJuZXh0UHJvcHMiLCJtYXBTdGF0ZVRvUHJvcHMiLCJtYXBEaXNwYXRjaFRvUHJvcHMiLCJvbkNsaWNrIiwiZGlzcGF0Y2giLCJjb25uZWN0IiwiUmlnaHRzRmlsdGVyIiwic2VsZWN0VGVycml0b3J5IiwiY291bnRyeVNlbGVjdG9yIiwic2VsZWN0ZWRPcHRpb24iLCJ3b3JsZHdpZGVDb3VudHJpZXMiLCJjb25zb2xlIiwibG9nIiwicmlnaHRzIiwiY291bnRyaWVzVmFsdWUiLCJhbGlnbkl0ZW1zIiwiYyIsInJpZ2h0IiwidGFyZ2V0IiwiY2hlY2tlZCIsImJhY2tncm91bmQiLCJDb21tZXJjaWFsVGVybXMiLCJub0luZm9UZXh0Iiwic2FsZXNQYWNrYWdlcyIsIm9uU2VsZWN0UGFja2FnZSIsInByb2dyYW1EZXNjcmlwdGlvbiIsInByb2ZpbGUiLCJtYXJnaW5Ub3AiLCJDb250ZW50SW5mb3JtYXRpb24iLCJiYXNlRGlyIiwiYXNzZXRzQmFzZURpciIsInBkZkljb24iLCJsb2FkU2NoZWR1bGUiLCJfdGhpcyIsImluZGV4IiwiY3VzdG9tIiwibG9hZGluZ1NjaGVkdWxlIiwiZ2V0U2NoZWR1bGUiLCJleHRlcm5hbElkIiwia2V5cyIsImdldCIsInRlbXBTZWFzb25zIiwic2hvd2NoZWR1bGVzIiwiZGVzY3JpcHRpb24iLCJ3ZWJzaXRlIiwiYXR0YWNobWVudHMiLCJmaXh0dXJlIiwicGFkZGluZyIsImJvcmRlciIsIm1hcmdpbkxlZnQiLCJtaW5XaWR0aCIsImZpbGUiLCJwYWRkaW5nUmlnaHQiLCJsYWJlbFN0eWxlIiwiZm9udFNpemUiLCJpbnB1dFN0eWxlIiwiYmlkQnV0dG9uU3R5bGUiLCJtYXJnaW5SaWdodCIsImJpZFRleHRCb3hTdHlsZSIsImJhY2tncm91bmRDb2xvciIsIkxpc3RpbmdEZXRhaWxzIiwidG9nZ2xlQnV5aW5nTW9kZSIsImJ1eWluZ01vZGUiLCJzZWxlY3RQYWNrYWdlIiwic2VsZWN0ZWRQYWNrYWdlIiwiaGlzdG9yeSIsImJpZCIsImZlZSIsIm1pbmltdW1CaWQiLCJvcmRpbmFsX3N1ZmZpeF9vZiIsImoiLCJpc1RhYkhhc0RhdGEiLCJjb250ZW50IiwiY2xvc2VNb2RhbCIsImVkaXRDb21wYW55T3BlbiIsImNsb3NlVGVycml0b3JpZXNNb2RhbCIsInNob3dBbGxUZXJyaXRvcmllcyIsImNsb3NlU3VjY2Vzc1NjcmVlbiIsImVkaXRDb21wYW55IiwiY29tcGFueSIsImxlZ2FsTmFtZSIsInJlZ2lzdHJhdGlvbk51bWJlciIsInZhdCIsImFkZHJlc3MiLCJjaXR5IiwiemlwIiwiY291bnRyeSIsImNvbXBhbnlJc1ZhbGlkIiwiZXh0cmFUZXJyaXRvcmllcyIsInRlcnJpdG9yaWVzTGlzdCIsImFsbFRlcnJpdG9yaWVzIiwiY3VzdG9tU3R5bGVzIiwiY29sb3IiLCJmbGV4V3JhcCIsInRlcnJpdG9yeSIsInN1Y2Nlc3NTY3JlZW4iLCJzaG93U3VjY2Vzc1NjcmVlbiIsInRleHRBbGlnbiIsImZvbnRXZWlnaHQiLCJzYWxlc01ldGhvZCIsImdldFRlY2huaWNhbEZlZSIsInJlc3BvbnNlIiwiVEVDSE5JQ0FMX0ZFRSIsIlRFQ0hOSUNBTF9GRUVfUEVSQ0VOVEFHRSIsInNlbGVjdGVkUmlnaHRzIiwiZ2V0VG90YWxGZWUiLCJ0ZWNobmljYWxGZWUiLCJ0b3RhbCIsInNldEJpZCIsImJpZFVwZGF0ZWQiLCJlZGl0QmlkIiwicGxhY2VCaWQiLCJzaWduYXR1cmUiLCJzcGlubmVyIiwiYmlkT2JqIiwiYW1vdW50Iiwic2FsZXNQYWNrYWdlIiwidG90YWxGZWUiLCJDb250ZW50QXBpIiwidGhlbiIsInNvbGRPdXQiLCJyIiwiaW52YWxpZFBhY2thZ2UiLCJ0ZXJtcyIsIndhdGNobGlzdCIsInN1Y2Nlc3MiLCJsaXN0aW5nIiwiVXRpbHMiLCJjb250ZW50UGFyc2VyRnJvbVNlcnZlciIsImZpbmQiLCJzcCIsImJ1bmRsZSIsImJsdWVDaGVjayIsImNoZWNrSWNvbiIsInllbGxvd0NoZWNrIiwiY29udGFjdEljb24iLCJ3YXRjaGxpc3RJY29uIiwiYmlkSWNvbiIsInBhY2thZ2VJY29uIiwiaW5mb0ljb24iLCJkcmFmdEljb24iLCJwIiwiUmVhY3RUb29sdGlwIiwicmVidWlsZCIsIm9uQmFjayIsImxpc3RpbmdJbWFnZSIsImltYWdlIiwibm9JbWFnZSIsInRlcnJpdG9yaWVzTWV0aG9kIiwiZXhjbHVkZWRUZXJyaXRvcmllcyIsInRlcnJpdG9yaWVzIiwiZmxleCIsInNyIiwibWluSGVpZ2h0Iiwic3RhcnREYXRlTW9kZSIsIk1vbWVudCIsInN0YXJ0RGF0ZSIsImZvcm1hdCIsImVuZERhdGVNb2RlIiwiZW5kRGF0ZUxpbWl0IiwiZW5kRGF0ZSIsImV4cGlyZXNBdCIsImN1cnNvciIsIm1lc3NhZ2VQb3B1cCIsIm9wZW4iLCJtYXJnaW5Cb3R0b20iLCJ0ZXh0RGVjb3JhdGlvbiIsInBhZGRpbmdMZWZ0IiwicGFkZGluZ1RvcCIsImJveFNpemluZyIsIm1heFdpZHRoIiwiYnVuZGxlTWV0aG9kIiwiZ2V0Q3VycmVuY3lTeW1ib2wiLCJjdXJyZW5jeSIsImNvZGUiLCJwYXJzZUZsb2F0IiwiaW5zdGFsbG1lbnRzIiwiaW5zdGFsbG1lbnQiLCJkYXlzIiwiZGF0ZSIsImp1c3RpZnlDb250ZW50Iiwidmlld0xpY2Vuc2VDdXN0b20iLCJxdWVyeVN0cmluZyIsInJlcXVpcmUiLCJNYXJrZXRwbGFjZSIsInNlbGVjdExpc3RpbmciLCJzaG93RGV0YWlscyIsImxvYWRpbmdMaXN0aW5nRGV0YWlscyIsImdldEJ5Q3VzdG9tSWQiLCJmYWlsIiwiZXJyb3JNZXNzYWdlIiwiZXJyb3IiLCJkYXRhIiwicmVzcG9uc2VKU09OIiwibWVzc2FnZSIsInBhcnNlRmlsdGVyIiwicGFyc2VGaWx0ZXJGb3JVcmwiLCJnZXRDb250ZW50IiwibG9hZGluZ0xpc3RpbmciLCJsaXN0aW5ncyIsImdldEpzb25Db250ZW50Iiwic29ydFNhbGVzUGFja2FnZXMiLCJwYXJzZWRGaWx0ZXIiLCJmaWx0ZXJCeVJvdXRlIiwic2VyaWFsaXplIiwib2JqIiwicHJlZml4Iiwic3RyIiwiaGFzT3duUHJvcGVydHkiLCJ2IiwiZW5jb2RlVVJJQ29tcG9uZW50IiwiSlNPTiIsInBhcnNlIiwidXNlciIsIm1hdGNoIiwibG9jYXRpb24iLCJwYXJhbXMiLCJmaWx0ZXJOYW1lIiwiZmlsdGVyVmFsdWUiLCJ1cGRhdGVGaWx0ZXJzIiwiY3VzdG9tRmlsdGVyIiwic2VhcmNoIiwiYXJyYXlGb3JtYXQiLCJ1cGRhdGVQcm9maWxlIiwialF1ZXJ5IiwiY3NzIiwicmVtb3ZlQXR0ciIsImZvcmNlVXBkYXRlIiwiZ29Ub0xpc3RpbmciLCJwYXRobmFtZSIsIm93blByb3BzIiwicm93U3R5bGUiLCJib3JkZXJCb3R0b20iLCJib3JkZXJSaWdodCIsInRpdGxlU3R5bGUiLCJ2YWx1ZVN0eWxlIiwiUHJvZ3JhbURldGFpbHMiLCJQUk9HUkFNX0RFU0NSSVBUSU9OIiwiUFJPR1JBTV9EVVJBVElPTiIsIlBST0dSQU1fVFlQRSIsIlByb2dyYW1UeXBlc0RlZmluaXRpb25zIiwiU2FsZXNQYWNrYWdlcyIsInNob3dJbnN0YWxsbWVudHMiLCJjbG9zZVRlcnJpdG9pZXNNb2RhbCIsImNsb3NlSW5zdGFsbG1lbnRzTW9kYWwiLCJpbnN0YWxsbWVudHNNb2RhbCIsImdldEZlZSIsImZlZU51bWJlciIsInRvTG9jYWxlU3RyaW5nIiwibGlzdGluZ0lkIiwic29sZCIsIlNlbGxlciIsImRpc3BsYXlOYW1lIiwiVGVybVNoZWV0IiwiaGFzUmlnaHQiLCJyZW5kZXJQcm9ncmFtSW5mbyIsInZhbHVlcyIsImwiLCJyZW5kZXJMaXN0IiwiZGVmaW5pdGlvbnMiLCJjaGVja0NvbnRlbnREZWxpdmVyeSIsInNlbGVjdGVkUmlnaHRzQnlTdXBlclJpZ2h0IiwiTElDRU5TRURfTEFOR1VBR0VTIiwiZ2V0RmlsdGVyZWRCeURlbGl2ZXJ5IiwiZGVmSXRlbXMiLCJpdGVtcyIsImRlZmluaXRpb24iLCJtdWx0aXBsZSIsIlJpZ2h0SXRlbXNEZWZpbml0aW9ucyIsIml0ZW0iLCJkeW5LZXkiLCJkIiwiY2hlY2tEZWxpdmVyeSIsInNvbWUiLCJyZW5kZXJUZXh0YXJlYSIsInJlbmRlckRldGFpbHMiLCJQUk9HUkFNX1NDUklQVCIsIlBST0dSQU1fU1VCVElUTEVTIiwiUFJPR1JBTV9MQU5HVUFHRSIsIkNPTU1FTlRTX1JJR0hUUyIsIkNPTU1FTlRTX1BST0RVQ1RJT04iLCJITF9JTlBVVCIsIk5BX0lOUFVUIiwicGFja2FnZXNBdmFpbGFibGUiLCJ2aWFMaXZlRmVlZCIsIlN1cGVyUmlnaHRQcm9kdWN0aW9uRGV0YWlsc0xhYmVscyIsImRlZmF1bHRGaWx0ZXIiLCJhY3Rpb24iLCJhc3NpZ24iLCJzcGxpY2UiLCJtYXJrZXRwbGFjZSIsInRlc3RJdGVtIiwiX19hcGlTdG9yZSIsInRvdXJuYW1lbnRzIiwid2luZG93Iiwic2F2ZUNvbnRlbnRBc0RyYWZ0IiwiZGVmZXJyZWQiLCJEZWZlcnJlZCIsIiQiLCJhamF4IiwidXJsIiwiZW52aG9zdHVybCIsInN0cmluZ2lmeSIsImNvbnRlbnRUeXBlIiwicmVzb2x2ZSIsInN0YXR1cyIsInJlamVjdCIsInByb21pc2UiLCJzYXZlQ29udGVudEFzSW5hY3RpdmUiLCJzYXZlQ29udGVudEFzQWN0aXZlIiwic2VuZE1lc3NhZ2UiLCJnZXRVc2VySW5mbyIsImdldENvbXBhbnlVc2VycyIsInVwZGF0ZUNvbXBhbnkiLCJ1cGRhdGVQYXNzd29yZCIsInVwZGF0ZVVzZXIiLCJnZXRUaHJlYWQiLCJnZXRUaHJlYWRzIiwiYWNjZXB0QmlkIiwicmVqZWN0QmlkIiwicmVtb3ZlQmlkIiwic2F2ZVRtcEZpbGUiLCJmaWxlcyIsIkZvcm1EYXRhIiwiYXBwZW5kIiwicHJvY2Vzc0RhdGEiLCJnZXREcmFmdExpc3RpbmdzIiwiZ2V0SW5hY3RpdmVMaXN0aW5ncyIsImdldEFjdGl2ZUxpc3RpbmdzIiwiZ2V0RXhwaXJlZExpc3RpbmdzIiwicmVtb3ZlTGlzdGluZyIsImR1cGxpY2F0ZUxpc3RpbmciLCJkZWFjdGl2YXRlTGlzdGluZyIsImFyY2hpdmVMaXN0aW5nIiwiZ2V0Q2xvc2VkRGVhbHMiLCJnZXRBbGxEZWFscyIsImdldFBlbmRpbmdEZWFscyIsImdldFJlamVjdGVkRGVhbHMiLCJnZXRXYXRjaGxpc3RMaXN0aW5ncyIsInNvcnRCeUxhYmVsIiwic29ydEJ5U3BvcnQiLCJwcmVwYXJlTGlzdCIsImxpc3QiLCJjYXRlZ29yeUlkIiwiY2F0ZWdvcnkiLCJzYXZlRmlsdGVyIiwiZ2V0Q291bnRyaWVzIiwiQ291bnRyaWVzIiwicmVnaW9ucyIsImdldENvdW50cmllc0Z1bGwiLCJnZXRUZXJyaXRvcmllcyIsImdldFJlZ2lvbnMiLCJnZXRSaWdodHMiLCJncm91cCIsImdldFJpZ2h0c1BhY2thZ2UiLCJnZXRTcG9ydHMiLCJleHRlcm5hbEFwaVVybCIsImdldENvbnRlbnREZXRhaWxzIiwiZ2V0UGVuZGluZ0xpc3RpbmdzIiwiZ2V0Q2F0ZWdvcmllcyIsInNwb3J0SWQiLCJjYXRzIiwiZ2V0VG91cm5hbWVudHMiLCJ1bmRlZmluZWQiLCJnZXRTZWFzb25zIiwidG91cm5hbWVudElkIiwiZW5kX2RhdGUiLCJzdGFydF9kYXRlIiwidG91cm5hbWVudF9pZCIsInJldmVyc2UiLCJzZWFzb25JZCIsInNwb3J0X2V2ZW50cyIsInNwb3J0X2V2ZW50Iiwicm91bmQiLCJ0b3VybmFtZW50X3JvdW5kIiwibnVtYmVyIiwiTWFwIiwic2V0Iiwic2NoZWR1bGVkIiwidG91cm5hbWVudFJvdW5kIiwiY29tcGV0aXRvcnMiLCJjb21wZXRpdG9yIiwic2VhcmNoQ29tcGV0aXRpb24iLCJyZXF1ZXN0IiwidHJhZGl0aW9uYWwiLCJkYXRhVHlwZSIsImdldE5vdGlmaWNhdGlvbnMiLCJheGlvcyIsIm1hcmtOb3RpZmljYXRpb25Bc1NlZW4iLCJwb3N0IiwiTGFuZ3VhZ2VzIiwiVG9wU3BvcnRzIiwiRnVsbFNwb3J0cyIsIlRlcnJpdG9yaWVzIiwiUmVnaW9ucyIsIlNob3J0IiwiTG9uZyIsIk1vZGVsIiwiUmlnaHRQYWNrYWdlIiwiUmlnaHQiLCJyaWdodEl0ZW1zIiwiUmlnaHRJdGVtIiwiaW5wdXRzIiwiU2VsZWN0ZWRSaWdodCIsInJpZ2h0SXRlbSIsIlNhbGVzUGFja2FnZSIsInNlbGVjdGVkVGVycml0b3JpZXMiLCJ0ZXJyaXRvcnlCaWRzIiwic2VsbEFzUGFja2FnZSIsInZhbGlkYXRlIiwiaGFzRXJyb3JzIiwiQ29udGVudCIsImdldFRpdGxlIiwidGl0bGUiLCJhcnJheSIsIndhdGNoIiwiYXJndW1lbnRzIiwicGFyc2VkIiwiZXh0cmFEYXRhIiwiZml4dHVyZXNCeVNlYXNvbiIsImV4Y2x1ZGVkQ291bnRyaWVzIiwibW9tZW50Iiwic3RlcCIsImN1c3RvbVNlYXNvbnMiLCJzdGFydHNXaXRoIiwiaXNBUElBdmFpbGFibGUiLCJGaWxlIiwiRmlsZVJlYWRlciIsIkZpbGVMaXN0IiwiQmxvYiIsImRvY3VtZW50Iiwid3JpdGVsbiIsImFkZE9yZGluYWwiLCJuIiwidG9TdHJpbmciLCJvcmQiLCJnZXRJbmRleCIsImFyciIsInByb3AiLCJ1c2VyVHlwZXMiLCJQUk9GSUxFIiwibG9hZFVzZXJEYXRhIiwiZGF0YUNvbnRhaW5lciIsImdldEVsZW1lbnRzQnlDbGFzc05hbWUiLCJ1c2VyU3RyIiwiZGF0YXNldCIsImxvZ2dlZFVzZXJEYXRhIiwiTE9BRF9VU0VSX0RBVEEiLCJnb1RvIiwicm91dGUiLCJvcGVuTmV3IiwiaHJlZiIsImhpc3RvcnlHb1RvIiwicHVzaFN0YXRlIiwidmlld0xpY2Vuc2UiLCJ2aWV3TGljZW5zZUJpZCIsInZpZXdMaWNlbnNlQnVuZGxlIiwiYnVuZGxlSWQiLCJnb1RvTWFya2V0cGxhY2UiLCJnb1RvQ2xvc2VkRGVhbHMiLCJnZXRGdWxsTmFtZSIsImZpcnN0TmFtZSIsImxhc3ROYW1lIiwibGltaXRUZXh0IiwidHh0IiwibGltaXQiLCJzdWJzdHJpbmciLCJwYXJzZVNlYXNvbnMiLCJzZWxlY3RlZFNjaGVkdWxlcyIsIkNvbW1lcmNpYWxTYWxlc0J1bmRsZSIsImNvbnRlbnRJZCIsInNlbGVjdGVkQmlkIiwic2F2aW5nIiwiYXBwcm92ZU1vZGFsSXNPcGVuIiwib25VcGRhdGUiLCJhbHdheXMiLCJyZWplY3RNb2RhbElzT3BlbiIsImNsb3NlUmVtb3ZlTW9kYWwiLCJyZW1vdmVNb2RhbElzT3BlbiIsImNsb3NlQXBwcm92ZU1vZGFsIiwiY2xvc2VSZWplY3RNb2RhbCIsInJlbmRlckFwcHJvdmVNb2RhbCIsInNhbGVzQnVuZGxlIiwiR2VuZXJpY01vZGFsU3R5bGUiLCJyZW5kZXJSZWplY3RNb2RhbCIsInJlbmRlclJlbW92ZU1vZGFsIiwic2hvd0JpZHMiLCJiaWRzT3BlbiIsIm9uRGVsZXRlIiwiY2xvc2VkRGVhbHMiLCJiaWRzIiwicmVkdWNlIiwiYnV5ZXJVc2VyIiwib25QYWdlQ2hhbmdlIiwic2VsZWN0IiwiYWNjZXNzb3IiLCJDZWxsIiwiSGVhZGVyIiwiaGVhZGVyQ2xhc3NOYW1lIiwiY2xhc3NOYW1lIiwic2hvd1JlbW92ZUNvbmZpcm0iLCJzZWxlY3RlZEJpZEZvckRlbGV0aW9uIiwid2hpdGVTcGFjZSIsInN0b3BQcm9wYWdhdGlvbiIsInNhbGVzUGFja2FnZXNBcnJheSIsIkNvbnRlbnRMaXN0aW5nIiwib25TZWxlY3QiLCJjb25maXJtUmVtb3ZlRnJvbVdhdGNobGlzdCIsImNvbmZpcm1XYXRjaGxpc3RSZW1vdmUiLCJjYW5jZWxSZW1vdmVGcm9tV2F0Y2hsaXN0IiwicmVtb3ZlRnJvbVdhdGNobGlzdCIsIm9uV2F0Y2hsaXN0UmVtb3ZlIiwiY29tcGFyZVByb3BlcnR5Iiwic29ydEFmdGVyRmlsdGVyIiwic29ydEJ5RmlsdGVyIiwidGVtcCIsImV0IiwiYWxsIiwiaW5jbHVkZSIsImZpeGVkSWNvbiIsImJ1Y2tldGljb24iLCJvblNlbGVjdE5hbWUiLCJpbWFnZUJhc2U2NCIsIndhdGNobGlzdFJlbW92ZSIsIm93bmVyIiwiZGVjbGluZWQiLCJjb2luSWNvbiIsImNyZWF0ZWRBdCIsIkNvbnRlbnRMaXN0aW5nQ29tbWVyY2lhbEFjdGl2aXR5IiwiYU9wZW4iLCJiT3BlbiIsImFDbG9zZWQiLCJiQ2xvc2VkIiwiYVdvcmxkd2lkZSIsImJXb3JsZHdpZGUiLCJjbG9zZWQiLCJ3b3JsZHdpZGUiLCJzaG93U2FsZXNQYWNrYWdlIiwiYnVuZGxlc09wZW4iLCJleGNsYW1hdGlvbkljb24iLCJlbnZlbG9wZUljb24iLCJoaWRlV2l0aG91dEJpZHMiLCJmaWx0ZXJCeU9wZW5CaWRzIiwiZmlsdGVyQnlDbG9zZWREZWFscyIsImNvbmNhdCIsIm9wZW5CaWRzIiwibWF4aW11bUZyYWN0aW9uRGlnaXRzIiwic2IiLCJDb250ZW50TGlzdGluZ1BlbmRpbmdCaWQiLCJzaG93TWVzc2FnZSIsInNob3dFZGl0ZWQiLCJvdmVyZmxvdyIsImJvcmRlckxlZnQiLCJwYWRkaW5nUm9wIiwicG9zaXRpb24iLCJmb250U3R5bGUiLCJ0b3AiLCJDb3VudHJ5U2VsZWN0b3IiLCJvbkNoYW5nZSIsIm11bHRpIiwiZGlzYWJsZWQiLCJEaWdpdGFsU2lnbmF0dXJlIiwiY2xlYXIiLCJibGFuayIsIm9uUmVhZHkiLCJ0b0RhdGFVUkwiLCJyZWFkeSIsImVkaXQiLCJGaWxlSXRlbSIsIkludmFsaWRGaWxlSXRlbSIsImltYWdlU3R5bGUiLCJtYXhIZWlnaHQiLCJGaWxlU2VsZWN0b3IiLCJoYW5kbGVVcGxvYWRGaWxlIiwiaXNJbWFnZSIsInRtcCIsImZvcm0iLCJzaXplIiwidXBsb2FkaW5nIiwicHJldiIsImZhaWxlZCIsImdldEJhc2U2NCIsImdldEl0ZW1zIiwicmVtb3ZlIiwiZGVsZXRlIiwicmVtb3ZlRmFpbGVkIiwiY2IiLCJyZWFkZXIiLCJyZWFkQXNEYXRhVVJMIiwib25sb2FkIiwicmVzdWx0Iiwib25lcnJvciIsImFjY2VwdCIsInByZXZpb3VzSW1hZ2UiLCJvblJlbW92ZSIsImluZm9UZXh0IiwidHJpZ2dlciIsIkhlYWRlckJhclRhYiIsImNoaWxkcmVuIiwiQ3VzdG9tTGluayIsIkhlYWRlckJhciIsImdldExvZ29VcmwiLCJsb2dvVXJsIiwicGF0aCIsIkhlYWRlck5vdGlmaWNhdGlvbnMiLCJvbk5vdGlmaWNhdGlvbkNsaWNrZWQiLCJ0eXBlTmFtZSIsInJlZmVyZW5jZUlkIiwiZGF0YUxvYWRpbmciLCJub3RpZmljYXRpb25zIiwibG9hZE5vdGlmaWNhdGlvbnMiLCJ1bnNlZW5Ob3RpZmljYXRpb25zQ291bnQiLCJuQ291bnQiLCJzZWVuIiwiY24iLCJiaW5kIiwidW5pcU5vdGlmaWNhdGlvbnMiLCJ1bmlxQnkiLCJjYW5jZWxJY29uIiwiYnVja2V0SWNvbiIsImFkZEljb24iLCJleGNsYW1hdGlvblJvdW5kSWNvbiIsImNsb2NrUm91bmRJY29uIiwicGxheUljb24iLCJkb2NJY29uIiwiZWRpdEljb24iLCJibHVlRW52ZWxvcGVJY29uIiwic29sZEljb24iLCJleHBpcmVkSWNvbiIsImZpbHRlckljb24iLCJoYW1tZXJJY29uIiwieWVsbG93Q2hlY2tJY29uIiwiYmx1ZUNoZWNrSWNvbiIsImdyZXlNaW51c0ljb24iLCJTcGlubmVyIiwiYWxsVmFsdWUiLCJMYW5ndWFnZVNlbGVjdG9yIiwiaGFuZGxlT25DaGFuZ2UiLCJzZWxlY3Rpb24iLCJoYXNBbGwiLCJoYXNBbGxQcmV2IiwicHJldlNlbGVjdGlvbiIsInJlYWxMYW5ndWFnZXMiLCJhbGxMYW5ndWFnZXMiLCJMYW5ndWFnZVNlbGVjdG9yRXh0ZW5kZWQiLCJjb21wb25lbnREaWRNb3VudCIsInBsYWNlaG9sZGVyIiwiTGljZW5zZURvd25sb2FkZXIiLCJnZXRMaWNlbnNlIiwic3R5bGUiLCJpY29uU3R5bGUiLCJOZXdTZWFzb24iLCJnZXRFbmRPcHRpb25zIiwic2V0RGF0ZSIsInVwZGF0ZUZyb21NdWx0aXBsZSIsInN0YXJ0WWVhciIsInNob3dDbG9zZSIsInNlbGVjdG9yVHlwZSIsIlBvcHVwQ291bnRyeVNlbGVjdG9yIiwib3Blbk1vZGFsIiwiaXNPcGVuIiwic2VsZWN0b3IiLCJjYW5jZWxNb2RhbCIsImhhbmRsZU9wdGlvbkNoYW5nZSIsImNoYW5nZUV2ZW50IiwiaGFuZGxlQ291bnRyeUNoYW5nZSIsInJlbmRlck1vZGFsIiwic2hvd1RlcnJpdG9yaWVzIiwiYWN0aXZlVGVycml0b3J5IiwiSElHSExJR0hUX1NIT1ciLCJET0NVTUVOVEFSWSIsIlBSRVZJRVciLCJUQUxLX1NIT1ciLCJPVEhFUiIsIlJlZ2lvbkNvdW50cnlTZWxlY3RvciIsInNlbGVjdFdvcmxkd2lkZSIsInNlbGVjdFJlZ2lvbiIsImhhbmRsZUNoYW5nZSIsInRlcnJpdG9yeUlkIiwicmVnaW9uIiwiUmlnaHRzTGVnZW5kIiwiU2VhcmNoQ29tcGV0aXRpb24iLCJzZWFyY2hpbmciLCJpbnB1dCIsInJlc3VsdHMiLCJzZWFyY2hEb25lIiwicmVzdWx0TWVzc2FnZSIsImdldFJlc3VsdE1lc3NhZ2UiLCJoYW5kbGVJbnB1dCIsInByZXZTdGF0ZSIsInZhbGlkIiwicGFnZSIsInBhZ2VUb3RhbCIsInBhZ2VTaXplIiwicGFnZVF1YW50aXR5Iiwib3JpZ2luYWwiLCJjbG9zZSIsIk5ld0ZpeHR1cmUiLCJvbkFkZCIsInNob3dBZGQiLCJoYW5kbGVEYXRlIiwiU2Vhc29uU2VsZWN0b3IiLCJ0b2dnbGUiLCJzaG93U2NoZWR1bGUiLCJhZGRGaXh0dXJlIiwib25DaGFuZ2VGaXh0dXJlIiwib25DaGFuZ2VGaXh0dXJlRGF0ZSIsInJlbW92ZUZpeHR1cmUiLCJhY3RpdmVTZWFzb24iLCJ6SW5kZXgiLCJpc0N1c3RvbSIsImxvYWRpbmciLCJvcGVuU2VsZWN0b3IiLCJyZW1vdmVTZWFzb24iLCJvbkJsdXIiLCJzaG93QWRkTmV3IiwiYWRkU2Vhc29uIiwidXBkYXRlQ29udGVudFZhbHVlIiwiTW9kYWwiLCJzZXRBcHBFbGVtZW50IiwiU2VsZWN0b3JJdGVtIiwiU2VsZWN0b3IiLCJhZnRlck9wZW5Nb2RhbCIsInVwZGF0ZWQiLCJmaWx0ZXJVcGRhdGVkIiwiY3VzdG9tQ291bnRyeSIsImNsb3NlU2VsZWN0b3IiLCJnZXRBY3RpdmVGaWx0ZXIiLCJhY3RpdmVGaWx0ZXIiLCJnZXRBY3RpdmVGaWx0ZXJOYW1lIiwic2hvdWxkU2hvd0ZpbHRlcnMiLCJzZWxlY3Rvckl0ZW1zIiwic2hvdWxkU2hvd0ludGVybmF0aW9uYWxGaWx0ZXIiLCJzZXRBY3RpdmVGaWx0ZXIiLCJhcHBseVNlbGVjdGlvbiIsImV4dGVuZGVkIiwic2VsZWN0ZWRJdGVtcyIsInByZXZDb3VudHJpZXMiLCJoYXMiLCJhZGROZXdTZWFzb24iLCJjbGVhbiIsImFkZE5ld1Nwb3J0IiwiYWRkTmV3VG91cm5hbWVudCIsImFkZE5ld0NhdGVnb3J5Iiwic2VsZWN0SXRlbSIsImlzSXRlbVNlbGVjdGVkIiwiaXNJdGVtRGlzYWJsZWQiLCJzaG93QWxsQ291bnRyaWVzIiwiZmlsdGVyTGV0dGVyIiwidG9Mb3dlckNhc2UiLCJmaWx0ZXJJbnRlcm5hdGlvbmFsIiwicG9wdWxhckl0ZW1zIiwic3RvcmUiLCJzdWJzY3JpYmUiLCJTZWxlY3Rvck1vZGFsU3R5bGUiLCJzaG93TmV3U3BvcnQiLCJzaG93TmV3VG91cm5hbWVudCIsInNob3dOZXdTZWFzb24iLCJzaG93TmV3Q2F0ZWdvcnkiLCJTZW5kTWVzc2FnZSIsInNob3dTdWNjZXNzIiwic2VuZCIsInJlY2lwaWVudCIsInJvbGUiLCJUb29sdGlwIiwiVGVzdFBhZ2UiLCJjb250ZW50TGlzdGluZ0luaXQiLCJob21lV3JhcHBlciIsImdldEVsZW1lbnRCeUlkIiwiUmVhY3RET00iLCJyZW5kZXIiLCJMT0dPVVQiLCJMT0dJTiIsImRlZmF1bHRVc2VyIiwiZW1haWwiLCJmYWtlQXV0aCIsImlzQXV0aGVudGljYXRlZCIsImF1dGhlbnRpY2F0ZSIsInNldFRpbWVvdXQiLCJzaWdub3V0IiwiUHJpdmF0ZVJvdXRlIiwiY29tcG9uZW50IiwidXBkYXRlQnlQYXRoIiwicmVzdCIsIlB1YmxpY1JvdXRlIiwiTG9naW4iLCJyZWRpcmVjdFRvUmVmZXJyZXIiLCJsb2dpbiIsIkxvZ291dCIsImxvZ291dCIsIkF1dGhSb3V0ZXIiLCJsb2dnZWRVc2VyIiwic2V0TGFuZ3VhZ2UiLCJyb3V0ZXMiLCJleGFjdCIsImhlYWRlciIsIm1haW4iLCJsYW5nIiwiQ29tbWVyY2lhbEFjdGl2aXR5IiwiV2F0Y2hsaXN0IiwiQ2xvc2VkRGVhbHMiLCJNYW5hZ2VMaXN0aW5ncyIsInJlZHVjZXJzIiwiY29tYmluZVJlZHVjZXJzIiwibWFuYWdlIiwiaTE4blN0YXRlIiwiY3JlYXRlU3RvcmUiLCJsZWZ0IiwiYm90dG9tIiwidHJhbnNmb3JtIiwiYm9yZGVyUmFkaXVzIiwib3ZlcmxheSIsIkJvYXJkTGlzdGluZyIsInRvZ2dsZU9wdGlvbnMiLCJzaG93T3B0aW9ucyIsInN0ZXBUb1Nob3ciLCJzdWJtaXQiLCJ2aWV3IiwiaGlkZU9wdGlvbnMiLCJkZWZhdWx0QWN0aW9uIiwic2hvd0FyY2hpdmVDb25maXJtIiwic2hvd0RlYWN0aXZhdGVDb25maXJtIiwiY2xvY2tJY29uIiwiZHVwbGljYXRlSWNvbiIsInZpZXdJY29uIiwic3VibWl0SWNvbiIsImRvdHNJY29uIiwiZGVhY3RpdmF0ZUljb24iLCJzaG93RWRpdCIsInNob3dSZW1vdmUiLCJzaG93QXJjaGl2ZSIsInNob3dTdWJtaXQiLCJzaG93RHVwbGljYXRlIiwic2hvd0RlYWN0aXZhdGUiLCJzaG93VmlldyIsIm9uQXJjaGl2ZSIsIm9uRHVwbGljYXRlIiwib25EZWFjdGl2YXRlIiwibGFzdEFjdGlvbiIsImxhc3RBY3Rpb25EYXRlIiwibGFzdEFjdGlvblVzZXIiLCJoYXNBY3Rpdml0eSIsImhhc1BlbmRpbmdCaWRzIiwib25TdWJtaXQiLCJzaG93U3RhdHVzSW5mbyIsIlN1cGVyUmlnaHRCb2FyZExhYmVscyIsInJpZ2h0SW1hZ2VTdHlsZSIsInNvbGRMaXN0aW5nIiwiZXhjbHVkaW5nIiwiZGVsZXRlQmlkIiwidXBkYXRlIiwiZmlsdGVyZWQiLCJzZWxlY3RlZExpc3RpbmdzIiwiYnVsbGV0SWNvbiIsImFjdGl2ZUJ1bGxldEljb24iLCJhbGxMaXN0aW5ncyIsImZpbHRlclN0cmluZyIsImlkU3RyaW5nIiwiZHVwbGljYXRlIiwiZHJhZnQiLCJsb2FkaW5nRHJhZnQiLCJ1bnNoaWZ0IiwiZGVhY3RpdmF0ZSIsImluYWN0aXZlIiwibG9hZGluZ0luYWN0aXZlIiwibG9hZGluZ0FjdGl2ZSIsImxvYWRpbmdFeHBpcmVkIiwiYWN0aXZlIiwiZXhwaXJlZCIsIk1lc3NhZ2VzIiwic2VsZWN0VGhyZWFkIiwic2VsZWN0ZWRUaHJlYWQiLCJ1cGRhdGVNZXNzYWdlcyIsInRocmVhZCIsImxvYWRpbmdNZXNzYWdlcyIsIm1lc3NhZ2VzIiwiaW5wdXRNZXNzYWdlIiwidGhyZWFkcyIsImxvYWRpbmdUaHJlYWRzIiwiYURhdGUiLCJsYXN0TWVzc2FnZURhdGUiLCJiRGF0ZSIsIm9wcG9zaXRlUGFydHkiLCJsYXN0TWVzc2FnZVVzZXIiLCJsYXN0TWVzc2FnZUNvbnRlbnQiLCJvd25Db21wYW55TWVzc2FnZSIsInNlbmRlciIsIm93bk1lc3NhZ2UiLCJQZW5kaW5nRGVhbHMiLCJsb2FkaW5nRGVjbGluZWQiLCJkZWNsaW5lZEJpZHMiLCJTZXR0aW5ncyIsInVwZGF0aW5nQ29tcGFueSIsImVkaXRDb21wYW55SW5mbyIsInVwZGF0aW5nVXNlciIsImVkaXRQZXJzb25hbEluZm8iLCJ1cGRhdGluZ1Bhc3N3b3JkIiwicGFzc3dvcmQiLCJwYXNzd29yZENoZWNrIiwicGFzc3dvcmRVcGRhdGVkIiwicGFzcyIsImRpZ2l0IiwidXBwZXIiLCJzcGVjaWFsIiwiaW52YWxpZFBhc3N3b3JkIiwib2xkUGFzc3dvcmQiLCJsb2FkaW5nQ29tcGFueVVzZXJzIiwiY29tcGFueVVzZXJzIiwicGhvbmUiLCJtYW5hZ2VUeXBlcyIsInNjcm9sbFRvcE1haW5Db250ZW50IiwibWFpbkNvbnRlbnQiLCJxdWVyeVNlbGVjdG9yQWxsIiwic2Nyb2xsSW50b1ZpZXciLCJnb1RvUHJldmlvdXNTdGVwIiwiR09fVE9fUFJFVklPVVNfU1RFUCIsImdvVG9OZXh0U3RlcCIsIkdPX1RPX05FWFRfU1RFUCIsImdvVG9TdGVwIiwiR09fVE9fU1RFUCIsInN0ZXBDaGFuZ2VSZXNldCIsIlNURVBfQ0hBTkdFX1JFU0VUIiwiQXBwbGljYWJsZUxhdyIsImxhdyIsIkNvbW1lbnRzIiwidXBkYXRlQ29udGVudCIsInByb3BOYW1lIiwiYWRkQ29tbWVudHMiLCJjb21tZW50cyIsIkNvbXBhbnlJbmZvcm1hdGlvbiIsInVwZGF0ZUNvbXBhbnlDb250ZW50Iiwib25EYXRhQ2hhbmdlIiwidXBkYXRlQ291bnRyeSIsInZhbCIsIm9uT0tDbGljayIsImNvdW50ZXIiLCJDVVJSRU5DSUVTIiwiQ3VycmVuY3lTZWxlY3RvciIsIkV4cGlyYXRpb25EYXRlU2VsZWN0b3IiLCJoYW5kbGVTdGFydERhdGUiLCJKdXJpc2RpY3Rpb25TZWxlY3RvciIsImp1cmlzZGljdGlvbiIsIkxpY2Vuc2VEYXRlU2VsZWN0b3IiLCJoYW5kbGVFbmREYXRlIiwiaGFuZGxlRW5kRGF0ZUxpbWl0Iiwib25DbG9zZSIsInNhdmVCdXR0b25Ub29sdGlwIiwiZ2V0U2F2ZUJ1dHRvblRvb2x0aXAiLCJpc1ZhbGlkIiwiaXNCZWZvcmUiLCJpc05hTiIsIkxpc3RpbmdOYW1lIiwidXBkYXRlTmFtZSIsImVsZW1lbnQiLCJub2RlIiwidGV4dENvbnRlbnQiLCJNYXRjaCIsImNvbXBldGl0b3JzTGVuIiwibnVtYmVyRmllbGRTdHlsZSIsImdldExhbmd1YWdlc1N0cmluZyIsImdldEN1c3RvbVZhbHVlU3RyaW5nIiwiZmlyc3RQYWNrYWdlIiwiY3VycmVudFJpZ2h0cyIsInJpZ2h0SXRlbXNEZWZpbml0aW9ucyIsInByZWRpY2F0ZSIsInJpZ2h0TGFiZWwiLCJuYW1lVG9DdXN0b21WYWx1ZUNvbmZpZyIsInJpZ2h0TGFiZWxDdXN0b20iLCJDQU1FUkEiLCJSVU5TIiwiQVNQRUNUX1JBVElPIiwiQ09NTUVOVEFSWSIsIkdSQVBISUNTIiwiUG9wdXBSaWdodCIsInRvZ2dsZUFsbCIsImFjdGl2ZVBhY2thZ2VzIiwicmlnaHRQYWNrYWdlIiwidW5zZWxlY3QiLCJpc1NlbGVjdGVkIiwicGFja2FnZUlzQWN0aXZlIiwiYXZhaWxhYmxlUGFja2FnZXMiLCJ0b2dnbGVQb3B1cCIsIm9uUHJvZ3JhbSIsInByZXZSaWdodHNQYWNrYWdlIiwiY2xvbmVEZWVwIiwiY2xvc2VQb3B1cEFuZFJlc3RvcmVEYXRhIiwib25PS0NsaWNrZWQiLCJ1cGRhdGVTZWxlY3Rpb24iLCJ1cGRhdGVNdWx0aXBsZVNlbGVjdGlvbiIsImFsbHMiLCJvYmplY3QiLCJ1cGRhdGVTZWxlY3Rpb25JbkFsbFBhY2thZ2VzIiwiaXNNdWx0aXBsZVZhbHVlc1NlbGVjdGVkIiwicmlnaHRzUGFja2FnZXMiLCJjdXJyZW50IiwiaXNFcXVhbCIsImhhc1NlbGVjdGlvbiIsInN1cGVyUmlnaHRzIiwic3VwZXJSaWdodCIsIkNPTlRFTlRfREVMSVZFUlkiLCJyZW5kZXJNb2RhbFJvdyIsIm9wdGlvbnMiLCJwcm9kdWN0aW9uTGFiZWwiLCJwcm9kdWN0aW9uTGFiZWxzIiwib3B0aW9uIiwibGFuZ3VhZ2UiLCJoaWRlSWYiLCJzbCIsImRpc2FibGVkSWYiLCJ0ZXh0RmllbGQiLCJudW1iZXJGaWVsZCIsImdldE51bWJlckZpZWxkS2V5IiwiYmlnVGV4dEZpZWxkIiwic2hvd1RleHRBcmVhIiwiZ2xvYmFsIiwib25VcGRhdGVMaXN0aW5nIiwiZGVsaXZlcnlWaWFMaXZlRmVlZCIsImN1c3RvbVByb3AiLCJzaG93T2tCdXR0b24iLCJjb250ZW50RGVsaXZlcnlDb3VudGVyIiwibnVtYmVyS2V5IiwibnVtYmVyU3RyaW5nIiwidG9OdW1iZXIiLCJpc0Zpbml0ZSIsInJpZ2h0SXRlbURlZmluaXRpb24iLCJudW1iZXJGaWVsZFZhbHVlIiwicHJvZ3JhbU5hbWUiLCJyaWdodHNQYWNrYWdlRmlsdGVyZWQiLCJmaWx0ZXJSaWdodHNQYWNrYWdlIiwiZGlzcGxheWVkVmFsdWUiLCJnZXRDdXJyZW50Q3VzdG9tVmFsdWVTdHJpbmciLCJpc1NpbmdsZUxhYmVsIiwiUHJvZHVjdGlvblN0YW5kYXJkc0RlZmluaXRpb25zIiwiUmlnaHREZWZhdWx0cyIsIkxJVkVfRkVFRF9BU1BFQ1RfUkFUSU8iLCJMSVZFX0ZFRURfQ09NTUVOVEFSWSIsIkxJVkVfRkVFRF9HUkFQSElDUyIsIkxJVkVfRkVFRF9DQU1FUkEiLCJMSVZFX0ZFRURfVEVDSE5JQ0FMX0RFTElWRVJZIiwiTElWRV9GRUVEX0NBTUVSQVMiLCJMSVZFX0ZFRURfVklERU9fU1RBTkRBUkQiLCJSaWdodERlZmF1bHRzQnlTdXBlclJpZ2h0IiwiUmlnaHREZWZpbml0aW9ucyIsIlJvdW5kIiwiYWN0aXZlUm91bmQiLCJzZWxlY3RBbGwiLCJ0b2dnbGVNYXRjaGVzIiwic2hvd01hdGNoZXMiLCJnZXRTZWxlY3RlZCIsInNjaGVkdWxlIiwiaW5zdGFsbG1lbnRJY29uU3R5bGUiLCJzbWFsbENvbnRhaW5lclN0eWxlIiwib3ZlcmZsb3dZIiwiY29udGFpbmVyU3R5bGUiLCJTYWxlc1BhY2thZ2VFZGl0Iiwic2FsZXNQYWNrYWdlSWQiLCJhc0J1bmRsZSIsImluZGl2aWR1YWxseSIsIndvcmxkd2lkZUV4Y2x1ZGluZyIsImZpeGVkIiwiYmlkZGluZyIsImZpbHRlclRlcnJpdG9yaWVzIiwiaXNOZXciLCJzZXRCdW5kbGVNZXRob2QiLCJmaWxsVGVycml0b3JpZXMiLCJzZXRUZXJyaXRvcmllc01ldGhvZCIsImdldEZpbHRlclRlcnJpdG9yaWVzIiwiZXhjbHVzaXZpdHkiLCJnZXRFeGNsdWRlZFRlcnJpdG9yaWVzIiwicG9zIiwic2VsZiIsInByZXNlbGVjdGVkRXhjbHVkZWQiLCJzZXRTYWxlc01ldGhvZCIsImdldE5hbWUiLCJ0ZXJyaXRvcmllc0J5TGFiZWwiLCJlZGl0ZWQiLCJzZWxlY3RUZXJyaXRvcmllcyIsInNldEluc3RhbGxtZW50VHlwZSIsInNldEluc3RhbGxtZW50RGF0ZSIsInNldEluc3RhbGxtZW50RGF5cyIsInNldEluc3RhbGxtZW50VmFsdWUiLCJhZGRJbnN0YWxsbWVudCIsInJlbW92ZUluc3RhbGxtZW50IiwidXBkYXRlRmVlIiwiaW5zdGFsbG1lbnRzSW5jb21wbGV0ZSIsIlNhbGVzUGFja2FnZUZvcm0iLCJlZGl0U2FsZXNQYWNrYWdlIiwib25FZGl0IiwidGVycml0b3JpZXNBcnJheSIsIndvcmxkd2lkZUF2YWlsYWJsZSIsInRlcnJpdG9yaWVzQXNBcnJheSIsInNhbGVzUGFja2FnZXNMaXN0IiwiYWRkQnVuZGxlc0F2YWlsYWJsZSIsImhhbmRsZVRlcnJpdG9yaWVzIiwidGVycml0b3JpZXNRdWFudGl0eSIsImlzRmlsdGVyRW5hYmxlZCIsImlzTXVsdGlwbGVFbmFibGVkIiwiaXNFeGNsdWRlZFRlcnJpdG9yaWVzRW5hYmxlZCIsImlzV29ybGR3aWRlRW5hYmxlZCIsInZlcnRpY2FsQWxpZ24iLCJ0ZXJyaXRvcmllc0luY29tcGxldGUiLCJoaWRlQnV0dG9ucyIsImZ1bGxTaXplIiwic2VsZWN0Q3VycmVuY3kiLCJyZW5kZXJBZGRTYWxlc0J1bmRsZUJ1dHRvbiIsIm9uUmVtb3ZlQWxsIiwiU2VsbEZvcm0iLCJpbml0aWFsaXplZCIsIm5ld0xpc3RpbmciLCJzaG93U2VhcmNoIiwiRGVzY3JpcHRpb24iLCJUaXRsZUJhciIsInN1YnRpdGxlIiwiU3VtbWFyeVRleHQiLCJzdW1tYXJ5Iiwic2Vhc29uc1N0ciIsIk5ld0NhdGVnb3J5IiwiTmV3VG91cm5hbWVudCIsIlNjaGVkdWxlcyIsIlN0YXRpY1NjaGVkdWxlcyIsIlNwb3J0U2VsZWN0b3IiLCJoYW5kbGUiLCJvblVwZGF0ZU5ldyIsImFkZFNwb3J0U2VsZWN0b3IiLCJTdGF0aWNSb3VuZCIsImNvbXBsZXRlU2Vhc29uIiwiY29tcGxldGUiLCJjaSIsIlN1cGVyUmlnaHREZWZpbml0aW9ucyIsIlN1cGVyUmlnaHQiLCJvbkV4Y2x1c2l2ZSIsIm9uQ2hhbmdlSW5wdXQiLCJpbnB1dFZhbHVlcyIsImRlZkJ5TGFiZWwiLCJpbnB1dERhdGEiLCJQYWNrYWdlU2VsZWN0b3IiLCJ1cGRhdGVTdXBlclJpZ2h0c0xpc3QiLCJzdXBlclJpZ2h0c1VwZGF0ZWQiLCJkZWZhdWx0UmlnaHRzIiwicmVzZXRTdXBlclJpZ3RocyIsInJlc2V0IiwiUmV2aWV3QW5kU2lnbiIsInNjcm9sbCIsInN0ZXBDaGFuZ2UiLCJzY3JvbGxUbyIsImdldFN0YXRlIiwic2hvd1N1Ym1pdHRpbmciLCJ1cGRhdGVTYWxlc1BhY2thZ2UiLCJ1cGRhdGVTYWxlc1BhY2thZ2VzIiwicmVtb3ZlU2FsZXNQYWNrYWdlIiwic2FsZXNQYWNrYWdlVG9FZGl0IiwiZWRpdE9wZW4iLCJ0b2dnbGVEZXRhaWxzIiwidGVybXNBdXRvU2VsZWN0ZWQiLCJ0ZXJtc19hcmVuYSIsIk1JTl9QUk9HUkFNX0RFU0NfTEVOR1RIIiwiU2VsbEJ1dHRvbnMiLCJzYXZlQW5kR29OZXh0IiwibmV4dFN0ZXAiLCJzYXZpbmdTdWNjZXNzIiwicmV2aWV3QW5kU2lnbkVuYWJsZWQiLCJ2YXRQZXJjZW50YWdlIiwicmV2aWV3QW5kU2lnbkdldE1lc3NhZ2VzIiwicHJvZ3JhbUlzVmFsaWQiLCJwcm9ncmFtIiwic3RlcDJFbmFibGVkIiwic3RlcDNFbmFibGVkIiwic3RlcDNHZXRNZXNzYWdlcyIsInN0ZXAxRW5hYmxlZCIsInN0ZXAxR2V0TWVzc2FnZXMiLCJzdGVwMkdldE1lc3NhZ2VzIiwiZ2V0VG9vbHRpcE1lc3NhZ2VzIiwiZ2V0UmV2aWV3QnV0dG9uVG9vbHRpcE1lc3NhZ2VzIiwib25DbGlja1N0ZXAiLCJzdGVwU2VsZWN0ZWQiLCJtYXhTdGVwIiwiZ29Ub1Jldmlld0FuZFNpZ24iLCJzYXZlUHJvbWlzZSIsInByZXZTdGVwIiwiRGF0ZSIsImxhc3RTdGVwIiwidmlzaXRlZCIsImNhbnRSZXZpZXdBbmRTaWduIiwiU2VsbEZvcm1TdGVwMSIsImZvcmNlQ3VzdG9tVG91cm5hbWVudCIsImhhc0N1c3RvbVNwb3J0IiwiaGFzQ3VzdG9tQ2F0ZWdvcnkiLCJzcG9ydENhdGVnb3J5RXh0ZW5kZWQiLCJmb3JjZUN1c3RvbUNhdGVnb3J5IiwiZm9yY2VDdXN0b21TZWFzb24iLCJoYXNDdXN0b21Ub3VybmFtZW50Iiwic3BvcnRDYXRlZ29yaWVzIiwiaGFzQ3VzdG9tU2Vhc29uIiwic2Vhc29uU2VsZWN0b3JzIiwic3BvcnRTZWxlY3RvcnMiLCJyZW1vdmVTcG9ydCIsInJlbW92ZU5ld1Nwb3J0IiwicmVtb3ZlRnJvbU11bHRpcGxlIiwicmVtb3ZlTmV3U2Vhc29uIiwidG9nZ2xlU2VhcmNoIiwic2VsZWN0VG91cm5hbWVudCIsIndlYnNpdGVzVXBkYXRlZCIsIndlYnNpdGVzIiwiaGFuZGxlV2Vic2l0ZUNoYW5nZSIsImFkZEZpbGUiLCJ1cGRhdGVBdHRhY2htZW50cyIsInJlbW92ZUZpbGUiLCJzaG93U2Vhc29uU2VsZWN0b3IiLCJsYXN0U3BvcnRJZCIsImxhc3RDYXRlZ29yeUlkIiwibGFzdFRvdXJuYW1lbnRJZCIsImxvYWRpbmdDYXRlZ29yaWVzIiwibG9hZGluZ1RvdXJuYW1lbnRzIiwibG9hZGluZ1NlYXNvbnMiLCJnZXRUaW1lIiwiY2F0ZWdvcmllcyIsIkNhdGVnb3JpZXMiLCJUb3VybmFtZW50cyIsImN1c3RvbVNlYXNvbnNQYXJzZWQiLCJTZWFzb25zIiwibG9hZENhdGVnb3JpZXMiLCJsb2FkVG91cm5hbWVudHMiLCJsb2FkU2Vhc29ucyIsIndlYnNpdGVQbGFjZWhvbGRlciIsImlucHV0UHJvcHMiLCJvcGVuU3BvcnRTZWxlY3RvciIsIm9wZW5DYXRlZ29yeVNlbGVjdG9yIiwicmVtb3ZlTmV3Q2F0ZWdvcnkiLCJvcGVuVG91cm5hbWVudFNlbGVjdG9yIiwicmVtb3ZlTmV3VG91cm5hbWVudCIsIm9wZW5TZWFzb25TZWxlY3RvciIsIlNlbGxGb3JtU3RlcDIiLCJsb2FkUmlnaHRzIiwidXBkYXRlUmlnaHQiLCJzdXBlclJpZ2h0c0VuYWJsZWQiLCJsaWNlbnNlUG9wdXAiLCJwcm9kdWN0aW9uU3RhbmRhcmRzIiwiZWRpdGVkUHJvZ3JhbSIsImxpY2Vuc2VTdHlsZXMiLCJTZWxsRm9ybVN0ZXAzIiwiY2xvc2VQcm9ncmFtc1BvcHVwIiwicHJvZ3JhbVBvcHVwQWN0aXZlIiwiY2xvc2VMaWNlbnNlUG9wdXAiLCJzZWxlY3RMaWNlbnNlRGF0ZXMiLCJza2lwQ29udGVudERlbGl2ZXJ5Iiwic2hvd0xpY2Vuc2VQb3B1cCIsInJlbmRlclByb2dyYW1Qb3B1cCIsInVwZGF0ZVByb2dyYW0iLCJTZWxsRm9ybVN0ZXA0IiwiYWRkU2FsZXNQYWNrYWdlIiwiYWRkU2FsZXNQYWNrYWdlcyIsInJlbW92ZUFsbFNhbGVzUGFja2FnZSIsImFubmV4IiwidXBkYXRlQW5uZXgiLCJTZWxsRm9ybVN0ZXAiLCJzdGVwVmlzaXRlZCIsInN0ZXBGaW5pc2hlZCIsIlNlbGxGb3JtU3RlcHMiLCJzdGVwcyIsInN0ZXBJdGVtIiwiQ09OVEVOVF9JTklUIiwiQUREX05FVyIsIlJFTU9WRV9ORVciLCJTVVBFUl9SSUdIVFNfVVBEQVRFRCIsIlVQREFURV9DT05URU5UX1ZBTFVFIiwiU0VMRUNUX1RPVVJOQU1FTlQiLCJSRU1PVkVfRlJPTV9NVUxUSVBMRSIsIlVQREFURV9GUk9NX01VTFRJUExFIiwiQVBQTFlfU0VMRUNUSU9OIiwiVVBEQVRFX1NBTEVTX1BBQ0tBR0VTIiwiVVBEQVRFX0FUVEFDSE1FTlRTIiwiVVBEQVRFX0FOTkVYIiwiQUREX1NBTEVTX1BBQ0tBR0VTIiwiUkVTRVQiLCJFbXB0eUxpc3RpbmciLCJuZXdTdGF0ZSIsIm1heCIsIm5ld1N0ZXAiLCJsaXN0aW5nRWRpdGVkIiwiT1BFTl9TRUxFQ1RPUiIsIkNMT1NFX1NFTEVDVE9SIiwidHJhbnNsYXRpb25zIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7O0FBQUEsNkY7Ozs7Ozs7Ozs7Ozs7QUNBQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLDRDQUE0QztBQUM1Qzs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsR0FBRztBQUNIOzs7Ozs7Ozs7Ozs7OztBQ25MQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLE9BQU87QUFDbEIsWUFBWSxNQUFNO0FBQ2xCO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7Ozs7Ozs7Ozs7Ozs7O0FDbkRBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVyxRQUFRO0FBQ25CO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTs7Ozs7Ozs7Ozs7Ozs7QUNsQkE7O0FBRUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLFNBQVM7QUFDcEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxHQUFHOztBQUVIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsR0FBRztBQUNIOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFD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QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Ozs7Ozs7Ozs7Ozs7QUM5U0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOzs7Ozs7Ozs7Ozs7O0FDcEJBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTs7Ozs7Ozs7Ozs7OztBQ05BO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsTUFBTTtBQUNqQjtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBOzs7Ozs7Ozs7Ozs7O0FDL0JBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsTUFBTTtBQUNqQjtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBOzs7Ozs7Ozs7Ozs7O0FDL0JBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTs7Ozs7Ozs7Ozs7OztBQ05BO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsTUFBTTtBQUNqQjtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBOzs7Ozs7Ozs7Ozs7O0FDL0JBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTs7Ozs7Ozs7Ozs7OztBQ05BO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTs7Ozs7Ozs7Ozs7OztBQ05BO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLE1BQU07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Q0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVyxFQUFFO0FBQ2IsV0FBVyxRQUFRO0FBQ25CO0FBQ0E7QUFDQTtBQUNBLFdBQVcsU0FBUztBQUNwQixXQUFXLE9BQU87QUFDbEIsV0FBVyxPQUFPO0FBQ2xCLFdBQVcsT0FBTztBQUNsQixhQUFhLEVBQUU7QUFDZjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxzQ0FBc0M7QUFDdEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxLQUFLOztBQUVMO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsS0FBSzs7QUFFTDtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7O0FBRUE7Ozs7Ozs7Ozs7Ozs7QUMxS0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVyxPQUFPO0FBQ2xCLGFBQWEsT0FBTztBQUNwQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDOztBQUVEOzs7Ozs7Ozs7Ozs7O0FDN0JBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLGFBQWE7QUFDeEIsV0FBVyxTQUFTO0FBQ3BCLGFBQWEsYUFBYTtBQUMxQjtBQUNBOztBQUVBOzs7Ozs7Ozs7Ozs7O0FDYkE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsTUFBTTtBQUNqQixXQUFXLFNBQVM7QUFDcEIsV0FBVyxTQUFTO0FBQ3BCLGFBQWEsRUFBRTtBQUNmO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7Ozs7Ozs7Ozs7OztBQy9CQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVyxNQUFNO0FBQ2pCLFdBQVcsU0FBUztBQUNwQixXQUFXLE9BQU87QUFDbEIsV0FBVyxRQUFRO0FBQ25CLGFBQWEsT0FBTztBQUNwQjtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7Ozs7Ozs7Ozs7OztBQ3ZCQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVyxNQUFNO0FBQ2pCLFdBQVcsT0FBTztBQUNsQixXQUFXLFFBQVE7QUFDbkIsV0FBVyxRQUFRO0FBQ25CLFdBQVcsTUFBTTtBQUNqQixhQUFhLE1BQU07QUFDbkI7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBOzs7Ozs7Ozs7Ozs7O0FDckNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsT0FBTztBQUNsQixXQUFXLFNBQVM7QUFDcEIsV0FBVyxTQUFTO0FBQ3BCLGFBQWEsT0FBTztBQUNwQjtBQUNBOztBQUVBOzs7Ozs7Ozs7Ozs7O0FDZkE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsT0FBTztBQUNsQixXQUFXLFNBQVM7QUFDcEIsYUFBYSxPQUFPO0FBQ3BCO0FBQ0E7QUFDQTtBQUNBOztBQUVBOzs7Ozs7Ozs7Ozs7O0FDZkE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsT0FBTztBQUNsQixXQUFXLGFBQWE7QUFDeEIsYUFBYSxFQUFFO0FBQ2Y7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7Ozs7Ozs7Ozs7OztBQ3ZCQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsT0FBTztBQUNsQixXQUFXLFNBQVM7QUFDcEIsV0FBVyxTQUFTO0FBQ3BCLGFBQWEsTUFBTTtBQUNuQjtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBOzs7Ozs7Ozs7Ozs7O0FDbkJBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsRUFBRTtBQUNiLGFBQWEsT0FBTztBQUNwQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7Ozs7Ozs7Ozs7Ozs7QUMzQkE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLEVBQUU7QUFDYixXQUFXLEVBQUU7QUFDYixhQUFhLFFBQVE7QUFDckI7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7Ozs7Ozs7Ozs7OztBQ2JBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVyxPQUFPO0FBQ2xCLFdBQVcsYUFBYTtBQUN4QixhQUFhLFFBQVE7QUFDckI7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7Ozs7Ozs7Ozs7Ozs7QUNaQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLE1BQU07QUFDakIsV0FBVyxFQUFFO0FBQ2IsV0FBVyxPQUFPO0FBQ2xCLGFBQWEsT0FBTztBQUNwQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7Ozs7Ozs7Ozs7Ozs7QUNuQkE7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVyxFQUFFO0FBQ2IsYUFBYSxRQUFRO0FBQ3JCO0FBQ0E7QUFDQTtBQUNBOztBQUVBOzs7Ozs7Ozs7Ozs7O0FDakJBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsRUFBRTtBQUNiLFdBQVcsRUFBRTtBQUNiLFdBQVcsUUFBUTtBQUNuQjtBQUNBO0FBQ0EsV0FBVyxTQUFTO0FBQ3BCLFdBQVcsT0FBTztBQUNsQixhQUFhLFFBQVE7QUFDckI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7Ozs7Ozs7Ozs7Ozs7QUMzQkE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLE9BQU87QUFDbEIsV0FBVyxPQUFPO0FBQ2xCLFdBQVcsT0FBTztBQUNsQixXQUFXLFNBQVM7QUFDcEIsV0FBVyxTQUFTO0FBQ3BCLFdBQVcsT0FBTztBQUNsQixhQUFhLFFBQVE7QUFDckI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7Ozs7Ozs7Ozs7OztBQ2xGQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLEVBQUU7QUFDYixhQUFhLFFBQVE7QUFDckI7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7Ozs7Ozs7Ozs7Ozs7QUNqQkE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLE9BQU87QUFDbEIsV0FBVyxPQUFPO0FBQ2xCLFdBQVcsTUFBTTtBQUNqQixXQUFXLFNBQVM7QUFDcEIsYUFBYSxRQUFRO0FBQ3JCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7Ozs7Ozs7Ozs7Ozs7QUM3REE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLEVBQUU7QUFDYixhQUFhLFFBQVE7QUFDckI7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7Ozs7Ozs7Ozs7Ozs7QUNYQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG9DQUFvQzs7QUFFcEM7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLEVBQUU7QUFDYixhQUFhLFFBQVE7QUFDckI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBOzs7Ozs7Ozs7Ozs7O0FDOUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsRUFBRTtBQUNiLGFBQWEsUUFBUTtBQUNyQjtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7Ozs7Ozs7Ozs7OztBQ2pCQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsRUFBRTtBQUNiLGFBQWEsUUFBUTtBQUNyQjtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBOzs7Ozs7Ozs7Ozs7O0FDM0RBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLEVBQUU7QUFDYixhQUFhLFNBQVM7QUFDdEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7Ozs7Ozs7Ozs7OztBQzlCQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsT0FBTztBQUNsQixhQUFhLE1BQU07QUFDbkI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7Ozs7Ozs7Ozs7Ozs7QUM3QkE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsT0FBTztBQUNsQixhQUFhLE1BQU07QUFDbkI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7Ozs7Ozs7Ozs7Ozs7QUNoQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsYUFBYTtBQUN4QixXQUFXLFNBQVM7QUFDcEIsYUFBYSxNQUFNO0FBQ25CO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTs7QUFFQTs7Ozs7Ozs7Ozs7OztBQ3JCQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLE9BQU87QUFDbEIsYUFBYSxTQUFTO0FBQ3RCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBOzs7Ozs7Ozs7Ozs7O0FDckJBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsT0FBTztBQUNsQixXQUFXLEVBQUU7QUFDYixhQUFhLFNBQVM7QUFDdEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBOzs7Ozs7Ozs7Ozs7O0FDaENBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVyxhQUFhO0FBQ3hCLFdBQVcsNkJBQTZCO0FBQ3hDLFdBQVcsU0FBUztBQUNwQixhQUFhLE1BQU07QUFDbkI7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMLFlBQVk7QUFDWixHQUFHOztBQUVIO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7O0FBRUE7Ozs7Ozs7Ozs7Ozs7QUNqQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLE9BQU87QUFDbEIsYUFBYSxTQUFTO0FBQ3RCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7Ozs7Ozs7Ozs7OztBQ2JBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVyxhQUFhO0FBQ3hCLGFBQWEsU0FBUztBQUN0QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7Ozs7Ozs7Ozs7Ozs7QUNmQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLFNBQVM7QUFDcEIsV0FBVyxPQUFPO0FBQ2xCLGFBQWEsU0FBUztBQUN0QjtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7Ozs7Ozs7Ozs7OztBQ2hCQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLFNBQVM7QUFDcEIsV0FBVyxTQUFTO0FBQ3BCLGFBQWEsU0FBUztBQUN0QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDs7QUFFQTs7Ozs7Ozs7Ozs7OztBQ3JCQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLE1BQU07QUFDakIsV0FBVyxTQUFTO0FBQ3BCLGFBQWEsTUFBTTtBQUNuQjtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBOzs7Ozs7Ozs7Ozs7O0FDcEJBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLE9BQU87QUFDbEIsV0FBVyxTQUFTO0FBQ3BCLGFBQWEsTUFBTTtBQUNuQjtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBOzs7Ozs7Ozs7Ozs7O0FDbkJBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLEVBQUU7QUFDYixhQUFhLE9BQU87QUFDcEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7Ozs7Ozs7Ozs7Ozs7QUNwQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLFNBQVM7QUFDcEIsYUFBYSxTQUFTO0FBQ3RCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7Ozs7Ozs7Ozs7OztBQ2JBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVyxNQUFNO0FBQ2pCLFdBQVcsU0FBUztBQUNwQixXQUFXLFNBQVM7QUFDcEIsYUFBYSxNQUFNO0FBQ25CO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7Ozs7Ozs7Ozs7OztBQ3ZFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsT0FBTztBQUNsQixXQUFXLE9BQU87QUFDbEIsYUFBYSxRQUFRO0FBQ3JCO0FBQ0E7QUFDQTtBQUNBOztBQUVBOzs7Ozs7Ozs7Ozs7O0FDWkE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLEVBQUU7QUFDYixXQUFXLE9BQU87QUFDbEIsYUFBYSxNQUFNO0FBQ25CO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBOzs7Ozs7Ozs7Ozs7O0FDcEJBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVyxZQUFZO0FBQ3ZCLGFBQWEsWUFBWTtBQUN6QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7Ozs7Ozs7Ozs7Ozs7QUNmQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLE9BQU87QUFDbEIsV0FBVyxRQUFRO0FBQ25CLGFBQWEsT0FBTztBQUNwQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7Ozs7Ozs7Ozs7Ozs7O0FDbENBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVyxPQUFPO0FBQ2xCLFdBQVcsUUFBUTtBQUNuQixhQUFhLE9BQU87QUFDcEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7Ozs7Ozs7Ozs7OztBQ2ZBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLE9BQU87QUFDbEIsYUFBYSxPQUFPO0FBQ3BCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7Ozs7Ozs7Ozs7OztBQ2hCQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLE9BQU87QUFDbEIsYUFBYSxPQUFPO0FBQ3BCO0FBQ0E7QUFDQTtBQUNBOztBQUVBOzs7Ozs7Ozs7Ozs7O0FDakJBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVyxPQUFPO0FBQ2xCLFdBQVcsUUFBUTtBQUNuQixhQUFhLE9BQU87QUFDcEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7Ozs7Ozs7Ozs7OztBQ2ZBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVyxFQUFFO0FBQ2IsV0FBVyxFQUFFO0FBQ2IsYUFBYSxPQUFPO0FBQ3BCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7Ozs7Ozs7Ozs7Ozs7QUN4Q0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVyxPQUFPO0FBQ2xCLFdBQVcsT0FBTztBQUNsQixXQUFXLG1CQUFtQjtBQUM5QixhQUFhLE9BQU87QUFDcEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7Ozs7Ozs7Ozs7Ozs7QUMzQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLE1BQU07QUFDakIsV0FBVyxNQUFNO0FBQ2pCLGFBQWEsTUFBTTtBQUNuQjtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7Ozs7Ozs7Ozs7Ozs7QUNuQkE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsT0FBTztBQUNsQixXQUFXLE1BQU07QUFDakIsV0FBVyxPQUFPLFdBQVc7QUFDN0IsV0FBVyxTQUFTO0FBQ3BCLGFBQWEsT0FBTztBQUNwQjtBQUNBO0FBQ0E7QUFDQSx3QkFBd0I7O0FBRXhCO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBOzs7Ozs7Ozs7Ozs7O0FDdkNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLE9BQU87QUFDbEIsV0FBVyxPQUFPLFdBQVc7QUFDN0IsYUFBYSxPQUFPO0FBQ3BCO0FBQ0E7QUFDQTtBQUNBOztBQUVBOzs7Ozs7Ozs7Ozs7O0FDZkE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsT0FBTztBQUNsQixXQUFXLE9BQU8sV0FBVztBQUM3QixhQUFhLE9BQU87QUFDcEI7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7Ozs7Ozs7Ozs7Ozs7QUNmQTs7QUFFQTtBQUNBOztBQUVBOzs7Ozs7Ozs7Ozs7O0FDTEE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLFNBQVM7QUFDcEIsV0FBVyxRQUFRO0FBQ25CLGFBQWEsU0FBUztBQUN0QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7Ozs7Ozs7Ozs7OztBQy9CQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsUUFBUTtBQUNuQixhQUFhLFNBQVM7QUFDdEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBOzs7Ozs7Ozs7Ozs7O0FDeEJBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVyxNQUFNO0FBQ2pCLGFBQWEsT0FBTztBQUNwQjtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7Ozs7Ozs7Ozs7OztBQ2xCQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLFFBQVE7QUFDbkI7QUFDQSxHQUFHO0FBQ0gsQ0FBQzs7QUFFRDs7Ozs7Ozs7Ozs7OztBQ1ZBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsTUFBTTtBQUNqQixXQUFXLE1BQU07QUFDakIsV0FBVyxPQUFPO0FBQ2xCLFdBQVcsU0FBUztBQUNwQixXQUFXLFNBQVM7QUFDcEIsV0FBVyxPQUFPO0FBQ2xCLGFBQWEsUUFBUTtBQUNyQjtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVc7QUFDWDtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7Ozs7Ozs7Ozs7OztBQ2xGQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLE9BQU87QUFDbEIsV0FBVyxPQUFPO0FBQ2xCLFdBQVcsT0FBTztBQUNsQixXQUFXLE9BQU87QUFDbEIsV0FBVyxTQUFTO0FBQ3BCLFdBQVcsU0FBUztBQUNwQixXQUFXLE9BQU87QUFDbEIsYUFBYSxRQUFRO0FBQ3JCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7Ozs7Ozs7Ozs7Ozs7QUMvR0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsT0FBTztBQUNsQixXQUFXLE9BQU87QUFDbEIsV0FBVyxPQUFPO0FBQ2xCLFdBQVcsU0FBUztBQUNwQixXQUFXLFNBQVM7QUFDcEIsV0FBVyxPQUFPO0FBQ2xCLGFBQWEsUUFBUTtBQUNyQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBOzs7Ozs7Ozs7Ozs7O0FDeEZBO0FBQ0E7O0FBRUE7Ozs7Ozs7Ozs7Ozs7O0FDSEE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVyxPQUFPO0FBQ2xCLGFBQWEsTUFBTTtBQUNuQjtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7Ozs7Ozs7Ozs7OztBQ2ZBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVyxPQUFPO0FBQ2xCLGFBQWEsTUFBTTtBQUNuQjtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7Ozs7Ozs7Ozs7OztBQ2hCQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsT0FBTztBQUNsQixXQUFXLE9BQU87QUFDbEIsYUFBYSxFQUFFO0FBQ2Y7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7Ozs7Ozs7Ozs7Ozs7QUNqQkE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsT0FBTztBQUNsQixhQUFhLE1BQU07QUFDbkI7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBOzs7Ozs7Ozs7Ozs7O0FDdkJBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLE9BQU87QUFDbEIsV0FBVyxPQUFPO0FBQ2xCLGFBQWEsRUFBRTtBQUNmO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7Ozs7Ozs7Ozs7Ozs7QUNoQkE7O0FBRUE7QUFDQTs7QUFFQTs7Ozs7Ozs7Ozs7OztBQ0xBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsRUFBRTtBQUNiLGFBQWEsT0FBTztBQUNwQjtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxHQUFHOztBQUVIO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7Ozs7Ozs7Ozs7Ozs7QUM3Q0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsT0FBTztBQUNsQixhQUFhLE1BQU07QUFDbkI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDs7QUFFQTs7Ozs7Ozs7Ozs7OztBQzdCQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVyxPQUFPO0FBQ2xCLGFBQWEsTUFBTTtBQUNuQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7Ozs7Ozs7Ozs7Ozs7QUN4QkE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsRUFBRTtBQUNiLGFBQWEsT0FBTztBQUNwQjtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7Ozs7Ozs7Ozs7OztBQ3pEQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsT0FBTztBQUNsQixXQUFXLE9BQU87QUFDbEIsYUFBYSxFQUFFO0FBQ2Y7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7Ozs7Ozs7Ozs7Ozs7QUNaQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLE9BQU87QUFDbEIsV0FBVyxhQUFhO0FBQ3hCLFdBQVcsU0FBUztBQUNwQixhQUFhLFFBQVE7QUFDckI7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBOzs7Ozs7Ozs7Ozs7O0FDdENBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7Ozs7Ozs7Ozs7Ozs7QUNkQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLE9BQU87QUFDbEIsV0FBVyxPQUFPO0FBQ2xCLGFBQWEsUUFBUTtBQUNyQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7Ozs7Ozs7Ozs7Ozs7QUNoQkE7O0FBRUE7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVyxPQUFPO0FBQ2xCLGFBQWEsRUFBRTtBQUNmO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7Ozs7Ozs7Ozs7OztBQzdCQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVyxPQUFPO0FBQ2xCLGFBQWEsUUFBUTtBQUNyQjtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBOzs7Ozs7Ozs7Ozs7O0FDdEJBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVyxPQUFPO0FBQ2xCLFdBQVcsRUFBRTtBQUNiLGFBQWEsT0FBTztBQUNwQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7Ozs7Ozs7Ozs7OztBQ3RCQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLE1BQU07QUFDakIsYUFBYSxNQUFNO0FBQ25CO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBOzs7Ozs7Ozs7Ozs7O0FDekJBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLE9BQU87QUFDbEIsV0FBVyxPQUFPO0FBQ2xCLFdBQVcsUUFBUTtBQUNuQixhQUFhLE9BQU87QUFDcEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7Ozs7Ozs7Ozs7OztBQzVFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLE9BQU87QUFDbEIsYUFBYSxPQUFPO0FBQ3BCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7Ozs7Ozs7Ozs7OztBQ2pCQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsRUFBRTtBQUNiLGFBQWEsUUFBUTtBQUNyQjtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBOzs7Ozs7Ozs7Ozs7O0FDbkJBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsRUFBRTtBQUNiLFdBQVcsT0FBTztBQUNsQixhQUFhLFFBQVE7QUFDckI7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7Ozs7Ozs7Ozs7OztBQ3hCQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsRUFBRTtBQUNiLFdBQVcsRUFBRTtBQUNiLFdBQVcsRUFBRTtBQUNiLGFBQWEsUUFBUTtBQUNyQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7Ozs7Ozs7Ozs7Ozs7QUM3QkE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLEVBQUU7QUFDYixXQUFXLE9BQU87QUFDbEIsYUFBYSxRQUFRO0FBQ3JCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBOzs7Ozs7Ozs7Ozs7O0FDNUJBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVyxFQUFFO0FBQ2IsYUFBYSxRQUFRO0FBQ3JCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBOzs7Ozs7Ozs7Ozs7O0FDZEE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDOztBQUVEO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVyxTQUFTO0FBQ3BCLGFBQWEsUUFBUTtBQUNyQjtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7Ozs7Ozs7Ozs7OztBQ25CQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVyxFQUFFO0FBQ2IsYUFBYSxRQUFRO0FBQ3JCO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7Ozs7Ozs7Ozs7Ozs7QUNqQkE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLEVBQUU7QUFDYixhQUFhLFFBQVE7QUFDckI7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7Ozs7Ozs7Ozs7OztBQ2RBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7Ozs7Ozs7Ozs7Ozs7QUNaQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVyxPQUFPO0FBQ2xCLGFBQWEsUUFBUTtBQUNyQjtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7Ozs7Ozs7Ozs7OztBQ2xDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLE9BQU87QUFDbEIsYUFBYSxFQUFFO0FBQ2Y7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTs7Ozs7Ozs7Ozs7OztBQ2xCQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLE9BQU87QUFDbEIsYUFBYSxRQUFRO0FBQ3JCO0FBQ0E7QUFDQTtBQUNBOztBQUVBOzs7Ozs7Ozs7Ozs7O0FDZkE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVyxPQUFPO0FBQ2xCLFdBQVcsRUFBRTtBQUNiLGFBQWEsT0FBTztBQUNwQjtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7Ozs7Ozs7Ozs7Ozs7QUN6QkE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7Ozs7Ozs7Ozs7OztBQ3BCQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLE9BQU87QUFDbEIsYUFBYSxRQUFRO0FBQ3JCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7Ozs7Ozs7Ozs7OztBQ2pCQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLE9BQU87QUFDbEIsYUFBYSxFQUFFO0FBQ2Y7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7Ozs7Ozs7Ozs7Ozs7QUNmQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLE9BQU87QUFDbEIsYUFBYSxRQUFRO0FBQ3JCO0FBQ0E7QUFDQTtBQUNBOztBQUVBOzs7Ozs7Ozs7Ozs7O0FDZkE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVyxPQUFPO0FBQ2xCLFdBQVcsRUFBRTtBQUNiLGFBQWEsT0FBTztBQUNwQjtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7Ozs7Ozs7Ozs7OztBQ3JCQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsT0FBTztBQUNsQixhQUFhLE1BQU07QUFDbkI7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBOztBQUVBOzs7Ozs7Ozs7Ozs7O0FDakJBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLE9BQU87QUFDbEIsV0FBVyxFQUFFO0FBQ2IsYUFBYSxTQUFTO0FBQ3RCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBOzs7Ozs7Ozs7Ozs7O0FDbkJBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsU0FBUztBQUNwQixhQUFhLFNBQVM7QUFDdEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHOztBQUVIO0FBQ0E7QUFDQTs7QUFFQTs7Ozs7Ozs7Ozs7OztBQ3pCQTs7QUFFQTtBQUNBOztBQUVBOzs7Ozs7Ozs7Ozs7O0FDTEE7O0FBRUE7QUFDQTs7QUFFQTs7Ozs7Ozs7Ozs7OztBQ0xBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsT0FBTztBQUNsQixhQUFhLE1BQU07QUFDbkI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7Ozs7Ozs7Ozs7Ozs7QUNuQkE7O0FBRUE7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsR0FBRztBQUNILENBQUM7O0FBRUQ7Ozs7Ozs7Ozs7Ozs7O0FDN0JBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVyxFQUFFO0FBQ2IsYUFBYSxPQUFPO0FBQ3BCO0FBQ0E7QUFDQTtBQUNBOztBQUVBOzs7Ozs7Ozs7Ozs7O0FDckJBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVyxTQUFTO0FBQ3BCLFdBQVcsU0FBUztBQUNwQixhQUFhLFNBQVM7QUFDdEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBOzs7Ozs7Ozs7Ozs7O0FDZEE7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsU0FBUztBQUNwQixXQUFXLE9BQU87QUFDbEIsV0FBVyxTQUFTO0FBQ3BCLGFBQWEsU0FBUztBQUN0QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7Ozs7Ozs7Ozs7OztBQ25DQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7Ozs7Ozs7Ozs7Ozs7QUNSQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVyxFQUFFO0FBQ2IsYUFBYSxPQUFPO0FBQ3BCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7Ozs7Ozs7Ozs7Ozs7QUNsQkE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVyxFQUFFO0FBQ2IsYUFBYSxPQUFPO0FBQ3BCO0FBQ0E7QUFDQTtBQUNBOztBQUVBOzs7Ozs7Ozs7Ozs7O0FDYkE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLE9BQU87QUFDbEIsYUFBYSxNQUFNO0FBQ25CO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTs7QUFFQTs7Ozs7Ozs7Ozs7OztBQ2pCQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVyxTQUFTO0FBQ3BCLFdBQVcsU0FBUztBQUNwQixhQUFhLFNBQVM7QUFDdEI7QUFDQTs7QUFFQTs7Ozs7Ozs7Ozs7OztBQ2JBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsU0FBUztBQUNwQixhQUFhLFNBQVM7QUFDdEI7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7Ozs7Ozs7Ozs7OztBQ3BDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBOzs7Ozs7Ozs7Ozs7O0FDZEE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVyxPQUFPO0FBQ2xCLGFBQWEsUUFBUTtBQUNyQjtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7Ozs7Ozs7Ozs7Ozs7QUNqQkE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVyxPQUFPO0FBQ2xCLGFBQWEsRUFBRTtBQUNmO0FBQ0E7QUFDQTtBQUNBOztBQUVBOzs7Ozs7Ozs7Ozs7O0FDYkE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVyxPQUFPO0FBQ2xCLGFBQWEsUUFBUTtBQUNyQjtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7Ozs7Ozs7Ozs7OztBQ2JBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsT0FBTztBQUNsQixXQUFXLEVBQUU7QUFDYixhQUFhLE9BQU87QUFDcEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7Ozs7Ozs7Ozs7Ozs7QUNqQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsTUFBTTtBQUNqQixXQUFXLEVBQUU7QUFDYixXQUFXLE9BQU87QUFDbEIsYUFBYSxPQUFPO0FBQ3BCO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBOzs7Ozs7Ozs7Ozs7O0FDdEJBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsT0FBTztBQUNsQixhQUFhLE1BQU07QUFDbkI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBLENBQUM7O0FBRUQ7Ozs7Ozs7Ozs7Ozs7QUMxQkE7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsRUFBRTtBQUNiLGFBQWEsY0FBYztBQUMzQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBOzs7Ozs7Ozs7Ozs7O0FDcEJBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsU0FBUztBQUNwQixhQUFhLE9BQU87QUFDcEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTs7QUFFQTs7Ozs7Ozs7Ozs7OztBQ3pCQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLEVBQUU7QUFDYixhQUFhLEVBQUU7QUFDZjtBQUNBO0FBQ0E7QUFDQSxtQkFBbUIsU0FBUyxHQUFHLFNBQVM7QUFDeEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7Ozs7Ozs7Ozs7OztBQzVCQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsRUFBRTtBQUNiLGFBQWEsU0FBUztBQUN0QjtBQUNBO0FBQ0Esd0NBQXdDLFNBQVM7QUFDakQ7QUFDQTtBQUNBLFdBQVcsU0FBUyxHQUFHLFNBQVM7QUFDaEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBOzs7Ozs7Ozs7Ozs7O0FDekJBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsRUFBRTtBQUNiLFdBQVcsRUFBRTtBQUNiLGFBQWEsUUFBUTtBQUNyQjtBQUNBO0FBQ0EsaUJBQWlCO0FBQ2pCLGdCQUFnQjtBQUNoQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7Ozs7Ozs7Ozs7OztBQ3BDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVyxPQUFPO0FBQ2xCLFdBQVcsYUFBYTtBQUN4QixXQUFXLEVBQUU7QUFDYixhQUFhLEVBQUU7QUFDZjtBQUNBO0FBQ0EsaUJBQWlCLFFBQVEsT0FBTyxTQUFTLEVBQUU7QUFDM0M7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7Ozs7Ozs7Ozs7OztBQ2hDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVyxPQUFPO0FBQ2xCLFdBQVcsYUFBYTtBQUN4QixhQUFhLFFBQVE7QUFDckI7QUFDQTtBQUNBLDBCQUEwQixnQkFBZ0IsU0FBUyxHQUFHO0FBQ3REO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBOzs7Ozs7Ozs7Ozs7O0FDakNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVyxFQUFFO0FBQ2IsYUFBYSxFQUFFO0FBQ2Y7QUFDQTtBQUNBLGlCQUFpQjtBQUNqQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7Ozs7Ozs7Ozs7OztBQ3BCQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVyxFQUFFO0FBQ2IsYUFBYSxRQUFRO0FBQ3JCO0FBQ0E7QUFDQTtBQUNBLDZCQUE2QixrQkFBa0IsRUFBRTtBQUNqRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsOENBQThDLGtCQUFrQixFQUFFO0FBQ2xFO0FBQ0E7QUFDQTs7QUFFQTs7Ozs7Ozs7Ozs7OztBQ25DQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsRUFBRTtBQUNiLGFBQWEsUUFBUTtBQUNyQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7Ozs7Ozs7Ozs7Ozs7QUN6QkE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLEVBQUU7QUFDYixhQUFhLFFBQVE7QUFDckI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7Ozs7Ozs7Ozs7OztBQ2hDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLEVBQUU7QUFDYixhQUFhLFFBQVE7QUFDckI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBOzs7Ozs7Ozs7Ozs7O0FDaENBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVyxFQUFFO0FBQ2IsYUFBYSxRQUFRO0FBQ3JCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7Ozs7Ozs7Ozs7Ozs7QUNyQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsRUFBRTtBQUNiLFdBQVcsRUFBRTtBQUNiLGFBQWEsUUFBUTtBQUNyQjtBQUNBO0FBQ0EsaUJBQWlCO0FBQ2pCLGdCQUFnQjtBQUNoQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7Ozs7Ozs7Ozs7OztBQ2xDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVyxFQUFFO0FBQ2IsYUFBYSxRQUFRO0FBQ3JCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7Ozs7Ozs7Ozs7Ozs7QUNuQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVyxFQUFFO0FBQ2IsYUFBYSxRQUFRO0FBQ3JCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7Ozs7Ozs7Ozs7Ozs7QUNwQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsRUFBRTtBQUNiLGFBQWEsUUFBUTtBQUNyQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtB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LFNBRE47QUFFRCxzQkFBYTtBQUZaLEtBckJnQjtBQXlCckIsVUFBSztBQUNELGdCQUFPLFFBRE47QUFFRCxzQkFBYTtBQUZaLEtBekJnQjtBQTZCckIsVUFBSztBQUNELGdCQUFPLFdBRE47QUFFRCxzQkFBYTtBQUZaLEtBN0JnQjtBQWlDckIsVUFBSztBQUNELGdCQUFPLFVBRE47QUFFRCxzQkFBYTtBQUZaLEtBakNnQjtBQXFDckIsVUFBSztBQUNELGdCQUFPLFVBRE47QUFFRCxzQkFBYTtBQUZaLEtBckNnQjtBQXlDckIsVUFBSztBQUNELGdCQUFPLFFBRE47QUFFRCxzQkFBYTtBQUZaLEtBekNnQjtBQTZDckIsVUFBSztBQUNELGdCQUFPLFNBRE47QUFFRCxzQkFBYTtBQUZaLEtBN0NnQjtBQWlEckIsVUFBSztBQUNELGdCQUFPLFFBRE47QUFFRCxzQkFBYTtBQUZaLEtBakRnQjtBQXFEckIsVUFBSztBQUNELGdCQUFPLGFBRE47QUFFRCxzQkFBYTtBQUZaLEtBckRnQjtBQXlEckIsVUFBSztBQUNELGdCQUFPLFNBRE47QUFFRCxzQkFBYTtBQUZaLEtBekRnQjtBQTZEckIsVUFBSztBQUNELGdCQUFPLFNBRE47QUFFRCxzQkFBYTtBQUZaLEtBN0RnQjtBQWlFckIsVUFBSztBQUNELGdCQUFPLFFBRE47QUFFRCxzQkFBYTtBQUZaLEtBakVnQjtBQXFFckIsVUFBSztBQUNELGdCQUFPLFlBRE47QUFFRCxzQkFBYTtBQUZaLEtBckVnQjtBQXlFckIsVUFBSztBQUNELGdCQUFPLFNBRE47QUFFRCxzQkFBYTtBQUZaLEtBekVnQjtBQTZFckIsVUFBSztBQUNELGdCQUFPLFFBRE47QUFFRCxzQkFBYTtBQUZaLEtBN0VnQjtBQWlGckIsVUFBSztBQUNELGdCQUFPLFNBRE47QUFFRCxzQkFBYTtBQUZaLEtBakZnQjtBQXFGckIsVUFBSztBQUNELGdCQUFPLFNBRE47QUFFRCxzQkFBYTtBQUZaLEtBckZnQjtBQXlGckIsVUFBSztBQUNELGdCQUFPLFFBRE47QUFFRCxzQkFBYTtBQUZaLEtBekZnQjtBQTZG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U0osNEJBQXdCLE1BN1NwQjtBQThTSixZQUFRLE1BOVNKO0FBK1NKLFlBQVEsTUEvU0o7QUFnVEosb0NBQWdDLG9CQWhUNUI7QUFpVEosa0NBQThCLFlBalQxQjtBQWtUSiw4QkFBMEIscUZBbFR0QjtBQW1USiw0Q0FBd0Msc0NBblRwQztBQW9USix1Q0FBbUMsbUJBcFQvQjtBQXFUSiw4QkFBMEIsa0JBclR0QjtBQXNUSixvQ0FBZ0MsY0F0VDVCO0FBdVRKLGtDQUE4QixhQXZUMUI7QUF3VEosd0NBQW9DLGlCQXhUaEM7QUF5VEosc0NBQWtDLG1DQXpUOUI7QUEwVEosOEJBQTBCLFNBMVR0QjtBQTJUSiwwQ0FBc0Msb0JBM1RsQztBQTRUSix5Q0FBcUMsdUVBNVRqQztBQTZUSixnREFBNEMsNklBN1R4QztBQThUSiw2QkFBeUIsb0JBOVRyQjtBQStUSixpQ0FBNkIsb0JBL1R6QjtBQWdVSixpQ0FBNkIscUNBaFV6QjtBQWlVSiw2QkFBeUIsb0JBalVyQjtBQWtVSiw2QkFBeUIseUJBbFVyQjtBQW1VSiw2Q0FBeUMsdUNBblVyQztBQW9VSix5REFBcUQsZ0RBcFVqRDtBQXFVSixvQ0FBZ0MsaUJBclU1QjtBQXNVSix1Q0FBbUMsa0JBdFUvQjtBQXVVSix3Q0FBb0MsMEJBdlVoQztBQXdVSixxQ0FBaUMsdUJBeFU3QjtBQXlVSix3Q0FBb0MsSUF6VWhDO0FBMFVKLDJDQUF1QyxPQTFVbkM7QUEyVUoseUNBQXFDLEtBM1VqQztBQTRVSixzQ0FBa0MsZUE1VTlCO0FBNlVKLGtDQUE4QixpQkE3VTFCO0FBOFVKLDJDQUF1QyxnQ0E5VW5DO0FBK1VKLDJCQUF1QixxQkEvVW5CO0FBZ1ZKLDRCQUF3QixPQWhWcEI7QUFpVkosMkJBQXVCLG1HQWpWbkI7QUFrVkoscUNBQWlDLHFHQWxWN0I7QUFtVkosNEJBQXdCO0FBblZwQjtBQVJvQixDQUFyQixDIiwiZmlsZSI6Im1haW4uanMiLCJzb3VyY2VzQ29udGVudCI6WyJtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4vbGliL2F4aW9zJyk7XG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9ub2RlX21vZHVsZXMvYXhpb3MvaW5kZXguanNcbi8vIG1vZHVsZSBpZCA9IC4vbm9kZV9tb2R1bGVzL2F4aW9zL2luZGV4LmpzXG4vLyBtb2R1bGUgY2h1bmtzID0gMSAyIiwiJ3VzZSBzdHJpY3QnO1xuXG52YXIgdXRpbHMgPSByZXF1aXJlKCcuLy4uL3V0aWxzJyk7XG52YXIgc2V0dGxlID0gcmVxdWlyZSgnLi8uLi9jb3JlL3NldHRsZScpO1xudmFyIGJ1aWxkVVJMID0gcmVxdWlyZSgnLi8uLi9oZWxwZXJzL2J1aWxkVVJMJyk7XG52YXIgcGFyc2VIZWFkZXJzID0gcmVxdWlyZSgnLi8uLi9oZWxwZXJzL3BhcnNlSGVhZGVycycpO1xudmFyIGlzVVJMU2FtZU9yaWdpbiA9IHJlcXVpcmUoJy4vLi4vaGVscGVycy9pc1VSTFNhbWVPcmlnaW4nKTtcbnZhciBjcmVhdGVFcnJvciA9IHJlcXVpcmUoJy4uL2NvcmUvY3JlYXRlRXJyb3InKTtcbnZhciBidG9hID0gKHR5cGVvZiB3aW5kb3cgIT09ICd1bmRlZmluZWQnICYmIHdpbmRvdy5idG9hICYmIHdpbmRvdy5idG9hLmJpbmQod2luZG93KSkgfHwgcmVxdWlyZSgnLi8uLi9oZWxwZXJzL2J0b2EnKTtcblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiB4aHJBZGFwdGVyKGNvbmZpZykge1xuICByZXR1cm4gbmV3IFByb21pc2UoZnVuY3Rpb24gZGlzcGF0Y2hYaHJSZXF1ZXN0KHJlc29sdmUsIHJlamVjdCkge1xuICAgIHZhciByZXF1ZXN0RGF0YSA9IGNvbmZpZy5kYXRhO1xuICAgIHZhciByZXF1ZXN0SGVhZGVycyA9IGNvbmZpZy5oZWFkZXJzO1xuXG4gICAgaWYgKHV0aWxzLmlzRm9ybURhdGEocmVxdWVzdERhdGEpKSB7XG4gICAgICBkZWxldGUgcmVxdWVzdEhlYWRlcnNbJ0NvbnRlbnQtVHlwZSddOyAvLyBMZXQgdGhlIGJyb3dzZXIgc2V0IGl0XG4gICAgfVxuXG4gICAgdmFyIHJlcXVlc3QgPSBuZXcgWE1MSHR0cFJlcXVlc3QoKTtcbiAgICB2YXIgbG9hZEV2ZW50ID0gJ29ucmVhZHlzdGF0ZWNoYW5nZSc7XG4gICAgdmFyIHhEb21haW4gPSBmYWxzZTtcblxuICAgIC8vIEZvciBJRSA4LzkgQ09SUyBzdXBwb3J0XG4gICAgLy8gT25seSBzdXBwb3J0cyBQT1NUIGFuZCBHRVQgY2FsbHMgYW5kIGRvZXNuJ3QgcmV0dXJucyB0aGUgcmVzcG9uc2UgaGVhZGVycy5cbiAgICAvLyBET04nVCBkbyB0aGlzIGZvciB0ZXN0aW5nIGIvYyBYTUxIdHRwUmVxdWVzdCBpcyBtb2NrZWQsIG5vdCBYRG9tYWluUmVxdWVzdC5cbiAgICBpZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICd0ZXN0JyAmJlxuICAgICAgICB0eXBlb2Ygd2luZG93ICE9PSAndW5kZWZpbmVkJyAmJlxuICAgICAgICB3aW5kb3cuWERvbWFpblJlcXVlc3QgJiYgISgnd2l0aENyZWRlbnRpYWxzJyBpbiByZXF1ZXN0KSAmJlxuICAgICAgICAhaXNVUkxTYW1lT3JpZ2luKGNvbmZpZy51cmwpKSB7XG4gICAgICByZXF1ZXN0ID0gbmV3IHdpbmRvdy5YRG9tYWluUmVxdWVzdCgpO1xuICAgICAgbG9hZEV2ZW50ID0gJ29ubG9hZCc7XG4gICAgICB4RG9tYWluID0gdHJ1ZTtcbiAgICAgIHJlcXVlc3Qub25wcm9ncmVzcyA9IGZ1bmN0aW9uIGhhbmRsZVByb2dyZXNzKCkge307XG4gICAgICByZXF1ZXN0Lm9udGltZW91dCA9IGZ1bmN0aW9uIGhhbmRsZVRpbWVvdXQoKSB7fTtcbiAgICB9XG5cbiAgICAvLyBIVFRQIGJhc2ljIGF1dGhlbnRpY2F0aW9uXG4gICAgaWYgKGNvbmZpZy5hdXRoKSB7XG4gICAgICB2YXIgdXNlcm5hbWUgPSBjb25maWcuYXV0aC51c2VybmFtZSB8fCAnJztcbiAgICAgIHZhciBwYXNzd29yZCA9IGNvbmZpZy5hdXRoLnBhc3N3b3JkIHx8ICcnO1xuICAgICAgcmVxdWVzdEhlYWRlcnMuQXV0aG9yaXphdGlvbiA9ICdCYXNpYyAnICsgYnRvYSh1c2VybmFtZSArICc6JyArIHBhc3N3b3JkKTtcbiAgICB9XG5cbiAgICByZXF1ZXN0Lm9wZW4oY29uZmlnLm1ldGhvZC50b1VwcGVyQ2FzZSgpLCBidWlsZFVSTChjb25maWcudXJsLCBjb25maWcucGFyYW1zLCBjb25maWcucGFyYW1zU2VyaWFsaXplciksIHRydWUpO1xuXG4gICAgLy8gU2V0IHRoZSByZXF1ZXN0IHRpbWVvdXQgaW4gTVNcbiAgICByZXF1ZXN0LnRpbWVvdXQgPSBjb25maWcudGltZW91dDtcblxuICAgIC8vIExpc3RlbiBmb3IgcmVhZHkgc3RhdGVcbiAgICByZXF1ZXN0W2xvYWRFdmVudF0gPSBmdW5jdGlvbiBoYW5kbGVMb2FkKCkge1xuICAgICAgaWYgKCFyZXF1ZXN0IHx8IChyZXF1ZXN0LnJlYWR5U3RhdGUgIT09IDQgJiYgIXhEb21haW4pKSB7XG4gICAgICAgIHJldHVybjtcbiAgICAgIH1cblxuICAgICAgLy8gVGhlIHJlcXVlc3QgZXJyb3JlZCBvdXQgYW5kIHdlIGRpZG4ndCBnZXQgYSByZXNwb25zZSwgdGhpcyB3aWxsIGJlXG4gICAgICAvLyBoYW5kbGVkIGJ5IG9uZXJyb3IgaW5zdGVhZFxuICAgICAgLy8gV2l0aCBvbmUgZXhjZXB0aW9uOiByZXF1ZXN0IHRoYXQgdXNpbmcgZmlsZTogcHJvdG9jb2wsIG1vc3QgYnJvd3NlcnNcbiAgICAgIC8vIHdpbGwgcmV0dXJuIHN0YXR1cyBhcyAwIGV2ZW4gdGhvdWdoIGl0J3MgYSBzdWNjZXNzZnVsIHJlcXVlc3RcbiAgICAgIGlmIChyZXF1ZXN0LnN0YXR1cyA9PT0gMCAmJiAhKHJlcXVlc3QucmVzcG9uc2VVUkwgJiYgcmVxdWVzdC5yZXNwb25zZVVSTC5pbmRleE9mKCdmaWxlOicpID09PSAwKSkge1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG5cbiAgICAgIC8vIFByZXBhcmUgdGhlIHJlc3BvbnNlXG4gICAgICB2YXIgcmVzcG9uc2VIZWFkZXJzID0gJ2dldEFsbFJlc3BvbnNlSGVhZGVycycgaW4gcmVxdWVzdCA/IHBhcnNlSGVhZGVycyhyZXF1ZXN0LmdldEFsbFJlc3BvbnNlSGVhZGVycygpKSA6IG51bGw7XG4gICAgICB2YXIgcmVzcG9uc2VEYXRhID0gIWNvbmZpZy5yZXNwb25zZVR5cGUgfHwgY29uZmlnLnJlc3BvbnNlVHlwZSA9PT0gJ3RleHQnID8gcmVxdWVzdC5yZXNwb25zZVRleHQgOiByZXF1ZXN0LnJlc3BvbnNlO1xuICAgICAgdmFyIHJlc3BvbnNlID0ge1xuICAgICAgICBkYXRhOiByZXNwb25zZURhdGEsXG4gICAgICAgIC8vIElFIHNlbmRzIDEyMjMgaW5zdGVhZCBvZiAyMDQgKGh0dHBzOi8vZ2l0aHViLmNvbS9heGlvcy9heGlvcy9pc3N1ZXMvMjAxKVxuICAgICAgICBzdGF0dXM6IHJlcXVlc3Quc3RhdHVzID09PSAxMjIzID8gMjA0IDogcmVxdWVzdC5zdGF0dXMsXG4gICAgICAgIHN0YXR1c1RleHQ6IHJlcXVlc3Quc3RhdHVzID09PSAxMjIzID8gJ05vIENvbnRlbnQnIDogcmVxdWVzdC5zdGF0dXNUZXh0LFxuICAgICAgICBoZWFkZXJzOiByZXNwb25zZUhlYWRlcnMsXG4gICAgICAgIGNvbmZpZzogY29uZmlnLFxuICAgICAgICByZXF1ZXN0OiByZXF1ZXN0XG4gICAgICB9O1xuXG4gICAgICBzZXR0bGUocmVzb2x2ZSwgcmVqZWN0LCByZXNwb25zZSk7XG5cbiAgICAgIC8vIENsZWFuIHVwIHJlcXVlc3RcbiAgICAgIHJlcXVlc3QgPSBudWxsO1xuICAgIH07XG5cbiAgICAvLyBIYW5kbGUgbG93IGxldmVsIG5ldHdvcmsgZXJyb3JzXG4gICAgcmVxdWVzdC5vbmVycm9yID0gZnVuY3Rpb24gaGFuZGxlRXJyb3IoKSB7XG4gICAgICAvLyBSZWFsIGVycm9ycyBhcmUgaGlkZGVuIGZyb20gdXMgYnkgdGhlIGJyb3dzZXJcbiAgICAgIC8vIG9uZXJyb3Igc2hvdWxkIG9ubHkgZmlyZSBpZiBpdCdzIGEgbmV0d29yayBlcnJvclxuICAgICAgcmVqZWN0KGNyZWF0ZUVycm9yKCdOZXR3b3JrIEVycm9yJywgY29uZmlnLCBudWxsLCByZXF1ZXN0KSk7XG5cbiAgICAgIC8vIENsZWFuIHVwIHJlcXVlc3RcbiAgICAgIHJlcXVlc3QgPSBudWxsO1xuICAgIH07XG5cbiAgICAvLyBIYW5kbGUgdGltZW91dFxuICAgIHJlcXVlc3Qub250aW1lb3V0ID0gZnVuY3Rpb24gaGFuZGxlVGltZW91dCgpIHtcbiAgICAgIHJlamVjdChjcmVhdGVFcnJvcigndGltZW91dCBvZiAnICsgY29uZmlnLnRpbWVvdXQgKyAnbXMgZXhjZWVkZWQnLCBjb25maWcsICdFQ09OTkFCT1JURUQnLFxuICAgICAgICByZXF1ZXN0KSk7XG5cbiAgICAgIC8vIENsZWFuIHVwIHJlcXVlc3RcbiAgICAgIHJlcXVlc3QgPSBudWxsO1xuICAgIH07XG5cbiAgICAvLyBBZGQgeHNyZiBoZWFkZXJcbiAgICAvLyBUaGlzIGlzIG9ubHkgZG9uZSBpZiBydW5uaW5nIGluIGEgc3RhbmRhcmQgYnJvd3NlciBlbnZpcm9ubWVudC5cbiAgICAvLyBTcGVjaWZpY2FsbHkgbm90IGlmIHdlJ3JlIGluIGEgd2ViIHdvcmtlciwgb3IgcmVhY3QtbmF0aXZlLlxuICAgIGlmICh1dGlscy5pc1N0YW5kYXJkQnJvd3NlckVudigpKSB7XG4gICAgICB2YXIgY29va2llcyA9IHJlcXVpcmUoJy4vLi4vaGVscGVycy9jb29raWVzJyk7XG5cbiAgICAgIC8vIEFkZCB4c3JmIGhlYWRlclxuICAgICAgdmFyIHhzcmZWYWx1ZSA9IChjb25maWcud2l0aENyZWRlbnRpYWxzIHx8IGlzVVJMU2FtZU9yaWdpbihjb25maWcudXJsKSkgJiYgY29uZmlnLnhzcmZDb29raWVOYW1lID9cbiAgICAgICAgICBjb29raWVzLnJlYWQoY29uZmlnLnhzcmZDb29raWVOYW1lKSA6XG4gICAgICAgICAgdW5kZWZpbmVkO1xuXG4gICAgICBpZiAoeHNyZlZhbHVlKSB7XG4gICAgICAgIHJlcXVlc3RIZWFkZXJzW2NvbmZpZy54c3JmSGVhZGVyTmFtZV0gPSB4c3JmVmFsdWU7XG4gICAgICB9XG4gICAgfVxuXG4gICAgLy8gQWRkIGhlYWRlcnMgdG8gdGhlIHJlcXVlc3RcbiAgICBpZiAoJ3NldFJlcXVlc3RIZWFkZXInIGluIHJlcXVlc3QpIHtcbiAgICAgIHV0aWxzLmZvckVhY2gocmVxdWVzdEhlYWRlcnMsIGZ1bmN0aW9uIHNldFJlcXVlc3RIZWFkZXIodmFsLCBrZXkpIHtcbiAgICAgICAgaWYgKHR5cGVvZiByZXF1ZXN0RGF0YSA9PT0gJ3VuZGVmaW5lZCcgJiYga2V5LnRvTG93ZXJDYXNlKCkgPT09ICdjb250ZW50LXR5cGUnKSB7XG4gICAgICAgICAgLy8gUmVtb3ZlIENvbnRlbnQtVHlwZSBpZiBkYXRhIGlzIHVuZGVmaW5lZFxuICAgICAgICAgIGRlbGV0ZSByZXF1ZXN0SGVhZGVyc1trZXldO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIC8vIE90aGVyd2lzZSBhZGQgaGVhZGVyIHRvIHRoZSByZXF1ZXN0XG4gICAgICAgICAgcmVxdWVzdC5zZXRSZXF1ZXN0SGVhZGVyKGtleSwgdmFsKTtcbiAgICAgICAgfVxuICAgICAgfSk7XG4gICAgfVxuXG4gICAgLy8gQWRkIHdpdGhDcmVkZW50aWFscyB0byByZXF1ZXN0IGlmIG5lZWRlZFxuICAgIGlmIChjb25maWcud2l0aENyZWRlbnRpYWxzKSB7XG4gICAgICByZXF1ZXN0LndpdGhDcmVkZW50aWFscyA9IHRydWU7XG4gICAgfVxuXG4gICAgLy8gQWRkIHJlc3BvbnNlVHlwZSB0byByZXF1ZXN0IGlmIG5lZWRlZFxuICAgIGlmIChjb25maWcucmVzcG9uc2VUeXBlKSB7XG4gICAgICB0cnkge1xuICAgICAgICByZXF1ZXN0LnJlc3BvbnNlVHlwZSA9IGNvbmZpZy5yZXNwb25zZVR5cGU7XG4gICAgICB9IGNhdGNoIChlKSB7XG4gICAgICAgIC8vIEV4cGVjdGVkIERPTUV4Y2VwdGlvbiB0aHJvd24gYnkgYnJvd3NlcnMgbm90IGNvbXBhdGlibGUgWE1MSHR0cFJlcXVlc3QgTGV2ZWwgMi5cbiAgICAgICAgLy8gQnV0LCB0aGlzIGNhbiBiZSBzdXBwcmVzc2VkIGZvciAnanNvbicgdHlwZSBhcyBpdCBjYW4gYmUgcGFyc2VkIGJ5IGRlZmF1bHQgJ3RyYW5zZm9ybVJlc3BvbnNlJyBmdW5jdGlvbi5cbiAgICAgICAgaWYgKGNvbmZpZy5yZXNwb25zZVR5cGUgIT09ICdqc29uJykge1xuICAgICAgICAgIHRocm93IGU7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG5cbiAgICAvLyBIYW5kbGUgcHJvZ3Jlc3MgaWYgbmVlZGVkXG4gICAgaWYgKHR5cGVvZiBjb25maWcub25Eb3dubG9hZFByb2dyZXNzID09PSAnZnVuY3Rpb24nKSB7XG4gICAgICByZXF1ZXN0LmFkZEV2ZW50TGlzdGVuZXIoJ3Byb2dyZXNzJywgY29uZmlnLm9uRG93bmxvYWRQcm9ncmVzcyk7XG4gICAgfVxuXG4gICAgLy8gTm90IGFsbCBicm93c2VycyBzdXBwb3J0IHVwbG9hZCBldmVudHNcbiAgICBpZiAodHlwZW9mIGNvbmZpZy5vblVwbG9hZFByb2dyZXNzID09PSAnZnVuY3Rpb24nICYmIHJlcXVlc3QudXBsb2FkKSB7XG4gICAgICByZXF1ZXN0LnVwbG9hZC5hZGRFdmVudExpc3RlbmVyKCdwcm9ncmVzcycsIGNvbmZpZy5vblVwbG9hZFByb2dyZXNzKTtcbiAgICB9XG5cbiAgICBpZiAoY29uZmlnLmNhbmNlbFRva2VuKSB7XG4gICAgICAvLyBIYW5kbGUgY2FuY2VsbGF0aW9uXG4gICAgICBjb25maWcuY2FuY2VsVG9rZW4ucHJvbWlzZS50aGVuKGZ1bmN0aW9uIG9uQ2FuY2VsZWQoY2FuY2VsKSB7XG4gICAgICAgIGlmICghcmVxdWVzdCkge1xuICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuXG4gICAgICAgIHJlcXVlc3QuYWJvcnQoKTtcbiAgICAgICAgcmVqZWN0KGNhbmNlbCk7XG4gICAgICAgIC8vIENsZWFuIHVwIHJlcXVlc3RcbiAgICAgICAgcmVxdWVzdCA9IG51bGw7XG4gICAgICB9KTtcbiAgICB9XG5cbiAgICBpZiAocmVxdWVzdERhdGEgPT09IHVuZGVmaW5lZCkge1xuICAgICAgcmVxdWVzdERhdGEgPSBudWxsO1xuICAgIH1cblxuICAgIC8vIFNlbmQgdGhlIHJlcXVlc3RcbiAgICByZXF1ZXN0LnNlbmQocmVxdWVzdERhdGEpO1xuICB9KTtcbn07XG5cblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL25vZGVfbW9kdWxlcy9heGlvcy9saWIvYWRhcHRlcnMveGhyLmpzXG4vLyBtb2R1bGUgaWQgPSAuL25vZGVfbW9kdWxlcy9heGlvcy9saWIvYWRhcHRlcnMveGhyLmpzXG4vLyBtb2R1bGUgY2h1bmtzID0gMSAyIiwiJ3VzZSBzdHJpY3QnO1xuXG52YXIgdXRpbHMgPSByZXF1aXJlKCcuL3V0aWxzJyk7XG52YXIgYmluZCA9IHJlcXVpcmUoJy4vaGVscGVycy9iaW5kJyk7XG52YXIgQXhpb3MgPSByZXF1aXJlKCcuL2NvcmUvQXhpb3MnKTtcbnZhciBkZWZhdWx0cyA9IHJlcXVpcmUoJy4vZGVmYXVsdHMnKTtcblxuLyoqXG4gKiBDcmVhdGUgYW4gaW5zdGFuY2Ugb2YgQXhpb3NcbiAqXG4gKiBAcGFyYW0ge09iamVjdH0gZGVmYXVsdENvbmZpZyBUaGUgZGVmYXVsdCBjb25maWcgZm9yIHRoZSBpbnN0YW5jZVxuICogQHJldHVybiB7QXhpb3N9IEEgbmV3IGluc3RhbmNlIG9mIEF4aW9zXG4gKi9cbmZ1bmN0aW9uIGNyZWF0ZUluc3RhbmNlKGRlZmF1bHRDb25maWcpIHtcbiAgdmFyIGNvbnRleHQgPSBuZXcgQXhpb3MoZGVmYXVsdENvbmZpZyk7XG4gIHZhciBpbnN0YW5jZSA9IGJpbmQoQXhpb3MucHJvdG90eXBlLnJlcXVlc3QsIGNvbnRleHQpO1xuXG4gIC8vIENvcHkgYXhpb3MucHJvdG90eXBlIHRvIGluc3RhbmNlXG4gIHV0aWxzLmV4dGVuZChpbnN0YW5jZSwgQXhpb3MucHJvdG90eXBlLCBjb250ZXh0KTtcblxuICAvLyBDb3B5IGNvbnRleHQgdG8gaW5zdGFuY2VcbiAgdXRpbHMuZXh0ZW5kKGluc3RhbmNlLCBjb250ZXh0KTtcblxuICByZXR1cm4gaW5zdGFuY2U7XG59XG5cbi8vIENyZWF0ZSB0aGUgZGVmYXVsdCBpbnN0YW5jZSB0byBiZSBleHBvcnRlZFxudmFyIGF4aW9zID0gY3JlYXRlSW5zdGFuY2UoZGVmYXVsdHMpO1xuXG4vLyBFeHBvc2UgQXhpb3MgY2xhc3MgdG8gYWxsb3cgY2xhc3MgaW5oZXJpdGFuY2VcbmF4aW9zLkF4aW9zID0gQXhpb3M7XG5cbi8vIEZhY3RvcnkgZm9yIGNyZWF0aW5nIG5ldyBpbnN0YW5jZXNcbmF4aW9zLmNyZWF0ZSA9IGZ1bmN0aW9uIGNyZWF0ZShpbnN0YW5jZUNvbmZpZykge1xuICByZXR1cm4gY3JlYXRlSW5zdGFuY2UodXRpbHMubWVyZ2UoZGVmYXVsdHMsIGluc3RhbmNlQ29uZmlnKSk7XG59O1xuXG4vLyBFeHBvc2UgQ2FuY2VsICYgQ2FuY2VsVG9rZW5cbmF4aW9zLkNhbmNlbCA9IHJlcXVpcmUoJy4vY2FuY2VsL0NhbmNlbCcpO1xuYXhpb3MuQ2FuY2VsVG9rZW4gPSByZXF1aXJlKCcuL2NhbmNlbC9DYW5jZWxUb2tlbicpO1xuYXhpb3MuaXNDYW5jZWwgPSByZXF1aXJlKCcuL2NhbmNlbC9pc0NhbmNlbCcpO1xuXG4vLyBFeHBvc2UgYWxsL3NwcmVhZFxuYXhpb3MuYWxsID0gZnVuY3Rpb24gYWxsKHByb21pc2VzKSB7XG4gIHJldHVybiBQcm9taXNlLmFsbChwcm9taXNlcyk7XG59O1xuYXhpb3Muc3ByZWFkID0gcmVxdWlyZSgnLi9oZWxwZXJzL3NwcmVhZCcpO1xuXG5tb2R1bGUuZXhwb3J0cyA9IGF4aW9zO1xuXG4vLyBBbGxvdyB1c2Ugb2YgZGVmYXVsdCBpbXBvcnQgc3ludGF4IGluIFR5cGVTY3JpcHRcbm1vZHVsZS5leHBvcnRzLmRlZmF1bHQgPSBheGlvcztcblxuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vbm9kZV9tb2R1bGVzL2F4aW9zL2xpYi9heGlvcy5qc1xuLy8gbW9kdWxlIGlkID0gLi9ub2RlX21vZHVsZXMvYXhpb3MvbGliL2F4aW9zLmpzXG4vLyBtb2R1bGUgY2h1bmtzID0gMSAyIiwiJ3VzZSBzdHJpY3QnO1xuXG4vKipcbiAqIEEgYENhbmNlbGAgaXMgYW4gb2JqZWN0IHRoYXQgaXMgdGhyb3duIHdoZW4gYW4gb3BlcmF0aW9uIGlzIGNhbmNlbGVkLlxuICpcbiAqIEBjbGFzc1xuICogQHBhcmFtIHtzdHJpbmc9fSBtZXNzYWdlIFRoZSBtZXNzYWdlLlxuICovXG5mdW5jdGlvbiBDYW5jZWwobWVzc2FnZSkge1xuICB0aGlzLm1lc3NhZ2UgPSBtZXNzYWdlO1xufVxuXG5DYW5jZWwucHJvdG90eXBlLnRvU3RyaW5nID0gZnVuY3Rpb24gdG9TdHJpbmcoKSB7XG4gIHJldHVybiAnQ2FuY2VsJyArICh0aGlzLm1lc3NhZ2UgPyAnOiAnICsgdGhpcy5tZXNzYWdlIDogJycpO1xufTtcblxuQ2FuY2VsLnByb3RvdHlwZS5fX0NBTkNFTF9fID0gdHJ1ZTtcblxubW9kdWxlLmV4cG9ydHMgPSBDYW5jZWw7XG5cblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL25vZGVfbW9kdWxlcy9heGlvcy9saWIvY2FuY2VsL0NhbmNlbC5qc1xuLy8gbW9kdWxlIGlkID0gLi9ub2RlX21vZHVsZXMvYXhpb3MvbGliL2NhbmNlbC9DYW5jZWwuanNcbi8vIG1vZHVsZSBjaHVua3MgPSAxIDIiLCIndXNlIHN0cmljdCc7XG5cbnZhciBDYW5jZWwgPSByZXF1aXJlKCcuL0NhbmNlbCcpO1xuXG4vKipcbiAqIEEgYENhbmNlbFRva2VuYCBpcyBhbiBvYmplY3QgdGhhdCBjYW4gYmUgdXNlZCB0byByZXF1ZXN0IGNhbmNlbGxhdGlvbiBvZiBhbiBvcGVyYXRpb24uXG4gKlxuICogQGNsYXNzXG4gKiBAcGFyYW0ge0Z1bmN0aW9ufSBleGVjdXRvciBUaGUgZXhlY3V0b3IgZnVuY3Rpb24uXG4gKi9cbmZ1bmN0aW9uIENhbmNlbFRva2VuKGV4ZWN1dG9yKSB7XG4gIGlmICh0eXBlb2YgZXhlY3V0b3IgIT09ICdmdW5jdGlvbicpIHtcbiAgICB0aHJvdyBuZXcgVHlwZUVycm9yKCdleGVjdXRvciBtdXN0IGJlIGEgZnVuY3Rpb24uJyk7XG4gIH1cblxuICB2YXIgcmVzb2x2ZVByb21pc2U7XG4gIHRoaXMucHJvbWlzZSA9IG5ldyBQcm9taXNlKGZ1bmN0aW9uIHByb21pc2VFeGVjdXRvcihyZXNvbHZlKSB7XG4gICAgcmVzb2x2ZVByb21pc2UgPSByZXNvbHZlO1xuICB9KTtcblxuICB2YXIgdG9rZW4gPSB0aGlzO1xuICBleGVjdXRvcihmdW5jdGlvbiBjYW5jZWwobWVzc2FnZSkge1xuICAgIGlmICh0b2tlbi5yZWFzb24pIHtcbiAgICAgIC8vIENhbmNlbGxhdGlvbiBoYXMgYWxyZWFkeSBiZWVuIHJlcXVlc3RlZFxuICAgICAgcmV0dXJuO1xuICAgIH1cblxuICAgIHRva2VuLnJlYXNvbiA9IG5ldyBDYW5jZWwobWVzc2FnZSk7XG4gICAgcmVzb2x2ZVByb21pc2UodG9rZW4ucmVhc29uKTtcbiAgfSk7XG59XG5cbi8qKlxuICogVGhyb3dzIGEgYENhbmNlbGAgaWYgY2FuY2VsbGF0aW9uIGhhcyBiZWVuIHJlcXVlc3RlZC5cbiAqL1xuQ2FuY2VsVG9rZW4ucHJvdG90eXBlLnRocm93SWZSZXF1ZXN0ZWQgPSBmdW5jdGlvbiB0aHJvd0lmUmVxdWVzdGVkKCkge1xuICBpZiAodGhpcy5yZWFzb24pIHtcbiAgICB0aHJvdyB0aGlzLnJlYXNvbjtcbiAgfVxufTtcblxuLyoqXG4gKiBSZXR1cm5zIGFuIG9iamVjdCB0aGF0IGNvbnRhaW5zIGEgbmV3IGBDYW5jZWxUb2tlbmAgYW5kIGEgZnVuY3Rpb24gdGhhdCwgd2hlbiBjYWxsZWQsXG4gKiBjYW5jZWxzIHRoZSBgQ2FuY2VsVG9rZW5gLlxuICovXG5DYW5jZWxUb2tlbi5zb3VyY2UgPSBmdW5jdGlvbiBzb3VyY2UoKSB7XG4gIHZhciBjYW5jZWw7XG4gIHZhciB0b2tlbiA9IG5ldyBDYW5jZWxUb2tlbihmdW5jdGlvbiBleGVjdXRvcihjKSB7XG4gICAgY2FuY2VsID0gYztcbiAgfSk7XG4gIHJldHVybiB7XG4gICAgdG9rZW46IHRva2VuLFxuICAgIGNhbmNlbDogY2FuY2VsXG4gIH07XG59O1xuXG5tb2R1bGUuZXhwb3J0cyA9IENhbmNlbFRva2VuO1xuXG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9ub2RlX21vZHVsZXMvYXhpb3MvbGliL2NhbmNlbC9DYW5jZWxUb2tlbi5qc1xuLy8gbW9kdWxlIGlkID0gLi9ub2RlX21vZHVsZXMvYXhpb3MvbGliL2NhbmNlbC9DYW5jZWxUb2tlbi5qc1xuLy8gbW9kdWxlIGNodW5rcyA9IDEgMiIsIid1c2Ugc3RyaWN0JztcblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiBpc0NhbmNlbCh2YWx1ZSkge1xuICByZXR1cm4gISEodmFsdWUgJiYgdmFsdWUuX19DQU5DRUxfXyk7XG59O1xuXG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9ub2RlX21vZHVsZXMvYXhpb3MvbGliL2NhbmNlbC9pc0NhbmNlbC5qc1xuLy8gbW9kdWxlIGlkID0gLi9ub2RlX21vZHVsZXMvYXhpb3MvbGliL2NhbmNlbC9pc0NhbmNlbC5qc1xuLy8gbW9kdWxlIGNodW5rcyA9IDEgMiIsIid1c2Ugc3RyaWN0JztcblxudmFyIGRlZmF1bHRzID0gcmVxdWlyZSgnLi8uLi9kZWZhdWx0cycpO1xudmFyIHV0aWxzID0gcmVxdWlyZSgnLi8uLi91dGlscycpO1xudmFyIEludGVyY2VwdG9yTWFuYWdlciA9IHJlcXVpcmUoJy4vSW50ZXJjZXB0b3JNYW5hZ2VyJyk7XG52YXIgZGlzcGF0Y2hSZXF1ZXN0ID0gcmVxdWlyZSgnLi9kaXNwYXRjaFJlcXVlc3QnKTtcblxuLyoqXG4gKiBDcmVhdGUgYSBuZXcgaW5zdGFuY2Ugb2YgQXhpb3NcbiAqXG4gKiBAcGFyYW0ge09iamVjdH0gaW5zdGFuY2VDb25maWcgVGhlIGRlZmF1bHQgY29uZmlnIGZvciB0aGUgaW5zdGFuY2VcbiAqL1xuZnVuY3Rpb24gQXhpb3MoaW5zdGFuY2VDb25maWcpIHtcbiAgdGhpcy5kZWZhdWx0cyA9IGluc3RhbmNlQ29uZmlnO1xuICB0aGlzLmludGVyY2VwdG9ycyA9IHtcbiAgICByZXF1ZXN0OiBuZXcgSW50ZXJjZXB0b3JNYW5hZ2VyKCksXG4gICAgcmVzcG9uc2U6IG5ldyBJbnRlcmNlcHRvck1hbmFnZXIoKVxuICB9O1xufVxuXG4vKipcbiAqIERpc3BhdGNoIGEgcmVxdWVzdFxuICpcbiAqIEBwYXJhbSB7T2JqZWN0fSBjb25maWcgVGhlIGNvbmZpZyBzcGVjaWZpYyBmb3IgdGhpcyByZXF1ZXN0IChtZXJnZWQgd2l0aCB0aGlzLmRlZmF1bHRzKVxuICovXG5BeGlvcy5wcm90b3R5cGUucmVxdWVzdCA9IGZ1bmN0aW9uIHJlcXVlc3QoY29uZmlnKSB7XG4gIC8qZXNsaW50IG5vLXBhcmFtLXJlYXNzaWduOjAqL1xuICAvLyBBbGxvdyBmb3IgYXhpb3MoJ2V4YW1wbGUvdXJsJ1ssIGNvbmZpZ10pIGEgbGEgZmV0Y2ggQVBJXG4gIGlmICh0eXBlb2YgY29uZmlnID09PSAnc3RyaW5nJykge1xuICAgIGNvbmZpZyA9IHV0aWxzLm1lcmdlKHtcbiAgICAgIHVybDogYXJndW1lbnRzWzBdXG4gICAgfSwgYXJndW1lbnRzWzFdKTtcbiAgfVxuXG4gIGNvbmZpZyA9IHV0aWxzLm1lcmdlKGRlZmF1bHRzLCB7bWV0aG9kOiAnZ2V0J30sIHRoaXMuZGVmYXVsdHMsIGNvbmZpZyk7XG4gIGNvbmZpZy5tZXRob2QgPSBjb25maWcubWV0aG9kLnRvTG93ZXJDYXNlKCk7XG5cbiAgLy8gSG9vayB1cCBpbnRlcmNlcHRvcnMgbWlkZGxld2FyZVxuICB2YXIgY2hhaW4gPSBbZGlzcGF0Y2hSZXF1ZXN0LCB1bmRlZmluZWRdO1xuICB2YXIgcHJvbWlzZSA9IFByb21pc2UucmVzb2x2ZShjb25maWcpO1xuXG4gIHRoaXMuaW50ZXJjZXB0b3JzLnJlcXVlc3QuZm9yRWFjaChmdW5jdGlvbiB1bnNoaWZ0UmVxdWVzdEludGVyY2VwdG9ycyhpbnRlcmNlcHRvcikge1xuICAgIGNoYWluLnVuc2hpZnQoaW50ZXJjZXB0b3IuZnVsZmlsbGVkLCBpbnRlcmNlcHRvci5yZWplY3RlZCk7XG4gIH0pO1xuXG4gIHRoaXMuaW50ZXJjZXB0b3JzLnJlc3BvbnNlLmZvckVhY2goZnVuY3Rpb24gcHVzaFJlc3BvbnNlSW50ZXJjZXB0b3JzKGludGVyY2VwdG9yKSB7XG4gICAgY2hhaW4ucHVzaChpbnRlcmNlcHRvci5mdWxmaWxsZWQsIGludGVyY2VwdG9yLnJlamVjdGVkKTtcbiAgfSk7XG5cbiAgd2hpbGUgKGNoYWluLmxlbmd0aCkge1xuICAgIHByb21pc2UgPSBwcm9taXNlLnRoZW4oY2hhaW4uc2hpZnQoKSwgY2hhaW4uc2hpZnQoKSk7XG4gIH1cblxuICByZXR1cm4gcHJvbWlzZTtcbn07XG5cbi8vIFByb3ZpZGUgYWxpYXNlcyBmb3Igc3VwcG9ydGVkIHJlcXVlc3QgbWV0aG9kc1xudXRpbHMuZm9yRWFjaChbJ2RlbGV0ZScsICdnZXQnLCAnaGVhZCcsICdvcHRpb25zJ10sIGZ1bmN0aW9uIGZvckVhY2hNZXRob2ROb0RhdGEobWV0aG9kKSB7XG4gIC8qZXNsaW50IGZ1bmMtbmFtZXM6MCovXG4gIEF4aW9zLnByb3RvdHlwZVttZXRob2RdID0gZnVuY3Rpb24odXJsLCBjb25maWcpIHtcbiAgICByZXR1cm4gdGhpcy5yZXF1ZXN0KHV0aWxzLm1lcmdlKGNvbmZpZyB8fCB7fSwge1xuICAgICAgbWV0aG9kOiBtZXRob2QsXG4gICAgICB1cmw6IHVybFxuICAgIH0pKTtcbiAgfTtcbn0pO1xuXG51dGlscy5mb3JFYWNoKFsncG9zdCcsICdwdXQnLCAncGF0Y2gnXSwgZnVuY3Rpb24gZm9yRWFjaE1ldGhvZFdpdGhEYXRhKG1ldGhvZCkge1xuICAvKmVzbGludCBmdW5jLW5hbWVzOjAqL1xuICBBeGlvcy5wcm90b3R5cGVbbWV0aG9kXSA9IGZ1bmN0aW9uKHVybCwgZGF0YSwgY29uZmlnKSB7XG4gICAgcmV0dXJuIHRoaXMucmVxdWVzdCh1dGlscy5tZXJnZShjb25maWcgfHwge30sIHtcbiAgICAgIG1ldGhvZDogbWV0aG9kLFxuICAgICAgdXJsOiB1cmwsXG4gICAgICBkYXRhOiBkYXRhXG4gICAgfSkpO1xuICB9O1xufSk7XG5cbm1vZHVsZS5leHBvcnRzID0gQXhpb3M7XG5cblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL25vZGVfbW9kdWxlcy9heGlvcy9saWIvY29yZS9BeGlvcy5qc1xuLy8gbW9kdWxlIGlkID0gLi9ub2RlX21vZHVsZXMvYXhpb3MvbGliL2NvcmUvQXhpb3MuanNcbi8vIG1vZHVsZSBjaHVua3MgPSAxIDIiLCIndXNlIHN0cmljdCc7XG5cbnZhciB1dGlscyA9IHJlcXVpcmUoJy4vLi4vdXRpbHMnKTtcblxuZnVuY3Rpb24gSW50ZXJjZXB0b3JNYW5hZ2VyKCkge1xuICB0aGlzLmhhbmRsZXJzID0gW107XG59XG5cbi8qKlxuICogQWRkIGEgbmV3IGludGVyY2VwdG9yIHRvIHRoZSBzdGFja1xuICpcbiAqIEBwYXJhbSB7RnVuY3Rpb259IGZ1bGZpbGxlZCBUaGUgZnVuY3Rpb24gdG8gaGFuZGxlIGB0aGVuYCBmb3IgYSBgUHJvbWlzZWBcbiAqIEBwYXJhbSB7RnVuY3Rpb259IHJlamVjdGVkIFRoZSBmdW5jdGlvbiB0byBoYW5kbGUgYHJlamVjdGAgZm9yIGEgYFByb21pc2VgXG4gKlxuICogQHJldHVybiB7TnVtYmVyfSBBbiBJRCB1c2VkIHRvIHJlbW92ZSBpbnRlcmNlcHRvciBsYXRlclxuICovXG5JbnRlcmNlcHRvck1hbmFnZXIucHJvdG90eXBlLnVzZSA9IGZ1bmN0aW9uIHVzZShmdWxmaWxsZWQsIHJlamVjdGVkKSB7XG4gIHRoaXMuaGFuZGxlcnMucHVzaCh7XG4gICAgZnVsZmlsbGVkOiBmdWxmaWxsZWQsXG4gICAgcmVqZWN0ZWQ6IHJlamVjdGVkXG4gIH0pO1xuICByZXR1cm4gdGhpcy5oYW5kbGVycy5sZW5ndGggLSAxO1xufTtcblxuLyoqXG4gKiBSZW1vdmUgYW4gaW50ZXJjZXB0b3IgZnJvbSB0aGUgc3RhY2tcbiAqXG4gKiBAcGFyYW0ge051bWJlcn0gaWQgVGhlIElEIHRoYXQgd2FzIHJldHVybmVkIGJ5IGB1c2VgXG4gKi9cbkludGVyY2VwdG9yTWFuYWdlci5wcm90b3R5cGUuZWplY3QgPSBmdW5jdGlvbiBlamVjdChpZCkge1xuICBpZiAodGhpcy5oYW5kbGVyc1tpZF0pIHtcbiAgICB0aGlzLmhhbmRsZXJzW2lkXSA9IG51bGw7XG4gIH1cbn07XG5cbi8qKlxuICogSXRlcmF0ZSBvdmVyIGFsbCB0aGUgcmVnaXN0ZXJlZCBpbnRlcmNlcHRvcnNcbiAqXG4gKiBUaGlzIG1ldGhvZCBpcyBwYXJ0aWN1bGFybHkgdXNlZnVsIGZvciBza2lwcGluZyBvdmVyIGFueVxuICogaW50ZXJjZXB0b3JzIHRoYXQgbWF5IGhhdmUgYmVjb21lIGBudWxsYCBjYWxsaW5nIGBlamVjdGAuXG4gKlxuICogQHBhcmFtIHtGdW5jdGlvbn0gZm4gVGhlIGZ1bmN0aW9uIHRvIGNhbGwgZm9yIGVhY2ggaW50ZXJjZXB0b3JcbiAqL1xuSW50ZXJjZXB0b3JNYW5hZ2VyLnByb3RvdHlwZS5mb3JFYWNoID0gZnVuY3Rpb24gZm9yRWFjaChmbikge1xuICB1dGlscy5mb3JFYWNoKHRoaXMuaGFuZGxlcnMsIGZ1bmN0aW9uIGZvckVhY2hIYW5kbGVyKGgpIHtcbiAgICBpZiAoaCAhPT0gbnVsbCkge1xuICAgICAgZm4oaCk7XG4gICAgfVxuICB9KTtcbn07XG5cbm1vZHVsZS5leHBvcnRzID0gSW50ZXJjZXB0b3JNYW5hZ2VyO1xuXG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9ub2RlX21vZHVsZXMvYXhpb3MvbGliL2NvcmUvSW50ZXJjZXB0b3JNYW5hZ2VyLmpzXG4vLyBtb2R1bGUgaWQgPSAuL25vZGVfbW9kdWxlcy9heGlvcy9saWIvY29yZS9JbnRlcmNlcHRvck1hbmFnZXIuanNcbi8vIG1vZHVsZSBjaHVua3MgPSAxIDIiLCIndXNlIHN0cmljdCc7XG5cbnZhciBlbmhhbmNlRXJyb3IgPSByZXF1aXJlKCcuL2VuaGFuY2VFcnJvcicpO1xuXG4vKipcbiAqIENyZWF0ZSBhbiBFcnJvciB3aXRoIHRoZSBzcGVjaWZpZWQgbWVzc2FnZSwgY29uZmlnLCBlcnJvciBjb2RlLCByZXF1ZXN0IGFuZCByZXNwb25zZS5cbiAqXG4gKiBAcGFyYW0ge3N0cmluZ30gbWVzc2FnZSBUaGUgZXJyb3IgbWVzc2FnZS5cbiAqIEBwYXJhbSB7T2JqZWN0fSBjb25maWcgVGhlIGNvbmZpZy5cbiAqIEBwYXJhbSB7c3RyaW5nfSBbY29kZV0gVGhlIGVycm9yIGNvZGUgKGZvciBleGFtcGxlLCAnRUNPTk5BQk9SVEVEJykuXG4gKiBAcGFyYW0ge09iamVjdH0gW3JlcXVlc3RdIFRoZSByZXF1ZXN0LlxuICogQHBhcmFtIHtPYmplY3R9IFtyZXNwb25zZV0gVGhlIHJlc3BvbnNlLlxuICogQHJldHVybnMge0Vycm9yfSBUaGUgY3JlYXRlZCBlcnJvci5cbiAqL1xubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiBjcmVhdGVFcnJvcihtZXNzYWdlLCBjb25maWcsIGNvZGUsIHJlcXVlc3QsIHJlc3BvbnNlKSB7XG4gIHZhciBlcnJvciA9IG5ldyBFcnJvcihtZXNzYWdlKTtcbiAgcmV0dXJuIGVuaGFuY2VFcnJvcihlcnJvciwgY29uZmlnLCBjb2RlLCByZXF1ZXN0LCByZXNwb25zZSk7XG59O1xuXG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9ub2RlX21vZHVsZXMvYXhpb3MvbGliL2NvcmUvY3JlYXRlRXJyb3IuanNcbi8vIG1vZHVsZSBpZCA9IC4vbm9kZV9tb2R1bGVzL2F4aW9zL2xpYi9jb3JlL2NyZWF0ZUVycm9yLmpzXG4vLyBtb2R1bGUgY2h1bmtzID0gMSAyIiwiJ3VzZSBzdHJpY3QnO1xuXG52YXIgdXRpbHMgPSByZXF1aXJlKCcuLy4uL3V0aWxzJyk7XG52YXIgdHJhbnNmb3JtRGF0YSA9IHJlcXVpcmUoJy4vdHJhbnNmb3JtRGF0YScpO1xudmFyIGlzQ2FuY2VsID0gcmVxdWlyZSgnLi4vY2FuY2VsL2lzQ2FuY2VsJyk7XG52YXIgZGVmYXVsdHMgPSByZXF1aXJlKCcuLi9kZWZhdWx0cycpO1xudmFyIGlzQWJzb2x1dGVVUkwgPSByZXF1aXJlKCcuLy4uL2hlbHBlcnMvaXNBYnNvbHV0ZVVSTCcpO1xudmFyIGNvbWJpbmVVUkxzID0gcmVxdWlyZSgnLi8uLi9oZWxwZXJzL2NvbWJpbmVVUkxzJyk7XG5cbi8qKlxuICogVGhyb3dzIGEgYENhbmNlbGAgaWYgY2FuY2VsbGF0aW9uIGhhcyBiZWVuIHJlcXVlc3RlZC5cbiAqL1xuZnVuY3Rpb24gdGhyb3dJZkNhbmNlbGxhdGlvblJlcXVlc3RlZChjb25maWcpIHtcbiAgaWYgKGNvbmZpZy5jYW5jZWxUb2tlbikge1xuICAgIGNvbmZpZy5jYW5jZWxUb2tlbi50aHJvd0lmUmVxdWVzdGVkKCk7XG4gIH1cbn1cblxuLyoqXG4gKiBEaXNwYXRjaCBhIHJlcXVlc3QgdG8gdGhlIHNlcnZlciB1c2luZyB0aGUgY29uZmlndXJlZCBhZGFwdGVyLlxuICpcbiAqIEBwYXJhbSB7b2JqZWN0fSBjb25maWcgVGhlIGNvbmZpZyB0aGF0IGlzIHRvIGJlIHVzZWQgZm9yIHRoZSByZXF1ZXN0XG4gKiBAcmV0dXJucyB7UHJvbWlzZX0gVGhlIFByb21pc2UgdG8gYmUgZnVsZmlsbGVkXG4gKi9cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gZGlzcGF0Y2hSZXF1ZXN0KGNvbmZpZykge1xuICB0aHJvd0lmQ2FuY2VsbGF0aW9uUmVxdWVzdGVkKGNvbmZpZyk7XG5cbiAgLy8gU3VwcG9ydCBiYXNlVVJMIGNvbmZpZ1xuICBpZiAoY29uZmlnLmJhc2VVUkwgJiYgIWlzQWJzb2x1dGVVUkwoY29uZmlnLnVybCkpIHtcbiAgICBjb25maWcudXJsID0gY29tYmluZVVSTHMoY29uZmlnLmJhc2VVUkwsIGNvbmZpZy51cmwpO1xuICB9XG5cbiAgLy8gRW5zdXJlIGhlYWRlcnMgZXhpc3RcbiAgY29uZmlnLmhlYWRlcnMgPSBjb25maWcuaGVhZGVycyB8fCB7fTtcblxuICAvLyBUcmFuc2Zvcm0gcmVxdWVzdCBkYXRhXG4gIGNvbmZpZy5kYXRhID0gdHJhbnNmb3JtRGF0YShcbiAgICBjb25maWcuZGF0YSxcbiAgICBjb25maWcuaGVhZGVycyxcbiAgICBjb25maWcudHJhbnNmb3JtUmVxdWVzdFxuICApO1xuXG4gIC8vIEZsYXR0ZW4gaGVhZGVyc1xuICBjb25maWcuaGVhZGVycyA9IHV0aWxzLm1lcmdlKFxuICAgIGNvbmZpZy5oZWFkZXJzLmNvbW1vbiB8fCB7fSxcbiAgICBjb25maWcuaGVhZGVyc1tjb25maWcubWV0aG9kXSB8fCB7fSxcbiAgICBjb25maWcuaGVhZGVycyB8fCB7fVxuICApO1xuXG4gIHV0aWxzLmZvckVhY2goXG4gICAgWydkZWxldGUnLCAnZ2V0JywgJ2hlYWQnLCAncG9zdCcsICdwdXQnLCAncGF0Y2gnLCAnY29tbW9uJ10sXG4gICAgZnVuY3Rpb24gY2xlYW5IZWFkZXJDb25maWcobWV0aG9kKSB7XG4gICAgICBkZWxldGUgY29uZmlnLmhlYWRlcnNbbWV0aG9kXTtcbiAgICB9XG4gICk7XG5cbiAgdmFyIGFkYXB0ZXIgPSBjb25maWcuYWRhcHRlciB8fCBkZWZhdWx0cy5hZGFwdGVyO1xuXG4gIHJldHVybiBhZGFwdGVyKGNvbmZpZykudGhlbihmdW5jdGlvbiBvbkFkYXB0ZXJSZXNvbHV0aW9uKHJlc3BvbnNlKSB7XG4gICAgdGhyb3dJZkNhbmNlbGxhdGlvblJlcXVlc3RlZChjb25maWcpO1xuXG4gICAgLy8gVHJhbnNmb3JtIHJlc3BvbnNlIGRhdGFcbiAgICByZXNwb25zZS5kYXRhID0gdHJhbnNmb3JtRGF0YShcbiAgICAgIHJlc3BvbnNlLmRhdGEsXG4gICAgICByZXNwb25zZS5oZWFkZXJzLFxuICAgICAgY29uZmlnLnRyYW5zZm9ybVJlc3BvbnNlXG4gICAgKTtcblxuICAgIHJldHVybiByZXNwb25zZTtcbiAgfSwgZnVuY3Rpb24gb25BZGFwdGVyUmVqZWN0aW9uKHJlYXNvbikge1xuICAgIGlmICghaXNDYW5jZWwocmVhc29uKSkge1xuICAgICAgdGhyb3dJZkNhbmNlbGxhdGlvblJlcXVlc3RlZChjb25maWcpO1xuXG4gICAgICAvLyBUcmFuc2Zvcm0gcmVzcG9uc2UgZGF0YVxuICAgICAgaWYgKHJlYXNvbiAmJiByZWFzb24ucmVzcG9uc2UpIHtcbiAgICAgICAgcmVhc29uLnJlc3BvbnNlLmRhdGEgPSB0cmFuc2Zvcm1EYXRhKFxuICAgICAgICAgIHJlYXNvbi5yZXNwb25zZS5kYXRhLFxuICAgICAgICAgIHJlYXNvbi5yZXNwb25zZS5oZWFkZXJzLFxuICAgICAgICAgIGNvbmZpZy50cmFuc2Zvcm1SZXNwb25zZVxuICAgICAgICApO1xuICAgICAgfVxuICAgIH1cblxuICAgIHJldHVybiBQcm9taXNlLnJlamVjdChyZWFzb24pO1xuICB9KTtcbn07XG5cblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL25vZGVfbW9kdWxlcy9heGlvcy9saWIvY29yZS9kaXNwYXRjaFJlcXVlc3QuanNcbi8vIG1vZHVsZSBpZCA9IC4vbm9kZV9tb2R1bGVzL2F4aW9zL2xpYi9jb3JlL2Rpc3BhdGNoUmVxdWVzdC5qc1xuLy8gbW9kdWxlIGNodW5rcyA9IDEgMiIsIid1c2Ugc3RyaWN0JztcblxuLyoqXG4gKiBVcGRhdGUgYW4gRXJyb3Igd2l0aCB0aGUgc3BlY2lmaWVkIGNvbmZpZywgZXJyb3IgY29kZSwgYW5kIHJlc3BvbnNlLlxuICpcbiAqIEBwYXJhbSB7RXJyb3J9IGVycm9yIFRoZSBlcnJvciB0byB1cGRhdGUuXG4gKiBAcGFyYW0ge09iamVjdH0gY29uZmlnIFRoZSBjb25maWcuXG4gKiBAcGFyYW0ge3N0cmluZ30gW2NvZGVdIFRoZSBlcnJvciBjb2RlIChmb3IgZXhhbXBsZSwgJ0VDT05OQUJPUlRFRCcpLlxuICogQHBhcmFtIHtPYmplY3R9IFtyZXF1ZXN0XSBUaGUgcmVxdWVzdC5cbiAqIEBwYXJhbSB7T2JqZWN0fSBbcmVzcG9uc2VdIFRoZSByZXNwb25zZS5cbiAqIEByZXR1cm5zIHtFcnJvcn0gVGhlIGVycm9yLlxuICovXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIGVuaGFuY2VFcnJvcihlcnJvciwgY29uZmlnLCBjb2RlLCByZXF1ZXN0LCByZXNwb25zZSkge1xuICBlcnJvci5jb25maWcgPSBjb25maWc7XG4gIGlmIChjb2RlKSB7XG4gICAgZXJyb3IuY29kZSA9IGNvZGU7XG4gIH1cbiAgZXJyb3IucmVxdWVzdCA9IHJlcXVlc3Q7XG4gIGVycm9yLnJlc3BvbnNlID0gcmVzcG9uc2U7XG4gIHJldHVybiBlcnJvcjtcbn07XG5cblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL25vZGVfbW9kdWxlcy9heGlvcy9saWIvY29yZS9lbmhhbmNlRXJyb3IuanNcbi8vIG1vZHVsZSBpZCA9IC4vbm9kZV9tb2R1bGVzL2F4aW9zL2xpYi9jb3JlL2VuaGFuY2VFcnJvci5qc1xuLy8gbW9kdWxlIGNodW5rcyA9IDEgMiIsIid1c2Ugc3RyaWN0JztcblxudmFyIGNyZWF0ZUVycm9yID0gcmVxdWlyZSgnLi9jcmVhdGVFcnJvcicpO1xuXG4vKipcbiAqIFJlc29sdmUgb3IgcmVqZWN0IGEgUHJvbWlzZSBiYXNlZCBvbiByZXNwb25zZSBzdGF0dXMuXG4gKlxuICogQHBhcmFtIHtGdW5jdGlvbn0gcmVzb2x2ZSBBIGZ1bmN0aW9uIHRoYXQgcmVzb2x2ZXMgdGhlIHByb21pc2UuXG4gKiBAcGFyYW0ge0Z1bmN0aW9ufSByZWplY3QgQSBmdW5jdGlvbiB0aGF0IHJlamVjdHMgdGhlIHByb21pc2UuXG4gKiBAcGFyYW0ge29iamVjdH0gcmVzcG9uc2UgVGhlIHJlc3BvbnNlLlxuICovXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIHNldHRsZShyZXNvbHZlLCByZWplY3QsIHJlc3BvbnNlKSB7XG4gIHZhciB2YWxpZGF0ZVN0YXR1cyA9IHJlc3BvbnNlLmNvbmZpZy52YWxpZGF0ZVN0YXR1cztcbiAgLy8gTm90ZTogc3RhdHVzIGlzIG5vdCBleHBvc2VkIGJ5IFhEb21haW5SZXF1ZXN0XG4gIGlmICghcmVzcG9uc2Uuc3RhdHVzIHx8ICF2YWxpZGF0ZVN0YXR1cyB8fCB2YWxpZGF0ZVN0YXR1cyhyZXNwb25zZS5zdGF0dXMpKSB7XG4gICAgcmVzb2x2ZShyZXNwb25zZSk7XG4gIH0gZWxzZSB7XG4gICAgcmVqZWN0KGNyZWF0ZUVycm9yKFxuICAgICAgJ1JlcXVlc3QgZmFpbGVkIHdpdGggc3RhdHVzIGNvZGUgJyArIHJlc3BvbnNlLnN0YXR1cyxcbiAgICAgIHJlc3BvbnNlLmNvbmZpZyxcbiAgICAgIG51bGwsXG4gICAgICByZXNwb25zZS5yZXF1ZXN0LFxuICAgICAgcmVzcG9uc2VcbiAgICApKTtcbiAgfVxufTtcblxuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vbm9kZV9tb2R1bGVzL2F4aW9zL2xpYi9jb3JlL3NldHRsZS5qc1xuLy8gbW9kdWxlIGlkID0gLi9ub2RlX21vZHVsZXMvYXhpb3MvbGliL2NvcmUvc2V0dGxlLmpzXG4vLyBtb2R1bGUgY2h1bmtzID0gMSAyIiwiJ3VzZSBzdHJpY3QnO1xuXG52YXIgdXRpbHMgPSByZXF1aXJlKCcuLy4uL3V0aWxzJyk7XG5cbi8qKlxuICogVHJhbnNmb3JtIHRoZSBkYXRhIGZvciBhIHJlcXVlc3Qgb3IgYSByZXNwb25zZVxuICpcbiAqIEBwYXJhbSB7T2JqZWN0fFN0cmluZ30gZGF0YSBUaGUgZGF0YSB0byBiZSB0cmFuc2Zvcm1lZFxuICogQHBhcmFtIHtBcnJheX0gaGVhZGVycyBUaGUgaGVhZGVycyBmb3IgdGhlIHJlcXVlc3Qgb3IgcmVzcG9uc2VcbiAqIEBwYXJhbSB7QXJyYXl8RnVuY3Rpb259IGZucyBBIHNpbmdsZSBmdW5jdGlvbiBvciBBcnJheSBvZiBmdW5jdGlvbnNcbiAqIEByZXR1cm5zIHsqfSBUaGUgcmVzdWx0aW5nIHRyYW5zZm9ybWVkIGRhdGFcbiAqL1xubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiB0cmFuc2Zvcm1EYXRhKGRhdGEsIGhlYWRlcnMsIGZucykge1xuICAvKmVzbGludCBuby1wYXJhbS1yZWFzc2lnbjowKi9cbiAgdXRpbHMuZm9yRWFjaChmbnMsIGZ1bmN0aW9uIHRyYW5zZm9ybShmbikge1xuICAgIGRhdGEgPSBmbihkYXRhLCBoZWFkZXJzKTtcbiAgfSk7XG5cbiAgcmV0dXJuIGRhdGE7XG59O1xuXG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9ub2RlX21vZHVsZXMvYXhpb3MvbGliL2NvcmUvdHJhbnNmb3JtRGF0YS5qc1xuLy8gbW9kdWxlIGlkID0gLi9ub2RlX21vZHVsZXMvYXhpb3MvbGliL2NvcmUvdHJhbnNmb3JtRGF0YS5qc1xuLy8gbW9kdWxlIGNodW5rcyA9IDEgMiIsIid1c2Ugc3RyaWN0JztcblxudmFyIHV0aWxzID0gcmVxdWlyZSgnLi91dGlscycpO1xudmFyIG5vcm1hbGl6ZUhlYWRlck5hbWUgPSByZXF1aXJlKCcuL2hlbHBlcnMvbm9ybWFsaXplSGVhZGVyTmFtZScpO1xuXG52YXIgREVGQVVMVF9DT05URU5UX1RZUEUgPSB7XG4gICdDb250ZW50LVR5cGUnOiAnYXBwbGljYXRpb24veC13d3ctZm9ybS11cmxlbmNvZGVkJ1xufTtcblxuZnVuY3Rpb24gc2V0Q29udGVudFR5cGVJZlVuc2V0KGhlYWRlcnMsIHZhbHVlKSB7XG4gIGlmICghdXRpbHMuaXNVbmRlZmluZWQoaGVhZGVycykgJiYgdXRpbHMuaXNVbmRlZmluZWQoaGVhZGVyc1snQ29udGVudC1UeXBlJ10pKSB7XG4gICAgaGVhZGVyc1snQ29udGVudC1UeXBlJ10gPSB2YWx1ZTtcbiAgfVxufVxuXG5mdW5jdGlvbiBnZXREZWZhdWx0QWRhcHRlcigpIHtcbiAgdmFyIGFkYXB0ZXI7XG4gIGlmICh0eXBlb2YgWE1MSHR0cFJlcXVlc3QgIT09ICd1bmRlZmluZWQnKSB7XG4gICAgLy8gRm9yIGJyb3dzZXJzIHVzZSBYSFIgYWRhcHRlclxuICAgIGFkYXB0ZXIgPSByZXF1aXJlKCcuL2FkYXB0ZXJzL3hocicpO1xuICB9IGVsc2UgaWYgKHR5cGVvZiBwcm9jZXNzICE9PSAndW5kZWZpbmVkJykge1xuICAgIC8vIEZvciBub2RlIHVzZSBIVFRQIGFkYXB0ZXJcbiAgICBhZGFwdGVyID0gcmVxdWlyZSgnLi9hZGFwdGVycy9odHRwJyk7XG4gIH1cbiAgcmV0dXJuIGFkYXB0ZXI7XG59XG5cbnZhciBkZWZhdWx0cyA9IHtcbiAgYWRhcHRlcjogZ2V0RGVmYXVsdEFkYXB0ZXIoKSxcblxuICB0cmFuc2Zvcm1SZXF1ZXN0OiBbZnVuY3Rpb24gdHJhbnNmb3JtUmVxdWVzdChkYXRhLCBoZWFkZXJzKSB7XG4gICAgbm9ybWFsaXplSGVhZGVyTmFtZShoZWFkZXJzLCAnQ29udGVudC1UeXBlJyk7XG4gICAgaWYgKHV0aWxzLmlzRm9ybURhdGEoZGF0YSkgfHxcbiAgICAgIHV0aWxzLmlzQXJyYXlCdWZmZXIoZGF0YSkgfHxcbiAgICAgIHV0aWxzLmlzQnVmZmVyKGRhdGEpIHx8XG4gICAgICB1dGlscy5pc1N0cmVhbShkYXRhKSB8fFxuICAgICAgdXRpbHMuaXNGaWxlKGRhdGEpIHx8XG4gICAgICB1dGlscy5pc0Jsb2IoZGF0YSlcbiAgICApIHtcbiAgICAgIHJldHVybiBkYXRhO1xuICAgIH1cbiAgICBpZiAodXRpbHMuaXNBcnJheUJ1ZmZlclZpZXcoZGF0YSkpIHtcbiAgICAgIHJldHVybiBkYXRhLmJ1ZmZlcjtcbiAgICB9XG4gICAgaWYgKHV0aWxzLmlzVVJMU2VhcmNoUGFyYW1zKGRhdGEpKSB7XG4gICAgICBzZXRDb250ZW50VHlwZUlmVW5zZXQoaGVhZGVycywgJ2FwcGxpY2F0aW9uL3gtd3d3LWZvcm0tdXJsZW5jb2RlZDtjaGFyc2V0PXV0Zi04Jyk7XG4gICAgICByZXR1cm4gZGF0YS50b1N0cmluZygpO1xuICAgIH1cbiAgICBpZiAodXRpbHMuaXNPYmplY3QoZGF0YSkpIHtcbiAgICAgIHNldENvbnRlbnRUeXBlSWZVbnNldChoZWFkZXJzLCAnYXBwbGljYXRpb24vanNvbjtjaGFyc2V0PXV0Zi04Jyk7XG4gICAgICByZXR1cm4gSlNPTi5zdHJpbmdpZnkoZGF0YSk7XG4gICAgfVxuICAgIHJldHVybiBkYXRhO1xuICB9XSxcblxuICB0cmFuc2Zvcm1SZXNwb25zZTogW2Z1bmN0aW9uIHRyYW5zZm9ybVJlc3BvbnNlKGRhdGEpIHtcbiAgICAvKmVzbGludCBuby1wYXJhbS1yZWFzc2lnbjowKi9cbiAgICBpZiAodHlwZW9mIGRhdGEgPT09ICdzdHJpbmcnKSB7XG4gICAgICB0cnkge1xuICAgICAgICBkYXRhID0gSlNPTi5wYXJzZShkYXRhKTtcbiAgICAgIH0gY2F0Y2ggKGUpIHsgLyogSWdub3JlICovIH1cbiAgICB9XG4gICAgcmV0dXJuIGRhdGE7XG4gIH1dLFxuXG4gIC8qKlxuICAgKiBBIHRpbWVvdXQgaW4gbWlsbGlzZWNvbmRzIHRvIGFib3J0IGEgcmVxdWVzdC4gSWYgc2V0IHRvIDAgKGRlZmF1bHQpIGFcbiAgICogdGltZW91dCBpcyBub3QgY3JlYXRlZC5cbiAgICovXG4gIHRpbWVvdXQ6IDAsXG5cbiAgeHNyZkNvb2tpZU5hbWU6ICdYU1JGLVRPS0VOJyxcbiAgeHNyZkhlYWRlck5hbWU6ICdYLVhTUkYtVE9LRU4nLFxuXG4gIG1heENvbnRlbnRMZW5ndGg6IC0xLFxuXG4gIHZhbGlkYXRlU3RhdHVzOiBmdW5jdGlvbiB2YWxpZGF0ZVN0YXR1cyhzdGF0dXMpIHtcbiAgICByZXR1cm4gc3RhdHVzID49IDIwMCAmJiBzdGF0dXMgPCAzMDA7XG4gIH1cbn07XG5cbmRlZmF1bHRzLmhlYWRlcnMgPSB7XG4gIGNvbW1vbjoge1xuICAgICdBY2NlcHQnOiAnYXBwbGljYXRpb24vanNvbiwgdGV4dC9wbGFpbiwgKi8qJ1xuICB9XG59O1xuXG51dGlscy5mb3JFYWNoKFsnZGVsZXRlJywgJ2dldCcsICdoZWFkJ10sIGZ1bmN0aW9uIGZvckVhY2hNZXRob2ROb0RhdGEobWV0aG9kKSB7XG4gIGRlZmF1bHRzLmhlYWRlcnNbbWV0aG9kXSA9IHt9O1xufSk7XG5cbnV0aWxzLmZvckVhY2goWydwb3N0JywgJ3B1dCcsICdwYXRjaCddLCBmdW5jdGlvbiBmb3JFYWNoTWV0aG9kV2l0aERhdGEobWV0aG9kKSB7XG4gIGRlZmF1bHRzLmhlYWRlcnNbbWV0aG9kXSA9IHV0aWxzLm1lcmdlKERFRkFVTFRfQ09OVEVOVF9UWVBFKTtcbn0pO1xuXG5tb2R1bGUuZXhwb3J0cyA9IGRlZmF1bHRzO1xuXG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9ub2RlX21vZHVsZXMvYXhpb3MvbGliL2RlZmF1bHRzLmpzXG4vLyBtb2R1bGUgaWQgPSAuL25vZGVfbW9kdWxlcy9heGlvcy9saWIvZGVmYXVsdHMuanNcbi8vIG1vZHVsZSBjaHVua3MgPSAxIDIiLCIndXNlIHN0cmljdCc7XG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gYmluZChmbiwgdGhpc0FyZykge1xuICByZXR1cm4gZnVuY3Rpb24gd3JhcCgpIHtcbiAgICB2YXIgYXJncyA9IG5ldyBBcnJheShhcmd1bWVudHMubGVuZ3RoKTtcbiAgICBmb3IgKHZhciBpID0gMDsgaSA8IGFyZ3MubGVuZ3RoOyBpKyspIHtcbiAgICAgIGFyZ3NbaV0gPSBhcmd1bWVudHNbaV07XG4gICAgfVxuICAgIHJldHVybiBmbi5hcHBseSh0aGlzQXJnLCBhcmdzKTtcbiAgfTtcbn07XG5cblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL25vZGVfbW9kdWxlcy9heGlvcy9saWIvaGVscGVycy9iaW5kLmpzXG4vLyBtb2R1bGUgaWQgPSAuL25vZGVfbW9kdWxlcy9heGlvcy9saWIvaGVscGVycy9iaW5kLmpzXG4vLyBtb2R1bGUgY2h1bmtzID0gMSAyIiwiJ3VzZSBzdHJpY3QnO1xuXG4vLyBidG9hIHBvbHlmaWxsIGZvciBJRTwxMCBjb3VydGVzeSBodHRwczovL2dpdGh1Yi5jb20vZGF2aWRjaGFtYmVycy9CYXNlNjQuanNcblxudmFyIGNoYXJzID0gJ0FCQ0RFRkdISUpLTE1OT1BRUlNUVVZXWFlaYWJjZGVmZ2hpamtsbW5vcHFyc3R1dnd4eXowMTIzNDU2Nzg5Ky89JztcblxuZnVuY3Rpb24gRSgpIHtcbiAgdGhpcy5tZXNzYWdlID0gJ1N0cmluZyBjb250YWlucyBhbiBpbnZhbGlkIGNoYXJhY3Rlcic7XG59XG5FLnByb3RvdHlwZSA9IG5ldyBFcnJvcjtcbkUucHJvdG90eXBlLmNvZGUgPSA1O1xuRS5wcm90b3R5cGUubmFtZSA9ICdJbnZhbGlkQ2hhcmFjdGVyRXJyb3InO1xuXG5mdW5jdGlvbiBidG9hKGlucHV0KSB7XG4gIHZhciBzdHIgPSBTdHJpbmcoaW5wdXQpO1xuICB2YXIgb3V0cHV0ID0gJyc7XG4gIGZvciAoXG4gICAgLy8gaW5pdGlhbGl6ZSByZXN1bHQgYW5kIGNvdW50ZXJcbiAgICB2YXIgYmxvY2ssIGNoYXJDb2RlLCBpZHggPSAwLCBtYXAgPSBjaGFycztcbiAgICAvLyBpZiB0aGUgbmV4dCBzdHIgaW5kZXggZG9lcyBub3QgZXhpc3Q6XG4gICAgLy8gICBjaGFuZ2UgdGhlIG1hcHBpbmcgdGFibGUgdG8gXCI9XCJcbiAgICAvLyAgIGNoZWNrIGlmIGQgaGFzIG5vIGZyYWN0aW9uYWwgZGlnaXRzXG4gICAgc3RyLmNoYXJBdChpZHggfCAwKSB8fCAobWFwID0gJz0nLCBpZHggJSAxKTtcbiAgICAvLyBcIjggLSBpZHggJSAxICogOFwiIGdlbmVyYXRlcyB0aGUgc2VxdWVuY2UgMiwgNCwgNiwgOFxuICAgIG91dHB1dCArPSBtYXAuY2hhckF0KDYzICYgYmxvY2sgPj4gOCAtIGlkeCAlIDEgKiA4KVxuICApIHtcbiAgICBjaGFyQ29kZSA9IHN0ci5jaGFyQ29kZUF0KGlkeCArPSAzIC8gNCk7XG4gICAgaWYgKGNoYXJDb2RlID4gMHhGRikge1xuICAgICAgdGhyb3cgbmV3IEUoKTtcbiAgICB9XG4gICAgYmxvY2sgPSBibG9jayA8PCA4IHwgY2hhckNvZGU7XG4gIH1cbiAgcmV0dXJuIG91dHB1dDtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBidG9hO1xuXG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9ub2RlX21vZHVsZXMvYXhpb3MvbGliL2hlbHBlcnMvYnRvYS5qc1xuLy8gbW9kdWxlIGlkID0gLi9ub2RlX21vZHVsZXMvYXhpb3MvbGliL2hlbHBlcnMvYnRvYS5qc1xuLy8gbW9kdWxlIGNodW5rcyA9IDEgMiIsIid1c2Ugc3RyaWN0JztcblxudmFyIHV0aWxzID0gcmVxdWlyZSgnLi8uLi91dGlscycpO1xuXG5mdW5jdGlvbiBlbmNvZGUodmFsKSB7XG4gIHJldHVybiBlbmNvZGVVUklDb21wb25lbnQodmFsKS5cbiAgICByZXBsYWNlKC8lNDAvZ2ksICdAJykuXG4gICAgcmVwbGFjZSgvJTNBL2dpLCAnOicpLlxuICAgIHJlcGxhY2UoLyUyNC9nLCAnJCcpLlxuICAgIHJlcGxhY2UoLyUyQy9naSwgJywnKS5cbiAgICByZXBsYWNlKC8lMjAvZywgJysnKS5cbiAgICByZXBsYWNlKC8lNUIvZ2ksICdbJykuXG4gICAgcmVwbGFjZSgvJTVEL2dpLCAnXScpO1xufVxuXG4vKipcbiAqIEJ1aWxkIGEgVVJMIGJ5IGFwcGVuZGluZyBwYXJhbXMgdG8gdGhlIGVuZFxuICpcbiAqIEBwYXJhbSB7c3RyaW5nfSB1cmwgVGhlIGJhc2Ugb2YgdGhlIHVybCAoZS5nLiwgaHR0cDovL3d3dy5nb29nbGUuY29tKVxuICogQHBhcmFtIHtvYmplY3R9IFtwYXJhbXNdIFRoZSBwYXJhbXMgdG8gYmUgYXBwZW5kZWRcbiAqIEByZXR1cm5zIHtzdHJpbmd9IFRoZSBmb3JtYXR0ZWQgdXJsXG4gKi9cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gYnVpbGRVUkwodXJsLCBwYXJhbXMsIHBhcmFtc1NlcmlhbGl6ZXIpIHtcbiAgLyplc2xpbnQgbm8tcGFyYW0tcmVhc3NpZ246MCovXG4gIGlmICghcGFyYW1zKSB7XG4gICAgcmV0dXJuIHVybDtcbiAgfVxuXG4gIHZhciBzZXJpYWxpemVkUGFyYW1zO1xuICBpZiAocGFyYW1zU2VyaWFsaXplcikge1xuICAgIHNlcmlhbGl6ZWRQYXJhbXMgPSBwYXJhbXNTZXJpYWxpemVyKHBhcmFtcyk7XG4gIH0gZWxzZSBpZiAodXRpbHMuaXNVUkxTZWFyY2hQYXJhbXMocGFyYW1zKSkge1xuICAgIHNlcmlhbGl6ZWRQYXJhbXMgPSBwYXJhbXMudG9TdHJpbmcoKTtcbiAgfSBlbHNlIHtcbiAgICB2YXIgcGFydHMgPSBbXTtcblxuICAgIHV0aWxzLmZvckVhY2gocGFyYW1zLCBmdW5jdGlvbiBzZXJpYWxpemUodmFsLCBrZXkpIHtcbiAgICAgIGlmICh2YWwgPT09IG51bGwgfHwgdHlwZW9mIHZhbCA9PT0gJ3VuZGVmaW5lZCcpIHtcbiAgICAgICAgcmV0dXJuO1xuICAgICAgfVxuXG4gICAgICBpZiAodXRpbHMuaXNBcnJheSh2YWwpKSB7XG4gICAgICAgIGtleSA9IGtleSArICdbXSc7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICB2YWwgPSBbdmFsXTtcbiAgICAgIH1cblxuICAgICAgdXRpbHMuZm9yRWFjaCh2YWwsIGZ1bmN0aW9uIHBhcnNlVmFsdWUodikge1xuICAgICAgICBpZiAodXRpbHMuaXNEYXRlKHYpKSB7XG4gICAgICAgICAgdiA9IHYudG9JU09TdHJpbmcoKTtcbiAgICAgICAgfSBlbHNlIGlmICh1dGlscy5pc09iamVjdCh2KSkge1xuICAgICAgICAgIHYgPSBKU09OLnN0cmluZ2lmeSh2KTtcbiAgICAgICAgfVxuICAgICAgICBwYXJ0cy5wdXNoKGVuY29kZShrZXkpICsgJz0nICsgZW5jb2RlKHYpKTtcbiAgICAgIH0pO1xuICAgIH0pO1xuXG4gICAgc2VyaWFsaXplZFBhcmFtcyA9IHBhcnRzLmpvaW4oJyYnKTtcbiAgfVxuXG4gIGlmIChzZXJpYWxpemVkUGFyYW1zKSB7XG4gICAgdXJsICs9ICh1cmwuaW5kZXhPZignPycpID09PSAtMSA/ICc/JyA6ICcmJykgKyBzZXJpYWxpemVkUGFyYW1zO1xuICB9XG5cbiAgcmV0dXJuIHVybDtcbn07XG5cblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL25vZGVfbW9kdWxlcy9heGlvcy9saWIvaGVscGVycy9idWlsZFVSTC5qc1xuLy8gbW9kdWxlIGlkID0gLi9ub2RlX21vZHVsZXMvYXhpb3MvbGliL2hlbHBlcnMvYnVpbGRVUkwuanNcbi8vIG1vZHVsZSBjaHVua3MgPSAxIDIiLCIndXNlIHN0cmljdCc7XG5cbi8qKlxuICogQ3JlYXRlcyBhIG5ldyBVUkwgYnkgY29tYmluaW5nIHRoZSBzcGVjaWZpZWQgVVJMc1xuICpcbiAqIEBwYXJhbSB7c3RyaW5nfSBiYXNlVVJMIFRoZSBiYXNlIFVSTFxuICogQHBhcmFtIHtzdHJpbmd9IHJlbGF0aXZlVVJMIFRoZSByZWxhdGl2ZSBVUkxcbiAqIEByZXR1cm5zIHtzdHJpbmd9IFRoZSBjb21iaW5lZCBVUkxcbiAqL1xubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiBjb21iaW5lVVJMcyhiYXNlVVJMLCByZWxhdGl2ZVVSTCkge1xuICByZXR1cm4gcmVsYXRpdmVVUkxcbiAgICA/IGJhc2VVUkwucmVwbGFjZSgvXFwvKyQvLCAnJykgKyAnLycgKyByZWxhdGl2ZVVSTC5yZXBsYWNlKC9eXFwvKy8sICcnKVxuICAgIDogYmFzZVVSTDtcbn07XG5cblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL25vZGVfbW9kdWxlcy9heGlvcy9saWIvaGVscGVycy9jb21iaW5lVVJMcy5qc1xuLy8gbW9kdWxlIGlkID0gLi9ub2RlX21vZHVsZXMvYXhpb3MvbGliL2hlbHBlcnMvY29tYmluZVVSTHMuanNcbi8vIG1vZHVsZSBjaHVua3MgPSAxIDIiLCIndXNlIHN0cmljdCc7XG5cbnZhciB1dGlscyA9IHJlcXVpcmUoJy4vLi4vdXRpbHMnKTtcblxubW9kdWxlLmV4cG9ydHMgPSAoXG4gIHV0aWxzLmlzU3RhbmRhcmRCcm93c2VyRW52KCkgP1xuXG4gIC8vIFN0YW5kYXJkIGJyb3dzZXIgZW52cyBzdXBwb3J0IGRvY3VtZW50LmNvb2tpZVxuICAoZnVuY3Rpb24gc3RhbmRhcmRCcm93c2VyRW52KCkge1xuICAgIHJldHVybiB7XG4gICAgICB3cml0ZTogZnVuY3Rpb24gd3JpdGUobmFtZSwgdmFsdWUsIGV4cGlyZXMsIHBhdGgsIGRvbWFpbiwgc2VjdXJlKSB7XG4gICAgICAgIHZhciBjb29raWUgPSBbXTtcbiAgICAgICAgY29va2llLnB1c2gobmFtZSArICc9JyArIGVuY29kZVVSSUNvbXBvbmVudCh2YWx1ZSkpO1xuXG4gICAgICAgIGlmICh1dGlscy5pc051bWJlcihleHBpcmVzKSkge1xuICAgICAgICAgIGNvb2tpZS5wdXNoKCdleHBpcmVzPScgKyBuZXcgRGF0ZShleHBpcmVzKS50b0dNVFN0cmluZygpKTtcbiAgICAgICAgfVxuXG4gICAgICAgIGlmICh1dGlscy5pc1N0cmluZyhwYXRoKSkge1xuICAgICAgICAgIGNvb2tpZS5wdXNoKCdwYXRoPScgKyBwYXRoKTtcbiAgICAgICAgfVxuXG4gICAgICAgIGlmICh1dGlscy5pc1N0cmluZyhkb21haW4pKSB7XG4gICAgICAgICAgY29va2llLnB1c2goJ2RvbWFpbj0nICsgZG9tYWluKTtcbiAgICAgICAgfVxuXG4gICAgICAgIGlmIChzZWN1cmUgPT09IHRydWUpIHtcbiAgICAgICAgICBjb29raWUucHVzaCgnc2VjdXJlJyk7XG4gICAgICAgIH1cblxuICAgICAgICBkb2N1bWVudC5jb29raWUgPSBjb29raWUuam9pbignOyAnKTtcbiAgICAgIH0sXG5cbiAgICAgIHJlYWQ6IGZ1bmN0aW9uIHJlYWQobmFtZSkge1xuICAgICAgICB2YXIgbWF0Y2ggPSBkb2N1bWVudC5jb29raWUubWF0Y2gobmV3IFJlZ0V4cCgnKF58O1xcXFxzKikoJyArIG5hbWUgKyAnKT0oW147XSopJykpO1xuICAgICAgICByZXR1cm4gKG1hdGNoID8gZGVjb2RlVVJJQ29tcG9uZW50KG1hdGNoWzNdKSA6IG51bGwpO1xuICAgICAgfSxcblxuICAgICAgcmVtb3ZlOiBmdW5jdGlvbiByZW1vdmUobmFtZSkge1xuICAgICAgICB0aGlzLndyaXRlKG5hbWUsICcnLCBEYXRlLm5vdygpIC0gODY0MDAwMDApO1xuICAgICAgfVxuICAgIH07XG4gIH0pKCkgOlxuXG4gIC8vIE5vbiBzdGFuZGFyZCBicm93c2VyIGVudiAod2ViIHdvcmtlcnMsIHJlYWN0LW5hdGl2ZSkgbGFjayBuZWVkZWQgc3VwcG9ydC5cbiAgKGZ1bmN0aW9uIG5vblN0YW5kYXJkQnJvd3NlckVudigpIHtcbiAgICByZXR1cm4ge1xuICAgICAgd3JpdGU6IGZ1bmN0aW9uIHdyaXRlKCkge30sXG4gICAgICByZWFkOiBmdW5jdGlvbiByZWFkKCkgeyByZXR1cm4gbnVsbDsgfSxcbiAgICAgIHJlbW92ZTogZnVuY3Rpb24gcmVtb3ZlKCkge31cbiAgICB9O1xuICB9KSgpXG4pO1xuXG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9ub2RlX21vZHVsZXMvYXhpb3MvbGliL2hlbHBlcnMvY29va2llcy5qc1xuLy8gbW9kdWxlIGlkID0gLi9ub2RlX21vZHVsZXMvYXhpb3MvbGliL2hlbHBlcnMvY29va2llcy5qc1xuLy8gbW9kdWxlIGNodW5rcyA9IDEgMiIsIid1c2Ugc3RyaWN0JztcblxuLyoqXG4gKiBEZXRlcm1pbmVzIHdoZXRoZXIgdGhlIHNwZWNpZmllZCBVUkwgaXMgYWJzb2x1dGVcbiAqXG4gKiBAcGFyYW0ge3N0cmluZ30gdXJsIFRoZSBVUkwgdG8gdGVzdFxuICogQHJldHVybnMge2Jvb2xlYW59IFRydWUgaWYgdGhlIHNwZWNpZmllZCBVUkwgaXMgYWJzb2x1dGUsIG90aGVyd2lzZSBmYWxzZVxuICovXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIGlzQWJzb2x1dGVVUkwodXJsKSB7XG4gIC8vIEEgVVJMIGlzIGNvbnNpZGVyZWQgYWJzb2x1dGUgaWYgaXQgYmVnaW5zIHdpdGggXCI8c2NoZW1lPjovL1wiIG9yIFwiLy9cIiAocHJvdG9jb2wtcmVsYXRpdmUgVVJMKS5cbiAgLy8gUkZDIDM5ODYgZGVmaW5lcyBzY2hlbWUgbmFtZSBhcyBhIHNlcXVlbmNlIG9mIGNoYXJhY3RlcnMgYmVnaW5uaW5nIHdpdGggYSBsZXR0ZXIgYW5kIGZvbGxvd2VkXG4gIC8vIGJ5IGFueSBjb21iaW5hdGlvbiBvZiBsZXR0ZXJzLCBkaWdpdHMsIHBsdXMsIHBlcmlvZCwgb3IgaHlwaGVuLlxuICByZXR1cm4gL14oW2Etel1bYS16XFxkXFwrXFwtXFwuXSo6KT9cXC9cXC8vaS50ZXN0KHVybCk7XG59O1xuXG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9ub2RlX21vZHVsZXMvYXhpb3MvbGliL2hlbHBlcnMvaXNBYnNvbHV0ZVVSTC5qc1xuLy8gbW9kdWxlIGlkID0gLi9ub2RlX21vZHVsZXMvYXhpb3MvbGliL2hlbHBlcnMvaXNBYnNvbHV0ZVVSTC5qc1xuLy8gbW9kdWxlIGNodW5rcyA9IDEgMiIsIid1c2Ugc3RyaWN0JztcblxudmFyIHV0aWxzID0gcmVxdWlyZSgnLi8uLi91dGlscycpO1xuXG5tb2R1bGUuZXhwb3J0cyA9IChcbiAgdXRpbHMuaXNTdGFuZGFyZEJyb3dzZXJFbnYoKSA/XG5cbiAgLy8gU3RhbmRhcmQgYnJvd3NlciBlbnZzIGhhdmUgZnVsbCBzdXBwb3J0IG9mIHRoZSBBUElzIG5lZWRlZCB0byB0ZXN0XG4gIC8vIHdoZXRoZXIgdGhlIHJlcXVlc3QgVVJMIGlzIG9mIHRoZSBzYW1lIG9yaWdpbiBhcyBjdXJyZW50IGxvY2F0aW9uLlxuICAoZnVuY3Rpb24gc3RhbmRhcmRCcm93c2VyRW52KCkge1xuICAgIHZhciBtc2llID0gLyhtc2llfHRyaWRlbnQpL2kudGVzdChuYXZpZ2F0b3IudXNlckFnZW50KTtcbiAgICB2YXIgdXJsUGFyc2luZ05vZGUgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdhJyk7XG4gICAgdmFyIG9yaWdpblVSTDtcblxuICAgIC8qKlxuICAgICogUGFyc2UgYSBVUkwgdG8gZGlzY292ZXIgaXQncyBjb21wb25lbnRzXG4gICAgKlxuICAgICogQHBhcmFtIHtTdHJpbmd9IHVybCBUaGUgVVJMIHRvIGJlIHBhcnNlZFxuICAgICogQHJldHVybnMge09iamVjdH1cbiAgICAqL1xuICAgIGZ1bmN0aW9uIHJlc29sdmVVUkwodXJsKSB7XG4gICAgICB2YXIgaHJlZiA9IHVybDtcblxuICAgICAgaWYgKG1zaWUpIHtcbiAgICAgICAgLy8gSUUgbmVlZHMgYXR0cmlidXRlIHNldCB0d2ljZSB0byBub3JtYWxpemUgcHJvcGVydGllc1xuICAgICAgICB1cmxQYXJzaW5nTm9kZS5zZXRBdHRyaWJ1dGUoJ2hyZWYnLCBocmVmKTtcbiAgICAgICAgaHJlZiA9IHVybFBhcnNpbmdOb2RlLmhyZWY7XG4gICAgICB9XG5cbiAgICAgIHVybFBhcnNpbmdOb2RlLnNldEF0dHJpYnV0ZSgnaHJlZicsIGhyZWYpO1xuXG4gICAgICAvLyB1cmxQYXJzaW5nTm9kZSBwcm92aWRlcyB0aGUgVXJsVXRpbHMgaW50ZXJmYWNlIC0gaHR0cDovL3VybC5zcGVjLndoYXR3Zy5vcmcvI3VybHV0aWxzXG4gICAgICByZXR1cm4ge1xuICAgICAgICBocmVmOiB1cmxQYXJzaW5nTm9kZS5ocmVmLFxuICAgICAgICBwcm90b2NvbDogdXJsUGFyc2luZ05vZGUucHJvdG9jb2wgPyB1cmxQYXJzaW5nTm9kZS5wcm90b2NvbC5yZXBsYWNlKC86JC8sICcnKSA6ICcnLFxuICAgICAgICBob3N0OiB1cmxQYXJzaW5nTm9kZS5ob3N0LFxuICAgICAgICBzZWFyY2g6IHVybFBhcnNpbmdOb2RlLnNlYXJjaCA/IHVybFBhcnNpbmdOb2RlLnNlYXJjaC5yZXBsYWNlKC9eXFw/LywgJycpIDogJycsXG4gICAgICAgIGhhc2g6IHVybFBhcnNpbmdOb2RlLmhhc2ggPyB1cmxQYXJzaW5nTm9kZS5oYXNoLnJlcGxhY2UoL14jLywgJycpIDogJycsXG4gICAgICAgIGhvc3RuYW1lOiB1cmxQYXJzaW5nTm9kZS5ob3N0bmFtZSxcbiAgICAgICAgcG9ydDogdXJsUGFyc2luZ05vZGUucG9ydCxcbiAgICAgICAgcGF0aG5hbWU6ICh1cmxQYXJzaW5nTm9kZS5wYXRobmFtZS5jaGFyQXQoMCkgPT09ICcvJykgP1xuICAgICAgICAgICAgICAgICAgdXJsUGFyc2luZ05vZGUucGF0aG5hbWUgOlxuICAgICAgICAgICAgICAgICAgJy8nICsgdXJsUGFyc2luZ05vZGUucGF0aG5hbWVcbiAgICAgIH07XG4gICAgfVxuXG4gICAgb3JpZ2luVVJMID0gcmVzb2x2ZVVSTCh3aW5kb3cubG9jYXRpb24uaHJlZik7XG5cbiAgICAvKipcbiAgICAqIERldGVybWluZSBpZiBhIFVSTCBzaGFyZXMgdGhlIHNhbWUgb3JpZ2luIGFzIHRoZSBjdXJyZW50IGxvY2F0aW9uXG4gICAgKlxuICAgICogQHBhcmFtIHtTdHJpbmd9IHJlcXVlc3RVUkwgVGhlIFVSTCB0byB0ZXN0XG4gICAgKiBAcmV0dXJucyB7Ym9vbGVhbn0gVHJ1ZSBpZiBVUkwgc2hhcmVzIHRoZSBzYW1lIG9yaWdpbiwgb3RoZXJ3aXNlIGZhbHNlXG4gICAgKi9cbiAgICByZXR1cm4gZnVuY3Rpb24gaXNVUkxTYW1lT3JpZ2luKHJlcXVlc3RVUkwpIHtcbiAgICAgIHZhciBwYXJzZWQgPSAodXRpbHMuaXNTdHJpbmcocmVxdWVzdFVSTCkpID8gcmVzb2x2ZVVSTChyZXF1ZXN0VVJMKSA6IHJlcXVlc3RVUkw7XG4gICAgICByZXR1cm4gKHBhcnNlZC5wcm90b2NvbCA9PT0gb3JpZ2luVVJMLnByb3RvY29sICYmXG4gICAgICAgICAgICBwYXJzZWQuaG9zdCA9PT0gb3JpZ2luVVJMLmhvc3QpO1xuICAgIH07XG4gIH0pKCkgOlxuXG4gIC8vIE5vbiBzdGFuZGFyZCBicm93c2VyIGVudnMgKHdlYiB3b3JrZXJzLCByZWFjdC1uYXRpdmUpIGxhY2sgbmVlZGVkIHN1cHBvcnQuXG4gIChmdW5jdGlvbiBub25TdGFuZGFyZEJyb3dzZXJFbnYoKSB7XG4gICAgcmV0dXJuIGZ1bmN0aW9uIGlzVVJMU2FtZU9yaWdpbigpIHtcbiAgICAgIHJldHVybiB0cnVlO1xuICAgIH07XG4gIH0pKClcbik7XG5cblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL25vZGVfbW9kdWxlcy9heGlvcy9saWIvaGVscGVycy9pc1VSTFNhbWVPcmlnaW4uanNcbi8vIG1vZHVsZSBpZCA9IC4vbm9kZV9tb2R1bGVzL2F4aW9zL2xpYi9oZWxwZXJzL2lzVVJMU2FtZU9yaWdpbi5qc1xuLy8gbW9kdWxlIGNodW5rcyA9IDEgMiIsIid1c2Ugc3RyaWN0JztcblxudmFyIHV0aWxzID0gcmVxdWlyZSgnLi4vdXRpbHMnKTtcblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiBub3JtYWxpemVIZWFkZXJOYW1lKGhlYWRlcnMsIG5vcm1hbGl6ZWROYW1lKSB7XG4gIHV0aWxzLmZvckVhY2goaGVhZGVycywgZnVuY3Rpb24gcHJvY2Vzc0hlYWRlcih2YWx1ZSwgbmFtZSkge1xuICAgIGlmIChuYW1lICE9PSBub3JtYWxpemVkTmFtZSAmJiBuYW1lLnRvVXBwZXJDYXNlKCkgPT09IG5vcm1hbGl6ZWROYW1lLnRvVXBwZXJDYXNlKCkpIHtcbiAgICAgIGhlYWRlcnNbbm9ybWFsaXplZE5hbWVdID0gdmFsdWU7XG4gICAgICBkZWxldGUgaGVhZGVyc1tuYW1lXTtcbiAgICB9XG4gIH0pO1xufTtcblxuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vbm9kZV9tb2R1bGVzL2F4aW9zL2xpYi9oZWxwZXJzL25vcm1hbGl6ZUhlYWRlck5hbWUuanNcbi8vIG1vZHVsZSBpZCA9IC4vbm9kZV9tb2R1bGVzL2F4aW9zL2xpYi9oZWxwZXJzL25vcm1hbGl6ZUhlYWRlck5hbWUuanNcbi8vIG1vZHVsZSBjaHVua3MgPSAxIDIiLCIndXNlIHN0cmljdCc7XG5cbnZhciB1dGlscyA9IHJlcXVpcmUoJy4vLi4vdXRpbHMnKTtcblxuLy8gSGVhZGVycyB3aG9zZSBkdXBsaWNhdGVzIGFyZSBpZ25vcmVkIGJ5IG5vZGVcbi8vIGMuZi4gaHR0cHM6Ly9ub2RlanMub3JnL2FwaS9odHRwLmh0bWwjaHR0cF9tZXNzYWdlX2hlYWRlcnNcbnZhciBpZ25vcmVEdXBsaWNhdGVPZiA9IFtcbiAgJ2FnZScsICdhdXRob3JpemF0aW9uJywgJ2NvbnRlbnQtbGVuZ3RoJywgJ2NvbnRlbnQtdHlwZScsICdldGFnJyxcbiAgJ2V4cGlyZXMnLCAnZnJvbScsICdob3N0JywgJ2lmLW1vZGlmaWVkLXNpbmNlJywgJ2lmLXVubW9kaWZpZWQtc2luY2UnLFxuICAnbGFzdC1tb2RpZmllZCcsICdsb2NhdGlvbicsICdtYXgtZm9yd2FyZHMnLCAncHJveHktYXV0aG9yaXphdGlvbicsXG4gICdyZWZlcmVyJywgJ3JldHJ5LWFmdGVyJywgJ3VzZXItYWdlbnQnXG5dO1xuXG4vKipcbiAqIFBhcnNlIGhlYWRlcnMgaW50byBhbiBvYmplY3RcbiAqXG4gKiBgYGBcbiAqIERhdGU6IFdlZCwgMjcgQXVnIDIwMTQgMDg6NTg6NDkgR01UXG4gKiBDb250ZW50LVR5cGU6IGFwcGxpY2F0aW9uL2pzb25cbiAqIENvbm5lY3Rpb246IGtlZXAtYWxpdmVcbiAqIFRyYW5zZmVyLUVuY29kaW5nOiBjaHVua2VkXG4gKiBgYGBcbiAqXG4gKiBAcGFyYW0ge1N0cmluZ30gaGVhZGVycyBIZWFkZXJzIG5lZWRpbmcgdG8gYmUgcGFyc2VkXG4gKiBAcmV0dXJucyB7T2JqZWN0fSBIZWFkZXJzIHBhcnNlZCBpbnRvIGFuIG9iamVjdFxuICovXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIHBhcnNlSGVhZGVycyhoZWFkZXJzKSB7XG4gIHZhciBwYXJzZWQgPSB7fTtcbiAgdmFyIGtleTtcbiAgdmFyIHZhbDtcbiAgdmFyIGk7XG5cbiAgaWYgKCFoZWFkZXJzKSB7IHJldHVybiBwYXJzZWQ7IH1cblxuICB1dGlscy5mb3JFYWNoKGhlYWRlcnMuc3BsaXQoJ1xcbicpLCBmdW5jdGlvbiBwYXJzZXIobGluZSkge1xuICAgIGkgPSBsaW5lLmluZGV4T2YoJzonKTtcbiAgICBrZXkgPSB1dGlscy50cmltKGxpbmUuc3Vic3RyKDAsIGkpKS50b0xvd2VyQ2FzZSgpO1xuICAgIHZhbCA9IHV0aWxzLnRyaW0obGluZS5zdWJzdHIoaSArIDEpKTtcblxuICAgIGlmIChrZXkpIHtcbiAgICAgIGlmIChwYXJzZWRba2V5XSAmJiBpZ25vcmVEdXBsaWNhdGVPZi5pbmRleE9mKGtleSkgPj0gMCkge1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG4gICAgICBpZiAoa2V5ID09PSAnc2V0LWNvb2tpZScpIHtcbiAgICAgICAgcGFyc2VkW2tleV0gPSAocGFyc2VkW2tleV0gPyBwYXJzZWRba2V5XSA6IFtdKS5jb25jYXQoW3ZhbF0pO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgcGFyc2VkW2tleV0gPSBwYXJzZWRba2V5XSA/IHBhcnNlZFtrZXldICsgJywgJyArIHZhbCA6IHZhbDtcbiAgICAgIH1cbiAgICB9XG4gIH0pO1xuXG4gIHJldHVybiBwYXJzZWQ7XG59O1xuXG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9ub2RlX21vZHVsZXMvYXhpb3MvbGliL2hlbHBlcnMvcGFyc2VIZWFkZXJzLmpzXG4vLyBtb2R1bGUgaWQgPSAuL25vZGVfbW9kdWxlcy9heGlvcy9saWIvaGVscGVycy9wYXJzZUhlYWRlcnMuanNcbi8vIG1vZHVsZSBjaHVua3MgPSAxIDIiLCIndXNlIHN0cmljdCc7XG5cbi8qKlxuICogU3ludGFjdGljIHN1Z2FyIGZvciBpbnZva2luZyBhIGZ1bmN0aW9uIGFuZCBleHBhbmRpbmcgYW4gYXJyYXkgZm9yIGFyZ3VtZW50cy5cbiAqXG4gKiBDb21tb24gdXNlIGNhc2Ugd291bGQgYmUgdG8gdXNlIGBGdW5jdGlvbi5wcm90b3R5cGUuYXBwbHlgLlxuICpcbiAqICBgYGBqc1xuICogIGZ1bmN0aW9uIGYoeCwgeSwgeikge31cbiAqICB2YXIgYXJncyA9IFsxLCAyLCAzXTtcbiAqICBmLmFwcGx5KG51bGwsIGFyZ3MpO1xuICogIGBgYFxuICpcbiAqIFdpdGggYHNwcmVhZGAgdGhpcyBleGFtcGxlIGNhbiBiZSByZS13cml0dGVuLlxuICpcbiAqICBgYGBqc1xuICogIHNwcmVhZChmdW5jdGlvbih4LCB5LCB6KSB7fSkoWzEsIDIsIDNdKTtcbiAqICBgYGBcbiAqXG4gKiBAcGFyYW0ge0Z1bmN0aW9ufSBjYWxsYmFja1xuICogQHJldHVybnMge0Z1bmN0aW9ufVxuICovXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIHNwcmVhZChjYWxsYmFjaykge1xuICByZXR1cm4gZnVuY3Rpb24gd3JhcChhcnIpIHtcbiAgICByZXR1cm4gY2FsbGJhY2suYXBwbHkobnVsbCwgYXJyKTtcbiAgfTtcbn07XG5cblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL25vZGVfbW9kdWxlcy9heGlvcy9saWIvaGVscGVycy9zcHJlYWQuanNcbi8vIG1vZHVsZSBpZCA9IC4vbm9kZV9tb2R1bGVzL2F4aW9zL2xpYi9oZWxwZXJzL3NwcmVhZC5qc1xuLy8gbW9kdWxlIGNodW5rcyA9IDEgMiIsIid1c2Ugc3RyaWN0JztcblxudmFyIGJpbmQgPSByZXF1aXJlKCcuL2hlbHBlcnMvYmluZCcpO1xudmFyIGlzQnVmZmVyID0gcmVxdWlyZSgnaXMtYnVmZmVyJyk7XG5cbi8qZ2xvYmFsIHRvU3RyaW5nOnRydWUqL1xuXG4vLyB1dGlscyBpcyBhIGxpYnJhcnkgb2YgZ2VuZXJpYyBoZWxwZXIgZnVuY3Rpb25zIG5vbi1zcGVjaWZpYyB0byBheGlvc1xuXG52YXIgdG9TdHJpbmcgPSBPYmplY3QucHJvdG90eXBlLnRvU3RyaW5nO1xuXG4vKipcbiAqIERldGVybWluZSBpZiBhIHZhbHVlIGlzIGFuIEFycmF5XG4gKlxuICogQHBhcmFtIHtPYmplY3R9IHZhbCBUaGUgdmFsdWUgdG8gdGVzdFxuICogQHJldHVybnMge2Jvb2xlYW59IFRydWUgaWYgdmFsdWUgaXMgYW4gQXJyYXksIG90aGVyd2lzZSBmYWxzZVxuICovXG5mdW5jdGlvbiBpc0FycmF5KHZhbCkge1xuICByZXR1cm4gdG9TdHJpbmcuY2FsbCh2YWwpID09PSAnW29iamVjdCBBcnJheV0nO1xufVxuXG4vKipcbiAqIERldGVybWluZSBpZiBhIHZhbHVlIGlzIGFuIEFycmF5QnVmZmVyXG4gKlxuICogQHBhcmFtIHtPYmplY3R9IHZhbCBUaGUgdmFsdWUgdG8gdGVzdFxuICogQHJldHVybnMge2Jvb2xlYW59IFRydWUgaWYgdmFsdWUgaXMgYW4gQXJyYXlCdWZmZXIsIG90aGVyd2lzZSBmYWxzZVxuICovXG5mdW5jdGlvbiBpc0FycmF5QnVmZmVyKHZhbCkge1xuICByZXR1cm4gdG9TdHJpbmcuY2FsbCh2YWwpID09PSAnW29iamVjdCBBcnJheUJ1ZmZlcl0nO1xufVxuXG4vKipcbiAqIERldGVybWluZSBpZiBhIHZhbHVlIGlzIGEgRm9ybURhdGFcbiAqXG4gKiBAcGFyYW0ge09iamVjdH0gdmFsIFRoZSB2YWx1ZSB0byB0ZXN0XG4gKiBAcmV0dXJucyB7Ym9vbGVhbn0gVHJ1ZSBpZiB2YWx1ZSBpcyBhbiBGb3JtRGF0YSwgb3RoZXJ3aXNlIGZhbHNlXG4gKi9cbmZ1bmN0aW9uIGlzRm9ybURhdGEodmFsKSB7XG4gIHJldHVybiAodHlwZW9mIEZvcm1EYXRhICE9PSAndW5kZWZpbmVkJykgJiYgKHZhbCBpbnN0YW5jZW9mIEZvcm1EYXRhKTtcbn1cblxuLyoqXG4gKiBEZXRlcm1pbmUgaWYgYSB2YWx1ZSBpcyBhIHZpZXcgb24gYW4gQXJyYXlCdWZmZXJcbiAqXG4gKiBAcGFyYW0ge09iamVjdH0gdmFsIFRoZSB2YWx1ZSB0byB0ZXN0XG4gKiBAcmV0dXJucyB7Ym9vbGVhbn0gVHJ1ZSBpZiB2YWx1ZSBpcyBhIHZpZXcgb24gYW4gQXJyYXlCdWZmZXIsIG90aGVyd2lzZSBmYWxzZVxuICovXG5mdW5jdGlvbiBpc0FycmF5QnVmZmVyVmlldyh2YWwpIHtcbiAgdmFyIHJlc3VsdDtcbiAgaWYgKCh0eXBlb2YgQXJyYXlCdWZmZXIgIT09ICd1bmRlZmluZWQnKSAmJiAoQXJyYXlCdWZmZXIuaXNWaWV3KSkge1xuICAgIHJlc3VsdCA9IEFycmF5QnVmZmVyLmlzVmlldyh2YWwpO1xuICB9IGVsc2Uge1xuICAgIHJlc3VsdCA9ICh2YWwpICYmICh2YWwuYnVmZmVyKSAmJiAodmFsLmJ1ZmZlciBpbnN0YW5jZW9mIEFycmF5QnVmZmVyKTtcbiAgfVxuICByZXR1cm4gcmVzdWx0O1xufVxuXG4vKipcbiAqIERldGVybWluZSBpZiBhIHZhbHVlIGlzIGEgU3RyaW5nXG4gKlxuICogQHBhcmFtIHtPYmplY3R9IHZhbCBUaGUgdmFsdWUgdG8gdGVzdFxuICogQHJldHVybnMge2Jvb2xlYW59IFRydWUgaWYgdmFsdWUgaXMgYSBTdHJpbmcsIG90aGVyd2lzZSBmYWxzZVxuICovXG5mdW5jdGlvbiBpc1N0cmluZyh2YWwpIHtcbiAgcmV0dXJuIHR5cGVvZiB2YWwgPT09ICdzdHJpbmcnO1xufVxuXG4vKipcbiAqIERldGVybWluZSBpZiBhIHZhbHVlIGlzIGEgTnVtYmVyXG4gKlxuICogQHBhcmFtIHtPYmplY3R9IHZhbCBUaGUgdmFsdWUgdG8gdGVzdFxuICogQHJldHVybnMge2Jvb2xlYW59IFRydWUgaWYgdmFsdWUgaXMgYSBOdW1iZXIsIG90aGVyd2lzZSBmYWxzZVxuICovXG5mdW5jdGlvbiBpc051bWJlcih2YWwpIHtcbiAgcmV0dXJuIHR5cGVvZiB2YWwgPT09ICdudW1iZXInO1xufVxuXG4vKipcbiAqIERldGVybWluZSBpZiBhIHZhbHVlIGlzIHVuZGVmaW5lZFxuICpcbiAqIEBwYXJhbSB7T2JqZWN0fSB2YWwgVGhlIHZhbHVlIHRvIHRlc3RcbiAqIEByZXR1cm5zIHtib29sZWFufSBUcnVlIGlmIHRoZSB2YWx1ZSBpcyB1bmRlZmluZWQsIG90aGVyd2lzZSBmYWxzZVxuICovXG5mdW5jdGlvbiBpc1VuZGVmaW5lZCh2YWwpIHtcbiAgcmV0dXJuIHR5cGVvZiB2YWwgPT09ICd1bmRlZmluZWQnO1xufVxuXG4vKipcbiAqIERldGVybWluZSBpZiBhIHZhbHVlIGlzIGFuIE9iamVjdFxuICpcbiAqIEBwYXJhbSB7T2JqZWN0fSB2YWwgVGhlIHZhbHVlIHRvIHRlc3RcbiAqIEByZXR1cm5zIHtib29sZWFufSBUcnVlIGlmIHZhbHVlIGlzIGFuIE9iamVjdCwgb3RoZXJ3aXNlIGZhbHNlXG4gKi9cbmZ1bmN0aW9uIGlzT2JqZWN0KHZhbCkge1xuICByZXR1cm4gdmFsICE9PSBudWxsICYmIHR5cGVvZiB2YWwgPT09ICdvYmplY3QnO1xufVxuXG4vKipcbiAqIERldGVybWluZSBpZiBhIHZhbHVlIGlzIGEgRGF0ZVxuICpcbiAqIEBwYXJhbSB7T2JqZWN0fSB2YWwgVGhlIHZhbHVlIHRvIHRlc3RcbiAqIEByZXR1cm5zIHtib29sZWFufSBUcnVlIGlmIHZhbHVlIGlzIGEgRGF0ZSwgb3RoZXJ3aXNlIGZhbHNlXG4gKi9cbmZ1bmN0aW9uIGlzRGF0ZSh2YWwpIHtcbiAgcmV0dXJuIHRvU3RyaW5nLmNhbGwodmFsKSA9PT0gJ1tvYmplY3QgRGF0ZV0nO1xufVxuXG4vKipcbiAqIERldGVybWluZSBpZiBhIHZhbHVlIGlzIGEgRmlsZVxuICpcbiAqIEBwYXJhbSB7T2JqZWN0fSB2YWwgVGhlIHZhbHVlIHRvIHRlc3RcbiAqIEByZXR1cm5zIHtib29sZWFufSBUcnVlIGlmIHZhbHVlIGlzIGEgRmlsZSwgb3RoZXJ3aXNlIGZhbHNlXG4gKi9cbmZ1bmN0aW9uIGlzRmlsZSh2YWwpIHtcbiAgcmV0dXJuIHRvU3RyaW5nLmNhbGwodmFsKSA9PT0gJ1tvYmplY3QgRmlsZV0nO1xufVxuXG4vKipcbiAqIERldGVybWluZSBpZiBhIHZhbHVlIGlzIGEgQmxvYlxuICpcbiAqIEBwYXJhbSB7T2JqZWN0fSB2YWwgVGhlIHZhbHVlIHRvIHRlc3RcbiAqIEByZXR1cm5zIHtib29sZWFufSBUcnVlIGlmIHZhbHVlIGlzIGEgQmxvYiwgb3RoZXJ3aXNlIGZhbHNlXG4gKi9cbmZ1bmN0aW9uIGlzQmxvYih2YWwpIHtcbiAgcmV0dXJuIHRvU3RyaW5nLmNhbGwodmFsKSA9PT0gJ1tvYmplY3QgQmxvYl0nO1xufVxuXG4vKipcbiAqIERldGVybWluZSBpZiBhIHZhbHVlIGlzIGEgRnVuY3Rpb25cbiAqXG4gKiBAcGFyYW0ge09iamVjdH0gdmFsIFRoZSB2YWx1ZSB0byB0ZXN0XG4gKiBAcmV0dXJucyB7Ym9vbGVhbn0gVHJ1ZSBpZiB2YWx1ZSBpcyBhIEZ1bmN0aW9uLCBvdGhlcndpc2UgZmFsc2VcbiAqL1xuZnVuY3Rpb24gaXNGdW5jdGlvbih2YWwpIHtcbiAgcmV0dXJuIHRvU3RyaW5nLmNhbGwodmFsKSA9PT0gJ1tvYmplY3QgRnVuY3Rpb25dJztcbn1cblxuLyoqXG4gKiBEZXRlcm1pbmUgaWYgYSB2YWx1ZSBpcyBhIFN0cmVhbVxuICpcbiAqIEBwYXJhbSB7T2JqZWN0fSB2YWwgVGhlIHZhbHVlIHRvIHRlc3RcbiAqIEByZXR1cm5zIHtib29sZWFufSBUcnVlIGlmIHZhbHVlIGlzIGEgU3RyZWFtLCBvdGhlcndpc2UgZmFsc2VcbiAqL1xuZnVuY3Rpb24gaXNTdHJlYW0odmFsKSB7XG4gIHJldHVybiBpc09iamVjdCh2YWwpICYmIGlzRnVuY3Rpb24odmFsLnBpcGUpO1xufVxuXG4vKipcbiAqIERldGVybWluZSBpZiBhIHZhbHVlIGlzIGEgVVJMU2VhcmNoUGFyYW1zIG9iamVjdFxuICpcbiAqIEBwYXJhbSB7T2JqZWN0fSB2YWwgVGhlIHZhbHVlIHRvIHRlc3RcbiAqIEByZXR1cm5zIHtib29sZWFufSBUcnVlIGlmIHZhbHVlIGlzIGEgVVJMU2VhcmNoUGFyYW1zIG9iamVjdCwgb3RoZXJ3aXNlIGZhbHNlXG4gKi9cbmZ1bmN0aW9uIGlzVVJMU2VhcmNoUGFyYW1zKHZhbCkge1xuICByZXR1cm4gdHlwZW9mIFVSTFNlYXJjaFBhcmFtcyAhPT0gJ3VuZGVmaW5lZCcgJiYgdmFsIGluc3RhbmNlb2YgVVJMU2VhcmNoUGFyYW1zO1xufVxuXG4vKipcbiAqIFRyaW0gZXhjZXNzIHdoaXRlc3BhY2Ugb2ZmIHRoZSBiZWdpbm5pbmcgYW5kIGVuZCBvZiBhIHN0cmluZ1xuICpcbiAqIEBwYXJhbSB7U3RyaW5nfSBzdHIgVGhlIFN0cmluZyB0byB0cmltXG4gKiBAcmV0dXJucyB7U3RyaW5nfSBUaGUgU3RyaW5nIGZyZWVkIG9mIGV4Y2VzcyB3aGl0ZXNwYWNlXG4gKi9cbmZ1bmN0aW9uIHRyaW0oc3RyKSB7XG4gIHJldHVybiBzdHIucmVwbGFjZSgvXlxccyovLCAnJykucmVwbGFjZSgvXFxzKiQvLCAnJyk7XG59XG5cbi8qKlxuICogRGV0ZXJtaW5lIGlmIHdlJ3JlIHJ1bm5pbmcgaW4gYSBzdGFuZGFyZCBicm93c2VyIGVudmlyb25tZW50XG4gKlxuICogVGhpcyBhbGxvd3MgYXhpb3MgdG8gcnVuIGluIGEgd2ViIHdvcmtlciwgYW5kIHJlYWN0LW5hdGl2ZS5cbiAqIEJvdGggZW52aXJvbm1lbnRzIHN1cHBvcnQgWE1MSHR0cFJlcXVlc3QsIGJ1dCBub3QgZnVsbHkgc3RhbmRhcmQgZ2xvYmFscy5cbiAqXG4gKiB3ZWIgd29ya2VyczpcbiAqICB0eXBlb2Ygd2luZG93IC0+IHVuZGVmaW5lZFxuICogIHR5cGVvZiBkb2N1bWVudCAtPiB1bmRlZmluZWRcbiAqXG4gKiByZWFjdC1uYXRpdmU6XG4gKiAgbmF2aWdhdG9yLnByb2R1Y3QgLT4gJ1JlYWN0TmF0aXZlJ1xuICovXG5mdW5jdGlvbiBpc1N0YW5kYXJkQnJvd3NlckVudigpIHtcbiAgaWYgKHR5cGVvZiBuYXZpZ2F0b3IgIT09ICd1bmRlZmluZWQnICYmIG5hdmlnYXRvci5wcm9kdWN0ID09PSAnUmVhY3ROYXRpdmUnKSB7XG4gICAgcmV0dXJuIGZhbHNlO1xuICB9XG4gIHJldHVybiAoXG4gICAgdHlwZW9mIHdpbmRvdyAhPT0gJ3VuZGVmaW5lZCcgJiZcbiAgICB0eXBlb2YgZG9jdW1lbnQgIT09ICd1bmRlZmluZWQnXG4gICk7XG59XG5cbi8qKlxuICogSXRlcmF0ZSBvdmVyIGFuIEFycmF5IG9yIGFuIE9iamVjdCBpbnZva2luZyBhIGZ1bmN0aW9uIGZvciBlYWNoIGl0ZW0uXG4gKlxuICogSWYgYG9iamAgaXMgYW4gQXJyYXkgY2FsbGJhY2sgd2lsbCBiZSBjYWxsZWQgcGFzc2luZ1xuICogdGhlIHZhbHVlLCBpbmRleCwgYW5kIGNvbXBsZXRlIGFycmF5IGZvciBlYWNoIGl0ZW0uXG4gKlxuICogSWYgJ29iaicgaXMgYW4gT2JqZWN0IGNhbGxiYWNrIHdpbGwgYmUgY2FsbGVkIHBhc3NpbmdcbiAqIHRoZSB2YWx1ZSwga2V5LCBhbmQgY29tcGxldGUgb2JqZWN0IGZvciBlYWNoIHByb3BlcnR5LlxuICpcbiAqIEBwYXJhbSB7T2JqZWN0fEFycmF5fSBvYmogVGhlIG9iamVjdCB0byBpdGVyYXRlXG4gKiBAcGFyYW0ge0Z1bmN0aW9ufSBmbiBUaGUgY2FsbGJhY2sgdG8gaW52b2tlIGZvciBlYWNoIGl0ZW1cbiAqL1xuZnVuY3Rpb24gZm9yRWFjaChvYmosIGZuKSB7XG4gIC8vIERvbid0IGJvdGhlciBpZiBubyB2YWx1ZSBwcm92aWRlZFxuICBpZiAob2JqID09PSBudWxsIHx8IHR5cGVvZiBvYmogPT09ICd1bmRlZmluZWQnKSB7XG4gICAgcmV0dXJuO1xuICB9XG5cbiAgLy8gRm9yY2UgYW4gYXJyYXkgaWYgbm90IGFscmVhZHkgc29tZXRoaW5nIGl0ZXJhYmxlXG4gIGlmICh0eXBlb2Ygb2JqICE9PSAnb2JqZWN0Jykge1xuICAgIC8qZXNsaW50IG5vLXBhcmFtLXJlYXNzaWduOjAqL1xuICAgIG9iaiA9IFtvYmpdO1xuICB9XG5cbiAgaWYgKGlzQXJyYXkob2JqKSkge1xuICAgIC8vIEl0ZXJhdGUgb3ZlciBhcnJheSB2YWx1ZXNcbiAgICBmb3IgKHZhciBpID0gMCwgbCA9IG9iai5sZW5ndGg7IGkgPCBsOyBpKyspIHtcbiAgICAgIGZuLmNhbGwobnVsbCwgb2JqW2ldLCBpLCBvYmopO1xuICAgIH1cbiAgfSBlbHNlIHtcbiAgICAvLyBJdGVyYXRlIG92ZXIgb2JqZWN0IGtleXNcbiAgICBmb3IgKHZhciBrZXkgaW4gb2JqKSB7XG4gICAgICBpZiAoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKG9iaiwga2V5KSkge1xuICAgICAgICBmbi5jYWxsKG51bGwsIG9ialtrZXldLCBrZXksIG9iaik7XG4gICAgICB9XG4gICAgfVxuICB9XG59XG5cbi8qKlxuICogQWNjZXB0cyB2YXJhcmdzIGV4cGVjdGluZyBlYWNoIGFyZ3VtZW50IHRvIGJlIGFuIG9iamVjdCwgdGhlblxuICogaW1tdXRhYmx5IG1lcmdlcyB0aGUgcHJvcGVydGllcyBvZiBlYWNoIG9iamVjdCBhbmQgcmV0dXJucyByZXN1bHQuXG4gKlxuICogV2hlbiBtdWx0aXBsZSBvYmplY3RzIGNvbnRhaW4gdGhlIHNhbWUga2V5IHRoZSBsYXRlciBvYmplY3QgaW5cbiAqIHRoZSBhcmd1bWVudHMgbGlzdCB3aWxsIHRha2UgcHJlY2VkZW5jZS5cbiAqXG4gKiBFeGFtcGxlOlxuICpcbiAqIGBgYGpzXG4gKiB2YXIgcmVzdWx0ID0gbWVyZ2Uoe2ZvbzogMTIzfSwge2ZvbzogNDU2fSk7XG4gKiBjb25zb2xlLmxvZyhyZXN1bHQuZm9vKTsgLy8gb3V0cHV0cyA0NTZcbiAqIGBgYFxuICpcbiAqIEBwYXJhbSB7T2JqZWN0fSBvYmoxIE9iamVjdCB0byBtZXJnZVxuICogQHJldHVybnMge09iamVjdH0gUmVzdWx0IG9mIGFsbCBtZXJnZSBwcm9wZXJ0aWVzXG4gKi9cbmZ1bmN0aW9uIG1lcmdlKC8qIG9iajEsIG9iajIsIG9iajMsIC4uLiAqLykge1xuICB2YXIgcmVzdWx0ID0ge307XG4gIGZ1bmN0aW9uIGFzc2lnblZhbHVlKHZhbCwga2V5KSB7XG4gICAgaWYgKHR5cGVvZiByZXN1bHRba2V5XSA9PT0gJ29iamVjdCcgJiYgdHlwZW9mIHZhbCA9PT0gJ29iamVjdCcpIHtcbiAgICAgIHJlc3VsdFtrZXldID0gbWVyZ2UocmVzdWx0W2tleV0sIHZhbCk7XG4gICAgfSBlbHNlIHtcbiAgICAgIHJlc3VsdFtrZXldID0gdmFsO1xuICAgIH1cbiAgfVxuXG4gIGZvciAodmFyIGkgPSAwLCBsID0gYXJndW1lbnRzLmxlbmd0aDsgaSA8IGw7IGkrKykge1xuICAgIGZvckVhY2goYXJndW1lbnRzW2ldLCBhc3NpZ25WYWx1ZSk7XG4gIH1cbiAgcmV0dXJuIHJlc3VsdDtcbn1cblxuLyoqXG4gKiBFeHRlbmRzIG9iamVjdCBhIGJ5IG11dGFibHkgYWRkaW5nIHRvIGl0IHRoZSBwcm9wZXJ0aWVzIG9mIG9iamVjdCBiLlxuICpcbiAqIEBwYXJhbSB7T2JqZWN0fSBhIFRoZSBvYmplY3QgdG8gYmUgZXh0ZW5kZWRcbiAqIEBwYXJhbSB7T2JqZWN0fSBiIFRoZSBvYmplY3QgdG8gY29weSBwcm9wZXJ0aWVzIGZyb21cbiAqIEBwYXJhbSB7T2JqZWN0fSB0aGlzQXJnIFRoZSBvYmplY3QgdG8gYmluZCBmdW5jdGlvbiB0b1xuICogQHJldHVybiB7T2JqZWN0fSBUaGUgcmVzdWx0aW5nIHZhbHVlIG9mIG9iamVjdCBhXG4gKi9cbmZ1bmN0aW9uIGV4dGVuZChhLCBiLCB0aGlzQXJnKSB7XG4gIGZvckVhY2goYiwgZnVuY3Rpb24gYXNzaWduVmFsdWUodmFsLCBrZXkpIHtcbiAgICBpZiAodGhpc0FyZyAmJiB0eXBlb2YgdmFsID09PSAnZnVuY3Rpb24nKSB7XG4gICAgICBhW2tleV0gPSBiaW5kKHZhbCwgdGhpc0FyZyk7XG4gICAgfSBlbHNlIHtcbiAgICAgIGFba2V5XSA9IHZhbDtcbiAgICB9XG4gIH0pO1xuICByZXR1cm4gYTtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSB7XG4gIGlzQXJyYXk6IGlzQXJyYXksXG4gIGlzQXJyYXlCdWZmZXI6IGlzQXJyYXlCdWZmZXIsXG4gIGlzQnVmZmVyOiBpc0J1ZmZlcixcbiAgaXNGb3JtRGF0YTogaXNGb3JtRGF0YSxcbiAgaXNBcnJheUJ1ZmZlclZpZXc6IGlzQXJyYXlCdWZmZXJWaWV3LFxuICBpc1N0cmluZzogaXNTdHJpbmcsXG4gIGlzTnVtYmVyOiBpc051bWJlcixcbiAgaXNPYmplY3Q6IGlzT2JqZWN0LFxuICBpc1VuZGVmaW5lZDogaXNVbmRlZmluZWQsXG4gIGlzRGF0ZTogaXNEYXRlLFxuICBpc0ZpbGU6IGlzRmlsZSxcbiAgaXNCbG9iOiBpc0Jsb2IsXG4gIGlzRnVuY3Rpb246IGlzRnVuY3Rpb24sXG4gIGlzU3RyZWFtOiBpc1N0cmVhbSxcbiAgaXNVUkxTZWFyY2hQYXJhbXM6IGlzVVJMU2VhcmNoUGFyYW1zLFxuICBpc1N0YW5kYXJkQnJvd3NlckVudjogaXNTdGFuZGFyZEJyb3dzZXJFbnYsXG4gIGZvckVhY2g6IGZvckVhY2gsXG4gIG1lcmdlOiBtZXJnZSxcbiAgZXh0ZW5kOiBleHRlbmQsXG4gIHRyaW06IHRyaW1cbn07XG5cblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL25vZGVfbW9kdWxlcy9heGlvcy9saWIvdXRpbHMuanNcbi8vIG1vZHVsZSBpZCA9IC4vbm9kZV9tb2R1bGVzL2F4aW9zL2xpYi91dGlscy5qc1xuLy8gbW9kdWxlIGNodW5rcyA9IDEgMiIsIi8qIVxuICogRGV0ZXJtaW5lIGlmIGFuIG9iamVjdCBpcyBhIEJ1ZmZlclxuICpcbiAqIEBhdXRob3IgICBGZXJvc3MgQWJvdWtoYWRpamVoIDxodHRwczovL2Zlcm9zcy5vcmc+XG4gKiBAbGljZW5zZSAgTUlUXG4gKi9cblxuLy8gVGhlIF9pc0J1ZmZlciBjaGVjayBpcyBmb3IgU2FmYXJpIDUtNyBzdXBwb3J0LCBiZWNhdXNlIGl0J3MgbWlzc2luZ1xuLy8gT2JqZWN0LnByb3RvdHlwZS5jb25zdHJ1Y3Rvci4gUmVtb3ZlIHRoaXMgZXZlbnR1YWxseVxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAob2JqKSB7XG4gIHJldHVybiBvYmogIT0gbnVsbCAmJiAoaXNCdWZmZXIob2JqKSB8fCBpc1Nsb3dCdWZmZXIob2JqKSB8fCAhIW9iai5faXNCdWZmZXIpXG59XG5cbmZ1bmN0aW9uIGlzQnVmZmVyIChvYmopIHtcbiAgcmV0dXJuICEhb2JqLmNvbnN0cnVjdG9yICYmIHR5cGVvZiBvYmouY29uc3RydWN0b3IuaXNCdWZmZXIgPT09ICdmdW5jdGlvbicgJiYgb2JqLmNvbnN0cnVjdG9yLmlzQnVmZmVyKG9iailcbn1cblxuLy8gRm9yIE5vZGUgdjAuMTAgc3VwcG9ydC4gUmVtb3ZlIHRoaXMgZXZlbnR1YWxseS5cbmZ1bmN0aW9uIGlzU2xvd0J1ZmZlciAob2JqKSB7XG4gIHJldHVybiB0eXBlb2Ygb2JqLnJlYWRGbG9hdExFID09PSAnZnVuY3Rpb24nICYmIHR5cGVvZiBvYmouc2xpY2UgPT09ICdmdW5jdGlvbicgJiYgaXNCdWZmZXIob2JqLnNsaWNlKDAsIDApKVxufVxuXG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9ub2RlX21vZHVsZXMvaXMtYnVmZmVyL2luZGV4LmpzXG4vLyBtb2R1bGUgaWQgPSAuL25vZGVfbW9kdWxlcy9pcy1idWZmZXIvaW5kZXguanNcbi8vIG1vZHVsZSBjaHVua3MgPSAxIDIiLCJ2YXIgZ2V0TmF0aXZlID0gcmVxdWlyZSgnLi9fZ2V0TmF0aXZlJyksXG4gICAgcm9vdCA9IHJlcXVpcmUoJy4vX3Jvb3QnKTtcblxuLyogQnVpbHQtaW4gbWV0aG9kIHJlZmVyZW5jZXMgdGhhdCBhcmUgdmVyaWZpZWQgdG8gYmUgbmF0aXZlLiAqL1xudmFyIERhdGFWaWV3ID0gZ2V0TmF0aXZlKHJvb3QsICdEYXRhVmlldycpO1xuXG5tb2R1bGUuZXhwb3J0cyA9IERhdGFWaWV3O1xuXG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9ub2RlX21vZHVsZXMvbG9kYXNoL19EYXRhVmlldy5qc1xuLy8gbW9kdWxlIGlkID0gLi9ub2RlX21vZHVsZXMvbG9kYXNoL19EYXRhVmlldy5qc1xuLy8gbW9kdWxlIGNodW5rcyA9IDEiLCJ2YXIgaGFzaENsZWFyID0gcmVxdWlyZSgnLi9faGFzaENsZWFyJyksXG4gICAgaGFzaERlbGV0ZSA9IHJlcXVpcmUoJy4vX2hhc2hEZWxldGUnKSxcbiAgICBoYXNoR2V0ID0gcmVxdWlyZSgnLi9faGFzaEdldCcpLFxuICAgIGhhc2hIYXMgPSByZXF1aXJlKCcuL19oYXNoSGFzJyksXG4gICAgaGFzaFNldCA9IHJlcXVpcmUoJy4vX2hhc2hTZXQnKTtcblxuLyoqXG4gKiBDcmVhdGVzIGEgaGFzaCBvYmplY3QuXG4gKlxuICogQHByaXZhdGVcbiAqIEBjb25zdHJ1Y3RvclxuICogQHBhcmFtIHtBcnJheX0gW2VudHJpZXNdIFRoZSBrZXktdmFsdWUgcGFpcnMgdG8gY2FjaGUuXG4gKi9cbmZ1bmN0aW9uIEhhc2goZW50cmllcykge1xuICB2YXIgaW5kZXggPSAtMSxcbiAgICAgIGxlbmd0aCA9IGVudHJpZXMgPT0gbnVsbCA/IDAgOiBlbnRyaWVzLmxlbmd0aDtcblxuICB0aGlzLmNsZWFyKCk7XG4gIHdoaWxlICgrK2luZGV4IDwgbGVuZ3RoKSB7XG4gICAgdmFyIGVudHJ5ID0gZW50cmllc1tpbmRleF07XG4gICAgdGhpcy5zZXQoZW50cnlbMF0sIGVudHJ5WzFdKTtcbiAgfVxufVxuXG4vLyBBZGQgbWV0aG9kcyB0byBgSGFzaGAuXG5IYXNoLnByb3RvdHlwZS5jbGVhciA9IGhhc2hDbGVhcjtcbkhhc2gucHJvdG90eXBlWydkZWxldGUnXSA9IGhhc2hEZWxldGU7XG5IYXNoLnByb3RvdHlwZS5nZXQgPSBoYXNoR2V0O1xuSGFzaC5wcm90b3R5cGUuaGFzID0gaGFzaEhhcztcbkhhc2gucHJvdG90eXBlLnNldCA9IGhhc2hTZXQ7XG5cbm1vZHVsZS5leHBvcnRzID0gSGFzaDtcblxuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vbm9kZV9tb2R1bGVzL2xvZGFzaC9fSGFzaC5qc1xuLy8gbW9kdWxlIGlkID0gLi9ub2RlX21vZHVsZXMvbG9kYXNoL19IYXNoLmpzXG4vLyBtb2R1bGUgY2h1bmtzID0gMSIsInZhciBsaXN0Q2FjaGVDbGVhciA9IHJlcXVpcmUoJy4vX2xpc3RDYWNoZUNsZWFyJyksXG4gICAgbGlzdENhY2hlRGVsZXRlID0gcmVxdWlyZSgnLi9fbGlzdENhY2hlRGVsZXRlJyksXG4gICAgbGlzdENhY2hlR2V0ID0gcmVxdWlyZSgnLi9fbGlzdENhY2hlR2V0JyksXG4gICAgbGlzdENhY2hlSGFzID0gcmVxdWlyZSgnLi9fbGlzdENhY2hlSGFzJyksXG4gICAgbGlzdENhY2hlU2V0ID0gcmVxdWlyZSgnLi9fbGlzdENhY2hlU2V0Jyk7XG5cbi8qKlxuICogQ3JlYXRlcyBhbiBsaXN0IGNhY2hlIG9iamVjdC5cbiAqXG4gKiBAcHJpdmF0ZVxuICogQGNvbnN0cnVjdG9yXG4gKiBAcGFyYW0ge0FycmF5fSBbZW50cmllc10gVGhlIGtleS12YWx1ZSBwYWlycyB0byBjYWNoZS5cbiAqL1xuZnVuY3Rpb24gTGlzdENhY2hlKGVudHJpZXMpIHtcbiAgdmFyIGluZGV4ID0gLTEsXG4gICAgICBsZW5ndGggPSBlbnRyaWVzID09IG51bGwgPyAwIDogZW50cmllcy5sZW5ndGg7XG5cbiAgdGhpcy5jbGVhcigpO1xuICB3aGlsZSAoKytpbmRleCA8IGxlbmd0aCkge1xuICAgIHZhciBlbnRyeSA9IGVudHJpZXNbaW5kZXhdO1xuICAgIHRoaXMuc2V0KGVudHJ5WzBdLCBlbnRyeVsxXSk7XG4gIH1cbn1cblxuLy8gQWRkIG1ldGhvZHMgdG8gYExpc3RDYWNoZWAuXG5MaXN0Q2FjaGUucHJvdG90eXBlLmNsZWFyID0gbGlzdENhY2hlQ2xlYXI7XG5MaXN0Q2FjaGUucHJvdG90eXBlWydkZWxldGUnXSA9IGxpc3RDYWNoZURlbGV0ZTtcbkxpc3RDYWNoZS5wcm90b3R5cGUuZ2V0ID0gbGlzdENhY2hlR2V0O1xuTGlzdENhY2hlLnByb3RvdHlwZS5oYXMgPSBsaXN0Q2FjaGVIYXM7XG5MaXN0Q2FjaGUucHJvdG90eXBlLnNldCA9IGxpc3RDYWNoZVNldDtcblxubW9kdWxlLmV4cG9ydHMgPSBMaXN0Q2FjaGU7XG5cblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL25vZGVfbW9kdWxlcy9sb2Rhc2gvX0xpc3RDYWNoZS5qc1xuLy8gbW9kdWxlIGlkID0gLi9ub2RlX21vZHVsZXMvbG9kYXNoL19MaXN0Q2FjaGUuanNcbi8vIG1vZHVsZSBjaHVua3MgPSAxIiwidmFyIGdldE5hdGl2ZSA9IHJlcXVpcmUoJy4vX2dldE5hdGl2ZScpLFxuICAgIHJvb3QgPSByZXF1aXJlKCcuL19yb290Jyk7XG5cbi8qIEJ1aWx0LWluIG1ldGhvZCByZWZlcmVuY2VzIHRoYXQgYXJlIHZlcmlmaWVkIHRvIGJlIG5hdGl2ZS4gKi9cbnZhciBNYXAgPSBnZXROYXRpdmUocm9vdCwgJ01hcCcpO1xuXG5tb2R1bGUuZXhwb3J0cyA9IE1hcDtcblxuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vbm9kZV9tb2R1bGVzL2xvZGFzaC9fTWFwLmpzXG4vLyBtb2R1bGUgaWQgPSAuL25vZGVfbW9kdWxlcy9sb2Rhc2gvX01hcC5qc1xuLy8gbW9kdWxlIGNodW5rcyA9IDEiLCJ2YXIgbWFwQ2FjaGVDbGVhciA9IHJlcXVpcmUoJy4vX21hcENhY2hlQ2xlYXInKSxcbiAgICBtYXBDYWNoZURlbGV0ZSA9IHJlcXVpcmUoJy4vX21hcENhY2hlRGVsZXRlJyksXG4gICAgbWFwQ2FjaGVHZXQgPSByZXF1aXJlKCcuL19tYXBDYWNoZUdldCcpLFxuICAgIG1hcENhY2hlSGFzID0gcmVxdWlyZSgnLi9fbWFwQ2FjaGVIYXMnKSxcbiAgICBtYXBDYWNoZVNldCA9IHJlcXVpcmUoJy4vX21hcENhY2hlU2V0Jyk7XG5cbi8qKlxuICogQ3JlYXRlcyBhIG1hcCBjYWNoZSBvYmplY3QgdG8gc3RvcmUga2V5LXZhbHVlIHBhaXJzLlxuICpcbiAqIEBwcml2YXRlXG4gKiBAY29uc3RydWN0b3JcbiAqIEBwYXJhbSB7QXJyYXl9IFtlbnRyaWVzXSBUaGUga2V5LXZhbHVlIHBhaXJzIHRvIGNhY2hlLlxuICovXG5mdW5jdGlvbiBNYXBDYWNoZShlbnRyaWVzKSB7XG4gIHZhciBpbmRleCA9IC0xLFxuICAgICAgbGVuZ3RoID0gZW50cmllcyA9PSBudWxsID8gMCA6IGVudHJpZXMubGVuZ3RoO1xuXG4gIHRoaXMuY2xlYXIoKTtcbiAgd2hpbGUgKCsraW5kZXggPCBsZW5ndGgpIHtcbiAgICB2YXIgZW50cnkgPSBlbnRyaWVzW2luZGV4XTtcbiAgICB0aGlzLnNldChlbnRyeVswXSwgZW50cnlbMV0pO1xuICB9XG59XG5cbi8vIEFkZCBtZXRob2RzIHRvIGBNYXBDYWNoZWAuXG5NYXBDYWNoZS5wcm90b3R5cGUuY2xlYXIgPSBtYXBDYWNoZUNsZWFyO1xuTWFwQ2FjaGUucHJvdG90eXBlWydkZWxldGUnXSA9IG1hcENhY2hlRGVsZXRlO1xuTWFwQ2FjaGUucHJvdG90eXBlLmdldCA9IG1hcENhY2hlR2V0O1xuTWFwQ2FjaGUucHJvdG90eXBlLmhhcyA9IG1hcENhY2hlSGFzO1xuTWFwQ2FjaGUucHJvdG90eXBlLnNldCA9IG1hcENhY2hlU2V0O1xuXG5tb2R1bGUuZXhwb3J0cyA9IE1hcENhY2hlO1xuXG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9ub2RlX21vZHVsZXMvbG9kYXNoL19NYXBDYWNoZS5qc1xuLy8gbW9kdWxlIGlkID0gLi9ub2RlX21vZHVsZXMvbG9kYXNoL19NYXBDYWNoZS5qc1xuLy8gbW9kdWxlIGNodW5rcyA9IDEiLCJ2YXIgZ2V0TmF0aXZlID0gcmVxdWlyZSgnLi9fZ2V0TmF0aXZlJyksXG4gICAgcm9vdCA9IHJlcXVpcmUoJy4vX3Jvb3QnKTtcblxuLyogQnVpbHQtaW4gbWV0aG9kIHJlZmVyZW5jZXMgdGhhdCBhcmUgdmVyaWZpZWQgdG8gYmUgbmF0aXZlLiAqL1xudmFyIFByb21pc2UgPSBnZXROYXRpdmUocm9vdCwgJ1Byb21pc2UnKTtcblxubW9kdWxlLmV4cG9ydHMgPSBQcm9taXNlO1xuXG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9ub2RlX21vZHVsZXMvbG9kYXNoL19Qcm9taXNlLmpzXG4vLyBtb2R1bGUgaWQgPSAuL25vZGVfbW9kdWxlcy9sb2Rhc2gvX1Byb21pc2UuanNcbi8vIG1vZHVsZSBjaHVua3MgPSAxIiwidmFyIGdldE5hdGl2ZSA9IHJlcXVpcmUoJy4vX2dldE5hdGl2ZScpLFxuICAgIHJvb3QgPSByZXF1aXJlKCcuL19yb290Jyk7XG5cbi8qIEJ1aWx0LWluIG1ldGhvZCByZWZlcmVuY2VzIHRoYXQgYXJlIHZlcmlmaWVkIHRvIGJlIG5hdGl2ZS4gKi9cbnZhciBTZXQgPSBnZXROYXRpdmUocm9vdCwgJ1NldCcpO1xuXG5tb2R1bGUuZXhwb3J0cyA9IFNldDtcblxuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vbm9kZV9tb2R1bGVzL2xvZGFzaC9fU2V0LmpzXG4vLyBtb2R1bGUgaWQgPSAuL25vZGVfbW9kdWxlcy9sb2Rhc2gvX1NldC5qc1xuLy8gbW9kdWxlIGNodW5rcyA9IDEiLCJ2YXIgTWFwQ2FjaGUgPSByZXF1aXJlKCcuL19NYXBDYWNoZScpLFxuICAgIHNldENhY2hlQWRkID0gcmVxdWlyZSgnLi9fc2V0Q2FjaGVBZGQnKSxcbiAgICBzZXRDYWNoZUhhcyA9IHJlcXVpcmUoJy4vX3NldENhY2hlSGFzJyk7XG5cbi8qKlxuICpcbiAqIENyZWF0ZXMgYW4gYXJyYXkgY2FjaGUgb2JqZWN0IHRvIHN0b3JlIHVuaXF1ZSB2YWx1ZXMuXG4gKlxuICogQHByaXZhdGVcbiAqIEBjb25zdHJ1Y3RvclxuICogQHBhcmFtIHtBcnJheX0gW3ZhbHVlc10gVGhlIHZhbHVlcyB0byBjYWNoZS5cbiAqL1xuZnVuY3Rpb24gU2V0Q2FjaGUodmFsdWVzKSB7XG4gIHZhciBpbmRleCA9IC0xLFxuICAgICAgbGVuZ3RoID0gdmFsdWVzID09IG51bGwgPyAwIDogdmFsdWVzLmxlbmd0aDtcblxuICB0aGlzLl9fZGF0YV9fID0gbmV3IE1hcENhY2hlO1xuICB3aGlsZSAoKytpbmRleCA8IGxlbmd0aCkge1xuICAgIHRoaXMuYWRkKHZhbHVlc1tpbmRleF0pO1xuICB9XG59XG5cbi8vIEFkZCBtZXRob2RzIHRvIGBTZXRDYWNoZWAuXG5TZXRDYWNoZS5wcm90b3R5cGUuYWRkID0gU2V0Q2FjaGUucHJvdG90eXBlLnB1c2ggPSBzZXRDYWNoZUFkZDtcblNldENhY2hlLnByb3RvdHlwZS5oYXMgPSBzZXRDYWNoZUhhcztcblxubW9kdWxlLmV4cG9ydHMgPSBTZXRDYWNoZTtcblxuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vbm9kZV9tb2R1bGVzL2xvZGFzaC9fU2V0Q2FjaGUuanNcbi8vIG1vZHVsZSBpZCA9IC4vbm9kZV9tb2R1bGVzL2xvZGFzaC9fU2V0Q2FjaGUuanNcbi8vIG1vZHVsZSBjaHVua3MgPSAxIiwidmFyIExpc3RDYWNoZSA9IHJlcXVpcmUoJy4vX0xpc3RDYWNoZScpLFxuICAgIHN0YWNrQ2xlYXIgPSByZXF1aXJlKCcuL19zdGFja0NsZWFyJyksXG4gICAgc3RhY2tEZWxldGUgPSByZXF1aXJlKCcuL19zdGFja0RlbGV0ZScpLFxuICAgIHN0YWNrR2V0ID0gcmVxdWlyZSgnLi9fc3RhY2tHZXQnKSxcbiAgICBzdGFja0hhcyA9IHJlcXVpcmUoJy4vX3N0YWNrSGFzJyksXG4gICAgc3RhY2tTZXQgPSByZXF1aXJlKCcuL19zdGFja1NldCcpO1xuXG4vKipcbiAqIENyZWF0ZXMgYSBzdGFjayBjYWNoZSBvYmplY3QgdG8gc3RvcmUga2V5LXZhbHVlIHBhaXJzLlxuICpcbiAqIEBwcml2YXRlXG4gKiBAY29uc3RydWN0b3JcbiAqIEBwYXJhbSB7QXJyYXl9IFtlbnRyaWVzXSBUaGUga2V5LXZhbHVlIHBhaXJzIHRvIGNhY2hlLlxuICovXG5mdW5jdGlvbiBTdGFjayhlbnRyaWVzKSB7XG4gIHZhciBkYXRhID0gdGhpcy5fX2RhdGFfXyA9IG5ldyBMaXN0Q2FjaGUoZW50cmllcyk7XG4gIHRoaXMuc2l6ZSA9IGRhdGEuc2l6ZTtcbn1cblxuLy8gQWRkIG1ldGhvZHMgdG8gYFN0YWNrYC5cblN0YWNrLnByb3RvdHlwZS5jbGVhciA9IHN0YWNrQ2xlYXI7XG5TdGFjay5wcm90b3R5cGVbJ2RlbGV0ZSddID0gc3RhY2tEZWxldGU7XG5TdGFjay5wcm90b3R5cGUuZ2V0ID0gc3RhY2tHZXQ7XG5TdGFjay5wcm90b3R5cGUuaGFzID0gc3RhY2tIYXM7XG5TdGFjay5wcm90b3R5cGUuc2V0ID0gc3RhY2tTZXQ7XG5cbm1vZHVsZS5leHBvcnRzID0gU3RhY2s7XG5cblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL25vZGVfbW9kdWxlcy9sb2Rhc2gvX1N0YWNrLmpzXG4vLyBtb2R1bGUgaWQgPSAuL25vZGVfbW9kdWxlcy9sb2Rhc2gvX1N0YWNrLmpzXG4vLyBtb2R1bGUgY2h1bmtzID0gMSIsInZhciByb290ID0gcmVxdWlyZSgnLi9fcm9vdCcpO1xuXG4vKiogQnVpbHQtaW4gdmFsdWUgcmVmZXJlbmNlcy4gKi9cbnZhciBTeW1ib2wgPSByb290LlN5bWJvbDtcblxubW9kdWxlLmV4cG9ydHMgPSBTeW1ib2w7XG5cblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL25vZGVfbW9kdWxlcy9sb2Rhc2gvX1N5bWJvbC5qc1xuLy8gbW9kdWxlIGlkID0gLi9ub2RlX21vZHVsZXMvbG9kYXNoL19TeW1ib2wuanNcbi8vIG1vZHVsZSBjaHVua3MgPSAxIiwidmFyIHJvb3QgPSByZXF1aXJlKCcuL19yb290Jyk7XG5cbi8qKiBCdWlsdC1pbiB2YWx1ZSByZWZlcmVuY2VzLiAqL1xudmFyIFVpbnQ4QXJyYXkgPSByb290LlVpbnQ4QXJyYXk7XG5cbm1vZHVsZS5leHBvcnRzID0gVWludDhBcnJheTtcblxuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vbm9kZV9tb2R1bGVzL2xvZGFzaC9fVWludDhBcnJheS5qc1xuLy8gbW9kdWxlIGlkID0gLi9ub2RlX21vZHVsZXMvbG9kYXNoL19VaW50OEFycmF5LmpzXG4vLyBtb2R1bGUgY2h1bmtzID0gMSIsInZhciBnZXROYXRpdmUgPSByZXF1aXJlKCcuL19nZXROYXRpdmUnKSxcbiAgICByb290ID0gcmVxdWlyZSgnLi9fcm9vdCcpO1xuXG4vKiBCdWlsdC1pbiBtZXRob2QgcmVmZXJlbmNlcyB0aGF0IGFyZSB2ZXJpZmllZCB0byBiZSBuYXRpdmUuICovXG52YXIgV2Vha01hcCA9IGdldE5hdGl2ZShyb290LCAnV2Vha01hcCcpO1xuXG5tb2R1bGUuZXhwb3J0cyA9IFdlYWtNYXA7XG5cblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL25vZGVfbW9kdWxlcy9sb2Rhc2gvX1dlYWtNYXAuanNcbi8vIG1vZHVsZSBpZCA9IC4vbm9kZV9tb2R1bGVzL2xvZGFzaC9fV2Vha01hcC5qc1xuLy8gbW9kdWxlIGNodW5rcyA9IDEiLCIvKipcbiAqIEEgZmFzdGVyIGFsdGVybmF0aXZlIHRvIGBGdW5jdGlvbiNhcHBseWAsIHRoaXMgZnVuY3Rpb24gaW52b2tlcyBgZnVuY2BcbiAqIHdpdGggdGhlIGB0aGlzYCBiaW5kaW5nIG9mIGB0aGlzQXJnYCBhbmQgdGhlIGFyZ3VtZW50cyBvZiBgYXJnc2AuXG4gKlxuICogQHByaXZhdGVcbiAqIEBwYXJhbSB7RnVuY3Rpb259IGZ1bmMgVGhlIGZ1bmN0aW9uIHRvIGludm9rZS5cbiAqIEBwYXJhbSB7Kn0gdGhpc0FyZyBUaGUgYHRoaXNgIGJpbmRpbmcgb2YgYGZ1bmNgLlxuICogQHBhcmFtIHtBcnJheX0gYXJncyBUaGUgYXJndW1lbnRzIHRvIGludm9rZSBgZnVuY2Agd2l0aC5cbiAqIEByZXR1cm5zIHsqfSBSZXR1cm5zIHRoZSByZXN1bHQgb2YgYGZ1bmNgLlxuICovXG5mdW5jdGlvbiBhcHBseShmdW5jLCB0aGlzQXJnLCBhcmdzKSB7XG4gIHN3aXRjaCAoYXJncy5sZW5ndGgpIHtcbiAgICBjYXNlIDA6IHJldHVybiBmdW5jLmNhbGwodGhpc0FyZyk7XG4gICAgY2FzZSAxOiByZXR1cm4gZnVuYy5jYWxsKHRoaXNBcmcsIGFyZ3NbMF0pO1xuICAgIGNhc2UgMjogcmV0dXJuIGZ1bmMuY2FsbCh0aGlzQXJnLCBhcmdzWzBdLCBhcmdzWzFdKTtcbiAgICBjYXNlIDM6IHJldHVybiBmdW5jLmNhbGwodGhpc0FyZywgYXJnc1swXSwgYXJnc1sxXSwgYXJnc1syXSk7XG4gIH1cbiAgcmV0dXJuIGZ1bmMuYXBwbHkodGhpc0FyZywgYXJncyk7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gYXBwbHk7XG5cblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL25vZGVfbW9kdWxlcy9sb2Rhc2gvX2FwcGx5LmpzXG4vLyBtb2R1bGUgaWQgPSAuL25vZGVfbW9kdWxlcy9sb2Rhc2gvX2FwcGx5LmpzXG4vLyBtb2R1bGUgY2h1bmtzID0gMSIsIi8qKlxuICogQSBzcGVjaWFsaXplZCB2ZXJzaW9uIG9mIGBfLmZvckVhY2hgIGZvciBhcnJheXMgd2l0aG91dCBzdXBwb3J0IGZvclxuICogaXRlcmF0ZWUgc2hvcnRoYW5kcy5cbiAqXG4gKiBAcHJpdmF0ZVxuICogQHBhcmFtIHtBcnJheX0gW2FycmF5XSBUaGUgYXJyYXkgdG8gaXRlcmF0ZSBvdmVyLlxuICogQHBhcmFtIHtGdW5jdGlvbn0gaXRlcmF0ZWUgVGhlIGZ1bmN0aW9uIGludm9rZWQgcGVyIGl0ZXJhdGlvbi5cbiAqIEByZXR1cm5zIHtBcnJheX0gUmV0dXJucyBgYXJyYXlgLlxuICovXG5mdW5jdGlvbiBhcnJheUVhY2goYXJyYXksIGl0ZXJhdGVlKSB7XG4gIHZhciBpbmRleCA9IC0xLFxuICAgICAgbGVuZ3RoID0gYXJyYXkgPT0gbnVsbCA/IDAgOiBhcnJheS5sZW5ndGg7XG5cbiAgd2hpbGUgKCsraW5kZXggPCBsZW5ndGgpIHtcbiAgICBpZiAoaXRlcmF0ZWUoYXJyYXlbaW5kZXhdLCBpbmRleCwgYXJyYXkpID09PSBmYWxzZSkge1xuICAgICAgYnJlYWs7XG4gICAgfVxuICB9XG4gIHJldHVybiBhcnJheTtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBhcnJheUVhY2g7XG5cblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL25vZGVfbW9kdWxlcy9sb2Rhc2gvX2FycmF5RWFjaC5qc1xuLy8gbW9kdWxlIGlkID0gLi9ub2RlX21vZHVsZXMvbG9kYXNoL19hcnJheUVhY2guanNcbi8vIG1vZHVsZSBjaHVua3MgPSAxIiwiLyoqXG4gKiBBIHNwZWNpYWxpemVkIHZlcnNpb24gb2YgYF8uZmlsdGVyYCBmb3IgYXJyYXlzIHdpdGhvdXQgc3VwcG9ydCBmb3JcbiAqIGl0ZXJhdGVlIHNob3J0aGFuZHMuXG4gKlxuICogQHByaXZhdGVcbiAqIEBwYXJhbSB7QXJyYXl9IFthcnJheV0gVGhlIGFycmF5IHRvIGl0ZXJhdGUgb3Zlci5cbiAqIEBwYXJhbSB7RnVuY3Rpb259IHByZWRpY2F0ZSBUaGUgZnVuY3Rpb24gaW52b2tlZCBwZXIgaXRlcmF0aW9uLlxuICogQHJldHVybnMge0FycmF5fSBSZXR1cm5zIHRoZSBuZXcgZmlsdGVyZWQgYXJyYXkuXG4gKi9cbmZ1bmN0aW9uIGFycmF5RmlsdGVyKGFycmF5LCBwcmVkaWNhdGUpIHtcbiAgdmFyIGluZGV4ID0gLTEsXG4gICAgICBsZW5ndGggPSBhcnJheSA9PSBudWxsID8gMCA6IGFycmF5Lmxlbmd0aCxcbiAgICAgIHJlc0luZGV4ID0gMCxcbiAgICAgIHJlc3VsdCA9IFtdO1xuXG4gIHdoaWxlICgrK2luZGV4IDwgbGVuZ3RoKSB7XG4gICAgdmFyIHZhbHVlID0gYXJyYXlbaW5kZXhdO1xuICAgIGlmIChwcmVkaWNhdGUodmFsdWUsIGluZGV4LCBhcnJheSkpIHtcbiAgICAgIHJlc3VsdFtyZXNJbmRleCsrXSA9IHZhbHVlO1xuICAgIH1cbiAgfVxuICByZXR1cm4gcmVzdWx0O1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGFycmF5RmlsdGVyO1xuXG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9ub2RlX21vZHVsZXMvbG9kYXNoL19hcnJheUZpbHRlci5qc1xuLy8gbW9kdWxlIGlkID0gLi9ub2RlX21vZHVsZXMvbG9kYXNoL19hcnJheUZpbHRlci5qc1xuLy8gbW9kdWxlIGNodW5rcyA9IDEiLCJ2YXIgYmFzZUluZGV4T2YgPSByZXF1aXJlKCcuL19iYXNlSW5kZXhPZicpO1xuXG4vKipcbiAqIEEgc3BlY2lhbGl6ZWQgdmVyc2lvbiBvZiBgXy5pbmNsdWRlc2AgZm9yIGFycmF5cyB3aXRob3V0IHN1cHBvcnQgZm9yXG4gKiBzcGVjaWZ5aW5nIGFuIGluZGV4IHRvIHNlYXJjaCBmcm9tLlxuICpcbiAqIEBwcml2YXRlXG4gKiBAcGFyYW0ge0FycmF5fSBbYXJyYXldIFRoZSBhcnJheSB0byBpbnNwZWN0LlxuICogQHBhcmFtIHsqfSB0YXJnZXQgVGhlIHZhbHVlIHRvIHNlYXJjaCBmb3IuXG4gKiBAcmV0dXJucyB7Ym9vbGVhbn0gUmV0dXJucyBgdHJ1ZWAgaWYgYHRhcmdldGAgaXMgZm91bmQsIGVsc2UgYGZhbHNlYC5cbiAqL1xuZnVuY3Rpb24gYXJyYXlJbmNsdWRlcyhhcnJheSwgdmFsdWUpIHtcbiAgdmFyIGxlbmd0aCA9IGFycmF5ID09IG51bGwgPyAwIDogYXJyYXkubGVuZ3RoO1xuICByZXR1cm4gISFsZW5ndGggJiYgYmFzZUluZGV4T2YoYXJyYXksIHZhbHVlLCAwKSA+IC0xO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGFycmF5SW5jbHVkZXM7XG5cblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL25vZGVfbW9kdWxlcy9sb2Rhc2gvX2FycmF5SW5jbHVkZXMuanNcbi8vIG1vZHVsZSBpZCA9IC4vbm9kZV9tb2R1bGVzL2xvZGFzaC9fYXJyYXlJbmNsdWRlcy5qc1xuLy8gbW9kdWxlIGNodW5rcyA9IDEiLCIvKipcbiAqIFRoaXMgZnVuY3Rpb24gaXMgbGlrZSBgYXJyYXlJbmNsdWRlc2AgZXhjZXB0IHRoYXQgaXQgYWNjZXB0cyBhIGNvbXBhcmF0b3IuXG4gKlxuICogQHByaXZhdGVcbiAqIEBwYXJhbSB7QXJyYXl9IFthcnJheV0gVGhlIGFycmF5IHRvIGluc3BlY3QuXG4gKiBAcGFyYW0geyp9IHRhcmdldCBUaGUgdmFsdWUgdG8gc2VhcmNoIGZvci5cbiAqIEBwYXJhbSB7RnVuY3Rpb259IGNvbXBhcmF0b3IgVGhlIGNvbXBhcmF0b3IgaW52b2tlZCBwZXIgZWxlbWVudC5cbiAqIEByZXR1cm5zIHtib29sZWFufSBSZXR1cm5zIGB0cnVlYCBpZiBgdGFyZ2V0YCBpcyBmb3VuZCwgZWxzZSBgZmFsc2VgLlxuICovXG5mdW5jdGlvbiBhcnJheUluY2x1ZGVzV2l0aChhcnJheSwgdmFsdWUsIGNvbXBhcmF0b3IpIHtcbiAgdmFyIGluZGV4ID0gLTEsXG4gICAgICBsZW5ndGggPSBhcnJheSA9PSBudWxsID8gMCA6IGFycmF5Lmxlbmd0aDtcblxuICB3aGlsZSAoKytpbmRleCA8IGxlbmd0aCkge1xuICAgIGlmIChjb21wYXJhdG9yKHZhbHVlLCBhcnJheVtpbmRleF0pKSB7XG4gICAgICByZXR1cm4gdHJ1ZTtcbiAgICB9XG4gIH1cbiAgcmV0dXJuIGZhbHNlO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGFycmF5SW5jbHVkZXNXaXRoO1xuXG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9ub2RlX21vZHVsZXMvbG9kYXNoL19hcnJheUluY2x1ZGVzV2l0aC5qc1xuLy8gbW9kdWxlIGlkID0gLi9ub2RlX21vZHVsZXMvbG9kYXNoL19hcnJheUluY2x1ZGVzV2l0aC5qc1xuLy8gbW9kdWxlIGNodW5rcyA9IDEiLCJ2YXIgYmFzZVRpbWVzID0gcmVxdWlyZSgnLi9fYmFzZVRpbWVzJyksXG4gICAgaXNBcmd1bWVudHMgPSByZXF1aXJlKCcuL2lzQXJndW1lbnRzJyksXG4gICAgaXNBcnJheSA9IHJlcXVpcmUoJy4vaXNBcnJheScpLFxuICAgIGlzQnVmZmVyID0gcmVxdWlyZSgnLi9pc0J1ZmZlcicpLFxuICAgIGlzSW5kZXggPSByZXF1aXJlKCcuL19pc0luZGV4JyksXG4gICAgaXNUeXBlZEFycmF5ID0gcmVxdWlyZSgnLi9pc1R5cGVkQXJyYXknKTtcblxuLyoqIFVzZWQgZm9yIGJ1aWx0LWluIG1ldGhvZCByZWZlcmVuY2VzLiAqL1xudmFyIG9iamVjdFByb3RvID0gT2JqZWN0LnByb3RvdHlwZTtcblxuLyoqIFVzZWQgdG8gY2hlY2sgb2JqZWN0cyBmb3Igb3duIHByb3BlcnRpZXMuICovXG52YXIgaGFzT3duUHJvcGVydHkgPSBvYmplY3RQcm90by5oYXNPd25Qcm9wZXJ0eTtcblxuLyoqXG4gKiBDcmVhdGVzIGFuIGFycmF5IG9mIHRoZSBlbnVtZXJhYmxlIHByb3BlcnR5IG5hbWVzIG9mIHRoZSBhcnJheS1saWtlIGB2YWx1ZWAuXG4gKlxuICogQHByaXZhdGVcbiAqIEBwYXJhbSB7Kn0gdmFsdWUgVGhlIHZhbHVlIHRvIHF1ZXJ5LlxuICogQHBhcmFtIHtib29sZWFufSBpbmhlcml0ZWQgU3BlY2lmeSByZXR1cm5pbmcgaW5oZXJpdGVkIHByb3BlcnR5IG5hbWVzLlxuICogQHJldHVybnMge0FycmF5fSBSZXR1cm5zIHRoZSBhcnJheSBvZiBwcm9wZXJ0eSBuYW1lcy5cbiAqL1xuZnVuY3Rpb24gYXJyYXlMaWtlS2V5cyh2YWx1ZSwgaW5oZXJpdGVkKSB7XG4gIHZhciBpc0FyciA9IGlzQXJyYXkodmFsdWUpLFxuICAgICAgaXNBcmcgPSAhaXNBcnIgJiYgaXNBcmd1bWVudHModmFsdWUpLFxuICAgICAgaXNCdWZmID0gIWlzQXJyICYmICFpc0FyZyAmJiBpc0J1ZmZlcih2YWx1ZSksXG4gICAgICBpc1R5cGUgPSAhaXNBcnIgJiYgIWlzQXJnICYmICFpc0J1ZmYgJiYgaXNUeXBlZEFycmF5KHZhbHVlKSxcbiAgICAgIHNraXBJbmRleGVzID0gaXNBcnIgfHwgaXNBcmcgfHwgaXNCdWZmIHx8IGlzVHlwZSxcbiAgICAgIHJlc3VsdCA9IHNraXBJbmRleGVzID8gYmFzZVRpbWVzKHZhbHVlLmxlbmd0aCwgU3RyaW5nKSA6IFtdLFxuICAgICAgbGVuZ3RoID0gcmVzdWx0Lmxlbmd0aDtcblxuICBmb3IgKHZhciBrZXkgaW4gdmFsdWUpIHtcbiAgICBpZiAoKGluaGVyaXRlZCB8fCBoYXNPd25Qcm9wZXJ0eS5jYWxsKHZhbHVlLCBrZXkpKSAmJlxuICAgICAgICAhKHNraXBJbmRleGVzICYmIChcbiAgICAgICAgICAgLy8gU2FmYXJpIDkgaGFzIGVudW1lcmFibGUgYGFyZ3VtZW50cy5sZW5ndGhgIGluIHN0cmljdCBtb2RlLlxuICAgICAgICAgICBrZXkgPT0gJ2xlbmd0aCcgfHxcbiAgICAgICAgICAgLy8gTm9kZS5qcyAwLjEwIGhhcyBlbnVtZXJhYmxlIG5vbi1pbmRleCBwcm9wZXJ0aWVzIG9uIGJ1ZmZlcnMuXG4gICAgICAgICAgIChpc0J1ZmYgJiYgKGtleSA9PSAnb2Zmc2V0JyB8fCBrZXkgPT0gJ3BhcmVudCcpKSB8fFxuICAgICAgICAgICAvLyBQaGFudG9tSlMgMiBoYXMgZW51bWVyYWJsZSBub24taW5kZXggcHJvcGVydGllcyBvbiB0eXBlZCBhcnJheXMuXG4gICAgICAgICAgIChpc1R5cGUgJiYgKGtleSA9PSAnYnVmZmVyJyB8fCBrZXkgPT0gJ2J5dGVMZW5ndGgnIHx8IGtleSA9PSAnYnl0ZU9mZnNldCcpKSB8fFxuICAgICAgICAgICAvLyBTa2lwIGluZGV4IHByb3BlcnRpZXMuXG4gICAgICAgICAgIGlzSW5kZXgoa2V5LCBsZW5ndGgpXG4gICAgICAgICkpKSB7XG4gICAgICByZXN1bHQucHVzaChrZXkpO1xuICAgIH1cbiAgfVxuICByZXR1cm4gcmVzdWx0O1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGFycmF5TGlrZUtleXM7XG5cblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL25vZGVfbW9kdWxlcy9sb2Rhc2gvX2FycmF5TGlrZUtleXMuanNcbi8vIG1vZHVsZSBpZCA9IC4vbm9kZV9tb2R1bGVzL2xvZGFzaC9fYXJyYXlMaWtlS2V5cy5qc1xuLy8gbW9kdWxlIGNodW5rcyA9IDEiLCIvKipcbiAqIEEgc3BlY2lhbGl6ZWQgdmVyc2lvbiBvZiBgXy5tYXBgIGZvciBhcnJheXMgd2l0aG91dCBzdXBwb3J0IGZvciBpdGVyYXRlZVxuICogc2hvcnRoYW5kcy5cbiAqXG4gKiBAcHJpdmF0ZVxuICogQHBhcmFtIHtBcnJheX0gW2FycmF5XSBUaGUgYXJyYXkgdG8gaXRlcmF0ZSBvdmVyLlxuICogQHBhcmFtIHtGdW5jdGlvbn0gaXRlcmF0ZWUgVGhlIGZ1bmN0aW9uIGludm9rZWQgcGVyIGl0ZXJhdGlvbi5cbiAqIEByZXR1cm5zIHtBcnJheX0gUmV0dXJucyB0aGUgbmV3IG1hcHBlZCBhcnJheS5cbiAqL1xuZnVuY3Rpb24gYXJyYXlNYXAoYXJyYXksIGl0ZXJhdGVlKSB7XG4gIHZhciBpbmRleCA9IC0xLFxuICAgICAgbGVuZ3RoID0gYXJyYXkgPT0gbnVsbCA/IDAgOiBhcnJheS5sZW5ndGgsXG4gICAgICByZXN1bHQgPSBBcnJheShsZW5ndGgpO1xuXG4gIHdoaWxlICgrK2luZGV4IDwgbGVuZ3RoKSB7XG4gICAgcmVzdWx0W2luZGV4XSA9IGl0ZXJhdGVlKGFycmF5W2luZGV4XSwgaW5kZXgsIGFycmF5KTtcbiAgfVxuICByZXR1cm4gcmVzdWx0O1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGFycmF5TWFwO1xuXG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9ub2RlX21vZHVsZXMvbG9kYXNoL19hcnJheU1hcC5qc1xuLy8gbW9kdWxlIGlkID0gLi9ub2RlX21vZHVsZXMvbG9kYXNoL19hcnJheU1hcC5qc1xuLy8gbW9kdWxlIGNodW5rcyA9IDEiLCIvKipcbiAqIEFwcGVuZHMgdGhlIGVsZW1lbnRzIG9mIGB2YWx1ZXNgIHRvIGBhcnJheWAuXG4gKlxuICogQHByaXZhdGVcbiAqIEBwYXJhbSB7QXJyYXl9IGFycmF5IFRoZSBhcnJheSB0byBtb2RpZnkuXG4gKiBAcGFyYW0ge0FycmF5fSB2YWx1ZXMgVGhlIHZhbHVlcyB0byBhcHBlbmQuXG4gKiBAcmV0dXJucyB7QXJyYXl9IFJldHVybnMgYGFycmF5YC5cbiAqL1xuZnVuY3Rpb24gYXJyYXlQdXNoKGFycmF5LCB2YWx1ZXMpIHtcbiAgdmFyIGluZGV4ID0gLTEsXG4gICAgICBsZW5ndGggPSB2YWx1ZXMubGVuZ3RoLFxuICAgICAgb2Zmc2V0ID0gYXJyYXkubGVuZ3RoO1xuXG4gIHdoaWxlICgrK2luZGV4IDwgbGVuZ3RoKSB7XG4gICAgYXJyYXlbb2Zmc2V0ICsgaW5kZXhdID0gdmFsdWVzW2luZGV4XTtcbiAgfVxuICByZXR1cm4gYXJyYXk7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gYXJyYXlQdXNoO1xuXG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9ub2RlX21vZHVsZXMvbG9kYXNoL19hcnJheVB1c2guanNcbi8vIG1vZHVsZSBpZCA9IC4vbm9kZV9tb2R1bGVzL2xvZGFzaC9fYXJyYXlQdXNoLmpzXG4vLyBtb2R1bGUgY2h1bmtzID0gMSIsIi8qKlxuICogQSBzcGVjaWFsaXplZCB2ZXJzaW9uIG9mIGBfLnNvbWVgIGZvciBhcnJheXMgd2l0aG91dCBzdXBwb3J0IGZvciBpdGVyYXRlZVxuICogc2hvcnRoYW5kcy5cbiAqXG4gKiBAcHJpdmF0ZVxuICogQHBhcmFtIHtBcnJheX0gW2FycmF5XSBUaGUgYXJyYXkgdG8gaXRlcmF0ZSBvdmVyLlxuICogQHBhcmFtIHtGdW5jdGlvbn0gcHJlZGljYXRlIFRoZSBmdW5jdGlvbiBpbnZva2VkIHBlciBpdGVyYXRpb24uXG4gKiBAcmV0dXJucyB7Ym9vbGVhbn0gUmV0dXJucyBgdHJ1ZWAgaWYgYW55IGVsZW1lbnQgcGFzc2VzIHRoZSBwcmVkaWNhdGUgY2hlY2ssXG4gKiAgZWxzZSBgZmFsc2VgLlxuICovXG5mdW5jdGlvbiBhcnJheVNvbWUoYXJyYXksIHByZWRpY2F0ZSkge1xuICB2YXIgaW5kZXggPSAtMSxcbiAgICAgIGxlbmd0aCA9IGFycmF5ID09IG51bGwgPyAwIDogYXJyYXkubGVuZ3RoO1xuXG4gIHdoaWxlICgrK2luZGV4IDwgbGVuZ3RoKSB7XG4gICAgaWYgKHByZWRpY2F0ZShhcnJheVtpbmRleF0sIGluZGV4LCBhcnJheSkpIHtcbiAgICAgIHJldHVybiB0cnVlO1xuICAgIH1cbiAgfVxuICByZXR1cm4gZmFsc2U7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gYXJyYXlTb21lO1xuXG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9ub2RlX21vZHVsZXMvbG9kYXNoL19hcnJheVNvbWUuanNcbi8vIG1vZHVsZSBpZCA9IC4vbm9kZV9tb2R1bGVzL2xvZGFzaC9fYXJyYXlTb21lLmpzXG4vLyBtb2R1bGUgY2h1bmtzID0gMSIsInZhciBiYXNlQXNzaWduVmFsdWUgPSByZXF1aXJlKCcuL19iYXNlQXNzaWduVmFsdWUnKSxcbiAgICBlcSA9IHJlcXVpcmUoJy4vZXEnKTtcblxuLyoqIFVzZWQgZm9yIGJ1aWx0LWluIG1ldGhvZCByZWZlcmVuY2VzLiAqL1xudmFyIG9iamVjdFByb3RvID0gT2JqZWN0LnByb3RvdHlwZTtcblxuLyoqIFVzZWQgdG8gY2hlY2sgb2JqZWN0cyBmb3Igb3duIHByb3BlcnRpZXMuICovXG52YXIgaGFzT3duUHJvcGVydHkgPSBvYmplY3RQcm90by5oYXNPd25Qcm9wZXJ0eTtcblxuLyoqXG4gKiBBc3NpZ25zIGB2YWx1ZWAgdG8gYGtleWAgb2YgYG9iamVjdGAgaWYgdGhlIGV4aXN0aW5nIHZhbHVlIGlzIG5vdCBlcXVpdmFsZW50XG4gKiB1c2luZyBbYFNhbWVWYWx1ZVplcm9gXShodHRwOi8vZWNtYS1pbnRlcm5hdGlvbmFsLm9yZy9lY21hLTI2Mi83LjAvI3NlYy1zYW1ldmFsdWV6ZXJvKVxuICogZm9yIGVxdWFsaXR5IGNvbXBhcmlzb25zLlxuICpcbiAqIEBwcml2YXRlXG4gKiBAcGFyYW0ge09iamVjdH0gb2JqZWN0IFRoZSBvYmplY3QgdG8gbW9kaWZ5LlxuICogQHBhcmFtIHtzdHJpbmd9IGtleSBUaGUga2V5IG9mIHRoZSBwcm9wZXJ0eSB0byBhc3NpZ24uXG4gKiBAcGFyYW0geyp9IHZhbHVlIFRoZSB2YWx1ZSB0byBhc3NpZ24uXG4gKi9cbmZ1bmN0aW9uIGFzc2lnblZhbHVlKG9iamVjdCwga2V5LCB2YWx1ZSkge1xuICB2YXIgb2JqVmFsdWUgPSBvYmplY3Rba2V5XTtcbiAgaWYgKCEoaGFzT3duUHJvcGVydHkuY2FsbChvYmplY3QsIGtleSkgJiYgZXEob2JqVmFsdWUsIHZhbHVlKSkgfHxcbiAgICAgICh2YWx1ZSA9PT0gdW5kZWZpbmVkICYmICEoa2V5IGluIG9iamVjdCkpKSB7XG4gICAgYmFzZUFzc2lnblZhbHVlKG9iamVjdCwga2V5LCB2YWx1ZSk7XG4gIH1cbn1cblxubW9kdWxlLmV4cG9ydHMgPSBhc3NpZ25WYWx1ZTtcblxuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vbm9kZV9tb2R1bGVzL2xvZGFzaC9fYXNzaWduVmFsdWUuanNcbi8vIG1vZHVsZSBpZCA9IC4vbm9kZV9tb2R1bGVzL2xvZGFzaC9fYXNzaWduVmFsdWUuanNcbi8vIG1vZHVsZSBjaHVua3MgPSAxIiwidmFyIGVxID0gcmVxdWlyZSgnLi9lcScpO1xuXG4vKipcbiAqIEdldHMgdGhlIGluZGV4IGF0IHdoaWNoIHRoZSBga2V5YCBpcyBmb3VuZCBpbiBgYXJyYXlgIG9mIGtleS12YWx1ZSBwYWlycy5cbiAqXG4gKiBAcHJpdmF0ZVxuICogQHBhcmFtIHtBcnJheX0gYXJyYXkgVGhlIGFycmF5IHRvIGluc3BlY3QuXG4gKiBAcGFyYW0geyp9IGtleSBUaGUga2V5IHRvIHNlYXJjaCBmb3IuXG4gKiBAcmV0dXJucyB7bnVtYmVyfSBSZXR1cm5zIHRoZSBpbmRleCBvZiB0aGUgbWF0Y2hlZCB2YWx1ZSwgZWxzZSBgLTFgLlxuICovXG5mdW5jdGlvbiBhc3NvY0luZGV4T2YoYXJyYXksIGtleSkge1xuICB2YXIgbGVuZ3RoID0gYXJyYXkubGVuZ3RoO1xuICB3aGlsZSAobGVuZ3RoLS0pIHtcbiAgICBpZiAoZXEoYXJyYXlbbGVuZ3RoXVswXSwga2V5KSkge1xuICAgICAgcmV0dXJuIGxlbmd0aDtcbiAgICB9XG4gIH1cbiAgcmV0dXJuIC0xO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGFzc29jSW5kZXhPZjtcblxuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vbm9kZV9tb2R1bGVzL2xvZGFzaC9fYXNzb2NJbmRleE9mLmpzXG4vLyBtb2R1bGUgaWQgPSAuL25vZGVfbW9kdWxlcy9sb2Rhc2gvX2Fzc29jSW5kZXhPZi5qc1xuLy8gbW9kdWxlIGNodW5rcyA9IDEiLCJ2YXIgY29weU9iamVjdCA9IHJlcXVpcmUoJy4vX2NvcHlPYmplY3QnKSxcbiAgICBrZXlzID0gcmVxdWlyZSgnLi9rZXlzJyk7XG5cbi8qKlxuICogVGhlIGJhc2UgaW1wbGVtZW50YXRpb24gb2YgYF8uYXNzaWduYCB3aXRob3V0IHN1cHBvcnQgZm9yIG11bHRpcGxlIHNvdXJjZXNcbiAqIG9yIGBjdXN0b21pemVyYCBmdW5jdGlvbnMuXG4gKlxuICogQHByaXZhdGVcbiAqIEBwYXJhbSB7T2JqZWN0fSBvYmplY3QgVGhlIGRlc3RpbmF0aW9uIG9iamVjdC5cbiAqIEBwYXJhbSB7T2JqZWN0fSBzb3VyY2UgVGhlIHNvdXJjZSBvYmplY3QuXG4gKiBAcmV0dXJucyB7T2JqZWN0fSBSZXR1cm5zIGBvYmplY3RgLlxuICovXG5mdW5jdGlvbiBiYXNlQXNzaWduKG9iamVjdCwgc291cmNlKSB7XG4gIHJldHVybiBvYmplY3QgJiYgY29weU9iamVjdChzb3VyY2UsIGtleXMoc291cmNlKSwgb2JqZWN0KTtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBiYXNlQXNzaWduO1xuXG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9ub2RlX21vZHVsZXMvbG9kYXNoL19iYXNlQXNzaWduLmpzXG4vLyBtb2R1bGUgaWQgPSAuL25vZGVfbW9kdWxlcy9sb2Rhc2gvX2Jhc2VBc3NpZ24uanNcbi8vIG1vZHVsZSBjaHVua3MgPSAxIiwidmFyIGNvcHlPYmplY3QgPSByZXF1aXJlKCcuL19jb3B5T2JqZWN0JyksXG4gICAga2V5c0luID0gcmVxdWlyZSgnLi9rZXlzSW4nKTtcblxuLyoqXG4gKiBUaGUgYmFzZSBpbXBsZW1lbnRhdGlvbiBvZiBgXy5hc3NpZ25JbmAgd2l0aG91dCBzdXBwb3J0IGZvciBtdWx0aXBsZSBzb3VyY2VzXG4gKiBvciBgY3VzdG9taXplcmAgZnVuY3Rpb25zLlxuICpcbiAqIEBwcml2YXRlXG4gKiBAcGFyYW0ge09iamVjdH0gb2JqZWN0IFRoZSBkZXN0aW5hdGlvbiBvYmplY3QuXG4gKiBAcGFyYW0ge09iamVjdH0gc291cmNlIFRoZSBzb3VyY2Ugb2JqZWN0LlxuICogQHJldHVybnMge09iamVjdH0gUmV0dXJucyBgb2JqZWN0YC5cbiAqL1xuZnVuY3Rpb24gYmFzZUFzc2lnbkluKG9iamVjdCwgc291cmNlKSB7XG4gIHJldHVybiBvYmplY3QgJiYgY29weU9iamVjdChzb3VyY2UsIGtleXNJbihzb3VyY2UpLCBvYmplY3QpO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGJhc2VBc3NpZ25JbjtcblxuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vbm9kZV9tb2R1bGVzL2xvZGFzaC9fYmFzZUFzc2lnbkluLmpzXG4vLyBtb2R1bGUgaWQgPSAuL25vZGVfbW9kdWxlcy9sb2Rhc2gvX2Jhc2VBc3NpZ25Jbi5qc1xuLy8gbW9kdWxlIGNodW5rcyA9IDEiLCJ2YXIgZGVmaW5lUHJvcGVydHkgPSByZXF1aXJlKCcuL19kZWZpbmVQcm9wZXJ0eScpO1xuXG4vKipcbiAqIFRoZSBiYXNlIGltcGxlbWVudGF0aW9uIG9mIGBhc3NpZ25WYWx1ZWAgYW5kIGBhc3NpZ25NZXJnZVZhbHVlYCB3aXRob3V0XG4gKiB2YWx1ZSBjaGVja3MuXG4gKlxuICogQHByaXZhdGVcbiAqIEBwYXJhbSB7T2JqZWN0fSBvYmplY3QgVGhlIG9iamVjdCB0byBtb2RpZnkuXG4gKiBAcGFyYW0ge3N0cmluZ30ga2V5IFRoZSBrZXkgb2YgdGhlIHByb3BlcnR5IHRvIGFzc2lnbi5cbiAqIEBwYXJhbSB7Kn0gdmFsdWUgVGhlIHZhbHVlIHRvIGFzc2lnbi5cbiAqL1xuZnVuY3Rpb24gYmFzZUFzc2lnblZhbHVlKG9iamVjdCwga2V5LCB2YWx1ZSkge1xuICBpZiAoa2V5ID09ICdfX3Byb3RvX18nICYmIGRlZmluZVByb3BlcnR5KSB7XG4gICAgZGVmaW5lUHJvcGVydHkob2JqZWN0LCBrZXksIHtcbiAgICAgICdjb25maWd1cmFibGUnOiB0cnVlLFxuICAgICAgJ2VudW1lcmFibGUnOiB0cnVlLFxuICAgICAgJ3ZhbHVlJzogdmFsdWUsXG4gICAgICAnd3JpdGFibGUnOiB0cnVlXG4gICAgfSk7XG4gIH0gZWxzZSB7XG4gICAgb2JqZWN0W2tleV0gPSB2YWx1ZTtcbiAgfVxufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGJhc2VBc3NpZ25WYWx1ZTtcblxuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vbm9kZV9tb2R1bGVzL2xvZGFzaC9fYmFzZUFzc2lnblZhbHVlLmpzXG4vLyBtb2R1bGUgaWQgPSAuL25vZGVfbW9kdWxlcy9sb2Rhc2gvX2Jhc2VBc3NpZ25WYWx1ZS5qc1xuLy8gbW9kdWxlIGNodW5rcyA9IDEiLCJ2YXIgU3RhY2sgPSByZXF1aXJlKCcuL19TdGFjaycpLFxuICAgIGFycmF5RWFjaCA9IHJlcXVpcmUoJy4vX2FycmF5RWFjaCcpLFxuICAgIGFzc2lnblZhbHVlID0gcmVxdWlyZSgnLi9fYXNzaWduVmFsdWUnKSxcbiAgICBiYXNlQXNzaWduID0gcmVxdWlyZSgnLi9fYmFzZUFzc2lnbicpLFxuICAgIGJhc2VBc3NpZ25JbiA9IHJlcXVpcmUoJy4vX2Jhc2VBc3NpZ25JbicpLFxuICAgIGNsb25lQnVmZmVyID0gcmVxdWlyZSgnLi9fY2xvbmVCdWZmZXInKSxcbiAgICBjb3B5QXJyYXkgPSByZXF1aXJlKCcuL19jb3B5QXJyYXknKSxcbiAgICBjb3B5U3ltYm9scyA9IHJlcXVpcmUoJy4vX2NvcHlTeW1ib2xzJyksXG4gICAgY29weVN5bWJvbHNJbiA9IHJlcXVpcmUoJy4vX2NvcHlTeW1ib2xzSW4nKSxcbiAgICBnZXRBbGxLZXlzID0gcmVxdWlyZSgnLi9fZ2V0QWxsS2V5cycpLFxuICAgIGdldEFsbEtleXNJbiA9IHJlcXVpcmUoJy4vX2dldEFsbEtleXNJbicpLFxuICAgIGdldFRhZyA9IHJlcXVpcmUoJy4vX2dldFRhZycpLFxuICAgIGluaXRDbG9uZUFycmF5ID0gcmVxdWlyZSgnLi9faW5pdENsb25lQXJyYXknKSxcbiAgICBpbml0Q2xvbmVCeVRhZyA9IHJlcXVpcmUoJy4vX2luaXRDbG9uZUJ5VGFnJyksXG4gICAgaW5pdENsb25lT2JqZWN0ID0gcmVxdWlyZSgnLi9faW5pdENsb25lT2JqZWN0JyksXG4gICAgaXNBcnJheSA9IHJlcXVpcmUoJy4vaXNBcnJheScpLFxuICAgIGlzQnVmZmVyID0gcmVxdWlyZSgnLi9pc0J1ZmZlcicpLFxuICAgIGlzTWFwID0gcmVxdWlyZSgnLi9pc01hcCcpLFxuICAgIGlzT2JqZWN0ID0gcmVxdWlyZSgnLi9pc09iamVjdCcpLFxuICAgIGlzU2V0ID0gcmVxdWlyZSgnLi9pc1NldCcpLFxuICAgIGtleXMgPSByZXF1aXJlKCcuL2tleXMnKTtcblxuLyoqIFVzZWQgdG8gY29tcG9zZSBiaXRtYXNrcyBmb3IgY2xvbmluZy4gKi9cbnZhciBDTE9ORV9ERUVQX0ZMQUcgPSAxLFxuICAgIENMT05FX0ZMQVRfRkxBRyA9IDIsXG4gICAgQ0xPTkVfU1lNQk9MU19GTEFHID0gNDtcblxuLyoqIGBPYmplY3QjdG9TdHJpbmdgIHJlc3VsdCByZWZlcmVuY2VzLiAqL1xudmFyIGFyZ3NUYWcgPSAnW29iamVjdCBBcmd1bWVudHNdJyxcbiAgICBhcnJheVRhZyA9ICdbb2JqZWN0IEFycmF5XScsXG4gICAgYm9vbFRhZyA9ICdbb2JqZWN0IEJvb2xlYW5dJyxcbiAgICBkYXRlVGFnID0gJ1tvYmplY3QgRGF0ZV0nLFxuICAgIGVycm9yVGFnID0gJ1tvYmplY3QgRXJyb3JdJyxcbiAgICBmdW5jVGFnID0gJ1tvYmplY3QgRnVuY3Rpb25dJyxcbiAgICBnZW5UYWcgPSAnW29iamVjdCBHZW5lcmF0b3JGdW5jdGlvbl0nLFxuICAgIG1hcFRhZyA9ICdbb2JqZWN0IE1hcF0nLFxuICAgIG51bWJlclRhZyA9ICdbb2JqZWN0IE51bWJlcl0nLFxuICAgIG9iamVjdFRhZyA9ICdbb2JqZWN0IE9iamVjdF0nLFxuICAgIHJlZ2V4cFRhZyA9ICdbb2JqZWN0IFJlZ0V4cF0nLFxuICAgIHNldFRhZyA9ICdbb2JqZWN0IFNldF0nLFxuICAgIHN0cmluZ1RhZyA9ICdbb2JqZWN0IFN0cmluZ10nLFxuICAgIHN5bWJvbFRhZyA9ICdbb2JqZWN0IFN5bWJvbF0nLFxuICAgIHdlYWtNYXBUYWcgPSAnW29iamVjdCBXZWFrTWFwXSc7XG5cbnZhciBhcnJheUJ1ZmZlclRhZyA9ICdbb2JqZWN0IEFycmF5QnVmZmVyXScsXG4gICAgZGF0YVZpZXdUYWcgPSAnW29iamVjdCBEYXRhVmlld10nLFxuICAgIGZsb2F0MzJUYWcgPSAnW29iamVjdCBGbG9hdDMyQXJyYXldJyxcbiAgICBmbG9hdDY0VGFnID0gJ1tvYmplY3QgRmxvYXQ2NEFycmF5XScsXG4gICAgaW50OFRhZyA9ICdbb2JqZWN0IEludDhBcnJheV0nLFxuICAgIGludDE2VGFnID0gJ1tvYmplY3QgSW50MTZBcnJheV0nLFxuICAgIGludDMyVGFnID0gJ1tvYmplY3QgSW50MzJBcnJheV0nLFxuICAgIHVpbnQ4VGFnID0gJ1tvYmplY3QgVWludDhBcnJheV0nLFxuICAgIHVpbnQ4Q2xhbXBlZFRhZyA9ICdbb2JqZWN0IFVpbnQ4Q2xhbXBlZEFycmF5XScsXG4gICAgdWludDE2VGFnID0gJ1tvYmplY3QgVWludDE2QXJyYXldJyxcbiAgICB1aW50MzJUYWcgPSAnW29iamVjdCBVaW50MzJBcnJheV0nO1xuXG4vKiogVXNlZCB0byBpZGVudGlmeSBgdG9TdHJpbmdUYWdgIHZhbHVlcyBzdXBwb3J0ZWQgYnkgYF8uY2xvbmVgLiAqL1xudmFyIGNsb25lYWJsZVRhZ3MgPSB7fTtcbmNsb25lYWJsZVRhZ3NbYXJnc1RhZ10gPSBjbG9uZWFibGVUYWdzW2FycmF5VGFnXSA9XG5jbG9uZWFibGVUYWdzW2FycmF5QnVmZmVyVGFnXSA9IGNsb25lYWJsZVRhZ3NbZGF0YVZpZXdUYWddID1cbmNsb25lYWJsZVRhZ3NbYm9vbFRhZ10gPSBjbG9uZWFibGVUYWdzW2RhdGVUYWddID1cbmNsb25lYWJsZVRhZ3NbZmxvYXQzMlRhZ10gPSBjbG9uZWFibGVUYWdzW2Zsb2F0NjRUYWddID1cbmNsb25lYWJsZVRhZ3NbaW50OFRhZ10gPSBjbG9uZWFibGVUYWdzW2ludDE2VGFnXSA9XG5jbG9uZWFibGVUYWdzW2ludDMyVGFnXSA9IGNsb25lYWJsZVRhZ3NbbWFwVGFnXSA9XG5jbG9uZWFibGVUYWdzW251bWJlclRhZ10gPSBjbG9uZWFibGVUYWdzW29iamVjdFRhZ10gPVxuY2xvbmVhYmxlVGFnc1tyZWdleHBUYWddID0gY2xvbmVhYmxlVGFnc1tzZXRUYWddID1cbmNsb25lYWJsZVRhZ3Nbc3RyaW5nVGFnXSA9IGNsb25lYWJsZVRhZ3Nbc3ltYm9sVGFnXSA9XG5jbG9uZWFibGVUYWdzW3VpbnQ4VGFnXSA9IGNsb25lYWJsZVRhZ3NbdWludDhDbGFtcGVkVGFnXSA9XG5jbG9uZWFibGVUYWdzW3VpbnQxNlRhZ10gPSBjbG9uZWFibGVUYWdzW3VpbnQzMlRhZ10gPSB0cnVlO1xuY2xvbmVhYmxlVGFnc1tlcnJvclRhZ10gPSBjbG9uZWFibGVUYWdzW2Z1bmNUYWddID1cbmNsb25lYWJsZVRhZ3Nbd2Vha01hcFRhZ10gPSBmYWxzZTtcblxuLyoqXG4gKiBUaGUgYmFzZSBpbXBsZW1lbnRhdGlvbiBvZiBgXy5jbG9uZWAgYW5kIGBfLmNsb25lRGVlcGAgd2hpY2ggdHJhY2tzXG4gKiB0cmF2ZXJzZWQgb2JqZWN0cy5cbiAqXG4gKiBAcHJpdmF0ZVxuICogQHBhcmFtIHsqfSB2YWx1ZSBUaGUgdmFsdWUgdG8gY2xvbmUuXG4gKiBAcGFyYW0ge2Jvb2xlYW59IGJpdG1hc2sgVGhlIGJpdG1hc2sgZmxhZ3MuXG4gKiAgMSAtIERlZXAgY2xvbmVcbiAqICAyIC0gRmxhdHRlbiBpbmhlcml0ZWQgcHJvcGVydGllc1xuICogIDQgLSBDbG9uZSBzeW1ib2xzXG4gKiBAcGFyYW0ge0Z1bmN0aW9ufSBbY3VzdG9taXplcl0gVGhlIGZ1bmN0aW9uIHRvIGN1c3RvbWl6ZSBjbG9uaW5nLlxuICogQHBhcmFtIHtzdHJpbmd9IFtrZXldIFRoZSBrZXkgb2YgYHZhbHVlYC5cbiAqIEBwYXJhbSB7T2JqZWN0fSBbb2JqZWN0XSBUaGUgcGFyZW50IG9iamVjdCBvZiBgdmFsdWVgLlxuICogQHBhcmFtIHtPYmplY3R9IFtzdGFja10gVHJhY2tzIHRyYXZlcnNlZCBvYmplY3RzIGFuZCB0aGVpciBjbG9uZSBjb3VudGVycGFydHMuXG4gKiBAcmV0dXJucyB7Kn0gUmV0dXJucyB0aGUgY2xvbmVkIHZhbHVlLlxuICovXG5mdW5jdGlvbiBiYXNlQ2xvbmUodmFsdWUsIGJpdG1hc2ssIGN1c3RvbWl6ZXIsIGtleSwgb2JqZWN0LCBzdGFjaykge1xuICB2YXIgcmVzdWx0LFxuICAgICAgaXNEZWVwID0gYml0bWFzayAmIENMT05FX0RFRVBfRkxBRyxcbiAgICAgIGlzRmxhdCA9IGJpdG1hc2sgJiBDTE9ORV9GTEFUX0ZMQUcsXG4gICAgICBpc0Z1bGwgPSBiaXRtYXNrICYgQ0xPTkVfU1lNQk9MU19GTEFHO1xuXG4gIGlmIChjdXN0b21pemVyKSB7XG4gICAgcmVzdWx0ID0gb2JqZWN0ID8gY3VzdG9taXplcih2YWx1ZSwga2V5LCBvYmplY3QsIHN0YWNrKSA6IGN1c3RvbWl6ZXIodmFsdWUpO1xuICB9XG4gIGlmIChyZXN1bHQgIT09IHVuZGVmaW5lZCkge1xuICAgIHJldHVybiByZXN1bHQ7XG4gIH1cbiAgaWYgKCFpc09iamVjdCh2YWx1ZSkpIHtcbiAgICByZXR1cm4gdmFsdWU7XG4gIH1cbiAgdmFyIGlzQXJyID0gaXNBcnJheSh2YWx1ZSk7XG4gIGlmIChpc0Fycikge1xuICAgIHJlc3VsdCA9IGluaXRDbG9uZUFycmF5KHZhbHVlKTtcbiAgICBpZiAoIWlzRGVlcCkge1xuICAgICAgcmV0dXJuIGNvcHlBcnJheSh2YWx1ZSwgcmVzdWx0KTtcbiAgICB9XG4gIH0gZWxzZSB7XG4gICAgdmFyIHRhZyA9IGdldFRhZyh2YWx1ZSksXG4gICAgICAgIGlzRnVuYyA9IHRhZyA9PSBmdW5jVGFnIHx8IHRhZyA9PSBnZW5UYWc7XG5cbiAgICBpZiAoaXNCdWZmZXIodmFsdWUpKSB7XG4gICAgICByZXR1cm4gY2xvbmVCdWZmZXIodmFsdWUsIGlzRGVlcCk7XG4gICAgfVxuICAgIGlmICh0YWcgPT0gb2JqZWN0VGFnIHx8IHRhZyA9PSBhcmdzVGFnIHx8IChpc0Z1bmMgJiYgIW9iamVjdCkpIHtcbiAgICAgIHJlc3VsdCA9IChpc0ZsYXQgfHwgaXNGdW5jKSA/IHt9IDogaW5pdENsb25lT2JqZWN0KHZhbHVlKTtcbiAgICAgIGlmICghaXNEZWVwKSB7XG4gICAgICAgIHJldHVybiBpc0ZsYXRcbiAgICAgICAgICA/IGNvcHlTeW1ib2xzSW4odmFsdWUsIGJhc2VBc3NpZ25JbihyZXN1bHQsIHZhbHVlKSlcbiAgICAgICAgICA6IGNvcHlTeW1ib2xzKHZhbHVlLCBiYXNlQXNzaWduKHJlc3VsdCwgdmFsdWUpKTtcbiAgICAgIH1cbiAgICB9IGVsc2Uge1xuICAgICAgaWYgKCFjbG9uZWFibGVUYWdzW3RhZ10pIHtcbiAgICAgICAgcmV0dXJuIG9iamVjdCA/IHZhbHVlIDoge307XG4gICAgICB9XG4gICAgICByZXN1bHQgPSBpbml0Q2xvbmVCeVRhZyh2YWx1ZSwgdGFnLCBpc0RlZXApO1xuICAgIH1cbiAgfVxuICAvLyBDaGVjayBmb3IgY2lyY3VsYXIgcmVmZXJlbmNlcyBhbmQgcmV0dXJuIGl0cyBjb3JyZXNwb25kaW5nIGNsb25lLlxuICBzdGFjayB8fCAoc3RhY2sgPSBuZXcgU3RhY2spO1xuICB2YXIgc3RhY2tlZCA9IHN0YWNrLmdldCh2YWx1ZSk7XG4gIGlmIChzdGFja2VkKSB7XG4gICAgcmV0dXJuIHN0YWNrZWQ7XG4gIH1cbiAgc3RhY2suc2V0KHZhbHVlLCByZXN1bHQpO1xuXG4gIGlmIChpc1NldCh2YWx1ZSkpIHtcbiAgICB2YWx1ZS5mb3JFYWNoKGZ1bmN0aW9uKHN1YlZhbHVlKSB7XG4gICAgICByZXN1bHQuYWRkKGJhc2VDbG9uZShzdWJWYWx1ZSwgYml0bWFzaywgY3VzdG9taXplciwgc3ViVmFsdWUsIHZhbHVlLCBzdGFjaykpO1xuICAgIH0pO1xuXG4gICAgcmV0dXJuIHJlc3VsdDtcbiAgfVxuXG4gIGlmIChpc01hcCh2YWx1ZSkpIHtcbiAgICB2YWx1ZS5mb3JFYWNoKGZ1bmN0aW9uKHN1YlZhbHVlLCBrZXkpIHtcbiAgICAgIHJlc3VsdC5zZXQoa2V5LCBiYXNlQ2xvbmUoc3ViVmFsdWUsIGJpdG1hc2ssIGN1c3RvbWl6ZXIsIGtleSwgdmFsdWUsIHN0YWNrKSk7XG4gICAgfSk7XG5cbiAgICByZXR1cm4gcmVzdWx0O1xuICB9XG5cbiAgdmFyIGtleXNGdW5jID0gaXNGdWxsXG4gICAgPyAoaXNGbGF0ID8gZ2V0QWxsS2V5c0luIDogZ2V0QWxsS2V5cylcbiAgICA6IChpc0ZsYXQgPyBrZXlzSW4gOiBrZXlzKTtcblxuICB2YXIgcHJvcHMgPSBpc0FyciA/IHVuZGVmaW5lZCA6IGtleXNGdW5jKHZhbHVlKTtcbiAgYXJyYXlFYWNoKHByb3BzIHx8IHZhbHVlLCBmdW5jdGlvbihzdWJWYWx1ZSwga2V5KSB7XG4gICAgaWYgKHByb3BzKSB7XG4gICAgICBrZXkgPSBzdWJWYWx1ZTtcbiAgICAgIHN1YlZhbHVlID0gdmFsdWVba2V5XTtcbiAgICB9XG4gICAgLy8gUmVjdXJzaXZlbHkgcG9wdWxhdGUgY2xvbmUgKHN1c2NlcHRpYmxlIHRvIGNhbGwgc3RhY2sgbGltaXRzKS5cbiAgICBhc3NpZ25WYWx1ZShyZXN1bHQsIGtleSwgYmFzZUNsb25lKHN1YlZhbHVlLCBiaXRtYXNrLCBjdXN0b21pemVyLCBrZXksIHZhbHVlLCBzdGFjaykpO1xuICB9KTtcbiAgcmV0dXJuIHJlc3VsdDtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBiYXNlQ2xvbmU7XG5cblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL25vZGVfbW9kdWxlcy9sb2Rhc2gvX2Jhc2VDbG9uZS5qc1xuLy8gbW9kdWxlIGlkID0gLi9ub2RlX21vZHVsZXMvbG9kYXNoL19iYXNlQ2xvbmUuanNcbi8vIG1vZHVsZSBjaHVua3MgPSAxIiwidmFyIGlzT2JqZWN0ID0gcmVxdWlyZSgnLi9pc09iamVjdCcpO1xuXG4vKiogQnVpbHQtaW4gdmFsdWUgcmVmZXJlbmNlcy4gKi9cbnZhciBvYmplY3RDcmVhdGUgPSBPYmplY3QuY3JlYXRlO1xuXG4vKipcbiAqIFRoZSBiYXNlIGltcGxlbWVudGF0aW9uIG9mIGBfLmNyZWF0ZWAgd2l0aG91dCBzdXBwb3J0IGZvciBhc3NpZ25pbmdcbiAqIHByb3BlcnRpZXMgdG8gdGhlIGNyZWF0ZWQgb2JqZWN0LlxuICpcbiAqIEBwcml2YXRlXG4gKiBAcGFyYW0ge09iamVjdH0gcHJvdG8gVGhlIG9iamVjdCB0byBpbmhlcml0IGZyb20uXG4gKiBAcmV0dXJucyB7T2JqZWN0fSBSZXR1cm5zIHRoZSBuZXcgb2JqZWN0LlxuICovXG52YXIgYmFzZUNyZWF0ZSA9IChmdW5jdGlvbigpIHtcbiAgZnVuY3Rpb24gb2JqZWN0KCkge31cbiAgcmV0dXJuIGZ1bmN0aW9uKHByb3RvKSB7XG4gICAgaWYgKCFpc09iamVjdChwcm90bykpIHtcbiAgICAgIHJldHVybiB7fTtcbiAgICB9XG4gICAgaWYgKG9iamVjdENyZWF0ZSkge1xuICAgICAgcmV0dXJuIG9iamVjdENyZWF0ZShwcm90byk7XG4gICAgfVxuICAgIG9iamVjdC5wcm90b3R5cGUgPSBwcm90bztcbiAgICB2YXIgcmVzdWx0ID0gbmV3IG9iamVjdDtcbiAgICBvYmplY3QucHJvdG90eXBlID0gdW5kZWZpbmVkO1xuICAgIHJldHVybiByZXN1bHQ7XG4gIH07XG59KCkpO1xuXG5tb2R1bGUuZXhwb3J0cyA9IGJhc2VDcmVhdGU7XG5cblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL25vZGVfbW9kdWxlcy9sb2Rhc2gvX2Jhc2VDcmVhdGUuanNcbi8vIG1vZHVsZSBpZCA9IC4vbm9kZV9tb2R1bGVzL2xvZGFzaC9fYmFzZUNyZWF0ZS5qc1xuLy8gbW9kdWxlIGNodW5rcyA9IDEiLCJ2YXIgYmFzZUZvck93biA9IHJlcXVpcmUoJy4vX2Jhc2VGb3JPd24nKSxcbiAgICBjcmVhdGVCYXNlRWFjaCA9IHJlcXVpcmUoJy4vX2NyZWF0ZUJhc2VFYWNoJyk7XG5cbi8qKlxuICogVGhlIGJhc2UgaW1wbGVtZW50YXRpb24gb2YgYF8uZm9yRWFjaGAgd2l0aG91dCBzdXBwb3J0IGZvciBpdGVyYXRlZSBzaG9ydGhhbmRzLlxuICpcbiAqIEBwcml2YXRlXG4gKiBAcGFyYW0ge0FycmF5fE9iamVjdH0gY29sbGVjdGlvbiBUaGUgY29sbGVjdGlvbiB0byBpdGVyYXRlIG92ZXIuXG4gKiBAcGFyYW0ge0Z1bmN0aW9ufSBpdGVyYXRlZSBUaGUgZnVuY3Rpb24gaW52b2tlZCBwZXIgaXRlcmF0aW9uLlxuICogQHJldHVybnMge0FycmF5fE9iamVjdH0gUmV0dXJucyBgY29sbGVjdGlvbmAuXG4gKi9cbnZhciBiYXNlRWFjaCA9IGNyZWF0ZUJhc2VFYWNoKGJhc2VGb3JPd24pO1xuXG5tb2R1bGUuZXhwb3J0cyA9IGJhc2VFYWNoO1xuXG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9ub2RlX21vZHVsZXMvbG9kYXNoL19iYXNlRWFjaC5qc1xuLy8gbW9kdWxlIGlkID0gLi9ub2RlX21vZHVsZXMvbG9kYXNoL19iYXNlRWFjaC5qc1xuLy8gbW9kdWxlIGNodW5rcyA9IDEiLCJ2YXIgaXNTeW1ib2wgPSByZXF1aXJlKCcuL2lzU3ltYm9sJyk7XG5cbi8qKlxuICogVGhlIGJhc2UgaW1wbGVtZW50YXRpb24gb2YgbWV0aG9kcyBsaWtlIGBfLm1heGAgYW5kIGBfLm1pbmAgd2hpY2ggYWNjZXB0cyBhXG4gKiBgY29tcGFyYXRvcmAgdG8gZGV0ZXJtaW5lIHRoZSBleHRyZW11bSB2YWx1ZS5cbiAqXG4gKiBAcHJpdmF0ZVxuICogQHBhcmFtIHtBcnJheX0gYXJyYXkgVGhlIGFycmF5IHRvIGl0ZXJhdGUgb3Zlci5cbiAqIEBwYXJhbSB7RnVuY3Rpb259IGl0ZXJhdGVlIFRoZSBpdGVyYXRlZSBpbnZva2VkIHBlciBpdGVyYXRpb24uXG4gKiBAcGFyYW0ge0Z1bmN0aW9ufSBjb21wYXJhdG9yIFRoZSBjb21wYXJhdG9yIHVzZWQgdG8gY29tcGFyZSB2YWx1ZXMuXG4gKiBAcmV0dXJucyB7Kn0gUmV0dXJucyB0aGUgZXh0cmVtdW0gdmFsdWUuXG4gKi9cbmZ1bmN0aW9uIGJhc2VFeHRyZW11bShhcnJheSwgaXRlcmF0ZWUsIGNvbXBhcmF0b3IpIHtcbiAgdmFyIGluZGV4ID0gLTEsXG4gICAgICBsZW5ndGggPSBhcnJheS5sZW5ndGg7XG5cbiAgd2hpbGUgKCsraW5kZXggPCBsZW5ndGgpIHtcbiAgICB2YXIgdmFsdWUgPSBhcnJheVtpbmRleF0sXG4gICAgICAgIGN1cnJlbnQgPSBpdGVyYXRlZSh2YWx1ZSk7XG5cbiAgICBpZiAoY3VycmVudCAhPSBudWxsICYmIChjb21wdXRlZCA9PT0gdW5kZWZpbmVkXG4gICAgICAgICAgPyAoY3VycmVudCA9PT0gY3VycmVudCAmJiAhaXNTeW1ib2woY3VycmVudCkpXG4gICAgICAgICAgOiBjb21wYXJhdG9yKGN1cnJlbnQsIGNvbXB1dGVkKVxuICAgICAgICApKSB7XG4gICAgICB2YXIgY29tcHV0ZWQgPSBjdXJyZW50LFxuICAgICAgICAgIHJlc3VsdCA9IHZhbHVlO1xuICAgIH1cbiAgfVxuICByZXR1cm4gcmVzdWx0O1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGJhc2VFeHRyZW11bTtcblxuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vbm9kZV9tb2R1bGVzL2xvZGFzaC9fYmFzZUV4dHJlbXVtLmpzXG4vLyBtb2R1bGUgaWQgPSAuL25vZGVfbW9kdWxlcy9sb2Rhc2gvX2Jhc2VFeHRyZW11bS5qc1xuLy8gbW9kdWxlIGNodW5rcyA9IDEiLCIvKipcbiAqIFRoZSBiYXNlIGltcGxlbWVudGF0aW9uIG9mIGBfLmZpbmRJbmRleGAgYW5kIGBfLmZpbmRMYXN0SW5kZXhgIHdpdGhvdXRcbiAqIHN1cHBvcnQgZm9yIGl0ZXJhdGVlIHNob3J0aGFuZHMuXG4gKlxuICogQHByaXZhdGVcbiAqIEBwYXJhbSB7QXJyYXl9IGFycmF5IFRoZSBhcnJheSB0byBpbnNwZWN0LlxuICogQHBhcmFtIHtGdW5jdGlvbn0gcHJlZGljYXRlIFRoZSBmdW5jdGlvbiBpbnZva2VkIHBlciBpdGVyYXRpb24uXG4gKiBAcGFyYW0ge251bWJlcn0gZnJvbUluZGV4IFRoZSBpbmRleCB0byBzZWFyY2ggZnJvbS5cbiAqIEBwYXJhbSB7Ym9vbGVhbn0gW2Zyb21SaWdodF0gU3BlY2lmeSBpdGVyYXRpbmcgZnJvbSByaWdodCB0byBsZWZ0LlxuICogQHJldHVybnMge251bWJlcn0gUmV0dXJucyB0aGUgaW5kZXggb2YgdGhlIG1hdGNoZWQgdmFsdWUsIGVsc2UgYC0xYC5cbiAqL1xuZnVuY3Rpb24gYmFzZUZpbmRJbmRleChhcnJheSwgcHJlZGljYXRlLCBmcm9tSW5kZXgsIGZyb21SaWdodCkge1xuICB2YXIgbGVuZ3RoID0gYXJyYXkubGVuZ3RoLFxuICAgICAgaW5kZXggPSBmcm9tSW5kZXggKyAoZnJvbVJpZ2h0ID8gMSA6IC0xKTtcblxuICB3aGlsZSAoKGZyb21SaWdodCA/IGluZGV4LS0gOiArK2luZGV4IDwgbGVuZ3RoKSkge1xuICAgIGlmIChwcmVkaWNhdGUoYXJyYXlbaW5kZXhdLCBpbmRleCwgYXJyYXkpKSB7XG4gICAgICByZXR1cm4gaW5kZXg7XG4gICAgfVxuICB9XG4gIHJldHVybiAtMTtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBiYXNlRmluZEluZGV4O1xuXG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9ub2RlX21vZHVsZXMvbG9kYXNoL19iYXNlRmluZEluZGV4LmpzXG4vLyBtb2R1bGUgaWQgPSAuL25vZGVfbW9kdWxlcy9sb2Rhc2gvX2Jhc2VGaW5kSW5kZXguanNcbi8vIG1vZHVsZSBjaHVua3MgPSAxIiwidmFyIGFycmF5UHVzaCA9IHJlcXVpcmUoJy4vX2FycmF5UHVzaCcpLFxuICAgIGlzRmxhdHRlbmFibGUgPSByZXF1aXJlKCcuL19pc0ZsYXR0ZW5hYmxlJyk7XG5cbi8qKlxuICogVGhlIGJhc2UgaW1wbGVtZW50YXRpb24gb2YgYF8uZmxhdHRlbmAgd2l0aCBzdXBwb3J0IGZvciByZXN0cmljdGluZyBmbGF0dGVuaW5nLlxuICpcbiAqIEBwcml2YXRlXG4gKiBAcGFyYW0ge0FycmF5fSBhcnJheSBUaGUgYXJyYXkgdG8gZmxhdHRlbi5cbiAqIEBwYXJhbSB7bnVtYmVyfSBkZXB0aCBUaGUgbWF4aW11bSByZWN1cnNpb24gZGVwdGguXG4gKiBAcGFyYW0ge2Jvb2xlYW59IFtwcmVkaWNhdGU9aXNGbGF0dGVuYWJsZV0gVGhlIGZ1bmN0aW9uIGludm9rZWQgcGVyIGl0ZXJhdGlvbi5cbiAqIEBwYXJhbSB7Ym9vbGVhbn0gW2lzU3RyaWN0XSBSZXN0cmljdCB0byB2YWx1ZXMgdGhhdCBwYXNzIGBwcmVkaWNhdGVgIGNoZWNrcy5cbiAqIEBwYXJhbSB7QXJyYXl9IFtyZXN1bHQ9W11dIFRoZSBpbml0aWFsIHJlc3VsdCB2YWx1ZS5cbiAqIEByZXR1cm5zIHtBcnJheX0gUmV0dXJucyB0aGUgbmV3IGZsYXR0ZW5lZCBhcnJheS5cbiAqL1xuZnVuY3Rpb24gYmFzZUZsYXR0ZW4oYXJyYXksIGRlcHRoLCBwcmVkaWNhdGUsIGlzU3RyaWN0LCByZXN1bHQpIHtcbiAgdmFyIGluZGV4ID0gLTEsXG4gICAgICBsZW5ndGggPSBhcnJheS5sZW5ndGg7XG5cbiAgcHJlZGljYXRlIHx8IChwcmVkaWNhdGUgPSBpc0ZsYXR0ZW5hYmxlKTtcbiAgcmVzdWx0IHx8IChyZXN1bHQgPSBbXSk7XG5cbiAgd2hpbGUgKCsraW5kZXggPCBsZW5ndGgpIHtcbiAgICB2YXIgdmFsdWUgPSBhcnJheVtpbmRleF07XG4gICAgaWYgKGRlcHRoID4gMCAmJiBwcmVkaWNhdGUodmFsdWUpKSB7XG4gICAgICBpZiAoZGVwdGggPiAxKSB7XG4gICAgICAgIC8vIFJlY3Vyc2l2ZWx5IGZsYXR0ZW4gYXJyYXlzIChzdXNjZXB0aWJsZSB0byBjYWxsIHN0YWNrIGxpbWl0cykuXG4gICAgICAgIGJhc2VGbGF0dGVuKHZhbHVlLCBkZXB0aCAtIDEsIHByZWRpY2F0ZSwgaXNTdHJpY3QsIHJlc3VsdCk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBhcnJheVB1c2gocmVzdWx0LCB2YWx1ZSk7XG4gICAgICB9XG4gICAgfSBlbHNlIGlmICghaXNTdHJpY3QpIHtcbiAgICAgIHJlc3VsdFtyZXN1bHQubGVuZ3RoXSA9IHZhbHVlO1xuICAgIH1cbiAgfVxuICByZXR1cm4gcmVzdWx0O1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGJhc2VGbGF0dGVuO1xuXG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9ub2RlX21vZHVsZXMvbG9kYXNoL19iYXNlRmxhdHRlbi5qc1xuLy8gbW9kdWxlIGlkID0gLi9ub2RlX21vZHVsZXMvbG9kYXNoL19iYXNlRmxhdHRlbi5qc1xuLy8gbW9kdWxlIGNodW5rcyA9IDEiLCJ2YXIgY3JlYXRlQmFzZUZvciA9IHJlcXVpcmUoJy4vX2NyZWF0ZUJhc2VGb3InKTtcblxuLyoqXG4gKiBUaGUgYmFzZSBpbXBsZW1lbnRhdGlvbiBvZiBgYmFzZUZvck93bmAgd2hpY2ggaXRlcmF0ZXMgb3ZlciBgb2JqZWN0YFxuICogcHJvcGVydGllcyByZXR1cm5lZCBieSBga2V5c0Z1bmNgIGFuZCBpbnZva2VzIGBpdGVyYXRlZWAgZm9yIGVhY2ggcHJvcGVydHkuXG4gKiBJdGVyYXRlZSBmdW5jdGlvbnMgbWF5IGV4aXQgaXRlcmF0aW9uIGVhcmx5IGJ5IGV4cGxpY2l0bHkgcmV0dXJuaW5nIGBmYWxzZWAuXG4gKlxuICogQHByaXZhdGVcbiAqIEBwYXJhbSB7T2JqZWN0fSBvYmplY3QgVGhlIG9iamVjdCB0byBpdGVyYXRlIG92ZXIuXG4gKiBAcGFyYW0ge0Z1bmN0aW9ufSBpdGVyYXRlZSBUaGUgZnVuY3Rpb24gaW52b2tlZCBwZXIgaXRlcmF0aW9uLlxuICogQHBhcmFtIHtGdW5jdGlvbn0ga2V5c0Z1bmMgVGhlIGZ1bmN0aW9uIHRvIGdldCB0aGUga2V5cyBvZiBgb2JqZWN0YC5cbiAqIEByZXR1cm5zIHtPYmplY3R9IFJldHVybnMgYG9iamVjdGAuXG4gKi9cbnZhciBiYXNlRm9yID0gY3JlYXRlQmFzZUZvcigpO1xuXG5tb2R1bGUuZXhwb3J0cyA9IGJhc2VGb3I7XG5cblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL25vZGVfbW9kdWxlcy9sb2Rhc2gvX2Jhc2VGb3IuanNcbi8vIG1vZHVsZSBpZCA9IC4vbm9kZV9tb2R1bGVzL2xvZGFzaC9fYmFzZUZvci5qc1xuLy8gbW9kdWxlIGNodW5rcyA9IDEiLCJ2YXIgYmFzZUZvciA9IHJlcXVpcmUoJy4vX2Jhc2VGb3InKSxcbiAgICBrZXlzID0gcmVxdWlyZSgnLi9rZXlzJyk7XG5cbi8qKlxuICogVGhlIGJhc2UgaW1wbGVtZW50YXRpb24gb2YgYF8uZm9yT3duYCB3aXRob3V0IHN1cHBvcnQgZm9yIGl0ZXJhdGVlIHNob3J0aGFuZHMuXG4gKlxuICogQHByaXZhdGVcbiAqIEBwYXJhbSB7T2JqZWN0fSBvYmplY3QgVGhlIG9iamVjdCB0byBpdGVyYXRlIG92ZXIuXG4gKiBAcGFyYW0ge0Z1bmN0aW9ufSBpdGVyYXRlZSBUaGUgZnVuY3Rpb24gaW52b2tlZCBwZXIgaXRlcmF0aW9uLlxuICogQHJldHVybnMge09iamVjdH0gUmV0dXJucyBgb2JqZWN0YC5cbiAqL1xuZnVuY3Rpb24gYmFzZUZvck93bihvYmplY3QsIGl0ZXJhdGVlKSB7XG4gIHJldHVybiBvYmplY3QgJiYgYmFzZUZvcihvYmplY3QsIGl0ZXJhdGVlLCBrZXlzKTtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBiYXNlRm9yT3duO1xuXG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9ub2RlX21vZHVsZXMvbG9kYXNoL19iYXNlRm9yT3duLmpzXG4vLyBtb2R1bGUgaWQgPSAuL25vZGVfbW9kdWxlcy9sb2Rhc2gvX2Jhc2VGb3JPd24uanNcbi8vIG1vZHVsZSBjaHVua3MgPSAxIiwidmFyIGNhc3RQYXRoID0gcmVxdWlyZSgnLi9fY2FzdFBhdGgnKSxcbiAgICB0b0tleSA9IHJlcXVpcmUoJy4vX3RvS2V5Jyk7XG5cbi8qKlxuICogVGhlIGJhc2UgaW1wbGVtZW50YXRpb24gb2YgYF8uZ2V0YCB3aXRob3V0IHN1cHBvcnQgZm9yIGRlZmF1bHQgdmFsdWVzLlxuICpcbiAqIEBwcml2YXRlXG4gKiBAcGFyYW0ge09iamVjdH0gb2JqZWN0IFRoZSBvYmplY3QgdG8gcXVlcnkuXG4gKiBAcGFyYW0ge0FycmF5fHN0cmluZ30gcGF0aCBUaGUgcGF0aCBvZiB0aGUgcHJvcGVydHkgdG8gZ2V0LlxuICogQHJldHVybnMgeyp9IFJldHVybnMgdGhlIHJlc29sdmVkIHZhbHVlLlxuICovXG5mdW5jdGlvbiBiYXNlR2V0KG9iamVjdCwgcGF0aCkge1xuICBwYXRoID0gY2FzdFBhdGgocGF0aCwgb2JqZWN0KTtcblxuICB2YXIgaW5kZXggPSAwLFxuICAgICAgbGVuZ3RoID0gcGF0aC5sZW5ndGg7XG5cbiAgd2hpbGUgKG9iamVjdCAhPSBudWxsICYmIGluZGV4IDwgbGVuZ3RoKSB7XG4gICAgb2JqZWN0ID0gb2JqZWN0W3RvS2V5KHBhdGhbaW5kZXgrK10pXTtcbiAgfVxuICByZXR1cm4gKGluZGV4ICYmIGluZGV4ID09IGxlbmd0aCkgPyBvYmplY3QgOiB1bmRlZmluZWQ7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gYmFzZUdldDtcblxuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vbm9kZV9tb2R1bGVzL2xvZGFzaC9fYmFzZUdldC5qc1xuLy8gbW9kdWxlIGlkID0gLi9ub2RlX21vZHVsZXMvbG9kYXNoL19iYXNlR2V0LmpzXG4vLyBtb2R1bGUgY2h1bmtzID0gMSIsInZhciBhcnJheVB1c2ggPSByZXF1aXJlKCcuL19hcnJheVB1c2gnKSxcbiAgICBpc0FycmF5ID0gcmVxdWlyZSgnLi9pc0FycmF5Jyk7XG5cbi8qKlxuICogVGhlIGJhc2UgaW1wbGVtZW50YXRpb24gb2YgYGdldEFsbEtleXNgIGFuZCBgZ2V0QWxsS2V5c0luYCB3aGljaCB1c2VzXG4gKiBga2V5c0Z1bmNgIGFuZCBgc3ltYm9sc0Z1bmNgIHRvIGdldCB0aGUgZW51bWVyYWJsZSBwcm9wZXJ0eSBuYW1lcyBhbmRcbiAqIHN5bWJvbHMgb2YgYG9iamVjdGAuXG4gKlxuICogQHByaXZhdGVcbiAqIEBwYXJhbSB7T2JqZWN0fSBvYmplY3QgVGhlIG9iamVjdCB0byBxdWVyeS5cbiAqIEBwYXJhbSB7RnVuY3Rpb259IGtleXNGdW5jIFRoZSBmdW5jdGlvbiB0byBnZXQgdGhlIGtleXMgb2YgYG9iamVjdGAuXG4gKiBAcGFyYW0ge0Z1bmN0aW9ufSBzeW1ib2xzRnVuYyBUaGUgZnVuY3Rpb24gdG8gZ2V0IHRoZSBzeW1ib2xzIG9mIGBvYmplY3RgLlxuICogQHJldHVybnMge0FycmF5fSBSZXR1cm5zIHRoZSBhcnJheSBvZiBwcm9wZXJ0eSBuYW1lcyBhbmQgc3ltYm9scy5cbiAqL1xuZnVuY3Rpb24gYmFzZUdldEFsbEtleXMob2JqZWN0LCBrZXlzRnVuYywgc3ltYm9sc0Z1bmMpIHtcbiAgdmFyIHJlc3VsdCA9IGtleXNGdW5jKG9iamVjdCk7XG4gIHJldHVybiBpc0FycmF5KG9iamVjdCkgPyByZXN1bHQgOiBhcnJheVB1c2gocmVzdWx0LCBzeW1ib2xzRnVuYyhvYmplY3QpKTtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBiYXNlR2V0QWxsS2V5cztcblxuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vbm9kZV9tb2R1bGVzL2xvZGFzaC9fYmFzZUdldEFsbEtleXMuanNcbi8vIG1vZHVsZSBpZCA9IC4vbm9kZV9tb2R1bGVzL2xvZGFzaC9fYmFzZUdldEFsbEtleXMuanNcbi8vIG1vZHVsZSBjaHVua3MgPSAxIiwidmFyIFN5bWJvbCA9IHJlcXVpcmUoJy4vX1N5bWJvbCcpLFxuICAgIGdldFJhd1RhZyA9IHJlcXVpcmUoJy4vX2dldFJhd1RhZycpLFxuICAgIG9iamVjdFRvU3RyaW5nID0gcmVxdWlyZSgnLi9fb2JqZWN0VG9TdHJpbmcnKTtcblxuLyoqIGBPYmplY3QjdG9TdHJpbmdgIHJlc3VsdCByZWZlcmVuY2VzLiAqL1xudmFyIG51bGxUYWcgPSAnW29iamVjdCBOdWxsXScsXG4gICAgdW5kZWZpbmVkVGFnID0gJ1tvYmplY3QgVW5kZWZpbmVkXSc7XG5cbi8qKiBCdWlsdC1pbiB2YWx1ZSByZWZlcmVuY2VzLiAqL1xudmFyIHN5bVRvU3RyaW5nVGFnID0gU3ltYm9sID8gU3ltYm9sLnRvU3RyaW5nVGFnIDogdW5kZWZpbmVkO1xuXG4vKipcbiAqIFRoZSBiYXNlIGltcGxlbWVudGF0aW9uIG9mIGBnZXRUYWdgIHdpdGhvdXQgZmFsbGJhY2tzIGZvciBidWdneSBlbnZpcm9ubWVudHMuXG4gKlxuICogQHByaXZhdGVcbiAqIEBwYXJhbSB7Kn0gdmFsdWUgVGhlIHZhbHVlIHRvIHF1ZXJ5LlxuICogQHJldHVybnMge3N0cmluZ30gUmV0dXJucyB0aGUgYHRvU3RyaW5nVGFnYC5cbiAqL1xuZnVuY3Rpb24gYmFzZUdldFRhZyh2YWx1ZSkge1xuICBpZiAodmFsdWUgPT0gbnVsbCkge1xuICAgIHJldHVybiB2YWx1ZSA9PT0gdW5kZWZpbmVkID8gdW5kZWZpbmVkVGFnIDogbnVsbFRhZztcbiAgfVxuICByZXR1cm4gKHN5bVRvU3RyaW5nVGFnICYmIHN5bVRvU3RyaW5nVGFnIGluIE9iamVjdCh2YWx1ZSkpXG4gICAgPyBnZXRSYXdUYWcodmFsdWUpXG4gICAgOiBvYmplY3RUb1N0cmluZyh2YWx1ZSk7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gYmFzZUdldFRhZztcblxuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vbm9kZV9tb2R1bGVzL2xvZGFzaC9fYmFzZUdldFRhZy5qc1xuLy8gbW9kdWxlIGlkID0gLi9ub2RlX21vZHVsZXMvbG9kYXNoL19iYXNlR2V0VGFnLmpzXG4vLyBtb2R1bGUgY2h1bmtzID0gMSIsIi8qKlxuICogVGhlIGJhc2UgaW1wbGVtZW50YXRpb24gb2YgYF8uZ3RgIHdoaWNoIGRvZXNuJ3QgY29lcmNlIGFyZ3VtZW50cy5cbiAqXG4gKiBAcHJpdmF0ZVxuICogQHBhcmFtIHsqfSB2YWx1ZSBUaGUgdmFsdWUgdG8gY29tcGFyZS5cbiAqIEBwYXJhbSB7Kn0gb3RoZXIgVGhlIG90aGVyIHZhbHVlIHRvIGNvbXBhcmUuXG4gKiBAcmV0dXJucyB7Ym9vbGVhbn0gUmV0dXJucyBgdHJ1ZWAgaWYgYHZhbHVlYCBpcyBncmVhdGVyIHRoYW4gYG90aGVyYCxcbiAqICBlbHNlIGBmYWxzZWAuXG4gKi9cbmZ1bmN0aW9uIGJhc2VHdCh2YWx1ZSwgb3RoZXIpIHtcbiAgcmV0dXJuIHZhbHVlID4gb3RoZXI7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gYmFzZUd0O1xuXG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9ub2RlX21vZHVsZXMvbG9kYXNoL19iYXNlR3QuanNcbi8vIG1vZHVsZSBpZCA9IC4vbm9kZV9tb2R1bGVzL2xvZGFzaC9fYmFzZUd0LmpzXG4vLyBtb2R1bGUgY2h1bmtzID0gMSIsIi8qKlxuICogVGhlIGJhc2UgaW1wbGVtZW50YXRpb24gb2YgYF8uaGFzSW5gIHdpdGhvdXQgc3VwcG9ydCBmb3IgZGVlcCBwYXRocy5cbiAqXG4gKiBAcHJpdmF0ZVxuICogQHBhcmFtIHtPYmplY3R9IFtvYmplY3RdIFRoZSBvYmplY3QgdG8gcXVlcnkuXG4gKiBAcGFyYW0ge0FycmF5fHN0cmluZ30ga2V5IFRoZSBrZXkgdG8gY2hlY2suXG4gKiBAcmV0dXJucyB7Ym9vbGVhbn0gUmV0dXJucyBgdHJ1ZWAgaWYgYGtleWAgZXhpc3RzLCBlbHNlIGBmYWxzZWAuXG4gKi9cbmZ1bmN0aW9uIGJhc2VIYXNJbihvYmplY3QsIGtleSkge1xuICByZXR1cm4gb2JqZWN0ICE9IG51bGwgJiYga2V5IGluIE9iamVjdChvYmplY3QpO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGJhc2VIYXNJbjtcblxuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vbm9kZV9tb2R1bGVzL2xvZGFzaC9fYmFzZUhhc0luLmpzXG4vLyBtb2R1bGUgaWQgPSAuL25vZGVfbW9kdWxlcy9sb2Rhc2gvX2Jhc2VIYXNJbi5qc1xuLy8gbW9kdWxlIGNodW5rcyA9IDEiLCJ2YXIgYmFzZUZpbmRJbmRleCA9IHJlcXVpcmUoJy4vX2Jhc2VGaW5kSW5kZXgnKSxcbiAgICBiYXNlSXNOYU4gPSByZXF1aXJlKCcuL19iYXNlSXNOYU4nKSxcbiAgICBzdHJpY3RJbmRleE9mID0gcmVxdWlyZSgnLi9fc3RyaWN0SW5kZXhPZicpO1xuXG4vKipcbiAqIFRoZSBiYXNlIGltcGxlbWVudGF0aW9uIG9mIGBfLmluZGV4T2ZgIHdpdGhvdXQgYGZyb21JbmRleGAgYm91bmRzIGNoZWNrcy5cbiAqXG4gKiBAcHJpdmF0ZVxuICogQHBhcmFtIHtBcnJheX0gYXJyYXkgVGhlIGFycmF5IHRvIGluc3BlY3QuXG4gKiBAcGFyYW0geyp9IHZhbHVlIFRoZSB2YWx1ZSB0byBzZWFyY2ggZm9yLlxuICogQHBhcmFtIHtudW1iZXJ9IGZyb21JbmRleCBUaGUgaW5kZXggdG8gc2VhcmNoIGZyb20uXG4gKiBAcmV0dXJucyB7bnVtYmVyfSBSZXR1cm5zIHRoZSBpbmRleCBvZiB0aGUgbWF0Y2hlZCB2YWx1ZSwgZWxzZSBgLTFgLlxuICovXG5mdW5jdGlvbiBiYXNlSW5kZXhPZihhcnJheSwgdmFsdWUsIGZyb21JbmRleCkge1xuICByZXR1cm4gdmFsdWUgPT09IHZhbHVlXG4gICAgPyBzdHJpY3RJbmRleE9mKGFycmF5LCB2YWx1ZSwgZnJvbUluZGV4KVxuICAgIDogYmFzZUZpbmRJbmRleChhcnJheSwgYmFzZUlzTmFOLCBmcm9tSW5kZXgpO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGJhc2VJbmRleE9mO1xuXG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9ub2RlX21vZHVsZXMvbG9kYXNoL19iYXNlSW5kZXhPZi5qc1xuLy8gbW9kdWxlIGlkID0gLi9ub2RlX21vZHVsZXMvbG9kYXNoL19iYXNlSW5kZXhPZi5qc1xuLy8gbW9kdWxlIGNodW5rcyA9IDEiLCJ2YXIgYmFzZUdldFRhZyA9IHJlcXVpcmUoJy4vX2Jhc2VHZXRUYWcnKSxcbiAgICBpc09iamVjdExpa2UgPSByZXF1aXJlKCcuL2lzT2JqZWN0TGlrZScpO1xuXG4vKiogYE9iamVjdCN0b1N0cmluZ2AgcmVzdWx0IHJlZmVyZW5jZXMuICovXG52YXIgYXJnc1RhZyA9ICdbb2JqZWN0IEFyZ3VtZW50c10nO1xuXG4vKipcbiAqIFRoZSBiYXNlIGltcGxlbWVudGF0aW9uIG9mIGBfLmlzQXJndW1lbnRzYC5cbiAqXG4gKiBAcHJpdmF0ZVxuICogQHBhcmFtIHsqfSB2YWx1ZSBUaGUgdmFsdWUgdG8gY2hlY2suXG4gKiBAcmV0dXJucyB7Ym9vbGVhbn0gUmV0dXJucyBgdHJ1ZWAgaWYgYHZhbHVlYCBpcyBhbiBgYXJndW1lbnRzYCBvYmplY3QsXG4gKi9cbmZ1bmN0aW9uIGJhc2VJc0FyZ3VtZW50cyh2YWx1ZSkge1xuICByZXR1cm4gaXNPYmplY3RMaWtlKHZhbHVlKSAmJiBiYXNlR2V0VGFnKHZhbHVlKSA9PSBhcmdzVGFnO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGJhc2VJc0FyZ3VtZW50cztcblxuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vbm9kZV9tb2R1bGVzL2xvZGFzaC9fYmFzZUlzQXJndW1lbnRzLmpzXG4vLyBtb2R1bGUgaWQgPSAuL25vZGVfbW9kdWxlcy9sb2Rhc2gvX2Jhc2VJc0FyZ3VtZW50cy5qc1xuLy8gbW9kdWxlIGNodW5rcyA9IDEiLCJ2YXIgYmFzZUlzRXF1YWxEZWVwID0gcmVxdWlyZSgnLi9fYmFzZUlzRXF1YWxEZWVwJyksXG4gICAgaXNPYmplY3RMaWtlID0gcmVxdWlyZSgnLi9pc09iamVjdExpa2UnKTtcblxuLyoqXG4gKiBUaGUgYmFzZSBpbXBsZW1lbnRhdGlvbiBvZiBgXy5pc0VxdWFsYCB3aGljaCBzdXBwb3J0cyBwYXJ0aWFsIGNvbXBhcmlzb25zXG4gKiBhbmQgdHJhY2tzIHRyYXZlcnNlZCBvYmplY3RzLlxuICpcbiAqIEBwcml2YXRlXG4gKiBAcGFyYW0geyp9IHZhbHVlIFRoZSB2YWx1ZSB0byBjb21wYXJlLlxuICogQHBhcmFtIHsqfSBvdGhlciBUaGUgb3RoZXIgdmFsdWUgdG8gY29tcGFyZS5cbiAqIEBwYXJhbSB7Ym9vbGVhbn0gYml0bWFzayBUaGUgYml0bWFzayBmbGFncy5cbiAqICAxIC0gVW5vcmRlcmVkIGNvbXBhcmlzb25cbiAqICAyIC0gUGFydGlhbCBjb21wYXJpc29uXG4gKiBAcGFyYW0ge0Z1bmN0aW9ufSBbY3VzdG9taXplcl0gVGhlIGZ1bmN0aW9uIHRvIGN1c3RvbWl6ZSBjb21wYXJpc29ucy5cbiAqIEBwYXJhbSB7T2JqZWN0fSBbc3RhY2tdIFRyYWNrcyB0cmF2ZXJzZWQgYHZhbHVlYCBhbmQgYG90aGVyYCBvYmplY3RzLlxuICogQHJldHVybnMge2Jvb2xlYW59IFJldHVybnMgYHRydWVgIGlmIHRoZSB2YWx1ZXMgYXJlIGVxdWl2YWxlbnQsIGVsc2UgYGZhbHNlYC5cbiAqL1xuZnVuY3Rpb24gYmFzZUlzRXF1YWwodmFsdWUsIG90aGVyLCBiaXRtYXNrLCBjdXN0b21pemVyLCBzdGFjaykge1xuICBpZiAodmFsdWUgPT09IG90aGVyKSB7XG4gICAgcmV0dXJuIHRydWU7XG4gIH1cbiAgaWYgKHZhbHVlID09IG51bGwgfHwgb3RoZXIgPT0gbnVsbCB8fCAoIWlzT2JqZWN0TGlrZSh2YWx1ZSkgJiYgIWlzT2JqZWN0TGlrZShvdGhlcikpKSB7XG4gICAgcmV0dXJuIHZhbHVlICE9PSB2YWx1ZSAmJiBvdGhlciAhPT0gb3RoZXI7XG4gIH1cbiAgcmV0dXJuIGJhc2VJc0VxdWFsRGVlcCh2YWx1ZSwgb3RoZXIsIGJpdG1hc2ssIGN1c3RvbWl6ZXIsIGJhc2VJc0VxdWFsLCBzdGFjayk7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gYmFzZUlzRXF1YWw7XG5cblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL25vZGVfbW9kdWxlcy9sb2Rhc2gvX2Jhc2VJc0VxdWFsLmpzXG4vLyBtb2R1bGUgaWQgPSAuL25vZGVfbW9kdWxlcy9sb2Rhc2gvX2Jhc2VJc0VxdWFsLmpzXG4vLyBtb2R1bGUgY2h1bmtzID0gMSIsInZhciBTdGFjayA9IHJlcXVpcmUoJy4vX1N0YWNrJyksXG4gICAgZXF1YWxBcnJheXMgPSByZXF1aXJlKCcuL19lcXVhbEFycmF5cycpLFxuICAgIGVxdWFsQnlUYWcgPSByZXF1aXJlKCcuL19lcXVhbEJ5VGFnJyksXG4gICAgZXF1YWxPYmplY3RzID0gcmVxdWlyZSgnLi9fZXF1YWxPYmplY3RzJyksXG4gICAgZ2V0VGFnID0gcmVxdWlyZSgnLi9fZ2V0VGFnJyksXG4gICAgaXNBcnJheSA9IHJlcXVpcmUoJy4vaXNBcnJheScpLFxuICAgIGlzQnVmZmVyID0gcmVxdWlyZSgnLi9pc0J1ZmZlcicpLFxuICAgIGlzVHlwZWRBcnJheSA9IHJlcXVpcmUoJy4vaXNUeXBlZEFycmF5Jyk7XG5cbi8qKiBVc2VkIHRvIGNvbXBvc2UgYml0bWFza3MgZm9yIHZhbHVlIGNvbXBhcmlzb25zLiAqL1xudmFyIENPTVBBUkVfUEFSVElBTF9GTEFHID0gMTtcblxuLyoqIGBPYmplY3QjdG9TdHJpbmdgIHJlc3VsdCByZWZlcmVuY2VzLiAqL1xudmFyIGFyZ3NUYWcgPSAnW29iamVjdCBBcmd1bWVudHNdJyxcbiAgICBhcnJheVRhZyA9ICdbb2JqZWN0IEFycmF5XScsXG4gICAgb2JqZWN0VGFnID0gJ1tvYmplY3QgT2JqZWN0XSc7XG5cbi8qKiBVc2VkIGZvciBidWlsdC1pbiBtZXRob2QgcmVmZXJlbmNlcy4gKi9cbnZhciBvYmplY3RQcm90byA9IE9iamVjdC5wcm90b3R5cGU7XG5cbi8qKiBVc2VkIHRvIGNoZWNrIG9iamVjdHMgZm9yIG93biBwcm9wZXJ0aWVzLiAqL1xudmFyIGhhc093blByb3BlcnR5ID0gb2JqZWN0UHJvdG8uaGFzT3duUHJvcGVydHk7XG5cbi8qKlxuICogQSBzcGVjaWFsaXplZCB2ZXJzaW9uIG9mIGBiYXNlSXNFcXVhbGAgZm9yIGFycmF5cyBhbmQgb2JqZWN0cyB3aGljaCBwZXJmb3Jtc1xuICogZGVlcCBjb21wYXJpc29ucyBhbmQgdHJhY2tzIHRyYXZlcnNlZCBvYmplY3RzIGVuYWJsaW5nIG9iamVjdHMgd2l0aCBjaXJjdWxhclxuICogcmVmZXJlbmNlcyB0byBiZSBjb21wYXJlZC5cbiAqXG4gKiBAcHJpdmF0ZVxuICogQHBhcmFtIHtPYmplY3R9IG9iamVjdCBUaGUgb2JqZWN0IHRvIGNvbXBhcmUuXG4gKiBAcGFyYW0ge09iamVjdH0gb3RoZXIgVGhlIG90aGVyIG9iamVjdCB0byBjb21wYXJlLlxuICogQHBhcmFtIHtudW1iZXJ9IGJpdG1hc2sgVGhlIGJpdG1hc2sgZmxhZ3MuIFNlZSBgYmFzZUlzRXF1YWxgIGZvciBtb3JlIGRldGFpbHMuXG4gKiBAcGFyYW0ge0Z1bmN0aW9ufSBjdXN0b21pemVyIFRoZSBmdW5jdGlvbiB0byBjdXN0b21pemUgY29tcGFyaXNvbnMuXG4gKiBAcGFyYW0ge0Z1bmN0aW9ufSBlcXVhbEZ1bmMgVGhlIGZ1bmN0aW9uIHRvIGRldGVybWluZSBlcXVpdmFsZW50cyBvZiB2YWx1ZXMuXG4gKiBAcGFyYW0ge09iamVjdH0gW3N0YWNrXSBUcmFja3MgdHJhdmVyc2VkIGBvYmplY3RgIGFuZCBgb3RoZXJgIG9iamVjdHMuXG4gKiBAcmV0dXJucyB7Ym9vbGVhbn0gUmV0dXJucyBgdHJ1ZWAgaWYgdGhlIG9iamVjdHMgYXJlIGVxdWl2YWxlbnQsIGVsc2UgYGZhbHNlYC5cbiAqL1xuZnVuY3Rpb24gYmFzZUlzRXF1YWxEZWVwKG9iamVjdCwgb3RoZXIsIGJpdG1hc2ssIGN1c3RvbWl6ZXIsIGVxdWFsRnVuYywgc3RhY2spIHtcbiAgdmFyIG9iaklzQXJyID0gaXNBcnJheShvYmplY3QpLFxuICAgICAgb3RoSXNBcnIgPSBpc0FycmF5KG90aGVyKSxcbiAgICAgIG9ialRhZyA9IG9iaklzQXJyID8gYXJyYXlUYWcgOiBnZXRUYWcob2JqZWN0KSxcbiAgICAgIG90aFRhZyA9IG90aElzQXJyID8gYXJyYXlUYWcgOiBnZXRUYWcob3RoZXIpO1xuXG4gIG9ialRhZyA9IG9ialRhZyA9PSBhcmdzVGFnID8gb2JqZWN0VGFnIDogb2JqVGFnO1xuICBvdGhUYWcgPSBvdGhUYWcgPT0gYXJnc1RhZyA/IG9iamVjdFRhZyA6IG90aFRhZztcblxuICB2YXIgb2JqSXNPYmogPSBvYmpUYWcgPT0gb2JqZWN0VGFnLFxuICAgICAgb3RoSXNPYmogPSBvdGhUYWcgPT0gb2JqZWN0VGFnLFxuICAgICAgaXNTYW1lVGFnID0gb2JqVGFnID09IG90aFRhZztcblxuICBpZiAoaXNTYW1lVGFnICYmIGlzQnVmZmVyKG9iamVjdCkpIHtcbiAgICBpZiAoIWlzQnVmZmVyKG90aGVyKSkge1xuICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH1cbiAgICBvYmpJc0FyciA9IHRydWU7XG4gICAgb2JqSXNPYmogPSBmYWxzZTtcbiAgfVxuICBpZiAoaXNTYW1lVGFnICYmICFvYmpJc09iaikge1xuICAgIHN0YWNrIHx8IChzdGFjayA9IG5ldyBTdGFjayk7XG4gICAgcmV0dXJuIChvYmpJc0FyciB8fCBpc1R5cGVkQXJyYXkob2JqZWN0KSlcbiAgICAgID8gZXF1YWxBcnJheXMob2JqZWN0LCBvdGhlciwgYml0bWFzaywgY3VzdG9taXplciwgZXF1YWxGdW5jLCBzdGFjaylcbiAgICAgIDogZXF1YWxCeVRhZyhvYmplY3QsIG90aGVyLCBvYmpUYWcsIGJpdG1hc2ssIGN1c3RvbWl6ZXIsIGVxdWFsRnVuYywgc3RhY2spO1xuICB9XG4gIGlmICghKGJpdG1hc2sgJiBDT01QQVJFX1BBUlRJQUxfRkxBRykpIHtcbiAgICB2YXIgb2JqSXNXcmFwcGVkID0gb2JqSXNPYmogJiYgaGFzT3duUHJvcGVydHkuY2FsbChvYmplY3QsICdfX3dyYXBwZWRfXycpLFxuICAgICAgICBvdGhJc1dyYXBwZWQgPSBvdGhJc09iaiAmJiBoYXNPd25Qcm9wZXJ0eS5jYWxsKG90aGVyLCAnX193cmFwcGVkX18nKTtcblxuICAgIGlmIChvYmpJc1dyYXBwZWQgfHwgb3RoSXNXcmFwcGVkKSB7XG4gICAgICB2YXIgb2JqVW53cmFwcGVkID0gb2JqSXNXcmFwcGVkID8gb2JqZWN0LnZhbHVlKCkgOiBvYmplY3QsXG4gICAgICAgICAgb3RoVW53cmFwcGVkID0gb3RoSXNXcmFwcGVkID8gb3RoZXIudmFsdWUoKSA6IG90aGVyO1xuXG4gICAgICBzdGFjayB8fCAoc3RhY2sgPSBuZXcgU3RhY2spO1xuICAgICAgcmV0dXJuIGVxdWFsRnVuYyhvYmpVbndyYXBwZWQsIG90aFVud3JhcHBlZCwgYml0bWFzaywgY3VzdG9taXplciwgc3RhY2spO1xuICAgIH1cbiAgfVxuICBpZiAoIWlzU2FtZVRhZykge1xuICAgIHJldHVybiBmYWxzZTtcbiAgfVxuICBzdGFjayB8fCAoc3RhY2sgPSBuZXcgU3RhY2spO1xuICByZXR1cm4gZXF1YWxPYmplY3RzKG9iamVjdCwgb3RoZXIsIGJpdG1hc2ssIGN1c3RvbWl6ZXIsIGVxdWFsRnVuYywgc3RhY2spO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGJhc2VJc0VxdWFsRGVlcDtcblxuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vbm9kZV9tb2R1bGVzL2xvZGFzaC9fYmFzZUlzRXF1YWxEZWVwLmpzXG4vLyBtb2R1bGUgaWQgPSAuL25vZGVfbW9kdWxlcy9sb2Rhc2gvX2Jhc2VJc0VxdWFsRGVlcC5qc1xuLy8gbW9kdWxlIGNodW5rcyA9IDEiLCJ2YXIgZ2V0VGFnID0gcmVxdWlyZSgnLi9fZ2V0VGFnJyksXG4gICAgaXNPYmplY3RMaWtlID0gcmVxdWlyZSgnLi9pc09iamVjdExpa2UnKTtcblxuLyoqIGBPYmplY3QjdG9TdHJpbmdgIHJlc3VsdCByZWZlcmVuY2VzLiAqL1xudmFyIG1hcFRhZyA9ICdbb2JqZWN0IE1hcF0nO1xuXG4vKipcbiAqIFRoZSBiYXNlIGltcGxlbWVudGF0aW9uIG9mIGBfLmlzTWFwYCB3aXRob3V0IE5vZGUuanMgb3B0aW1pemF0aW9ucy5cbiAqXG4gKiBAcHJpdmF0ZVxuICogQHBhcmFtIHsqfSB2YWx1ZSBUaGUgdmFsdWUgdG8gY2hlY2suXG4gKiBAcmV0dXJucyB7Ym9vbGVhbn0gUmV0dXJucyBgdHJ1ZWAgaWYgYHZhbHVlYCBpcyBhIG1hcCwgZWxzZSBgZmFsc2VgLlxuICovXG5mdW5jdGlvbiBiYXNlSXNNYXAodmFsdWUpIHtcbiAgcmV0dXJuIGlzT2JqZWN0TGlrZSh2YWx1ZSkgJiYgZ2V0VGFnKHZhbHVlKSA9PSBtYXBUYWc7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gYmFzZUlzTWFwO1xuXG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9ub2RlX21vZHVsZXMvbG9kYXNoL19iYXNlSXNNYXAuanNcbi8vIG1vZHVsZSBpZCA9IC4vbm9kZV9tb2R1bGVzL2xvZGFzaC9fYmFzZUlzTWFwLmpzXG4vLyBtb2R1bGUgY2h1bmtzID0gMSIsInZhciBTdGFjayA9IHJlcXVpcmUoJy4vX1N0YWNrJyksXG4gICAgYmFzZUlzRXF1YWwgPSByZXF1aXJlKCcuL19iYXNlSXNFcXVhbCcpO1xuXG4vKiogVXNlZCB0byBjb21wb3NlIGJpdG1hc2tzIGZvciB2YWx1ZSBjb21wYXJpc29ucy4gKi9cbnZhciBDT01QQVJFX1BBUlRJQUxfRkxBRyA9IDEsXG4gICAgQ09NUEFSRV9VTk9SREVSRURfRkxBRyA9IDI7XG5cbi8qKlxuICogVGhlIGJhc2UgaW1wbGVtZW50YXRpb24gb2YgYF8uaXNNYXRjaGAgd2l0aG91dCBzdXBwb3J0IGZvciBpdGVyYXRlZSBzaG9ydGhhbmRzLlxuICpcbiAqIEBwcml2YXRlXG4gKiBAcGFyYW0ge09iamVjdH0gb2JqZWN0IFRoZSBvYmplY3QgdG8gaW5zcGVjdC5cbiAqIEBwYXJhbSB7T2JqZWN0fSBzb3VyY2UgVGhlIG9iamVjdCBvZiBwcm9wZXJ0eSB2YWx1ZXMgdG8gbWF0Y2guXG4gKiBAcGFyYW0ge0FycmF5fSBtYXRjaERhdGEgVGhlIHByb3BlcnR5IG5hbWVzLCB2YWx1ZXMsIGFuZCBjb21wYXJlIGZsYWdzIHRvIG1hdGNoLlxuICogQHBhcmFtIHtGdW5jdGlvbn0gW2N1c3RvbWl6ZXJdIFRoZSBmdW5jdGlvbiB0byBjdXN0b21pemUgY29tcGFyaXNvbnMuXG4gKiBAcmV0dXJucyB7Ym9vbGVhbn0gUmV0dXJucyBgdHJ1ZWAgaWYgYG9iamVjdGAgaXMgYSBtYXRjaCwgZWxzZSBgZmFsc2VgLlxuICovXG5mdW5jdGlvbiBiYXNlSXNNYXRjaChvYmplY3QsIHNvdXJjZSwgbWF0Y2hEYXRhLCBjdXN0b21pemVyKSB7XG4gIHZhciBpbmRleCA9IG1hdGNoRGF0YS5sZW5ndGgsXG4gICAgICBsZW5ndGggPSBpbmRleCxcbiAgICAgIG5vQ3VzdG9taXplciA9ICFjdXN0b21pemVyO1xuXG4gIGlmIChvYmplY3QgPT0gbnVsbCkge1xuICAgIHJldHVybiAhbGVuZ3RoO1xuICB9XG4gIG9iamVjdCA9IE9iamVjdChvYmplY3QpO1xuICB3aGlsZSAoaW5kZXgtLSkge1xuICAgIHZhciBkYXRhID0gbWF0Y2hEYXRhW2luZGV4XTtcbiAgICBpZiAoKG5vQ3VzdG9taXplciAmJiBkYXRhWzJdKVxuICAgICAgICAgID8gZGF0YVsxXSAhPT0gb2JqZWN0W2RhdGFbMF1dXG4gICAgICAgICAgOiAhKGRhdGFbMF0gaW4gb2JqZWN0KVxuICAgICAgICApIHtcbiAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9XG4gIH1cbiAgd2hpbGUgKCsraW5kZXggPCBsZW5ndGgpIHtcbiAgICBkYXRhID0gbWF0Y2hEYXRhW2luZGV4XTtcbiAgICB2YXIga2V5ID0gZGF0YVswXSxcbiAgICAgICAgb2JqVmFsdWUgPSBvYmplY3Rba2V5XSxcbiAgICAgICAgc3JjVmFsdWUgPSBkYXRhWzFdO1xuXG4gICAgaWYgKG5vQ3VzdG9taXplciAmJiBkYXRhWzJdKSB7XG4gICAgICBpZiAob2JqVmFsdWUgPT09IHVuZGVmaW5lZCAmJiAhKGtleSBpbiBvYmplY3QpKSB7XG4gICAgICAgIHJldHVybiBmYWxzZTtcbiAgICAgIH1cbiAgICB9IGVsc2Uge1xuICAgICAgdmFyIHN0YWNrID0gbmV3IFN0YWNrO1xuICAgICAgaWYgKGN1c3RvbWl6ZXIpIHtcbiAgICAgICAgdmFyIHJlc3VsdCA9IGN1c3RvbWl6ZXIob2JqVmFsdWUsIHNyY1ZhbHVlLCBrZXksIG9iamVjdCwgc291cmNlLCBzdGFjayk7XG4gICAgICB9XG4gICAgICBpZiAoIShyZXN1bHQgPT09IHVuZGVmaW5lZFxuICAgICAgICAgICAgPyBiYXNlSXNFcXVhbChzcmNWYWx1ZSwgb2JqVmFsdWUsIENPTVBBUkVfUEFSVElBTF9GTEFHIHwgQ09NUEFSRV9VTk9SREVSRURfRkxBRywgY3VzdG9taXplciwgc3RhY2spXG4gICAgICAgICAgICA6IHJlc3VsdFxuICAgICAgICAgICkpIHtcbiAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgfVxuICAgIH1cbiAgfVxuICByZXR1cm4gdHJ1ZTtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBiYXNlSXNNYXRjaDtcblxuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vbm9kZV9tb2R1bGVzL2xvZGFzaC9fYmFzZUlzTWF0Y2guanNcbi8vIG1vZHVsZSBpZCA9IC4vbm9kZV9tb2R1bGVzL2xvZGFzaC9fYmFzZUlzTWF0Y2guanNcbi8vIG1vZHVsZSBjaHVua3MgPSAxIiwiLyoqXG4gKiBUaGUgYmFzZSBpbXBsZW1lbnRhdGlvbiBvZiBgXy5pc05hTmAgd2l0aG91dCBzdXBwb3J0IGZvciBudW1iZXIgb2JqZWN0cy5cbiAqXG4gKiBAcHJpdmF0ZVxuICogQHBhcmFtIHsqfSB2YWx1ZSBUaGUgdmFsdWUgdG8gY2hlY2suXG4gKiBAcmV0dXJucyB7Ym9vbGVhbn0gUmV0dXJucyBgdHJ1ZWAgaWYgYHZhbHVlYCBpcyBgTmFOYCwgZWxzZSBgZmFsc2VgLlxuICovXG5mdW5jdGlvbiBiYXNlSXNOYU4odmFsdWUpIHtcbiAgcmV0dXJuIHZhbHVlICE9PSB2YWx1ZTtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBiYXNlSXNOYU47XG5cblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL25vZGVfbW9kdWxlcy9sb2Rhc2gvX2Jhc2VJc05hTi5qc1xuLy8gbW9kdWxlIGlkID0gLi9ub2RlX21vZHVsZXMvbG9kYXNoL19iYXNlSXNOYU4uanNcbi8vIG1vZHVsZSBjaHVua3MgPSAxIiwidmFyIGlzRnVuY3Rpb24gPSByZXF1aXJlKCcuL2lzRnVuY3Rpb24nKSxcbiAgICBpc01hc2tlZCA9IHJlcXVpcmUoJy4vX2lzTWFza2VkJyksXG4gICAgaXNPYmplY3QgPSByZXF1aXJlKCcuL2lzT2JqZWN0JyksXG4gICAgdG9Tb3VyY2UgPSByZXF1aXJlKCcuL190b1NvdXJjZScpO1xuXG4vKipcbiAqIFVzZWQgdG8gbWF0Y2ggYFJlZ0V4cGBcbiAqIFtzeW50YXggY2hhcmFjdGVyc10oaHR0cDovL2VjbWEtaW50ZXJuYXRpb25hbC5vcmcvZWNtYS0yNjIvNy4wLyNzZWMtcGF0dGVybnMpLlxuICovXG52YXIgcmVSZWdFeHBDaGFyID0gL1tcXFxcXiQuKis/KClbXFxde318XS9nO1xuXG4vKiogVXNlZCB0byBkZXRlY3QgaG9zdCBjb25zdHJ1Y3RvcnMgKFNhZmFyaSkuICovXG52YXIgcmVJc0hvc3RDdG9yID0gL15cXFtvYmplY3QgLis/Q29uc3RydWN0b3JcXF0kLztcblxuLyoqIFVzZWQgZm9yIGJ1aWx0LWluIG1ldGhvZCByZWZlcmVuY2VzLiAqL1xudmFyIGZ1bmNQcm90byA9IEZ1bmN0aW9uLnByb3RvdHlwZSxcbiAgICBvYmplY3RQcm90byA9IE9iamVjdC5wcm90b3R5cGU7XG5cbi8qKiBVc2VkIHRvIHJlc29sdmUgdGhlIGRlY29tcGlsZWQgc291cmNlIG9mIGZ1bmN0aW9ucy4gKi9cbnZhciBmdW5jVG9TdHJpbmcgPSBmdW5jUHJvdG8udG9TdHJpbmc7XG5cbi8qKiBVc2VkIHRvIGNoZWNrIG9iamVjdHMgZm9yIG93biBwcm9wZXJ0aWVzLiAqL1xudmFyIGhhc093blByb3BlcnR5ID0gb2JqZWN0UHJvdG8uaGFzT3duUHJvcGVydHk7XG5cbi8qKiBVc2VkIHRvIGRldGVjdCBpZiBhIG1ldGhvZCBpcyBuYXRpdmUuICovXG52YXIgcmVJc05hdGl2ZSA9IFJlZ0V4cCgnXicgK1xuICBmdW5jVG9TdHJpbmcuY2FsbChoYXNPd25Qcm9wZXJ0eSkucmVwbGFjZShyZVJlZ0V4cENoYXIsICdcXFxcJCYnKVxuICAucmVwbGFjZSgvaGFzT3duUHJvcGVydHl8KGZ1bmN0aW9uKS4qPyg/PVxcXFxcXCgpfCBmb3IgLis/KD89XFxcXFxcXSkvZywgJyQxLio/JykgKyAnJCdcbik7XG5cbi8qKlxuICogVGhlIGJhc2UgaW1wbGVtZW50YXRpb24gb2YgYF8uaXNOYXRpdmVgIHdpdGhvdXQgYmFkIHNoaW0gY2hlY2tzLlxuICpcbiAqIEBwcml2YXRlXG4gKiBAcGFyYW0geyp9IHZhbHVlIFRoZSB2YWx1ZSB0byBjaGVjay5cbiAqIEByZXR1cm5zIHtib29sZWFufSBSZXR1cm5zIGB0cnVlYCBpZiBgdmFsdWVgIGlzIGEgbmF0aXZlIGZ1bmN0aW9uLFxuICogIGVsc2UgYGZhbHNlYC5cbiAqL1xuZnVuY3Rpb24gYmFzZUlzTmF0aXZlKHZhbHVlKSB7XG4gIGlmICghaXNPYmplY3QodmFsdWUpIHx8IGlzTWFza2VkKHZhbHVlKSkge1xuICAgIHJldHVybiBmYWxzZTtcbiAgfVxuICB2YXIgcGF0dGVybiA9IGlzRnVuY3Rpb24odmFsdWUpID8gcmVJc05hdGl2ZSA6IHJlSXNIb3N0Q3RvcjtcbiAgcmV0dXJuIHBhdHRlcm4udGVzdCh0b1NvdXJjZSh2YWx1ZSkpO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGJhc2VJc05hdGl2ZTtcblxuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vbm9kZV9tb2R1bGVzL2xvZGFzaC9fYmFzZUlzTmF0aXZlLmpzXG4vLyBtb2R1bGUgaWQgPSAuL25vZGVfbW9kdWxlcy9sb2Rhc2gvX2Jhc2VJc05hdGl2ZS5qc1xuLy8gbW9kdWxlIGNodW5rcyA9IDEiLCJ2YXIgZ2V0VGFnID0gcmVxdWlyZSgnLi9fZ2V0VGFnJyksXG4gICAgaXNPYmplY3RMaWtlID0gcmVxdWlyZSgnLi9pc09iamVjdExpa2UnKTtcblxuLyoqIGBPYmplY3QjdG9TdHJpbmdgIHJlc3VsdCByZWZlcmVuY2VzLiAqL1xudmFyIHNldFRhZyA9ICdbb2JqZWN0IFNldF0nO1xuXG4vKipcbiAqIFRoZSBiYXNlIGltcGxlbWVudGF0aW9uIG9mIGBfLmlzU2V0YCB3aXRob3V0IE5vZGUuanMgb3B0aW1pemF0aW9ucy5cbiAqXG4gKiBAcHJpdmF0ZVxuICogQHBhcmFtIHsqfSB2YWx1ZSBUaGUgdmFsdWUgdG8gY2hlY2suXG4gKiBAcmV0dXJucyB7Ym9vbGVhbn0gUmV0dXJucyBgdHJ1ZWAgaWYgYHZhbHVlYCBpcyBhIHNldCwgZWxzZSBgZmFsc2VgLlxuICovXG5mdW5jdGlvbiBiYXNlSXNTZXQodmFsdWUpIHtcbiAgcmV0dXJuIGlzT2JqZWN0TGlrZSh2YWx1ZSkgJiYgZ2V0VGFnKHZhbHVlKSA9PSBzZXRUYWc7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gYmFzZUlzU2V0O1xuXG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9ub2RlX21vZHVsZXMvbG9kYXNoL19iYXNlSXNTZXQuanNcbi8vIG1vZHVsZSBpZCA9IC4vbm9kZV9tb2R1bGVzL2xvZGFzaC9fYmFzZUlzU2V0LmpzXG4vLyBtb2R1bGUgY2h1bmtzID0gMSIsInZhciBiYXNlR2V0VGFnID0gcmVxdWlyZSgnLi9fYmFzZUdldFRhZycpLFxuICAgIGlzTGVuZ3RoID0gcmVxdWlyZSgnLi9pc0xlbmd0aCcpLFxuICAgIGlzT2JqZWN0TGlrZSA9IHJlcXVpcmUoJy4vaXNPYmplY3RMaWtlJyk7XG5cbi8qKiBgT2JqZWN0I3RvU3RyaW5nYCByZXN1bHQgcmVmZXJlbmNlcy4gKi9cbnZhciBhcmdzVGFnID0gJ1tvYmplY3QgQXJndW1lbnRzXScsXG4gICAgYXJyYXlUYWcgPSAnW29iamVjdCBBcnJheV0nLFxuICAgIGJvb2xUYWcgPSAnW29iamVjdCBCb29sZWFuXScsXG4gICAgZGF0ZVRhZyA9ICdbb2JqZWN0IERhdGVdJyxcbiAgICBlcnJvclRhZyA9ICdbb2JqZWN0IEVycm9yXScsXG4gICAgZnVuY1RhZyA9ICdbb2JqZWN0IEZ1bmN0aW9uXScsXG4gICAgbWFwVGFnID0gJ1tvYmplY3QgTWFwXScsXG4gICAgbnVtYmVyVGFnID0gJ1tvYmplY3QgTnVtYmVyXScsXG4gICAgb2JqZWN0VGFnID0gJ1tvYmplY3QgT2JqZWN0XScsXG4gICAgcmVnZXhwVGFnID0gJ1tvYmplY3QgUmVnRXhwXScsXG4gICAgc2V0VGFnID0gJ1tvYmplY3QgU2V0XScsXG4gICAgc3RyaW5nVGFnID0gJ1tvYmplY3QgU3RyaW5nXScsXG4gICAgd2Vha01hcFRhZyA9ICdbb2JqZWN0IFdlYWtNYXBdJztcblxudmFyIGFycmF5QnVmZmVyVGFnID0gJ1tvYmplY3QgQXJyYXlCdWZmZXJdJyxcbiAgICBkYXRhVmlld1RhZyA9ICdbb2JqZWN0IERhdGFWaWV3XScsXG4gICAgZmxvYXQzMlRhZyA9ICdbb2JqZWN0IEZsb2F0MzJBcnJheV0nLFxuICAgIGZsb2F0NjRUYWcgPSAnW29iamVjdCBGbG9hdDY0QXJyYXldJyxcbiAgICBpbnQ4VGFnID0gJ1tvYmplY3QgSW50OEFycmF5XScsXG4gICAgaW50MTZUYWcgPSAnW29iamVjdCBJbnQxNkFycmF5XScsXG4gICAgaW50MzJUYWcgPSAnW29iamVjdCBJbnQzMkFycmF5XScsXG4gICAgdWludDhUYWcgPSAnW29iamVjdCBVaW50OEFycmF5XScsXG4gICAgdWludDhDbGFtcGVkVGFnID0gJ1tvYmplY3QgVWludDhDbGFtcGVkQXJyYXldJyxcbiAgICB1aW50MTZUYWcgPSAnW29iamVjdCBVaW50MTZBcnJheV0nLFxuICAgIHVpbnQzMlRhZyA9ICdbb2JqZWN0IFVpbnQzMkFycmF5XSc7XG5cbi8qKiBVc2VkIHRvIGlkZW50aWZ5IGB0b1N0cmluZ1RhZ2AgdmFsdWVzIG9mIHR5cGVkIGFycmF5cy4gKi9cbnZhciB0eXBlZEFycmF5VGFncyA9IHt9O1xudHlwZWRBcnJheVRhZ3NbZmxvYXQzMlRhZ10gPSB0eXBlZEFycmF5VGFnc1tmbG9hdDY0VGFnXSA9XG50eXBlZEFycmF5VGFnc1tpbnQ4VGFnXSA9IHR5cGVkQXJyYXlUYWdzW2ludDE2VGFnXSA9XG50eXBlZEFycmF5VGFnc1tpbnQzMlRhZ10gPSB0eXBlZEFycmF5VGFnc1t1aW50OFRhZ10gPVxudHlwZWRBcnJheVRhZ3NbdWludDhDbGFtcGVkVGFnXSA9IHR5cGVkQXJyYXlUYWdzW3VpbnQxNlRhZ10gPVxudHlwZWRBcnJheVRhZ3NbdWludDMyVGFnXSA9IHRydWU7XG50eXBlZEFycmF5VGFnc1thcmdzVGFnXSA9IHR5cGVkQXJyYXlUYWdzW2FycmF5VGFnXSA9XG50eXBlZEFycmF5VGFnc1thcnJheUJ1ZmZlclRhZ10gPSB0eXBlZEFycmF5VGFnc1tib29sVGFnXSA9XG50eXBlZEFycmF5VGFnc1tkYXRhVmlld1RhZ10gPSB0eXBlZEFycmF5VGFnc1tkYXRlVGFnXSA9XG50eXBlZEFycmF5VGFnc1tlcnJvclRhZ10gPSB0eXBlZEFycmF5VGFnc1tmdW5jVGFnXSA9XG50eXBlZEFycmF5VGFnc1ttYXBUYWddID0gdHlwZWRBcnJheVRhZ3NbbnVtYmVyVGFnXSA9XG50eXBlZEFycmF5VGFnc1tvYmplY3RUYWddID0gdHlwZWRBcnJheVRhZ3NbcmVnZXhwVGFnXSA9XG50eXBlZEFycmF5VGFnc1tzZXRUYWddID0gdHlwZWRBcnJheVRhZ3Nbc3RyaW5nVGFnXSA9XG50eXBlZEFycmF5VGFnc1t3ZWFrTWFwVGFnXSA9IGZhbHNlO1xuXG4vKipcbiAqIFRoZSBiYXNlIGltcGxlbWVudGF0aW9uIG9mIGBfLmlzVHlwZWRBcnJheWAgd2l0aG91dCBOb2RlLmpzIG9wdGltaXphdGlvbnMuXG4gKlxuICogQHByaXZhdGVcbiAqIEBwYXJhbSB7Kn0gdmFsdWUgVGhlIHZhbHVlIHRvIGNoZWNrLlxuICogQHJldHVybnMge2Jvb2xlYW59IFJldHVybnMgYHRydWVgIGlmIGB2YWx1ZWAgaXMgYSB0eXBlZCBhcnJheSwgZWxzZSBgZmFsc2VgLlxuICovXG5mdW5jdGlvbiBiYXNlSXNUeXBlZEFycmF5KHZhbHVlKSB7XG4gIHJldHVybiBpc09iamVjdExpa2UodmFsdWUpICYmXG4gICAgaXNMZW5ndGgodmFsdWUubGVuZ3RoKSAmJiAhIXR5cGVkQXJyYXlUYWdzW2Jhc2VHZXRUYWcodmFsdWUpXTtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBiYXNlSXNUeXBlZEFycmF5O1xuXG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9ub2RlX21vZHVsZXMvbG9kYXNoL19iYXNlSXNUeXBlZEFycmF5LmpzXG4vLyBtb2R1bGUgaWQgPSAuL25vZGVfbW9kdWxlcy9sb2Rhc2gvX2Jhc2VJc1R5cGVkQXJyYXkuanNcbi8vIG1vZHVsZSBjaHVua3MgPSAxIiwidmFyIGJhc2VNYXRjaGVzID0gcmVxdWlyZSgnLi9fYmFzZU1hdGNoZXMnKSxcbiAgICBiYXNlTWF0Y2hlc1Byb3BlcnR5ID0gcmVxdWlyZSgnLi9fYmFzZU1hdGNoZXNQcm9wZXJ0eScpLFxuICAgIGlkZW50aXR5ID0gcmVxdWlyZSgnLi9pZGVudGl0eScpLFxuICAgIGlzQXJyYXkgPSByZXF1aXJlKCcuL2lzQXJyYXknKSxcbiAgICBwcm9wZXJ0eSA9IHJlcXVpcmUoJy4vcHJvcGVydHknKTtcblxuLyoqXG4gKiBUaGUgYmFzZSBpbXBsZW1lbnRhdGlvbiBvZiBgXy5pdGVyYXRlZWAuXG4gKlxuICogQHByaXZhdGVcbiAqIEBwYXJhbSB7Kn0gW3ZhbHVlPV8uaWRlbnRpdHldIFRoZSB2YWx1ZSB0byBjb252ZXJ0IHRvIGFuIGl0ZXJhdGVlLlxuICogQHJldHVybnMge0Z1bmN0aW9ufSBSZXR1cm5zIHRoZSBpdGVyYXRlZS5cbiAqL1xuZnVuY3Rpb24gYmFzZUl0ZXJhdGVlKHZhbHVlKSB7XG4gIC8vIERvbid0IHN0b3JlIHRoZSBgdHlwZW9mYCByZXN1bHQgaW4gYSB2YXJpYWJsZSB0byBhdm9pZCBhIEpJVCBidWcgaW4gU2FmYXJpIDkuXG4gIC8vIFNlZSBodHRwczovL2J1Z3Mud2Via2l0Lm9yZy9zaG93X2J1Zy5jZ2k/aWQ9MTU2MDM0IGZvciBtb3JlIGRldGFpbHMuXG4gIGlmICh0eXBlb2YgdmFsdWUgPT0gJ2Z1bmN0aW9uJykge1xuICAgIHJldHVybiB2YWx1ZTtcbiAgfVxuICBpZiAodmFsdWUgPT0gbnVsbCkge1xuICAgIHJldHVybiBpZGVudGl0eTtcbiAgfVxuICBpZiAodHlwZW9mIHZhbHVlID09ICdvYmplY3QnKSB7XG4gICAgcmV0dXJuIGlzQXJyYXkodmFsdWUpXG4gICAgICA/IGJhc2VNYXRjaGVzUHJvcGVydHkodmFsdWVbMF0sIHZhbHVlWzFdKVxuICAgICAgOiBiYXNlTWF0Y2hlcyh2YWx1ZSk7XG4gIH1cbiAgcmV0dXJuIHByb3BlcnR5KHZhbHVlKTtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBiYXNlSXRlcmF0ZWU7XG5cblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL25vZGVfbW9kdWxlcy9sb2Rhc2gvX2Jhc2VJdGVyYXRlZS5qc1xuLy8gbW9kdWxlIGlkID0gLi9ub2RlX21vZHVsZXMvbG9kYXNoL19iYXNlSXRlcmF0ZWUuanNcbi8vIG1vZHVsZSBjaHVua3MgPSAxIiwidmFyIGlzUHJvdG90eXBlID0gcmVxdWlyZSgnLi9faXNQcm90b3R5cGUnKSxcbiAgICBuYXRpdmVLZXlzID0gcmVxdWlyZSgnLi9fbmF0aXZlS2V5cycpO1xuXG4vKiogVXNlZCBmb3IgYnVpbHQtaW4gbWV0aG9kIHJlZmVyZW5jZXMuICovXG52YXIgb2JqZWN0UHJvdG8gPSBPYmplY3QucHJvdG90eXBlO1xuXG4vKiogVXNlZCB0byBjaGVjayBvYmplY3RzIGZvciBvd24gcHJvcGVydGllcy4gKi9cbnZhciBoYXNPd25Qcm9wZXJ0eSA9IG9iamVjdFByb3RvLmhhc093blByb3BlcnR5O1xuXG4vKipcbiAqIFRoZSBiYXNlIGltcGxlbWVudGF0aW9uIG9mIGBfLmtleXNgIHdoaWNoIGRvZXNuJ3QgdHJlYXQgc3BhcnNlIGFycmF5cyBhcyBkZW5zZS5cbiAqXG4gKiBAcHJpdmF0ZVxuICogQHBhcmFtIHtPYmplY3R9IG9iamVjdCBUaGUgb2JqZWN0IHRvIHF1ZXJ5LlxuICogQHJldHVybnMge0FycmF5fSBSZXR1cm5zIHRoZSBhcnJheSBvZiBwcm9wZXJ0eSBuYW1lcy5cbiAqL1xuZnVuY3Rpb24gYmFzZUtleXMob2JqZWN0KSB7XG4gIGlmICghaXNQcm90b3R5cGUob2JqZWN0KSkge1xuICAgIHJldHVybiBuYXRpdmVLZXlzKG9iamVjdCk7XG4gIH1cbiAgdmFyIHJlc3VsdCA9IFtdO1xuICBmb3IgKHZhciBrZXkgaW4gT2JqZWN0KG9iamVjdCkpIHtcbiAgICBpZiAoaGFzT3duUHJvcGVydHkuY2FsbChvYmplY3QsIGtleSkgJiYga2V5ICE9ICdjb25zdHJ1Y3RvcicpIHtcbiAgICAgIHJlc3VsdC5wdXNoKGtleSk7XG4gICAgfVxuICB9XG4gIHJldHVybiByZXN1bHQ7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gYmFzZUtleXM7XG5cblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL25vZGVfbW9kdWxlcy9sb2Rhc2gvX2Jhc2VLZXlzLmpzXG4vLyBtb2R1bGUgaWQgPSAuL25vZGVfbW9kdWxlcy9sb2Rhc2gvX2Jhc2VLZXlzLmpzXG4vLyBtb2R1bGUgY2h1bmtzID0gMSIsInZhciBpc09iamVjdCA9IHJlcXVpcmUoJy4vaXNPYmplY3QnKSxcbiAgICBpc1Byb3RvdHlwZSA9IHJlcXVpcmUoJy4vX2lzUHJvdG90eXBlJyksXG4gICAgbmF0aXZlS2V5c0luID0gcmVxdWlyZSgnLi9fbmF0aXZlS2V5c0luJyk7XG5cbi8qKiBVc2VkIGZvciBidWlsdC1pbiBtZXRob2QgcmVmZXJlbmNlcy4gKi9cbnZhciBvYmplY3RQcm90byA9IE9iamVjdC5wcm90b3R5cGU7XG5cbi8qKiBVc2VkIHRvIGNoZWNrIG9iamVjdHMgZm9yIG93biBwcm9wZXJ0aWVzLiAqL1xudmFyIGhhc093blByb3BlcnR5ID0gb2JqZWN0UHJvdG8uaGFzT3duUHJvcGVydHk7XG5cbi8qKlxuICogVGhlIGJhc2UgaW1wbGVtZW50YXRpb24gb2YgYF8ua2V5c0luYCB3aGljaCBkb2Vzbid0IHRyZWF0IHNwYXJzZSBhcnJheXMgYXMgZGVuc2UuXG4gKlxuICogQHByaXZhdGVcbiAqIEBwYXJhbSB7T2JqZWN0fSBvYmplY3QgVGhlIG9iamVjdCB0byBxdWVyeS5cbiAqIEByZXR1cm5zIHtBcnJheX0gUmV0dXJucyB0aGUgYXJyYXkgb2YgcHJvcGVydHkgbmFtZXMuXG4gKi9cbmZ1bmN0aW9uIGJhc2VLZXlzSW4ob2JqZWN0KSB7XG4gIGlmICghaXNPYmplY3Qob2JqZWN0KSkge1xuICAgIHJldHVybiBuYXRpdmVLZXlzSW4ob2JqZWN0KTtcbiAgfVxuICB2YXIgaXNQcm90byA9IGlzUHJvdG90eXBlKG9iamVjdCksXG4gICAgICByZXN1bHQgPSBbXTtcblxuICBmb3IgKHZhciBrZXkgaW4gb2JqZWN0KSB7XG4gICAgaWYgKCEoa2V5ID09ICdjb25zdHJ1Y3RvcicgJiYgKGlzUHJvdG8gfHwgIWhhc093blByb3BlcnR5LmNhbGwob2JqZWN0LCBrZXkpKSkpIHtcbiAgICAgIHJlc3VsdC5wdXNoKGtleSk7XG4gICAgfVxuICB9XG4gIHJldHVybiByZXN1bHQ7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gYmFzZUtleXNJbjtcblxuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vbm9kZV9tb2R1bGVzL2xvZGFzaC9fYmFzZUtleXNJbi5qc1xuLy8gbW9kdWxlIGlkID0gLi9ub2RlX21vZHVsZXMvbG9kYXNoL19iYXNlS2V5c0luLmpzXG4vLyBtb2R1bGUgY2h1bmtzID0gMSIsInZhciBiYXNlRWFjaCA9IHJlcXVpcmUoJy4vX2Jhc2VFYWNoJyksXG4gICAgaXNBcnJheUxpa2UgPSByZXF1aXJlKCcuL2lzQXJyYXlMaWtlJyk7XG5cbi8qKlxuICogVGhlIGJhc2UgaW1wbGVtZW50YXRpb24gb2YgYF8ubWFwYCB3aXRob3V0IHN1cHBvcnQgZm9yIGl0ZXJhdGVlIHNob3J0aGFuZHMuXG4gKlxuICogQHByaXZhdGVcbiAqIEBwYXJhbSB7QXJyYXl8T2JqZWN0fSBjb2xsZWN0aW9uIFRoZSBjb2xsZWN0aW9uIHRvIGl0ZXJhdGUgb3Zlci5cbiAqIEBwYXJhbSB7RnVuY3Rpb259IGl0ZXJhdGVlIFRoZSBmdW5jdGlvbiBpbnZva2VkIHBlciBpdGVyYXRpb24uXG4gKiBAcmV0dXJucyB7QXJyYXl9IFJldHVybnMgdGhlIG5ldyBtYXBwZWQgYXJyYXkuXG4gKi9cbmZ1bmN0aW9uIGJhc2VNYXAoY29sbGVjdGlvbiwgaXRlcmF0ZWUpIHtcbiAgdmFyIGluZGV4ID0gLTEsXG4gICAgICByZXN1bHQgPSBpc0FycmF5TGlrZShjb2xsZWN0aW9uKSA/IEFycmF5KGNvbGxlY3Rpb24ubGVuZ3RoKSA6IFtdO1xuXG4gIGJhc2VFYWNoKGNvbGxlY3Rpb24sIGZ1bmN0aW9uKHZhbHVlLCBrZXksIGNvbGxlY3Rpb24pIHtcbiAgICByZXN1bHRbKytpbmRleF0gPSBpdGVyYXRlZSh2YWx1ZSwga2V5LCBjb2xsZWN0aW9uKTtcbiAgfSk7XG4gIHJldHVybiByZXN1bHQ7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gYmFzZU1hcDtcblxuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vbm9kZV9tb2R1bGVzL2xvZGFzaC9fYmFzZU1hcC5qc1xuLy8gbW9kdWxlIGlkID0gLi9ub2RlX21vZHVsZXMvbG9kYXNoL19iYXNlTWFwLmpzXG4vLyBtb2R1bGUgY2h1bmtzID0gMSIsInZhciBiYXNlSXNNYXRjaCA9IHJlcXVpcmUoJy4vX2Jhc2VJc01hdGNoJyksXG4gICAgZ2V0TWF0Y2hEYXRhID0gcmVxdWlyZSgnLi9fZ2V0TWF0Y2hEYXRhJyksXG4gICAgbWF0Y2hlc1N0cmljdENvbXBhcmFibGUgPSByZXF1aXJlKCcuL19tYXRjaGVzU3RyaWN0Q29tcGFyYWJsZScpO1xuXG4vKipcbiAqIFRoZSBiYXNlIGltcGxlbWVudGF0aW9uIG9mIGBfLm1hdGNoZXNgIHdoaWNoIGRvZXNuJ3QgY2xvbmUgYHNvdXJjZWAuXG4gKlxuICogQHByaXZhdGVcbiAqIEBwYXJhbSB7T2JqZWN0fSBzb3VyY2UgVGhlIG9iamVjdCBvZiBwcm9wZXJ0eSB2YWx1ZXMgdG8gbWF0Y2guXG4gKiBAcmV0dXJucyB7RnVuY3Rpb259IFJldHVybnMgdGhlIG5ldyBzcGVjIGZ1bmN0aW9uLlxuICovXG5mdW5jdGlvbiBiYXNlTWF0Y2hlcyhzb3VyY2UpIHtcbiAgdmFyIG1hdGNoRGF0YSA9IGdldE1hdGNoRGF0YShzb3VyY2UpO1xuICBpZiAobWF0Y2hEYXRhLmxlbmd0aCA9PSAxICYmIG1hdGNoRGF0YVswXVsyXSkge1xuICAgIHJldHVybiBtYXRjaGVzU3RyaWN0Q29tcGFyYWJsZShtYXRjaERhdGFbMF1bMF0sIG1hdGNoRGF0YVswXVsxXSk7XG4gIH1cbiAgcmV0dXJuIGZ1bmN0aW9uKG9iamVjdCkge1xuICAgIHJldHVybiBvYmplY3QgPT09IHNvdXJjZSB8fCBiYXNlSXNNYXRjaChvYmplY3QsIHNvdXJjZSwgbWF0Y2hEYXRhKTtcbiAgfTtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBiYXNlTWF0Y2hlcztcblxuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vbm9kZV9tb2R1bGVzL2xvZGFzaC9fYmFzZU1hdGNoZXMuanNcbi8vIG1vZHVsZSBpZCA9IC4vbm9kZV9tb2R1bGVzL2xvZGFzaC9fYmFzZU1hdGNoZXMuanNcbi8vIG1vZHVsZSBjaHVua3MgPSAxIiwidmFyIGJhc2VJc0VxdWFsID0gcmVxdWlyZSgnLi9fYmFzZUlzRXF1YWwnKSxcbiAgICBnZXQgPSByZXF1aXJlKCcuL2dldCcpLFxuICAgIGhhc0luID0gcmVxdWlyZSgnLi9oYXNJbicpLFxuICAgIGlzS2V5ID0gcmVxdWlyZSgnLi9faXNLZXknKSxcbiAgICBpc1N0cmljdENvbXBhcmFibGUgPSByZXF1aXJlKCcuL19pc1N0cmljdENvbXBhcmFibGUnKSxcbiAgICBtYXRjaGVzU3RyaWN0Q29tcGFyYWJsZSA9IHJlcXVpcmUoJy4vX21hdGNoZXNTdHJpY3RDb21wYXJhYmxlJyksXG4gICAgdG9LZXkgPSByZXF1aXJlKCcuL190b0tleScpO1xuXG4vKiogVXNlZCB0byBjb21wb3NlIGJpdG1hc2tzIGZvciB2YWx1ZSBjb21wYXJpc29ucy4gKi9cbnZhciBDT01QQVJFX1BBUlRJQUxfRkxBRyA9IDEsXG4gICAgQ09NUEFSRV9VTk9SREVSRURfRkxBRyA9IDI7XG5cbi8qKlxuICogVGhlIGJhc2UgaW1wbGVtZW50YXRpb24gb2YgYF8ubWF0Y2hlc1Byb3BlcnR5YCB3aGljaCBkb2Vzbid0IGNsb25lIGBzcmNWYWx1ZWAuXG4gKlxuICogQHByaXZhdGVcbiAqIEBwYXJhbSB7c3RyaW5nfSBwYXRoIFRoZSBwYXRoIG9mIHRoZSBwcm9wZXJ0eSB0byBnZXQuXG4gKiBAcGFyYW0geyp9IHNyY1ZhbHVlIFRoZSB2YWx1ZSB0byBtYXRjaC5cbiAqIEByZXR1cm5zIHtGdW5jdGlvbn0gUmV0dXJucyB0aGUgbmV3IHNwZWMgZnVuY3Rpb24uXG4gKi9cbmZ1bmN0aW9uIGJhc2VNYXRjaGVzUHJvcGVydHkocGF0aCwgc3JjVmFsdWUpIHtcbiAgaWYgKGlzS2V5KHBhdGgpICYmIGlzU3RyaWN0Q29tcGFyYWJsZShzcmNWYWx1ZSkpIHtcbiAgICByZXR1cm4gbWF0Y2hlc1N0cmljdENvbXBhcmFibGUodG9LZXkocGF0aCksIHNyY1ZhbHVlKTtcbiAgfVxuICByZXR1cm4gZnVuY3Rpb24ob2JqZWN0KSB7XG4gICAgdmFyIG9ialZhbHVlID0gZ2V0KG9iamVjdCwgcGF0aCk7XG4gICAgcmV0dXJuIChvYmpWYWx1ZSA9PT0gdW5kZWZpbmVkICYmIG9ialZhbHVlID09PSBzcmNWYWx1ZSlcbiAgICAgID8gaGFzSW4ob2JqZWN0LCBwYXRoKVxuICAgICAgOiBiYXNlSXNFcXVhbChzcmNWYWx1ZSwgb2JqVmFsdWUsIENPTVBBUkVfUEFSVElBTF9GTEFHIHwgQ09NUEFSRV9VTk9SREVSRURfRkxBRyk7XG4gIH07XG59XG5cbm1vZHVsZS5leHBvcnRzID0gYmFzZU1hdGNoZXNQcm9wZXJ0eTtcblxuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vbm9kZV9tb2R1bGVzL2xvZGFzaC9fYmFzZU1hdGNoZXNQcm9wZXJ0eS5qc1xuLy8gbW9kdWxlIGlkID0gLi9ub2RlX21vZHVsZXMvbG9kYXNoL19iYXNlTWF0Y2hlc1Byb3BlcnR5LmpzXG4vLyBtb2R1bGUgY2h1bmtzID0gMSIsInZhciBhcnJheU1hcCA9IHJlcXVpcmUoJy4vX2FycmF5TWFwJyksXG4gICAgYmFzZUl0ZXJhdGVlID0gcmVxdWlyZSgnLi9fYmFzZUl0ZXJhdGVlJyksXG4gICAgYmFzZU1hcCA9IHJlcXVpcmUoJy4vX2Jhc2VNYXAnKSxcbiAgICBiYXNlU29ydEJ5ID0gcmVxdWlyZSgnLi9fYmFzZVNvcnRCeScpLFxuICAgIGJhc2VVbmFyeSA9IHJlcXVpcmUoJy4vX2Jhc2VVbmFyeScpLFxuICAgIGNvbXBhcmVNdWx0aXBsZSA9IHJlcXVpcmUoJy4vX2NvbXBhcmVNdWx0aXBsZScpLFxuICAgIGlkZW50aXR5ID0gcmVxdWlyZSgnLi9pZGVudGl0eScpO1xuXG4vKipcbiAqIFRoZSBiYXNlIGltcGxlbWVudGF0aW9uIG9mIGBfLm9yZGVyQnlgIHdpdGhvdXQgcGFyYW0gZ3VhcmRzLlxuICpcbiAqIEBwcml2YXRlXG4gKiBAcGFyYW0ge0FycmF5fE9iamVjdH0gY29sbGVjdGlvbiBUaGUgY29sbGVjdGlvbiB0byBpdGVyYXRlIG92ZXIuXG4gKiBAcGFyYW0ge0Z1bmN0aW9uW118T2JqZWN0W118c3RyaW5nW119IGl0ZXJhdGVlcyBUaGUgaXRlcmF0ZWVzIHRvIHNvcnQgYnkuXG4gKiBAcGFyYW0ge3N0cmluZ1tdfSBvcmRlcnMgVGhlIHNvcnQgb3JkZXJzIG9mIGBpdGVyYXRlZXNgLlxuICogQHJldHVybnMge0FycmF5fSBSZXR1cm5zIHRoZSBuZXcgc29ydGVkIGFycmF5LlxuICovXG5mdW5jdGlvbiBiYXNlT3JkZXJCeShjb2xsZWN0aW9uLCBpdGVyYXRlZXMsIG9yZGVycykge1xuICB2YXIgaW5kZXggPSAtMTtcbiAgaXRlcmF0ZWVzID0gYXJyYXlNYXAoaXRlcmF0ZWVzLmxlbmd0aCA/IGl0ZXJhdGVlcyA6IFtpZGVudGl0eV0sIGJhc2VVbmFyeShiYXNlSXRlcmF0ZWUpKTtcblxuICB2YXIgcmVzdWx0ID0gYmFzZU1hcChjb2xsZWN0aW9uLCBmdW5jdGlvbih2YWx1ZSwga2V5LCBjb2xsZWN0aW9uKSB7XG4gICAgdmFyIGNyaXRlcmlhID0gYXJyYXlNYXAoaXRlcmF0ZWVzLCBmdW5jdGlvbihpdGVyYXRlZSkge1xuICAgICAgcmV0dXJuIGl0ZXJhdGVlKHZhbHVlKTtcbiAgICB9KTtcbiAgICByZXR1cm4geyAnY3JpdGVyaWEnOiBjcml0ZXJpYSwgJ2luZGV4JzogKytpbmRleCwgJ3ZhbHVlJzogdmFsdWUgfTtcbiAgfSk7XG5cbiAgcmV0dXJuIGJhc2VTb3J0QnkocmVzdWx0LCBmdW5jdGlvbihvYmplY3QsIG90aGVyKSB7XG4gICAgcmV0dXJuIGNvbXBhcmVNdWx0aXBsZShvYmplY3QsIG90aGVyLCBvcmRlcnMpO1xuICB9KTtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBiYXNlT3JkZXJCeTtcblxuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vbm9kZV9tb2R1bGVzL2xvZGFzaC9fYmFzZU9yZGVyQnkuanNcbi8vIG1vZHVsZSBpZCA9IC4vbm9kZV9tb2R1bGVzL2xvZGFzaC9fYmFzZU9yZGVyQnkuanNcbi8vIG1vZHVsZSBjaHVua3MgPSAxIiwiLyoqXG4gKiBUaGUgYmFzZSBpbXBsZW1lbnRhdGlvbiBvZiBgXy5wcm9wZXJ0eWAgd2l0aG91dCBzdXBwb3J0IGZvciBkZWVwIHBhdGhzLlxuICpcbiAqIEBwcml2YXRlXG4gKiBAcGFyYW0ge3N0cmluZ30ga2V5IFRoZSBrZXkgb2YgdGhlIHByb3BlcnR5IHRvIGdldC5cbiAqIEByZXR1cm5zIHtGdW5jdGlvbn0gUmV0dXJucyB0aGUgbmV3IGFjY2Vzc29yIGZ1bmN0aW9uLlxuICovXG5mdW5jdGlvbiBiYXNlUHJvcGVydHkoa2V5KSB7XG4gIHJldHVybiBmdW5jdGlvbihvYmplY3QpIHtcbiAgICByZXR1cm4gb2JqZWN0ID09IG51bGwgPyB1bmRlZmluZWQgOiBvYmplY3Rba2V5XTtcbiAgfTtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBiYXNlUHJvcGVydHk7XG5cblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL25vZGVfbW9kdWxlcy9sb2Rhc2gvX2Jhc2VQcm9wZXJ0eS5qc1xuLy8gbW9kdWxlIGlkID0gLi9ub2RlX21vZHVsZXMvbG9kYXNoL19iYXNlUHJvcGVydHkuanNcbi8vIG1vZHVsZSBjaHVua3MgPSAxIiwidmFyIGJhc2VHZXQgPSByZXF1aXJlKCcuL19iYXNlR2V0Jyk7XG5cbi8qKlxuICogQSBzcGVjaWFsaXplZCB2ZXJzaW9uIG9mIGBiYXNlUHJvcGVydHlgIHdoaWNoIHN1cHBvcnRzIGRlZXAgcGF0aHMuXG4gKlxuICogQHByaXZhdGVcbiAqIEBwYXJhbSB7QXJyYXl8c3RyaW5nfSBwYXRoIFRoZSBwYXRoIG9mIHRoZSBwcm9wZXJ0eSB0byBnZXQuXG4gKiBAcmV0dXJucyB7RnVuY3Rpb259IFJldHVybnMgdGhlIG5ldyBhY2Nlc3NvciBmdW5jdGlvbi5cbiAqL1xuZnVuY3Rpb24gYmFzZVByb3BlcnR5RGVlcChwYXRoKSB7XG4gIHJldHVybiBmdW5jdGlvbihvYmplY3QpIHtcbiAgICByZXR1cm4gYmFzZUdldChvYmplY3QsIHBhdGgpO1xuICB9O1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGJhc2VQcm9wZXJ0eURlZXA7XG5cblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL25vZGVfbW9kdWxlcy9sb2Rhc2gvX2Jhc2VQcm9wZXJ0eURlZXAuanNcbi8vIG1vZHVsZSBpZCA9IC4vbm9kZV9tb2R1bGVzL2xvZGFzaC9fYmFzZVByb3BlcnR5RGVlcC5qc1xuLy8gbW9kdWxlIGNodW5rcyA9IDEiLCJ2YXIgaWRlbnRpdHkgPSByZXF1aXJlKCcuL2lkZW50aXR5JyksXG4gICAgb3ZlclJlc3QgPSByZXF1aXJlKCcuL19vdmVyUmVzdCcpLFxuICAgIHNldFRvU3RyaW5nID0gcmVxdWlyZSgnLi9fc2V0VG9TdHJpbmcnKTtcblxuLyoqXG4gKiBUaGUgYmFzZSBpbXBsZW1lbnRhdGlvbiBvZiBgXy5yZXN0YCB3aGljaCBkb2Vzbid0IHZhbGlkYXRlIG9yIGNvZXJjZSBhcmd1bWVudHMuXG4gKlxuICogQHByaXZhdGVcbiAqIEBwYXJhbSB7RnVuY3Rpb259IGZ1bmMgVGhlIGZ1bmN0aW9uIHRvIGFwcGx5IGEgcmVzdCBwYXJhbWV0ZXIgdG8uXG4gKiBAcGFyYW0ge251bWJlcn0gW3N0YXJ0PWZ1bmMubGVuZ3RoLTFdIFRoZSBzdGFydCBwb3NpdGlvbiBvZiB0aGUgcmVzdCBwYXJhbWV0ZXIuXG4gKiBAcmV0dXJucyB7RnVuY3Rpb259IFJldHVybnMgdGhlIG5ldyBmdW5jdGlvbi5cbiAqL1xuZnVuY3Rpb24gYmFzZVJlc3QoZnVuYywgc3RhcnQpIHtcbiAgcmV0dXJuIHNldFRvU3RyaW5nKG92ZXJSZXN0KGZ1bmMsIHN0YXJ0LCBpZGVudGl0eSksIGZ1bmMgKyAnJyk7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gYmFzZVJlc3Q7XG5cblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL25vZGVfbW9kdWxlcy9sb2Rhc2gvX2Jhc2VSZXN0LmpzXG4vLyBtb2R1bGUgaWQgPSAuL25vZGVfbW9kdWxlcy9sb2Rhc2gvX2Jhc2VSZXN0LmpzXG4vLyBtb2R1bGUgY2h1bmtzID0gMSIsInZhciBjb25zdGFudCA9IHJlcXVpcmUoJy4vY29uc3RhbnQnKSxcbiAgICBkZWZpbmVQcm9wZXJ0eSA9IHJlcXVpcmUoJy4vX2RlZmluZVByb3BlcnR5JyksXG4gICAgaWRlbnRpdHkgPSByZXF1aXJlKCcuL2lkZW50aXR5Jyk7XG5cbi8qKlxuICogVGhlIGJhc2UgaW1wbGVtZW50YXRpb24gb2YgYHNldFRvU3RyaW5nYCB3aXRob3V0IHN1cHBvcnQgZm9yIGhvdCBsb29wIHNob3J0aW5nLlxuICpcbiAqIEBwcml2YXRlXG4gKiBAcGFyYW0ge0Z1bmN0aW9ufSBmdW5jIFRoZSBmdW5jdGlvbiB0byBtb2RpZnkuXG4gKiBAcGFyYW0ge0Z1bmN0aW9ufSBzdHJpbmcgVGhlIGB0b1N0cmluZ2AgcmVzdWx0LlxuICogQHJldHVybnMge0Z1bmN0aW9ufSBSZXR1cm5zIGBmdW5jYC5cbiAqL1xudmFyIGJhc2VTZXRUb1N0cmluZyA9ICFkZWZpbmVQcm9wZXJ0eSA/IGlkZW50aXR5IDogZnVuY3Rpb24oZnVuYywgc3RyaW5nKSB7XG4gIHJldHVybiBkZWZpbmVQcm9wZXJ0eShmdW5jLCAndG9TdHJpbmcnLCB7XG4gICAgJ2NvbmZpZ3VyYWJsZSc6IHRydWUsXG4gICAgJ2VudW1lcmFibGUnOiBmYWxzZSxcbiAgICAndmFsdWUnOiBjb25zdGFudChzdHJpbmcpLFxuICAgICd3cml0YWJsZSc6IHRydWVcbiAgfSk7XG59O1xuXG5tb2R1bGUuZXhwb3J0cyA9IGJhc2VTZXRUb1N0cmluZztcblxuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vbm9kZV9tb2R1bGVzL2xvZGFzaC9fYmFzZVNldFRvU3RyaW5nLmpzXG4vLyBtb2R1bGUgaWQgPSAuL25vZGVfbW9kdWxlcy9sb2Rhc2gvX2Jhc2VTZXRUb1N0cmluZy5qc1xuLy8gbW9kdWxlIGNodW5rcyA9IDEiLCIvKipcbiAqIFRoZSBiYXNlIGltcGxlbWVudGF0aW9uIG9mIGBfLnNvcnRCeWAgd2hpY2ggdXNlcyBgY29tcGFyZXJgIHRvIGRlZmluZSB0aGVcbiAqIHNvcnQgb3JkZXIgb2YgYGFycmF5YCBhbmQgcmVwbGFjZXMgY3JpdGVyaWEgb2JqZWN0cyB3aXRoIHRoZWlyIGNvcnJlc3BvbmRpbmdcbiAqIHZhbHVlcy5cbiAqXG4gKiBAcHJpdmF0ZVxuICogQHBhcmFtIHtBcnJheX0gYXJyYXkgVGhlIGFycmF5IHRvIHNvcnQuXG4gKiBAcGFyYW0ge0Z1bmN0aW9ufSBjb21wYXJlciBUaGUgZnVuY3Rpb24gdG8gZGVmaW5lIHNvcnQgb3JkZXIuXG4gKiBAcmV0dXJucyB7QXJyYXl9IFJldHVybnMgYGFycmF5YC5cbiAqL1xuZnVuY3Rpb24gYmFzZVNvcnRCeShhcnJheSwgY29tcGFyZXIpIHtcbiAgdmFyIGxlbmd0aCA9IGFycmF5Lmxlbmd0aDtcblxuICBhcnJheS5zb3J0KGNvbXBhcmVyKTtcbiAgd2hpbGUgKGxlbmd0aC0tKSB7XG4gICAgYXJyYXlbbGVuZ3RoXSA9IGFycmF5W2xlbmd0aF0udmFsdWU7XG4gIH1cbiAgcmV0dXJuIGFycmF5O1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGJhc2VTb3J0Qnk7XG5cblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL25vZGVfbW9kdWxlcy9sb2Rhc2gvX2Jhc2VTb3J0QnkuanNcbi8vIG1vZHVsZSBpZCA9IC4vbm9kZV9tb2R1bGVzL2xvZGFzaC9fYmFzZVNvcnRCeS5qc1xuLy8gbW9kdWxlIGNodW5rcyA9IDEiLCIvKipcbiAqIFRoZSBiYXNlIGltcGxlbWVudGF0aW9uIG9mIGBfLnRpbWVzYCB3aXRob3V0IHN1cHBvcnQgZm9yIGl0ZXJhdGVlIHNob3J0aGFuZHNcbiAqIG9yIG1heCBhcnJheSBsZW5ndGggY2hlY2tzLlxuICpcbiAqIEBwcml2YXRlXG4gKiBAcGFyYW0ge251bWJlcn0gbiBUaGUgbnVtYmVyIG9mIHRpbWVzIHRvIGludm9rZSBgaXRlcmF0ZWVgLlxuICogQHBhcmFtIHtGdW5jdGlvbn0gaXRlcmF0ZWUgVGhlIGZ1bmN0aW9uIGludm9rZWQgcGVyIGl0ZXJhdGlvbi5cbiAqIEByZXR1cm5zIHtBcnJheX0gUmV0dXJucyB0aGUgYXJyYXkgb2YgcmVzdWx0cy5cbiAqL1xuZnVuY3Rpb24gYmFzZVRpbWVzKG4sIGl0ZXJhdGVlKSB7XG4gIHZhciBpbmRleCA9IC0xLFxuICAgICAgcmVzdWx0ID0gQXJyYXkobik7XG5cbiAgd2hpbGUgKCsraW5kZXggPCBuKSB7XG4gICAgcmVzdWx0W2luZGV4XSA9IGl0ZXJhdGVlKGluZGV4KTtcbiAgfVxuICByZXR1cm4gcmVzdWx0O1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGJhc2VUaW1lcztcblxuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vbm9kZV9tb2R1bGVzL2xvZGFzaC9fYmFzZVRpbWVzLmpzXG4vLyBtb2R1bGUgaWQgPSAuL25vZGVfbW9kdWxlcy9sb2Rhc2gvX2Jhc2VUaW1lcy5qc1xuLy8gbW9kdWxlIGNodW5rcyA9IDEiLCJ2YXIgU3ltYm9sID0gcmVxdWlyZSgnLi9fU3ltYm9sJyksXG4gICAgYXJyYXlNYXAgPSByZXF1aXJlKCcuL19hcnJheU1hcCcpLFxuICAgIGlzQXJyYXkgPSByZXF1aXJlKCcuL2lzQXJyYXknKSxcbiAgICBpc1N5bWJvbCA9IHJlcXVpcmUoJy4vaXNTeW1ib2wnKTtcblxuLyoqIFVzZWQgYXMgcmVmZXJlbmNlcyBmb3IgdmFyaW91cyBgTnVtYmVyYCBjb25zdGFudHMuICovXG52YXIgSU5GSU5JVFkgPSAxIC8gMDtcblxuLyoqIFVzZWQgdG8gY29udmVydCBzeW1ib2xzIHRvIHByaW1pdGl2ZXMgYW5kIHN0cmluZ3MuICovXG52YXIgc3ltYm9sUHJvdG8gPSBTeW1ib2wgPyBTeW1ib2wucHJvdG90eXBlIDogdW5kZWZpbmVkLFxuICAgIHN5bWJvbFRvU3RyaW5nID0gc3ltYm9sUHJvdG8gPyBzeW1ib2xQcm90by50b1N0cmluZyA6IHVuZGVmaW5lZDtcblxuLyoqXG4gKiBUaGUgYmFzZSBpbXBsZW1lbnRhdGlvbiBvZiBgXy50b1N0cmluZ2Agd2hpY2ggZG9lc24ndCBjb252ZXJ0IG51bGxpc2hcbiAqIHZhbHVlcyB0byBlbXB0eSBzdHJpbmdzLlxuICpcbiAqIEBwcml2YXRlXG4gKiBAcGFyYW0geyp9IHZhbHVlIFRoZSB2YWx1ZSB0byBwcm9jZXNzLlxuICogQHJldHVybnMge3N0cmluZ30gUmV0dXJucyB0aGUgc3RyaW5nLlxuICovXG5mdW5jdGlvbiBiYXNlVG9TdHJpbmcodmFsdWUpIHtcbiAgLy8gRXhpdCBlYXJseSBmb3Igc3RyaW5ncyB0byBhdm9pZCBhIHBlcmZvcm1hbmNlIGhpdCBpbiBzb21lIGVudmlyb25tZW50cy5cbiAgaWYgKHR5cGVvZiB2YWx1ZSA9PSAnc3RyaW5nJykge1xuICAgIHJldHVybiB2YWx1ZTtcbiAgfVxuICBpZiAoaXNBcnJheSh2YWx1ZSkpIHtcbiAgICAvLyBSZWN1cnNpdmVseSBjb252ZXJ0IHZhbHVlcyAoc3VzY2VwdGlibGUgdG8gY2FsbCBzdGFjayBsaW1pdHMpLlxuICAgIHJldHVybiBhcnJheU1hcCh2YWx1ZSwgYmFzZVRvU3RyaW5nKSArICcnO1xuICB9XG4gIGlmIChpc1N5bWJvbCh2YWx1ZSkpIHtcbiAgICByZXR1cm4gc3ltYm9sVG9TdHJpbmcgPyBzeW1ib2xUb1N0cmluZy5jYWxsKHZhbHVlKSA6ICcnO1xuICB9XG4gIHZhciByZXN1bHQgPSAodmFsdWUgKyAnJyk7XG4gIHJldHVybiAocmVzdWx0ID09ICcwJyAmJiAoMSAvIHZhbHVlKSA9PSAtSU5GSU5JVFkpID8gJy0wJyA6IHJlc3VsdDtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBiYXNlVG9TdHJpbmc7XG5cblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL25vZGVfbW9kdWxlcy9sb2Rhc2gvX2Jhc2VUb1N0cmluZy5qc1xuLy8gbW9kdWxlIGlkID0gLi9ub2RlX21vZHVsZXMvbG9kYXNoL19iYXNlVG9TdHJpbmcuanNcbi8vIG1vZHVsZSBjaHVua3MgPSAxIiwiLyoqXG4gKiBUaGUgYmFzZSBpbXBsZW1lbnRhdGlvbiBvZiBgXy51bmFyeWAgd2l0aG91dCBzdXBwb3J0IGZvciBzdG9yaW5nIG1ldGFkYXRhLlxuICpcbiAqIEBwcml2YXRlXG4gKiBAcGFyYW0ge0Z1bmN0aW9ufSBmdW5jIFRoZSBmdW5jdGlvbiB0byBjYXAgYXJndW1lbnRzIGZvci5cbiAqIEByZXR1cm5zIHtGdW5jdGlvbn0gUmV0dXJucyB0aGUgbmV3IGNhcHBlZCBmdW5jdGlvbi5cbiAqL1xuZnVuY3Rpb24gYmFzZVVuYXJ5KGZ1bmMpIHtcbiAgcmV0dXJuIGZ1bmN0aW9uKHZhbHVlKSB7XG4gICAgcmV0dXJuIGZ1bmModmFsdWUpO1xuICB9O1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGJhc2VVbmFyeTtcblxuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vbm9kZV9tb2R1bGVzL2xvZGFzaC9fYmFzZVVuYXJ5LmpzXG4vLyBtb2R1bGUgaWQgPSAuL25vZGVfbW9kdWxlcy9sb2Rhc2gvX2Jhc2VVbmFyeS5qc1xuLy8gbW9kdWxlIGNodW5rcyA9IDEiLCJ2YXIgU2V0Q2FjaGUgPSByZXF1aXJlKCcuL19TZXRDYWNoZScpLFxuICAgIGFycmF5SW5jbHVkZXMgPSByZXF1aXJlKCcuL19hcnJheUluY2x1ZGVzJyksXG4gICAgYXJyYXlJbmNsdWRlc1dpdGggPSByZXF1aXJlKCcuL19hcnJheUluY2x1ZGVzV2l0aCcpLFxuICAgIGNhY2hlSGFzID0gcmVxdWlyZSgnLi9fY2FjaGVIYXMnKSxcbiAgICBjcmVhdGVTZXQgPSByZXF1aXJlKCcuL19jcmVhdGVTZXQnKSxcbiAgICBzZXRUb0FycmF5ID0gcmVxdWlyZSgnLi9fc2V0VG9BcnJheScpO1xuXG4vKiogVXNlZCBhcyB0aGUgc2l6ZSB0byBlbmFibGUgbGFyZ2UgYXJyYXkgb3B0aW1pemF0aW9ucy4gKi9cbnZhciBMQVJHRV9BUlJBWV9TSVpFID0gMjAwO1xuXG4vKipcbiAqIFRoZSBiYXNlIGltcGxlbWVudGF0aW9uIG9mIGBfLnVuaXFCeWAgd2l0aG91dCBzdXBwb3J0IGZvciBpdGVyYXRlZSBzaG9ydGhhbmRzLlxuICpcbiAqIEBwcml2YXRlXG4gKiBAcGFyYW0ge0FycmF5fSBhcnJheSBUaGUgYXJyYXkgdG8gaW5zcGVjdC5cbiAqIEBwYXJhbSB7RnVuY3Rpb259IFtpdGVyYXRlZV0gVGhlIGl0ZXJhdGVlIGludm9rZWQgcGVyIGVsZW1lbnQuXG4gKiBAcGFyYW0ge0Z1bmN0aW9ufSBbY29tcGFyYXRvcl0gVGhlIGNvbXBhcmF0b3IgaW52b2tlZCBwZXIgZWxlbWVudC5cbiAqIEByZXR1cm5zIHtBcnJheX0gUmV0dXJucyB0aGUgbmV3IGR1cGxpY2F0ZSBmcmVlIGFycmF5LlxuICovXG5mdW5jdGlvbiBiYXNlVW5pcShhcnJheSwgaXRlcmF0ZWUsIGNvbXBhcmF0b3IpIHtcbiAgdmFyIGluZGV4ID0gLTEsXG4gICAgICBpbmNsdWRlcyA9IGFycmF5SW5jbHVkZXMsXG4gICAgICBsZW5ndGggPSBhcnJheS5sZW5ndGgsXG4gICAgICBpc0NvbW1vbiA9IHRydWUsXG4gICAgICByZXN1bHQgPSBbXSxcbiAgICAgIHNlZW4gPSByZXN1bHQ7XG5cbiAgaWYgKGNvbXBhcmF0b3IpIHtcbiAgICBpc0NvbW1vbiA9IGZhbHNlO1xuICAgIGluY2x1ZGVzID0gYXJyYXlJbmNsdWRlc1dpdGg7XG4gIH1cbiAgZWxzZSBpZiAobGVuZ3RoID49IExBUkdFX0FSUkFZX1NJWkUpIHtcbiAgICB2YXIgc2V0ID0gaXRlcmF0ZWUgPyBudWxsIDogY3JlYXRlU2V0KGFycmF5KTtcbiAgICBpZiAoc2V0KSB7XG4gICAgICByZXR1cm4gc2V0VG9BcnJheShzZXQpO1xuICAgIH1cbiAgICBpc0NvbW1vbiA9IGZhbHNlO1xuICAgIGluY2x1ZGVzID0gY2FjaGVIYXM7XG4gICAgc2VlbiA9IG5ldyBTZXRDYWNoZTtcbiAgfVxuICBlbHNlIHtcbiAgICBzZWVuID0gaXRlcmF0ZWUgPyBbXSA6IHJlc3VsdDtcbiAgfVxuICBvdXRlcjpcbiAgd2hpbGUgKCsraW5kZXggPCBsZW5ndGgpIHtcbiAgICB2YXIgdmFsdWUgPSBhcnJheVtpbmRleF0sXG4gICAgICAgIGNvbXB1dGVkID0gaXRlcmF0ZWUgPyBpdGVyYXRlZSh2YWx1ZSkgOiB2YWx1ZTtcblxuICAgIHZhbHVlID0gKGNvbXBhcmF0b3IgfHwgdmFsdWUgIT09IDApID8gdmFsdWUgOiAwO1xuICAgIGlmIChpc0NvbW1vbiAmJiBjb21wdXRlZCA9PT0gY29tcHV0ZWQpIHtcbiAgICAgIHZhciBzZWVuSW5kZXggPSBzZWVuLmxlbmd0aDtcbiAgICAgIHdoaWxlIChzZWVuSW5kZXgtLSkge1xuICAgICAgICBpZiAoc2VlbltzZWVuSW5kZXhdID09PSBjb21wdXRlZCkge1xuICAgICAgICAgIGNvbnRpbnVlIG91dGVyO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgICBpZiAoaXRlcmF0ZWUpIHtcbiAgICAgICAgc2Vlbi5wdXNoKGNvbXB1dGVkKTtcbiAgICAgIH1cbiAgICAgIHJlc3VsdC5wdXNoKHZhbHVlKTtcbiAgICB9XG4gICAgZWxzZSBpZiAoIWluY2x1ZGVzKHNlZW4sIGNvbXB1dGVkLCBjb21wYXJhdG9yKSkge1xuICAgICAgaWYgKHNlZW4gIT09IHJlc3VsdCkge1xuICAgICAgICBzZWVuLnB1c2goY29tcHV0ZWQpO1xuICAgICAgfVxuICAgICAgcmVzdWx0LnB1c2godmFsdWUpO1xuICAgIH1cbiAgfVxuICByZXR1cm4gcmVzdWx0O1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGJhc2VVbmlxO1xuXG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9ub2RlX21vZHVsZXMvbG9kYXNoL19iYXNlVW5pcS5qc1xuLy8gbW9kdWxlIGlkID0gLi9ub2RlX21vZHVsZXMvbG9kYXNoL19iYXNlVW5pcS5qc1xuLy8gbW9kdWxlIGNodW5rcyA9IDEiLCIvKipcbiAqIENoZWNrcyBpZiBhIGBjYWNoZWAgdmFsdWUgZm9yIGBrZXlgIGV4aXN0cy5cbiAqXG4gKiBAcHJpdmF0ZVxuICogQHBhcmFtIHtPYmplY3R9IGNhY2hlIFRoZSBjYWNoZSB0byBxdWVyeS5cbiAqIEBwYXJhbSB7c3RyaW5nfSBrZXkgVGhlIGtleSBvZiB0aGUgZW50cnkgdG8gY2hlY2suXG4gKiBAcmV0dXJucyB7Ym9vbGVhbn0gUmV0dXJucyBgdHJ1ZWAgaWYgYW4gZW50cnkgZm9yIGBrZXlgIGV4aXN0cywgZWxzZSBgZmFsc2VgLlxuICovXG5mdW5jdGlvbiBjYWNoZUhhcyhjYWNoZSwga2V5KSB7XG4gIHJldHVybiBjYWNoZS5oYXMoa2V5KTtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBjYWNoZUhhcztcblxuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vbm9kZV9tb2R1bGVzL2xvZGFzaC9fY2FjaGVIYXMuanNcbi8vIG1vZHVsZSBpZCA9IC4vbm9kZV9tb2R1bGVzL2xvZGFzaC9fY2FjaGVIYXMuanNcbi8vIG1vZHVsZSBjaHVua3MgPSAxIiwidmFyIGlzQXJyYXkgPSByZXF1aXJlKCcuL2lzQXJyYXknKSxcbiAgICBpc0tleSA9IHJlcXVpcmUoJy4vX2lzS2V5JyksXG4gICAgc3RyaW5nVG9QYXRoID0gcmVxdWlyZSgnLi9fc3RyaW5nVG9QYXRoJyksXG4gICAgdG9TdHJpbmcgPSByZXF1aXJlKCcuL3RvU3RyaW5nJyk7XG5cbi8qKlxuICogQ2FzdHMgYHZhbHVlYCB0byBhIHBhdGggYXJyYXkgaWYgaXQncyBub3Qgb25lLlxuICpcbiAqIEBwcml2YXRlXG4gKiBAcGFyYW0geyp9IHZhbHVlIFRoZSB2YWx1ZSB0byBpbnNwZWN0LlxuICogQHBhcmFtIHtPYmplY3R9IFtvYmplY3RdIFRoZSBvYmplY3QgdG8gcXVlcnkga2V5cyBvbi5cbiAqIEByZXR1cm5zIHtBcnJheX0gUmV0dXJucyB0aGUgY2FzdCBwcm9wZXJ0eSBwYXRoIGFycmF5LlxuICovXG5mdW5jdGlvbiBjYXN0UGF0aCh2YWx1ZSwgb2JqZWN0KSB7XG4gIGlmIChpc0FycmF5KHZhbHVlKSkge1xuICAgIHJldHVybiB2YWx1ZTtcbiAgfVxuICByZXR1cm4gaXNLZXkodmFsdWUsIG9iamVjdCkgPyBbdmFsdWVdIDogc3RyaW5nVG9QYXRoKHRvU3RyaW5nKHZhbHVlKSk7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gY2FzdFBhdGg7XG5cblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL25vZGVfbW9kdWxlcy9sb2Rhc2gvX2Nhc3RQYXRoLmpzXG4vLyBtb2R1bGUgaWQgPSAuL25vZGVfbW9kdWxlcy9sb2Rhc2gvX2Nhc3RQYXRoLmpzXG4vLyBtb2R1bGUgY2h1bmtzID0gMSIsInZhciBVaW50OEFycmF5ID0gcmVxdWlyZSgnLi9fVWludDhBcnJheScpO1xuXG4vKipcbiAqIENyZWF0ZXMgYSBjbG9uZSBvZiBgYXJyYXlCdWZmZXJgLlxuICpcbiAqIEBwcml2YXRlXG4gKiBAcGFyYW0ge0FycmF5QnVmZmVyfSBhcnJheUJ1ZmZlciBUaGUgYXJyYXkgYnVmZmVyIHRvIGNsb25lLlxuICogQHJldHVybnMge0FycmF5QnVmZmVyfSBSZXR1cm5zIHRoZSBjbG9uZWQgYXJyYXkgYnVmZmVyLlxuICovXG5mdW5jdGlvbiBjbG9uZUFycmF5QnVmZmVyKGFycmF5QnVmZmVyKSB7XG4gIHZhciByZXN1bHQgPSBuZXcgYXJyYXlCdWZmZXIuY29uc3RydWN0b3IoYXJyYXlCdWZmZXIuYnl0ZUxlbmd0aCk7XG4gIG5ldyBVaW50OEFycmF5KHJlc3VsdCkuc2V0KG5ldyBVaW50OEFycmF5KGFycmF5QnVmZmVyKSk7XG4gIHJldHVybiByZXN1bHQ7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gY2xvbmVBcnJheUJ1ZmZlcjtcblxuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vbm9kZV9tb2R1bGVzL2xvZGFzaC9fY2xvbmVBcnJheUJ1ZmZlci5qc1xuLy8gbW9kdWxlIGlkID0gLi9ub2RlX21vZHVsZXMvbG9kYXNoL19jbG9uZUFycmF5QnVmZmVyLmpzXG4vLyBtb2R1bGUgY2h1bmtzID0gMSIsInZhciByb290ID0gcmVxdWlyZSgnLi9fcm9vdCcpO1xuXG4vKiogRGV0ZWN0IGZyZWUgdmFyaWFibGUgYGV4cG9ydHNgLiAqL1xudmFyIGZyZWVFeHBvcnRzID0gdHlwZW9mIGV4cG9ydHMgPT0gJ29iamVjdCcgJiYgZXhwb3J0cyAmJiAhZXhwb3J0cy5ub2RlVHlwZSAmJiBleHBvcnRzO1xuXG4vKiogRGV0ZWN0IGZyZWUgdmFyaWFibGUgYG1vZHVsZWAuICovXG52YXIgZnJlZU1vZHVsZSA9IGZyZWVFeHBvcnRzICYmIHR5cGVvZiBtb2R1bGUgPT0gJ29iamVjdCcgJiYgbW9kdWxlICYmICFtb2R1bGUubm9kZVR5cGUgJiYgbW9kdWxlO1xuXG4vKiogRGV0ZWN0IHRoZSBwb3B1bGFyIENvbW1vbkpTIGV4dGVuc2lvbiBgbW9kdWxlLmV4cG9ydHNgLiAqL1xudmFyIG1vZHVsZUV4cG9ydHMgPSBmcmVlTW9kdWxlICYmIGZyZWVNb2R1bGUuZXhwb3J0cyA9PT0gZnJlZUV4cG9ydHM7XG5cbi8qKiBCdWlsdC1pbiB2YWx1ZSByZWZlcmVuY2VzLiAqL1xudmFyIEJ1ZmZlciA9IG1vZHVsZUV4cG9ydHMgPyByb290LkJ1ZmZlciA6IHVuZGVmaW5lZCxcbiAgICBhbGxvY1Vuc2FmZSA9IEJ1ZmZlciA/IEJ1ZmZlci5hbGxvY1Vuc2FmZSA6IHVuZGVmaW5lZDtcblxuLyoqXG4gKiBDcmVhdGVzIGEgY2xvbmUgb2YgIGBidWZmZXJgLlxuICpcbiAqIEBwcml2YXRlXG4gKiBAcGFyYW0ge0J1ZmZlcn0gYnVmZmVyIFRoZSBidWZmZXIgdG8gY2xvbmUuXG4gKiBAcGFyYW0ge2Jvb2xlYW59IFtpc0RlZXBdIFNwZWNpZnkgYSBkZWVwIGNsb25lLlxuICogQHJldHVybnMge0J1ZmZlcn0gUmV0dXJucyB0aGUgY2xvbmVkIGJ1ZmZlci5cbiAqL1xuZnVuY3Rpb24gY2xvbmVCdWZmZXIoYnVmZmVyLCBpc0RlZXApIHtcbiAgaWYgKGlzRGVlcCkge1xuICAgIHJldHVybiBidWZmZXIuc2xpY2UoKTtcbiAgfVxuICB2YXIgbGVuZ3RoID0gYnVmZmVyLmxlbmd0aCxcbiAgICAgIHJlc3VsdCA9IGFsbG9jVW5zYWZlID8gYWxsb2NVbnNhZmUobGVuZ3RoKSA6IG5ldyBidWZmZXIuY29uc3RydWN0b3IobGVuZ3RoKTtcblxuICBidWZmZXIuY29weShyZXN1bHQpO1xuICByZXR1cm4gcmVzdWx0O1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGNsb25lQnVmZmVyO1xuXG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9ub2RlX21vZHVsZXMvbG9kYXNoL19jbG9uZUJ1ZmZlci5qc1xuLy8gbW9kdWxlIGlkID0gLi9ub2RlX21vZHVsZXMvbG9kYXNoL19jbG9uZUJ1ZmZlci5qc1xuLy8gbW9kdWxlIGNodW5rcyA9IDEiLCJ2YXIgY2xvbmVBcnJheUJ1ZmZlciA9IHJlcXVpcmUoJy4vX2Nsb25lQXJyYXlCdWZmZXInKTtcblxuLyoqXG4gKiBDcmVhdGVzIGEgY2xvbmUgb2YgYGRhdGFWaWV3YC5cbiAqXG4gKiBAcHJpdmF0ZVxuICogQHBhcmFtIHtPYmplY3R9IGRhdGFWaWV3IFRoZSBkYXRhIHZpZXcgdG8gY2xvbmUuXG4gKiBAcGFyYW0ge2Jvb2xlYW59IFtpc0RlZXBdIFNwZWNpZnkgYSBkZWVwIGNsb25lLlxuICogQHJldHVybnMge09iamVjdH0gUmV0dXJucyB0aGUgY2xvbmVkIGRhdGEgdmlldy5cbiAqL1xuZnVuY3Rpb24gY2xvbmVEYXRhVmlldyhkYXRhVmlldywgaXNEZWVwKSB7XG4gIHZhciBidWZmZXIgPSBpc0RlZXAgPyBjbG9uZUFycmF5QnVmZmVyKGRhdGFWaWV3LmJ1ZmZlcikgOiBkYXRhVmlldy5idWZmZXI7XG4gIHJldHVybiBuZXcgZGF0YVZpZXcuY29uc3RydWN0b3IoYnVmZmVyLCBkYXRhVmlldy5ieXRlT2Zmc2V0LCBkYXRhVmlldy5ieXRlTGVuZ3RoKTtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBjbG9uZURhdGFWaWV3O1xuXG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9ub2RlX21vZHVsZXMvbG9kYXNoL19jbG9uZURhdGFWaWV3LmpzXG4vLyBtb2R1bGUgaWQgPSAuL25vZGVfbW9kdWxlcy9sb2Rhc2gvX2Nsb25lRGF0YVZpZXcuanNcbi8vIG1vZHVsZSBjaHVua3MgPSAxIiwiLyoqIFVzZWQgdG8gbWF0Y2ggYFJlZ0V4cGAgZmxhZ3MgZnJvbSB0aGVpciBjb2VyY2VkIHN0cmluZyB2YWx1ZXMuICovXG52YXIgcmVGbGFncyA9IC9cXHcqJC87XG5cbi8qKlxuICogQ3JlYXRlcyBhIGNsb25lIG9mIGByZWdleHBgLlxuICpcbiAqIEBwcml2YXRlXG4gKiBAcGFyYW0ge09iamVjdH0gcmVnZXhwIFRoZSByZWdleHAgdG8gY2xvbmUuXG4gKiBAcmV0dXJucyB7T2JqZWN0fSBSZXR1cm5zIHRoZSBjbG9uZWQgcmVnZXhwLlxuICovXG5mdW5jdGlvbiBjbG9uZVJlZ0V4cChyZWdleHApIHtcbiAgdmFyIHJlc3VsdCA9IG5ldyByZWdleHAuY29uc3RydWN0b3IocmVnZXhwLnNvdXJjZSwgcmVGbGFncy5leGVjKHJlZ2V4cCkpO1xuICByZXN1bHQubGFzdEluZGV4ID0gcmVnZXhwLmxhc3RJbmRleDtcbiAgcmV0dXJuIHJlc3VsdDtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBjbG9uZVJlZ0V4cDtcblxuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vbm9kZV9tb2R1bGVzL2xvZGFzaC9fY2xvbmVSZWdFeHAuanNcbi8vIG1vZHVsZSBpZCA9IC4vbm9kZV9tb2R1bGVzL2xvZGFzaC9fY2xvbmVSZWdFeHAuanNcbi8vIG1vZHVsZSBjaHVua3MgPSAxIiwidmFyIFN5bWJvbCA9IHJlcXVpcmUoJy4vX1N5bWJvbCcpO1xuXG4vKiogVXNlZCB0byBjb252ZXJ0IHN5bWJvbHMgdG8gcHJpbWl0aXZlcyBhbmQgc3RyaW5ncy4gKi9cbnZhciBzeW1ib2xQcm90byA9IFN5bWJvbCA/IFN5bWJvbC5wcm90b3R5cGUgOiB1bmRlZmluZWQsXG4gICAgc3ltYm9sVmFsdWVPZiA9IHN5bWJvbFByb3RvID8gc3ltYm9sUHJvdG8udmFsdWVPZiA6IHVuZGVmaW5lZDtcblxuLyoqXG4gKiBDcmVhdGVzIGEgY2xvbmUgb2YgdGhlIGBzeW1ib2xgIG9iamVjdC5cbiAqXG4gKiBAcHJpdmF0ZVxuICogQHBhcmFtIHtPYmplY3R9IHN5bWJvbCBUaGUgc3ltYm9sIG9iamVjdCB0byBjbG9uZS5cbiAqIEByZXR1cm5zIHtPYmplY3R9IFJldHVybnMgdGhlIGNsb25lZCBzeW1ib2wgb2JqZWN0LlxuICovXG5mdW5jdGlvbiBjbG9uZVN5bWJvbChzeW1ib2wpIHtcbiAgcmV0dXJuIHN5bWJvbFZhbHVlT2YgPyBPYmplY3Qoc3ltYm9sVmFsdWVPZi5jYWxsKHN5bWJvbCkpIDoge307XG59XG5cbm1vZHVsZS5leHBvcnRzID0gY2xvbmVTeW1ib2w7XG5cblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL25vZGVfbW9kdWxlcy9sb2Rhc2gvX2Nsb25lU3ltYm9sLmpzXG4vLyBtb2R1bGUgaWQgPSAuL25vZGVfbW9kdWxlcy9sb2Rhc2gvX2Nsb25lU3ltYm9sLmpzXG4vLyBtb2R1bGUgY2h1bmtzID0gMSIsInZhciBjbG9uZUFycmF5QnVmZmVyID0gcmVxdWlyZSgnLi9fY2xvbmVBcnJheUJ1ZmZlcicpO1xuXG4vKipcbiAqIENyZWF0ZXMgYSBjbG9uZSBvZiBgdHlwZWRBcnJheWAuXG4gKlxuICogQHByaXZhdGVcbiAqIEBwYXJhbSB7T2JqZWN0fSB0eXBlZEFycmF5IFRoZSB0eXBlZCBhcnJheSB0byBjbG9uZS5cbiAqIEBwYXJhbSB7Ym9vbGVhbn0gW2lzRGVlcF0gU3BlY2lmeSBhIGRlZXAgY2xvbmUuXG4gKiBAcmV0dXJucyB7T2JqZWN0fSBSZXR1cm5zIHRoZSBjbG9uZWQgdHlwZWQgYXJyYXkuXG4gKi9cbmZ1bmN0aW9uIGNsb25lVHlwZWRBcnJheSh0eXBlZEFycmF5LCBpc0RlZXApIHtcbiAgdmFyIGJ1ZmZlciA9IGlzRGVlcCA/IGNsb25lQXJyYXlCdWZmZXIodHlwZWRBcnJheS5idWZmZXIpIDogdHlwZWRBcnJheS5idWZmZXI7XG4gIHJldHVybiBuZXcgdHlwZWRBcnJheS5jb25zdHJ1Y3RvcihidWZmZXIsIHR5cGVkQXJyYXkuYnl0ZU9mZnNldCwgdHlwZWRBcnJheS5sZW5ndGgpO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGNsb25lVHlwZWRBcnJheTtcblxuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vbm9kZV9tb2R1bGVzL2xvZGFzaC9fY2xvbmVUeXBlZEFycmF5LmpzXG4vLyBtb2R1bGUgaWQgPSAuL25vZGVfbW9kdWxlcy9sb2Rhc2gvX2Nsb25lVHlwZWRBcnJheS5qc1xuLy8gbW9kdWxlIGNodW5rcyA9IDEiLCJ2YXIgaXNTeW1ib2wgPSByZXF1aXJlKCcuL2lzU3ltYm9sJyk7XG5cbi8qKlxuICogQ29tcGFyZXMgdmFsdWVzIHRvIHNvcnQgdGhlbSBpbiBhc2NlbmRpbmcgb3JkZXIuXG4gKlxuICogQHByaXZhdGVcbiAqIEBwYXJhbSB7Kn0gdmFsdWUgVGhlIHZhbHVlIHRvIGNvbXBhcmUuXG4gKiBAcGFyYW0geyp9IG90aGVyIFRoZSBvdGhlciB2YWx1ZSB0byBjb21wYXJlLlxuICogQHJldHVybnMge251bWJlcn0gUmV0dXJucyB0aGUgc29ydCBvcmRlciBpbmRpY2F0b3IgZm9yIGB2YWx1ZWAuXG4gKi9cbmZ1bmN0aW9uIGNvbXBhcmVBc2NlbmRpbmcodmFsdWUsIG90aGVyKSB7XG4gIGlmICh2YWx1ZSAhPT0gb3RoZXIpIHtcbiAgICB2YXIgdmFsSXNEZWZpbmVkID0gdmFsdWUgIT09IHVuZGVmaW5lZCxcbiAgICAgICAgdmFsSXNOdWxsID0gdmFsdWUgPT09IG51bGwsXG4gICAgICAgIHZhbElzUmVmbGV4aXZlID0gdmFsdWUgPT09IHZhbHVlLFxuICAgICAgICB2YWxJc1N5bWJvbCA9IGlzU3ltYm9sKHZhbHVlKTtcblxuICAgIHZhciBvdGhJc0RlZmluZWQgPSBvdGhlciAhPT0gdW5kZWZpbmVkLFxuICAgICAgICBvdGhJc051bGwgPSBvdGhlciA9PT0gbnVsbCxcbiAgICAgICAgb3RoSXNSZWZsZXhpdmUgPSBvdGhlciA9PT0gb3RoZXIsXG4gICAgICAgIG90aElzU3ltYm9sID0gaXNTeW1ib2wob3RoZXIpO1xuXG4gICAgaWYgKCghb3RoSXNOdWxsICYmICFvdGhJc1N5bWJvbCAmJiAhdmFsSXNTeW1ib2wgJiYgdmFsdWUgPiBvdGhlcikgfHxcbiAgICAgICAgKHZhbElzU3ltYm9sICYmIG90aElzRGVmaW5lZCAmJiBvdGhJc1JlZmxleGl2ZSAmJiAhb3RoSXNOdWxsICYmICFvdGhJc1N5bWJvbCkgfHxcbiAgICAgICAgKHZhbElzTnVsbCAmJiBvdGhJc0RlZmluZWQgJiYgb3RoSXNSZWZsZXhpdmUpIHx8XG4gICAgICAgICghdmFsSXNEZWZpbmVkICYmIG90aElzUmVmbGV4aXZlKSB8fFxuICAgICAgICAhdmFsSXNSZWZsZXhpdmUpIHtcbiAgICAgIHJldHVybiAxO1xuICAgIH1cbiAgICBpZiAoKCF2YWxJc051bGwgJiYgIXZhbElzU3ltYm9sICYmICFvdGhJc1N5bWJvbCAmJiB2YWx1ZSA8IG90aGVyKSB8fFxuICAgICAgICAob3RoSXNTeW1ib2wgJiYgdmFsSXNEZWZpbmVkICYmIHZhbElzUmVmbGV4aXZlICYmICF2YWxJc051bGwgJiYgIXZhbElzU3ltYm9sKSB8fFxuICAgICAgICAob3RoSXNOdWxsICYmIHZhbElzRGVmaW5lZCAmJiB2YWxJc1JlZmxleGl2ZSkgfHxcbiAgICAgICAgKCFvdGhJc0RlZmluZWQgJiYgdmFsSXNSZWZsZXhpdmUpIHx8XG4gICAgICAgICFvdGhJc1JlZmxleGl2ZSkge1xuICAgICAgcmV0dXJuIC0xO1xuICAgIH1cbiAgfVxuICByZXR1cm4gMDtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBjb21wYXJlQXNjZW5kaW5nO1xuXG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9ub2RlX21vZHVsZXMvbG9kYXNoL19jb21wYXJlQXNjZW5kaW5nLmpzXG4vLyBtb2R1bGUgaWQgPSAuL25vZGVfbW9kdWxlcy9sb2Rhc2gvX2NvbXBhcmVBc2NlbmRpbmcuanNcbi8vIG1vZHVsZSBjaHVua3MgPSAxIiwidmFyIGNvbXBhcmVBc2NlbmRpbmcgPSByZXF1aXJlKCcuL19jb21wYXJlQXNjZW5kaW5nJyk7XG5cbi8qKlxuICogVXNlZCBieSBgXy5vcmRlckJ5YCB0byBjb21wYXJlIG11bHRpcGxlIHByb3BlcnRpZXMgb2YgYSB2YWx1ZSB0byBhbm90aGVyXG4gKiBhbmQgc3RhYmxlIHNvcnQgdGhlbS5cbiAqXG4gKiBJZiBgb3JkZXJzYCBpcyB1bnNwZWNpZmllZCwgYWxsIHZhbHVlcyBhcmUgc29ydGVkIGluIGFzY2VuZGluZyBvcmRlci4gT3RoZXJ3aXNlLFxuICogc3BlY2lmeSBhbiBvcmRlciBvZiBcImRlc2NcIiBmb3IgZGVzY2VuZGluZyBvciBcImFzY1wiIGZvciBhc2NlbmRpbmcgc29ydCBvcmRlclxuICogb2YgY29ycmVzcG9uZGluZyB2YWx1ZXMuXG4gKlxuICogQHByaXZhdGVcbiAqIEBwYXJhbSB7T2JqZWN0fSBvYmplY3QgVGhlIG9iamVjdCB0byBjb21wYXJlLlxuICogQHBhcmFtIHtPYmplY3R9IG90aGVyIFRoZSBvdGhlciBvYmplY3QgdG8gY29tcGFyZS5cbiAqIEBwYXJhbSB7Ym9vbGVhbltdfHN0cmluZ1tdfSBvcmRlcnMgVGhlIG9yZGVyIHRvIHNvcnQgYnkgZm9yIGVhY2ggcHJvcGVydHkuXG4gKiBAcmV0dXJucyB7bnVtYmVyfSBSZXR1cm5zIHRoZSBzb3J0IG9yZGVyIGluZGljYXRvciBmb3IgYG9iamVjdGAuXG4gKi9cbmZ1bmN0aW9uIGNvbXBhcmVNdWx0aXBsZShvYmplY3QsIG90aGVyLCBvcmRlcnMpIHtcbiAgdmFyIGluZGV4ID0gLTEsXG4gICAgICBvYmpDcml0ZXJpYSA9IG9iamVjdC5jcml0ZXJpYSxcbiAgICAgIG90aENyaXRlcmlhID0gb3RoZXIuY3JpdGVyaWEsXG4gICAgICBsZW5ndGggPSBvYmpDcml0ZXJpYS5sZW5ndGgsXG4gICAgICBvcmRlcnNMZW5ndGggPSBvcmRlcnMubGVuZ3RoO1xuXG4gIHdoaWxlICgrK2luZGV4IDwgbGVuZ3RoKSB7XG4gICAgdmFyIHJlc3VsdCA9IGNvbXBhcmVBc2NlbmRpbmcob2JqQ3JpdGVyaWFbaW5kZXhdLCBvdGhDcml0ZXJpYVtpbmRleF0pO1xuICAgIGlmIChyZXN1bHQpIHtcbiAgICAgIGlmIChpbmRleCA+PSBvcmRlcnNMZW5ndGgpIHtcbiAgICAgICAgcmV0dXJuIHJlc3VsdDtcbiAgICAgIH1cbiAgICAgIHZhciBvcmRlciA9IG9yZGVyc1tpbmRleF07XG4gICAgICByZXR1cm4gcmVzdWx0ICogKG9yZGVyID09ICdkZXNjJyA/IC0xIDogMSk7XG4gICAgfVxuICB9XG4gIC8vIEZpeGVzIGFuIGBBcnJheSNzb3J0YCBidWcgaW4gdGhlIEpTIGVuZ2luZSBlbWJlZGRlZCBpbiBBZG9iZSBhcHBsaWNhdGlvbnNcbiAgLy8gdGhhdCBjYXVzZXMgaXQsIHVuZGVyIGNlcnRhaW4gY2lyY3Vtc3RhbmNlcywgdG8gcHJvdmlkZSB0aGUgc2FtZSB2YWx1ZSBmb3JcbiAgLy8gYG9iamVjdGAgYW5kIGBvdGhlcmAuIFNlZSBodHRwczovL2dpdGh1Yi5jb20vamFzaGtlbmFzL3VuZGVyc2NvcmUvcHVsbC8xMjQ3XG4gIC8vIGZvciBtb3JlIGRldGFpbHMuXG4gIC8vXG4gIC8vIFRoaXMgYWxzbyBlbnN1cmVzIGEgc3RhYmxlIHNvcnQgaW4gVjggYW5kIG90aGVyIGVuZ2luZXMuXG4gIC8vIFNlZSBodHRwczovL2J1Z3MuY2hyb21pdW0ub3JnL3AvdjgvaXNzdWVzL2RldGFpbD9pZD05MCBmb3IgbW9yZSBkZXRhaWxzLlxuICByZXR1cm4gb2JqZWN0LmluZGV4IC0gb3RoZXIuaW5kZXg7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gY29tcGFyZU11bHRpcGxlO1xuXG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9ub2RlX21vZHVsZXMvbG9kYXNoL19jb21wYXJlTXVsdGlwbGUuanNcbi8vIG1vZHVsZSBpZCA9IC4vbm9kZV9tb2R1bGVzL2xvZGFzaC9fY29tcGFyZU11bHRpcGxlLmpzXG4vLyBtb2R1bGUgY2h1bmtzID0gMSIsIi8qKlxuICogQ29waWVzIHRoZSB2YWx1ZXMgb2YgYHNvdXJjZWAgdG8gYGFycmF5YC5cbiAqXG4gKiBAcHJpdmF0ZVxuICogQHBhcmFtIHtBcnJheX0gc291cmNlIFRoZSBhcnJheSB0byBjb3B5IHZhbHVlcyBmcm9tLlxuICogQHBhcmFtIHtBcnJheX0gW2FycmF5PVtdXSBUaGUgYXJyYXkgdG8gY29weSB2YWx1ZXMgdG8uXG4gKiBAcmV0dXJucyB7QXJyYXl9IFJldHVybnMgYGFycmF5YC5cbiAqL1xuZnVuY3Rpb24gY29weUFycmF5KHNvdXJjZSwgYXJyYXkpIHtcbiAgdmFyIGluZGV4ID0gLTEsXG4gICAgICBsZW5ndGggPSBzb3VyY2UubGVuZ3RoO1xuXG4gIGFycmF5IHx8IChhcnJheSA9IEFycmF5KGxlbmd0aCkpO1xuICB3aGlsZSAoKytpbmRleCA8IGxlbmd0aCkge1xuICAgIGFycmF5W2luZGV4XSA9IHNvdXJjZVtpbmRleF07XG4gIH1cbiAgcmV0dXJuIGFycmF5O1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGNvcHlBcnJheTtcblxuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vbm9kZV9tb2R1bGVzL2xvZGFzaC9fY29weUFycmF5LmpzXG4vLyBtb2R1bGUgaWQgPSAuL25vZGVfbW9kdWxlcy9sb2Rhc2gvX2NvcHlBcnJheS5qc1xuLy8gbW9kdWxlIGNodW5rcyA9IDEiLCJ2YXIgYXNzaWduVmFsdWUgPSByZXF1aXJlKCcuL19hc3NpZ25WYWx1ZScpLFxuICAgIGJhc2VBc3NpZ25WYWx1ZSA9IHJlcXVpcmUoJy4vX2Jhc2VBc3NpZ25WYWx1ZScpO1xuXG4vKipcbiAqIENvcGllcyBwcm9wZXJ0aWVzIG9mIGBzb3VyY2VgIHRvIGBvYmplY3RgLlxuICpcbiAqIEBwcml2YXRlXG4gKiBAcGFyYW0ge09iamVjdH0gc291cmNlIFRoZSBvYmplY3QgdG8gY29weSBwcm9wZXJ0aWVzIGZyb20uXG4gKiBAcGFyYW0ge0FycmF5fSBwcm9wcyBUaGUgcHJvcGVydHkgaWRlbnRpZmllcnMgdG8gY29weS5cbiAqIEBwYXJhbSB7T2JqZWN0fSBbb2JqZWN0PXt9XSBUaGUgb2JqZWN0IHRvIGNvcHkgcHJvcGVydGllcyB0by5cbiAqIEBwYXJhbSB7RnVuY3Rpb259IFtjdXN0b21pemVyXSBUaGUgZnVuY3Rpb24gdG8gY3VzdG9taXplIGNvcGllZCB2YWx1ZXMuXG4gKiBAcmV0dXJucyB7T2JqZWN0fSBSZXR1cm5zIGBvYmplY3RgLlxuICovXG5mdW5jdGlvbiBjb3B5T2JqZWN0KHNvdXJjZSwgcHJvcHMsIG9iamVjdCwgY3VzdG9taXplcikge1xuICB2YXIgaXNOZXcgPSAhb2JqZWN0O1xuICBvYmplY3QgfHwgKG9iamVjdCA9IHt9KTtcblxuICB2YXIgaW5kZXggPSAtMSxcbiAgICAgIGxlbmd0aCA9IHByb3BzLmxlbmd0aDtcblxuICB3aGlsZSAoKytpbmRleCA8IGxlbmd0aCkge1xuICAgIHZhciBrZXkgPSBwcm9wc1tpbmRleF07XG5cbiAgICB2YXIgbmV3VmFsdWUgPSBjdXN0b21pemVyXG4gICAgICA/IGN1c3RvbWl6ZXIob2JqZWN0W2tleV0sIHNvdXJjZVtrZXldLCBrZXksIG9iamVjdCwgc291cmNlKVxuICAgICAgOiB1bmRlZmluZWQ7XG5cbiAgICBpZiAobmV3VmFsdWUgPT09IHVuZGVmaW5lZCkge1xuICAgICAgbmV3VmFsdWUgPSBzb3VyY2Vba2V5XTtcbiAgICB9XG4gICAgaWYgKGlzTmV3KSB7XG4gICAgICBiYXNlQXNzaWduVmFsdWUob2JqZWN0LCBrZXksIG5ld1ZhbHVlKTtcbiAgICB9IGVsc2Uge1xuICAgICAgYXNzaWduVmFsdWUob2JqZWN0LCBrZXksIG5ld1ZhbHVlKTtcbiAgICB9XG4gIH1cbiAgcmV0dXJuIG9iamVjdDtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBjb3B5T2JqZWN0O1xuXG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9ub2RlX21vZHVsZXMvbG9kYXNoL19jb3B5T2JqZWN0LmpzXG4vLyBtb2R1bGUgaWQgPSAuL25vZGVfbW9kdWxlcy9sb2Rhc2gvX2NvcHlPYmplY3QuanNcbi8vIG1vZHVsZSBjaHVua3MgPSAxIiwidmFyIGNvcHlPYmplY3QgPSByZXF1aXJlKCcuL19jb3B5T2JqZWN0JyksXG4gICAgZ2V0U3ltYm9scyA9IHJlcXVpcmUoJy4vX2dldFN5bWJvbHMnKTtcblxuLyoqXG4gKiBDb3BpZXMgb3duIHN5bWJvbHMgb2YgYHNvdXJjZWAgdG8gYG9iamVjdGAuXG4gKlxuICogQHByaXZhdGVcbiAqIEBwYXJhbSB7T2JqZWN0fSBzb3VyY2UgVGhlIG9iamVjdCB0byBjb3B5IHN5bWJvbHMgZnJvbS5cbiAqIEBwYXJhbSB7T2JqZWN0fSBbb2JqZWN0PXt9XSBUaGUgb2JqZWN0IHRvIGNvcHkgc3ltYm9scyB0by5cbiAqIEByZXR1cm5zIHtPYmplY3R9IFJldHVybnMgYG9iamVjdGAuXG4gKi9cbmZ1bmN0aW9uIGNvcHlTeW1ib2xzKHNvdXJjZSwgb2JqZWN0KSB7XG4gIHJldHVybiBjb3B5T2JqZWN0KHNvdXJjZSwgZ2V0U3ltYm9scyhzb3VyY2UpLCBvYmplY3QpO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGNvcHlTeW1ib2xzO1xuXG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9ub2RlX21vZHVsZXMvbG9kYXNoL19jb3B5U3ltYm9scy5qc1xuLy8gbW9kdWxlIGlkID0gLi9ub2RlX21vZHVsZXMvbG9kYXNoL19jb3B5U3ltYm9scy5qc1xuLy8gbW9kdWxlIGNodW5rcyA9IDEiLCJ2YXIgY29weU9iamVjdCA9IHJlcXVpcmUoJy4vX2NvcHlPYmplY3QnKSxcbiAgICBnZXRTeW1ib2xzSW4gPSByZXF1aXJlKCcuL19nZXRTeW1ib2xzSW4nKTtcblxuLyoqXG4gKiBDb3BpZXMgb3duIGFuZCBpbmhlcml0ZWQgc3ltYm9scyBvZiBgc291cmNlYCB0byBgb2JqZWN0YC5cbiAqXG4gKiBAcHJpdmF0ZVxuICogQHBhcmFtIHtPYmplY3R9IHNvdXJjZSBUaGUgb2JqZWN0IHRvIGNvcHkgc3ltYm9scyBmcm9tLlxuICogQHBhcmFtIHtPYmplY3R9IFtvYmplY3Q9e31dIFRoZSBvYmplY3QgdG8gY29weSBzeW1ib2xzIHRvLlxuICogQHJldHVybnMge09iamVjdH0gUmV0dXJucyBgb2JqZWN0YC5cbiAqL1xuZnVuY3Rpb24gY29weVN5bWJvbHNJbihzb3VyY2UsIG9iamVjdCkge1xuICByZXR1cm4gY29weU9iamVjdChzb3VyY2UsIGdldFN5bWJvbHNJbihzb3VyY2UpLCBvYmplY3QpO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGNvcHlTeW1ib2xzSW47XG5cblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL25vZGVfbW9kdWxlcy9sb2Rhc2gvX2NvcHlTeW1ib2xzSW4uanNcbi8vIG1vZHVsZSBpZCA9IC4vbm9kZV9tb2R1bGVzL2xvZGFzaC9fY29weVN5bWJvbHNJbi5qc1xuLy8gbW9kdWxlIGNodW5rcyA9IDEiLCJ2YXIgcm9vdCA9IHJlcXVpcmUoJy4vX3Jvb3QnKTtcblxuLyoqIFVzZWQgdG8gZGV0ZWN0IG92ZXJyZWFjaGluZyBjb3JlLWpzIHNoaW1zLiAqL1xudmFyIGNvcmVKc0RhdGEgPSByb290WydfX2NvcmUtanNfc2hhcmVkX18nXTtcblxubW9kdWxlLmV4cG9ydHMgPSBjb3JlSnNEYXRhO1xuXG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9ub2RlX21vZHVsZXMvbG9kYXNoL19jb3JlSnNEYXRhLmpzXG4vLyBtb2R1bGUgaWQgPSAuL25vZGVfbW9kdWxlcy9sb2Rhc2gvX2NvcmVKc0RhdGEuanNcbi8vIG1vZHVsZSBjaHVua3MgPSAxIiwidmFyIGlzQXJyYXlMaWtlID0gcmVxdWlyZSgnLi9pc0FycmF5TGlrZScpO1xuXG4vKipcbiAqIENyZWF0ZXMgYSBgYmFzZUVhY2hgIG9yIGBiYXNlRWFjaFJpZ2h0YCBmdW5jdGlvbi5cbiAqXG4gKiBAcHJpdmF0ZVxuICogQHBhcmFtIHtGdW5jdGlvbn0gZWFjaEZ1bmMgVGhlIGZ1bmN0aW9uIHRvIGl0ZXJhdGUgb3ZlciBhIGNvbGxlY3Rpb24uXG4gKiBAcGFyYW0ge2Jvb2xlYW59IFtmcm9tUmlnaHRdIFNwZWNpZnkgaXRlcmF0aW5nIGZyb20gcmlnaHQgdG8gbGVmdC5cbiAqIEByZXR1cm5zIHtGdW5jdGlvbn0gUmV0dXJucyB0aGUgbmV3IGJhc2UgZnVuY3Rpb24uXG4gKi9cbmZ1bmN0aW9uIGNyZWF0ZUJhc2VFYWNoKGVhY2hGdW5jLCBmcm9tUmlnaHQpIHtcbiAgcmV0dXJuIGZ1bmN0aW9uKGNvbGxlY3Rpb24sIGl0ZXJhdGVlKSB7XG4gICAgaWYgKGNvbGxlY3Rpb24gPT0gbnVsbCkge1xuICAgICAgcmV0dXJuIGNvbGxlY3Rpb247XG4gICAgfVxuICAgIGlmICghaXNBcnJheUxpa2UoY29sbGVjdGlvbikpIHtcbiAgICAgIHJldHVybiBlYWNoRnVuYyhjb2xsZWN0aW9uLCBpdGVyYXRlZSk7XG4gICAgfVxuICAgIHZhciBsZW5ndGggPSBjb2xsZWN0aW9uLmxlbmd0aCxcbiAgICAgICAgaW5kZXggPSBmcm9tUmlnaHQgPyBsZW5ndGggOiAtMSxcbiAgICAgICAgaXRlcmFibGUgPSBPYmplY3QoY29sbGVjdGlvbik7XG5cbiAgICB3aGlsZSAoKGZyb21SaWdodCA/IGluZGV4LS0gOiArK2luZGV4IDwgbGVuZ3RoKSkge1xuICAgICAgaWYgKGl0ZXJhdGVlKGl0ZXJhYmxlW2luZGV4XSwgaW5kZXgsIGl0ZXJhYmxlKSA9PT0gZmFsc2UpIHtcbiAgICAgICAgYnJlYWs7XG4gICAgICB9XG4gICAgfVxuICAgIHJldHVybiBjb2xsZWN0aW9uO1xuICB9O1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGNyZWF0ZUJhc2VFYWNoO1xuXG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9ub2RlX21vZHVsZXMvbG9kYXNoL19jcmVhdGVCYXNlRWFjaC5qc1xuLy8gbW9kdWxlIGlkID0gLi9ub2RlX21vZHVsZXMvbG9kYXNoL19jcmVhdGVCYXNlRWFjaC5qc1xuLy8gbW9kdWxlIGNodW5rcyA9IDEiLCIvKipcbiAqIENyZWF0ZXMgYSBiYXNlIGZ1bmN0aW9uIGZvciBtZXRob2RzIGxpa2UgYF8uZm9ySW5gIGFuZCBgXy5mb3JPd25gLlxuICpcbiAqIEBwcml2YXRlXG4gKiBAcGFyYW0ge2Jvb2xlYW59IFtmcm9tUmlnaHRdIFNwZWNpZnkgaXRlcmF0aW5nIGZyb20gcmlnaHQgdG8gbGVmdC5cbiAqIEByZXR1cm5zIHtGdW5jdGlvbn0gUmV0dXJucyB0aGUgbmV3IGJhc2UgZnVuY3Rpb24uXG4gKi9cbmZ1bmN0aW9uIGNyZWF0ZUJhc2VGb3IoZnJvbVJpZ2h0KSB7XG4gIHJldHVybiBmdW5jdGlvbihvYmplY3QsIGl0ZXJhdGVlLCBrZXlzRnVuYykge1xuICAgIHZhciBpbmRleCA9IC0xLFxuICAgICAgICBpdGVyYWJsZSA9IE9iamVjdChvYmplY3QpLFxuICAgICAgICBwcm9wcyA9IGtleXNGdW5jKG9iamVjdCksXG4gICAgICAgIGxlbmd0aCA9IHByb3BzLmxlbmd0aDtcblxuICAgIHdoaWxlIChsZW5ndGgtLSkge1xuICAgICAgdmFyIGtleSA9IHByb3BzW2Zyb21SaWdodCA/IGxlbmd0aCA6ICsraW5kZXhdO1xuICAgICAgaWYgKGl0ZXJhdGVlKGl0ZXJhYmxlW2tleV0sIGtleSwgaXRlcmFibGUpID09PSBmYWxzZSkge1xuICAgICAgICBicmVhaztcbiAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuIG9iamVjdDtcbiAgfTtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBjcmVhdGVCYXNlRm9yO1xuXG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9ub2RlX21vZHVsZXMvbG9kYXNoL19jcmVhdGVCYXNlRm9yLmpzXG4vLyBtb2R1bGUgaWQgPSAuL25vZGVfbW9kdWxlcy9sb2Rhc2gvX2NyZWF0ZUJhc2VGb3IuanNcbi8vIG1vZHVsZSBjaHVua3MgPSAxIiwidmFyIFNldCA9IHJlcXVpcmUoJy4vX1NldCcpLFxuICAgIG5vb3AgPSByZXF1aXJlKCcuL25vb3AnKSxcbiAgICBzZXRUb0FycmF5ID0gcmVxdWlyZSgnLi9fc2V0VG9BcnJheScpO1xuXG4vKiogVXNlZCBhcyByZWZlcmVuY2VzIGZvciB2YXJpb3VzIGBOdW1iZXJgIGNvbnN0YW50cy4gKi9cbnZhciBJTkZJTklUWSA9IDEgLyAwO1xuXG4vKipcbiAqIENyZWF0ZXMgYSBzZXQgb2JqZWN0IG9mIGB2YWx1ZXNgLlxuICpcbiAqIEBwcml2YXRlXG4gKiBAcGFyYW0ge0FycmF5fSB2YWx1ZXMgVGhlIHZhbHVlcyB0byBhZGQgdG8gdGhlIHNldC5cbiAqIEByZXR1cm5zIHtPYmplY3R9IFJldHVybnMgdGhlIG5ldyBzZXQuXG4gKi9cbnZhciBjcmVhdGVTZXQgPSAhKFNldCAmJiAoMSAvIHNldFRvQXJyYXkobmV3IFNldChbLC0wXSkpWzFdKSA9PSBJTkZJTklUWSkgPyBub29wIDogZnVuY3Rpb24odmFsdWVzKSB7XG4gIHJldHVybiBuZXcgU2V0KHZhbHVlcyk7XG59O1xuXG5tb2R1bGUuZXhwb3J0cyA9IGNyZWF0ZVNldDtcblxuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vbm9kZV9tb2R1bGVzL2xvZGFzaC9fY3JlYXRlU2V0LmpzXG4vLyBtb2R1bGUgaWQgPSAuL25vZGVfbW9kdWxlcy9sb2Rhc2gvX2NyZWF0ZVNldC5qc1xuLy8gbW9kdWxlIGNodW5rcyA9IDEiLCJ2YXIgZ2V0TmF0aXZlID0gcmVxdWlyZSgnLi9fZ2V0TmF0aXZlJyk7XG5cbnZhciBkZWZpbmVQcm9wZXJ0eSA9IChmdW5jdGlvbigpIHtcbiAgdHJ5IHtcbiAgICB2YXIgZnVuYyA9IGdldE5hdGl2ZShPYmplY3QsICdkZWZpbmVQcm9wZXJ0eScpO1xuICAgIGZ1bmMoe30sICcnLCB7fSk7XG4gICAgcmV0dXJuIGZ1bmM7XG4gIH0gY2F0Y2ggKGUpIHt9XG59KCkpO1xuXG5tb2R1bGUuZXhwb3J0cyA9IGRlZmluZVByb3BlcnR5O1xuXG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9ub2RlX21vZHVsZXMvbG9kYXNoL19kZWZpbmVQcm9wZXJ0eS5qc1xuLy8gbW9kdWxlIGlkID0gLi9ub2RlX21vZHVsZXMvbG9kYXNoL19kZWZpbmVQcm9wZXJ0eS5qc1xuLy8gbW9kdWxlIGNodW5rcyA9IDEiLCJ2YXIgU2V0Q2FjaGUgPSByZXF1aXJlKCcuL19TZXRDYWNoZScpLFxuICAgIGFycmF5U29tZSA9IHJlcXVpcmUoJy4vX2FycmF5U29tZScpLFxuICAgIGNhY2hlSGFzID0gcmVxdWlyZSgnLi9fY2FjaGVIYXMnKTtcblxuLyoqIFVzZWQgdG8gY29tcG9zZSBiaXRtYXNrcyBmb3IgdmFsdWUgY29tcGFyaXNvbnMuICovXG52YXIgQ09NUEFSRV9QQVJUSUFMX0ZMQUcgPSAxLFxuICAgIENPTVBBUkVfVU5PUkRFUkVEX0ZMQUcgPSAyO1xuXG4vKipcbiAqIEEgc3BlY2lhbGl6ZWQgdmVyc2lvbiBvZiBgYmFzZUlzRXF1YWxEZWVwYCBmb3IgYXJyYXlzIHdpdGggc3VwcG9ydCBmb3JcbiAqIHBhcnRpYWwgZGVlcCBjb21wYXJpc29ucy5cbiAqXG4gKiBAcHJpdmF0ZVxuICogQHBhcmFtIHtBcnJheX0gYXJyYXkgVGhlIGFycmF5IHRvIGNvbXBhcmUuXG4gKiBAcGFyYW0ge0FycmF5fSBvdGhlciBUaGUgb3RoZXIgYXJyYXkgdG8gY29tcGFyZS5cbiAqIEBwYXJhbSB7bnVtYmVyfSBiaXRtYXNrIFRoZSBiaXRtYXNrIGZsYWdzLiBTZWUgYGJhc2VJc0VxdWFsYCBmb3IgbW9yZSBkZXRhaWxzLlxuICogQHBhcmFtIHtGdW5jdGlvbn0gY3VzdG9taXplciBUaGUgZnVuY3Rpb24gdG8gY3VzdG9taXplIGNvbXBhcmlzb25zLlxuICogQHBhcmFtIHtGdW5jdGlvbn0gZXF1YWxGdW5jIFRoZSBmdW5jdGlvbiB0byBkZXRlcm1pbmUgZXF1aXZhbGVudHMgb2YgdmFsdWVzLlxuICogQHBhcmFtIHtPYmplY3R9IHN0YWNrIFRyYWNrcyB0cmF2ZXJzZWQgYGFycmF5YCBhbmQgYG90aGVyYCBvYmplY3RzLlxuICogQHJldHVybnMge2Jvb2xlYW59IFJldHVybnMgYHRydWVgIGlmIHRoZSBhcnJheXMgYXJlIGVxdWl2YWxlbnQsIGVsc2UgYGZhbHNlYC5cbiAqL1xuZnVuY3Rpb24gZXF1YWxBcnJheXMoYXJyYXksIG90aGVyLCBiaXRtYXNrLCBjdXN0b21pemVyLCBlcXVhbEZ1bmMsIHN0YWNrKSB7XG4gIHZhciBpc1BhcnRpYWwgPSBiaXRtYXNrICYgQ09NUEFSRV9QQVJUSUFMX0ZMQUcsXG4gICAgICBhcnJMZW5ndGggPSBhcnJheS5sZW5ndGgsXG4gICAgICBvdGhMZW5ndGggPSBvdGhlci5sZW5ndGg7XG5cbiAgaWYgKGFyckxlbmd0aCAhPSBvdGhMZW5ndGggJiYgIShpc1BhcnRpYWwgJiYgb3RoTGVuZ3RoID4gYXJyTGVuZ3RoKSkge1xuICAgIHJldHVybiBmYWxzZTtcbiAgfVxuICAvLyBBc3N1bWUgY3ljbGljIHZhbHVlcyBhcmUgZXF1YWwuXG4gIHZhciBzdGFja2VkID0gc3RhY2suZ2V0KGFycmF5KTtcbiAgaWYgKHN0YWNrZWQgJiYgc3RhY2suZ2V0KG90aGVyKSkge1xuICAgIHJldHVybiBzdGFja2VkID09IG90aGVyO1xuICB9XG4gIHZhciBpbmRleCA9IC0xLFxuICAgICAgcmVzdWx0ID0gdHJ1ZSxcbiAgICAgIHNlZW4gPSAoYml0bWFzayAmIENPTVBBUkVfVU5PUkRFUkVEX0ZMQUcpID8gbmV3IFNldENhY2hlIDogdW5kZWZpbmVkO1xuXG4gIHN0YWNrLnNldChhcnJheSwgb3RoZXIpO1xuICBzdGFjay5zZXQob3RoZXIsIGFycmF5KTtcblxuICAvLyBJZ25vcmUgbm9uLWluZGV4IHByb3BlcnRpZXMuXG4gIHdoaWxlICgrK2luZGV4IDwgYXJyTGVuZ3RoKSB7XG4gICAgdmFyIGFyclZhbHVlID0gYXJyYXlbaW5kZXhdLFxuICAgICAgICBvdGhWYWx1ZSA9IG90aGVyW2luZGV4XTtcblxuICAgIGlmIChjdXN0b21pemVyKSB7XG4gICAgICB2YXIgY29tcGFyZWQgPSBpc1BhcnRpYWxcbiAgICAgICAgPyBjdXN0b21pemVyKG90aFZhbHVlLCBhcnJWYWx1ZSwgaW5kZXgsIG90aGVyLCBhcnJheSwgc3RhY2spXG4gICAgICAgIDogY3VzdG9taXplcihhcnJWYWx1ZSwgb3RoVmFsdWUsIGluZGV4LCBhcnJheSwgb3RoZXIsIHN0YWNrKTtcbiAgICB9XG4gICAgaWYgKGNvbXBhcmVkICE9PSB1bmRlZmluZWQpIHtcbiAgICAgIGlmIChjb21wYXJlZCkge1xuICAgICAgICBjb250aW51ZTtcbiAgICAgIH1cbiAgICAgIHJlc3VsdCA9IGZhbHNlO1xuICAgICAgYnJlYWs7XG4gICAgfVxuICAgIC8vIFJlY3Vyc2l2ZWx5IGNvbXBhcmUgYXJyYXlzIChzdXNjZXB0aWJsZSB0byBjYWxsIHN0YWNrIGxpbWl0cykuXG4gICAgaWYgKHNlZW4pIHtcbiAgICAgIGlmICghYXJyYXlTb21lKG90aGVyLCBmdW5jdGlvbihvdGhWYWx1ZSwgb3RoSW5kZXgpIHtcbiAgICAgICAgICAgIGlmICghY2FjaGVIYXMoc2Vlbiwgb3RoSW5kZXgpICYmXG4gICAgICAgICAgICAgICAgKGFyclZhbHVlID09PSBvdGhWYWx1ZSB8fCBlcXVhbEZ1bmMoYXJyVmFsdWUsIG90aFZhbHVlLCBiaXRtYXNrLCBjdXN0b21pemVyLCBzdGFjaykpKSB7XG4gICAgICAgICAgICAgIHJldHVybiBzZWVuLnB1c2gob3RoSW5kZXgpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgIH0pKSB7XG4gICAgICAgIHJlc3VsdCA9IGZhbHNlO1xuICAgICAgICBicmVhaztcbiAgICAgIH1cbiAgICB9IGVsc2UgaWYgKCEoXG4gICAgICAgICAgYXJyVmFsdWUgPT09IG90aFZhbHVlIHx8XG4gICAgICAgICAgICBlcXVhbEZ1bmMoYXJyVmFsdWUsIG90aFZhbHVlLCBiaXRtYXNrLCBjdXN0b21pemVyLCBzdGFjaylcbiAgICAgICAgKSkge1xuICAgICAgcmVzdWx0ID0gZmFsc2U7XG4gICAgICBicmVhaztcbiAgICB9XG4gIH1cbiAgc3RhY2tbJ2RlbGV0ZSddKGFycmF5KTtcbiAgc3RhY2tbJ2RlbGV0ZSddKG90aGVyKTtcbiAgcmV0dXJuIHJlc3VsdDtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBlcXVhbEFycmF5cztcblxuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vbm9kZV9tb2R1bGVzL2xvZGFzaC9fZXF1YWxBcnJheXMuanNcbi8vIG1vZHVsZSBpZCA9IC4vbm9kZV9tb2R1bGVzL2xvZGFzaC9fZXF1YWxBcnJheXMuanNcbi8vIG1vZHVsZSBjaHVua3MgPSAxIiwidmFyIFN5bWJvbCA9IHJlcXVpcmUoJy4vX1N5bWJvbCcpLFxuICAgIFVpbnQ4QXJyYXkgPSByZXF1aXJlKCcuL19VaW50OEFycmF5JyksXG4gICAgZXEgPSByZXF1aXJlKCcuL2VxJyksXG4gICAgZXF1YWxBcnJheXMgPSByZXF1aXJlKCcuL19lcXVhbEFycmF5cycpLFxuICAgIG1hcFRvQXJyYXkgPSByZXF1aXJlKCcuL19tYXBUb0FycmF5JyksXG4gICAgc2V0VG9BcnJheSA9IHJlcXVpcmUoJy4vX3NldFRvQXJyYXknKTtcblxuLyoqIFVzZWQgdG8gY29tcG9zZSBiaXRtYXNrcyBmb3IgdmFsdWUgY29tcGFyaXNvbnMuICovXG52YXIgQ09NUEFSRV9QQVJUSUFMX0ZMQUcgPSAxLFxuICAgIENPTVBBUkVfVU5PUkRFUkVEX0ZMQUcgPSAyO1xuXG4vKiogYE9iamVjdCN0b1N0cmluZ2AgcmVzdWx0IHJlZmVyZW5jZXMuICovXG52YXIgYm9vbFRhZyA9ICdbb2JqZWN0IEJvb2xlYW5dJyxcbiAgICBkYXRlVGFnID0gJ1tvYmplY3QgRGF0ZV0nLFxuICAgIGVycm9yVGFnID0gJ1tvYmplY3QgRXJyb3JdJyxcbiAgICBtYXBUYWcgPSAnW29iamVjdCBNYXBdJyxcbiAgICBudW1iZXJUYWcgPSAnW29iamVjdCBOdW1iZXJdJyxcbiAgICByZWdleHBUYWcgPSAnW29iamVjdCBSZWdFeHBdJyxcbiAgICBzZXRUYWcgPSAnW29iamVjdCBTZXRdJyxcbiAgICBzdHJpbmdUYWcgPSAnW29iamVjdCBTdHJpbmddJyxcbiAgICBzeW1ib2xUYWcgPSAnW29iamVjdCBTeW1ib2xdJztcblxudmFyIGFycmF5QnVmZmVyVGFnID0gJ1tvYmplY3QgQXJyYXlCdWZmZXJdJyxcbiAgICBkYXRhVmlld1RhZyA9ICdbb2JqZWN0IERhdGFWaWV3XSc7XG5cbi8qKiBVc2VkIHRvIGNvbnZlcnQgc3ltYm9scyB0byBwcmltaXRpdmVzIGFuZCBzdHJpbmdzLiAqL1xudmFyIHN5bWJvbFByb3RvID0gU3ltYm9sID8gU3ltYm9sLnByb3RvdHlwZSA6IHVuZGVmaW5lZCxcbiAgICBzeW1ib2xWYWx1ZU9mID0gc3ltYm9sUHJvdG8gPyBzeW1ib2xQcm90by52YWx1ZU9mIDogdW5kZWZpbmVkO1xuXG4vKipcbiAqIEEgc3BlY2lhbGl6ZWQgdmVyc2lvbiBvZiBgYmFzZUlzRXF1YWxEZWVwYCBmb3IgY29tcGFyaW5nIG9iamVjdHMgb2ZcbiAqIHRoZSBzYW1lIGB0b1N0cmluZ1RhZ2AuXG4gKlxuICogKipOb3RlOioqIFRoaXMgZnVuY3Rpb24gb25seSBzdXBwb3J0cyBjb21wYXJpbmcgdmFsdWVzIHdpdGggdGFncyBvZlxuICogYEJvb2xlYW5gLCBgRGF0ZWAsIGBFcnJvcmAsIGBOdW1iZXJgLCBgUmVnRXhwYCwgb3IgYFN0cmluZ2AuXG4gKlxuICogQHByaXZhdGVcbiAqIEBwYXJhbSB7T2JqZWN0fSBvYmplY3QgVGhlIG9iamVjdCB0byBjb21wYXJlLlxuICogQHBhcmFtIHtPYmplY3R9IG90aGVyIFRoZSBvdGhlciBvYmplY3QgdG8gY29tcGFyZS5cbiAqIEBwYXJhbSB7c3RyaW5nfSB0YWcgVGhlIGB0b1N0cmluZ1RhZ2Agb2YgdGhlIG9iamVjdHMgdG8gY29tcGFyZS5cbiAqIEBwYXJhbSB7bnVtYmVyfSBiaXRtYXNrIFRoZSBiaXRtYXNrIGZsYWdzLiBTZWUgYGJhc2VJc0VxdWFsYCBmb3IgbW9yZSBkZXRhaWxzLlxuICogQHBhcmFtIHtGdW5jdGlvbn0gY3VzdG9taXplciBUaGUgZnVuY3Rpb24gdG8gY3VzdG9taXplIGNvbXBhcmlzb25zLlxuICogQHBhcmFtIHtGdW5jdGlvbn0gZXF1YWxGdW5jIFRoZSBmdW5jdGlvbiB0byBkZXRlcm1pbmUgZXF1aXZhbGVudHMgb2YgdmFsdWVzLlxuICogQHBhcmFtIHtPYmplY3R9IHN0YWNrIFRyYWNrcyB0cmF2ZXJzZWQgYG9iamVjdGAgYW5kIGBvdGhlcmAgb2JqZWN0cy5cbiAqIEByZXR1cm5zIHtib29sZWFufSBSZXR1cm5zIGB0cnVlYCBpZiB0aGUgb2JqZWN0cyBhcmUgZXF1aXZhbGVudCwgZWxzZSBgZmFsc2VgLlxuICovXG5mdW5jdGlvbiBlcXVhbEJ5VGFnKG9iamVjdCwgb3RoZXIsIHRhZywgYml0bWFzaywgY3VzdG9taXplciwgZXF1YWxGdW5jLCBzdGFjaykge1xuICBzd2l0Y2ggKHRhZykge1xuICAgIGNhc2UgZGF0YVZpZXdUYWc6XG4gICAgICBpZiAoKG9iamVjdC5ieXRlTGVuZ3RoICE9IG90aGVyLmJ5dGVMZW5ndGgpIHx8XG4gICAgICAgICAgKG9iamVjdC5ieXRlT2Zmc2V0ICE9IG90aGVyLmJ5dGVPZmZzZXQpKSB7XG4gICAgICAgIHJldHVybiBmYWxzZTtcbiAgICAgIH1cbiAgICAgIG9iamVjdCA9IG9iamVjdC5idWZmZXI7XG4gICAgICBvdGhlciA9IG90aGVyLmJ1ZmZlcjtcblxuICAgIGNhc2UgYXJyYXlCdWZmZXJUYWc6XG4gICAgICBpZiAoKG9iamVjdC5ieXRlTGVuZ3RoICE9IG90aGVyLmJ5dGVMZW5ndGgpIHx8XG4gICAgICAgICAgIWVxdWFsRnVuYyhuZXcgVWludDhBcnJheShvYmplY3QpLCBuZXcgVWludDhBcnJheShvdGhlcikpKSB7XG4gICAgICAgIHJldHVybiBmYWxzZTtcbiAgICAgIH1cbiAgICAgIHJldHVybiB0cnVlO1xuXG4gICAgY2FzZSBib29sVGFnOlxuICAgIGNhc2UgZGF0ZVRhZzpcbiAgICBjYXNlIG51bWJlclRhZzpcbiAgICAgIC8vIENvZXJjZSBib29sZWFucyB0byBgMWAgb3IgYDBgIGFuZCBkYXRlcyB0byBtaWxsaXNlY29uZHMuXG4gICAgICAvLyBJbnZhbGlkIGRhdGVzIGFyZSBjb2VyY2VkIHRvIGBOYU5gLlxuICAgICAgcmV0dXJuIGVxKCtvYmplY3QsICtvdGhlcik7XG5cbiAgICBjYXNlIGVycm9yVGFnOlxuICAgICAgcmV0dXJuIG9iamVjdC5uYW1lID09IG90aGVyLm5hbWUgJiYgb2JqZWN0Lm1lc3NhZ2UgPT0gb3RoZXIubWVzc2FnZTtcblxuICAgIGNhc2UgcmVnZXhwVGFnOlxuICAgIGNhc2Ugc3RyaW5nVGFnOlxuICAgICAgLy8gQ29lcmNlIHJlZ2V4ZXMgdG8gc3RyaW5ncyBhbmQgdHJlYXQgc3RyaW5ncywgcHJpbWl0aXZlcyBhbmQgb2JqZWN0cyxcbiAgICAgIC8vIGFzIGVxdWFsLiBTZWUgaHR0cDovL3d3dy5lY21hLWludGVybmF0aW9uYWwub3JnL2VjbWEtMjYyLzcuMC8jc2VjLXJlZ2V4cC5wcm90b3R5cGUudG9zdHJpbmdcbiAgICAgIC8vIGZvciBtb3JlIGRldGFpbHMuXG4gICAgICByZXR1cm4gb2JqZWN0ID09IChvdGhlciArICcnKTtcblxuICAgIGNhc2UgbWFwVGFnOlxuICAgICAgdmFyIGNvbnZlcnQgPSBtYXBUb0FycmF5O1xuXG4gICAgY2FzZSBzZXRUYWc6XG4gICAgICB2YXIgaXNQYXJ0aWFsID0gYml0bWFzayAmIENPTVBBUkVfUEFSVElBTF9GTEFHO1xuICAgICAgY29udmVydCB8fCAoY29udmVydCA9IHNldFRvQXJyYXkpO1xuXG4gICAgICBpZiAob2JqZWN0LnNpemUgIT0gb3RoZXIuc2l6ZSAmJiAhaXNQYXJ0aWFsKSB7XG4gICAgICAgIHJldHVybiBmYWxzZTtcbiAgICAgIH1cbiAgICAgIC8vIEFzc3VtZSBjeWNsaWMgdmFsdWVzIGFyZSBlcXVhbC5cbiAgICAgIHZhciBzdGFja2VkID0gc3RhY2suZ2V0KG9iamVjdCk7XG4gICAgICBpZiAoc3RhY2tlZCkge1xuICAgICAgICByZXR1cm4gc3RhY2tlZCA9PSBvdGhlcjtcbiAgICAgIH1cbiAgICAgIGJpdG1hc2sgfD0gQ09NUEFSRV9VTk9SREVSRURfRkxBRztcblxuICAgICAgLy8gUmVjdXJzaXZlbHkgY29tcGFyZSBvYmplY3RzIChzdXNjZXB0aWJsZSB0byBjYWxsIHN0YWNrIGxpbWl0cykuXG4gICAgICBzdGFjay5zZXQob2JqZWN0LCBvdGhlcik7XG4gICAgICB2YXIgcmVzdWx0ID0gZXF1YWxBcnJheXMoY29udmVydChvYmplY3QpLCBjb252ZXJ0KG90aGVyKSwgYml0bWFzaywgY3VzdG9taXplciwgZXF1YWxGdW5jLCBzdGFjayk7XG4gICAgICBzdGFja1snZGVsZXRlJ10ob2JqZWN0KTtcbiAgICAgIHJldHVybiByZXN1bHQ7XG5cbiAgICBjYXNlIHN5bWJvbFRhZzpcbiAgICAgIGlmIChzeW1ib2xWYWx1ZU9mKSB7XG4gICAgICAgIHJldHVybiBzeW1ib2xWYWx1ZU9mLmNhbGwob2JqZWN0KSA9PSBzeW1ib2xWYWx1ZU9mLmNhbGwob3RoZXIpO1xuICAgICAgfVxuICB9XG4gIHJldHVybiBmYWxzZTtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBlcXVhbEJ5VGFnO1xuXG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9ub2RlX21vZHVsZXMvbG9kYXNoL19lcXVhbEJ5VGFnLmpzXG4vLyBtb2R1bGUgaWQgPSAuL25vZGVfbW9kdWxlcy9sb2Rhc2gvX2VxdWFsQnlUYWcuanNcbi8vIG1vZHVsZSBjaHVua3MgPSAxIiwidmFyIGdldEFsbEtleXMgPSByZXF1aXJlKCcuL19nZXRBbGxLZXlzJyk7XG5cbi8qKiBVc2VkIHRvIGNvbXBvc2UgYml0bWFza3MgZm9yIHZhbHVlIGNvbXBhcmlzb25zLiAqL1xudmFyIENPTVBBUkVfUEFSVElBTF9GTEFHID0gMTtcblxuLyoqIFVzZWQgZm9yIGJ1aWx0LWluIG1ldGhvZCByZWZlcmVuY2VzLiAqL1xudmFyIG9iamVjdFByb3RvID0gT2JqZWN0LnByb3RvdHlwZTtcblxuLyoqIFVzZWQgdG8gY2hlY2sgb2JqZWN0cyBmb3Igb3duIHByb3BlcnRpZXMuICovXG52YXIgaGFzT3duUHJvcGVydHkgPSBvYmplY3RQcm90by5oYXNPd25Qcm9wZXJ0eTtcblxuLyoqXG4gKiBBIHNwZWNpYWxpemVkIHZlcnNpb24gb2YgYGJhc2VJc0VxdWFsRGVlcGAgZm9yIG9iamVjdHMgd2l0aCBzdXBwb3J0IGZvclxuICogcGFydGlhbCBkZWVwIGNvbXBhcmlzb25zLlxuICpcbiAqIEBwcml2YXRlXG4gKiBAcGFyYW0ge09iamVjdH0gb2JqZWN0IFRoZSBvYmplY3QgdG8gY29tcGFyZS5cbiAqIEBwYXJhbSB7T2JqZWN0fSBvdGhlciBUaGUgb3RoZXIgb2JqZWN0IHRvIGNvbXBhcmUuXG4gKiBAcGFyYW0ge251bWJlcn0gYml0bWFzayBUaGUgYml0bWFzayBmbGFncy4gU2VlIGBiYXNlSXNFcXVhbGAgZm9yIG1vcmUgZGV0YWlscy5cbiAqIEBwYXJhbSB7RnVuY3Rpb259IGN1c3RvbWl6ZXIgVGhlIGZ1bmN0aW9uIHRvIGN1c3RvbWl6ZSBjb21wYXJpc29ucy5cbiAqIEBwYXJhbSB7RnVuY3Rpb259IGVxdWFsRnVuYyBUaGUgZnVuY3Rpb24gdG8gZGV0ZXJtaW5lIGVxdWl2YWxlbnRzIG9mIHZhbHVlcy5cbiAqIEBwYXJhbSB7T2JqZWN0fSBzdGFjayBUcmFja3MgdHJhdmVyc2VkIGBvYmplY3RgIGFuZCBgb3RoZXJgIG9iamVjdHMuXG4gKiBAcmV0dXJucyB7Ym9vbGVhbn0gUmV0dXJucyBgdHJ1ZWAgaWYgdGhlIG9iamVjdHMgYXJlIGVxdWl2YWxlbnQsIGVsc2UgYGZhbHNlYC5cbiAqL1xuZnVuY3Rpb24gZXF1YWxPYmplY3RzKG9iamVjdCwgb3RoZXIsIGJpdG1hc2ssIGN1c3RvbWl6ZXIsIGVxdWFsRnVuYywgc3RhY2spIHtcbiAgdmFyIGlzUGFydGlhbCA9IGJpdG1hc2sgJiBDT01QQVJFX1BBUlRJQUxfRkxBRyxcbiAgICAgIG9ialByb3BzID0gZ2V0QWxsS2V5cyhvYmplY3QpLFxuICAgICAgb2JqTGVuZ3RoID0gb2JqUHJvcHMubGVuZ3RoLFxuICAgICAgb3RoUHJvcHMgPSBnZXRBbGxLZXlzKG90aGVyKSxcbiAgICAgIG90aExlbmd0aCA9IG90aFByb3BzLmxlbmd0aDtcblxuICBpZiAob2JqTGVuZ3RoICE9IG90aExlbmd0aCAmJiAhaXNQYXJ0aWFsKSB7XG4gICAgcmV0dXJuIGZhbHNlO1xuICB9XG4gIHZhciBpbmRleCA9IG9iakxlbmd0aDtcbiAgd2hpbGUgKGluZGV4LS0pIHtcbiAgICB2YXIga2V5ID0gb2JqUHJvcHNbaW5kZXhdO1xuICAgIGlmICghKGlzUGFydGlhbCA/IGtleSBpbiBvdGhlciA6IGhhc093blByb3BlcnR5LmNhbGwob3RoZXIsIGtleSkpKSB7XG4gICAgICByZXR1cm4gZmFsc2U7XG4gICAgfVxuICB9XG4gIC8vIEFzc3VtZSBjeWNsaWMgdmFsdWVzIGFyZSBlcXVhbC5cbiAgdmFyIHN0YWNrZWQgPSBzdGFjay5nZXQob2JqZWN0KTtcbiAgaWYgKHN0YWNrZWQgJiYgc3RhY2suZ2V0KG90aGVyKSkge1xuICAgIHJldHVybiBzdGFja2VkID09IG90aGVyO1xuICB9XG4gIHZhciByZXN1bHQgPSB0cnVlO1xuICBzdGFjay5zZXQob2JqZWN0LCBvdGhlcik7XG4gIHN0YWNrLnNldChvdGhlciwgb2JqZWN0KTtcblxuICB2YXIgc2tpcEN0b3IgPSBpc1BhcnRpYWw7XG4gIHdoaWxlICgrK2luZGV4IDwgb2JqTGVuZ3RoKSB7XG4gICAga2V5ID0gb2JqUHJvcHNbaW5kZXhdO1xuICAgIHZhciBvYmpWYWx1ZSA9IG9iamVjdFtrZXldLFxuICAgICAgICBvdGhWYWx1ZSA9IG90aGVyW2tleV07XG5cbiAgICBpZiAoY3VzdG9taXplcikge1xuICAgICAgdmFyIGNvbXBhcmVkID0gaXNQYXJ0aWFsXG4gICAgICAgID8gY3VzdG9taXplcihvdGhWYWx1ZSwgb2JqVmFsdWUsIGtleSwgb3RoZXIsIG9iamVjdCwgc3RhY2spXG4gICAgICAgIDogY3VzdG9taXplcihvYmpWYWx1ZSwgb3RoVmFsdWUsIGtleSwgb2JqZWN0LCBvdGhlciwgc3RhY2spO1xuICAgIH1cbiAgICAvLyBSZWN1cnNpdmVseSBjb21wYXJlIG9iamVjdHMgKHN1c2NlcHRpYmxlIHRvIGNhbGwgc3RhY2sgbGltaXRzKS5cbiAgICBpZiAoIShjb21wYXJlZCA9PT0gdW5kZWZpbmVkXG4gICAgICAgICAgPyAob2JqVmFsdWUgPT09IG90aFZhbHVlIHx8IGVxdWFsRnVuYyhvYmpWYWx1ZSwgb3RoVmFsdWUsIGJpdG1hc2ssIGN1c3RvbWl6ZXIsIHN0YWNrKSlcbiAgICAgICAgICA6IGNvbXBhcmVkXG4gICAgICAgICkpIHtcbiAgICAgIHJlc3VsdCA9IGZhbHNlO1xuICAgICAgYnJlYWs7XG4gICAgfVxuICAgIHNraXBDdG9yIHx8IChza2lwQ3RvciA9IGtleSA9PSAnY29uc3RydWN0b3InKTtcbiAgfVxuICBpZiAocmVzdWx0ICYmICFza2lwQ3Rvcikge1xuICAgIHZhciBvYmpDdG9yID0gb2JqZWN0LmNvbnN0cnVjdG9yLFxuICAgICAgICBvdGhDdG9yID0gb3RoZXIuY29uc3RydWN0b3I7XG5cbiAgICAvLyBOb24gYE9iamVjdGAgb2JqZWN0IGluc3RhbmNlcyB3aXRoIGRpZmZlcmVudCBjb25zdHJ1Y3RvcnMgYXJlIG5vdCBlcXVhbC5cbiAgICBpZiAob2JqQ3RvciAhPSBvdGhDdG9yICYmXG4gICAgICAgICgnY29uc3RydWN0b3InIGluIG9iamVjdCAmJiAnY29uc3RydWN0b3InIGluIG90aGVyKSAmJlxuICAgICAgICAhKHR5cGVvZiBvYmpDdG9yID09ICdmdW5jdGlvbicgJiYgb2JqQ3RvciBpbnN0YW5jZW9mIG9iakN0b3IgJiZcbiAgICAgICAgICB0eXBlb2Ygb3RoQ3RvciA9PSAnZnVuY3Rpb24nICYmIG90aEN0b3IgaW5zdGFuY2VvZiBvdGhDdG9yKSkge1xuICAgICAgcmVzdWx0ID0gZmFsc2U7XG4gICAgfVxuICB9XG4gIHN0YWNrWydkZWxldGUnXShvYmplY3QpO1xuICBzdGFja1snZGVsZXRlJ10ob3RoZXIpO1xuICByZXR1cm4gcmVzdWx0O1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGVxdWFsT2JqZWN0cztcblxuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vbm9kZV9tb2R1bGVzL2xvZGFzaC9fZXF1YWxPYmplY3RzLmpzXG4vLyBtb2R1bGUgaWQgPSAuL25vZGVfbW9kdWxlcy9sb2Rhc2gvX2VxdWFsT2JqZWN0cy5qc1xuLy8gbW9kdWxlIGNodW5rcyA9IDEiLCIvKiogRGV0ZWN0IGZyZWUgdmFyaWFibGUgYGdsb2JhbGAgZnJvbSBOb2RlLmpzLiAqL1xudmFyIGZyZWVHbG9iYWwgPSB0eXBlb2YgZ2xvYmFsID09ICdvYmplY3QnICYmIGdsb2JhbCAmJiBnbG9iYWwuT2JqZWN0ID09PSBPYmplY3QgJiYgZ2xvYmFsO1xuXG5tb2R1bGUuZXhwb3J0cyA9IGZyZWVHbG9iYWw7XG5cblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL25vZGVfbW9kdWxlcy9sb2Rhc2gvX2ZyZWVHbG9iYWwuanNcbi8vIG1vZHVsZSBpZCA9IC4vbm9kZV9tb2R1bGVzL2xvZGFzaC9fZnJlZUdsb2JhbC5qc1xuLy8gbW9kdWxlIGNodW5rcyA9IDEiLCJ2YXIgYmFzZUdldEFsbEtleXMgPSByZXF1aXJlKCcuL19iYXNlR2V0QWxsS2V5cycpLFxuICAgIGdldFN5bWJvbHMgPSByZXF1aXJlKCcuL19nZXRTeW1ib2xzJyksXG4gICAga2V5cyA9IHJlcXVpcmUoJy4va2V5cycpO1xuXG4vKipcbiAqIENyZWF0ZXMgYW4gYXJyYXkgb2Ygb3duIGVudW1lcmFibGUgcHJvcGVydHkgbmFtZXMgYW5kIHN5bWJvbHMgb2YgYG9iamVjdGAuXG4gKlxuICogQHByaXZhdGVcbiAqIEBwYXJhbSB7T2JqZWN0fSBvYmplY3QgVGhlIG9iamVjdCB0byBxdWVyeS5cbiAqIEByZXR1cm5zIHtBcnJheX0gUmV0dXJucyB0aGUgYXJyYXkgb2YgcHJvcGVydHkgbmFtZXMgYW5kIHN5bWJvbHMuXG4gKi9cbmZ1bmN0aW9uIGdldEFsbEtleXMob2JqZWN0KSB7XG4gIHJldHVybiBiYXNlR2V0QWxsS2V5cyhvYmplY3QsIGtleXMsIGdldFN5bWJvbHMpO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGdldEFsbEtleXM7XG5cblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL25vZGVfbW9kdWxlcy9sb2Rhc2gvX2dldEFsbEtleXMuanNcbi8vIG1vZHVsZSBpZCA9IC4vbm9kZV9tb2R1bGVzL2xvZGFzaC9fZ2V0QWxsS2V5cy5qc1xuLy8gbW9kdWxlIGNodW5rcyA9IDEiLCJ2YXIgYmFzZUdldEFsbEtleXMgPSByZXF1aXJlKCcuL19iYXNlR2V0QWxsS2V5cycpLFxuICAgIGdldFN5bWJvbHNJbiA9IHJlcXVpcmUoJy4vX2dldFN5bWJvbHNJbicpLFxuICAgIGtleXNJbiA9IHJlcXVpcmUoJy4va2V5c0luJyk7XG5cbi8qKlxuICogQ3JlYXRlcyBhbiBhcnJheSBvZiBvd24gYW5kIGluaGVyaXRlZCBlbnVtZXJhYmxlIHByb3BlcnR5IG5hbWVzIGFuZFxuICogc3ltYm9scyBvZiBgb2JqZWN0YC5cbiAqXG4gKiBAcHJpdmF0ZVxuICogQHBhcmFtIHtPYmplY3R9IG9iamVjdCBUaGUgb2JqZWN0IHRvIHF1ZXJ5LlxuICogQHJldHVybnMge0FycmF5fSBSZXR1cm5zIHRoZSBhcnJheSBvZiBwcm9wZXJ0eSBuYW1lcyBhbmQgc3ltYm9scy5cbiAqL1xuZnVuY3Rpb24gZ2V0QWxsS2V5c0luKG9iamVjdCkge1xuICByZXR1cm4gYmFzZUdldEFsbEtleXMob2JqZWN0LCBrZXlzSW4sIGdldFN5bWJvbHNJbik7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gZ2V0QWxsS2V5c0luO1xuXG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9ub2RlX21vZHVsZXMvbG9kYXNoL19nZXRBbGxLZXlzSW4uanNcbi8vIG1vZHVsZSBpZCA9IC4vbm9kZV9tb2R1bGVzL2xvZGFzaC9fZ2V0QWxsS2V5c0luLmpzXG4vLyBtb2R1bGUgY2h1bmtzID0gMSIsInZhciBpc0tleWFibGUgPSByZXF1aXJlKCcuL19pc0tleWFibGUnKTtcblxuLyoqXG4gKiBHZXRzIHRoZSBkYXRhIGZvciBgbWFwYC5cbiAqXG4gKiBAcHJpdmF0ZVxuICogQHBhcmFtIHtPYmplY3R9IG1hcCBUaGUgbWFwIHRvIHF1ZXJ5LlxuICogQHBhcmFtIHtzdHJpbmd9IGtleSBUaGUgcmVmZXJlbmNlIGtleS5cbiAqIEByZXR1cm5zIHsqfSBSZXR1cm5zIHRoZSBtYXAgZGF0YS5cbiAqL1xuZnVuY3Rpb24gZ2V0TWFwRGF0YShtYXAsIGtleSkge1xuICB2YXIgZGF0YSA9IG1hcC5fX2RhdGFfXztcbiAgcmV0dXJuIGlzS2V5YWJsZShrZXkpXG4gICAgPyBkYXRhW3R5cGVvZiBrZXkgPT0gJ3N0cmluZycgPyAnc3RyaW5nJyA6ICdoYXNoJ11cbiAgICA6IGRhdGEubWFwO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGdldE1hcERhdGE7XG5cblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL25vZGVfbW9kdWxlcy9sb2Rhc2gvX2dldE1hcERhdGEuanNcbi8vIG1vZHVsZSBpZCA9IC4vbm9kZV9tb2R1bGVzL2xvZGFzaC9fZ2V0TWFwRGF0YS5qc1xuLy8gbW9kdWxlIGNodW5rcyA9IDEiLCJ2YXIgaXNTdHJpY3RDb21wYXJhYmxlID0gcmVxdWlyZSgnLi9faXNTdHJpY3RDb21wYXJhYmxlJyksXG4gICAga2V5cyA9IHJlcXVpcmUoJy4va2V5cycpO1xuXG4vKipcbiAqIEdldHMgdGhlIHByb3BlcnR5IG5hbWVzLCB2YWx1ZXMsIGFuZCBjb21wYXJlIGZsYWdzIG9mIGBvYmplY3RgLlxuICpcbiAqIEBwcml2YXRlXG4gKiBAcGFyYW0ge09iamVjdH0gb2JqZWN0IFRoZSBvYmplY3QgdG8gcXVlcnkuXG4gKiBAcmV0dXJucyB7QXJyYXl9IFJldHVybnMgdGhlIG1hdGNoIGRhdGEgb2YgYG9iamVjdGAuXG4gKi9cbmZ1bmN0aW9uIGdldE1hdGNoRGF0YShvYmplY3QpIHtcbiAgdmFyIHJlc3VsdCA9IGtleXMob2JqZWN0KSxcbiAgICAgIGxlbmd0aCA9IHJlc3VsdC5sZW5ndGg7XG5cbiAgd2hpbGUgKGxlbmd0aC0tKSB7XG4gICAgdmFyIGtleSA9IHJlc3VsdFtsZW5ndGhdLFxuICAgICAgICB2YWx1ZSA9IG9iamVjdFtrZXldO1xuXG4gICAgcmVzdWx0W2xlbmd0aF0gPSBba2V5LCB2YWx1ZSwgaXNTdHJpY3RDb21wYXJhYmxlKHZhbHVlKV07XG4gIH1cbiAgcmV0dXJuIHJlc3VsdDtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBnZXRNYXRjaERhdGE7XG5cblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL25vZGVfbW9kdWxlcy9sb2Rhc2gvX2dldE1hdGNoRGF0YS5qc1xuLy8gbW9kdWxlIGlkID0gLi9ub2RlX21vZHVsZXMvbG9kYXNoL19nZXRNYXRjaERhdGEuanNcbi8vIG1vZHVsZSBjaHVua3MgPSAxIiwidmFyIGJhc2VJc05hdGl2ZSA9IHJlcXVpcmUoJy4vX2Jhc2VJc05hdGl2ZScpLFxuICAgIGdldFZhbHVlID0gcmVxdWlyZSgnLi9fZ2V0VmFsdWUnKTtcblxuLyoqXG4gKiBHZXRzIHRoZSBuYXRpdmUgZnVuY3Rpb24gYXQgYGtleWAgb2YgYG9iamVjdGAuXG4gKlxuICogQHByaXZhdGVcbiAqIEBwYXJhbSB7T2JqZWN0fSBvYmplY3QgVGhlIG9iamVjdCB0byBxdWVyeS5cbiAqIEBwYXJhbSB7c3RyaW5nfSBrZXkgVGhlIGtleSBvZiB0aGUgbWV0aG9kIHRvIGdldC5cbiAqIEByZXR1cm5zIHsqfSBSZXR1cm5zIHRoZSBmdW5jdGlvbiBpZiBpdCdzIG5hdGl2ZSwgZWxzZSBgdW5kZWZpbmVkYC5cbiAqL1xuZnVuY3Rpb24gZ2V0TmF0aXZlKG9iamVjdCwga2V5KSB7XG4gIHZhciB2YWx1ZSA9IGdldFZhbHVlKG9iamVjdCwga2V5KTtcbiAgcmV0dXJuIGJhc2VJc05hdGl2ZSh2YWx1ZSkgPyB2YWx1ZSA6IHVuZGVmaW5lZDtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBnZXROYXRpdmU7XG5cblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL25vZGVfbW9kdWxlcy9sb2Rhc2gvX2dldE5hdGl2ZS5qc1xuLy8gbW9kdWxlIGlkID0gLi9ub2RlX21vZHVsZXMvbG9kYXNoL19nZXROYXRpdmUuanNcbi8vIG1vZHVsZSBjaHVua3MgPSAxIiwidmFyIG92ZXJBcmcgPSByZXF1aXJlKCcuL19vdmVyQXJnJyk7XG5cbi8qKiBCdWlsdC1pbiB2YWx1ZSByZWZlcmVuY2VzLiAqL1xudmFyIGdldFByb3RvdHlwZSA9IG92ZXJBcmcoT2JqZWN0LmdldFByb3RvdHlwZU9mLCBPYmplY3QpO1xuXG5tb2R1bGUuZXhwb3J0cyA9IGdldFByb3RvdHlwZTtcblxuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vbm9kZV9tb2R1bGVzL2xvZGFzaC9fZ2V0UHJvdG90eXBlLmpzXG4vLyBtb2R1bGUgaWQgPSAuL25vZGVfbW9kdWxlcy9sb2Rhc2gvX2dldFByb3RvdHlwZS5qc1xuLy8gbW9kdWxlIGNodW5rcyA9IDEiLCJ2YXIgU3ltYm9sID0gcmVxdWlyZSgnLi9fU3ltYm9sJyk7XG5cbi8qKiBVc2VkIGZvciBidWlsdC1pbiBtZXRob2QgcmVmZXJlbmNlcy4gKi9cbnZhciBvYmplY3RQcm90byA9IE9iamVjdC5wcm90b3R5cGU7XG5cbi8qKiBVc2VkIHRvIGNoZWNrIG9iamVjdHMgZm9yIG93biBwcm9wZXJ0aWVzLiAqL1xudmFyIGhhc093blByb3BlcnR5ID0gb2JqZWN0UHJvdG8uaGFzT3duUHJvcGVydHk7XG5cbi8qKlxuICogVXNlZCB0byByZXNvbHZlIHRoZVxuICogW2B0b1N0cmluZ1RhZ2BdKGh0dHA6Ly9lY21hLWludGVybmF0aW9uYWwub3JnL2VjbWEtMjYyLzcuMC8jc2VjLW9iamVjdC5wcm90b3R5cGUudG9zdHJpbmcpXG4gKiBvZiB2YWx1ZXMuXG4gKi9cbnZhciBuYXRpdmVPYmplY3RUb1N0cmluZyA9IG9iamVjdFByb3RvLnRvU3RyaW5nO1xuXG4vKiogQnVpbHQtaW4gdmFsdWUgcmVmZXJlbmNlcy4gKi9cbnZhciBzeW1Ub1N0cmluZ1RhZyA9IFN5bWJvbCA/IFN5bWJvbC50b1N0cmluZ1RhZyA6IHVuZGVmaW5lZDtcblxuLyoqXG4gKiBBIHNwZWNpYWxpemVkIHZlcnNpb24gb2YgYGJhc2VHZXRUYWdgIHdoaWNoIGlnbm9yZXMgYFN5bWJvbC50b1N0cmluZ1RhZ2AgdmFsdWVzLlxuICpcbiAqIEBwcml2YXRlXG4gKiBAcGFyYW0geyp9IHZhbHVlIFRoZSB2YWx1ZSB0byBxdWVyeS5cbiAqIEByZXR1cm5zIHtzdHJpbmd9IFJldHVybnMgdGhlIHJhdyBgdG9TdHJpbmdUYWdgLlxuICovXG5mdW5jdGlvbiBnZXRSYXdUYWcodmFsdWUpIHtcbiAgdmFyIGlzT3duID0gaGFzT3duUHJvcGVydHkuY2FsbCh2YWx1ZSwgc3ltVG9TdHJpbmdUYWcpLFxuICAgICAgdGFnID0gdmFsdWVbc3ltVG9TdHJpbmdUYWddO1xuXG4gIHRyeSB7XG4gICAgdmFsdWVbc3ltVG9TdHJpbmdUYWddID0gdW5kZWZpbmVkO1xuICAgIHZhciB1bm1hc2tlZCA9IHRydWU7XG4gIH0gY2F0Y2ggKGUpIHt9XG5cbiAgdmFyIHJlc3VsdCA9IG5hdGl2ZU9iamVjdFRvU3RyaW5nLmNhbGwodmFsdWUpO1xuICBpZiAodW5tYXNrZWQpIHtcbiAgICBpZiAoaXNPd24pIHtcbiAgICAgIHZhbHVlW3N5bVRvU3RyaW5nVGFnXSA9IHRhZztcbiAgICB9IGVsc2Uge1xuICAgICAgZGVsZXRlIHZhbHVlW3N5bVRvU3RyaW5nVGFnXTtcbiAgICB9XG4gIH1cbiAgcmV0dXJuIHJlc3VsdDtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBnZXRSYXdUYWc7XG5cblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL25vZGVfbW9kdWxlcy9sb2Rhc2gvX2dldFJhd1RhZy5qc1xuLy8gbW9kdWxlIGlkID0gLi9ub2RlX21vZHVsZXMvbG9kYXNoL19nZXRSYXdUYWcuanNcbi8vIG1vZHVsZSBjaHVua3MgPSAxIiwidmFyIGFycmF5RmlsdGVyID0gcmVxdWlyZSgnLi9fYXJyYXlGaWx0ZXInKSxcbiAgICBzdHViQXJyYXkgPSByZXF1aXJlKCcuL3N0dWJBcnJheScpO1xuXG4vKiogVXNlZCBmb3IgYnVpbHQtaW4gbWV0aG9kIHJlZmVyZW5jZXMuICovXG52YXIgb2JqZWN0UHJvdG8gPSBPYmplY3QucHJvdG90eXBlO1xuXG4vKiogQnVpbHQtaW4gdmFsdWUgcmVmZXJlbmNlcy4gKi9cbnZhciBwcm9wZXJ0eUlzRW51bWVyYWJsZSA9IG9iamVjdFByb3RvLnByb3BlcnR5SXNFbnVtZXJhYmxlO1xuXG4vKiBCdWlsdC1pbiBtZXRob2QgcmVmZXJlbmNlcyBmb3IgdGhvc2Ugd2l0aCB0aGUgc2FtZSBuYW1lIGFzIG90aGVyIGBsb2Rhc2hgIG1ldGhvZHMuICovXG52YXIgbmF0aXZlR2V0U3ltYm9scyA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eVN5bWJvbHM7XG5cbi8qKlxuICogQ3JlYXRlcyBhbiBhcnJheSBvZiB0aGUgb3duIGVudW1lcmFibGUgc3ltYm9scyBvZiBgb2JqZWN0YC5cbiAqXG4gKiBAcHJpdmF0ZVxuICogQHBhcmFtIHtPYmplY3R9IG9iamVjdCBUaGUgb2JqZWN0IHRvIHF1ZXJ5LlxuICogQHJldHVybnMge0FycmF5fSBSZXR1cm5zIHRoZSBhcnJheSBvZiBzeW1ib2xzLlxuICovXG52YXIgZ2V0U3ltYm9scyA9ICFuYXRpdmVHZXRTeW1ib2xzID8gc3R1YkFycmF5IDogZnVuY3Rpb24ob2JqZWN0KSB7XG4gIGlmIChvYmplY3QgPT0gbnVsbCkge1xuICAgIHJldHVybiBbXTtcbiAgfVxuICBvYmplY3QgPSBPYmplY3Qob2JqZWN0KTtcbiAgcmV0dXJuIGFycmF5RmlsdGVyKG5hdGl2ZUdldFN5bWJvbHMob2JqZWN0KSwgZnVuY3Rpb24oc3ltYm9sKSB7XG4gICAgcmV0dXJuIHByb3BlcnR5SXNFbnVtZXJhYmxlLmNhbGwob2JqZWN0LCBzeW1ib2wpO1xuICB9KTtcbn07XG5cbm1vZHVsZS5leHBvcnRzID0gZ2V0U3ltYm9scztcblxuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vbm9kZV9tb2R1bGVzL2xvZGFzaC9fZ2V0U3ltYm9scy5qc1xuLy8gbW9kdWxlIGlkID0gLi9ub2RlX21vZHVsZXMvbG9kYXNoL19nZXRTeW1ib2xzLmpzXG4vLyBtb2R1bGUgY2h1bmtzID0gMSIsInZhciBhcnJheVB1c2ggPSByZXF1aXJlKCcuL19hcnJheVB1c2gnKSxcbiAgICBnZXRQcm90b3R5cGUgPSByZXF1aXJlKCcuL19nZXRQcm90b3R5cGUnKSxcbiAgICBnZXRTeW1ib2xzID0gcmVxdWlyZSgnLi9fZ2V0U3ltYm9scycpLFxuICAgIHN0dWJBcnJheSA9IHJlcXVpcmUoJy4vc3R1YkFycmF5Jyk7XG5cbi8qIEJ1aWx0LWluIG1ldGhvZCByZWZlcmVuY2VzIGZvciB0aG9zZSB3aXRoIHRoZSBzYW1lIG5hbWUgYXMgb3RoZXIgYGxvZGFzaGAgbWV0aG9kcy4gKi9cbnZhciBuYXRpdmVHZXRTeW1ib2xzID0gT2JqZWN0LmdldE93blByb3BlcnR5U3ltYm9scztcblxuLyoqXG4gKiBDcmVhdGVzIGFuIGFycmF5IG9mIHRoZSBvd24gYW5kIGluaGVyaXRlZCBlbnVtZXJhYmxlIHN5bWJvbHMgb2YgYG9iamVjdGAuXG4gKlxuICogQHByaXZhdGVcbiAqIEBwYXJhbSB7T2JqZWN0fSBvYmplY3QgVGhlIG9iamVjdCB0byBxdWVyeS5cbiAqIEByZXR1cm5zIHtBcnJheX0gUmV0dXJucyB0aGUgYXJyYXkgb2Ygc3ltYm9scy5cbiAqL1xudmFyIGdldFN5bWJvbHNJbiA9ICFuYXRpdmVHZXRTeW1ib2xzID8gc3R1YkFycmF5IDogZnVuY3Rpb24ob2JqZWN0KSB7XG4gIHZhciByZXN1bHQgPSBbXTtcbiAgd2hpbGUgKG9iamVjdCkge1xuICAgIGFycmF5UHVzaChyZXN1bHQsIGdldFN5bWJvbHMob2JqZWN0KSk7XG4gICAgb2JqZWN0ID0gZ2V0UHJvdG90eXBlKG9iamVjdCk7XG4gIH1cbiAgcmV0dXJuIHJlc3VsdDtcbn07XG5cbm1vZHVsZS5leHBvcnRzID0gZ2V0U3ltYm9sc0luO1xuXG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9ub2RlX21vZHVsZXMvbG9kYXNoL19nZXRTeW1ib2xzSW4uanNcbi8vIG1vZHVsZSBpZCA9IC4vbm9kZV9tb2R1bGVzL2xvZGFzaC9fZ2V0U3ltYm9sc0luLmpzXG4vLyBtb2R1bGUgY2h1bmtzID0gMSIsInZhciBEYXRhVmlldyA9IHJlcXVpcmUoJy4vX0RhdGFWaWV3JyksXG4gICAgTWFwID0gcmVxdWlyZSgnLi9fTWFwJyksXG4gICAgUHJvbWlzZSA9IHJlcXVpcmUoJy4vX1Byb21pc2UnKSxcbiAgICBTZXQgPSByZXF1aXJlKCcuL19TZXQnKSxcbiAgICBXZWFrTWFwID0gcmVxdWlyZSgnLi9fV2Vha01hcCcpLFxuICAgIGJhc2VHZXRUYWcgPSByZXF1aXJlKCcuL19iYXNlR2V0VGFnJyksXG4gICAgdG9Tb3VyY2UgPSByZXF1aXJlKCcuL190b1NvdXJjZScpO1xuXG4vKiogYE9iamVjdCN0b1N0cmluZ2AgcmVzdWx0IHJlZmVyZW5jZXMuICovXG52YXIgbWFwVGFnID0gJ1tvYmplY3QgTWFwXScsXG4gICAgb2JqZWN0VGFnID0gJ1tvYmplY3QgT2JqZWN0XScsXG4gICAgcHJvbWlzZVRhZyA9ICdbb2JqZWN0IFByb21pc2VdJyxcbiAgICBzZXRUYWcgPSAnW29iamVjdCBTZXRdJyxcbiAgICB3ZWFrTWFwVGFnID0gJ1tvYmplY3QgV2Vha01hcF0nO1xuXG52YXIgZGF0YVZpZXdUYWcgPSAnW29iamVjdCBEYXRhVmlld10nO1xuXG4vKiogVXNlZCB0byBkZXRlY3QgbWFwcywgc2V0cywgYW5kIHdlYWttYXBzLiAqL1xudmFyIGRhdGFWaWV3Q3RvclN0cmluZyA9IHRvU291cmNlKERhdGFWaWV3KSxcbiAgICBtYXBDdG9yU3RyaW5nID0gdG9Tb3VyY2UoTWFwKSxcbiAgICBwcm9taXNlQ3RvclN0cmluZyA9IHRvU291cmNlKFByb21pc2UpLFxuICAgIHNldEN0b3JTdHJpbmcgPSB0b1NvdXJjZShTZXQpLFxuICAgIHdlYWtNYXBDdG9yU3RyaW5nID0gdG9Tb3VyY2UoV2Vha01hcCk7XG5cbi8qKlxuICogR2V0cyB0aGUgYHRvU3RyaW5nVGFnYCBvZiBgdmFsdWVgLlxuICpcbiAqIEBwcml2YXRlXG4gKiBAcGFyYW0geyp9IHZhbHVlIFRoZSB2YWx1ZSB0byBxdWVyeS5cbiAqIEByZXR1cm5zIHtzdHJpbmd9IFJldHVybnMgdGhlIGB0b1N0cmluZ1RhZ2AuXG4gKi9cbnZhciBnZXRUYWcgPSBiYXNlR2V0VGFnO1xuXG4vLyBGYWxsYmFjayBmb3IgZGF0YSB2aWV3cywgbWFwcywgc2V0cywgYW5kIHdlYWsgbWFwcyBpbiBJRSAxMSBhbmQgcHJvbWlzZXMgaW4gTm9kZS5qcyA8IDYuXG5pZiAoKERhdGFWaWV3ICYmIGdldFRhZyhuZXcgRGF0YVZpZXcobmV3IEFycmF5QnVmZmVyKDEpKSkgIT0gZGF0YVZpZXdUYWcpIHx8XG4gICAgKE1hcCAmJiBnZXRUYWcobmV3IE1hcCkgIT0gbWFwVGFnKSB8fFxuICAgIChQcm9taXNlICYmIGdldFRhZyhQcm9taXNlLnJlc29sdmUoKSkgIT0gcHJvbWlzZVRhZykgfHxcbiAgICAoU2V0ICYmIGdldFRhZyhuZXcgU2V0KSAhPSBzZXRUYWcpIHx8XG4gICAgKFdlYWtNYXAgJiYgZ2V0VGFnKG5ldyBXZWFrTWFwKSAhPSB3ZWFrTWFwVGFnKSkge1xuICBnZXRUYWcgPSBmdW5jdGlvbih2YWx1ZSkge1xuICAgIHZhciByZXN1bHQgPSBiYXNlR2V0VGFnKHZhbHVlKSxcbiAgICAgICAgQ3RvciA9IHJlc3VsdCA9PSBvYmplY3RUYWcgPyB2YWx1ZS5jb25zdHJ1Y3RvciA6IHVuZGVmaW5lZCxcbiAgICAgICAgY3RvclN0cmluZyA9IEN0b3IgPyB0b1NvdXJjZShDdG9yKSA6ICcnO1xuXG4gICAgaWYgKGN0b3JTdHJpbmcpIHtcbiAgICAgIHN3aXRjaCAoY3RvclN0cmluZykge1xuICAgICAgICBjYXNlIGRhdGFWaWV3Q3RvclN0cmluZzogcmV0dXJuIGRhdGFWaWV3VGFnO1xuICAgICAgICBjYXNlIG1hcEN0b3JTdHJpbmc6IHJldHVybiBtYXBUYWc7XG4gICAgICAgIGNhc2UgcHJvbWlzZUN0b3JTdHJpbmc6IHJldHVybiBwcm9taXNlVGFnO1xuICAgICAgICBjYXNlIHNldEN0b3JTdHJpbmc6IHJldHVybiBzZXRUYWc7XG4gICAgICAgIGNhc2Ugd2Vha01hcEN0b3JTdHJpbmc6IHJldHVybiB3ZWFrTWFwVGFnO1xuICAgICAgfVxuICAgIH1cbiAgICByZXR1cm4gcmVzdWx0O1xuICB9O1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGdldFRhZztcblxuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vbm9kZV9tb2R1bGVzL2xvZGFzaC9fZ2V0VGFnLmpzXG4vLyBtb2R1bGUgaWQgPSAuL25vZGVfbW9kdWxlcy9sb2Rhc2gvX2dldFRhZy5qc1xuLy8gbW9kdWxlIGNodW5rcyA9IDEiLCIvKipcbiAqIEdldHMgdGhlIHZhbHVlIGF0IGBrZXlgIG9mIGBvYmplY3RgLlxuICpcbiAqIEBwcml2YXRlXG4gKiBAcGFyYW0ge09iamVjdH0gW29iamVjdF0gVGhlIG9iamVjdCB0byBxdWVyeS5cbiAqIEBwYXJhbSB7c3RyaW5nfSBrZXkgVGhlIGtleSBvZiB0aGUgcHJvcGVydHkgdG8gZ2V0LlxuICogQHJldHVybnMgeyp9IFJldHVybnMgdGhlIHByb3BlcnR5IHZhbHVlLlxuICovXG5mdW5jdGlvbiBnZXRWYWx1ZShvYmplY3QsIGtleSkge1xuICByZXR1cm4gb2JqZWN0ID09IG51bGwgPyB1bmRlZmluZWQgOiBvYmplY3Rba2V5XTtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBnZXRWYWx1ZTtcblxuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vbm9kZV9tb2R1bGVzL2xvZGFzaC9fZ2V0VmFsdWUuanNcbi8vIG1vZHVsZSBpZCA9IC4vbm9kZV9tb2R1bGVzL2xvZGFzaC9fZ2V0VmFsdWUuanNcbi8vIG1vZHVsZSBjaHVua3MgPSAxIiwidmFyIGNhc3RQYXRoID0gcmVxdWlyZSgnLi9fY2FzdFBhdGgnKSxcbiAgICBpc0FyZ3VtZW50cyA9IHJlcXVpcmUoJy4vaXNBcmd1bWVudHMnKSxcbiAgICBpc0FycmF5ID0gcmVxdWlyZSgnLi9pc0FycmF5JyksXG4gICAgaXNJbmRleCA9IHJlcXVpcmUoJy4vX2lzSW5kZXgnKSxcbiAgICBpc0xlbmd0aCA9IHJlcXVpcmUoJy4vaXNMZW5ndGgnKSxcbiAgICB0b0tleSA9IHJlcXVpcmUoJy4vX3RvS2V5Jyk7XG5cbi8qKlxuICogQ2hlY2tzIGlmIGBwYXRoYCBleGlzdHMgb24gYG9iamVjdGAuXG4gKlxuICogQHByaXZhdGVcbiAqIEBwYXJhbSB7T2JqZWN0fSBvYmplY3QgVGhlIG9iamVjdCB0byBxdWVyeS5cbiAqIEBwYXJhbSB7QXJyYXl8c3RyaW5nfSBwYXRoIFRoZSBwYXRoIHRvIGNoZWNrLlxuICogQHBhcmFtIHtGdW5jdGlvbn0gaGFzRnVuYyBUaGUgZnVuY3Rpb24gdG8gY2hlY2sgcHJvcGVydGllcy5cbiAqIEByZXR1cm5zIHtib29sZWFufSBSZXR1cm5zIGB0cnVlYCBpZiBgcGF0aGAgZXhpc3RzLCBlbHNlIGBmYWxzZWAuXG4gKi9cbmZ1bmN0aW9uIGhhc1BhdGgob2JqZWN0LCBwYXRoLCBoYXNGdW5jKSB7XG4gIHBhdGggPSBjYXN0UGF0aChwYXRoLCBvYmplY3QpO1xuXG4gIHZhciBpbmRleCA9IC0xLFxuICAgICAgbGVuZ3RoID0gcGF0aC5sZW5ndGgsXG4gICAgICByZXN1bHQgPSBmYWxzZTtcblxuICB3aGlsZSAoKytpbmRleCA8IGxlbmd0aCkge1xuICAgIHZhciBrZXkgPSB0b0tleShwYXRoW2luZGV4XSk7XG4gICAgaWYgKCEocmVzdWx0ID0gb2JqZWN0ICE9IG51bGwgJiYgaGFzRnVuYyhvYmplY3QsIGtleSkpKSB7XG4gICAgICBicmVhaztcbiAgICB9XG4gICAgb2JqZWN0ID0gb2JqZWN0W2tleV07XG4gIH1cbiAgaWYgKHJlc3VsdCB8fCArK2luZGV4ICE9IGxlbmd0aCkge1xuICAgIHJldHVybiByZXN1bHQ7XG4gIH1cbiAgbGVuZ3RoID0gb2JqZWN0ID09IG51bGwgPyAwIDogb2JqZWN0Lmxlbmd0aDtcbiAgcmV0dXJuICEhbGVuZ3RoICYmIGlzTGVuZ3RoKGxlbmd0aCkgJiYgaXNJbmRleChrZXksIGxlbmd0aCkgJiZcbiAgICAoaXNBcnJheShvYmplY3QpIHx8IGlzQXJndW1lbnRzKG9iamVjdCkpO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGhhc1BhdGg7XG5cblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL25vZGVfbW9kdWxlcy9sb2Rhc2gvX2hhc1BhdGguanNcbi8vIG1vZHVsZSBpZCA9IC4vbm9kZV9tb2R1bGVzL2xvZGFzaC9faGFzUGF0aC5qc1xuLy8gbW9kdWxlIGNodW5rcyA9IDEiLCJ2YXIgbmF0aXZlQ3JlYXRlID0gcmVxdWlyZSgnLi9fbmF0aXZlQ3JlYXRlJyk7XG5cbi8qKlxuICogUmVtb3ZlcyBhbGwga2V5LXZhbHVlIGVudHJpZXMgZnJvbSB0aGUgaGFzaC5cbiAqXG4gKiBAcHJpdmF0ZVxuICogQG5hbWUgY2xlYXJcbiAqIEBtZW1iZXJPZiBIYXNoXG4gKi9cbmZ1bmN0aW9uIGhhc2hDbGVhcigpIHtcbiAgdGhpcy5fX2RhdGFfXyA9IG5hdGl2ZUNyZWF0ZSA/IG5hdGl2ZUNyZWF0ZShudWxsKSA6IHt9O1xuICB0aGlzLnNpemUgPSAwO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGhhc2hDbGVhcjtcblxuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vbm9kZV9tb2R1bGVzL2xvZGFzaC9faGFzaENsZWFyLmpzXG4vLyBtb2R1bGUgaWQgPSAuL25vZGVfbW9kdWxlcy9sb2Rhc2gvX2hhc2hDbGVhci5qc1xuLy8gbW9kdWxlIGNodW5rcyA9IDEiLCIvKipcbiAqIFJlbW92ZXMgYGtleWAgYW5kIGl0cyB2YWx1ZSBmcm9tIHRoZSBoYXNoLlxuICpcbiAqIEBwcml2YXRlXG4gKiBAbmFtZSBkZWxldGVcbiAqIEBtZW1iZXJPZiBIYXNoXG4gKiBAcGFyYW0ge09iamVjdH0gaGFzaCBUaGUgaGFzaCB0byBtb2RpZnkuXG4gKiBAcGFyYW0ge3N0cmluZ30ga2V5IFRoZSBrZXkgb2YgdGhlIHZhbHVlIHRvIHJlbW92ZS5cbiAqIEByZXR1cm5zIHtib29sZWFufSBSZXR1cm5zIGB0cnVlYCBpZiB0aGUgZW50cnkgd2FzIHJlbW92ZWQsIGVsc2UgYGZhbHNlYC5cbiAqL1xuZnVuY3Rpb24gaGFzaERlbGV0ZShrZXkpIHtcbiAgdmFyIHJlc3VsdCA9IHRoaXMuaGFzKGtleSkgJiYgZGVsZXRlIHRoaXMuX19kYXRhX19ba2V5XTtcbiAgdGhpcy5zaXplIC09IHJlc3VsdCA/IDEgOiAwO1xuICByZXR1cm4gcmVzdWx0O1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGhhc2hEZWxldGU7XG5cblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL25vZGVfbW9kdWxlcy9sb2Rhc2gvX2hhc2hEZWxldGUuanNcbi8vIG1vZHVsZSBpZCA9IC4vbm9kZV9tb2R1bGVzL2xvZGFzaC9faGFzaERlbGV0ZS5qc1xuLy8gbW9kdWxlIGNodW5rcyA9IDEiLCJ2YXIgbmF0aXZlQ3JlYXRlID0gcmVxdWlyZSgnLi9fbmF0aXZlQ3JlYXRlJyk7XG5cbi8qKiBVc2VkIHRvIHN0YW5kLWluIGZvciBgdW5kZWZpbmVkYCBoYXNoIHZhbHVlcy4gKi9cbnZhciBIQVNIX1VOREVGSU5FRCA9ICdfX2xvZGFzaF9oYXNoX3VuZGVmaW5lZF9fJztcblxuLyoqIFVzZWQgZm9yIGJ1aWx0LWluIG1ldGhvZCByZWZlcmVuY2VzLiAqL1xudmFyIG9iamVjdFByb3RvID0gT2JqZWN0LnByb3RvdHlwZTtcblxuLyoqIFVzZWQgdG8gY2hlY2sgb2JqZWN0cyBmb3Igb3duIHByb3BlcnRpZXMuICovXG52YXIgaGFzT3duUHJvcGVydHkgPSBvYmplY3RQcm90by5oYXNPd25Qcm9wZXJ0eTtcblxuLyoqXG4gKiBHZXRzIHRoZSBoYXNoIHZhbHVlIGZvciBga2V5YC5cbiAqXG4gKiBAcHJpdmF0ZVxuICogQG5hbWUgZ2V0XG4gKiBAbWVtYmVyT2YgSGFzaFxuICogQHBhcmFtIHtzdHJpbmd9IGtleSBUaGUga2V5IG9mIHRoZSB2YWx1ZSB0byBnZXQuXG4gKiBAcmV0dXJucyB7Kn0gUmV0dXJucyB0aGUgZW50cnkgdmFsdWUuXG4gKi9cbmZ1bmN0aW9uIGhhc2hHZXQoa2V5KSB7XG4gIHZhciBkYXRhID0gdGhpcy5fX2RhdGFfXztcbiAgaWYgKG5hdGl2ZUNyZWF0ZSkge1xuICAgIHZhciByZXN1bHQgPSBkYXRhW2tleV07XG4gICAgcmV0dXJuIHJlc3VsdCA9PT0gSEFTSF9VTkRFRklORUQgPyB1bmRlZmluZWQgOiByZXN1bHQ7XG4gIH1cbiAgcmV0dXJuIGhhc093blByb3BlcnR5LmNhbGwoZGF0YSwga2V5KSA/IGRhdGFba2V5XSA6IHVuZGVmaW5lZDtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBoYXNoR2V0O1xuXG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9ub2RlX21vZHVsZXMvbG9kYXNoL19oYXNoR2V0LmpzXG4vLyBtb2R1bGUgaWQgPSAuL25vZGVfbW9kdWxlcy9sb2Rhc2gvX2hhc2hHZXQuanNcbi8vIG1vZHVsZSBjaHVua3MgPSAxIiwidmFyIG5hdGl2ZUNyZWF0ZSA9IHJlcXVpcmUoJy4vX25hdGl2ZUNyZWF0ZScpO1xuXG4vKiogVXNlZCBmb3IgYnVpbHQtaW4gbWV0aG9kIHJlZmVyZW5jZXMuICovXG52YXIgb2JqZWN0UHJvdG8gPSBPYmplY3QucHJvdG90eXBlO1xuXG4vKiogVXNlZCB0byBjaGVjayBvYmplY3RzIGZvciBvd24gcHJvcGVydGllcy4gKi9cbnZhciBoYXNPd25Qcm9wZXJ0eSA9IG9iamVjdFByb3RvLmhhc093blByb3BlcnR5O1xuXG4vKipcbiAqIENoZWNrcyBpZiBhIGhhc2ggdmFsdWUgZm9yIGBrZXlgIGV4aXN0cy5cbiAqXG4gKiBAcHJpdmF0ZVxuICogQG5hbWUgaGFzXG4gKiBAbWVtYmVyT2YgSGFzaFxuICogQHBhcmFtIHtzdHJpbmd9IGtleSBUaGUga2V5IG9mIHRoZSBlbnRyeSB0byBjaGVjay5cbiAqIEByZXR1cm5zIHtib29sZWFufSBSZXR1cm5zIGB0cnVlYCBpZiBhbiBlbnRyeSBmb3IgYGtleWAgZXhpc3RzLCBlbHNlIGBmYWxzZWAuXG4gKi9cbmZ1bmN0aW9uIGhhc2hIYXMoa2V5KSB7XG4gIHZhciBkYXRhID0gdGhpcy5fX2RhdGFfXztcbiAgcmV0dXJuIG5hdGl2ZUNyZWF0ZSA/IChkYXRhW2tleV0gIT09IHVuZGVmaW5lZCkgOiBoYXNPd25Qcm9wZXJ0eS5jYWxsKGRhdGEsIGtleSk7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gaGFzaEhhcztcblxuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vbm9kZV9tb2R1bGVzL2xvZGFzaC9faGFzaEhhcy5qc1xuLy8gbW9kdWxlIGlkID0gLi9ub2RlX21vZHVsZXMvbG9kYXNoL19oYXNoSGFzLmpzXG4vLyBtb2R1bGUgY2h1bmtzID0gMSIsInZhciBuYXRpdmVDcmVhdGUgPSByZXF1aXJlKCcuL19uYXRpdmVDcmVhdGUnKTtcblxuLyoqIFVzZWQgdG8gc3RhbmQtaW4gZm9yIGB1bmRlZmluZWRgIGhhc2ggdmFsdWVzLiAqL1xudmFyIEhBU0hfVU5ERUZJTkVEID0gJ19fbG9kYXNoX2hhc2hfdW5kZWZpbmVkX18nO1xuXG4vKipcbiAqIFNldHMgdGhlIGhhc2ggYGtleWAgdG8gYHZhbHVlYC5cbiAqXG4gKiBAcHJpdmF0ZVxuICogQG5hbWUgc2V0XG4gKiBAbWVtYmVyT2YgSGFzaFxuICogQHBhcmFtIHtzdHJpbmd9IGtleSBUaGUga2V5IG9mIHRoZSB2YWx1ZSB0byBzZXQuXG4gKiBAcGFyYW0geyp9IHZhbHVlIFRoZSB2YWx1ZSB0byBzZXQuXG4gKiBAcmV0dXJucyB7T2JqZWN0fSBSZXR1cm5zIHRoZSBoYXNoIGluc3RhbmNlLlxuICovXG5mdW5jdGlvbiBoYXNoU2V0KGtleSwgdmFsdWUpIHtcbiAgdmFyIGRhdGEgPSB0aGlzLl9fZGF0YV9fO1xuICB0aGlzLnNpemUgKz0gdGhpcy5oYXMoa2V5KSA/IDAgOiAxO1xuICBkYXRhW2tleV0gPSAobmF0aXZlQ3JlYXRlICYmIHZhbHVlID09PSB1bmRlZmluZWQpID8gSEFTSF9VTkRFRklORUQgOiB2YWx1ZTtcbiAgcmV0dXJuIHRoaXM7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gaGFzaFNldDtcblxuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vbm9kZV9tb2R1bGVzL2xvZGFzaC9faGFzaFNldC5qc1xuLy8gbW9kdWxlIGlkID0gLi9ub2RlX21vZHVsZXMvbG9kYXNoL19oYXNoU2V0LmpzXG4vLyBtb2R1bGUgY2h1bmtzID0gMSIsIi8qKiBVc2VkIGZvciBidWlsdC1pbiBtZXRob2QgcmVmZXJlbmNlcy4gKi9cbnZhciBvYmplY3RQcm90byA9IE9iamVjdC5wcm90b3R5cGU7XG5cbi8qKiBVc2VkIHRvIGNoZWNrIG9iamVjdHMgZm9yIG93biBwcm9wZXJ0aWVzLiAqL1xudmFyIGhhc093blByb3BlcnR5ID0gb2JqZWN0UHJvdG8uaGFzT3duUHJvcGVydHk7XG5cbi8qKlxuICogSW5pdGlhbGl6ZXMgYW4gYXJyYXkgY2xvbmUuXG4gKlxuICogQHByaXZhdGVcbiAqIEBwYXJhbSB7QXJyYXl9IGFycmF5IFRoZSBhcnJheSB0byBjbG9uZS5cbiAqIEByZXR1cm5zIHtBcnJheX0gUmV0dXJucyB0aGUgaW5pdGlhbGl6ZWQgY2xvbmUuXG4gKi9cbmZ1bmN0aW9uIGluaXRDbG9uZUFycmF5KGFycmF5KSB7XG4gIHZhciBsZW5ndGggPSBhcnJheS5sZW5ndGgsXG4gICAgICByZXN1bHQgPSBuZXcgYXJyYXkuY29uc3RydWN0b3IobGVuZ3RoKTtcblxuICAvLyBBZGQgcHJvcGVydGllcyBhc3NpZ25lZCBieSBgUmVnRXhwI2V4ZWNgLlxuICBpZiAobGVuZ3RoICYmIHR5cGVvZiBhcnJheVswXSA9PSAnc3RyaW5nJyAmJiBoYXNPd25Qcm9wZXJ0eS5jYWxsKGFycmF5LCAnaW5kZXgnKSkge1xuICAgIHJlc3VsdC5pbmRleCA9IGFycmF5LmluZGV4O1xuICAgIHJlc3VsdC5pbnB1dCA9IGFycmF5LmlucHV0O1xuICB9XG4gIHJldHVybiByZXN1bHQ7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gaW5pdENsb25lQXJyYXk7XG5cblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL25vZGVfbW9kdWxlcy9sb2Rhc2gvX2luaXRDbG9uZUFycmF5LmpzXG4vLyBtb2R1bGUgaWQgPSAuL25vZGVfbW9kdWxlcy9sb2Rhc2gvX2luaXRDbG9uZUFycmF5LmpzXG4vLyBtb2R1bGUgY2h1bmtzID0gMSIsInZhciBjbG9uZUFycmF5QnVmZmVyID0gcmVxdWlyZSgnLi9fY2xvbmVBcnJheUJ1ZmZlcicpLFxuICAgIGNsb25lRGF0YVZpZXcgPSByZXF1aXJlKCcuL19jbG9uZURhdGFWaWV3JyksXG4gICAgY2xvbmVSZWdFeHAgPSByZXF1aXJlKCcuL19jbG9uZVJlZ0V4cCcpLFxuICAgIGNsb25lU3ltYm9sID0gcmVxdWlyZSgnLi9fY2xvbmVTeW1ib2wnKSxcbiAgICBjbG9uZVR5cGVkQXJyYXkgPSByZXF1aXJlKCcuL19jbG9uZVR5cGVkQXJyYXknKTtcblxuLyoqIGBPYmplY3QjdG9TdHJpbmdgIHJlc3VsdCByZWZlcmVuY2VzLiAqL1xudmFyIGJvb2xUYWcgPSAnW29iamVjdCBCb29sZWFuXScsXG4gICAgZGF0ZVRhZyA9ICdbb2JqZWN0IERhdGVdJyxcbiAgICBtYXBUYWcgPSAnW29iamVjdCBNYXBdJyxcbiAgICBudW1iZXJUYWcgPSAnW29iamVjdCBOdW1iZXJdJyxcbiAgICByZWdleHBUYWcgPSAnW29iamVjdCBSZWdFeHBdJyxcbiAgICBzZXRUYWcgPSAnW29iamVjdCBTZXRdJyxcbiAgICBzdHJpbmdUYWcgPSAnW29iamVjdCBTdHJpbmddJyxcbiAgICBzeW1ib2xUYWcgPSAnW29iamVjdCBTeW1ib2xdJztcblxudmFyIGFycmF5QnVmZmVyVGFnID0gJ1tvYmplY3QgQXJyYXlCdWZmZXJdJyxcbiAgICBkYXRhVmlld1RhZyA9ICdbb2JqZWN0IERhdGFWaWV3XScsXG4gICAgZmxvYXQzMlRhZyA9ICdbb2JqZWN0IEZsb2F0MzJBcnJheV0nLFxuICAgIGZsb2F0NjRUYWcgPSAnW29iamVjdCBGbG9hdDY0QXJyYXldJyxcbiAgICBpbnQ4VGFnID0gJ1tvYmplY3QgSW50OEFycmF5XScsXG4gICAgaW50MTZUYWcgPSAnW29iamVjdCBJbnQxNkFycmF5XScsXG4gICAgaW50MzJUYWcgPSAnW29iamVjdCBJbnQzMkFycmF5XScsXG4gICAgdWludDhUYWcgPSAnW29iamVjdCBVaW50OEFycmF5XScsXG4gICAgdWludDhDbGFtcGVkVGFnID0gJ1tvYmplY3QgVWludDhDbGFtcGVkQXJyYXldJyxcbiAgICB1aW50MTZUYWcgPSAnW29iamVjdCBVaW50MTZBcnJheV0nLFxuICAgIHVpbnQzMlRhZyA9ICdbb2JqZWN0IFVpbnQzMkFycmF5XSc7XG5cbi8qKlxuICogSW5pdGlhbGl6ZXMgYW4gb2JqZWN0IGNsb25lIGJhc2VkIG9uIGl0cyBgdG9TdHJpbmdUYWdgLlxuICpcbiAqICoqTm90ZToqKiBUaGlzIGZ1bmN0aW9uIG9ubHkgc3VwcG9ydHMgY2xvbmluZyB2YWx1ZXMgd2l0aCB0YWdzIG9mXG4gKiBgQm9vbGVhbmAsIGBEYXRlYCwgYEVycm9yYCwgYE1hcGAsIGBOdW1iZXJgLCBgUmVnRXhwYCwgYFNldGAsIG9yIGBTdHJpbmdgLlxuICpcbiAqIEBwcml2YXRlXG4gKiBAcGFyYW0ge09iamVjdH0gb2JqZWN0IFRoZSBvYmplY3QgdG8gY2xvbmUuXG4gKiBAcGFyYW0ge3N0cmluZ30gdGFnIFRoZSBgdG9TdHJpbmdUYWdgIG9mIHRoZSBvYmplY3QgdG8gY2xvbmUuXG4gKiBAcGFyYW0ge2Jvb2xlYW59IFtpc0RlZXBdIFNwZWNpZnkgYSBkZWVwIGNsb25lLlxuICogQHJldHVybnMge09iamVjdH0gUmV0dXJucyB0aGUgaW5pdGlhbGl6ZWQgY2xvbmUuXG4gKi9cbmZ1bmN0aW9uIGluaXRDbG9uZUJ5VGFnKG9iamVjdCwgdGFnLCBpc0RlZXApIHtcbiAgdmFyIEN0b3IgPSBvYmplY3QuY29uc3RydWN0b3I7XG4gIHN3aXRjaCAodGFnKSB7XG4gICAgY2FzZSBhcnJheUJ1ZmZlclRhZzpcbiAgICAgIHJldHVybiBjbG9uZUFycmF5QnVmZmVyKG9iamVjdCk7XG5cbiAgICBjYXNlIGJvb2xUYWc6XG4gICAgY2FzZSBkYXRlVGFnOlxuICAgICAgcmV0dXJuIG5ldyBDdG9yKCtvYmplY3QpO1xuXG4gICAgY2FzZSBkYXRhVmlld1RhZzpcbiAgICAgIHJldHVybiBjbG9uZURhdGFWaWV3KG9iamVjdCwgaXNEZWVwKTtcblxuICAgIGNhc2UgZmxvYXQzMlRhZzogY2FzZSBmbG9hdDY0VGFnOlxuICAgIGNhc2UgaW50OFRhZzogY2FzZSBpbnQxNlRhZzogY2FzZSBpbnQzMlRhZzpcbiAgICBjYXNlIHVpbnQ4VGFnOiBjYXNlIHVpbnQ4Q2xhbXBlZFRhZzogY2FzZSB1aW50MTZUYWc6IGNhc2UgdWludDMyVGFnOlxuICAgICAgcmV0dXJuIGNsb25lVHlwZWRBcnJheShvYmplY3QsIGlzRGVlcCk7XG5cbiAgICBjYXNlIG1hcFRhZzpcbiAgICAgIHJldHVybiBuZXcgQ3RvcjtcblxuICAgIGNhc2UgbnVtYmVyVGFnOlxuICAgIGNhc2Ugc3RyaW5nVGFnOlxuICAgICAgcmV0dXJuIG5ldyBDdG9yKG9iamVjdCk7XG5cbiAgICBjYXNlIHJlZ2V4cFRhZzpcbiAgICAgIHJldHVybiBjbG9uZVJlZ0V4cChvYmplY3QpO1xuXG4gICAgY2FzZSBzZXRUYWc6XG4gICAgICByZXR1cm4gbmV3IEN0b3I7XG5cbiAgICBjYXNlIHN5bWJvbFRhZzpcbiAgICAgIHJldHVybiBjbG9uZVN5bWJvbChvYmplY3QpO1xuICB9XG59XG5cbm1vZHVsZS5leHBvcnRzID0gaW5pdENsb25lQnlUYWc7XG5cblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL25vZGVfbW9kdWxlcy9sb2Rhc2gvX2luaXRDbG9uZUJ5VGFnLmpzXG4vLyBtb2R1bGUgaWQgPSAuL25vZGVfbW9kdWxlcy9sb2Rhc2gvX2luaXRDbG9uZUJ5VGFnLmpzXG4vLyBtb2R1bGUgY2h1bmtzID0gMSIsInZhciBiYXNlQ3JlYXRlID0gcmVxdWlyZSgnLi9fYmFzZUNyZWF0ZScpLFxuICAgIGdldFByb3RvdHlwZSA9IHJlcXVpcmUoJy4vX2dldFByb3RvdHlwZScpLFxuICAgIGlzUHJvdG90eXBlID0gcmVxdWlyZSgnLi9faXNQcm90b3R5cGUnKTtcblxuLyoqXG4gKiBJbml0aWFsaXplcyBhbiBvYmplY3QgY2xvbmUuXG4gKlxuICogQHByaXZhdGVcbiAqIEBwYXJhbSB7T2JqZWN0fSBvYmplY3QgVGhlIG9iamVjdCB0byBjbG9uZS5cbiAqIEByZXR1cm5zIHtPYmplY3R9IFJldHVybnMgdGhlIGluaXRpYWxpemVkIGNsb25lLlxuICovXG5mdW5jdGlvbiBpbml0Q2xvbmVPYmplY3Qob2JqZWN0KSB7XG4gIHJldHVybiAodHlwZW9mIG9iamVjdC5jb25zdHJ1Y3RvciA9PSAnZnVuY3Rpb24nICYmICFpc1Byb3RvdHlwZShvYmplY3QpKVxuICAgID8gYmFzZUNyZWF0ZShnZXRQcm90b3R5cGUob2JqZWN0KSlcbiAgICA6IHt9O1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGluaXRDbG9uZU9iamVjdDtcblxuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vbm9kZV9tb2R1bGVzL2xvZGFzaC9faW5pdENsb25lT2JqZWN0LmpzXG4vLyBtb2R1bGUgaWQgPSAuL25vZGVfbW9kdWxlcy9sb2Rhc2gvX2luaXRDbG9uZU9iamVjdC5qc1xuLy8gbW9kdWxlIGNodW5rcyA9IDEiLCJ2YXIgU3ltYm9sID0gcmVxdWlyZSgnLi9fU3ltYm9sJyksXG4gICAgaXNBcmd1bWVudHMgPSByZXF1aXJlKCcuL2lzQXJndW1lbnRzJyksXG4gICAgaXNBcnJheSA9IHJlcXVpcmUoJy4vaXNBcnJheScpO1xuXG4vKiogQnVpbHQtaW4gdmFsdWUgcmVmZXJlbmNlcy4gKi9cbnZhciBzcHJlYWRhYmxlU3ltYm9sID0gU3ltYm9sID8gU3ltYm9sLmlzQ29uY2F0U3ByZWFkYWJsZSA6IHVuZGVmaW5lZDtcblxuLyoqXG4gKiBDaGVja3MgaWYgYHZhbHVlYCBpcyBhIGZsYXR0ZW5hYmxlIGBhcmd1bWVudHNgIG9iamVjdCBvciBhcnJheS5cbiAqXG4gKiBAcHJpdmF0ZVxuICogQHBhcmFtIHsqfSB2YWx1ZSBUaGUgdmFsdWUgdG8gY2hlY2suXG4gKiBAcmV0dXJucyB7Ym9vbGVhbn0gUmV0dXJucyBgdHJ1ZWAgaWYgYHZhbHVlYCBpcyBmbGF0dGVuYWJsZSwgZWxzZSBgZmFsc2VgLlxuICovXG5mdW5jdGlvbiBpc0ZsYXR0ZW5hYmxlKHZhbHVlKSB7XG4gIHJldHVybiBpc0FycmF5KHZhbHVlKSB8fCBpc0FyZ3VtZW50cyh2YWx1ZSkgfHxcbiAgICAhIShzcHJlYWRhYmxlU3ltYm9sICYmIHZhbHVlICYmIHZhbHVlW3NwcmVhZGFibGVTeW1ib2xdKTtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBpc0ZsYXR0ZW5hYmxlO1xuXG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9ub2RlX21vZHVsZXMvbG9kYXNoL19pc0ZsYXR0ZW5hYmxlLmpzXG4vLyBtb2R1bGUgaWQgPSAuL25vZGVfbW9kdWxlcy9sb2Rhc2gvX2lzRmxhdHRlbmFibGUuanNcbi8vIG1vZHVsZSBjaHVua3MgPSAxIiwiLyoqIFVzZWQgYXMgcmVmZXJlbmNlcyBmb3IgdmFyaW91cyBgTnVtYmVyYCBjb25zdGFudHMuICovXG52YXIgTUFYX1NBRkVfSU5URUdFUiA9IDkwMDcxOTkyNTQ3NDA5OTE7XG5cbi8qKiBVc2VkIHRvIGRldGVjdCB1bnNpZ25lZCBpbnRlZ2VyIHZhbHVlcy4gKi9cbnZhciByZUlzVWludCA9IC9eKD86MHxbMS05XVxcZCopJC87XG5cbi8qKlxuICogQ2hlY2tzIGlmIGB2YWx1ZWAgaXMgYSB2YWxpZCBhcnJheS1saWtlIGluZGV4LlxuICpcbiAqIEBwcml2YXRlXG4gKiBAcGFyYW0geyp9IHZhbHVlIFRoZSB2YWx1ZSB0byBjaGVjay5cbiAqIEBwYXJhbSB7bnVtYmVyfSBbbGVuZ3RoPU1BWF9TQUZFX0lOVEVHRVJdIFRoZSB1cHBlciBib3VuZHMgb2YgYSB2YWxpZCBpbmRleC5cbiAqIEByZXR1cm5zIHtib29sZWFufSBSZXR1cm5zIGB0cnVlYCBpZiBgdmFsdWVgIGlzIGEgdmFsaWQgaW5kZXgsIGVsc2UgYGZhbHNlYC5cbiAqL1xuZnVuY3Rpb24gaXNJbmRleCh2YWx1ZSwgbGVuZ3RoKSB7XG4gIHZhciB0eXBlID0gdHlwZW9mIHZhbHVlO1xuICBsZW5ndGggPSBsZW5ndGggPT0gbnVsbCA/IE1BWF9TQUZFX0lOVEVHRVIgOiBsZW5ndGg7XG5cbiAgcmV0dXJuICEhbGVuZ3RoICYmXG4gICAgKHR5cGUgPT0gJ251bWJlcicgfHxcbiAgICAgICh0eXBlICE9ICdzeW1ib2wnICYmIHJlSXNVaW50LnRlc3QodmFsdWUpKSkgJiZcbiAgICAgICAgKHZhbHVlID4gLTEgJiYgdmFsdWUgJSAxID09IDAgJiYgdmFsdWUgPCBsZW5ndGgpO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGlzSW5kZXg7XG5cblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL25vZGVfbW9kdWxlcy9sb2Rhc2gvX2lzSW5kZXguanNcbi8vIG1vZHVsZSBpZCA9IC4vbm9kZV9tb2R1bGVzL2xvZGFzaC9faXNJbmRleC5qc1xuLy8gbW9kdWxlIGNodW5rcyA9IDEiLCJ2YXIgZXEgPSByZXF1aXJlKCcuL2VxJyksXG4gICAgaXNBcnJheUxpa2UgPSByZXF1aXJlKCcuL2lzQXJyYXlMaWtlJyksXG4gICAgaXNJbmRleCA9IHJlcXVpcmUoJy4vX2lzSW5kZXgnKSxcbiAgICBpc09iamVjdCA9IHJlcXVpcmUoJy4vaXNPYmplY3QnKTtcblxuLyoqXG4gKiBDaGVja3MgaWYgdGhlIGdpdmVuIGFyZ3VtZW50cyBhcmUgZnJvbSBhbiBpdGVyYXRlZSBjYWxsLlxuICpcbiAqIEBwcml2YXRlXG4gKiBAcGFyYW0geyp9IHZhbHVlIFRoZSBwb3RlbnRpYWwgaXRlcmF0ZWUgdmFsdWUgYXJndW1lbnQuXG4gKiBAcGFyYW0geyp9IGluZGV4IFRoZSBwb3RlbnRpYWwgaXRlcmF0ZWUgaW5kZXggb3Iga2V5IGFyZ3VtZW50LlxuICogQHBhcmFtIHsqfSBvYmplY3QgVGhlIHBvdGVudGlhbCBpdGVyYXRlZSBvYmplY3QgYXJndW1lbnQuXG4gKiBAcmV0dXJucyB7Ym9vbGVhbn0gUmV0dXJucyBgdHJ1ZWAgaWYgdGhlIGFyZ3VtZW50cyBhcmUgZnJvbSBhbiBpdGVyYXRlZSBjYWxsLFxuICogIGVsc2UgYGZhbHNlYC5cbiAqL1xuZnVuY3Rpb24gaXNJdGVyYXRlZUNhbGwodmFsdWUsIGluZGV4LCBvYmplY3QpIHtcbiAgaWYgKCFpc09iamVjdChvYmplY3QpKSB7XG4gICAgcmV0dXJuIGZhbHNlO1xuICB9XG4gIHZhciB0eXBlID0gdHlwZW9mIGluZGV4O1xuICBpZiAodHlwZSA9PSAnbnVtYmVyJ1xuICAgICAgICA/IChpc0FycmF5TGlrZShvYmplY3QpICYmIGlzSW5kZXgoaW5kZXgsIG9iamVjdC5sZW5ndGgpKVxuICAgICAgICA6ICh0eXBlID09ICdzdHJpbmcnICYmIGluZGV4IGluIG9iamVjdClcbiAgICAgICkge1xuICAgIHJldHVybiBlcShvYmplY3RbaW5kZXhdLCB2YWx1ZSk7XG4gIH1cbiAgcmV0dXJuIGZhbHNlO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGlzSXRlcmF0ZWVDYWxsO1xuXG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9ub2RlX21vZHVsZXMvbG9kYXNoL19pc0l0ZXJhdGVlQ2FsbC5qc1xuLy8gbW9kdWxlIGlkID0gLi9ub2RlX21vZHVsZXMvbG9kYXNoL19pc0l0ZXJhdGVlQ2FsbC5qc1xuLy8gbW9kdWxlIGNodW5rcyA9IDEiLCJ2YXIgaXNBcnJheSA9IHJlcXVpcmUoJy4vaXNBcnJheScpLFxuICAgIGlzU3ltYm9sID0gcmVxdWlyZSgnLi9pc1N5bWJvbCcpO1xuXG4vKiogVXNlZCB0byBtYXRjaCBwcm9wZXJ0eSBuYW1lcyB3aXRoaW4gcHJvcGVydHkgcGF0aHMuICovXG52YXIgcmVJc0RlZXBQcm9wID0gL1xcLnxcXFsoPzpbXltcXF1dKnwoW1wiJ10pKD86KD8hXFwxKVteXFxcXF18XFxcXC4pKj9cXDEpXFxdLyxcbiAgICByZUlzUGxhaW5Qcm9wID0gL15cXHcqJC87XG5cbi8qKlxuICogQ2hlY2tzIGlmIGB2YWx1ZWAgaXMgYSBwcm9wZXJ0eSBuYW1lIGFuZCBub3QgYSBwcm9wZXJ0eSBwYXRoLlxuICpcbiAqIEBwcml2YXRlXG4gKiBAcGFyYW0geyp9IHZhbHVlIFRoZSB2YWx1ZSB0byBjaGVjay5cbiAqIEBwYXJhbSB7T2JqZWN0fSBbb2JqZWN0XSBUaGUgb2JqZWN0IHRvIHF1ZXJ5IGtleXMgb24uXG4gKiBAcmV0dXJucyB7Ym9vbGVhbn0gUmV0dXJucyBgdHJ1ZWAgaWYgYHZhbHVlYCBpcyBhIHByb3BlcnR5IG5hbWUsIGVsc2UgYGZhbHNlYC5cbiAqL1xuZnVuY3Rpb24gaXNLZXkodmFsdWUsIG9iamVjdCkge1xuICBpZiAoaXNBcnJheSh2YWx1ZSkpIHtcbiAgICByZXR1cm4gZmFsc2U7XG4gIH1cbiAgdmFyIHR5cGUgPSB0eXBlb2YgdmFsdWU7XG4gIGlmICh0eXBlID09ICdudW1iZXInIHx8IHR5cGUgPT0gJ3N5bWJvbCcgfHwgdHlwZSA9PSAnYm9vbGVhbicgfHxcbiAgICAgIHZhbHVlID09IG51bGwgfHwgaXNTeW1ib2wodmFsdWUpKSB7XG4gICAgcmV0dXJuIHRydWU7XG4gIH1cbiAgcmV0dXJuIHJlSXNQbGFpblByb3AudGVzdCh2YWx1ZSkgfHwgIXJlSXNEZWVwUHJvcC50ZXN0KHZhbHVlKSB8fFxuICAgIChvYmplY3QgIT0gbnVsbCAmJiB2YWx1ZSBpbiBPYmplY3Qob2JqZWN0KSk7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gaXNLZXk7XG5cblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL25vZGVfbW9kdWxlcy9sb2Rhc2gvX2lzS2V5LmpzXG4vLyBtb2R1bGUgaWQgPSAuL25vZGVfbW9kdWxlcy9sb2Rhc2gvX2lzS2V5LmpzXG4vLyBtb2R1bGUgY2h1bmtzID0gMSIsIi8qKlxuICogQ2hlY2tzIGlmIGB2YWx1ZWAgaXMgc3VpdGFibGUgZm9yIHVzZSBhcyB1bmlxdWUgb2JqZWN0IGtleS5cbiAqXG4gKiBAcHJpdmF0ZVxuICogQHBhcmFtIHsqfSB2YWx1ZSBUaGUgdmFsdWUgdG8gY2hlY2suXG4gKiBAcmV0dXJucyB7Ym9vbGVhbn0gUmV0dXJucyBgdHJ1ZWAgaWYgYHZhbHVlYCBpcyBzdWl0YWJsZSwgZWxzZSBgZmFsc2VgLlxuICovXG5mdW5jdGlvbiBpc0tleWFibGUodmFsdWUpIHtcbiAgdmFyIHR5cGUgPSB0eXBlb2YgdmFsdWU7XG4gIHJldHVybiAodHlwZSA9PSAnc3RyaW5nJyB8fCB0eXBlID09ICdudW1iZXInIHx8IHR5cGUgPT0gJ3N5bWJvbCcgfHwgdHlwZSA9PSAnYm9vbGVhbicpXG4gICAgPyAodmFsdWUgIT09ICdfX3Byb3RvX18nKVxuICAgIDogKHZhbHVlID09PSBudWxsKTtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBpc0tleWFibGU7XG5cblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL25vZGVfbW9kdWxlcy9sb2Rhc2gvX2lzS2V5YWJsZS5qc1xuLy8gbW9kdWxlIGlkID0gLi9ub2RlX21vZHVsZXMvbG9kYXNoL19pc0tleWFibGUuanNcbi8vIG1vZHVsZSBjaHVua3MgPSAxIiwidmFyIGNvcmVKc0RhdGEgPSByZXF1aXJlKCcuL19jb3JlSnNEYXRhJyk7XG5cbi8qKiBVc2VkIHRvIGRldGVjdCBtZXRob2RzIG1hc3F1ZXJhZGluZyBhcyBuYXRpdmUuICovXG52YXIgbWFza1NyY0tleSA9IChmdW5jdGlvbigpIHtcbiAgdmFyIHVpZCA9IC9bXi5dKyQvLmV4ZWMoY29yZUpzRGF0YSAmJiBjb3JlSnNEYXRhLmtleXMgJiYgY29yZUpzRGF0YS5rZXlzLklFX1BST1RPIHx8ICcnKTtcbiAgcmV0dXJuIHVpZCA/ICgnU3ltYm9sKHNyYylfMS4nICsgdWlkKSA6ICcnO1xufSgpKTtcblxuLyoqXG4gKiBDaGVja3MgaWYgYGZ1bmNgIGhhcyBpdHMgc291cmNlIG1hc2tlZC5cbiAqXG4gKiBAcHJpdmF0ZVxuICogQHBhcmFtIHtGdW5jdGlvbn0gZnVuYyBUaGUgZnVuY3Rpb24gdG8gY2hlY2suXG4gKiBAcmV0dXJucyB7Ym9vbGVhbn0gUmV0dXJucyBgdHJ1ZWAgaWYgYGZ1bmNgIGlzIG1hc2tlZCwgZWxzZSBgZmFsc2VgLlxuICovXG5mdW5jdGlvbiBpc01hc2tlZChmdW5jKSB7XG4gIHJldHVybiAhIW1hc2tTcmNLZXkgJiYgKG1hc2tTcmNLZXkgaW4gZnVuYyk7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gaXNNYXNrZWQ7XG5cblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL25vZGVfbW9kdWxlcy9sb2Rhc2gvX2lzTWFza2VkLmpzXG4vLyBtb2R1bGUgaWQgPSAuL25vZGVfbW9kdWxlcy9sb2Rhc2gvX2lzTWFza2VkLmpzXG4vLyBtb2R1bGUgY2h1bmtzID0gMSIsIi8qKiBVc2VkIGZvciBidWlsdC1pbiBtZXRob2QgcmVmZXJlbmNlcy4gKi9cbnZhciBvYmplY3RQcm90byA9IE9iamVjdC5wcm90b3R5cGU7XG5cbi8qKlxuICogQ2hlY2tzIGlmIGB2YWx1ZWAgaXMgbGlrZWx5IGEgcHJvdG90eXBlIG9iamVjdC5cbiAqXG4gKiBAcHJpdmF0ZVxuICogQHBhcmFtIHsqfSB2YWx1ZSBUaGUgdmFsdWUgdG8gY2hlY2suXG4gKiBAcmV0dXJucyB7Ym9vbGVhbn0gUmV0dXJucyBgdHJ1ZWAgaWYgYHZhbHVlYCBpcyBhIHByb3RvdHlwZSwgZWxzZSBgZmFsc2VgLlxuICovXG5mdW5jdGlvbiBpc1Byb3RvdHlwZSh2YWx1ZSkge1xuICB2YXIgQ3RvciA9IHZhbHVlICYmIHZhbHVlLmNvbnN0cnVjdG9yLFxuICAgICAgcHJvdG8gPSAodHlwZW9mIEN0b3IgPT0gJ2Z1bmN0aW9uJyAmJiBDdG9yLnByb3RvdHlwZSkgfHwgb2JqZWN0UHJvdG87XG5cbiAgcmV0dXJuIHZhbHVlID09PSBwcm90bztcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBpc1Byb3RvdHlwZTtcblxuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vbm9kZV9tb2R1bGVzL2xvZGFzaC9faXNQcm90b3R5cGUuanNcbi8vIG1vZHVsZSBpZCA9IC4vbm9kZV9tb2R1bGVzL2xvZGFzaC9faXNQcm90b3R5cGUuanNcbi8vIG1vZHVsZSBjaHVua3MgPSAxIiwidmFyIGlzT2JqZWN0ID0gcmVxdWlyZSgnLi9pc09iamVjdCcpO1xuXG4vKipcbiAqIENoZWNrcyBpZiBgdmFsdWVgIGlzIHN1aXRhYmxlIGZvciBzdHJpY3QgZXF1YWxpdHkgY29tcGFyaXNvbnMsIGkuZS4gYD09PWAuXG4gKlxuICogQHByaXZhdGVcbiAqIEBwYXJhbSB7Kn0gdmFsdWUgVGhlIHZhbHVlIHRvIGNoZWNrLlxuICogQHJldHVybnMge2Jvb2xlYW59IFJldHVybnMgYHRydWVgIGlmIGB2YWx1ZWAgaWYgc3VpdGFibGUgZm9yIHN0cmljdFxuICogIGVxdWFsaXR5IGNvbXBhcmlzb25zLCBlbHNlIGBmYWxzZWAuXG4gKi9cbmZ1bmN0aW9uIGlzU3RyaWN0Q29tcGFyYWJsZSh2YWx1ZSkge1xuICByZXR1cm4gdmFsdWUgPT09IHZhbHVlICYmICFpc09iamVjdCh2YWx1ZSk7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gaXNTdHJpY3RDb21wYXJhYmxlO1xuXG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9ub2RlX21vZHVsZXMvbG9kYXNoL19pc1N0cmljdENvbXBhcmFibGUuanNcbi8vIG1vZHVsZSBpZCA9IC4vbm9kZV9tb2R1bGVzL2xvZGFzaC9faXNTdHJpY3RDb21wYXJhYmxlLmpzXG4vLyBtb2R1bGUgY2h1bmtzID0gMSIsIi8qKlxuICogUmVtb3ZlcyBhbGwga2V5LXZhbHVlIGVudHJpZXMgZnJvbSB0aGUgbGlzdCBjYWNoZS5cbiAqXG4gKiBAcHJpdmF0ZVxuICogQG5hbWUgY2xlYXJcbiAqIEBtZW1iZXJPZiBMaXN0Q2FjaGVcbiAqL1xuZnVuY3Rpb24gbGlzdENhY2hlQ2xlYXIoKSB7XG4gIHRoaXMuX19kYXRhX18gPSBbXTtcbiAgdGhpcy5zaXplID0gMDtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBsaXN0Q2FjaGVDbGVhcjtcblxuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vbm9kZV9tb2R1bGVzL2xvZGFzaC9fbGlzdENhY2hlQ2xlYXIuanNcbi8vIG1vZHVsZSBpZCA9IC4vbm9kZV9tb2R1bGVzL2xvZGFzaC9fbGlzdENhY2hlQ2xlYXIuanNcbi8vIG1vZHVsZSBjaHVua3MgPSAxIiwidmFyIGFzc29jSW5kZXhPZiA9IHJlcXVpcmUoJy4vX2Fzc29jSW5kZXhPZicpO1xuXG4vKiogVXNlZCBmb3IgYnVpbHQtaW4gbWV0aG9kIHJlZmVyZW5jZXMuICovXG52YXIgYXJyYXlQcm90byA9IEFycmF5LnByb3RvdHlwZTtcblxuLyoqIEJ1aWx0LWluIHZhbHVlIHJlZmVyZW5jZXMuICovXG52YXIgc3BsaWNlID0gYXJyYXlQcm90by5zcGxpY2U7XG5cbi8qKlxuICogUmVtb3ZlcyBga2V5YCBhbmQgaXRzIHZhbHVlIGZyb20gdGhlIGxpc3QgY2FjaGUuXG4gKlxuICogQHByaXZhdGVcbiAqIEBuYW1lIGRlbGV0ZVxuICogQG1lbWJlck9mIExpc3RDYWNoZVxuICogQHBhcmFtIHtzdHJpbmd9IGtleSBUaGUga2V5IG9mIHRoZSB2YWx1ZSB0byByZW1vdmUuXG4gKiBAcmV0dXJucyB7Ym9vbGVhbn0gUmV0dXJucyBgdHJ1ZWAgaWYgdGhlIGVudHJ5IHdhcyByZW1vdmVkLCBlbHNlIGBmYWxzZWAuXG4gKi9cbmZ1bmN0aW9uIGxpc3RDYWNoZURlbGV0ZShrZXkpIHtcbiAgdmFyIGRhdGEgPSB0aGlzLl9fZGF0YV9fLFxuICAgICAgaW5kZXggPSBhc3NvY0luZGV4T2YoZGF0YSwga2V5KTtcblxuICBpZiAoaW5kZXggPCAwKSB7XG4gICAgcmV0dXJuIGZhbHNlO1xuICB9XG4gIHZhciBsYXN0SW5kZXggPSBkYXRhLmxlbmd0aCAtIDE7XG4gIGlmIChpbmRleCA9PSBsYXN0SW5kZXgpIHtcbiAgICBkYXRhLnBvcCgpO1xuICB9IGVsc2Uge1xuICAgIHNwbGljZS5jYWxsKGRhdGEsIGluZGV4LCAxKTtcbiAgfVxuICAtLXRoaXMuc2l6ZTtcbiAgcmV0dXJuIHRydWU7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gbGlzdENhY2hlRGVsZXRlO1xuXG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9ub2RlX21vZHVsZXMvbG9kYXNoL19saXN0Q2FjaGVEZWxldGUuanNcbi8vIG1vZHVsZSBpZCA9IC4vbm9kZV9tb2R1bGVzL2xvZGFzaC9fbGlzdENhY2hlRGVsZXRlLmpzXG4vLyBtb2R1bGUgY2h1bmtzID0gMSIsInZhciBhc3NvY0luZGV4T2YgPSByZXF1aXJlKCcuL19hc3NvY0luZGV4T2YnKTtcblxuLyoqXG4gKiBHZXRzIHRoZSBsaXN0IGNhY2hlIHZhbHVlIGZvciBga2V5YC5cbiAqXG4gKiBAcHJpdmF0ZVxuICogQG5hbWUgZ2V0XG4gKiBAbWVtYmVyT2YgTGlzdENhY2hlXG4gKiBAcGFyYW0ge3N0cmluZ30ga2V5IFRoZSBrZXkgb2YgdGhlIHZhbHVlIHRvIGdldC5cbiAqIEByZXR1cm5zIHsqfSBSZXR1cm5zIHRoZSBlbnRyeSB2YWx1ZS5cbiAqL1xuZnVuY3Rpb24gbGlzdENhY2hlR2V0KGtleSkge1xuICB2YXIgZGF0YSA9IHRoaXMuX19kYXRhX18sXG4gICAgICBpbmRleCA9IGFzc29jSW5kZXhPZihkYXRhLCBrZXkpO1xuXG4gIHJldHVybiBpbmRleCA8IDAgPyB1bmRlZmluZWQgOiBkYXRhW2luZGV4XVsxXTtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBsaXN0Q2FjaGVHZXQ7XG5cblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL25vZGVfbW9kdWxlcy9sb2Rhc2gvX2xpc3RDYWNoZUdldC5qc1xuLy8gbW9kdWxlIGlkID0gLi9ub2RlX21vZHVsZXMvbG9kYXNoL19saXN0Q2FjaGVHZXQuanNcbi8vIG1vZHVsZSBjaHVua3MgPSAxIiwidmFyIGFzc29jSW5kZXhPZiA9IHJlcXVpcmUoJy4vX2Fzc29jSW5kZXhPZicpO1xuXG4vKipcbiAqIENoZWNrcyBpZiBhIGxpc3QgY2FjaGUgdmFsdWUgZm9yIGBrZXlgIGV4aXN0cy5cbiAqXG4gKiBAcHJpdmF0ZVxuICogQG5hbWUgaGFzXG4gKiBAbWVtYmVyT2YgTGlzdENhY2hlXG4gKiBAcGFyYW0ge3N0cmluZ30ga2V5IFRoZSBrZXkgb2YgdGhlIGVudHJ5IHRvIGNoZWNrLlxuICogQHJldHVybnMge2Jvb2xlYW59IFJldHVybnMgYHRydWVgIGlmIGFuIGVudHJ5IGZvciBga2V5YCBleGlzdHMsIGVsc2UgYGZhbHNlYC5cbiAqL1xuZnVuY3Rpb24gbGlzdENhY2hlSGFzKGtleSkge1xuICByZXR1cm4gYXNzb2NJbmRleE9mKHRoaXMuX19kYXRhX18sIGtleSkgPiAtMTtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBsaXN0Q2FjaGVIYXM7XG5cblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL25vZGVfbW9kdWxlcy9sb2Rhc2gvX2xpc3RDYWNoZUhhcy5qc1xuLy8gbW9kdWxlIGlkID0gLi9ub2RlX21vZHVsZXMvbG9kYXNoL19saXN0Q2FjaGVIYXMuanNcbi8vIG1vZHVsZSBjaHVua3MgPSAxIiwidmFyIGFzc29jSW5kZXhPZiA9IHJlcXVpcmUoJy4vX2Fzc29jSW5kZXhPZicpO1xuXG4vKipcbiAqIFNldHMgdGhlIGxpc3QgY2FjaGUgYGtleWAgdG8gYHZhbHVlYC5cbiAqXG4gKiBAcHJpdmF0ZVxuICogQG5hbWUgc2V0XG4gKiBAbWVtYmVyT2YgTGlzdENhY2hlXG4gKiBAcGFyYW0ge3N0cmluZ30ga2V5IFRoZSBrZXkgb2YgdGhlIHZhbHVlIHRvIHNldC5cbiAqIEBwYXJhbSB7Kn0gdmFsdWUgVGhlIHZhbHVlIHRvIHNldC5cbiAqIEByZXR1cm5zIHtPYmplY3R9IFJldHVybnMgdGhlIGxpc3QgY2FjaGUgaW5zdGFuY2UuXG4gKi9cbmZ1bmN0aW9uIGxpc3RDYWNoZVNldChrZXksIHZhbHVlKSB7XG4gIHZhciBkYXRhID0gdGhpcy5fX2RhdGFfXyxcbiAgICAgIGluZGV4ID0gYXNzb2NJbmRleE9mKGRhdGEsIGtleSk7XG5cbiAgaWYgKGluZGV4IDwgMCkge1xuICAgICsrdGhpcy5zaXplO1xuICAgIGRhdGEucHVzaChba2V5LCB2YWx1ZV0pO1xuICB9IGVsc2Uge1xuICAgIGRhdGFbaW5kZXhdWzFdID0gdmFsdWU7XG4gIH1cbiAgcmV0dXJuIHRoaXM7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gbGlzdENhY2hlU2V0O1xuXG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9ub2RlX21vZHVsZXMvbG9kYXNoL19saXN0Q2FjaGVTZXQuanNcbi8vIG1vZHVsZSBpZCA9IC4vbm9kZV9tb2R1bGVzL2xvZGFzaC9fbGlzdENhY2hlU2V0LmpzXG4vLyBtb2R1bGUgY2h1bmtzID0gMSIsInZhciBIYXNoID0gcmVxdWlyZSgnLi9fSGFzaCcpLFxuICAgIExpc3RDYWNoZSA9IHJlcXVpcmUoJy4vX0xpc3RDYWNoZScpLFxuICAgIE1hcCA9IHJlcXVpcmUoJy4vX01hcCcpO1xuXG4vKipcbiAqIFJlbW92ZXMgYWxsIGtleS12YWx1ZSBlbnRyaWVzIGZyb20gdGhlIG1hcC5cbiAqXG4gKiBAcHJpdmF0ZVxuICogQG5hbWUgY2xlYXJcbiAqIEBtZW1iZXJPZiBNYXBDYWNoZVxuICovXG5mdW5jdGlvbiBtYXBDYWNoZUNsZWFyKCkge1xuICB0aGlzLnNpemUgPSAwO1xuICB0aGlzLl9fZGF0YV9fID0ge1xuICAgICdoYXNoJzogbmV3IEhhc2gsXG4gICAgJ21hcCc6IG5ldyAoTWFwIHx8IExpc3RDYWNoZSksXG4gICAgJ3N0cmluZyc6IG5ldyBIYXNoXG4gIH07XG59XG5cbm1vZHVsZS5leHBvcnRzID0gbWFwQ2FjaGVDbGVhcjtcblxuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vbm9kZV9tb2R1bGVzL2xvZGFzaC9fbWFwQ2FjaGVDbGVhci5qc1xuLy8gbW9kdWxlIGlkID0gLi9ub2RlX21vZHVsZXMvbG9kYXNoL19tYXBDYWNoZUNsZWFyLmpzXG4vLyBtb2R1bGUgY2h1bmtzID0gMSIsInZhciBnZXRNYXBEYXRhID0gcmVxdWlyZSgnLi9fZ2V0TWFwRGF0YScpO1xuXG4vKipcbiAqIFJlbW92ZXMgYGtleWAgYW5kIGl0cyB2YWx1ZSBmcm9tIHRoZSBtYXAuXG4gKlxuICogQHByaXZhdGVcbiAqIEBuYW1lIGRlbGV0ZVxuICogQG1lbWJlck9mIE1hcENhY2hlXG4gKiBAcGFyYW0ge3N0cmluZ30ga2V5IFRoZSBrZXkgb2YgdGhlIHZhbHVlIHRvIHJlbW92ZS5cbiAqIEByZXR1cm5zIHtib29sZWFufSBSZXR1cm5zIGB0cnVlYCBpZiB0aGUgZW50cnkgd2FzIHJlbW92ZWQsIGVsc2UgYGZhbHNlYC5cbiAqL1xuZnVuY3Rpb24gbWFwQ2FjaGVEZWxldGUoa2V5KSB7XG4gIHZhciByZXN1bHQgPSBnZXRNYXBEYXRhKHRoaXMsIGtleSlbJ2RlbGV0ZSddKGtleSk7XG4gIHRoaXMuc2l6ZSAtPSByZXN1bHQgPyAxIDogMDtcbiAgcmV0dXJuIHJlc3VsdDtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBtYXBDYWNoZURlbGV0ZTtcblxuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vbm9kZV9tb2R1bGVzL2xvZGFzaC9fbWFwQ2FjaGVEZWxldGUuanNcbi8vIG1vZHVsZSBpZCA9IC4vbm9kZV9tb2R1bGVzL2xvZGFzaC9fbWFwQ2FjaGVEZWxldGUuanNcbi8vIG1vZHVsZSBjaHVua3MgPSAxIiwidmFyIGdldE1hcERhdGEgPSByZXF1aXJlKCcuL19nZXRNYXBEYXRhJyk7XG5cbi8qKlxuICogR2V0cyB0aGUgbWFwIHZhbHVlIGZvciBga2V5YC5cbiAqXG4gKiBAcHJpdmF0ZVxuICogQG5hbWUgZ2V0XG4gKiBAbWVtYmVyT2YgTWFwQ2FjaGVcbiAqIEBwYXJhbSB7c3RyaW5nfSBrZXkgVGhlIGtleSBvZiB0aGUgdmFsdWUgdG8gZ2V0LlxuICogQHJldHVybnMgeyp9IFJldHVybnMgdGhlIGVudHJ5IHZhbHVlLlxuICovXG5mdW5jdGlvbiBtYXBDYWNoZUdldChrZXkpIHtcbiAgcmV0dXJuIGdldE1hcERhdGEodGhpcywga2V5KS5nZXQoa2V5KTtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBtYXBDYWNoZUdldDtcblxuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vbm9kZV9tb2R1bGVzL2xvZGFzaC9fbWFwQ2FjaGVHZXQuanNcbi8vIG1vZHVsZSBpZCA9IC4vbm9kZV9tb2R1bGVzL2xvZGFzaC9fbWFwQ2FjaGVHZXQuanNcbi8vIG1vZHVsZSBjaHVua3MgPSAxIiwidmFyIGdldE1hcERhdGEgPSByZXF1aXJlKCcuL19nZXRNYXBEYXRhJyk7XG5cbi8qKlxuICogQ2hlY2tzIGlmIGEgbWFwIHZhbHVlIGZvciBga2V5YCBleGlzdHMuXG4gKlxuICogQHByaXZhdGVcbiAqIEBuYW1lIGhhc1xuICogQG1lbWJlck9mIE1hcENhY2hlXG4gKiBAcGFyYW0ge3N0cmluZ30ga2V5IFRoZSBrZXkgb2YgdGhlIGVudHJ5IHRvIGNoZWNrLlxuICogQHJldHVybnMge2Jvb2xlYW59IFJldHVybnMgYHRydWVgIGlmIGFuIGVudHJ5IGZvciBga2V5YCBleGlzdHMsIGVsc2UgYGZhbHNlYC5cbiAqL1xuZnVuY3Rpb24gbWFwQ2FjaGVIYXMoa2V5KSB7XG4gIHJldHVybiBnZXRNYXBEYXRhKHRoaXMsIGtleSkuaGFzKGtleSk7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gbWFwQ2FjaGVIYXM7XG5cblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL25vZGVfbW9kdWxlcy9sb2Rhc2gvX21hcENhY2hlSGFzLmpzXG4vLyBtb2R1bGUgaWQgPSAuL25vZGVfbW9kdWxlcy9sb2Rhc2gvX21hcENhY2hlSGFzLmpzXG4vLyBtb2R1bGUgY2h1bmtzID0gMSIsInZhciBnZXRNYXBEYXRhID0gcmVxdWlyZSgnLi9fZ2V0TWFwRGF0YScpO1xuXG4vKipcbiAqIFNldHMgdGhlIG1hcCBga2V5YCB0byBgdmFsdWVgLlxuICpcbiAqIEBwcml2YXRlXG4gKiBAbmFtZSBzZXRcbiAqIEBtZW1iZXJPZiBNYXBDYWNoZVxuICogQHBhcmFtIHtzdHJpbmd9IGtleSBUaGUga2V5IG9mIHRoZSB2YWx1ZSB0byBzZXQuXG4gKiBAcGFyYW0geyp9IHZhbHVlIFRoZSB2YWx1ZSB0byBzZXQuXG4gKiBAcmV0dXJucyB7T2JqZWN0fSBSZXR1cm5zIHRoZSBtYXAgY2FjaGUgaW5zdGFuY2UuXG4gKi9cbmZ1bmN0aW9uIG1hcENhY2hlU2V0KGtleSwgdmFsdWUpIHtcbiAgdmFyIGRhdGEgPSBnZXRNYXBEYXRhKHRoaXMsIGtleSksXG4gICAgICBzaXplID0gZGF0YS5zaXplO1xuXG4gIGRhdGEuc2V0KGtleSwgdmFsdWUpO1xuICB0aGlzLnNpemUgKz0gZGF0YS5zaXplID09IHNpemUgPyAwIDogMTtcbiAgcmV0dXJuIHRoaXM7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gbWFwQ2FjaGVTZXQ7XG5cblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL25vZGVfbW9kdWxlcy9sb2Rhc2gvX21hcENhY2hlU2V0LmpzXG4vLyBtb2R1bGUgaWQgPSAuL25vZGVfbW9kdWxlcy9sb2Rhc2gvX21hcENhY2hlU2V0LmpzXG4vLyBtb2R1bGUgY2h1bmtzID0gMSIsIi8qKlxuICogQ29udmVydHMgYG1hcGAgdG8gaXRzIGtleS12YWx1ZSBwYWlycy5cbiAqXG4gKiBAcHJpdmF0ZVxuICogQHBhcmFtIHtPYmplY3R9IG1hcCBUaGUgbWFwIHRvIGNvbnZlcnQuXG4gKiBAcmV0dXJucyB7QXJyYXl9IFJldHVybnMgdGhlIGtleS12YWx1ZSBwYWlycy5cbiAqL1xuZnVuY3Rpb24gbWFwVG9BcnJheShtYXApIHtcbiAgdmFyIGluZGV4ID0gLTEsXG4gICAgICByZXN1bHQgPSBBcnJheShtYXAuc2l6ZSk7XG5cbiAgbWFwLmZvckVhY2goZnVuY3Rpb24odmFsdWUsIGtleSkge1xuICAgIHJlc3VsdFsrK2luZGV4XSA9IFtrZXksIHZhbHVlXTtcbiAgfSk7XG4gIHJldHVybiByZXN1bHQ7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gbWFwVG9BcnJheTtcblxuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vbm9kZV9tb2R1bGVzL2xvZGFzaC9fbWFwVG9BcnJheS5qc1xuLy8gbW9kdWxlIGlkID0gLi9ub2RlX21vZHVsZXMvbG9kYXNoL19tYXBUb0FycmF5LmpzXG4vLyBtb2R1bGUgY2h1bmtzID0gMSIsIi8qKlxuICogQSBzcGVjaWFsaXplZCB2ZXJzaW9uIG9mIGBtYXRjaGVzUHJvcGVydHlgIGZvciBzb3VyY2UgdmFsdWVzIHN1aXRhYmxlXG4gKiBmb3Igc3RyaWN0IGVxdWFsaXR5IGNvbXBhcmlzb25zLCBpLmUuIGA9PT1gLlxuICpcbiAqIEBwcml2YXRlXG4gKiBAcGFyYW0ge3N0cmluZ30ga2V5IFRoZSBrZXkgb2YgdGhlIHByb3BlcnR5IHRvIGdldC5cbiAqIEBwYXJhbSB7Kn0gc3JjVmFsdWUgVGhlIHZhbHVlIHRvIG1hdGNoLlxuICogQHJldHVybnMge0Z1bmN0aW9ufSBSZXR1cm5zIHRoZSBuZXcgc3BlYyBmdW5jdGlvbi5cbiAqL1xuZnVuY3Rpb24gbWF0Y2hlc1N0cmljdENvbXBhcmFibGUoa2V5LCBzcmNWYWx1ZSkge1xuICByZXR1cm4gZnVuY3Rpb24ob2JqZWN0KSB7XG4gICAgaWYgKG9iamVjdCA9PSBudWxsKSB7XG4gICAgICByZXR1cm4gZmFsc2U7XG4gICAgfVxuICAgIHJldHVybiBvYmplY3Rba2V5XSA9PT0gc3JjVmFsdWUgJiZcbiAgICAgIChzcmNWYWx1ZSAhPT0gdW5kZWZpbmVkIHx8IChrZXkgaW4gT2JqZWN0KG9iamVjdCkpKTtcbiAgfTtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBtYXRjaGVzU3RyaWN0Q29tcGFyYWJsZTtcblxuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vbm9kZV9tb2R1bGVzL2xvZGFzaC9fbWF0Y2hlc1N0cmljdENvbXBhcmFibGUuanNcbi8vIG1vZHVsZSBpZCA9IC4vbm9kZV9tb2R1bGVzL2xvZGFzaC9fbWF0Y2hlc1N0cmljdENvbXBhcmFibGUuanNcbi8vIG1vZHVsZSBjaHVua3MgPSAxIiwidmFyIG1lbW9pemUgPSByZXF1aXJlKCcuL21lbW9pemUnKTtcblxuLyoqIFVzZWQgYXMgdGhlIG1heGltdW0gbWVtb2l6ZSBjYWNoZSBzaXplLiAqL1xudmFyIE1BWF9NRU1PSVpFX1NJWkUgPSA1MDA7XG5cbi8qKlxuICogQSBzcGVjaWFsaXplZCB2ZXJzaW9uIG9mIGBfLm1lbW9pemVgIHdoaWNoIGNsZWFycyB0aGUgbWVtb2l6ZWQgZnVuY3Rpb24nc1xuICogY2FjaGUgd2hlbiBpdCBleGNlZWRzIGBNQVhfTUVNT0laRV9TSVpFYC5cbiAqXG4gKiBAcHJpdmF0ZVxuICogQHBhcmFtIHtGdW5jdGlvbn0gZnVuYyBUaGUgZnVuY3Rpb24gdG8gaGF2ZSBpdHMgb3V0cHV0IG1lbW9pemVkLlxuICogQHJldHVybnMge0Z1bmN0aW9ufSBSZXR1cm5zIHRoZSBuZXcgbWVtb2l6ZWQgZnVuY3Rpb24uXG4gKi9cbmZ1bmN0aW9uIG1lbW9pemVDYXBwZWQoZnVuYykge1xuICB2YXIgcmVzdWx0ID0gbWVtb2l6ZShmdW5jLCBmdW5jdGlvbihrZXkpIHtcbiAgICBpZiAoY2FjaGUuc2l6ZSA9PT0gTUFYX01FTU9JWkVfU0laRSkge1xuICAgICAgY2FjaGUuY2xlYXIoKTtcbiAgICB9XG4gICAgcmV0dXJuIGtleTtcbiAgfSk7XG5cbiAgdmFyIGNhY2hlID0gcmVzdWx0LmNhY2hlO1xuICByZXR1cm4gcmVzdWx0O1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IG1lbW9pemVDYXBwZWQ7XG5cblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL25vZGVfbW9kdWxlcy9sb2Rhc2gvX21lbW9pemVDYXBwZWQuanNcbi8vIG1vZHVsZSBpZCA9IC4vbm9kZV9tb2R1bGVzL2xvZGFzaC9fbWVtb2l6ZUNhcHBlZC5qc1xuLy8gbW9kdWxlIGNodW5rcyA9IDEiLCJ2YXIgZ2V0TmF0aXZlID0gcmVxdWlyZSgnLi9fZ2V0TmF0aXZlJyk7XG5cbi8qIEJ1aWx0LWluIG1ldGhvZCByZWZlcmVuY2VzIHRoYXQgYXJlIHZlcmlmaWVkIHRvIGJlIG5hdGl2ZS4gKi9cbnZhciBuYXRpdmVDcmVhdGUgPSBnZXROYXRpdmUoT2JqZWN0LCAnY3JlYXRlJyk7XG5cbm1vZHVsZS5leHBvcnRzID0gbmF0aXZlQ3JlYXRlO1xuXG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9ub2RlX21vZHVsZXMvbG9kYXNoL19uYXRpdmVDcmVhdGUuanNcbi8vIG1vZHVsZSBpZCA9IC4vbm9kZV9tb2R1bGVzL2xvZGFzaC9fbmF0aXZlQ3JlYXRlLmpzXG4vLyBtb2R1bGUgY2h1bmtzID0gMSIsInZhciBvdmVyQXJnID0gcmVxdWlyZSgnLi9fb3ZlckFyZycpO1xuXG4vKiBCdWlsdC1pbiBtZXRob2QgcmVmZXJlbmNlcyBmb3IgdGhvc2Ugd2l0aCB0aGUgc2FtZSBuYW1lIGFzIG90aGVyIGBsb2Rhc2hgIG1ldGhvZHMuICovXG52YXIgbmF0aXZlS2V5cyA9IG92ZXJBcmcoT2JqZWN0LmtleXMsIE9iamVjdCk7XG5cbm1vZHVsZS5leHBvcnRzID0gbmF0aXZlS2V5cztcblxuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vbm9kZV9tb2R1bGVzL2xvZGFzaC9fbmF0aXZlS2V5cy5qc1xuLy8gbW9kdWxlIGlkID0gLi9ub2RlX21vZHVsZXMvbG9kYXNoL19uYXRpdmVLZXlzLmpzXG4vLyBtb2R1bGUgY2h1bmtzID0gMSIsIi8qKlxuICogVGhpcyBmdW5jdGlvbiBpcyBsaWtlXG4gKiBbYE9iamVjdC5rZXlzYF0oaHR0cDovL2VjbWEtaW50ZXJuYXRpb25hbC5vcmcvZWNtYS0yNjIvNy4wLyNzZWMtb2JqZWN0LmtleXMpXG4gKiBleGNlcHQgdGhhdCBpdCBpbmNsdWRlcyBpbmhlcml0ZWQgZW51bWVyYWJsZSBwcm9wZXJ0aWVzLlxuICpcbiAqIEBwcml2YXRlXG4gKiBAcGFyYW0ge09iamVjdH0gb2JqZWN0IFRoZSBvYmplY3QgdG8gcXVlcnkuXG4gKiBAcmV0dXJucyB7QXJyYXl9IFJldHVybnMgdGhlIGFycmF5IG9mIHByb3BlcnR5IG5hbWVzLlxuICovXG5mdW5jdGlvbiBuYXRpdmVLZXlzSW4ob2JqZWN0KSB7XG4gIHZhciByZXN1bHQgPSBbXTtcbiAgaWYgKG9iamVjdCAhPSBudWxsKSB7XG4gICAgZm9yICh2YXIga2V5IGluIE9iamVjdChvYmplY3QpKSB7XG4gICAgICByZXN1bHQucHVzaChrZXkpO1xuICAgIH1cbiAgfVxuICByZXR1cm4gcmVzdWx0O1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IG5hdGl2ZUtleXNJbjtcblxuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vbm9kZV9tb2R1bGVzL2xvZGFzaC9fbmF0aXZlS2V5c0luLmpzXG4vLyBtb2R1bGUgaWQgPSAuL25vZGVfbW9kdWxlcy9sb2Rhc2gvX25hdGl2ZUtleXNJbi5qc1xuLy8gbW9kdWxlIGNodW5rcyA9IDEiLCJ2YXIgZnJlZUdsb2JhbCA9IHJlcXVpcmUoJy4vX2ZyZWVHbG9iYWwnKTtcblxuLyoqIERldGVjdCBmcmVlIHZhcmlhYmxlIGBleHBvcnRzYC4gKi9cbnZhciBmcmVlRXhwb3J0cyA9IHR5cGVvZiBleHBvcnRzID09ICdvYmplY3QnICYmIGV4cG9ydHMgJiYgIWV4cG9ydHMubm9kZVR5cGUgJiYgZXhwb3J0cztcblxuLyoqIERldGVjdCBmcmVlIHZhcmlhYmxlIGBtb2R1bGVgLiAqL1xudmFyIGZyZWVNb2R1bGUgPSBmcmVlRXhwb3J0cyAmJiB0eXBlb2YgbW9kdWxlID09ICdvYmplY3QnICYmIG1vZHVsZSAmJiAhbW9kdWxlLm5vZGVUeXBlICYmIG1vZHVsZTtcblxuLyoqIERldGVjdCB0aGUgcG9wdWxhciBDb21tb25KUyBleHRlbnNpb24gYG1vZHVsZS5leHBvcnRzYC4gKi9cbnZhciBtb2R1bGVFeHBvcnRzID0gZnJlZU1vZHVsZSAmJiBmcmVlTW9kdWxlLmV4cG9ydHMgPT09IGZyZWVFeHBvcnRzO1xuXG4vKiogRGV0ZWN0IGZyZWUgdmFyaWFibGUgYHByb2Nlc3NgIGZyb20gTm9kZS5qcy4gKi9cbnZhciBmcmVlUHJvY2VzcyA9IG1vZHVsZUV4cG9ydHMgJiYgZnJlZUdsb2JhbC5wcm9jZXNzO1xuXG4vKiogVXNlZCB0byBhY2Nlc3MgZmFzdGVyIE5vZGUuanMgaGVscGVycy4gKi9cbnZhciBub2RlVXRpbCA9IChmdW5jdGlvbigpIHtcbiAgdHJ5IHtcbiAgICAvLyBVc2UgYHV0aWwudHlwZXNgIGZvciBOb2RlLmpzIDEwKy5cbiAgICB2YXIgdHlwZXMgPSBmcmVlTW9kdWxlICYmIGZyZWVNb2R1bGUucmVxdWlyZSAmJiBmcmVlTW9kdWxlLnJlcXVpcmUoJ3V0aWwnKS50eXBlcztcblxuICAgIGlmICh0eXBlcykge1xuICAgICAgcmV0dXJuIHR5cGVzO1xuICAgIH1cblxuICAgIC8vIExlZ2FjeSBgcHJvY2Vzcy5iaW5kaW5nKCd1dGlsJylgIGZvciBOb2RlLmpzIDwgMTAuXG4gICAgcmV0dXJuIGZyZWVQcm9jZXNzICYmIGZyZWVQcm9jZXNzLmJpbmRpbmcgJiYgZnJlZVByb2Nlc3MuYmluZGluZygndXRpbCcpO1xuICB9IGNhdGNoIChlKSB7fVxufSgpKTtcblxubW9kdWxlLmV4cG9ydHMgPSBub2RlVXRpbDtcblxuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vbm9kZV9tb2R1bGVzL2xvZGFzaC9fbm9kZVV0aWwuanNcbi8vIG1vZHVsZSBpZCA9IC4vbm9kZV9tb2R1bGVzL2xvZGFzaC9fbm9kZVV0aWwuanNcbi8vIG1vZHVsZSBjaHVua3MgPSAxIiwiLyoqIFVzZWQgZm9yIGJ1aWx0LWluIG1ldGhvZCByZWZlcmVuY2VzLiAqL1xudmFyIG9iamVjdFByb3RvID0gT2JqZWN0LnByb3RvdHlwZTtcblxuLyoqXG4gKiBVc2VkIHRvIHJlc29sdmUgdGhlXG4gKiBbYHRvU3RyaW5nVGFnYF0oaHR0cDovL2VjbWEtaW50ZXJuYXRpb25hbC5vcmcvZWNtYS0yNjIvNy4wLyNzZWMtb2JqZWN0LnByb3RvdHlwZS50b3N0cmluZylcbiAqIG9mIHZhbHVlcy5cbiAqL1xudmFyIG5hdGl2ZU9iamVjdFRvU3RyaW5nID0gb2JqZWN0UHJvdG8udG9TdHJpbmc7XG5cbi8qKlxuICogQ29udmVydHMgYHZhbHVlYCB0byBhIHN0cmluZyB1c2luZyBgT2JqZWN0LnByb3RvdHlwZS50b1N0cmluZ2AuXG4gKlxuICogQHByaXZhdGVcbiAqIEBwYXJhbSB7Kn0gdmFsdWUgVGhlIHZhbHVlIHRvIGNvbnZlcnQuXG4gKiBAcmV0dXJucyB7c3RyaW5nfSBSZXR1cm5zIHRoZSBjb252ZXJ0ZWQgc3RyaW5nLlxuICovXG5mdW5jdGlvbiBvYmplY3RUb1N0cmluZyh2YWx1ZSkge1xuICByZXR1cm4gbmF0aXZlT2JqZWN0VG9TdHJpbmcuY2FsbCh2YWx1ZSk7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gb2JqZWN0VG9TdHJpbmc7XG5cblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL25vZGVfbW9kdWxlcy9sb2Rhc2gvX29iamVjdFRvU3RyaW5nLmpzXG4vLyBtb2R1bGUgaWQgPSAuL25vZGVfbW9kdWxlcy9sb2Rhc2gvX29iamVjdFRvU3RyaW5nLmpzXG4vLyBtb2R1bGUgY2h1bmtzID0gMSIsIi8qKlxuICogQ3JlYXRlcyBhIHVuYXJ5IGZ1bmN0aW9uIHRoYXQgaW52b2tlcyBgZnVuY2Agd2l0aCBpdHMgYXJndW1lbnQgdHJhbnNmb3JtZWQuXG4gKlxuICogQHByaXZhdGVcbiAqIEBwYXJhbSB7RnVuY3Rpb259IGZ1bmMgVGhlIGZ1bmN0aW9uIHRvIHdyYXAuXG4gKiBAcGFyYW0ge0Z1bmN0aW9ufSB0cmFuc2Zvcm0gVGhlIGFyZ3VtZW50IHRyYW5zZm9ybS5cbiAqIEByZXR1cm5zIHtGdW5jdGlvbn0gUmV0dXJucyB0aGUgbmV3IGZ1bmN0aW9uLlxuICovXG5mdW5jdGlvbiBvdmVyQXJnKGZ1bmMsIHRyYW5zZm9ybSkge1xuICByZXR1cm4gZnVuY3Rpb24oYXJnKSB7XG4gICAgcmV0dXJuIGZ1bmModHJhbnNmb3JtKGFyZykpO1xuICB9O1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IG92ZXJBcmc7XG5cblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL25vZGVfbW9kdWxlcy9sb2Rhc2gvX292ZXJBcmcuanNcbi8vIG1vZHVsZSBpZCA9IC4vbm9kZV9tb2R1bGVzL2xvZGFzaC9fb3ZlckFyZy5qc1xuLy8gbW9kdWxlIGNodW5rcyA9IDEiLCJ2YXIgYXBwbHkgPSByZXF1aXJlKCcuL19hcHBseScpO1xuXG4vKiBCdWlsdC1pbiBtZXRob2QgcmVmZXJlbmNlcyBmb3IgdGhvc2Ugd2l0aCB0aGUgc2FtZSBuYW1lIGFzIG90aGVyIGBsb2Rhc2hgIG1ldGhvZHMuICovXG52YXIgbmF0aXZlTWF4ID0gTWF0aC5tYXg7XG5cbi8qKlxuICogQSBzcGVjaWFsaXplZCB2ZXJzaW9uIG9mIGBiYXNlUmVzdGAgd2hpY2ggdHJhbnNmb3JtcyB0aGUgcmVzdCBhcnJheS5cbiAqXG4gKiBAcHJpdmF0ZVxuICogQHBhcmFtIHtGdW5jdGlvbn0gZnVuYyBUaGUgZnVuY3Rpb24gdG8gYXBwbHkgYSByZXN0IHBhcmFtZXRlciB0by5cbiAqIEBwYXJhbSB7bnVtYmVyfSBbc3RhcnQ9ZnVuYy5sZW5ndGgtMV0gVGhlIHN0YXJ0IHBvc2l0aW9uIG9mIHRoZSByZXN0IHBhcmFtZXRlci5cbiAqIEBwYXJhbSB7RnVuY3Rpb259IHRyYW5zZm9ybSBUaGUgcmVzdCBhcnJheSB0cmFuc2Zvcm0uXG4gKiBAcmV0dXJucyB7RnVuY3Rpb259IFJldHVybnMgdGhlIG5ldyBmdW5jdGlvbi5cbiAqL1xuZnVuY3Rpb24gb3ZlclJlc3QoZnVuYywgc3RhcnQsIHRyYW5zZm9ybSkge1xuICBzdGFydCA9IG5hdGl2ZU1heChzdGFydCA9PT0gdW5kZWZpbmVkID8gKGZ1bmMubGVuZ3RoIC0gMSkgOiBzdGFydCwgMCk7XG4gIHJldHVybiBmdW5jdGlvbigpIHtcbiAgICB2YXIgYXJncyA9IGFyZ3VtZW50cyxcbiAgICAgICAgaW5kZXggPSAtMSxcbiAgICAgICAgbGVuZ3RoID0gbmF0aXZlTWF4KGFyZ3MubGVuZ3RoIC0gc3RhcnQsIDApLFxuICAgICAgICBhcnJheSA9IEFycmF5KGxlbmd0aCk7XG5cbiAgICB3aGlsZSAoKytpbmRleCA8IGxlbmd0aCkge1xuICAgICAgYXJyYXlbaW5kZXhdID0gYXJnc1tzdGFydCArIGluZGV4XTtcbiAgICB9XG4gICAgaW5kZXggPSAtMTtcbiAgICB2YXIgb3RoZXJBcmdzID0gQXJyYXkoc3RhcnQgKyAxKTtcbiAgICB3aGlsZSAoKytpbmRleCA8IHN0YXJ0KSB7XG4gICAgICBvdGhlckFyZ3NbaW5kZXhdID0gYXJnc1tpbmRleF07XG4gICAgfVxuICAgIG90aGVyQXJnc1tzdGFydF0gPSB0cmFuc2Zvcm0oYXJyYXkpO1xuICAgIHJldHVybiBhcHBseShmdW5jLCB0aGlzLCBvdGhlckFyZ3MpO1xuICB9O1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IG92ZXJSZXN0O1xuXG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9ub2RlX21vZHVsZXMvbG9kYXNoL19vdmVyUmVzdC5qc1xuLy8gbW9kdWxlIGlkID0gLi9ub2RlX21vZHVsZXMvbG9kYXNoL19vdmVyUmVzdC5qc1xuLy8gbW9kdWxlIGNodW5rcyA9IDEiLCJ2YXIgZnJlZUdsb2JhbCA9IHJlcXVpcmUoJy4vX2ZyZWVHbG9iYWwnKTtcblxuLyoqIERldGVjdCBmcmVlIHZhcmlhYmxlIGBzZWxmYC4gKi9cbnZhciBmcmVlU2VsZiA9IHR5cGVvZiBzZWxmID09ICdvYmplY3QnICYmIHNlbGYgJiYgc2VsZi5PYmplY3QgPT09IE9iamVjdCAmJiBzZWxmO1xuXG4vKiogVXNlZCBhcyBhIHJlZmVyZW5jZSB0byB0aGUgZ2xvYmFsIG9iamVjdC4gKi9cbnZhciByb290ID0gZnJlZUdsb2JhbCB8fCBmcmVlU2VsZiB8fCBGdW5jdGlvbigncmV0dXJuIHRoaXMnKSgpO1xuXG5tb2R1bGUuZXhwb3J0cyA9IHJvb3Q7XG5cblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL25vZGVfbW9kdWxlcy9sb2Rhc2gvX3Jvb3QuanNcbi8vIG1vZHVsZSBpZCA9IC4vbm9kZV9tb2R1bGVzL2xvZGFzaC9fcm9vdC5qc1xuLy8gbW9kdWxlIGNodW5rcyA9IDEiLCIvKiogVXNlZCB0byBzdGFuZC1pbiBmb3IgYHVuZGVmaW5lZGAgaGFzaCB2YWx1ZXMuICovXG52YXIgSEFTSF9VTkRFRklORUQgPSAnX19sb2Rhc2hfaGFzaF91bmRlZmluZWRfXyc7XG5cbi8qKlxuICogQWRkcyBgdmFsdWVgIHRvIHRoZSBhcnJheSBjYWNoZS5cbiAqXG4gKiBAcHJpdmF0ZVxuICogQG5hbWUgYWRkXG4gKiBAbWVtYmVyT2YgU2V0Q2FjaGVcbiAqIEBhbGlhcyBwdXNoXG4gKiBAcGFyYW0geyp9IHZhbHVlIFRoZSB2YWx1ZSB0byBjYWNoZS5cbiAqIEByZXR1cm5zIHtPYmplY3R9IFJldHVybnMgdGhlIGNhY2hlIGluc3RhbmNlLlxuICovXG5mdW5jdGlvbiBzZXRDYWNoZUFkZCh2YWx1ZSkge1xuICB0aGlzLl9fZGF0YV9fLnNldCh2YWx1ZSwgSEFTSF9VTkRFRklORUQpO1xuICByZXR1cm4gdGhpcztcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBzZXRDYWNoZUFkZDtcblxuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vbm9kZV9tb2R1bGVzL2xvZGFzaC9fc2V0Q2FjaGVBZGQuanNcbi8vIG1vZHVsZSBpZCA9IC4vbm9kZV9tb2R1bGVzL2xvZGFzaC9fc2V0Q2FjaGVBZGQuanNcbi8vIG1vZHVsZSBjaHVua3MgPSAxIiwiLyoqXG4gKiBDaGVja3MgaWYgYHZhbHVlYCBpcyBpbiB0aGUgYXJyYXkgY2FjaGUuXG4gKlxuICogQHByaXZhdGVcbiAqIEBuYW1lIGhhc1xuICogQG1lbWJlck9mIFNldENhY2hlXG4gKiBAcGFyYW0geyp9IHZhbHVlIFRoZSB2YWx1ZSB0byBzZWFyY2ggZm9yLlxuICogQHJldHVybnMge251bWJlcn0gUmV0dXJucyBgdHJ1ZWAgaWYgYHZhbHVlYCBpcyBmb3VuZCwgZWxzZSBgZmFsc2VgLlxuICovXG5mdW5jdGlvbiBzZXRDYWNoZUhhcyh2YWx1ZSkge1xuICByZXR1cm4gdGhpcy5fX2RhdGFfXy5oYXModmFsdWUpO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IHNldENhY2hlSGFzO1xuXG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9ub2RlX21vZHVsZXMvbG9kYXNoL19zZXRDYWNoZUhhcy5qc1xuLy8gbW9kdWxlIGlkID0gLi9ub2RlX21vZHVsZXMvbG9kYXNoL19zZXRDYWNoZUhhcy5qc1xuLy8gbW9kdWxlIGNodW5rcyA9IDEiLCIvKipcbiAqIENvbnZlcnRzIGBzZXRgIHRvIGFuIGFycmF5IG9mIGl0cyB2YWx1ZXMuXG4gKlxuICogQHByaXZhdGVcbiAqIEBwYXJhbSB7T2JqZWN0fSBzZXQgVGhlIHNldCB0byBjb252ZXJ0LlxuICogQHJldHVybnMge0FycmF5fSBSZXR1cm5zIHRoZSB2YWx1ZXMuXG4gKi9cbmZ1bmN0aW9uIHNldFRvQXJyYXkoc2V0KSB7XG4gIHZhciBpbmRleCA9IC0xLFxuICAgICAgcmVzdWx0ID0gQXJyYXkoc2V0LnNpemUpO1xuXG4gIHNldC5mb3JFYWNoKGZ1bmN0aW9uKHZhbHVlKSB7XG4gICAgcmVzdWx0WysraW5kZXhdID0gdmFsdWU7XG4gIH0pO1xuICByZXR1cm4gcmVzdWx0O1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IHNldFRvQXJyYXk7XG5cblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL25vZGVfbW9kdWxlcy9sb2Rhc2gvX3NldFRvQXJyYXkuanNcbi8vIG1vZHVsZSBpZCA9IC4vbm9kZV9tb2R1bGVzL2xvZGFzaC9fc2V0VG9BcnJheS5qc1xuLy8gbW9kdWxlIGNodW5rcyA9IDEiLCJ2YXIgYmFzZVNldFRvU3RyaW5nID0gcmVxdWlyZSgnLi9fYmFzZVNldFRvU3RyaW5nJyksXG4gICAgc2hvcnRPdXQgPSByZXF1aXJlKCcuL19zaG9ydE91dCcpO1xuXG4vKipcbiAqIFNldHMgdGhlIGB0b1N0cmluZ2AgbWV0aG9kIG9mIGBmdW5jYCB0byByZXR1cm4gYHN0cmluZ2AuXG4gKlxuICogQHByaXZhdGVcbiAqIEBwYXJhbSB7RnVuY3Rpb259IGZ1bmMgVGhlIGZ1bmN0aW9uIHRvIG1vZGlmeS5cbiAqIEBwYXJhbSB7RnVuY3Rpb259IHN0cmluZyBUaGUgYHRvU3RyaW5nYCByZXN1bHQuXG4gKiBAcmV0dXJucyB7RnVuY3Rpb259IFJldHVybnMgYGZ1bmNgLlxuICovXG52YXIgc2V0VG9TdHJpbmcgPSBzaG9ydE91dChiYXNlU2V0VG9TdHJpbmcpO1xuXG5tb2R1bGUuZXhwb3J0cyA9IHNldFRvU3RyaW5nO1xuXG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9ub2RlX21vZHVsZXMvbG9kYXNoL19zZXRUb1N0cmluZy5qc1xuLy8gbW9kdWxlIGlkID0gLi9ub2RlX21vZHVsZXMvbG9kYXNoL19zZXRUb1N0cmluZy5qc1xuLy8gbW9kdWxlIGNodW5rcyA9IDEiLCIvKiogVXNlZCB0byBkZXRlY3QgaG90IGZ1bmN0aW9ucyBieSBudW1iZXIgb2YgY2FsbHMgd2l0aGluIGEgc3BhbiBvZiBtaWxsaXNlY29uZHMuICovXG52YXIgSE9UX0NPVU5UID0gODAwLFxuICAgIEhPVF9TUEFOID0gMTY7XG5cbi8qIEJ1aWx0LWluIG1ldGhvZCByZWZlcmVuY2VzIGZvciB0aG9zZSB3aXRoIHRoZSBzYW1lIG5hbWUgYXMgb3RoZXIgYGxvZGFzaGAgbWV0aG9kcy4gKi9cbnZhciBuYXRpdmVOb3cgPSBEYXRlLm5vdztcblxuLyoqXG4gKiBDcmVhdGVzIGEgZnVuY3Rpb24gdGhhdCdsbCBzaG9ydCBvdXQgYW5kIGludm9rZSBgaWRlbnRpdHlgIGluc3RlYWRcbiAqIG9mIGBmdW5jYCB3aGVuIGl0J3MgY2FsbGVkIGBIT1RfQ09VTlRgIG9yIG1vcmUgdGltZXMgaW4gYEhPVF9TUEFOYFxuICogbWlsbGlzZWNvbmRzLlxuICpcbiAqIEBwcml2YXRlXG4gKiBAcGFyYW0ge0Z1bmN0aW9ufSBmdW5jIFRoZSBmdW5jdGlvbiB0byByZXN0cmljdC5cbiAqIEByZXR1cm5zIHtGdW5jdGlvbn0gUmV0dXJucyB0aGUgbmV3IHNob3J0YWJsZSBmdW5jdGlvbi5cbiAqL1xuZnVuY3Rpb24gc2hvcnRPdXQoZnVuYykge1xuICB2YXIgY291bnQgPSAwLFxuICAgICAgbGFzdENhbGxlZCA9IDA7XG5cbiAgcmV0dXJuIGZ1bmN0aW9uKCkge1xuICAgIHZhciBzdGFtcCA9IG5hdGl2ZU5vdygpLFxuICAgICAgICByZW1haW5pbmcgPSBIT1RfU1BBTiAtIChzdGFtcCAtIGxhc3RDYWxsZWQpO1xuXG4gICAgbGFzdENhbGxlZCA9IHN0YW1wO1xuICAgIGlmIChyZW1haW5pbmcgPiAwKSB7XG4gICAgICBpZiAoKytjb3VudCA+PSBIT1RfQ09VTlQpIHtcbiAgICAgICAgcmV0dXJuIGFyZ3VtZW50c1swXTtcbiAgICAgIH1cbiAgICB9IGVsc2Uge1xuICAgICAgY291bnQgPSAwO1xuICAgIH1cbiAgICByZXR1cm4gZnVuYy5hcHBseSh1bmRlZmluZWQsIGFyZ3VtZW50cyk7XG4gIH07XG59XG5cbm1vZHVsZS5leHBvcnRzID0gc2hvcnRPdXQ7XG5cblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL25vZGVfbW9kdWxlcy9sb2Rhc2gvX3Nob3J0T3V0LmpzXG4vLyBtb2R1bGUgaWQgPSAuL25vZGVfbW9kdWxlcy9sb2Rhc2gvX3Nob3J0T3V0LmpzXG4vLyBtb2R1bGUgY2h1bmtzID0gMSIsInZhciBMaXN0Q2FjaGUgPSByZXF1aXJlKCcuL19MaXN0Q2FjaGUnKTtcblxuLyoqXG4gKiBSZW1vdmVzIGFsbCBrZXktdmFsdWUgZW50cmllcyBmcm9tIHRoZSBzdGFjay5cbiAqXG4gKiBAcHJpdmF0ZVxuICogQG5hbWUgY2xlYXJcbiAqIEBtZW1iZXJPZiBTdGFja1xuICovXG5mdW5jdGlvbiBzdGFja0NsZWFyKCkge1xuICB0aGlzLl9fZGF0YV9fID0gbmV3IExpc3RDYWNoZTtcbiAgdGhpcy5zaXplID0gMDtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBzdGFja0NsZWFyO1xuXG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9ub2RlX21vZHVsZXMvbG9kYXNoL19zdGFja0NsZWFyLmpzXG4vLyBtb2R1bGUgaWQgPSAuL25vZGVfbW9kdWxlcy9sb2Rhc2gvX3N0YWNrQ2xlYXIuanNcbi8vIG1vZHVsZSBjaHVua3MgPSAxIiwiLyoqXG4gKiBSZW1vdmVzIGBrZXlgIGFuZCBpdHMgdmFsdWUgZnJvbSB0aGUgc3RhY2suXG4gKlxuICogQHByaXZhdGVcbiAqIEBuYW1lIGRlbGV0ZVxuICogQG1lbWJlck9mIFN0YWNrXG4gKiBAcGFyYW0ge3N0cmluZ30ga2V5IFRoZSBrZXkgb2YgdGhlIHZhbHVlIHRvIHJlbW92ZS5cbiAqIEByZXR1cm5zIHtib29sZWFufSBSZXR1cm5zIGB0cnVlYCBpZiB0aGUgZW50cnkgd2FzIHJlbW92ZWQsIGVsc2UgYGZhbHNlYC5cbiAqL1xuZnVuY3Rpb24gc3RhY2tEZWxldGUoa2V5KSB7XG4gIHZhciBkYXRhID0gdGhpcy5fX2RhdGFfXyxcbiAgICAgIHJlc3VsdCA9IGRhdGFbJ2RlbGV0ZSddKGtleSk7XG5cbiAgdGhpcy5zaXplID0gZGF0YS5zaXplO1xuICByZXR1cm4gcmVzdWx0O1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IHN0YWNrRGVsZXRlO1xuXG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9ub2RlX21vZHVsZXMvbG9kYXNoL19zdGFja0RlbGV0ZS5qc1xuLy8gbW9kdWxlIGlkID0gLi9ub2RlX21vZHVsZXMvbG9kYXNoL19zdGFja0RlbGV0ZS5qc1xuLy8gbW9kdWxlIGNodW5rcyA9IDEiLCIvKipcbiAqIEdldHMgdGhlIHN0YWNrIHZhbHVlIGZvciBga2V5YC5cbiAqXG4gKiBAcHJpdmF0ZVxuICogQG5hbWUgZ2V0XG4gKiBAbWVtYmVyT2YgU3RhY2tcbiAqIEBwYXJhbSB7c3RyaW5nfSBrZXkgVGhlIGtleSBvZiB0aGUgdmFsdWUgdG8gZ2V0LlxuICogQHJldHVybnMgeyp9IFJldHVybnMgdGhlIGVudHJ5IHZhbHVlLlxuICovXG5mdW5jdGlvbiBzdGFja0dldChrZXkpIHtcbiAgcmV0dXJuIHRoaXMuX19kYXRhX18uZ2V0KGtleSk7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gc3RhY2tHZXQ7XG5cblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL25vZGVfbW9kdWxlcy9sb2Rhc2gvX3N0YWNrR2V0LmpzXG4vLyBtb2R1bGUgaWQgPSAuL25vZGVfbW9kdWxlcy9sb2Rhc2gvX3N0YWNrR2V0LmpzXG4vLyBtb2R1bGUgY2h1bmtzID0gMSIsIi8qKlxuICogQ2hlY2tzIGlmIGEgc3RhY2sgdmFsdWUgZm9yIGBrZXlgIGV4aXN0cy5cbiAqXG4gKiBAcHJpdmF0ZVxuICogQG5hbWUgaGFzXG4gKiBAbWVtYmVyT2YgU3RhY2tcbiAqIEBwYXJhbSB7c3RyaW5nfSBrZXkgVGhlIGtleSBvZiB0aGUgZW50cnkgdG8gY2hlY2suXG4gKiBAcmV0dXJucyB7Ym9vbGVhbn0gUmV0dXJucyBgdHJ1ZWAgaWYgYW4gZW50cnkgZm9yIGBrZXlgIGV4aXN0cywgZWxzZSBgZmFsc2VgLlxuICovXG5mdW5jdGlvbiBzdGFja0hhcyhrZXkpIHtcbiAgcmV0dXJuIHRoaXMuX19kYXRhX18uaGFzKGtleSk7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gc3RhY2tIYXM7XG5cblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL25vZGVfbW9kdWxlcy9sb2Rhc2gvX3N0YWNrSGFzLmpzXG4vLyBtb2R1bGUgaWQgPSAuL25vZGVfbW9kdWxlcy9sb2Rhc2gvX3N0YWNrSGFzLmpzXG4vLyBtb2R1bGUgY2h1bmtzID0gMSIsInZhciBMaXN0Q2FjaGUgPSByZXF1aXJlKCcuL19MaXN0Q2FjaGUnKSxcbiAgICBNYXAgPSByZXF1aXJlKCcuL19NYXAnKSxcbiAgICBNYXBDYWNoZSA9IHJlcXVpcmUoJy4vX01hcENhY2hlJyk7XG5cbi8qKiBVc2VkIGFzIHRoZSBzaXplIHRvIGVuYWJsZSBsYXJnZSBhcnJheSBvcHRpbWl6YXRpb25zLiAqL1xudmFyIExBUkdFX0FSUkFZX1NJWkUgPSAyMDA7XG5cbi8qKlxuICogU2V0cyB0aGUgc3RhY2sgYGtleWAgdG8gYHZhbHVlYC5cbiAqXG4gKiBAcHJpdmF0ZVxuICogQG5hbWUgc2V0XG4gKiBAbWVtYmVyT2YgU3RhY2tcbiAqIEBwYXJhbSB7c3RyaW5nfSBrZXkgVGhlIGtleSBvZiB0aGUgdmFsdWUgdG8gc2V0LlxuICogQHBhcmFtIHsqfSB2YWx1ZSBUaGUgdmFsdWUgdG8gc2V0LlxuICogQHJldHVybnMge09iamVjdH0gUmV0dXJucyB0aGUgc3RhY2sgY2FjaGUgaW5zdGFuY2UuXG4gKi9cbmZ1bmN0aW9uIHN0YWNrU2V0KGtleSwgdmFsdWUpIHtcbiAgdmFyIGRhdGEgPSB0aGlzLl9fZGF0YV9fO1xuICBpZiAoZGF0YSBpbnN0YW5jZW9mIExpc3RDYWNoZSkge1xuICAgIHZhciBwYWlycyA9IGRhdGEuX19kYXRhX187XG4gICAgaWYgKCFNYXAgfHwgKHBhaXJzLmxlbmd0aCA8IExBUkdFX0FSUkFZX1NJWkUgLSAxKSkge1xuICAgICAgcGFpcnMucHVzaChba2V5LCB2YWx1ZV0pO1xuICAgICAgdGhpcy5zaXplID0gKytkYXRhLnNpemU7XG4gICAgICByZXR1cm4gdGhpcztcbiAgICB9XG4gICAgZGF0YSA9IHRoaXMuX19kYXRhX18gPSBuZXcgTWFwQ2FjaGUocGFpcnMpO1xuICB9XG4gIGRhdGEuc2V0KGtleSwgdmFsdWUpO1xuICB0aGlzLnNpemUgPSBkYXRhLnNpemU7XG4gIHJldHVybiB0aGlzO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IHN0YWNrU2V0O1xuXG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9ub2RlX21vZHVsZXMvbG9kYXNoL19zdGFja1NldC5qc1xuLy8gbW9kdWxlIGlkID0gLi9ub2RlX21vZHVsZXMvbG9kYXNoL19zdGFja1NldC5qc1xuLy8gbW9kdWxlIGNodW5rcyA9IDEiLCIvKipcbiAqIEEgc3BlY2lhbGl6ZWQgdmVyc2lvbiBvZiBgXy5pbmRleE9mYCB3aGljaCBwZXJmb3JtcyBzdHJpY3QgZXF1YWxpdHlcbiAqIGNvbXBhcmlzb25zIG9mIHZhbHVlcywgaS5lLiBgPT09YC5cbiAqXG4gKiBAcHJpdmF0ZVxuICogQHBhcmFtIHtBcnJheX0gYXJyYXkgVGhlIGFycmF5IHRvIGluc3BlY3QuXG4gKiBAcGFyYW0geyp9IHZhbHVlIFRoZSB2YWx1ZSB0byBzZWFyY2ggZm9yLlxuICogQHBhcmFtIHtudW1iZXJ9IGZyb21JbmRleCBUaGUgaW5kZXggdG8gc2VhcmNoIGZyb20uXG4gKiBAcmV0dXJucyB7bnVtYmVyfSBSZXR1cm5zIHRoZSBpbmRleCBvZiB0aGUgbWF0Y2hlZCB2YWx1ZSwgZWxzZSBgLTFgLlxuICovXG5mdW5jdGlvbiBzdHJpY3RJbmRleE9mKGFycmF5LCB2YWx1ZSwgZnJvbUluZGV4KSB7XG4gIHZhciBpbmRleCA9IGZyb21JbmRleCAtIDEsXG4gICAgICBsZW5ndGggPSBhcnJheS5sZW5ndGg7XG5cbiAgd2hpbGUgKCsraW5kZXggPCBsZW5ndGgpIHtcbiAgICBpZiAoYXJyYXlbaW5kZXhdID09PSB2YWx1ZSkge1xuICAgICAgcmV0dXJuIGluZGV4O1xuICAgIH1cbiAgfVxuICByZXR1cm4gLTE7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gc3RyaWN0SW5kZXhPZjtcblxuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vbm9kZV9tb2R1bGVzL2xvZGFzaC9fc3RyaWN0SW5kZXhPZi5qc1xuLy8gbW9kdWxlIGlkID0gLi9ub2RlX21vZHVsZXMvbG9kYXNoL19zdHJpY3RJbmRleE9mLmpzXG4vLyBtb2R1bGUgY2h1bmtzID0gMSIsInZhciBtZW1vaXplQ2FwcGVkID0gcmVxdWlyZSgnLi9fbWVtb2l6ZUNhcHBlZCcpO1xuXG4vKiogVXNlZCB0byBtYXRjaCBwcm9wZXJ0eSBuYW1lcyB3aXRoaW4gcHJvcGVydHkgcGF0aHMuICovXG52YXIgcmVQcm9wTmFtZSA9IC9bXi5bXFxdXSt8XFxbKD86KC0/XFxkKyg/OlxcLlxcZCspPyl8KFtcIiddKSgoPzooPyFcXDIpW15cXFxcXXxcXFxcLikqPylcXDIpXFxdfCg/PSg/OlxcLnxcXFtcXF0pKD86XFwufFxcW1xcXXwkKSkvZztcblxuLyoqIFVzZWQgdG8gbWF0Y2ggYmFja3NsYXNoZXMgaW4gcHJvcGVydHkgcGF0aHMuICovXG52YXIgcmVFc2NhcGVDaGFyID0gL1xcXFwoXFxcXCk/L2c7XG5cbi8qKlxuICogQ29udmVydHMgYHN0cmluZ2AgdG8gYSBwcm9wZXJ0eSBwYXRoIGFycmF5LlxuICpcbiAqIEBwcml2YXRlXG4gKiBAcGFyYW0ge3N0cmluZ30gc3RyaW5nIFRoZSBzdHJpbmcgdG8gY29udmVydC5cbiAqIEByZXR1cm5zIHtBcnJheX0gUmV0dXJucyB0aGUgcHJvcGVydHkgcGF0aCBhcnJheS5cbiAqL1xudmFyIHN0cmluZ1RvUGF0aCA9IG1lbW9pemVDYXBwZWQoZnVuY3Rpb24oc3RyaW5nKSB7XG4gIHZhciByZXN1bHQgPSBbXTtcbiAgaWYgKHN0cmluZy5jaGFyQ29kZUF0KDApID09PSA0NiAvKiAuICovKSB7XG4gICAgcmVzdWx0LnB1c2goJycpO1xuICB9XG4gIHN0cmluZy5yZXBsYWNlKHJlUHJvcE5hbWUsIGZ1bmN0aW9uKG1hdGNoLCBudW1iZXIsIHF1b3RlLCBzdWJTdHJpbmcpIHtcbiAgICByZXN1bHQucHVzaChxdW90ZSA/IHN1YlN0cmluZy5yZXBsYWNlKHJlRXNjYXBlQ2hhciwgJyQxJykgOiAobnVtYmVyIHx8IG1hdGNoKSk7XG4gIH0pO1xuICByZXR1cm4gcmVzdWx0O1xufSk7XG5cbm1vZHVsZS5leHBvcnRzID0gc3RyaW5nVG9QYXRoO1xuXG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9ub2RlX21vZHVsZXMvbG9kYXNoL19zdHJpbmdUb1BhdGguanNcbi8vIG1vZHVsZSBpZCA9IC4vbm9kZV9tb2R1bGVzL2xvZGFzaC9fc3RyaW5nVG9QYXRoLmpzXG4vLyBtb2R1bGUgY2h1bmtzID0gMSIsInZhciBpc1N5bWJvbCA9IHJlcXVpcmUoJy4vaXNTeW1ib2wnKTtcblxuLyoqIFVzZWQgYXMgcmVmZXJlbmNlcyBmb3IgdmFyaW91cyBgTnVtYmVyYCBjb25zdGFudHMuICovXG52YXIgSU5GSU5JVFkgPSAxIC8gMDtcblxuLyoqXG4gKiBDb252ZXJ0cyBgdmFsdWVgIHRvIGEgc3RyaW5nIGtleSBpZiBpdCdzIG5vdCBhIHN0cmluZyBvciBzeW1ib2wuXG4gKlxuICogQHByaXZhdGVcbiAqIEBwYXJhbSB7Kn0gdmFsdWUgVGhlIHZhbHVlIHRvIGluc3BlY3QuXG4gKiBAcmV0dXJucyB7c3RyaW5nfHN5bWJvbH0gUmV0dXJucyB0aGUga2V5LlxuICovXG5mdW5jdGlvbiB0b0tleSh2YWx1ZSkge1xuICBpZiAodHlwZW9mIHZhbHVlID09ICdzdHJpbmcnIHx8IGlzU3ltYm9sKHZhbHVlKSkge1xuICAgIHJldHVybiB2YWx1ZTtcbiAgfVxuICB2YXIgcmVzdWx0ID0gKHZhbHVlICsgJycpO1xuICByZXR1cm4gKHJlc3VsdCA9PSAnMCcgJiYgKDEgLyB2YWx1ZSkgPT0gLUlORklOSVRZKSA/ICctMCcgOiByZXN1bHQ7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gdG9LZXk7XG5cblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL25vZGVfbW9kdWxlcy9sb2Rhc2gvX3RvS2V5LmpzXG4vLyBtb2R1bGUgaWQgPSAuL25vZGVfbW9kdWxlcy9sb2Rhc2gvX3RvS2V5LmpzXG4vLyBtb2R1bGUgY2h1bmtzID0gMSIsIi8qKiBVc2VkIGZvciBidWlsdC1pbiBtZXRob2QgcmVmZXJlbmNlcy4gKi9cbnZhciBmdW5jUHJvdG8gPSBGdW5jdGlvbi5wcm90b3R5cGU7XG5cbi8qKiBVc2VkIHRvIHJlc29sdmUgdGhlIGRlY29tcGlsZWQgc291cmNlIG9mIGZ1bmN0aW9ucy4gKi9cbnZhciBmdW5jVG9TdHJpbmcgPSBmdW5jUHJvdG8udG9TdHJpbmc7XG5cbi8qKlxuICogQ29udmVydHMgYGZ1bmNgIHRvIGl0cyBzb3VyY2UgY29kZS5cbiAqXG4gKiBAcHJpdmF0ZVxuICogQHBhcmFtIHtGdW5jdGlvbn0gZnVuYyBUaGUgZnVuY3Rpb24gdG8gY29udmVydC5cbiAqIEByZXR1cm5zIHtzdHJpbmd9IFJldHVybnMgdGhlIHNvdXJjZSBjb2RlLlxuICovXG5mdW5jdGlvbiB0b1NvdXJjZShmdW5jKSB7XG4gIGlmIChmdW5jICE9IG51bGwpIHtcbiAgICB0cnkge1xuICAgICAgcmV0dXJuIGZ1bmNUb1N0cmluZy5jYWxsKGZ1bmMpO1xuICAgIH0gY2F0Y2ggKGUpIHt9XG4gICAgdHJ5IHtcbiAgICAgIHJldHVybiAoZnVuYyArICcnKTtcbiAgICB9IGNhdGNoIChlKSB7fVxuICB9XG4gIHJldHVybiAnJztcbn1cblxubW9kdWxlLmV4cG9ydHMgPSB0b1NvdXJjZTtcblxuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vbm9kZV9tb2R1bGVzL2xvZGFzaC9fdG9Tb3VyY2UuanNcbi8vIG1vZHVsZSBpZCA9IC4vbm9kZV9tb2R1bGVzL2xvZGFzaC9fdG9Tb3VyY2UuanNcbi8vIG1vZHVsZSBjaHVua3MgPSAxIiwidmFyIGJhc2VDbG9uZSA9IHJlcXVpcmUoJy4vX2Jhc2VDbG9uZScpO1xuXG4vKiogVXNlZCB0byBjb21wb3NlIGJpdG1hc2tzIGZvciBjbG9uaW5nLiAqL1xudmFyIENMT05FX0RFRVBfRkxBRyA9IDEsXG4gICAgQ0xPTkVfU1lNQk9MU19GTEFHID0gNDtcblxuLyoqXG4gKiBUaGlzIG1ldGhvZCBpcyBsaWtlIGBfLmNsb25lYCBleGNlcHQgdGhhdCBpdCByZWN1cnNpdmVseSBjbG9uZXMgYHZhbHVlYC5cbiAqXG4gKiBAc3RhdGljXG4gKiBAbWVtYmVyT2YgX1xuICogQHNpbmNlIDEuMC4wXG4gKiBAY2F0ZWdvcnkgTGFuZ1xuICogQHBhcmFtIHsqfSB2YWx1ZSBUaGUgdmFsdWUgdG8gcmVjdXJzaXZlbHkgY2xvbmUuXG4gKiBAcmV0dXJucyB7Kn0gUmV0dXJucyB0aGUgZGVlcCBjbG9uZWQgdmFsdWUuXG4gKiBAc2VlIF8uY2xvbmVcbiAqIEBleGFtcGxlXG4gKlxuICogdmFyIG9iamVjdHMgPSBbeyAnYSc6IDEgfSwgeyAnYic6IDIgfV07XG4gKlxuICogdmFyIGRlZXAgPSBfLmNsb25lRGVlcChvYmplY3RzKTtcbiAqIGNvbnNvbGUubG9nKGRlZXBbMF0gPT09IG9iamVjdHNbMF0pO1xuICogLy8gPT4gZmFsc2VcbiAqL1xuZnVuY3Rpb24gY2xvbmVEZWVwKHZhbHVlKSB7XG4gIHJldHVybiBiYXNlQ2xvbmUodmFsdWUsIENMT05FX0RFRVBfRkxBRyB8IENMT05FX1NZTUJPTFNfRkxBRyk7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gY2xvbmVEZWVwO1xuXG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9ub2RlX21vZHVsZXMvbG9kYXNoL2Nsb25lRGVlcC5qc1xuLy8gbW9kdWxlIGlkID0gLi9ub2RlX21vZHVsZXMvbG9kYXNoL2Nsb25lRGVlcC5qc1xuLy8gbW9kdWxlIGNodW5rcyA9IDEiLCIvKipcbiAqIENyZWF0ZXMgYSBmdW5jdGlvbiB0aGF0IHJldHVybnMgYHZhbHVlYC5cbiAqXG4gKiBAc3RhdGljXG4gKiBAbWVtYmVyT2YgX1xuICogQHNpbmNlIDIuNC4wXG4gKiBAY2F0ZWdvcnkgVXRpbFxuICogQHBhcmFtIHsqfSB2YWx1ZSBUaGUgdmFsdWUgdG8gcmV0dXJuIGZyb20gdGhlIG5ldyBmdW5jdGlvbi5cbiAqIEByZXR1cm5zIHtGdW5jdGlvbn0gUmV0dXJucyB0aGUgbmV3IGNvbnN0YW50IGZ1bmN0aW9uLlxuICogQGV4YW1wbGVcbiAqXG4gKiB2YXIgb2JqZWN0cyA9IF8udGltZXMoMiwgXy5jb25zdGFudCh7ICdhJzogMSB9KSk7XG4gKlxuICogY29uc29sZS5sb2cob2JqZWN0cyk7XG4gKiAvLyA9PiBbeyAnYSc6IDEgfSwgeyAnYSc6IDEgfV1cbiAqXG4gKiBjb25zb2xlLmxvZyhvYmplY3RzWzBdID09PSBvYmplY3RzWzFdKTtcbiAqIC8vID0+IHRydWVcbiAqL1xuZnVuY3Rpb24gY29uc3RhbnQodmFsdWUpIHtcbiAgcmV0dXJuIGZ1bmN0aW9uKCkge1xuICAgIHJldHVybiB2YWx1ZTtcbiAgfTtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBjb25zdGFudDtcblxuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vbm9kZV9tb2R1bGVzL2xvZGFzaC9jb25zdGFudC5qc1xuLy8gbW9kdWxlIGlkID0gLi9ub2RlX21vZHVsZXMvbG9kYXNoL2NvbnN0YW50LmpzXG4vLyBtb2R1bGUgY2h1bmtzID0gMSIsIi8qKlxuICogUGVyZm9ybXMgYVxuICogW2BTYW1lVmFsdWVaZXJvYF0oaHR0cDovL2VjbWEtaW50ZXJuYXRpb25hbC5vcmcvZWNtYS0yNjIvNy4wLyNzZWMtc2FtZXZhbHVlemVybylcbiAqIGNvbXBhcmlzb24gYmV0d2VlbiB0d28gdmFsdWVzIHRvIGRldGVybWluZSBpZiB0aGV5IGFyZSBlcXVpdmFsZW50LlxuICpcbiAqIEBzdGF0aWNcbiAqIEBtZW1iZXJPZiBfXG4gKiBAc2luY2UgNC4wLjBcbiAqIEBjYXRlZ29yeSBMYW5nXG4gKiBAcGFyYW0geyp9IHZhbHVlIFRoZSB2YWx1ZSB0byBjb21wYXJlLlxuICogQHBhcmFtIHsqfSBvdGhlciBUaGUgb3RoZXIgdmFsdWUgdG8gY29tcGFyZS5cbiAqIEByZXR1cm5zIHtib29sZWFufSBSZXR1cm5zIGB0cnVlYCBpZiB0aGUgdmFsdWVzIGFyZSBlcXVpdmFsZW50LCBlbHNlIGBmYWxzZWAuXG4gKiBAZXhhbXBsZVxuICpcbiAqIHZhciBvYmplY3QgPSB7ICdhJzogMSB9O1xuICogdmFyIG90aGVyID0geyAnYSc6IDEgfTtcbiAqXG4gKiBfLmVxKG9iamVjdCwgb2JqZWN0KTtcbiAqIC8vID0+IHRydWVcbiAqXG4gKiBfLmVxKG9iamVjdCwgb3RoZXIpO1xuICogLy8gPT4gZmFsc2VcbiAqXG4gKiBfLmVxKCdhJywgJ2EnKTtcbiAqIC8vID0+IHRydWVcbiAqXG4gKiBfLmVxKCdhJywgT2JqZWN0KCdhJykpO1xuICogLy8gPT4gZmFsc2VcbiAqXG4gKiBfLmVxKE5hTiwgTmFOKTtcbiAqIC8vID0+IHRydWVcbiAqL1xuZnVuY3Rpb24gZXEodmFsdWUsIG90aGVyKSB7XG4gIHJldHVybiB2YWx1ZSA9PT0gb3RoZXIgfHwgKHZhbHVlICE9PSB2YWx1ZSAmJiBvdGhlciAhPT0gb3RoZXIpO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGVxO1xuXG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9ub2RlX21vZHVsZXMvbG9kYXNoL2VxLmpzXG4vLyBtb2R1bGUgaWQgPSAuL25vZGVfbW9kdWxlcy9sb2Rhc2gvZXEuanNcbi8vIG1vZHVsZSBjaHVua3MgPSAxIiwidmFyIGJhc2VHZXQgPSByZXF1aXJlKCcuL19iYXNlR2V0Jyk7XG5cbi8qKlxuICogR2V0cyB0aGUgdmFsdWUgYXQgYHBhdGhgIG9mIGBvYmplY3RgLiBJZiB0aGUgcmVzb2x2ZWQgdmFsdWUgaXNcbiAqIGB1bmRlZmluZWRgLCB0aGUgYGRlZmF1bHRWYWx1ZWAgaXMgcmV0dXJuZWQgaW4gaXRzIHBsYWNlLlxuICpcbiAqIEBzdGF0aWNcbiAqIEBtZW1iZXJPZiBfXG4gKiBAc2luY2UgMy43LjBcbiAqIEBjYXRlZ29yeSBPYmplY3RcbiAqIEBwYXJhbSB7T2JqZWN0fSBvYmplY3QgVGhlIG9iamVjdCB0byBxdWVyeS5cbiAqIEBwYXJhbSB7QXJyYXl8c3RyaW5nfSBwYXRoIFRoZSBwYXRoIG9mIHRoZSBwcm9wZXJ0eSB0byBnZXQuXG4gKiBAcGFyYW0geyp9IFtkZWZhdWx0VmFsdWVdIFRoZSB2YWx1ZSByZXR1cm5lZCBmb3IgYHVuZGVmaW5lZGAgcmVzb2x2ZWQgdmFsdWVzLlxuICogQHJldHVybnMgeyp9IFJldHVybnMgdGhlIHJlc29sdmVkIHZhbHVlLlxuICogQGV4YW1wbGVcbiAqXG4gKiB2YXIgb2JqZWN0ID0geyAnYSc6IFt7ICdiJzogeyAnYyc6IDMgfSB9XSB9O1xuICpcbiAqIF8uZ2V0KG9iamVjdCwgJ2FbMF0uYi5jJyk7XG4gKiAvLyA9PiAzXG4gKlxuICogXy5nZXQob2JqZWN0LCBbJ2EnLCAnMCcsICdiJywgJ2MnXSk7XG4gKiAvLyA9PiAzXG4gKlxuICogXy5nZXQob2JqZWN0LCAnYS5iLmMnLCAnZGVmYXVsdCcpO1xuICogLy8gPT4gJ2RlZmF1bHQnXG4gKi9cbmZ1bmN0aW9uIGdldChvYmplY3QsIHBhdGgsIGRlZmF1bHRWYWx1ZSkge1xuICB2YXIgcmVzdWx0ID0gb2JqZWN0ID09IG51bGwgPyB1bmRlZmluZWQgOiBiYXNlR2V0KG9iamVjdCwgcGF0aCk7XG4gIHJldHVybiByZXN1bHQgPT09IHVuZGVmaW5lZCA/IGRlZmF1bHRWYWx1ZSA6IHJlc3VsdDtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBnZXQ7XG5cblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL25vZGVfbW9kdWxlcy9sb2Rhc2gvZ2V0LmpzXG4vLyBtb2R1bGUgaWQgPSAuL25vZGVfbW9kdWxlcy9sb2Rhc2gvZ2V0LmpzXG4vLyBtb2R1bGUgY2h1bmtzID0gMSIsInZhciBiYXNlSGFzSW4gPSByZXF1aXJlKCcuL19iYXNlSGFzSW4nKSxcbiAgICBoYXNQYXRoID0gcmVxdWlyZSgnLi9faGFzUGF0aCcpO1xuXG4vKipcbiAqIENoZWNrcyBpZiBgcGF0aGAgaXMgYSBkaXJlY3Qgb3IgaW5oZXJpdGVkIHByb3BlcnR5IG9mIGBvYmplY3RgLlxuICpcbiAqIEBzdGF0aWNcbiAqIEBtZW1iZXJPZiBfXG4gKiBAc2luY2UgNC4wLjBcbiAqIEBjYXRlZ29yeSBPYmplY3RcbiAqIEBwYXJhbSB7T2JqZWN0fSBvYmplY3QgVGhlIG9iamVjdCB0byBxdWVyeS5cbiAqIEBwYXJhbSB7QXJyYXl8c3RyaW5nfSBwYXRoIFRoZSBwYXRoIHRvIGNoZWNrLlxuICogQHJldHVybnMge2Jvb2xlYW59IFJldHVybnMgYHRydWVgIGlmIGBwYXRoYCBleGlzdHMsIGVsc2UgYGZhbHNlYC5cbiAqIEBleGFtcGxlXG4gKlxuICogdmFyIG9iamVjdCA9IF8uY3JlYXRlKHsgJ2EnOiBfLmNyZWF0ZSh7ICdiJzogMiB9KSB9KTtcbiAqXG4gKiBfLmhhc0luKG9iamVjdCwgJ2EnKTtcbiAqIC8vID0+IHRydWVcbiAqXG4gKiBfLmhhc0luKG9iamVjdCwgJ2EuYicpO1xuICogLy8gPT4gdHJ1ZVxuICpcbiAqIF8uaGFzSW4ob2JqZWN0LCBbJ2EnLCAnYiddKTtcbiAqIC8vID0+IHRydWVcbiAqXG4gKiBfLmhhc0luKG9iamVjdCwgJ2InKTtcbiAqIC8vID0+IGZhbHNlXG4gKi9cbmZ1bmN0aW9uIGhhc0luKG9iamVjdCwgcGF0aCkge1xuICByZXR1cm4gb2JqZWN0ICE9IG51bGwgJiYgaGFzUGF0aChvYmplY3QsIHBhdGgsIGJhc2VIYXNJbik7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gaGFzSW47XG5cblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL25vZGVfbW9kdWxlcy9sb2Rhc2gvaGFzSW4uanNcbi8vIG1vZHVsZSBpZCA9IC4vbm9kZV9tb2R1bGVzL2xvZGFzaC9oYXNJbi5qc1xuLy8gbW9kdWxlIGNodW5rcyA9IDEiLCIvKipcbiAqIFRoaXMgbWV0aG9kIHJldHVybnMgdGhlIGZpcnN0IGFyZ3VtZW50IGl0IHJlY2VpdmVzLlxuICpcbiAqIEBzdGF0aWNcbiAqIEBzaW5jZSAwLjEuMFxuICogQG1lbWJlck9mIF9cbiAqIEBjYXRlZ29yeSBVdGlsXG4gKiBAcGFyYW0geyp9IHZhbHVlIEFueSB2YWx1ZS5cbiAqIEByZXR1cm5zIHsqfSBSZXR1cm5zIGB2YWx1ZWAuXG4gKiBAZXhhbXBsZVxuICpcbiAqIHZhciBvYmplY3QgPSB7ICdhJzogMSB9O1xuICpcbiAqIGNvbnNvbGUubG9nKF8uaWRlbnRpdHkob2JqZWN0KSA9PT0gb2JqZWN0KTtcbiAqIC8vID0+IHRydWVcbiAqL1xuZnVuY3Rpb24gaWRlbnRpdHkodmFsdWUpIHtcbiAgcmV0dXJuIHZhbHVlO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGlkZW50aXR5O1xuXG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9ub2RlX21vZHVsZXMvbG9kYXNoL2lkZW50aXR5LmpzXG4vLyBtb2R1bGUgaWQgPSAuL25vZGVfbW9kdWxlcy9sb2Rhc2gvaWRlbnRpdHkuanNcbi8vIG1vZHVsZSBjaHVua3MgPSAxIiwidmFyIGJhc2VJc0FyZ3VtZW50cyA9IHJlcXVpcmUoJy4vX2Jhc2VJc0FyZ3VtZW50cycpLFxuICAgIGlzT2JqZWN0TGlrZSA9IHJlcXVpcmUoJy4vaXNPYmplY3RMaWtlJyk7XG5cbi8qKiBVc2VkIGZvciBidWlsdC1pbiBtZXRob2QgcmVmZXJlbmNlcy4gKi9cbnZhciBvYmplY3RQcm90byA9IE9iamVjdC5wcm90b3R5cGU7XG5cbi8qKiBVc2VkIHRvIGNoZWNrIG9iamVjdHMgZm9yIG93biBwcm9wZXJ0aWVzLiAqL1xudmFyIGhhc093blByb3BlcnR5ID0gb2JqZWN0UHJvdG8uaGFzT3duUHJvcGVydHk7XG5cbi8qKiBCdWlsdC1pbiB2YWx1ZSByZWZlcmVuY2VzLiAqL1xudmFyIHByb3BlcnR5SXNFbnVtZXJhYmxlID0gb2JqZWN0UHJvdG8ucHJvcGVydHlJc0VudW1lcmFibGU7XG5cbi8qKlxuICogQ2hlY2tzIGlmIGB2YWx1ZWAgaXMgbGlrZWx5IGFuIGBhcmd1bWVudHNgIG9iamVjdC5cbiAqXG4gKiBAc3RhdGljXG4gKiBAbWVtYmVyT2YgX1xuICogQHNpbmNlIDAuMS4wXG4gKiBAY2F0ZWdvcnkgTGFuZ1xuICogQHBhcmFtIHsqfSB2YWx1ZSBUaGUgdmFsdWUgdG8gY2hlY2suXG4gKiBAcmV0dXJucyB7Ym9vbGVhbn0gUmV0dXJucyBgdHJ1ZWAgaWYgYHZhbHVlYCBpcyBhbiBgYXJndW1lbnRzYCBvYmplY3QsXG4gKiAgZWxzZSBgZmFsc2VgLlxuICogQGV4YW1wbGVcbiAqXG4gKiBfLmlzQXJndW1lbnRzKGZ1bmN0aW9uKCkgeyByZXR1cm4gYXJndW1lbnRzOyB9KCkpO1xuICogLy8gPT4gdHJ1ZVxuICpcbiAqIF8uaXNBcmd1bWVudHMoWzEsIDIsIDNdKTtcbiAqIC8vID0+IGZhbHNlXG4gKi9cbnZhciBpc0FyZ3VtZW50cyA9IGJhc2VJc0FyZ3VtZW50cyhmdW5jdGlvbigpIHsgcmV0dXJuIGFyZ3VtZW50czsgfSgpKSA/IGJhc2VJc0FyZ3VtZW50cyA6IGZ1bmN0aW9uKHZhbHVlKSB7XG4gIHJldHVybiBpc09iamVjdExpa2UodmFsdWUpICYmIGhhc093blByb3BlcnR5LmNhbGwodmFsdWUsICdjYWxsZWUnKSAmJlxuICAgICFwcm9wZXJ0eUlzRW51bWVyYWJsZS5jYWxsKHZhbHVlLCAnY2FsbGVlJyk7XG59O1xuXG5tb2R1bGUuZXhwb3J0cyA9IGlzQXJndW1lbnRzO1xuXG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9ub2RlX21vZHVsZXMvbG9kYXNoL2lzQXJndW1lbnRzLmpzXG4vLyBtb2R1bGUgaWQgPSAuL25vZGVfbW9kdWxlcy9sb2Rhc2gvaXNBcmd1bWVudHMuanNcbi8vIG1vZHVsZSBjaHVua3MgPSAxIiwiLyoqXG4gKiBDaGVja3MgaWYgYHZhbHVlYCBpcyBjbGFzc2lmaWVkIGFzIGFuIGBBcnJheWAgb2JqZWN0LlxuICpcbiAqIEBzdGF0aWNcbiAqIEBtZW1iZXJPZiBfXG4gKiBAc2luY2UgMC4xLjBcbiAqIEBjYXRlZ29yeSBMYW5nXG4gKiBAcGFyYW0geyp9IHZhbHVlIFRoZSB2YWx1ZSB0byBjaGVjay5cbiAqIEByZXR1cm5zIHtib29sZWFufSBSZXR1cm5zIGB0cnVlYCBpZiBgdmFsdWVgIGlzIGFuIGFycmF5LCBlbHNlIGBmYWxzZWAuXG4gKiBAZXhhbXBsZVxuICpcbiAqIF8uaXNBcnJheShbMSwgMiwgM10pO1xuICogLy8gPT4gdHJ1ZVxuICpcbiAqIF8uaXNBcnJheShkb2N1bWVudC5ib2R5LmNoaWxkcmVuKTtcbiAqIC8vID0+IGZhbHNlXG4gKlxuICogXy5pc0FycmF5KCdhYmMnKTtcbiAqIC8vID0+IGZhbHNlXG4gKlxuICogXy5pc0FycmF5KF8ubm9vcCk7XG4gKiAvLyA9PiBmYWxzZVxuICovXG52YXIgaXNBcnJheSA9IEFycmF5LmlzQXJyYXk7XG5cbm1vZHVsZS5leHBvcnRzID0gaXNBcnJheTtcblxuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vbm9kZV9tb2R1bGVzL2xvZGFzaC9pc0FycmF5LmpzXG4vLyBtb2R1bGUgaWQgPSAuL25vZGVfbW9kdWxlcy9sb2Rhc2gvaXNBcnJheS5qc1xuLy8gbW9kdWxlIGNodW5rcyA9IDEiLCJ2YXIgaXNGdW5jdGlvbiA9IHJlcXVpcmUoJy4vaXNGdW5jdGlvbicpLFxuICAgIGlzTGVuZ3RoID0gcmVxdWlyZSgnLi9pc0xlbmd0aCcpO1xuXG4vKipcbiAqIENoZWNrcyBpZiBgdmFsdWVgIGlzIGFycmF5LWxpa2UuIEEgdmFsdWUgaXMgY29uc2lkZXJlZCBhcnJheS1saWtlIGlmIGl0J3NcbiAqIG5vdCBhIGZ1bmN0aW9uIGFuZCBoYXMgYSBgdmFsdWUubGVuZ3RoYCB0aGF0J3MgYW4gaW50ZWdlciBncmVhdGVyIHRoYW4gb3JcbiAqIGVxdWFsIHRvIGAwYCBhbmQgbGVzcyB0aGFuIG9yIGVxdWFsIHRvIGBOdW1iZXIuTUFYX1NBRkVfSU5URUdFUmAuXG4gKlxuICogQHN0YXRpY1xuICogQG1lbWJlck9mIF9cbiAqIEBzaW5jZSA0LjAuMFxuICogQGNhdGVnb3J5IExhbmdcbiAqIEBwYXJhbSB7Kn0gdmFsdWUgVGhlIHZhbHVlIHRvIGNoZWNrLlxuICogQHJldHVybnMge2Jvb2xlYW59IFJldHVybnMgYHRydWVgIGlmIGB2YWx1ZWAgaXMgYXJyYXktbGlrZSwgZWxzZSBgZmFsc2VgLlxuICogQGV4YW1wbGVcbiAqXG4gKiBfLmlzQXJyYXlMaWtlKFsxLCAyLCAzXSk7XG4gKiAvLyA9PiB0cnVlXG4gKlxuICogXy5pc0FycmF5TGlrZShkb2N1bWVudC5ib2R5LmNoaWxkcmVuKTtcbiAqIC8vID0+IHRydWVcbiAqXG4gKiBfLmlzQXJyYXlMaWtlKCdhYmMnKTtcbiAqIC8vID0+IHRydWVcbiAqXG4gKiBfLmlzQXJyYXlMaWtlKF8ubm9vcCk7XG4gKiAvLyA9PiBmYWxzZVxuICovXG5mdW5jdGlvbiBpc0FycmF5TGlrZSh2YWx1ZSkge1xuICByZXR1cm4gdmFsdWUgIT0gbnVsbCAmJiBpc0xlbmd0aCh2YWx1ZS5sZW5ndGgpICYmICFpc0Z1bmN0aW9uKHZhbHVlKTtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBpc0FycmF5TGlrZTtcblxuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vbm9kZV9tb2R1bGVzL2xvZGFzaC9pc0FycmF5TGlrZS5qc1xuLy8gbW9kdWxlIGlkID0gLi9ub2RlX21vZHVsZXMvbG9kYXNoL2lzQXJyYXlMaWtlLmpzXG4vLyBtb2R1bGUgY2h1bmtzID0gMSIsInZhciBpc0FycmF5TGlrZSA9IHJlcXVpcmUoJy4vaXNBcnJheUxpa2UnKSxcbiAgICBpc09iamVjdExpa2UgPSByZXF1aXJlKCcuL2lzT2JqZWN0TGlrZScpO1xuXG4vKipcbiAqIFRoaXMgbWV0aG9kIGlzIGxpa2UgYF8uaXNBcnJheUxpa2VgIGV4Y2VwdCB0aGF0IGl0IGFsc28gY2hlY2tzIGlmIGB2YWx1ZWBcbiAqIGlzIGFuIG9iamVjdC5cbiAqXG4gKiBAc3RhdGljXG4gKiBAbWVtYmVyT2YgX1xuICogQHNpbmNlIDQuMC4wXG4gKiBAY2F0ZWdvcnkgTGFuZ1xuICogQHBhcmFtIHsqfSB2YWx1ZSBUaGUgdmFsdWUgdG8gY2hlY2suXG4gKiBAcmV0dXJucyB7Ym9vbGVhbn0gUmV0dXJucyBgdHJ1ZWAgaWYgYHZhbHVlYCBpcyBhbiBhcnJheS1saWtlIG9iamVjdCxcbiAqICBlbHNlIGBmYWxzZWAuXG4gKiBAZXhhbXBsZVxuICpcbiAqIF8uaXNBcnJheUxpa2VPYmplY3QoWzEsIDIsIDNdKTtcbiAqIC8vID0+IHRydWVcbiAqXG4gKiBfLmlzQXJyYXlMaWtlT2JqZWN0KGRvY3VtZW50LmJvZHkuY2hpbGRyZW4pO1xuICogLy8gPT4gdHJ1ZVxuICpcbiAqIF8uaXNBcnJheUxpa2VPYmplY3QoJ2FiYycpO1xuICogLy8gPT4gZmFsc2VcbiAqXG4gKiBfLmlzQXJyYXlMaWtlT2JqZWN0KF8ubm9vcCk7XG4gKiAvLyA9PiBmYWxzZVxuICovXG5mdW5jdGlvbiBpc0FycmF5TGlrZU9iamVjdCh2YWx1ZSkge1xuICByZXR1cm4gaXNPYmplY3RMaWtlKHZhbHVlKSAmJiBpc0FycmF5TGlrZSh2YWx1ZSk7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gaXNBcnJheUxpa2VPYmplY3Q7XG5cblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL25vZGVfbW9kdWxlcy9sb2Rhc2gvaXNBcnJheUxpa2VPYmplY3QuanNcbi8vIG1vZHVsZSBpZCA9IC4vbm9kZV9tb2R1bGVzL2xvZGFzaC9pc0FycmF5TGlrZU9iamVjdC5qc1xuLy8gbW9kdWxlIGNodW5rcyA9IDEiLCJ2YXIgcm9vdCA9IHJlcXVpcmUoJy4vX3Jvb3QnKSxcbiAgICBzdHViRmFsc2UgPSByZXF1aXJlKCcuL3N0dWJGYWxzZScpO1xuXG4vKiogRGV0ZWN0IGZyZWUgdmFyaWFibGUgYGV4cG9ydHNgLiAqL1xudmFyIGZyZWVFeHBvcnRzID0gdHlwZW9mIGV4cG9ydHMgPT0gJ29iamVjdCcgJiYgZXhwb3J0cyAmJiAhZXhwb3J0cy5ub2RlVHlwZSAmJiBleHBvcnRzO1xuXG4vKiogRGV0ZWN0IGZyZWUgdmFyaWFibGUgYG1vZHVsZWAuICovXG52YXIgZnJlZU1vZHVsZSA9IGZyZWVFeHBvcnRzICYmIHR5cGVvZiBtb2R1bGUgPT0gJ29iamVjdCcgJiYgbW9kdWxlICYmICFtb2R1bGUubm9kZVR5cGUgJiYgbW9kdWxlO1xuXG4vKiogRGV0ZWN0IHRoZSBwb3B1bGFyIENvbW1vbkpTIGV4dGVuc2lvbiBgbW9kdWxlLmV4cG9ydHNgLiAqL1xudmFyIG1vZHVsZUV4cG9ydHMgPSBmcmVlTW9kdWxlICYmIGZyZWVNb2R1bGUuZXhwb3J0cyA9PT0gZnJlZUV4cG9ydHM7XG5cbi8qKiBCdWlsdC1pbiB2YWx1ZSByZWZlcmVuY2VzLiAqL1xudmFyIEJ1ZmZlciA9IG1vZHVsZUV4cG9ydHMgPyByb290LkJ1ZmZlciA6IHVuZGVmaW5lZDtcblxuLyogQnVpbHQtaW4gbWV0aG9kIHJlZmVyZW5jZXMgZm9yIHRob3NlIHdpdGggdGhlIHNhbWUgbmFtZSBhcyBvdGhlciBgbG9kYXNoYCBtZXRob2RzLiAqL1xudmFyIG5hdGl2ZUlzQnVmZmVyID0gQnVmZmVyID8gQnVmZmVyLmlzQnVmZmVyIDogdW5kZWZpbmVkO1xuXG4vKipcbiAqIENoZWNrcyBpZiBgdmFsdWVgIGlzIGEgYnVmZmVyLlxuICpcbiAqIEBzdGF0aWNcbiAqIEBtZW1iZXJPZiBfXG4gKiBAc2luY2UgNC4zLjBcbiAqIEBjYXRlZ29yeSBMYW5nXG4gKiBAcGFyYW0geyp9IHZhbHVlIFRoZSB2YWx1ZSB0byBjaGVjay5cbiAqIEByZXR1cm5zIHtib29sZWFufSBSZXR1cm5zIGB0cnVlYCBpZiBgdmFsdWVgIGlzIGEgYnVmZmVyLCBlbHNlIGBmYWxzZWAuXG4gKiBAZXhhbXBsZVxuICpcbiAqIF8uaXNCdWZmZXIobmV3IEJ1ZmZlcigyKSk7XG4gKiAvLyA9PiB0cnVlXG4gKlxuICogXy5pc0J1ZmZlcihuZXcgVWludDhBcnJheSgyKSk7XG4gKiAvLyA9PiBmYWxzZVxuICovXG52YXIgaXNCdWZmZXIgPSBuYXRpdmVJc0J1ZmZlciB8fCBzdHViRmFsc2U7XG5cbm1vZHVsZS5leHBvcnRzID0gaXNCdWZmZXI7XG5cblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL25vZGVfbW9kdWxlcy9sb2Rhc2gvaXNCdWZmZXIuanNcbi8vIG1vZHVsZSBpZCA9IC4vbm9kZV9tb2R1bGVzL2xvZGFzaC9pc0J1ZmZlci5qc1xuLy8gbW9kdWxlIGNodW5rcyA9IDEiLCJ2YXIgYmFzZUlzRXF1YWwgPSByZXF1aXJlKCcuL19iYXNlSXNFcXVhbCcpO1xuXG4vKipcbiAqIFBlcmZvcm1zIGEgZGVlcCBjb21wYXJpc29uIGJldHdlZW4gdHdvIHZhbHVlcyB0byBkZXRlcm1pbmUgaWYgdGhleSBhcmVcbiAqIGVxdWl2YWxlbnQuXG4gKlxuICogKipOb3RlOioqIFRoaXMgbWV0aG9kIHN1cHBvcnRzIGNvbXBhcmluZyBhcnJheXMsIGFycmF5IGJ1ZmZlcnMsIGJvb2xlYW5zLFxuICogZGF0ZSBvYmplY3RzLCBlcnJvciBvYmplY3RzLCBtYXBzLCBudW1iZXJzLCBgT2JqZWN0YCBvYmplY3RzLCByZWdleGVzLFxuICogc2V0cywgc3RyaW5ncywgc3ltYm9scywgYW5kIHR5cGVkIGFycmF5cy4gYE9iamVjdGAgb2JqZWN0cyBhcmUgY29tcGFyZWRcbiAqIGJ5IHRoZWlyIG93biwgbm90IGluaGVyaXRlZCwgZW51bWVyYWJsZSBwcm9wZXJ0aWVzLiBGdW5jdGlvbnMgYW5kIERPTVxuICogbm9kZXMgYXJlIGNvbXBhcmVkIGJ5IHN0cmljdCBlcXVhbGl0eSwgaS5lLiBgPT09YC5cbiAqXG4gKiBAc3RhdGljXG4gKiBAbWVtYmVyT2YgX1xuICogQHNpbmNlIDAuMS4wXG4gKiBAY2F0ZWdvcnkgTGFuZ1xuICogQHBhcmFtIHsqfSB2YWx1ZSBUaGUgdmFsdWUgdG8gY29tcGFyZS5cbiAqIEBwYXJhbSB7Kn0gb3RoZXIgVGhlIG90aGVyIHZhbHVlIHRvIGNvbXBhcmUuXG4gKiBAcmV0dXJucyB7Ym9vbGVhbn0gUmV0dXJucyBgdHJ1ZWAgaWYgdGhlIHZhbHVlcyBhcmUgZXF1aXZhbGVudCwgZWxzZSBgZmFsc2VgLlxuICogQGV4YW1wbGVcbiAqXG4gKiB2YXIgb2JqZWN0ID0geyAnYSc6IDEgfTtcbiAqIHZhciBvdGhlciA9IHsgJ2EnOiAxIH07XG4gKlxuICogXy5pc0VxdWFsKG9iamVjdCwgb3RoZXIpO1xuICogLy8gPT4gdHJ1ZVxuICpcbiAqIG9iamVjdCA9PT0gb3RoZXI7XG4gKiAvLyA9PiBmYWxzZVxuICovXG5mdW5jdGlvbiBpc0VxdWFsKHZhbHVlLCBvdGhlcikge1xuICByZXR1cm4gYmFzZUlzRXF1YWwodmFsdWUsIG90aGVyKTtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBpc0VxdWFsO1xuXG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9ub2RlX21vZHVsZXMvbG9kYXNoL2lzRXF1YWwuanNcbi8vIG1vZHVsZSBpZCA9IC4vbm9kZV9tb2R1bGVzL2xvZGFzaC9pc0VxdWFsLmpzXG4vLyBtb2R1bGUgY2h1bmtzID0gMSIsInZhciByb290ID0gcmVxdWlyZSgnLi9fcm9vdCcpO1xuXG4vKiBCdWlsdC1pbiBtZXRob2QgcmVmZXJlbmNlcyBmb3IgdGhvc2Ugd2l0aCB0aGUgc2FtZSBuYW1lIGFzIG90aGVyIGBsb2Rhc2hgIG1ldGhvZHMuICovXG52YXIgbmF0aXZlSXNGaW5pdGUgPSByb290LmlzRmluaXRlO1xuXG4vKipcbiAqIENoZWNrcyBpZiBgdmFsdWVgIGlzIGEgZmluaXRlIHByaW1pdGl2ZSBudW1iZXIuXG4gKlxuICogKipOb3RlOioqIFRoaXMgbWV0aG9kIGlzIGJhc2VkIG9uXG4gKiBbYE51bWJlci5pc0Zpbml0ZWBdKGh0dHBzOi8vbWRuLmlvL051bWJlci9pc0Zpbml0ZSkuXG4gKlxuICogQHN0YXRpY1xuICogQG1lbWJlck9mIF9cbiAqIEBzaW5jZSAwLjEuMFxuICogQGNhdGVnb3J5IExhbmdcbiAqIEBwYXJhbSB7Kn0gdmFsdWUgVGhlIHZhbHVlIHRvIGNoZWNrLlxuICogQHJldHVybnMge2Jvb2xlYW59IFJldHVybnMgYHRydWVgIGlmIGB2YWx1ZWAgaXMgYSBmaW5pdGUgbnVtYmVyLCBlbHNlIGBmYWxzZWAuXG4gKiBAZXhhbXBsZVxuICpcbiAqIF8uaXNGaW5pdGUoMyk7XG4gKiAvLyA9PiB0cnVlXG4gKlxuICogXy5pc0Zpbml0ZShOdW1iZXIuTUlOX1ZBTFVFKTtcbiAqIC8vID0+IHRydWVcbiAqXG4gKiBfLmlzRmluaXRlKEluZmluaXR5KTtcbiAqIC8vID0+IGZhbHNlXG4gKlxuICogXy5pc0Zpbml0ZSgnMycpO1xuICogLy8gPT4gZmFsc2VcbiAqL1xuZnVuY3Rpb24gaXNGaW5pdGUodmFsdWUpIHtcbiAgcmV0dXJuIHR5cGVvZiB2YWx1ZSA9PSAnbnVtYmVyJyAmJiBuYXRpdmVJc0Zpbml0ZSh2YWx1ZSk7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gaXNGaW5pdGU7XG5cblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL25vZGVfbW9kdWxlcy9sb2Rhc2gvaXNGaW5pdGUuanNcbi8vIG1vZHVsZSBpZCA9IC4vbm9kZV9tb2R1bGVzL2xvZGFzaC9pc0Zpbml0ZS5qc1xuLy8gbW9kdWxlIGNodW5rcyA9IDEiLCJ2YXIgYmFzZUdldFRhZyA9IHJlcXVpcmUoJy4vX2Jhc2VHZXRUYWcnKSxcbiAgICBpc09iamVjdCA9IHJlcXVpcmUoJy4vaXNPYmplY3QnKTtcblxuLyoqIGBPYmplY3QjdG9TdHJpbmdgIHJlc3VsdCByZWZlcmVuY2VzLiAqL1xudmFyIGFzeW5jVGFnID0gJ1tvYmplY3QgQXN5bmNGdW5jdGlvbl0nLFxuICAgIGZ1bmNUYWcgPSAnW29iamVjdCBGdW5jdGlvbl0nLFxuICAgIGdlblRhZyA9ICdbb2JqZWN0IEdlbmVyYXRvckZ1bmN0aW9uXScsXG4gICAgcHJveHlUYWcgPSAnW29iamVjdCBQcm94eV0nO1xuXG4vKipcbiAqIENoZWNrcyBpZiBgdmFsdWVgIGlzIGNsYXNzaWZpZWQgYXMgYSBgRnVuY3Rpb25gIG9iamVjdC5cbiAqXG4gKiBAc3RhdGljXG4gKiBAbWVtYmVyT2YgX1xuICogQHNpbmNlIDAuMS4wXG4gKiBAY2F0ZWdvcnkgTGFuZ1xuICogQHBhcmFtIHsqfSB2YWx1ZSBUaGUgdmFsdWUgdG8gY2hlY2suXG4gKiBAcmV0dXJucyB7Ym9vbGVhbn0gUmV0dXJucyBgdHJ1ZWAgaWYgYHZhbHVlYCBpcyBhIGZ1bmN0aW9uLCBlbHNlIGBmYWxzZWAuXG4gKiBAZXhhbXBsZVxuICpcbiAqIF8uaXNGdW5jdGlvbihfKTtcbiAqIC8vID0+IHRydWVcbiAqXG4gKiBfLmlzRnVuY3Rpb24oL2FiYy8pO1xuICogLy8gPT4gZmFsc2VcbiAqL1xuZnVuY3Rpb24gaXNGdW5jdGlvbih2YWx1ZSkge1xuICBpZiAoIWlzT2JqZWN0KHZhbHVlKSkge1xuICAgIHJldHVybiBmYWxzZTtcbiAgfVxuICAvLyBUaGUgdXNlIG9mIGBPYmplY3QjdG9TdHJpbmdgIGF2b2lkcyBpc3N1ZXMgd2l0aCB0aGUgYHR5cGVvZmAgb3BlcmF0b3JcbiAgLy8gaW4gU2FmYXJpIDkgd2hpY2ggcmV0dXJucyAnb2JqZWN0JyBmb3IgdHlwZWQgYXJyYXlzIGFuZCBvdGhlciBjb25zdHJ1Y3RvcnMuXG4gIHZhciB0YWcgPSBiYXNlR2V0VGFnKHZhbHVlKTtcbiAgcmV0dXJuIHRhZyA9PSBmdW5jVGFnIHx8IHRhZyA9PSBnZW5UYWcgfHwgdGFnID09IGFzeW5jVGFnIHx8IHRhZyA9PSBwcm94eVRhZztcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBpc0Z1bmN0aW9uO1xuXG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9ub2RlX21vZHVsZXMvbG9kYXNoL2lzRnVuY3Rpb24uanNcbi8vIG1vZHVsZSBpZCA9IC4vbm9kZV9tb2R1bGVzL2xvZGFzaC9pc0Z1bmN0aW9uLmpzXG4vLyBtb2R1bGUgY2h1bmtzID0gMSIsIi8qKiBVc2VkIGFzIHJlZmVyZW5jZXMgZm9yIHZhcmlvdXMgYE51bWJlcmAgY29uc3RhbnRzLiAqL1xudmFyIE1BWF9TQUZFX0lOVEVHRVIgPSA5MDA3MTk5MjU0NzQwOTkxO1xuXG4vKipcbiAqIENoZWNrcyBpZiBgdmFsdWVgIGlzIGEgdmFsaWQgYXJyYXktbGlrZSBsZW5ndGguXG4gKlxuICogKipOb3RlOioqIFRoaXMgbWV0aG9kIGlzIGxvb3NlbHkgYmFzZWQgb25cbiAqIFtgVG9MZW5ndGhgXShodHRwOi8vZWNtYS1pbnRlcm5hdGlvbmFsLm9yZy9lY21hLTI2Mi83LjAvI3NlYy10b2xlbmd0aCkuXG4gKlxuICogQHN0YXRpY1xuICogQG1lbWJlck9mIF9cbiAqIEBzaW5jZSA0LjAuMFxuICogQGNhdGVnb3J5IExhbmdcbiAqIEBwYXJhbSB7Kn0gdmFsdWUgVGhlIHZhbHVlIHRvIGNoZWNrLlxuICogQHJldHVybnMge2Jvb2xlYW59IFJldHVybnMgYHRydWVgIGlmIGB2YWx1ZWAgaXMgYSB2YWxpZCBsZW5ndGgsIGVsc2UgYGZhbHNlYC5cbiAqIEBleGFtcGxlXG4gKlxuICogXy5pc0xlbmd0aCgzKTtcbiAqIC8vID0+IHRydWVcbiAqXG4gKiBfLmlzTGVuZ3RoKE51bWJlci5NSU5fVkFMVUUpO1xuICogLy8gPT4gZmFsc2VcbiAqXG4gKiBfLmlzTGVuZ3RoKEluZmluaXR5KTtcbiAqIC8vID0+IGZhbHNlXG4gKlxuICogXy5pc0xlbmd0aCgnMycpO1xuICogLy8gPT4gZmFsc2VcbiAqL1xuZnVuY3Rpb24gaXNMZW5ndGgodmFsdWUpIHtcbiAgcmV0dXJuIHR5cGVvZiB2YWx1ZSA9PSAnbnVtYmVyJyAmJlxuICAgIHZhbHVlID4gLTEgJiYgdmFsdWUgJSAxID09IDAgJiYgdmFsdWUgPD0gTUFYX1NBRkVfSU5URUdFUjtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBpc0xlbmd0aDtcblxuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vbm9kZV9tb2R1bGVzL2xvZGFzaC9pc0xlbmd0aC5qc1xuLy8gbW9kdWxlIGlkID0gLi9ub2RlX21vZHVsZXMvbG9kYXNoL2lzTGVuZ3RoLmpzXG4vLyBtb2R1bGUgY2h1bmtzID0gMSIsInZhciBiYXNlSXNNYXAgPSByZXF1aXJlKCcuL19iYXNlSXNNYXAnKSxcbiAgICBiYXNlVW5hcnkgPSByZXF1aXJlKCcuL19iYXNlVW5hcnknKSxcbiAgICBub2RlVXRpbCA9IHJlcXVpcmUoJy4vX25vZGVVdGlsJyk7XG5cbi8qIE5vZGUuanMgaGVscGVyIHJlZmVyZW5jZXMuICovXG52YXIgbm9kZUlzTWFwID0gbm9kZVV0aWwgJiYgbm9kZVV0aWwuaXNNYXA7XG5cbi8qKlxuICogQ2hlY2tzIGlmIGB2YWx1ZWAgaXMgY2xhc3NpZmllZCBhcyBhIGBNYXBgIG9iamVjdC5cbiAqXG4gKiBAc3RhdGljXG4gKiBAbWVtYmVyT2YgX1xuICogQHNpbmNlIDQuMy4wXG4gKiBAY2F0ZWdvcnkgTGFuZ1xuICogQHBhcmFtIHsqfSB2YWx1ZSBUaGUgdmFsdWUgdG8gY2hlY2suXG4gKiBAcmV0dXJucyB7Ym9vbGVhbn0gUmV0dXJucyBgdHJ1ZWAgaWYgYHZhbHVlYCBpcyBhIG1hcCwgZWxzZSBgZmFsc2VgLlxuICogQGV4YW1wbGVcbiAqXG4gKiBfLmlzTWFwKG5ldyBNYXApO1xuICogLy8gPT4gdHJ1ZVxuICpcbiAqIF8uaXNNYXAobmV3IFdlYWtNYXApO1xuICogLy8gPT4gZmFsc2VcbiAqL1xudmFyIGlzTWFwID0gbm9kZUlzTWFwID8gYmFzZVVuYXJ5KG5vZGVJc01hcCkgOiBiYXNlSXNNYXA7XG5cbm1vZHVsZS5leHBvcnRzID0gaXNNYXA7XG5cblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL25vZGVfbW9kdWxlcy9sb2Rhc2gvaXNNYXAuanNcbi8vIG1vZHVsZSBpZCA9IC4vbm9kZV9tb2R1bGVzL2xvZGFzaC9pc01hcC5qc1xuLy8gbW9kdWxlIGNodW5rcyA9IDEiLCIvKipcbiAqIENoZWNrcyBpZiBgdmFsdWVgIGlzIHRoZVxuICogW2xhbmd1YWdlIHR5cGVdKGh0dHA6Ly93d3cuZWNtYS1pbnRlcm5hdGlvbmFsLm9yZy9lY21hLTI2Mi83LjAvI3NlYy1lY21hc2NyaXB0LWxhbmd1YWdlLXR5cGVzKVxuICogb2YgYE9iamVjdGAuIChlLmcuIGFycmF5cywgZnVuY3Rpb25zLCBvYmplY3RzLCByZWdleGVzLCBgbmV3IE51bWJlcigwKWAsIGFuZCBgbmV3IFN0cmluZygnJylgKVxuICpcbiAqIEBzdGF0aWNcbiAqIEBtZW1iZXJPZiBfXG4gKiBAc2luY2UgMC4xLjBcbiAqIEBjYXRlZ29yeSBMYW5nXG4gKiBAcGFyYW0geyp9IHZhbHVlIFRoZSB2YWx1ZSB0byBjaGVjay5cbiAqIEByZXR1cm5zIHtib29sZWFufSBSZXR1cm5zIGB0cnVlYCBpZiBgdmFsdWVgIGlzIGFuIG9iamVjdCwgZWxzZSBgZmFsc2VgLlxuICogQGV4YW1wbGVcbiAqXG4gKiBfLmlzT2JqZWN0KHt9KTtcbiAqIC8vID0+IHRydWVcbiAqXG4gKiBfLmlzT2JqZWN0KFsxLCAyLCAzXSk7XG4gKiAvLyA9PiB0cnVlXG4gKlxuICogXy5pc09iamVjdChfLm5vb3ApO1xuICogLy8gPT4gdHJ1ZVxuICpcbiAqIF8uaXNPYmplY3QobnVsbCk7XG4gKiAvLyA9PiBmYWxzZVxuICovXG5mdW5jdGlvbiBpc09iamVjdCh2YWx1ZSkge1xuICB2YXIgdHlwZSA9IHR5cGVvZiB2YWx1ZTtcbiAgcmV0dXJuIHZhbHVlICE9IG51bGwgJiYgKHR5cGUgPT0gJ29iamVjdCcgfHwgdHlwZSA9PSAnZnVuY3Rpb24nKTtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBpc09iamVjdDtcblxuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vbm9kZV9tb2R1bGVzL2xvZGFzaC9pc09iamVjdC5qc1xuLy8gbW9kdWxlIGlkID0gLi9ub2RlX21vZHVsZXMvbG9kYXNoL2lzT2JqZWN0LmpzXG4vLyBtb2R1bGUgY2h1bmtzID0gMSIsIi8qKlxuICogQ2hlY2tzIGlmIGB2YWx1ZWAgaXMgb2JqZWN0LWxpa2UuIEEgdmFsdWUgaXMgb2JqZWN0LWxpa2UgaWYgaXQncyBub3QgYG51bGxgXG4gKiBhbmQgaGFzIGEgYHR5cGVvZmAgcmVzdWx0IG9mIFwib2JqZWN0XCIuXG4gKlxuICogQHN0YXRpY1xuICogQG1lbWJlck9mIF9cbiAqIEBzaW5jZSA0LjAuMFxuICogQGNhdGVnb3J5IExhbmdcbiAqIEBwYXJhbSB7Kn0gdmFsdWUgVGhlIHZhbHVlIHRvIGNoZWNrLlxuICogQHJldHVybnMge2Jvb2xlYW59IFJldHVybnMgYHRydWVgIGlmIGB2YWx1ZWAgaXMgb2JqZWN0LWxpa2UsIGVsc2UgYGZhbHNlYC5cbiAqIEBleGFtcGxlXG4gKlxuICogXy5pc09iamVjdExpa2Uoe30pO1xuICogLy8gPT4gdHJ1ZVxuICpcbiAqIF8uaXNPYmplY3RMaWtlKFsxLCAyLCAzXSk7XG4gKiAvLyA9PiB0cnVlXG4gKlxuICogXy5pc09iamVjdExpa2UoXy5ub29wKTtcbiAqIC8vID0+IGZhbHNlXG4gKlxuICogXy5pc09iamVjdExpa2UobnVsbCk7XG4gKiAvLyA9PiBmYWxzZVxuICovXG5mdW5jdGlvbiBpc09iamVjdExpa2UodmFsdWUpIHtcbiAgcmV0dXJuIHZhbHVlICE9IG51bGwgJiYgdHlwZW9mIHZhbHVlID09ICdvYmplY3QnO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGlzT2JqZWN0TGlrZTtcblxuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vbm9kZV9tb2R1bGVzL2xvZGFzaC9pc09iamVjdExpa2UuanNcbi8vIG1vZHVsZSBpZCA9IC4vbm9kZV9tb2R1bGVzL2xvZGFzaC9pc09iamVjdExpa2UuanNcbi8vIG1vZHVsZSBjaHVua3MgPSAxIiwidmFyIGJhc2VJc1NldCA9IHJlcXVpcmUoJy4vX2Jhc2VJc1NldCcpLFxuICAgIGJhc2VVbmFyeSA9IHJlcXVpcmUoJy4vX2Jhc2VVbmFyeScpLFxuICAgIG5vZGVVdGlsID0gcmVxdWlyZSgnLi9fbm9kZVV0aWwnKTtcblxuLyogTm9kZS5qcyBoZWxwZXIgcmVmZXJlbmNlcy4gKi9cbnZhciBub2RlSXNTZXQgPSBub2RlVXRpbCAmJiBub2RlVXRpbC5pc1NldDtcblxuLyoqXG4gKiBDaGVja3MgaWYgYHZhbHVlYCBpcyBjbGFzc2lmaWVkIGFzIGEgYFNldGAgb2JqZWN0LlxuICpcbiAqIEBzdGF0aWNcbiAqIEBtZW1iZXJPZiBfXG4gKiBAc2luY2UgNC4zLjBcbiAqIEBjYXRlZ29yeSBMYW5nXG4gKiBAcGFyYW0geyp9IHZhbHVlIFRoZSB2YWx1ZSB0byBjaGVjay5cbiAqIEByZXR1cm5zIHtib29sZWFufSBSZXR1cm5zIGB0cnVlYCBpZiBgdmFsdWVgIGlzIGEgc2V0LCBlbHNlIGBmYWxzZWAuXG4gKiBAZXhhbXBsZVxuICpcbiAqIF8uaXNTZXQobmV3IFNldCk7XG4gKiAvLyA9PiB0cnVlXG4gKlxuICogXy5pc1NldChuZXcgV2Vha1NldCk7XG4gKiAvLyA9PiBmYWxzZVxuICovXG52YXIgaXNTZXQgPSBub2RlSXNTZXQgPyBiYXNlVW5hcnkobm9kZUlzU2V0KSA6IGJhc2VJc1NldDtcblxubW9kdWxlLmV4cG9ydHMgPSBpc1NldDtcblxuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vbm9kZV9tb2R1bGVzL2xvZGFzaC9pc1NldC5qc1xuLy8gbW9kdWxlIGlkID0gLi9ub2RlX21vZHVsZXMvbG9kYXNoL2lzU2V0LmpzXG4vLyBtb2R1bGUgY2h1bmtzID0gMSIsInZhciBiYXNlR2V0VGFnID0gcmVxdWlyZSgnLi9fYmFzZUdldFRhZycpLFxuICAgIGlzT2JqZWN0TGlrZSA9IHJlcXVpcmUoJy4vaXNPYmplY3RMaWtlJyk7XG5cbi8qKiBgT2JqZWN0I3RvU3RyaW5nYCByZXN1bHQgcmVmZXJlbmNlcy4gKi9cbnZhciBzeW1ib2xUYWcgPSAnW29iamVjdCBTeW1ib2xdJztcblxuLyoqXG4gKiBDaGVja3MgaWYgYHZhbHVlYCBpcyBjbGFzc2lmaWVkIGFzIGEgYFN5bWJvbGAgcHJpbWl0aXZlIG9yIG9iamVjdC5cbiAqXG4gKiBAc3RhdGljXG4gKiBAbWVtYmVyT2YgX1xuICogQHNpbmNlIDQuMC4wXG4gKiBAY2F0ZWdvcnkgTGFuZ1xuICogQHBhcmFtIHsqfSB2YWx1ZSBUaGUgdmFsdWUgdG8gY2hlY2suXG4gKiBAcmV0dXJucyB7Ym9vbGVhbn0gUmV0dXJucyBgdHJ1ZWAgaWYgYHZhbHVlYCBpcyBhIHN5bWJvbCwgZWxzZSBgZmFsc2VgLlxuICogQGV4YW1wbGVcbiAqXG4gKiBfLmlzU3ltYm9sKFN5bWJvbC5pdGVyYXRvcik7XG4gKiAvLyA9PiB0cnVlXG4gKlxuICogXy5pc1N5bWJvbCgnYWJjJyk7XG4gKiAvLyA9PiBmYWxzZVxuICovXG5mdW5jdGlvbiBpc1N5bWJvbCh2YWx1ZSkge1xuICByZXR1cm4gdHlwZW9mIHZhbHVlID09ICdzeW1ib2wnIHx8XG4gICAgKGlzT2JqZWN0TGlrZSh2YWx1ZSkgJiYgYmFzZUdldFRhZyh2YWx1ZSkgPT0gc3ltYm9sVGFnKTtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBpc1N5bWJvbDtcblxuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vbm9kZV9tb2R1bGVzL2xvZGFzaC9pc1N5bWJvbC5qc1xuLy8gbW9kdWxlIGlkID0gLi9ub2RlX21vZHVsZXMvbG9kYXNoL2lzU3ltYm9sLmpzXG4vLyBtb2R1bGUgY2h1bmtzID0gMSIsInZhciBiYXNlSXNUeXBlZEFycmF5ID0gcmVxdWlyZSgnLi9fYmFzZUlzVHlwZWRBcnJheScpLFxuICAgIGJhc2VVbmFyeSA9IHJlcXVpcmUoJy4vX2Jhc2VVbmFyeScpLFxuICAgIG5vZGVVdGlsID0gcmVxdWlyZSgnLi9fbm9kZVV0aWwnKTtcblxuLyogTm9kZS5qcyBoZWxwZXIgcmVmZXJlbmNlcy4gKi9cbnZhciBub2RlSXNUeXBlZEFycmF5ID0gbm9kZVV0aWwgJiYgbm9kZVV0aWwuaXNUeXBlZEFycmF5O1xuXG4vKipcbiAqIENoZWNrcyBpZiBgdmFsdWVgIGlzIGNsYXNzaWZpZWQgYXMgYSB0eXBlZCBhcnJheS5cbiAqXG4gKiBAc3RhdGljXG4gKiBAbWVtYmVyT2YgX1xuICogQHNpbmNlIDMuMC4wXG4gKiBAY2F0ZWdvcnkgTGFuZ1xuICogQHBhcmFtIHsqfSB2YWx1ZSBUaGUgdmFsdWUgdG8gY2hlY2suXG4gKiBAcmV0dXJucyB7Ym9vbGVhbn0gUmV0dXJucyBgdHJ1ZWAgaWYgYHZhbHVlYCBpcyBhIHR5cGVkIGFycmF5LCBlbHNlIGBmYWxzZWAuXG4gKiBAZXhhbXBsZVxuICpcbiAqIF8uaXNUeXBlZEFycmF5KG5ldyBVaW50OEFycmF5KTtcbiAqIC8vID0+IHRydWVcbiAqXG4gKiBfLmlzVHlwZWRBcnJheShbXSk7XG4gKiAvLyA9PiBmYWxzZVxuICovXG52YXIgaXNUeXBlZEFycmF5ID0gbm9kZUlzVHlwZWRBcnJheSA/IGJhc2VVbmFyeShub2RlSXNUeXBlZEFycmF5KSA6IGJhc2VJc1R5cGVkQXJyYXk7XG5cbm1vZHVsZS5leHBvcnRzID0gaXNUeXBlZEFycmF5O1xuXG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9ub2RlX21vZHVsZXMvbG9kYXNoL2lzVHlwZWRBcnJheS5qc1xuLy8gbW9kdWxlIGlkID0gLi9ub2RlX21vZHVsZXMvbG9kYXNoL2lzVHlwZWRBcnJheS5qc1xuLy8gbW9kdWxlIGNodW5rcyA9IDEiLCJ2YXIgYXJyYXlMaWtlS2V5cyA9IHJlcXVpcmUoJy4vX2FycmF5TGlrZUtleXMnKSxcbiAgICBiYXNlS2V5cyA9IHJlcXVpcmUoJy4vX2Jhc2VLZXlzJyksXG4gICAgaXNBcnJheUxpa2UgPSByZXF1aXJlKCcuL2lzQXJyYXlMaWtlJyk7XG5cbi8qKlxuICogQ3JlYXRlcyBhbiBhcnJheSBvZiB0aGUgb3duIGVudW1lcmFibGUgcHJvcGVydHkgbmFtZXMgb2YgYG9iamVjdGAuXG4gKlxuICogKipOb3RlOioqIE5vbi1vYmplY3QgdmFsdWVzIGFyZSBjb2VyY2VkIHRvIG9iamVjdHMuIFNlZSB0aGVcbiAqIFtFUyBzcGVjXShodHRwOi8vZWNtYS1pbnRlcm5hdGlvbmFsLm9yZy9lY21hLTI2Mi83LjAvI3NlYy1vYmplY3Qua2V5cylcbiAqIGZvciBtb3JlIGRldGFpbHMuXG4gKlxuICogQHN0YXRpY1xuICogQHNpbmNlIDAuMS4wXG4gKiBAbWVtYmVyT2YgX1xuICogQGNhdGVnb3J5IE9iamVjdFxuICogQHBhcmFtIHtPYmplY3R9IG9iamVjdCBUaGUgb2JqZWN0IHRvIHF1ZXJ5LlxuICogQHJldHVybnMge0FycmF5fSBSZXR1cm5zIHRoZSBhcnJheSBvZiBwcm9wZXJ0eSBuYW1lcy5cbiAqIEBleGFtcGxlXG4gKlxuICogZnVuY3Rpb24gRm9vKCkge1xuICogICB0aGlzLmEgPSAxO1xuICogICB0aGlzLmIgPSAyO1xuICogfVxuICpcbiAqIEZvby5wcm90b3R5cGUuYyA9IDM7XG4gKlxuICogXy5rZXlzKG5ldyBGb28pO1xuICogLy8gPT4gWydhJywgJ2InXSAoaXRlcmF0aW9uIG9yZGVyIGlzIG5vdCBndWFyYW50ZWVkKVxuICpcbiAqIF8ua2V5cygnaGknKTtcbiAqIC8vID0+IFsnMCcsICcxJ11cbiAqL1xuZnVuY3Rpb24ga2V5cyhvYmplY3QpIHtcbiAgcmV0dXJuIGlzQXJyYXlMaWtlKG9iamVjdCkgPyBhcnJheUxpa2VLZXlzKG9iamVjdCkgOiBiYXNlS2V5cyhvYmplY3QpO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGtleXM7XG5cblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL25vZGVfbW9kdWxlcy9sb2Rhc2gva2V5cy5qc1xuLy8gbW9kdWxlIGlkID0gLi9ub2RlX21vZHVsZXMvbG9kYXNoL2tleXMuanNcbi8vIG1vZHVsZSBjaHVua3MgPSAxIiwidmFyIGFycmF5TGlrZUtleXMgPSByZXF1aXJlKCcuL19hcnJheUxpa2VLZXlzJyksXG4gICAgYmFzZUtleXNJbiA9IHJlcXVpcmUoJy4vX2Jhc2VLZXlzSW4nKSxcbiAgICBpc0FycmF5TGlrZSA9IHJlcXVpcmUoJy4vaXNBcnJheUxpa2UnKTtcblxuLyoqXG4gKiBDcmVhdGVzIGFuIGFycmF5IG9mIHRoZSBvd24gYW5kIGluaGVyaXRlZCBlbnVtZXJhYmxlIHByb3BlcnR5IG5hbWVzIG9mIGBvYmplY3RgLlxuICpcbiAqICoqTm90ZToqKiBOb24tb2JqZWN0IHZhbHVlcyBhcmUgY29lcmNlZCB0byBvYmplY3RzLlxuICpcbiAqIEBzdGF0aWNcbiAqIEBtZW1iZXJPZiBfXG4gKiBAc2luY2UgMy4wLjBcbiAqIEBjYXRlZ29yeSBPYmplY3RcbiAqIEBwYXJhbSB7T2JqZWN0fSBvYmplY3QgVGhlIG9iamVjdCB0byBxdWVyeS5cbiAqIEByZXR1cm5zIHtBcnJheX0gUmV0dXJucyB0aGUgYXJyYXkgb2YgcHJvcGVydHkgbmFtZXMuXG4gKiBAZXhhbXBsZVxuICpcbiAqIGZ1bmN0aW9uIEZvbygpIHtcbiAqICAgdGhpcy5hID0gMTtcbiAqICAgdGhpcy5iID0gMjtcbiAqIH1cbiAqXG4gKiBGb28ucHJvdG90eXBlLmMgPSAzO1xuICpcbiAqIF8ua2V5c0luKG5ldyBGb28pO1xuICogLy8gPT4gWydhJywgJ2InLCAnYyddIChpdGVyYXRpb24gb3JkZXIgaXMgbm90IGd1YXJhbnRlZWQpXG4gKi9cbmZ1bmN0aW9uIGtleXNJbihvYmplY3QpIHtcbiAgcmV0dXJuIGlzQXJyYXlMaWtlKG9iamVjdCkgPyBhcnJheUxpa2VLZXlzKG9iamVjdCwgdHJ1ZSkgOiBiYXNlS2V5c0luKG9iamVjdCk7XG59XG5cbm1vZHVsZS5leHBvcnRzID0ga2V5c0luO1xuXG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9ub2RlX21vZHVsZXMvbG9kYXNoL2tleXNJbi5qc1xuLy8gbW9kdWxlIGlkID0gLi9ub2RlX21vZHVsZXMvbG9kYXNoL2tleXNJbi5qc1xuLy8gbW9kdWxlIGNodW5rcyA9IDEiLCIvKipcbiAqIEdldHMgdGhlIGxhc3QgZWxlbWVudCBvZiBgYXJyYXlgLlxuICpcbiAqIEBzdGF0aWNcbiAqIEBtZW1iZXJPZiBfXG4gKiBAc2luY2UgMC4xLjBcbiAqIEBjYXRlZ29yeSBBcnJheVxuICogQHBhcmFtIHtBcnJheX0gYXJyYXkgVGhlIGFycmF5IHRvIHF1ZXJ5LlxuICogQHJldHVybnMgeyp9IFJldHVybnMgdGhlIGxhc3QgZWxlbWVudCBvZiBgYXJyYXlgLlxuICogQGV4YW1wbGVcbiAqXG4gKiBfLmxhc3QoWzEsIDIsIDNdKTtcbiAqIC8vID0+IDNcbiAqL1xuZnVuY3Rpb24gbGFzdChhcnJheSkge1xuICB2YXIgbGVuZ3RoID0gYXJyYXkgPT0gbnVsbCA/IDAgOiBhcnJheS5sZW5ndGg7XG4gIHJldHVybiBsZW5ndGggPyBhcnJheVtsZW5ndGggLSAxXSA6IHVuZGVmaW5lZDtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBsYXN0O1xuXG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9ub2RlX21vZHVsZXMvbG9kYXNoL2xhc3QuanNcbi8vIG1vZHVsZSBpZCA9IC4vbm9kZV9tb2R1bGVzL2xvZGFzaC9sYXN0LmpzXG4vLyBtb2R1bGUgY2h1bmtzID0gMSIsInZhciBiYXNlRXh0cmVtdW0gPSByZXF1aXJlKCcuL19iYXNlRXh0cmVtdW0nKSxcbiAgICBiYXNlR3QgPSByZXF1aXJlKCcuL19iYXNlR3QnKSxcbiAgICBpZGVudGl0eSA9IHJlcXVpcmUoJy4vaWRlbnRpdHknKTtcblxuLyoqXG4gKiBDb21wdXRlcyB0aGUgbWF4aW11bSB2YWx1ZSBvZiBgYXJyYXlgLiBJZiBgYXJyYXlgIGlzIGVtcHR5IG9yIGZhbHNleSxcbiAqIGB1bmRlZmluZWRgIGlzIHJldHVybmVkLlxuICpcbiAqIEBzdGF0aWNcbiAqIEBzaW5jZSAwLjEuMFxuICogQG1lbWJlck9mIF9cbiAqIEBjYXRlZ29yeSBNYXRoXG4gKiBAcGFyYW0ge0FycmF5fSBhcnJheSBUaGUgYXJyYXkgdG8gaXRlcmF0ZSBvdmVyLlxuICogQHJldHVybnMgeyp9IFJldHVybnMgdGhlIG1heGltdW0gdmFsdWUuXG4gKiBAZXhhbXBsZVxuICpcbiAqIF8ubWF4KFs0LCAyLCA4LCA2XSk7XG4gKiAvLyA9PiA4XG4gKlxuICogXy5tYXgoW10pO1xuICogLy8gPT4gdW5kZWZpbmVkXG4gKi9cbmZ1bmN0aW9uIG1heChhcnJheSkge1xuICByZXR1cm4gKGFycmF5ICYmIGFycmF5Lmxlbmd0aClcbiAgICA/IGJhc2VFeHRyZW11bShhcnJheSwgaWRlbnRpdHksIGJhc2VHdClcbiAgICA6IHVuZGVmaW5lZDtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBtYXg7XG5cblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL25vZGVfbW9kdWxlcy9sb2Rhc2gvbWF4LmpzXG4vLyBtb2R1bGUgaWQgPSAuL25vZGVfbW9kdWxlcy9sb2Rhc2gvbWF4LmpzXG4vLyBtb2R1bGUgY2h1bmtzID0gMSIsInZhciBNYXBDYWNoZSA9IHJlcXVpcmUoJy4vX01hcENhY2hlJyk7XG5cbi8qKiBFcnJvciBtZXNzYWdlIGNvbnN0YW50cy4gKi9cbnZhciBGVU5DX0VSUk9SX1RFWFQgPSAnRXhwZWN0ZWQgYSBmdW5jdGlvbic7XG5cbi8qKlxuICogQ3JlYXRlcyBhIGZ1bmN0aW9uIHRoYXQgbWVtb2l6ZXMgdGhlIHJlc3VsdCBvZiBgZnVuY2AuIElmIGByZXNvbHZlcmAgaXNcbiAqIHByb3ZpZGVkLCBpdCBkZXRlcm1pbmVzIHRoZSBjYWNoZSBrZXkgZm9yIHN0b3JpbmcgdGhlIHJlc3VsdCBiYXNlZCBvbiB0aGVcbiAqIGFyZ3VtZW50cyBwcm92aWRlZCB0byB0aGUgbWVtb2l6ZWQgZnVuY3Rpb24uIEJ5IGRlZmF1bHQsIHRoZSBmaXJzdCBhcmd1bWVudFxuICogcHJvdmlkZWQgdG8gdGhlIG1lbW9pemVkIGZ1bmN0aW9uIGlzIHVzZWQgYXMgdGhlIG1hcCBjYWNoZSBrZXkuIFRoZSBgZnVuY2BcbiAqIGlzIGludm9rZWQgd2l0aCB0aGUgYHRoaXNgIGJpbmRpbmcgb2YgdGhlIG1lbW9pemVkIGZ1bmN0aW9uLlxuICpcbiAqICoqTm90ZToqKiBUaGUgY2FjaGUgaXMgZXhwb3NlZCBhcyB0aGUgYGNhY2hlYCBwcm9wZXJ0eSBvbiB0aGUgbWVtb2l6ZWRcbiAqIGZ1bmN0aW9uLiBJdHMgY3JlYXRpb24gbWF5IGJlIGN1c3RvbWl6ZWQgYnkgcmVwbGFjaW5nIHRoZSBgXy5tZW1vaXplLkNhY2hlYFxuICogY29uc3RydWN0b3Igd2l0aCBvbmUgd2hvc2UgaW5zdGFuY2VzIGltcGxlbWVudCB0aGVcbiAqIFtgTWFwYF0oaHR0cDovL2VjbWEtaW50ZXJuYXRpb25hbC5vcmcvZWNtYS0yNjIvNy4wLyNzZWMtcHJvcGVydGllcy1vZi10aGUtbWFwLXByb3RvdHlwZS1vYmplY3QpXG4gKiBtZXRob2QgaW50ZXJmYWNlIG9mIGBjbGVhcmAsIGBkZWxldGVgLCBgZ2V0YCwgYGhhc2AsIGFuZCBgc2V0YC5cbiAqXG4gKiBAc3RhdGljXG4gKiBAbWVtYmVyT2YgX1xuICogQHNpbmNlIDAuMS4wXG4gKiBAY2F0ZWdvcnkgRnVuY3Rpb25cbiAqIEBwYXJhbSB7RnVuY3Rpb259IGZ1bmMgVGhlIGZ1bmN0aW9uIHRvIGhhdmUgaXRzIG91dHB1dCBtZW1vaXplZC5cbiAqIEBwYXJhbSB7RnVuY3Rpb259IFtyZXNvbHZlcl0gVGhlIGZ1bmN0aW9uIHRvIHJlc29sdmUgdGhlIGNhY2hlIGtleS5cbiAqIEByZXR1cm5zIHtGdW5jdGlvbn0gUmV0dXJucyB0aGUgbmV3IG1lbW9pemVkIGZ1bmN0aW9uLlxuICogQGV4YW1wbGVcbiAqXG4gKiB2YXIgb2JqZWN0ID0geyAnYSc6IDEsICdiJzogMiB9O1xuICogdmFyIG90aGVyID0geyAnYyc6IDMsICdkJzogNCB9O1xuICpcbiAqIHZhciB2YWx1ZXMgPSBfLm1lbW9pemUoXy52YWx1ZXMpO1xuICogdmFsdWVzKG9iamVjdCk7XG4gKiAvLyA9PiBbMSwgMl1cbiAqXG4gKiB2YWx1ZXMob3RoZXIpO1xuICogLy8gPT4gWzMsIDRdXG4gKlxuICogb2JqZWN0LmEgPSAyO1xuICogdmFsdWVzKG9iamVjdCk7XG4gKiAvLyA9PiBbMSwgMl1cbiAqXG4gKiAvLyBNb2RpZnkgdGhlIHJlc3VsdCBjYWNoZS5cbiAqIHZhbHVlcy5jYWNoZS5zZXQob2JqZWN0LCBbJ2EnLCAnYiddKTtcbiAqIHZhbHVlcyhvYmplY3QpO1xuICogLy8gPT4gWydhJywgJ2InXVxuICpcbiAqIC8vIFJlcGxhY2UgYF8ubWVtb2l6ZS5DYWNoZWAuXG4gKiBfLm1lbW9pemUuQ2FjaGUgPSBXZWFrTWFwO1xuICovXG5mdW5jdGlvbiBtZW1vaXplKGZ1bmMsIHJlc29sdmVyKSB7XG4gIGlmICh0eXBlb2YgZnVuYyAhPSAnZnVuY3Rpb24nIHx8IChyZXNvbHZlciAhPSBudWxsICYmIHR5cGVvZiByZXNvbHZlciAhPSAnZnVuY3Rpb24nKSkge1xuICAgIHRocm93IG5ldyBUeXBlRXJyb3IoRlVOQ19FUlJPUl9URVhUKTtcbiAgfVxuICB2YXIgbWVtb2l6ZWQgPSBmdW5jdGlvbigpIHtcbiAgICB2YXIgYXJncyA9IGFyZ3VtZW50cyxcbiAgICAgICAga2V5ID0gcmVzb2x2ZXIgPyByZXNvbHZlci5hcHBseSh0aGlzLCBhcmdzKSA6IGFyZ3NbMF0sXG4gICAgICAgIGNhY2hlID0gbWVtb2l6ZWQuY2FjaGU7XG5cbiAgICBpZiAoY2FjaGUuaGFzKGtleSkpIHtcbiAgICAgIHJldHVybiBjYWNoZS5nZXQoa2V5KTtcbiAgICB9XG4gICAgdmFyIHJlc3VsdCA9IGZ1bmMuYXBwbHkodGhpcywgYXJncyk7XG4gICAgbWVtb2l6ZWQuY2FjaGUgPSBjYWNoZS5zZXQoa2V5LCByZXN1bHQpIHx8IGNhY2hlO1xuICAgIHJldHVybiByZXN1bHQ7XG4gIH07XG4gIG1lbW9pemVkLmNhY2hlID0gbmV3IChtZW1vaXplLkNhY2hlIHx8IE1hcENhY2hlKTtcbiAgcmV0dXJuIG1lbW9pemVkO1xufVxuXG4vLyBFeHBvc2UgYE1hcENhY2hlYC5cbm1lbW9pemUuQ2FjaGUgPSBNYXBDYWNoZTtcblxubW9kdWxlLmV4cG9ydHMgPSBtZW1vaXplO1xuXG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9ub2RlX21vZHVsZXMvbG9kYXNoL21lbW9pemUuanNcbi8vIG1vZHVsZSBpZCA9IC4vbm9kZV9tb2R1bGVzL2xvZGFzaC9tZW1vaXplLmpzXG4vLyBtb2R1bGUgY2h1bmtzID0gMSIsIi8qKlxuICogVGhpcyBtZXRob2QgcmV0dXJucyBgdW5kZWZpbmVkYC5cbiAqXG4gKiBAc3RhdGljXG4gKiBAbWVtYmVyT2YgX1xuICogQHNpbmNlIDIuMy4wXG4gKiBAY2F0ZWdvcnkgVXRpbFxuICogQGV4YW1wbGVcbiAqXG4gKiBfLnRpbWVzKDIsIF8ubm9vcCk7XG4gKiAvLyA9PiBbdW5kZWZpbmVkLCB1bmRlZmluZWRdXG4gKi9cbmZ1bmN0aW9uIG5vb3AoKSB7XG4gIC8vIE5vIG9wZXJhdGlvbiBwZXJmb3JtZWQuXG59XG5cbm1vZHVsZS5leHBvcnRzID0gbm9vcDtcblxuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vbm9kZV9tb2R1bGVzL2xvZGFzaC9ub29wLmpzXG4vLyBtb2R1bGUgaWQgPSAuL25vZGVfbW9kdWxlcy9sb2Rhc2gvbm9vcC5qc1xuLy8gbW9kdWxlIGNodW5rcyA9IDEiLCJ2YXIgYmFzZVByb3BlcnR5ID0gcmVxdWlyZSgnLi9fYmFzZVByb3BlcnR5JyksXG4gICAgYmFzZVByb3BlcnR5RGVlcCA9IHJlcXVpcmUoJy4vX2Jhc2VQcm9wZXJ0eURlZXAnKSxcbiAgICBpc0tleSA9IHJlcXVpcmUoJy4vX2lzS2V5JyksXG4gICAgdG9LZXkgPSByZXF1aXJlKCcuL190b0tleScpO1xuXG4vKipcbiAqIENyZWF0ZXMgYSBmdW5jdGlvbiB0aGF0IHJldHVybnMgdGhlIHZhbHVlIGF0IGBwYXRoYCBvZiBhIGdpdmVuIG9iamVjdC5cbiAqXG4gKiBAc3RhdGljXG4gKiBAbWVtYmVyT2YgX1xuICogQHNpbmNlIDIuNC4wXG4gKiBAY2F0ZWdvcnkgVXRpbFxuICogQHBhcmFtIHtBcnJheXxzdHJpbmd9IHBhdGggVGhlIHBhdGggb2YgdGhlIHByb3BlcnR5IHRvIGdldC5cbiAqIEByZXR1cm5zIHtGdW5jdGlvbn0gUmV0dXJucyB0aGUgbmV3IGFjY2Vzc29yIGZ1bmN0aW9uLlxuICogQGV4YW1wbGVcbiAqXG4gKiB2YXIgb2JqZWN0cyA9IFtcbiAqICAgeyAnYSc6IHsgJ2InOiAyIH0gfSxcbiAqICAgeyAnYSc6IHsgJ2InOiAxIH0gfVxuICogXTtcbiAqXG4gKiBfLm1hcChvYmplY3RzLCBfLnByb3BlcnR5KCdhLmInKSk7XG4gKiAvLyA9PiBbMiwgMV1cbiAqXG4gKiBfLm1hcChfLnNvcnRCeShvYmplY3RzLCBfLnByb3BlcnR5KFsnYScsICdiJ10pKSwgJ2EuYicpO1xuICogLy8gPT4gWzEsIDJdXG4gKi9cbmZ1bmN0aW9uIHByb3BlcnR5KHBhdGgpIHtcbiAgcmV0dXJuIGlzS2V5KHBhdGgpID8gYmFzZVByb3BlcnR5KHRvS2V5KHBhdGgpKSA6IGJhc2VQcm9wZXJ0eURlZXAocGF0aCk7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gcHJvcGVydHk7XG5cblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL25vZGVfbW9kdWxlcy9sb2Rhc2gvcHJvcGVydHkuanNcbi8vIG1vZHVsZSBpZCA9IC4vbm9kZV9tb2R1bGVzL2xvZGFzaC9wcm9wZXJ0eS5qc1xuLy8gbW9kdWxlIGNodW5rcyA9IDEiLCJ2YXIgYmFzZUZsYXR0ZW4gPSByZXF1aXJlKCcuL19iYXNlRmxhdHRlbicpLFxuICAgIGJhc2VPcmRlckJ5ID0gcmVxdWlyZSgnLi9fYmFzZU9yZGVyQnknKSxcbiAgICBiYXNlUmVzdCA9IHJlcXVpcmUoJy4vX2Jhc2VSZXN0JyksXG4gICAgaXNJdGVyYXRlZUNhbGwgPSByZXF1aXJlKCcuL19pc0l0ZXJhdGVlQ2FsbCcpO1xuXG4vKipcbiAqIENyZWF0ZXMgYW4gYXJyYXkgb2YgZWxlbWVudHMsIHNvcnRlZCBpbiBhc2NlbmRpbmcgb3JkZXIgYnkgdGhlIHJlc3VsdHMgb2ZcbiAqIHJ1bm5pbmcgZWFjaCBlbGVtZW50IGluIGEgY29sbGVjdGlvbiB0aHJ1IGVhY2ggaXRlcmF0ZWUuIFRoaXMgbWV0aG9kXG4gKiBwZXJmb3JtcyBhIHN0YWJsZSBzb3J0LCB0aGF0IGlzLCBpdCBwcmVzZXJ2ZXMgdGhlIG9yaWdpbmFsIHNvcnQgb3JkZXIgb2ZcbiAqIGVxdWFsIGVsZW1lbnRzLiBUaGUgaXRlcmF0ZWVzIGFyZSBpbnZva2VkIHdpdGggb25lIGFyZ3VtZW50OiAodmFsdWUpLlxuICpcbiAqIEBzdGF0aWNcbiAqIEBtZW1iZXJPZiBfXG4gKiBAc2luY2UgMC4xLjBcbiAqIEBjYXRlZ29yeSBDb2xsZWN0aW9uXG4gKiBAcGFyYW0ge0FycmF5fE9iamVjdH0gY29sbGVjdGlvbiBUaGUgY29sbGVjdGlvbiB0byBpdGVyYXRlIG92ZXIuXG4gKiBAcGFyYW0gey4uLihGdW5jdGlvbnxGdW5jdGlvbltdKX0gW2l0ZXJhdGVlcz1bXy5pZGVudGl0eV1dXG4gKiAgVGhlIGl0ZXJhdGVlcyB0byBzb3J0IGJ5LlxuICogQHJldHVybnMge0FycmF5fSBSZXR1cm5zIHRoZSBuZXcgc29ydGVkIGFycmF5LlxuICogQGV4YW1wbGVcbiAqXG4gKiB2YXIgdXNlcnMgPSBbXG4gKiAgIHsgJ3VzZXInOiAnZnJlZCcsICAgJ2FnZSc6IDQ4IH0sXG4gKiAgIHsgJ3VzZXInOiAnYmFybmV5JywgJ2FnZSc6IDM2IH0sXG4gKiAgIHsgJ3VzZXInOiAnZnJlZCcsICAgJ2FnZSc6IDQwIH0sXG4gKiAgIHsgJ3VzZXInOiAnYmFybmV5JywgJ2FnZSc6IDM0IH1cbiAqIF07XG4gKlxuICogXy5zb3J0QnkodXNlcnMsIFtmdW5jdGlvbihvKSB7IHJldHVybiBvLnVzZXI7IH1dKTtcbiAqIC8vID0+IG9iamVjdHMgZm9yIFtbJ2Jhcm5leScsIDM2XSwgWydiYXJuZXknLCAzNF0sIFsnZnJlZCcsIDQ4XSwgWydmcmVkJywgNDBdXVxuICpcbiAqIF8uc29ydEJ5KHVzZXJzLCBbJ3VzZXInLCAnYWdlJ10pO1xuICogLy8gPT4gb2JqZWN0cyBmb3IgW1snYmFybmV5JywgMzRdLCBbJ2Jhcm5leScsIDM2XSwgWydmcmVkJywgNDBdLCBbJ2ZyZWQnLCA0OF1dXG4gKi9cbnZhciBzb3J0QnkgPSBiYXNlUmVzdChmdW5jdGlvbihjb2xsZWN0aW9uLCBpdGVyYXRlZXMpIHtcbiAgaWYgKGNvbGxlY3Rpb24gPT0gbnVsbCkge1xuICAgIHJldHVybiBbXTtcbiAgfVxuICB2YXIgbGVuZ3RoID0gaXRlcmF0ZWVzLmxlbmd0aDtcbiAgaWYgKGxlbmd0aCA+IDEgJiYgaXNJdGVyYXRlZUNhbGwoY29sbGVjdGlvbiwgaXRlcmF0ZWVzWzBdLCBpdGVyYXRlZXNbMV0pKSB7XG4gICAgaXRlcmF0ZWVzID0gW107XG4gIH0gZWxzZSBpZiAobGVuZ3RoID4gMiAmJiBpc0l0ZXJhdGVlQ2FsbChpdGVyYXRlZXNbMF0sIGl0ZXJhdGVlc1sxXSwgaXRlcmF0ZWVzWzJdKSkge1xuICAgIGl0ZXJhdGVlcyA9IFtpdGVyYXRlZXNbMF1dO1xuICB9XG4gIHJldHVybiBiYXNlT3JkZXJCeShjb2xsZWN0aW9uLCBiYXNlRmxhdHRlbihpdGVyYXRlZXMsIDEpLCBbXSk7XG59KTtcblxubW9kdWxlLmV4cG9ydHMgPSBzb3J0Qnk7XG5cblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL25vZGVfbW9kdWxlcy9sb2Rhc2gvc29ydEJ5LmpzXG4vLyBtb2R1bGUgaWQgPSAuL25vZGVfbW9kdWxlcy9sb2Rhc2gvc29ydEJ5LmpzXG4vLyBtb2R1bGUgY2h1bmtzID0gMSIsIi8qKlxuICogVGhpcyBtZXRob2QgcmV0dXJucyBhIG5ldyBlbXB0eSBhcnJheS5cbiAqXG4gKiBAc3RhdGljXG4gKiBAbWVtYmVyT2YgX1xuICogQHNpbmNlIDQuMTMuMFxuICogQGNhdGVnb3J5IFV0aWxcbiAqIEByZXR1cm5zIHtBcnJheX0gUmV0dXJucyB0aGUgbmV3IGVtcHR5IGFycmF5LlxuICogQGV4YW1wbGVcbiAqXG4gKiB2YXIgYXJyYXlzID0gXy50aW1lcygyLCBfLnN0dWJBcnJheSk7XG4gKlxuICogY29uc29sZS5sb2coYXJyYXlzKTtcbiAqIC8vID0+IFtbXSwgW11dXG4gKlxuICogY29uc29sZS5sb2coYXJyYXlzWzBdID09PSBhcnJheXNbMV0pO1xuICogLy8gPT4gZmFsc2VcbiAqL1xuZnVuY3Rpb24gc3R1YkFycmF5KCkge1xuICByZXR1cm4gW107XG59XG5cbm1vZHVsZS5leHBvcnRzID0gc3R1YkFycmF5O1xuXG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9ub2RlX21vZHVsZXMvbG9kYXNoL3N0dWJBcnJheS5qc1xuLy8gbW9kdWxlIGlkID0gLi9ub2RlX21vZHVsZXMvbG9kYXNoL3N0dWJBcnJheS5qc1xuLy8gbW9kdWxlIGNodW5rcyA9IDEiLCIvKipcbiAqIFRoaXMgbWV0aG9kIHJldHVybnMgYGZhbHNlYC5cbiAqXG4gKiBAc3RhdGljXG4gKiBAbWVtYmVyT2YgX1xuICogQHNpbmNlIDQuMTMuMFxuICogQGNhdGVnb3J5IFV0aWxcbiAqIEByZXR1cm5zIHtib29sZWFufSBSZXR1cm5zIGBmYWxzZWAuXG4gKiBAZXhhbXBsZVxuICpcbiAqIF8udGltZXMoMiwgXy5zdHViRmFsc2UpO1xuICogLy8gPT4gW2ZhbHNlLCBmYWxzZV1cbiAqL1xuZnVuY3Rpb24gc3R1YkZhbHNlKCkge1xuICByZXR1cm4gZmFsc2U7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gc3R1YkZhbHNlO1xuXG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9ub2RlX21vZHVsZXMvbG9kYXNoL3N0dWJGYWxzZS5qc1xuLy8gbW9kdWxlIGlkID0gLi9ub2RlX21vZHVsZXMvbG9kYXNoL3N0dWJGYWxzZS5qc1xuLy8gbW9kdWxlIGNodW5rcyA9IDEiLCJ2YXIgaXNPYmplY3QgPSByZXF1aXJlKCcuL2lzT2JqZWN0JyksXG4gICAgaXNTeW1ib2wgPSByZXF1aXJlKCcuL2lzU3ltYm9sJyk7XG5cbi8qKiBVc2VkIGFzIHJlZmVyZW5jZXMgZm9yIHZhcmlvdXMgYE51bWJlcmAgY29uc3RhbnRzLiAqL1xudmFyIE5BTiA9IDAgLyAwO1xuXG4vKiogVXNlZCB0byBtYXRjaCBsZWFkaW5nIGFuZCB0cmFpbGluZyB3aGl0ZXNwYWNlLiAqL1xudmFyIHJlVHJpbSA9IC9eXFxzK3xcXHMrJC9nO1xuXG4vKiogVXNlZCB0byBkZXRlY3QgYmFkIHNpZ25lZCBoZXhhZGVjaW1hbCBzdHJpbmcgdmFsdWVzLiAqL1xudmFyIHJlSXNCYWRIZXggPSAvXlstK10weFswLTlhLWZdKyQvaTtcblxuLyoqIFVzZWQgdG8gZGV0ZWN0IGJpbmFyeSBzdHJpbmcgdmFsdWVzLiAqL1xudmFyIHJlSXNCaW5hcnkgPSAvXjBiWzAxXSskL2k7XG5cbi8qKiBVc2VkIHRvIGRldGVjdCBvY3RhbCBzdHJpbmcgdmFsdWVzLiAqL1xudmFyIHJlSXNPY3RhbCA9IC9eMG9bMC03XSskL2k7XG5cbi8qKiBCdWlsdC1pbiBtZXRob2QgcmVmZXJlbmNlcyB3aXRob3V0IGEgZGVwZW5kZW5jeSBvbiBgcm9vdGAuICovXG52YXIgZnJlZVBhcnNlSW50ID0gcGFyc2VJbnQ7XG5cbi8qKlxuICogQ29udmVydHMgYHZhbHVlYCB0byBhIG51bWJlci5cbiAqXG4gKiBAc3RhdGljXG4gKiBAbWVtYmVyT2YgX1xuICogQHNpbmNlIDQuMC4wXG4gKiBAY2F0ZWdvcnkgTGFuZ1xuICogQHBhcmFtIHsqfSB2YWx1ZSBUaGUgdmFsdWUgdG8gcHJvY2Vzcy5cbiAqIEByZXR1cm5zIHtudW1iZXJ9IFJldHVybnMgdGhlIG51bWJlci5cbiAqIEBleGFtcGxlXG4gKlxuICogXy50b051bWJlcigzLjIpO1xuICogLy8gPT4gMy4yXG4gKlxuICogXy50b051bWJlcihOdW1iZXIuTUlOX1ZBTFVFKTtcbiAqIC8vID0+IDVlLTMyNFxuICpcbiAqIF8udG9OdW1iZXIoSW5maW5pdHkpO1xuICogLy8gPT4gSW5maW5pdHlcbiAqXG4gKiBfLnRvTnVtYmVyKCczLjInKTtcbiAqIC8vID0+IDMuMlxuICovXG5mdW5jdGlvbiB0b051bWJlcih2YWx1ZSkge1xuICBpZiAodHlwZW9mIHZhbHVlID09ICdudW1iZXInKSB7XG4gICAgcmV0dXJuIHZhbHVlO1xuICB9XG4gIGlmIChpc1N5bWJvbCh2YWx1ZSkpIHtcbiAgICByZXR1cm4gTkFOO1xuICB9XG4gIGlmIChpc09iamVjdCh2YWx1ZSkpIHtcbiAgICB2YXIgb3RoZXIgPSB0eXBlb2YgdmFsdWUudmFsdWVPZiA9PSAnZnVuY3Rpb24nID8gdmFsdWUudmFsdWVPZigpIDogdmFsdWU7XG4gICAgdmFsdWUgPSBpc09iamVjdChvdGhlcikgPyAob3RoZXIgKyAnJykgOiBvdGhlcjtcbiAgfVxuICBpZiAodHlwZW9mIHZhbHVlICE9ICdzdHJpbmcnKSB7XG4gICAgcmV0dXJuIHZhbHVlID09PSAwID8gdmFsdWUgOiArdmFsdWU7XG4gIH1cbiAgdmFsdWUgPSB2YWx1ZS5yZXBsYWNlKHJlVHJpbSwgJycpO1xuICB2YXIgaXNCaW5hcnkgPSByZUlzQmluYXJ5LnRlc3QodmFsdWUpO1xuICByZXR1cm4gKGlzQmluYXJ5IHx8IHJlSXNPY3RhbC50ZXN0KHZhbHVlKSlcbiAgICA/IGZyZWVQYXJzZUludCh2YWx1ZS5zbGljZSgyKSwgaXNCaW5hcnkgPyAyIDogOClcbiAgICA6IChyZUlzQmFkSGV4LnRlc3QodmFsdWUpID8gTkFOIDogK3ZhbHVlKTtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSB0b051bWJlcjtcblxuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vbm9kZV9tb2R1bGVzL2xvZGFzaC90b051bWJlci5qc1xuLy8gbW9kdWxlIGlkID0gLi9ub2RlX21vZHVsZXMvbG9kYXNoL3RvTnVtYmVyLmpzXG4vLyBtb2R1bGUgY2h1bmtzID0gMSIsInZhciBiYXNlVG9TdHJpbmcgPSByZXF1aXJlKCcuL19iYXNlVG9TdHJpbmcnKTtcblxuLyoqXG4gKiBDb252ZXJ0cyBgdmFsdWVgIHRvIGEgc3RyaW5nLiBBbiBlbXB0eSBzdHJpbmcgaXMgcmV0dXJuZWQgZm9yIGBudWxsYFxuICogYW5kIGB1bmRlZmluZWRgIHZhbHVlcy4gVGhlIHNpZ24gb2YgYC0wYCBpcyBwcmVzZXJ2ZWQuXG4gKlxuICogQHN0YXRpY1xuICogQG1lbWJlck9mIF9cbiAqIEBzaW5jZSA0LjAuMFxuICogQGNhdGVnb3J5IExhbmdcbiAqIEBwYXJhbSB7Kn0gdmFsdWUgVGhlIHZhbHVlIHRvIGNvbnZlcnQuXG4gKiBAcmV0dXJucyB7c3RyaW5nfSBSZXR1cm5zIHRoZSBjb252ZXJ0ZWQgc3RyaW5nLlxuICogQGV4YW1wbGVcbiAqXG4gKiBfLnRvU3RyaW5nKG51bGwpO1xuICogLy8gPT4gJydcbiAqXG4gKiBfLnRvU3RyaW5nKC0wKTtcbiAqIC8vID0+ICctMCdcbiAqXG4gKiBfLnRvU3RyaW5nKFsxLCAyLCAzXSk7XG4gKiAvLyA9PiAnMSwyLDMnXG4gKi9cbmZ1bmN0aW9uIHRvU3RyaW5nKHZhbHVlKSB7XG4gIHJldHVybiB2YWx1ZSA9PSBudWxsID8gJycgOiBiYXNlVG9TdHJpbmcodmFsdWUpO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IHRvU3RyaW5nO1xuXG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9ub2RlX21vZHVsZXMvbG9kYXNoL3RvU3RyaW5nLmpzXG4vLyBtb2R1bGUgaWQgPSAuL25vZGVfbW9kdWxlcy9sb2Rhc2gvdG9TdHJpbmcuanNcbi8vIG1vZHVsZSBjaHVua3MgPSAxIiwidmFyIGJhc2VGbGF0dGVuID0gcmVxdWlyZSgnLi9fYmFzZUZsYXR0ZW4nKSxcbiAgICBiYXNlSXRlcmF0ZWUgPSByZXF1aXJlKCcuL19iYXNlSXRlcmF0ZWUnKSxcbiAgICBiYXNlUmVzdCA9IHJlcXVpcmUoJy4vX2Jhc2VSZXN0JyksXG4gICAgYmFzZVVuaXEgPSByZXF1aXJlKCcuL19iYXNlVW5pcScpLFxuICAgIGlzQXJyYXlMaWtlT2JqZWN0ID0gcmVxdWlyZSgnLi9pc0FycmF5TGlrZU9iamVjdCcpLFxuICAgIGxhc3QgPSByZXF1aXJlKCcuL2xhc3QnKTtcblxuLyoqXG4gKiBUaGlzIG1ldGhvZCBpcyBsaWtlIGBfLnVuaW9uYCBleGNlcHQgdGhhdCBpdCBhY2NlcHRzIGBpdGVyYXRlZWAgd2hpY2ggaXNcbiAqIGludm9rZWQgZm9yIGVhY2ggZWxlbWVudCBvZiBlYWNoIGBhcnJheXNgIHRvIGdlbmVyYXRlIHRoZSBjcml0ZXJpb24gYnlcbiAqIHdoaWNoIHVuaXF1ZW5lc3MgaXMgY29tcHV0ZWQuIFJlc3VsdCB2YWx1ZXMgYXJlIGNob3NlbiBmcm9tIHRoZSBmaXJzdFxuICogYXJyYXkgaW4gd2hpY2ggdGhlIHZhbHVlIG9jY3Vycy4gVGhlIGl0ZXJhdGVlIGlzIGludm9rZWQgd2l0aCBvbmUgYXJndW1lbnQ6XG4gKiAodmFsdWUpLlxuICpcbiAqIEBzdGF0aWNcbiAqIEBtZW1iZXJPZiBfXG4gKiBAc2luY2UgNC4wLjBcbiAqIEBjYXRlZ29yeSBBcnJheVxuICogQHBhcmFtIHsuLi5BcnJheX0gW2FycmF5c10gVGhlIGFycmF5cyB0byBpbnNwZWN0LlxuICogQHBhcmFtIHtGdW5jdGlvbn0gW2l0ZXJhdGVlPV8uaWRlbnRpdHldIFRoZSBpdGVyYXRlZSBpbnZva2VkIHBlciBlbGVtZW50LlxuICogQHJldHVybnMge0FycmF5fSBSZXR1cm5zIHRoZSBuZXcgYXJyYXkgb2YgY29tYmluZWQgdmFsdWVzLlxuICogQGV4YW1wbGVcbiAqXG4gKiBfLnVuaW9uQnkoWzIuMV0sIFsxLjIsIDIuM10sIE1hdGguZmxvb3IpO1xuICogLy8gPT4gWzIuMSwgMS4yXVxuICpcbiAqIC8vIFRoZSBgXy5wcm9wZXJ0eWAgaXRlcmF0ZWUgc2hvcnRoYW5kLlxuICogXy51bmlvbkJ5KFt7ICd4JzogMSB9XSwgW3sgJ3gnOiAyIH0sIHsgJ3gnOiAxIH1dLCAneCcpO1xuICogLy8gPT4gW3sgJ3gnOiAxIH0sIHsgJ3gnOiAyIH1dXG4gKi9cbnZhciB1bmlvbkJ5ID0gYmFzZVJlc3QoZnVuY3Rpb24oYXJyYXlzKSB7XG4gIHZhciBpdGVyYXRlZSA9IGxhc3QoYXJyYXlzKTtcbiAgaWYgKGlzQXJyYXlMaWtlT2JqZWN0KGl0ZXJhdGVlKSkge1xuICAgIGl0ZXJhdGVlID0gdW5kZWZpbmVkO1xuICB9XG4gIHJldHVybiBiYXNlVW5pcShiYXNlRmxhdHRlbihhcnJheXMsIDEsIGlzQXJyYXlMaWtlT2JqZWN0LCB0cnVlKSwgYmFzZUl0ZXJhdGVlKGl0ZXJhdGVlLCAyKSk7XG59KTtcblxubW9kdWxlLmV4cG9ydHMgPSB1bmlvbkJ5O1xuXG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9ub2RlX21vZHVsZXMvbG9kYXNoL3VuaW9uQnkuanNcbi8vIG1vZHVsZSBpZCA9IC4vbm9kZV9tb2R1bGVzL2xvZGFzaC91bmlvbkJ5LmpzXG4vLyBtb2R1bGUgY2h1bmtzID0gMSIsInZhciBiYXNlSXRlcmF0ZWUgPSByZXF1aXJlKCcuL19iYXNlSXRlcmF0ZWUnKSxcbiAgICBiYXNlVW5pcSA9IHJlcXVpcmUoJy4vX2Jhc2VVbmlxJyk7XG5cbi8qKlxuICogVGhpcyBtZXRob2QgaXMgbGlrZSBgXy51bmlxYCBleGNlcHQgdGhhdCBpdCBhY2NlcHRzIGBpdGVyYXRlZWAgd2hpY2ggaXNcbiAqIGludm9rZWQgZm9yIGVhY2ggZWxlbWVudCBpbiBgYXJyYXlgIHRvIGdlbmVyYXRlIHRoZSBjcml0ZXJpb24gYnkgd2hpY2hcbiAqIHVuaXF1ZW5lc3MgaXMgY29tcHV0ZWQuIFRoZSBvcmRlciBvZiByZXN1bHQgdmFsdWVzIGlzIGRldGVybWluZWQgYnkgdGhlXG4gKiBvcmRlciB0aGV5IG9jY3VyIGluIHRoZSBhcnJheS4gVGhlIGl0ZXJhdGVlIGlzIGludm9rZWQgd2l0aCBvbmUgYXJndW1lbnQ6XG4gKiAodmFsdWUpLlxuICpcbiAqIEBzdGF0aWNcbiAqIEBtZW1iZXJPZiBfXG4gKiBAc2luY2UgNC4wLjBcbiAqIEBjYXRlZ29yeSBBcnJheVxuICogQHBhcmFtIHtBcnJheX0gYXJyYXkgVGhlIGFycmF5IHRvIGluc3BlY3QuXG4gKiBAcGFyYW0ge0Z1bmN0aW9ufSBbaXRlcmF0ZWU9Xy5pZGVudGl0eV0gVGhlIGl0ZXJhdGVlIGludm9rZWQgcGVyIGVsZW1lbnQuXG4gKiBAcmV0dXJucyB7QXJyYXl9IFJldHVybnMgdGhlIG5ldyBkdXBsaWNhdGUgZnJlZSBhcnJheS5cbiAqIEBleGFtcGxlXG4gKlxuICogXy51bmlxQnkoWzIuMSwgMS4yLCAyLjNdLCBNYXRoLmZsb29yKTtcbiAqIC8vID0+IFsyLjEsIDEuMl1cbiAqXG4gKiAvLyBUaGUgYF8ucHJvcGVydHlgIGl0ZXJhdGVlIHNob3J0aGFuZC5cbiAqIF8udW5pcUJ5KFt7ICd4JzogMSB9LCB7ICd4JzogMiB9LCB7ICd4JzogMSB9XSwgJ3gnKTtcbiAqIC8vID0+IFt7ICd4JzogMSB9LCB7ICd4JzogMiB9XVxuICovXG5mdW5jdGlvbiB1bmlxQnkoYXJyYXksIGl0ZXJhdGVlKSB7XG4gIHJldHVybiAoYXJyYXkgJiYgYXJyYXkubGVuZ3RoKSA/IGJhc2VVbmlxKGFycmF5LCBiYXNlSXRlcmF0ZWUoaXRlcmF0ZWUsIDIpKSA6IFtdO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IHVuaXFCeTtcblxuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vbm9kZV9tb2R1bGVzL2xvZGFzaC91bmlxQnkuanNcbi8vIG1vZHVsZSBpZCA9IC4vbm9kZV9tb2R1bGVzL2xvZGFzaC91bmlxQnkuanNcbi8vIG1vZHVsZSBjaHVua3MgPSAxIiwiLy8gcmVtb3ZlZCBieSBleHRyYWN0LXRleHQtd2VicGFjay1wbHVnaW5cblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL25vZGVfbW9kdWxlcy9yZWFjdC1kYXRlcGlja2VyL2Rpc3QvcmVhY3QtZGF0ZXBpY2tlci5jc3Ncbi8vIG1vZHVsZSBpZCA9IC4vbm9kZV9tb2R1bGVzL3JlYWN0LWRhdGVwaWNrZXIvZGlzdC9yZWFjdC1kYXRlcGlja2VyLmNzc1xuLy8gbW9kdWxlIGNodW5rcyA9IDEiLCIvLyByZW1vdmVkIGJ5IGV4dHJhY3QtdGV4dC13ZWJwYWNrLXBsdWdpblxuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vbm9kZV9tb2R1bGVzL3JlYWN0LXRhYmxlL3JlYWN0LXRhYmxlLmNzc1xuLy8gbW9kdWxlIGlkID0gLi9ub2RlX21vZHVsZXMvcmVhY3QtdGFibGUvcmVhY3QtdGFibGUuY3NzXG4vLyBtb2R1bGUgY2h1bmtzID0gMSIsIi8vIHJlbW92ZWQgYnkgZXh0cmFjdC10ZXh0LXdlYnBhY2stcGx1Z2luXG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9ub2RlX21vZHVsZXMvcmVhY3QtdGFnc2lucHV0L3JlYWN0LXRhZ3NpbnB1dC5jc3Ncbi8vIG1vZHVsZSBpZCA9IC4vbm9kZV9tb2R1bGVzL3JlYWN0LXRhZ3NpbnB1dC9yZWFjdC10YWdzaW5wdXQuY3NzXG4vLyBtb2R1bGUgY2h1bmtzID0gMSIsIi8vIHJlbW92ZWQgYnkgZXh0cmFjdC10ZXh0LXdlYnBhY2stcGx1Z2luXG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9ub2RlX21vZHVsZXMvcmVhY3QtdG9nZ2xlL3N0eWxlLmNzc1xuLy8gbW9kdWxlIGlkID0gLi9ub2RlX21vZHVsZXMvcmVhY3QtdG9nZ2xlL3N0eWxlLmNzc1xuLy8gbW9kdWxlIGNodW5rcyA9IDEiLCJleHBvcnQgY29uc3QgbGFuZ3VhZ2VzID0ge1xuICAgIFwiYWJcIjp7XG4gICAgICAgIFwibmFtZVwiOlwiQWJraGF6XCIsXG4gICAgICAgIFwibmF0aXZlTmFtZVwiOlwi0LDSp9GB0YPQsFwiXG4gICAgfSxcbiAgICBcImFhXCI6e1xuICAgICAgICBcIm5hbWVcIjpcIkFmYXJcIixcbiAgICAgICAgXCJuYXRpdmVOYW1lXCI6XCJBZmFyYWZcIlxuICAgIH0sXG4gICAgXCJhZlwiOntcbiAgICAgICAgXCJuYW1lXCI6XCJBZnJpa2FhbnNcIixcbiAgICAgICAgXCJuYXRpdmVOYW1lXCI6XCJBZnJpa2FhbnNcIlxuICAgIH0sXG4gICAgXCJha1wiOntcbiAgICAgICAgXCJuYW1lXCI6XCJBa2FuXCIsXG4gICAgICAgIFwibmF0aXZlTmFtZVwiOlwiQWthblwiXG4gICAgfSxcbiAgICBcInNxXCI6e1xuICAgICAgICBcIm5hbWVcIjpcIkFsYmFuaWFuXCIsXG4gICAgICAgIFwibmF0aXZlTmFtZVwiOlwiU2hxaXBcIlxuICAgIH0sXG4gICAgXCJhbVwiOntcbiAgICAgICAgXCJuYW1lXCI6XCJBbWhhcmljXCIsXG4gICAgICAgIFwibmF0aXZlTmFtZVwiOlwi4Yqg4Yib4Yit4YqbXCJcbiAgICB9LFxuICAgIFwiYXJcIjp7XG4gICAgICAgIFwibmFtZVwiOlwiQXJhYmljXCIsXG4gICAgICAgIFwibmF0aXZlTmFtZVwiOlwi2KfZhNi52LHYqNmK2KlcIlxuICAgIH0sXG4gICAgXCJhblwiOntcbiAgICAgICAgXCJuYW1lXCI6XCJBcmFnb25lc2VcIixcbiAgICAgICAgXCJuYXRpdmVOYW1lXCI6XCJBcmFnb27DqXNcIlxuICAgIH0sXG4gICAgXCJoeVwiOntcbiAgICAgICAgXCJuYW1lXCI6XCJBcm1lbmlhblwiLFxuICAgICAgICBcIm5hdGl2ZU5hbWVcIjpcItWA1aHVtdWl1oDVpdW2XCJcbiAgICB9LFxuICAgIFwiYXNcIjp7XG4gICAgICAgIFwibmFtZVwiOlwiQXNzYW1lc2VcIixcbiAgICAgICAgXCJuYXRpdmVOYW1lXCI6XCLgpoXgprjgpq7gp4Dgpq/gprzgpr5cIlxuICAgIH0sXG4gICAgXCJhdlwiOntcbiAgICAgICAgXCJuYW1lXCI6XCJBdmFyaWNcIixcbiAgICAgICAgXCJuYXRpdmVOYW1lXCI6XCLQsNCy0LDRgCDQvNCw0YbTgCwg0LzQsNCz04DQsNGA0YPQuyDQvNCw0YbTgFwiXG4gICAgfSxcbiAgICBcImFlXCI6e1xuICAgICAgICBcIm5hbWVcIjpcIkF2ZXN0YW5cIixcbiAgICAgICAgXCJuYXRpdmVOYW1lXCI6XCJhdmVzdGFcIlxuICAgIH0sXG4gICAgXCJheVwiOntcbiAgICAgICAgXCJuYW1lXCI6XCJBeW1hcmFcIixcbiAgICAgICAgXCJuYXRpdmVOYW1lXCI6XCJheW1hciBhcnVcIlxuICAgIH0sXG4gICAgXCJhelwiOntcbiAgICAgICAgXCJuYW1lXCI6XCJBemVyYmFpamFuaVwiLFxuICAgICAgICBcIm5hdGl2ZU5hbWVcIjpcImF6yZlyYmF5Y2FuIGRpbGlcIlxuICAgIH0sXG4gICAgXCJibVwiOntcbiAgICAgICAgXCJuYW1lXCI6XCJCYW1iYXJhXCIsXG4gICAgICAgIFwibmF0aXZlTmFtZVwiOlwiYmFtYW5hbmthblwiXG4gICAgfSxcbiAgICBcImJhXCI6e1xuICAgICAgICBcIm5hbWVcIjpcIkJhc2hraXJcIixcbiAgICAgICAgXCJuYXRpdmVOYW1lXCI6XCLQsdCw0YjSodC+0YDRgiDRgtC10LvQtVwiXG4gICAgfSxcbiAgICBcImV1XCI6e1xuICAgICAgICBcIm5hbWVcIjpcIkJhc3F1ZVwiLFxuICAgICAgICBcIm5hdGl2ZU5hbWVcIjpcImV1c2thcmEsIGV1c2tlcmFcIlxuICAgIH0sXG4gICAgXCJiZVwiOntcbiAgICAgICAgXCJuYW1lXCI6XCJCZWxhcnVzaWFuXCIsXG4gICAgICAgIFwibmF0aXZlTmFtZVwiOlwi0JHQtdC70LDRgNGD0YHQutCw0Y9cIlxuICAgIH0sXG4gICAgXCJiblwiOntcbiAgICAgICAgXCJuYW1lXCI6XCJCZW5nYWxpXCIsXG4gICAgICAgIFwibmF0aXZlTmFtZVwiOlwi4Kas4Ka+4KaC4Kay4Ka+XCJcbiAgICB9LFxuICAgIFwiYmhcIjp7XG4gICAgICAgIFwibmFtZVwiOlwiQmloYXJpXCIsXG4gICAgICAgIFwibmF0aXZlTmFtZVwiOlwi4KSt4KWL4KSc4KSq4KWB4KSw4KWAXCJcbiAgICB9LFxuICAgIFwiYmlcIjp7XG4gICAgICAgIFwibmFtZVwiOlwiQmlzbGFtYVwiLFxuICAgICAgICBcIm5hdGl2ZU5hbWVcIjpcIkJpc2xhbWFcIlxuICAgIH0sXG4gICAgXCJic1wiOntcbiAgICAgICAgXCJuYW1lXCI6XCJCb3NuaWFuXCIsXG4gICAgICAgIFwibmF0aXZlTmFtZVwiOlwiYm9zYW5za2kgamV6aWtcIlxuICAgIH0sXG4gICAgXCJiclwiOntcbiAgICAgICAgXCJuYW1lXCI6XCJCcmV0b25cIixcbiAgICAgICAgXCJuYXRpdmVOYW1lXCI6XCJicmV6aG9uZWdcIlxuICAgIH0sXG4gICAgXCJiZ1wiOntcbiAgICAgICAgXCJuYW1lXCI6XCJCdWxnYXJpYW5cIixcbiAgICAgICAgXCJuYXRpdmVOYW1lXCI6XCLQsdGK0LvQs9Cw0YDRgdC60Lgg0LXQt9C40LpcIlxuICAgIH0sXG4gICAgXCJteVwiOntcbiAgICAgICAgXCJuYW1lXCI6XCJCdXJtZXNlXCIsXG4gICAgICAgIFwibmF0aXZlTmFtZVwiOlwi4YCX4YCZ4YCs4YCF4YCsXCJcbiAgICB9LFxuICAgIFwiY2FcIjp7XG4gICAgICAgIFwibmFtZVwiOlwiQ2F0YWxhbjsgVmFsZW5jaWFuXCIsXG4gICAgICAgIFwibmF0aXZlTmFtZVwiOlwiQ2F0YWzDoFwiXG4gICAgfSxcbiAgICBcImNoXCI6e1xuICAgICAgICBcIm5hbWVcIjpcIkNoYW1vcnJvXCIsXG4gICAgICAgIFwibmF0aXZlTmFtZVwiOlwiQ2hhbW9ydVwiXG4gICAgfSxcbiAgICBcImNlXCI6e1xuICAgICAgICBcIm5hbWVcIjpcIkNoZWNoZW5cIixcbiAgICAgICAgXCJuYXRpdmVOYW1lXCI6XCLQvdC+0YXRh9C40LnQvSDQvNC+0YLRglwiXG4gICAgfSxcbiAgICBcIm55XCI6e1xuICAgICAgICBcIm5hbWVcIjpcIkNoaWNoZXdhOyBDaGV3YTsgTnlhbmphXCIsXG4gICAgICAgIFwibmF0aXZlTmFtZVwiOlwiY2hpQ2hlxbVhLCBjaGlueWFuamFcIlxuICAgIH0sXG4gICAgXCJ6aFwiOntcbiAgICAgICAgXCJuYW1lXCI6XCJDaGluZXNlXCIsXG4gICAgICAgIFwibmF0aXZlTmFtZVwiOlwi5Lit5paHIChaaMWNbmd3w6luKSwg5rGJ6K+tLCDmvKLoqp5cIlxuICAgIH0sXG4gICAgXCJjdlwiOntcbiAgICAgICAgXCJuYW1lXCI6XCJDaHV2YXNoXCIsXG4gICAgICAgIFwibmF0aXZlTmFtZVwiOlwi0YfTkdCy0LDRiCDRh9OX0LvRhdC4XCJcbiAgICB9LFxuICAgIFwia3dcIjp7XG4gICAgICAgIFwibmFtZVwiOlwiQ29ybmlzaFwiLFxuICAgICAgICBcIm5hdGl2ZU5hbWVcIjpcIktlcm5ld2VrXCJcbiAgICB9LFxuICAgIFwiY29cIjp7XG4gICAgICAgIFwibmFtZVwiOlwiQ29yc2ljYW5cIixcbiAgICAgICAgXCJuYXRpdmVOYW1lXCI6XCJjb3JzdSwgbGluZ3VhIGNvcnNhXCJcbiAgICB9LFxuICAgIFwiY3JcIjp7XG4gICAgICAgIFwibmFtZVwiOlwiQ3JlZVwiLFxuICAgICAgICBcIm5hdGl2ZU5hbWVcIjpcIuGTgOGQpuGQg+GUreGQjeGQj+GQo1wiXG4gICAgfSxcbiAgICBcImhyXCI6e1xuICAgICAgICBcIm5hbWVcIjpcIkNyb2F0aWFuXCIsXG4gICAgICAgIFwibmF0aXZlTmFtZVwiOlwiaHJ2YXRza2lcIlxuICAgIH0sXG4gICAgXCJjc1wiOntcbiAgICAgICAgXCJuYW1lXCI6XCJDemVjaFwiLFxuICAgICAgICBcIm5hdGl2ZU5hbWVcIjpcIsSNZXNreSwgxI1lxaF0aW5hXCJcbiAgICB9LFxuICAgIFwiZGFcIjp7XG4gICAgICAgIFwibmFtZVwiOlwiRGFuaXNoXCIsXG4gICAgICAgIFwibmF0aXZlTmFtZVwiOlwiZGFuc2tcIlxuICAgIH0sXG4gICAgXCJkdlwiOntcbiAgICAgICAgXCJuYW1lXCI6XCJEaXZlaGk7IERoaXZlaGk7IE1hbGRpdmlhbjtcIixcbiAgICAgICAgXCJuYXRpdmVOYW1lXCI6XCLei96o3ojerN6A3qhcIlxuICAgIH0sXG4gICAgXCJubFwiOntcbiAgICAgICAgXCJuYW1lXCI6XCJEdXRjaFwiLFxuICAgICAgICBcIm5hdGl2ZU5hbWVcIjpcIk5lZGVybGFuZHMsIFZsYWFtc1wiXG4gICAgfSxcbiAgICBcImVuXCI6e1xuICAgICAgICBcIm5hbWVcIjpcIkVuZ2xpc2hcIixcbiAgICAgICAgXCJuYXRpdmVOYW1lXCI6XCJFbmdsaXNoXCJcbiAgICB9LFxuICAgIFwiZW9cIjp7XG4gICAgICAgIFwibmFtZVwiOlwiRXNwZXJhbnRvXCIsXG4gICAgICAgIFwibmF0aXZlTmFtZVwiOlwiRXNwZXJhbnRvXCJcbiAgICB9LFxuICAgIFwiZXRcIjp7XG4gICAgICAgIFwibmFtZVwiOlwiRXN0b25pYW5cIixcbiAgICAgICAgXCJuYXRpdmVOYW1lXCI6XCJlZXN0aSwgZWVzdGkga2VlbFwiXG4gICAgfSxcbiAgICBcImVlXCI6e1xuICAgICAgICBcIm5hbWVcIjpcIkV3ZVwiLFxuICAgICAgICBcIm5hdGl2ZU5hbWVcIjpcIkXKi2VnYmVcIlxuICAgIH0sXG4gICAgXCJmb1wiOntcbiAgICAgICAgXCJuYW1lXCI6XCJGYXJvZXNlXCIsXG4gICAgICAgIFwibmF0aXZlTmFtZVwiOlwiZsO4cm95c2t0XCJcbiAgICB9LFxuICAgIFwiZmpcIjp7XG4gICAgICAgIFwibmFtZVwiOlwiRmlqaWFuXCIsXG4gICAgICAgIFwibmF0aXZlTmFtZVwiOlwidm9zYSBWYWthdml0aVwiXG4gICAgfSxcbiAgICBcImZpXCI6e1xuICAgICAgICBcIm5hbWVcIjpcIkZpbm5pc2hcIixcbiAgICAgICAgXCJuYXRpdmVOYW1lXCI6XCJzdW9taSwgc3VvbWVuIGtpZWxpXCJcbiAgICB9LFxuICAgIFwiZnJcIjp7XG4gICAgICAgIFwibmFtZVwiOlwiRnJlbmNoXCIsXG4gICAgICAgIFwibmF0aXZlTmFtZVwiOlwiZnJhbsOnYWlzLCBsYW5ndWUgZnJhbsOnYWlzZVwiXG4gICAgfSxcbiAgICBcImZmXCI6e1xuICAgICAgICBcIm5hbWVcIjpcIkZ1bGE7IEZ1bGFoOyBQdWxhYXI7IFB1bGFyXCIsXG4gICAgICAgIFwibmF0aXZlTmFtZVwiOlwiRnVsZnVsZGUsIFB1bGFhciwgUHVsYXJcIlxuICAgIH0sXG4gICAgXCJnbFwiOntcbiAgICAgICAgXCJuYW1lXCI6XCJHYWxpY2lhblwiLFxuICAgICAgICBcIm5hdGl2ZU5hbWVcIjpcIkdhbGVnb1wiXG4gICAgfSxcbiAgICBcImthXCI6e1xuICAgICAgICBcIm5hbWVcIjpcIkdlb3JnaWFuXCIsXG4gICAgICAgIFwibmF0aXZlTmFtZVwiOlwi4YOl4YOQ4YOg4YOX4YOj4YOa4YOYXCJcbiAgICB9LFxuICAgIFwiZGVcIjp7XG4gICAgICAgIFwibmFtZVwiOlwiR2VybWFuXCIsXG4gICAgICAgIFwibmF0aXZlTmFtZVwiOlwiRGV1dHNjaFwiXG4gICAgfSxcbiAgICBcImVsXCI6e1xuICAgICAgICBcIm5hbWVcIjpcIkdyZWVrLCBNb2Rlcm5cIixcbiAgICAgICAgXCJuYXRpdmVOYW1lXCI6XCLOlc67zrvOt869zrnOus6sXCJcbiAgICB9LFxuICAgIFwiZ25cIjp7XG4gICAgICAgIFwibmFtZVwiOlwiR3VhcmFuw61cIixcbiAgICAgICAgXCJuYXRpdmVOYW1lXCI6XCJBdmHDsWXhur1cIlxuICAgIH0sXG4gICAgXCJndVwiOntcbiAgICAgICAgXCJuYW1lXCI6XCJHdWphcmF0aVwiLFxuICAgICAgICBcIm5hdGl2ZU5hbWVcIjpcIuCql+CrgeCqnOCqsOCqvuCqpOCrgFwiXG4gICAgfSxcbiAgICBcImh0XCI6e1xuICAgICAgICBcIm5hbWVcIjpcIkhhaXRpYW47IEhhaXRpYW4gQ3Jlb2xlXCIsXG4gICAgICAgIFwibmF0aXZlTmFtZVwiOlwiS3JlecOybCBheWlzeWVuXCJcbiAgICB9LFxuICAgIFwiaGFcIjp7XG4gICAgICAgIFwibmFtZVwiOlwiSGF1c2FcIixcbiAgICAgICAgXCJuYXRpdmVOYW1lXCI6XCJIYXVzYSwg2YfZjtmI2Y/Ys9mOXCJcbiAgICB9LFxuICAgIFwiaGVcIjp7XG4gICAgICAgIFwibmFtZVwiOlwiSGVicmV3IChtb2Rlcm4pXCIsXG4gICAgICAgIFwibmF0aXZlTmFtZVwiOlwi16LXkdeo15nXqlwiXG4gICAgfSxcbiAgICBcImh6XCI6e1xuICAgICAgICBcIm5hbWVcIjpcIkhlcmVyb1wiLFxuICAgICAgICBcIm5hdGl2ZU5hbWVcIjpcIk90amloZXJlcm9cIlxuICAgIH0sXG4gICAgXCJoaVwiOntcbiAgICAgICAgXCJuYW1lXCI6XCJIaW5kaVwiLFxuICAgICAgICBcIm5hdGl2ZU5hbWVcIjpcIuCkueCkv+CkqOCljeCkpuClgCwg4KS54KS/4KSC4KSm4KWAXCJcbiAgICB9LFxuICAgIFwiaG9cIjp7XG4gICAgICAgIFwibmFtZVwiOlwiSGlyaSBNb3R1XCIsXG4gICAgICAgIFwibmF0aXZlTmFtZVwiOlwiSGlyaSBNb3R1XCJcbiAgICB9LFxuICAgIFwiaHVcIjp7XG4gICAgICAgIFwibmFtZVwiOlwiSHVuZ2FyaWFuXCIsXG4gICAgICAgIFwibmF0aXZlTmFtZVwiOlwiTWFneWFyXCJcbiAgICB9LFxuICAgIFwiaWFcIjp7XG4gICAgICAgIFwibmFtZVwiOlwiSW50ZXJsaW5ndWFcIixcbiAgICAgICAgXCJuYXRpdmVOYW1lXCI6XCJJbnRlcmxpbmd1YVwiXG4gICAgfSxcbiAgICBcImlkXCI6e1xuICAgICAgICBcIm5hbWVcIjpcIkluZG9uZXNpYW5cIixcbiAgICAgICAgXCJuYXRpdmVOYW1lXCI6XCJCYWhhc2EgSW5kb25lc2lhXCJcbiAgICB9LFxuICAgIFwiaWVcIjp7XG4gICAgICAgIFwibmFtZVwiOlwiSW50ZXJsaW5ndWVcIixcbiAgICAgICAgXCJuYXRpdmVOYW1lXCI6XCJPcmlnaW5hbGx5IGNhbGxlZCBPY2NpZGVudGFsOyB0aGVuIEludGVybGluZ3VlIGFmdGVyIFdXSUlcIlxuICAgIH0sXG4gICAgXCJnYVwiOntcbiAgICAgICAgXCJuYW1lXCI6XCJJcmlzaFwiLFxuICAgICAgICBcIm5hdGl2ZU5hbWVcIjpcIkdhZWlsZ2VcIlxuICAgIH0sXG4gICAgXCJpZ1wiOntcbiAgICAgICAgXCJuYW1lXCI6XCJJZ2JvXCIsXG4gICAgICAgIFwibmF0aXZlTmFtZVwiOlwiQXPhu6Vz4bulIElnYm9cIlxuICAgIH0sXG4gICAgXCJpa1wiOntcbiAgICAgICAgXCJuYW1lXCI6XCJJbnVwaWFxXCIsXG4gICAgICAgIFwibmF0aXZlTmFtZVwiOlwiScOxdXBpYXEsIEnDsXVwaWF0dW5cIlxuICAgIH0sXG4gICAgXCJpb1wiOntcbiAgICAgICAgXCJuYW1lXCI6XCJJZG9cIixcbiAgICAgICAgXCJuYXRpdmVOYW1lXCI6XCJJZG9cIlxuICAgIH0sXG4gICAgXCJpc1wiOntcbiAgICAgICAgXCJuYW1lXCI6XCJJY2VsYW5kaWNcIixcbiAgICAgICAgXCJuYXRpdmVOYW1lXCI6XCLDjXNsZW5za2FcIlxuICAgIH0sXG4gICAgXCJpdFwiOntcbiAgICAgICAgXCJuYW1lXCI6XCJJdGFsaWFuXCIsXG4gICAgICAgIFwibmF0aXZlTmFtZVwiOlwiSXRhbGlhbm9cIlxuICAgIH0sXG4gICAgXCJpdVwiOntcbiAgICAgICAgXCJuYW1lXCI6XCJJbnVrdGl0dXRcIixcbiAgICAgICAgXCJuYXRpdmVOYW1lXCI6XCLhkIPhk4ThkoPhkY7hkZDhkaZcIlxuICAgIH0sXG4gICAgXCJqYVwiOntcbiAgICAgICAgXCJuYW1lXCI6XCJKYXBhbmVzZVwiLFxuICAgICAgICBcIm5hdGl2ZU5hbWVcIjpcIuaXpeacrOiqniAo44Gr44G744KT44GU77yP44Gr44Gj44G944KT44GUKVwiXG4gICAgfSxcbiAgICBcImp2XCI6e1xuICAgICAgICBcIm5hbWVcIjpcIkphdmFuZXNlXCIsXG4gICAgICAgIFwibmF0aXZlTmFtZVwiOlwiYmFzYSBKYXdhXCJcbiAgICB9LFxuICAgIFwia2xcIjp7XG4gICAgICAgIFwibmFtZVwiOlwiS2FsYWFsbGlzdXQsIEdyZWVubGFuZGljXCIsXG4gICAgICAgIFwibmF0aXZlTmFtZVwiOlwia2FsYWFsbGlzdXQsIGthbGFhbGxpdCBvcWFhc2lpXCJcbiAgICB9LFxuICAgIFwia25cIjp7XG4gICAgICAgIFwibmFtZVwiOlwiS2FubmFkYVwiLFxuICAgICAgICBcIm5hdGl2ZU5hbWVcIjpcIuCyleCyqOCzjeCyqOCyoVwiXG4gICAgfSxcbiAgICBcImtyXCI6e1xuICAgICAgICBcIm5hbWVcIjpcIkthbnVyaVwiLFxuICAgICAgICBcIm5hdGl2ZU5hbWVcIjpcIkthbnVyaVwiXG4gICAgfSxcbiAgICBcImtzXCI6e1xuICAgICAgICBcIm5hbWVcIjpcIkthc2htaXJpXCIsXG4gICAgICAgIFwibmF0aXZlTmFtZVwiOlwi4KSV4KS24KWN4KSu4KWA4KSw4KWALCDZg9i02YXZitix2YrigI5cIlxuICAgIH0sXG4gICAgXCJra1wiOntcbiAgICAgICAgXCJuYW1lXCI6XCJLYXpha2hcIixcbiAgICAgICAgXCJuYXRpdmVOYW1lXCI6XCLSmtCw0LfQsNKbINGC0ZbQu9GWXCJcbiAgICB9LFxuICAgIFwia21cIjp7XG4gICAgICAgIFwibmFtZVwiOlwiS2htZXJcIixcbiAgICAgICAgXCJuYXRpdmVOYW1lXCI6XCLhnpfhnrbhnp/hnrbhnoHhn5Lhnpjhn4LhnppcIlxuICAgIH0sXG4gICAgXCJraVwiOntcbiAgICAgICAgXCJuYW1lXCI6XCJLaWt1eXUsIEdpa3V5dVwiLFxuICAgICAgICBcIm5hdGl2ZU5hbWVcIjpcIkfEqWvFqXnFqVwiXG4gICAgfSxcbiAgICBcInJ3XCI6e1xuICAgICAgICBcIm5hbWVcIjpcIktpbnlhcndhbmRhXCIsXG4gICAgICAgIFwibmF0aXZlTmFtZVwiOlwiSWtpbnlhcndhbmRhXCJcbiAgICB9LFxuICAgIFwia3lcIjp7XG4gICAgICAgIFwibmFtZVwiOlwiS2lyZ2hpeiwgS3lyZ3l6XCIsXG4gICAgICAgIFwibmF0aXZlTmFtZVwiOlwi0LrRi9GA0LPRi9C3INGC0LjQu9C4XCJcbiAgICB9LFxuICAgIFwia3ZcIjp7XG4gICAgICAgIFwibmFtZVwiOlwiS29taVwiLFxuICAgICAgICBcIm5hdGl2ZU5hbWVcIjpcItC60L7QvNC4INC60YvQslwiXG4gICAgfSxcbiAgICBcImtnXCI6e1xuICAgICAgICBcIm5hbWVcIjpcIktvbmdvXCIsXG4gICAgICAgIFwibmF0aXZlTmFtZVwiOlwiS2lLb25nb1wiXG4gICAgfSxcbiAgICBcImtvXCI6e1xuICAgICAgICBcIm5hbWVcIjpcIktvcmVhblwiLFxuICAgICAgICBcIm5hdGl2ZU5hbWVcIjpcIu2VnOq1reyWtCAo6Z+T5ZyL6KqeKSwg7KGw7ISg66eQICjmnJ3prq7oqp4pXCJcbiAgICB9LFxuICAgIFwia3VcIjp7XG4gICAgICAgIFwibmFtZVwiOlwiS3VyZGlzaFwiLFxuICAgICAgICBcIm5hdGl2ZU5hbWVcIjpcIkt1cmTDriwg2YPZiNix2K/bjOKAjlwiXG4gICAgfSxcbiAgICBcImtqXCI6e1xuICAgICAgICBcIm5hbWVcIjpcIkt3YW55YW1hLCBLdWFueWFtYVwiLFxuICAgICAgICBcIm5hdGl2ZU5hbWVcIjpcIkt1YW55YW1hXCJcbiAgICB9LFxuICAgIFwibGFcIjp7XG4gICAgICAgIFwibmFtZVwiOlwiTGF0aW5cIixcbiAgICAgICAgXCJuYXRpdmVOYW1lXCI6XCJsYXRpbmUsIGxpbmd1YSBsYXRpbmFcIlxuICAgIH0sXG4gICAgXCJsYlwiOntcbiAgICAgICAgXCJuYW1lXCI6XCJMdXhlbWJvdXJnaXNoLCBMZXR6ZWJ1cmdlc2NoXCIsXG4gICAgICAgIFwibmF0aXZlTmFtZVwiOlwiTMOrdHplYnVlcmdlc2NoXCJcbiAgICB9LFxuICAgIFwibGdcIjp7XG4gICAgICAgIFwibmFtZVwiOlwiTHVnYW5kYVwiLFxuICAgICAgICBcIm5hdGl2ZU5hbWVcIjpcIkx1Z2FuZGFcIlxuICAgIH0sXG4gICAgXCJsaVwiOntcbiAgICAgICAgXCJuYW1lXCI6XCJMaW1idXJnaXNoLCBMaW1idXJnYW4sIExpbWJ1cmdlclwiLFxuICAgICAgICBcIm5hdGl2ZU5hbWVcIjpcIkxpbWJ1cmdzXCJcbiAgICB9LFxuICAgIFwibG5cIjp7XG4gICAgICAgIFwibmFtZVwiOlwiTGluZ2FsYVwiLFxuICAgICAgICBcIm5hdGl2ZU5hbWVcIjpcIkxpbmfDoWxhXCJcbiAgICB9LFxuICAgIFwibG9cIjp7XG4gICAgICAgIFwibmFtZVwiOlwiTGFvXCIsXG4gICAgICAgIFwibmF0aXZlTmFtZVwiOlwi4Lqe4Lqy4Lqq4Lqy4Lql4Lqy4LqnXCJcbiAgICB9LFxuICAgIFwibHRcIjp7XG4gICAgICAgIFwibmFtZVwiOlwiTGl0aHVhbmlhblwiLFxuICAgICAgICBcIm5hdGl2ZU5hbWVcIjpcImxpZXR1dmnFsyBrYWxiYVwiXG4gICAgfSxcbiAgICBcImx1XCI6e1xuICAgICAgICBcIm5hbWVcIjpcIkx1YmEtS2F0YW5nYVwiLFxuICAgICAgICBcIm5hdGl2ZU5hbWVcIjpcIlwiXG4gICAgfSxcbiAgICBcImx2XCI6e1xuICAgICAgICBcIm5hbWVcIjpcIkxhdHZpYW5cIixcbiAgICAgICAgXCJuYXRpdmVOYW1lXCI6XCJsYXR2aWXFoXUgdmFsb2RhXCJcbiAgICB9LFxuICAgIFwiZ3ZcIjp7XG4gICAgICAgIFwibmFtZVwiOlwiTWFueFwiLFxuICAgICAgICBcIm5hdGl2ZU5hbWVcIjpcIkdhZWxnLCBHYWlsY2tcIlxuICAgIH0sXG4gICAgXCJta1wiOntcbiAgICAgICAgXCJuYW1lXCI6XCJNYWNlZG9uaWFuXCIsXG4gICAgICAgIFwibmF0aXZlTmFtZVwiOlwi0LzQsNC60LXQtNC+0L3RgdC60Lgg0ZjQsNC30LjQulwiXG4gICAgfSxcbiAgICBcIm1nXCI6e1xuICAgICAgICBcIm5hbWVcIjpcIk1hbGFnYXN5XCIsXG4gICAgICAgIFwibmF0aXZlTmFtZVwiOlwiTWFsYWdhc3kgZml0ZW55XCJcbiAgICB9LFxuICAgIFwibXNcIjp7XG4gICAgICAgIFwibmFtZVwiOlwiTWFsYXlcIixcbiAgICAgICAgXCJuYXRpdmVOYW1lXCI6XCJiYWhhc2EgTWVsYXl1LCDYqNmH2KfYsyDZhdmE2KfZitmI4oCOXCJcbiAgICB9LFxuICAgIFwibWxcIjp7XG4gICAgICAgIFwibmFtZVwiOlwiTWFsYXlhbGFtXCIsXG4gICAgICAgIFwibmF0aXZlTmFtZVwiOlwi4LSu4LSy4LSv4LS+4LSz4LSCXCJcbiAgICB9LFxuICAgIFwibXRcIjp7XG4gICAgICAgIFwibmFtZVwiOlwiTWFsdGVzZVwiLFxuICAgICAgICBcIm5hdGl2ZU5hbWVcIjpcIk1hbHRpXCJcbiAgICB9LFxuICAgIFwibWlcIjp7XG4gICAgICAgIFwibmFtZVwiOlwiTcSBb3JpXCIsXG4gICAgICAgIFwibmF0aXZlTmFtZVwiOlwidGUgcmVvIE3EgW9yaVwiXG4gICAgfSxcbiAgICBcIm1yXCI6e1xuICAgICAgICBcIm5hbWVcIjpcIk1hcmF0aGkgKE1hcsSB4bmtaMSrKVwiLFxuICAgICAgICBcIm5hdGl2ZU5hbWVcIjpcIuCkruCksOCkvuCkoOClgFwiXG4gICAgfSxcbiAgICBcIm1oXCI6e1xuICAgICAgICBcIm5hbWVcIjpcIk1hcnNoYWxsZXNlXCIsXG4gICAgICAgIFwibmF0aXZlTmFtZVwiOlwiS2FqaW4gTcynYWplxLxcIlxuICAgIH0sXG4gICAgXCJtblwiOntcbiAgICAgICAgXCJuYW1lXCI6XCJNb25nb2xpYW5cIixcbiAgICAgICAgXCJuYXRpdmVOYW1lXCI6XCLQvNC+0L3Qs9C+0LtcIlxuICAgIH0sXG4gICAgXCJuYVwiOntcbiAgICAgICAgXCJuYW1lXCI6XCJOYXVydVwiLFxuICAgICAgICBcIm5hdGl2ZU5hbWVcIjpcIkVrYWthaXLFqSBOYW9lcm9cIlxuICAgIH0sXG4gICAgXCJudlwiOntcbiAgICAgICAgXCJuYW1lXCI6XCJOYXZham8sIE5hdmFob1wiLFxuICAgICAgICBcIm5hdGl2ZU5hbWVcIjpcIkRpbsOpIGJpemFhZCwgRGluw6lryrxlaMeww61cIlxuICAgIH0sXG4gICAgXCJuYlwiOntcbiAgICAgICAgXCJuYW1lXCI6XCJOb3J3ZWdpYW4gQm9rbcOlbFwiLFxuICAgICAgICBcIm5hdGl2ZU5hbWVcIjpcIk5vcnNrIGJva23DpWxcIlxuICAgIH0sXG4gICAgXCJuZFwiOntcbiAgICAgICAgXCJuYW1lXCI6XCJOb3J0aCBOZGViZWxlXCIsXG4gICAgICAgIFwibmF0aXZlTmFtZVwiOlwiaXNpTmRlYmVsZVwiXG4gICAgfSxcbiAgICBcIm5lXCI6e1xuICAgICAgICBcIm5hbWVcIjpcIk5lcGFsaVwiLFxuICAgICAgICBcIm5hdGl2ZU5hbWVcIjpcIuCkqOClh+CkquCkvuCksuClgFwiXG4gICAgfSxcbiAgICBcIm5nXCI6e1xuICAgICAgICBcIm5hbWVcIjpcIk5kb25nYVwiLFxuICAgICAgICBcIm5hdGl2ZU5hbWVcIjpcIk93YW1ib1wiXG4gICAgfSxcbiAgICBcIm5uXCI6e1xuICAgICAgICBcIm5hbWVcIjpcIk5vcndlZ2lhbiBOeW5vcnNrXCIsXG4gICAgICAgIFwibmF0aXZlTmFtZVwiOlwiTm9yc2sgbnlub3Jza1wiXG4gICAgfSxcbiAgICBcIm5vXCI6e1xuICAgICAgICBcIm5hbWVcIjpcIk5vcndlZ2lhblwiLFxuICAgICAgICBcIm5hdGl2ZU5hbWVcIjpcIk5vcnNrXCJcbiAgICB9LFxuICAgIFwiaWlcIjp7XG4gICAgICAgIFwibmFtZVwiOlwiTnVvc3VcIixcbiAgICAgICAgXCJuYXRpdmVOYW1lXCI6XCLqhojqjKDqkr8gTnVvc3VoeG9wXCJcbiAgICB9LFxuICAgIFwibnJcIjp7XG4gICAgICAgIFwibmFtZVwiOlwiU291dGggTmRlYmVsZVwiLFxuICAgICAgICBcIm5hdGl2ZU5hbWVcIjpcImlzaU5kZWJlbGVcIlxuICAgIH0sXG4gICAgXCJvY1wiOntcbiAgICAgICAgXCJuYW1lXCI6XCJPY2NpdGFuXCIsXG4gICAgICAgIFwibmF0aXZlTmFtZVwiOlwiT2NjaXRhblwiXG4gICAgfSxcbiAgICBcIm9qXCI6e1xuICAgICAgICBcIm5hbWVcIjpcIk9qaWJ3ZSwgT2ppYndhXCIsXG4gICAgICAgIFwibmF0aXZlTmFtZVwiOlwi4ZCK4ZOC4ZSR4ZOI4ZCv4ZKn4ZCO4ZOQXCJcbiAgICB9LFxuICAgIFwiY3VcIjp7XG4gICAgICAgIFwibmFtZVwiOlwiT2xkIENodXJjaCBTbGF2b25pYywgQ2h1cmNoIFNsYXZpYywgQ2h1cmNoIFNsYXZvbmljLCBPbGQgQnVsZ2FyaWFuLCBPbGQgU2xhdm9uaWNcIixcbiAgICAgICAgXCJuYXRpdmVOYW1lXCI6XCLRqdC30YvQutGKINGB0LvQvtCy0aPQvdGM0YHQutGKXCJcbiAgICB9LFxuICAgIFwib21cIjp7XG4gICAgICAgIFwibmFtZVwiOlwiT3JvbW9cIixcbiAgICAgICAgXCJuYXRpdmVOYW1lXCI6XCJBZmFhbiBPcm9tb29cIlxuICAgIH0sXG4gICAgXCJvclwiOntcbiAgICAgICAgXCJuYW1lXCI6XCJPcml5YVwiLFxuICAgICAgICBcIm5hdGl2ZU5hbWVcIjpcIuCsk+CsoeCsvOCsv+CshlwiXG4gICAgfSxcbiAgICBcIm9zXCI6e1xuICAgICAgICBcIm5hbWVcIjpcIk9zc2V0aWFuLCBPc3NldGljXCIsXG4gICAgICAgIFwibmF0aXZlTmFtZVwiOlwi0LjRgNC+0L0gw6bQstC30LDQs1wiXG4gICAgfSxcbiAgICBcInBhXCI6e1xuICAgICAgICBcIm5hbWVcIjpcIlBhbmphYmksIFB1bmphYmlcIixcbiAgICAgICAgXCJuYXRpdmVOYW1lXCI6XCLgqKrgqbDgqJzgqL7gqKzgqYAsINm+2YbYrNin2KjbjOKAjlwiXG4gICAgfSxcbiAgICBcInBpXCI6e1xuICAgICAgICBcIm5hbWVcIjpcIlDEgWxpXCIsXG4gICAgICAgIFwibmF0aXZlTmFtZVwiOlwi4KSq4KS+4KS04KS/XCJcbiAgICB9LFxuICAgIFwiZmFcIjp7XG4gICAgICAgIFwibmFtZVwiOlwiUGVyc2lhblwiLFxuICAgICAgICBcIm5hdGl2ZU5hbWVcIjpcItmB2KfYsdiz24xcIlxuICAgIH0sXG4gICAgXCJwbFwiOntcbiAgICAgICAgXCJuYW1lXCI6XCJQb2xpc2hcIixcbiAgICAgICAgXCJuYXRpdmVOYW1lXCI6XCJwb2xza2lcIlxuICAgIH0sXG4gICAgXCJwc1wiOntcbiAgICAgICAgXCJuYW1lXCI6XCJQYXNodG8sIFB1c2h0b1wiLFxuICAgICAgICBcIm5hdGl2ZU5hbWVcIjpcItm+2prYqtmIXCJcbiAgICB9LFxuICAgIFwicHRcIjp7XG4gICAgICAgIFwibmFtZVwiOlwiUG9ydHVndWVzZVwiLFxuICAgICAgICBcIm5hdGl2ZU5hbWVcIjpcIlBvcnR1Z3XDqnNcIlxuICAgIH0sXG4gICAgXCJxdVwiOntcbiAgICAgICAgXCJuYW1lXCI6XCJRdWVjaHVhXCIsXG4gICAgICAgIFwibmF0aXZlTmFtZVwiOlwiUnVuYSBTaW1pLCBLaWNod2FcIlxuICAgIH0sXG4gICAgXCJybVwiOntcbiAgICAgICAgXCJuYW1lXCI6XCJSb21hbnNoXCIsXG4gICAgICAgIFwibmF0aXZlTmFtZVwiOlwicnVtYW50c2NoIGdyaXNjaHVuXCJcbiAgICB9LFxuICAgIFwicm5cIjp7XG4gICAgICAgIFwibmFtZVwiOlwiS2lydW5kaVwiLFxuICAgICAgICBcIm5hdGl2ZU5hbWVcIjpcImtpUnVuZGlcIlxuICAgIH0sXG4gICAgXCJyb1wiOntcbiAgICAgICAgXCJuYW1lXCI6XCJSb21hbmlhbiwgTW9sZGF2aWFuLCBNb2xkb3ZhblwiLFxuICAgICAgICBcIm5hdGl2ZU5hbWVcIjpcInJvbcOibsSDXCJcbiAgICB9LFxuICAgIFwicnVcIjp7XG4gICAgICAgIFwibmFtZVwiOlwiUnVzc2lhblwiLFxuICAgICAgICBcIm5hdGl2ZU5hbWVcIjpcItGA0YPRgdGB0LrQuNC5INGP0LfRi9C6XCJcbiAgICB9LFxuICAgIFwic2FcIjp7XG4gICAgICAgIFwibmFtZVwiOlwiU2Fuc2tyaXQgKFNh4bmBc2vhuZt0YSlcIixcbiAgICAgICAgXCJuYXRpdmVOYW1lXCI6XCLgpLjgpILgpLjgpY3gpJXgpYPgpKTgpK7gpY1cIlxuICAgIH0sXG4gICAgXCJzY1wiOntcbiAgICAgICAgXCJuYW1lXCI6XCJTYXJkaW5pYW5cIixcbiAgICAgICAgXCJuYXRpdmVOYW1lXCI6XCJzYXJkdVwiXG4gICAgfSxcbiAgICBcInNkXCI6e1xuICAgICAgICBcIm5hbWVcIjpcIlNpbmRoaVwiLFxuICAgICAgICBcIm5hdGl2ZU5hbWVcIjpcIuCkuOCkv+CkqOCljeCkp+ClgCwg2LPZhtqM2YrYjCDYs9mG2K/avtuM4oCOXCJcbiAgICB9LFxuICAgIFwic2VcIjp7XG4gICAgICAgIFwibmFtZVwiOlwiTm9ydGhlcm4gU2FtaVwiLFxuICAgICAgICBcIm5hdGl2ZU5hbWVcIjpcIkRhdnZpc8OhbWVnaWVsbGFcIlxuICAgIH0sXG4gICAgXCJzbVwiOntcbiAgICAgICAgXCJuYW1lXCI6XCJTYW1vYW5cIixcbiAgICAgICAgXCJuYXRpdmVOYW1lXCI6XCJnYWdhbmEgZmFhIFNhbW9hXCJcbiAgICB9LFxuICAgIFwic2dcIjp7XG4gICAgICAgIFwibmFtZVwiOlwiU2FuZ29cIixcbiAgICAgICAgXCJuYXRpdmVOYW1lXCI6XCJ5w6JuZ8OiIHTDriBzw6RuZ8O2XCJcbiAgICB9LFxuICAgIFwic3JcIjp7XG4gICAgICAgIFwibmFtZVwiOlwiU2VyYmlhblwiLFxuICAgICAgICBcIm5hdGl2ZU5hbWVcIjpcItGB0YDQv9GB0LrQuCDRmNC10LfQuNC6XCJcbiAgICB9LFxuICAgIFwiZ2RcIjp7XG4gICAgICAgIFwibmFtZVwiOlwiU2NvdHRpc2ggR2FlbGljOyBHYWVsaWNcIixcbiAgICAgICAgXCJuYXRpdmVOYW1lXCI6XCJHw6BpZGhsaWdcIlxuICAgIH0sXG4gICAgXCJzblwiOntcbiAgICAgICAgXCJuYW1lXCI6XCJTaG9uYVwiLFxuICAgICAgICBcIm5hdGl2ZU5hbWVcIjpcImNoaVNob25hXCJcbiAgICB9LFxuICAgIFwic2lcIjp7XG4gICAgICAgIFwibmFtZVwiOlwiU2luaGFsYSwgU2luaGFsZXNlXCIsXG4gICAgICAgIFwibmF0aXZlTmFtZVwiOlwi4LeD4LeS4LaC4LeE4La9XCJcbiAgICB9LFxuICAgIFwic2tcIjp7XG4gICAgICAgIFwibmFtZVwiOlwiU2xvdmFrXCIsXG4gICAgICAgIFwibmF0aXZlTmFtZVwiOlwic2xvdmVuxI1pbmFcIlxuICAgIH0sXG4gICAgXCJzbFwiOntcbiAgICAgICAgXCJuYW1lXCI6XCJTbG92ZW5lXCIsXG4gICAgICAgIFwibmF0aXZlTmFtZVwiOlwic2xvdmVuxaHEjWluYVwiXG4gICAgfSxcbiAgICBcInNvXCI6e1xuICAgICAgICBcIm5hbWVcIjpcIlNvbWFsaVwiLFxuICAgICAgICBcIm5hdGl2ZU5hbWVcIjpcIlNvb21hYWxpZ2EsIGFmIFNvb21hYWxpXCJcbiAgICB9LFxuICAgIFwic3RcIjp7XG4gICAgICAgIFwibmFtZVwiOlwiU291dGhlcm4gU290aG9cIixcbiAgICAgICAgXCJuYXRpdmVOYW1lXCI6XCJTZXNvdGhvXCJcbiAgICB9LFxuICAgIFwiZXNcIjp7XG4gICAgICAgIFwibmFtZVwiOlwiU3BhbmlzaDsgQ2FzdGlsaWFuXCIsXG4gICAgICAgIFwibmF0aXZlTmFtZVwiOlwiZXNwYcOxb2wsIGNhc3RlbGxhbm9cIlxuICAgIH0sXG4gICAgXCJzdVwiOntcbiAgICAgICAgXCJuYW1lXCI6XCJTdW5kYW5lc2VcIixcbiAgICAgICAgXCJuYXRpdmVOYW1lXCI6XCJCYXNhIFN1bmRhXCJcbiAgICB9LFxuICAgIFwic3dcIjp7XG4gICAgICAgIFwibmFtZVwiOlwiU3dhaGlsaVwiLFxuICAgICAgICBcIm5hdGl2ZU5hbWVcIjpcIktpc3dhaGlsaVwiXG4gICAgfSxcbiAgICBcInNzXCI6e1xuICAgICAgICBcIm5hbWVcIjpcIlN3YXRpXCIsXG4gICAgICAgIFwibmF0aXZlTmFtZVwiOlwiU2lTd2F0aVwiXG4gICAgfSxcbiAgICBcInN2XCI6e1xuICAgICAgICBcIm5hbWVcIjpcIlN3ZWRpc2hcIixcbiAgICAgICAgXCJuYXRpdmVOYW1lXCI6XCJzdmVuc2thXCJcbiAgICB9LFxuICAgIFwidGFcIjp7XG4gICAgICAgIFwibmFtZVwiOlwiVGFtaWxcIixcbiAgICAgICAgXCJuYXRpdmVOYW1lXCI6XCLgrqTgrq7grr/grrTgr41cIlxuICAgIH0sXG4gICAgXCJ0ZVwiOntcbiAgICAgICAgXCJuYW1lXCI6XCJUZWx1Z3VcIixcbiAgICAgICAgXCJuYXRpdmVOYW1lXCI6XCLgsKTgsYbgsLLgsYHgsJfgsYFcIlxuICAgIH0sXG4gICAgXCJ0Z1wiOntcbiAgICAgICAgXCJuYW1lXCI6XCJUYWppa1wiLFxuICAgICAgICBcIm5hdGl2ZU5hbWVcIjpcItGC0L7St9C40LrToywgdG/En2lrxKssINiq2KfYrNuM2qnbjOKAjlwiXG4gICAgfSxcbiAgICBcInRoXCI6e1xuICAgICAgICBcIm5hbWVcIjpcIlRoYWlcIixcbiAgICAgICAgXCJuYXRpdmVOYW1lXCI6XCLguYTguJfguKJcIlxuICAgIH0sXG4gICAgXCJ0aVwiOntcbiAgICAgICAgXCJuYW1lXCI6XCJUaWdyaW55YVwiLFxuICAgICAgICBcIm5hdGl2ZU5hbWVcIjpcIuGJteGMjeGIreGKm1wiXG4gICAgfSxcbiAgICBcImJvXCI6e1xuICAgICAgICBcIm5hbWVcIjpcIlRpYmV0YW4gU3RhbmRhcmQsIFRpYmV0YW4sIENlbnRyYWxcIixcbiAgICAgICAgXCJuYXRpdmVOYW1lXCI6XCLgvZbgvbzgvZHgvIvgvaHgvbLgvYJcIlxuICAgIH0sXG4gICAgXCJ0a1wiOntcbiAgICAgICAgXCJuYW1lXCI6XCJUdXJrbWVuXCIsXG4gICAgICAgIFwibmF0aXZlTmFtZVwiOlwiVMO8cmttZW4sINCi0q/RgNC60LzQtdC9XCJcbiAgICB9LFxuICAgIFwidGxcIjp7XG4gICAgICAgIFwibmFtZVwiOlwiVGFnYWxvZ1wiLFxuICAgICAgICBcIm5hdGl2ZU5hbWVcIjpcIldpa2FuZyBUYWdhbG9nLCDhnI/hnJLhnIPhnIXhnJQg4ZyG4ZyE4ZyO4ZyT4ZyE4ZyUXCJcbiAgICB9LFxuICAgIFwidG5cIjp7XG4gICAgICAgIFwibmFtZVwiOlwiVHN3YW5hXCIsXG4gICAgICAgIFwibmF0aXZlTmFtZVwiOlwiU2V0c3dhbmFcIlxuICAgIH0sXG4gICAgXCJ0b1wiOntcbiAgICAgICAgXCJuYW1lXCI6XCJUb25nYSAoVG9uZ2EgSXNsYW5kcylcIixcbiAgICAgICAgXCJuYXRpdmVOYW1lXCI6XCJmYWthIFRvbmdhXCJcbiAgICB9LFxuICAgIFwidHJcIjp7XG4gICAgICAgIFwibmFtZVwiOlwiVHVya2lzaFwiLFxuICAgICAgICBcIm5hdGl2ZU5hbWVcIjpcIlTDvHJrw6dlXCJcbiAgICB9LFxuICAgIFwidHNcIjp7XG4gICAgICAgIFwibmFtZVwiOlwiVHNvbmdhXCIsXG4gICAgICAgIFwibmF0aXZlTmFtZVwiOlwiWGl0c29uZ2FcIlxuICAgIH0sXG4gICAgXCJ0dFwiOntcbiAgICAgICAgXCJuYW1lXCI6XCJUYXRhclwiLFxuICAgICAgICBcIm5hdGl2ZU5hbWVcIjpcItGC0LDRgtCw0YDRh9CwLCB0YXRhcsOnYSwg2KrYp9iq2KfYsdqG2KfigI5cIlxuICAgIH0sXG4gICAgXCJ0d1wiOntcbiAgICAgICAgXCJuYW1lXCI6XCJUd2lcIixcbiAgICAgICAgXCJuYXRpdmVOYW1lXCI6XCJUd2lcIlxuICAgIH0sXG4gICAgXCJ0eVwiOntcbiAgICAgICAgXCJuYW1lXCI6XCJUYWhpdGlhblwiLFxuICAgICAgICBcIm5hdGl2ZU5hbWVcIjpcIlJlbyBUYWhpdGlcIlxuICAgIH0sXG4gICAgXCJ1Z1wiOntcbiAgICAgICAgXCJuYW1lXCI6XCJVaWdodXIsIFV5Z2h1clwiLFxuICAgICAgICBcIm5hdGl2ZU5hbWVcIjpcIlV5xqN1cnHJmSwg2Kbbh9mK2Lrbh9ix2obbleKAjlwiXG4gICAgfSxcbiAgICBcInVrXCI6e1xuICAgICAgICBcIm5hbWVcIjpcIlVrcmFpbmlhblwiLFxuICAgICAgICBcIm5hdGl2ZU5hbWVcIjpcItGD0LrRgNCw0ZfQvdGB0YzQutCwXCJcbiAgICB9LFxuICAgIFwidXJcIjp7XG4gICAgICAgIFwibmFtZVwiOlwiVXJkdVwiLFxuICAgICAgICBcIm5hdGl2ZU5hbWVcIjpcItin2LHYr9mIXCJcbiAgICB9LFxuICAgIFwidXpcIjp7XG4gICAgICAgIFwibmFtZVwiOlwiVXpiZWtcIixcbiAgICAgICAgXCJuYXRpdmVOYW1lXCI6XCJ6YmVrLCDQjtC30LHQtdC6LCDYo9uH2LLYqNuQ2YPigI5cIlxuICAgIH0sXG4gICAgXCJ2ZVwiOntcbiAgICAgICAgXCJuYW1lXCI6XCJWZW5kYVwiLFxuICAgICAgICBcIm5hdGl2ZU5hbWVcIjpcIlRzaGl2ZW7huJNhXCJcbiAgICB9LFxuICAgIFwidmlcIjp7XG4gICAgICAgIFwibmFtZVwiOlwiVmlldG5hbWVzZVwiLFxuICAgICAgICBcIm5hdGl2ZU5hbWVcIjpcIlRp4bq/bmcgVmnhu4d0XCJcbiAgICB9LFxuICAgIFwidm9cIjp7XG4gICAgICAgIFwibmFtZVwiOlwiVm9sYXDDvGtcIixcbiAgICAgICAgXCJuYXRpdmVOYW1lXCI6XCJWb2xhcMO8a1wiXG4gICAgfSxcbiAgICBcIndhXCI6e1xuICAgICAgICBcIm5hbWVcIjpcIldhbGxvb25cIixcbiAgICAgICAgXCJuYXRpdmVOYW1lXCI6XCJXYWxvblwiXG4gICAgfSxcbiAgICBcImN5XCI6e1xuICAgICAgICBcIm5hbWVcIjpcIldlbHNoXCIsXG4gICAgICAgIFwibmF0aXZlTmFtZVwiOlwiQ3ltcmFlZ1wiXG4gICAgfSxcbiAgICBcIndvXCI6e1xuICAgICAgICBcIm5hbWVcIjpcIldvbG9mXCIsXG4gICAgICAgIFwibmF0aXZlTmFtZVwiOlwiV29sbG9mXCJcbiAgICB9LFxuICAgIFwiZnlcIjp7XG4gICAgICAgIFwibmFtZVwiOlwiV2VzdGVybiBGcmlzaWFuXCIsXG4gICAgICAgIFwibmF0aXZlTmFtZVwiOlwiRnJ5c2tcIlxuICAgIH0sXG4gICAgXCJ4aFwiOntcbiAgICAgICAgXCJuYW1lXCI6XCJYaG9zYVwiLFxuICAgICAgICBcIm5hdGl2ZU5hbWVcIjpcImlzaVhob3NhXCJcbiAgICB9LFxuICAgIFwieWlcIjp7XG4gICAgICAgIFwibmFtZVwiOlwiWWlkZGlzaFwiLFxuICAgICAgICBcIm5hdGl2ZU5hbWVcIjpcIteZ15nWtNeT15nXqVwiXG4gICAgfSxcbiAgICBcInlvXCI6e1xuICAgICAgICBcIm5hbWVcIjpcIllvcnViYVwiLFxuICAgICAgICBcIm5hdGl2ZU5hbWVcIjpcIllvcsO5YsOhXCJcbiAgICB9LFxuICAgIFwiemFcIjp7XG4gICAgICAgIFwibmFtZVwiOlwiWmh1YW5nLCBDaHVhbmdcIixcbiAgICAgICAgXCJuYXRpdmVOYW1lXCI6XCJTYcmvIGN1ZcWLxoUsIFNhdyBjdWVuZ2hcIlxuICAgIH1cbn1cblxuXG4vLyBXRUJQQUNLIEZPT1RFUiAvL1xuLy8gLi9zcmMvQXBwQnVuZGxlL1Jlc291cmNlcy9wdWJsaWMvZGF0YS9sYW5ndWFnZXMuanMiLCJpbXBvcnQgeyBmaWx0ZXJUeXBlcyB9IGZyb20gJy4uL3JlZHVjZXJzL2ZpbHRlcic7XG5cbmV4cG9ydCBjb25zdCBhZGRSaWdodCA9IGlkID0+ICh7XG4gICAgdHlwZTogZmlsdGVyVHlwZXMuQUREX1JJR0hULFxuICAgIGlkLFxufSk7XG5cbmV4cG9ydCBjb25zdCByZW1vdmVSaWdodCA9IGlkID0+ICh7XG4gICAgdHlwZTogZmlsdGVyVHlwZXMuUkVNT1ZFX1JJR0hULFxuICAgIGlkLFxufSk7XG5cbmV4cG9ydCBjb25zdCB1cGRhdGVDb3VudHJpZXMgPSBjb3VudHJpZXMgPT4gKHtcbiAgICB0eXBlOiBmaWx0ZXJUeXBlcy5VUERBVEVfQ09VTlRSSUVTLFxuICAgIGNvdW50cmllcyxcbn0pO1xuXG5leHBvcnQgY29uc3QgdXBkYXRlRXhjbHVzaXZlID0gZXhjbHVzaXZlID0+ICh7XG4gICAgdHlwZTogZmlsdGVyVHlwZXMuVVBEQVRFX0VYQ0xVU0lWRSxcbiAgICBleGNsdXNpdmUsXG59KTtcblxuZXhwb3J0IGNvbnN0IHVwZGF0ZUluY2x1ZGVkQ291bnRyaWVzID0gaW5jbHVkZUFsbENvdW50cmllcyA9PiAoe1xuICAgIHR5cGU6IGZpbHRlclR5cGVzLlVQREFURV9JTkNMVURFRF9DT1VOVFJJRVMsXG4gICAgaW5jbHVkZUFsbENvdW50cmllcyxcbn0pO1xuXG5leHBvcnQgY29uc3QgdXBkYXRlTWFueSA9IGZpbHRlcnMgPT4gKHtcbiAgICB0eXBlOiBmaWx0ZXJUeXBlcy5VUERBVEVfTUFOWSxcbiAgICBmaWx0ZXJzLFxufSk7XG5cbmV4cG9ydCBjb25zdCB1cGRhdGVTcG9ydCA9IHNwb3J0ID0+ICh7XG4gICAgdHlwZTogZmlsdGVyVHlwZXMuVVBEQVRFX1NQT1JULFxuICAgIHNwb3J0XG59KTtcblxuZXhwb3J0IGNvbnN0IHVwZGF0ZUV2ZW50ID0gZXZlbnQgPT4gKHtcbiAgICB0eXBlOiBmaWx0ZXJUeXBlcy5VUERBVEVfRVZFTlQsXG4gICAgZXZlbnRcbn0pO1xuXG5leHBvcnQgY29uc3QgY2xlYXJGaWx0ZXIgPSAoKSA9PiAoe1xuICAgIHR5cGU6IGZpbHRlclR5cGVzLkNMRUFSXG59KTtcblxuZXhwb3J0IGNvbnN0IGNsZWFyVXBkYXRlRmlsdGVyID0gKCkgPT4gKHtcbiAgICB0eXBlOiBmaWx0ZXJUeXBlcy5DTEVBUl9VUERBVEVcbn0pO1xuXG5cbi8vIFdFQlBBQ0sgRk9PVEVSIC8vXG4vLyAuL3NyYy9BcHBCdW5kbGUvUmVzb3VyY2VzL3B1YmxpYy9qYXZhc2NyaXB0L2J1eS9hY3Rpb25zL2ZpbHRlckFjdGlvbnMuanMiLCJpbXBvcnQgeyBtYXJrZXRwbGFjZVR5cGVzIH0gZnJvbSAnLi4vcmVkdWNlcnMvbWFya2V0cGxhY2UnO1xuXG5sZXQgbmV4dFRvZG9JZCA9IDA7XG5cbmV4cG9ydCBjb25zdCB0ZXN0ID0gdGV4dCA9PiAoe1xuICAgIHR5cGU6IG1hcmtldHBsYWNlVHlwZXMuVEVTVCxcbiAgICBpZDogbmV4dFRvZG9JZCsrLFxuICAgIHRleHRcbn0pO1xuXG5cbi8vIFdFQlBBQ0sgRk9PVEVSIC8vXG4vLyAuL3NyYy9BcHBCdW5kbGUvUmVzb3VyY2VzL3B1YmxpYy9qYXZhc2NyaXB0L2J1eS9hY3Rpb25zL2luZGV4LmpzIiwiaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCB7ZWRpdGVkUHJvZ3JhbVNlbGVjdGVkfSBmcm9tIFwiLi4vLi4vbWFpbi9hY3Rpb25zL3V0aWxzXCI7XG5pbXBvcnQge1Byb3BUeXBlc30gZnJvbSBcInByb3AtdHlwZXNcIjtcbmltcG9ydCB7dG91cm5hbWVudEljb24sIHNwb3J0SWNvbiwgc3BvcnRDYXRlZ29yeUljb24sIHNlYXNvblJlbGVhc2VJY29uLCBmaXh0dXJlc0VwaXNvZGVJY29uLCBldmVudFRpbWVJY29ufSBmcm9tIFwiLi4vLi4vbWFpbi9jb21wb25lbnRzL0ljb25zXCI7XG5cbmNsYXNzIENvbnRlbnRMaXN0aW5nRXZlbnREZXRhaWxzIGV4dGVuZHMgUmVhY3QuQ29tcG9uZW50IHtcblxuICAgIGNvbnN0cnVjdG9yKHByb3BzKSB7XG4gICAgICAgIHN1cGVyKHByb3BzKTtcbiAgICAgICAgdGhpcy5zdGF0ZSA9IHtcbiAgICAgICAgfTtcbiAgICB9XG5cbiAgICBnZXRGaXh0dXJlcyA9ICgpID0+IHtcbiAgICAgICAgY29uc3Qge3NlYXNvbnN9ID0gdGhpcy5wcm9wcztcblxuICAgICAgICBsZXQgZml4dHVyZXMgPSBbXTtcblxuICAgICAgICBzZWFzb25zLmZvckVhY2goIHMgPT4ge1xuICAgICAgICAgICAgaWYgKCBzLmZpeHR1cmVzICkgZml4dHVyZXMgPSBbLi4uZml4dHVyZXMsIC4uLnMuZml4dHVyZXNdXG4gICAgICAgIH0pO1xuXG4gICAgICAgIHJldHVybiBmaXh0dXJlcztcblxuICAgIH07XG5cbiAgICBnZXRTY2hlZHVsZXMgPSAoKSA9PiB7XG5cbiAgICAgICAgY29uc3QgeyBzZWFzb25zICwgc2NoZWR1bGVzQnlTZWFzb259ID0gdGhpcy5wcm9wcztcbiAgICAgICAgbGV0IHNjaGVkdWxlcyA9IHtcbiAgICAgICAgICAgIHJvdW5kcyA6IFtdLFxuICAgICAgICAgICAgbWF0Y2hlcyA6IFtdXG4gICAgICAgIH07XG4gICAgICAgIHNlYXNvbnMuZm9yRWFjaChzID0+IHtcbiAgICAgICAgICAgIGlmIChzLnNjaGVkdWxlcykgT2JqZWN0LmVudHJpZXMocy5zY2hlZHVsZXMpLmZvckVhY2goKHNoKSA9PntcbiAgICAgICAgICAgICAgICBpZiAoc2hbMV0uc2VsZWN0ZWQgJiYgc2NoZWR1bGVzLnJvdW5kcy5pbmRleE9mKHNoWzBdKSA9PT0gLTEpe1xuICAgICAgICAgICAgICAgICAgICBzY2hlZHVsZXMucm91bmRzLnB1c2goc2hbMF0pO1xuICAgICAgICAgICAgICAgICAgICBzaFsxXS5tYXRjaGVzLmZvckVhY2gobSA9PiB7XG4gICAgICAgICAgICAgICAgICAgICAgICBpZihtLnNlbGVjdGVkKSBzY2hlZHVsZXMubWF0Y2hlcy5wdXNoKG0pXG4gICAgICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0pXG4gICAgICAgIH0pO1xuXG4gICAgICAgIGlmICggc2NoZWR1bGVzQnlTZWFzb24gKXtcbiAgICAgICAgICAgIHNjaGVkdWxlc0J5U2Vhc29uLmZvckVhY2gocyA9PiB7XG4gICAgICAgICAgICAgICAgaWYgKHMgJiYgT2JqZWN0LmVudHJpZXMocykpIE9iamVjdC5lbnRyaWVzKHMpLmZvckVhY2goKHNoKSA9PntcbiAgICAgICAgICAgICAgICAgICAgaWYgKHNjaGVkdWxlcy5yb3VuZHMuaW5kZXhPZihzaFswXSkgPT09IC0xKXtcbiAgICAgICAgICAgICAgICAgICAgICAgIHNjaGVkdWxlcy5yb3VuZHMucHVzaChzaFswXSk7XG4gICAgICAgICAgICAgICAgICAgICAgICBzaFsxXS5tYXRjaGVzLmZvckVhY2gobSA9PiB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYobS5zZWxlY3RlZCkgc2NoZWR1bGVzLm1hdGNoZXMucHVzaChtKVxuICAgICAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgICAgIH1cblxuXG4gICAgICAgICAgICAgICAgfSlcbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9XG5cbiAgICAgICAgcmV0dXJuIHNjaGVkdWxlc1xuICAgIH07XG5cbiAgICBzaG93UHJvZ3JhbUluZm8gPSAoKSA9PiB7XG5cbiAgICAgICAgY29uc3Qge3JpZ2h0c1BhY2thZ2UsIFBST0dSQU1fTkFNRX0gPSB0aGlzLnByb3BzO1xuICAgICAgICBsZXQgc2hvdyA9IGZhbHNlO1xuXG4gICAgICAgIGlmIChyaWdodHNQYWNrYWdlLmxlbmd0aCA+IDEpIHJldHVybiBzaG93O1xuICAgICAgICBzaG93ID0gZWRpdGVkUHJvZ3JhbVNlbGVjdGVkKHJpZ2h0c1BhY2thZ2UpO1xuICAgICAgICByZXR1cm4gc2hvdyAmJiBQUk9HUkFNX05BTUU7XG5cbiAgICB9O1xuXG4gICAgZ2V0U2Vhc29uc1llYXJzID0gKHNlYXNvbnMpID0+IHtcbiAgICAgICAgaWYgKCFzZWFzb25zIHx8IHNlYXNvbnMubGVuZ3RoID09PSAwKSB7XG4gICAgICAgICAgICByZXR1cm4gW107XG4gICAgICAgIH1cbiAgICAgICAgbGV0IHllYXJzID0gW107XG4gICAgICAgIHNlYXNvbnMuZm9yRWFjaChzID0+IHtcbiAgICAgICAgICAgIGlmIChzLmZyb20pIHtcbiAgICAgICAgICAgICAgICB5ZWFycy5wdXNoKHMuZnJvbSlcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGlmIChzLnRvKSB7XG4gICAgICAgICAgICAgICAgeWVhcnMucHVzaChzLnRvKVxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaWYgKCFzLnRvICYmICFzLmZyb20gJiYgcy55ZWFyKSB7XG4gICAgICAgICAgICAgICAgbGV0IHByb2Nlc3NlZFllYXJzID0gcy55ZWFyLnNwbGl0KFwiL1wiKTtcbiAgICAgICAgICAgICAgICBzLmZyb20gPSBwcm9jZXNzZWRZZWFycy5sZW5ndGggPT09IDEgPyBwcm9jZXNzZWRZZWFyc1swXSA6IDIwMDAgKyBOdW1iZXIocHJvY2Vzc2VkWWVhcnNbMF0pO1xuICAgICAgICAgICAgICAgIHMudG8gPSBwcm9jZXNzZWRZZWFycy5sZW5ndGggPT09IDEgPyBmYWxzZSA6IDIwMDAgKyBOdW1iZXIocHJvY2Vzc2VkWWVhcnNbMV0pO1xuXG4gICAgICAgICAgICAgICAgeWVhcnMucHVzaChzLmZyb20pXG4gICAgICAgICAgICAgICAgaWYgKHMudG8pIHtcbiAgICAgICAgICAgICAgICAgICAgeWVhcnMucHVzaChzLnRvKVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgfSlcbiAgICAgICAgeWVhcnMgPSB5ZWFycy5zb3J0KChhLGIpPT4gYS1iKTtcblxuICAgICAgICBpZiAoeWVhcnMubGVuZ3RoID4gMSkge1xuICAgICAgICAgICAgcmV0dXJuIFt5ZWFyc1swXSwgeWVhcnNbeWVhcnMubGVuZ3RoLTFdXVxuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgcmV0dXJuIFt5ZWFyc1swXV1cbiAgICAgICAgfVxuICAgIH1cblxuICAgIHJlbmRlcigpIHtcbiAgICAgICAgY29uc3Qge1xuICAgICAgICAgICAgc3BvcnRzLFxuICAgICAgICAgICAgc3BvcnRDYXRlZ29yeSxcbiAgICAgICAgICAgIGN1c3RvbVRvdXJuYW1lbnQsXG4gICAgICAgICAgICBjdXN0b21DYXRlZ29yeSxcbiAgICAgICAgICAgIGN1c3RvbUlkLFxuICAgICAgICAgICAgdG91cm5hbWVudCxcbiAgICAgICAgICAgIHNlYXNvbnMsXG4gICAgICAgICAgICBzaG93Q3VzdG9tSWQsXG4gICAgICAgICAgICBQUk9HUkFNX1lFQVIsXG4gICAgICAgICAgICBQUk9HUkFNX0VQSVNPREVTLFxuICAgICAgICB9ID0gdGhpcy5wcm9wcztcblxuICAgICAgICBsZXQgc2NoZWR1bGVzID0gdGhpcy5nZXRTY2hlZHVsZXMoKTtcbiAgICAgICAgbGV0IHJvdW5kcyA9IHNjaGVkdWxlcy5yb3VuZHM7XG4gICAgICAgIGxldCBtYXRjaGVzID0gc2NoZWR1bGVzLm1hdGNoZXM7XG4gICAgICAgIGxldCBzZWFzb25UaXRsZSA9ICggc2Vhc29ucy5sZW5ndGggPiAxICkgPyBcIlNlYXNvbnM6IFwiIDogXCJTZWFzb246IFwiO1xuICAgICAgICBsZXQgZXBpc29kZXNUZXh0ID0gKCBQUk9HUkFNX0VQSVNPREVTID4gMSApID8gXCJlcGlzb2Rlc1wiIDogXCJlcGlzb2RlXCI7XG4gICAgICAgIGxldCBzZWFzb25OYW1lID0gIHNlYXNvblRpdGxlICsgc2Vhc29ucy5tYXAoc2Vhc29uID0+IChzZWFzb24ueWVhcikpLmpvaW4oXCIsIFwiKTtcbiAgICAgICAgbGV0IHNlYXNvbnNBcnJheSA9ICB0aGlzLmdldFNlYXNvbnNZZWFycyhzZWFzb25zKTtcbiAgICAgICAgbGV0IHJvdW5kc1RpdGxlID0gKCByb3VuZHMubGVuZ3RoID4gMSApID8gXCJSb3VuZHM6IFwiIDogXCJSb3VuZDogXCI7XG4gICAgICAgIGxldCByb3VuZHNOYW1lID0gIHJvdW5kc1RpdGxlICsgcm91bmRzLmpvaW4oXCIsIFwiKTtcblxuICAgICAgICBsZXQgdG91cm5hbWVudEFycmF5ID0gW107XG4gICAgICAgIGlmICh0b3VybmFtZW50KSB7XG4gICAgICAgICAgICB0b3VybmFtZW50QXJyYXkgPSBBcnJheS5pc0FycmF5KHRvdXJuYW1lbnQpID8gdG91cm5hbWVudCA6IFt0b3VybmFtZW50XVxuICAgICAgICB9XG5cbiAgICAgICAgcmV0dXJuIChcbiAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwibGlzdGluZy1hdHRyaWJ1dGVzIGNvbFwiPlxuXG4gICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJsaXN0aW5nLWl0ZW0gdG91cm5hbWVudFwiPlxuICAgICAgICAgICAgICAgICAgICB7LypUb3VybmFtZW50IG5hbWUqL31cbiAgICAgICAgICAgICAgICAgICAge3RvdXJuYW1lbnRBcnJheSAmJiB0b3VybmFtZW50QXJyYXkubGVuZ3RoID4gMCAmJiA8c3Bhbj57dG91cm5hbWVudEljb259IHt0b3VybmFtZW50QXJyYXlbMF0ubmFtZX08L3NwYW4+fVxuICAgICAgICAgICAgICAgICAgICB7Y3VzdG9tVG91cm5hbWVudCAmJiAhY3VzdG9tSWQgJiYgPHNwYW4+e3RvdXJuYW1lbnRJY29ufSB7Y3VzdG9tVG91cm5hbWVudH08L3NwYW4+fVxuICAgICAgICAgICAgICAgICAgICB7dG91cm5hbWVudEFycmF5ICYmIHRvdXJuYW1lbnRBcnJheS5sZW5ndGggPT09IDAgJiYgIWN1c3RvbVRvdXJuYW1lbnQgJiYgPHNwYW4+XG4gICAgICAgICAgICAgICAgICAgICAgICB7dG91cm5hbWVudEljb259IHt0aGlzLmNvbnRleHQudChcIkxJU1RJTkdfREVUQUlMU19HRU5FUkFMX0NPTlRFTlRcIil9XG4gICAgICAgICAgICAgICAgICAgIDwvc3Bhbj59XG4gICAgICAgICAgICAgICAgPC9kaXY+XG5cbiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImxpc3RpbmctaXRlbVwiPlxuICAgICAgICAgICAgICAgICAgICB7LypTcG9ydCBuYW1lKi99XG4gICAgICAgICAgICAgICAgICAgIHtzcG9ydHMgJiYgc3BvcnRzLmxlbmd0aCA9PT0gMSAmJiA8c3Bhbj57c3BvcnRJY29ufSB7c3BvcnRzWzBdLm5hbWV9PC9zcGFuPn1cbiAgICAgICAgICAgICAgICAgICAge3Nwb3J0cyAmJiBzcG9ydHMubGVuZ3RoID4gMSAmJiA8c3Bhbj57c3BvcnRJY29ufSB7dGhpcy5jb250ZXh0LnQoXCJMSVNUSU5HX0RFVEFJTFNfTVVMVElQTEVfU1BPUlRTXCIpfTwvc3Bhbj59XG5cbiAgICAgICAgICAgICAgICAgICAgey8qU3BvcnQgY2F0ZWdvcnkvQ291bnRyeSovfVxuICAgICAgICAgICAgICAgICAgICB7c3BvcnRDYXRlZ29yeSAmJiBzcG9ydENhdGVnb3J5Lmxlbmd0aCA+IDAgPyAoXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4+e3Nwb3J0Q2F0ZWdvcnlJY29ufSB7c3BvcnRDYXRlZ29yeVswXS5uYW1lfTwvc3Bhbj5cbiAgICAgICAgICAgICAgICAgICAgICAgICkgOiAoXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4+e3Nwb3J0Q2F0ZWdvcnlJY29ufSB7dGhpcy5jb250ZXh0LnQoXCJJbnRlcm5hdGlvbmFsXCIpfTwvc3Bhbj5cbiAgICAgICAgICAgICAgICAgICAgICAgIClcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICB7LyphcyBpcyBkdXBsaWNhdGUgaW4gc3BvcnRDYXRlZ29yeSovfVxuICAgICAgICAgICAgICAgICAgICB7Lyp7Y3VzdG9tQ2F0ZWdvcnkgJiYgPHNwYW4+e3Nwb3J0Q2F0ZWdvcnlJY29ufSB7Y3VzdG9tQ2F0ZWdvcnl9PC9zcGFuPn0qL31cblxuICAgICAgICAgICAgICAgIDwvZGl2PlxuXG4gICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJsaXN0aW5nLWl0ZW1cIj5cbiAgICAgICAgICAgICAgICAgICAgey8qU2Vhc29uL1JlbGVhc2UqL31cbiAgICAgICAgICAgICAgICAgICAgeyF0aGlzLnNob3dQcm9ncmFtSW5mbygpICYmIHNlYXNvbnNBcnJheS5sZW5ndGggPiAwICYmIChcbiAgICAgICAgICAgICAgICAgICAgICAgIHNlYXNvbnNBcnJheS5sZW5ndGggPiAxID8gKFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuPntzZWFzb25SZWxlYXNlSWNvbn0gZnJvbSB7c2Vhc29uc0FycmF5WzBdfSB0byB7c2Vhc29uc0FycmF5WzFdfTwvc3Bhbj5cbiAgICAgICAgICAgICAgICAgICAgICAgICkgOiAoXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4+e3NlYXNvblJlbGVhc2VJY29ufSBTZWFzb24ge3NlYXNvbnNBcnJheVswXX08L3NwYW4+XG4gICAgICAgICAgICAgICAgICAgICAgICApXG4gICAgICAgICAgICAgICAgICAgICl9XG4gICAgICAgICAgICAgICAgICAgIHt0aGlzLnNob3dQcm9ncmFtSW5mbygpICYmIFBST0dSQU1fWUVBUiAmJiA8c3Bhbj57c2Vhc29uUmVsZWFzZUljb259IFJlbGVhc2UgeWVhcjoge1BST0dSQU1fWUVBUn08L3NwYW4+fVxuXG4gICAgICAgICAgICAgICAgICAgIHsvKkV2ZW50IHRpbWUqL31cbiAgICAgICAgICAgICAgICAgICAgPHNwYW4+e2V2ZW50VGltZUljb259IHRvZG86IGV2ZW50IHRpbWU8L3NwYW4+XG5cbiAgICAgICAgICAgICAgICAgICAgey8qRml4dHVyZXMvRXBpc29kZXMqL31cbiAgICAgICAgICAgICAgICAgICAgeyF0aGlzLnNob3dQcm9ncmFtSW5mbygpICYmIHRoaXMuZ2V0Rml4dHVyZXMoKS5sZW5ndGggPiAxICYmIDxzcGFuPntmaXh0dXJlc0VwaXNvZGVJY29ufSB7dGhpcy5nZXRGaXh0dXJlcygpLmxlbmd0aH0gZml4dHVyZXM8L3NwYW4+fVxuICAgICAgICAgICAgICAgICAgICB7IXRoaXMuc2hvd1Byb2dyYW1JbmZvKCkgJiYgdGhpcy5nZXRGaXh0dXJlcygpLmxlbmd0aCA9PT0gMSAmJiB0aGlzLmdldEZpeHR1cmVzKClbMF0ubmFtZSAmJiA8c3Bhbj57Zml4dHVyZXNFcGlzb2RlSWNvbn0ge3RoaXMuZ2V0Rml4dHVyZXMoKVswXS5uYW1lfTwvc3Bhbj59XG4gICAgICAgICAgICAgICAgICAgIHt0aGlzLnNob3dQcm9ncmFtSW5mbygpICYmIFBST0dSQU1fRVBJU09ERVMgJiYgPHNwYW4+e2ZpeHR1cmVzRXBpc29kZUljb259IHtQUk9HUkFNX0VQSVNPREVTfSB7ZXBpc29kZXNUZXh0fTwvc3Bhbj59XG4gICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgKTtcbiAgICB9XG59XG5cbkNvbnRlbnRMaXN0aW5nRXZlbnREZXRhaWxzLmNvbnRleHRUeXBlcyA9IHtcbiAgICB0OiBQcm9wVHlwZXMuZnVuYy5pc1JlcXVpcmVkXG59O1xuXG5cbmV4cG9ydCBkZWZhdWx0IENvbnRlbnRMaXN0aW5nRXZlbnREZXRhaWxzXG5cblxuLy8gV0VCUEFDSyBGT09URVIgLy9cbi8vIC4vc3JjL0FwcEJ1bmRsZS9SZXNvdXJjZXMvcHVibGljL2phdmFzY3JpcHQvYnV5L2NvbXBvbmVudHMvQ29udGVudExpc3RpbmdFdmVudERldGFpbHMuanMiLCJpbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xuaW1wb3J0IHtibHVlQ2hlY2tJY29uLCB5ZWxsb3dDaGVja0ljb24sIGdyZXlNaW51c0ljb259IGZyb20gXCIuLi8uLi9tYWluL2NvbXBvbmVudHMvSWNvbnNcIjtcbmltcG9ydCB7UHJvcFR5cGVzfSBmcm9tIFwicHJvcC10eXBlc1wiO1xuaW1wb3J0IHVuaW9uQnkgZnJvbSAnbG9kYXNoL3VuaW9uQnknO1xuXG5jb25zdCBDb250ZW50TGlzdGluZ1JpZ2h0c1BhY2thZ2UgPSAoe2RlZmF1bHRSaWdodHNQYWNrYWdlLCByaWdodHNQYWNrYWdlfSwgY29udGV4dCkgPT4ge1xuXG4gICAgbGV0IHBhY2thZ2VzID0gdW5pb25CeShyaWdodHNQYWNrYWdlLCBkZWZhdWx0UmlnaHRzUGFja2FnZSwgIFwiaWRcIik7IC8vIG92ZXJ3cml0ZSBkZWZhdWx0UmlnaHRzUGFja2FnZSBieSB1c2VyIGNob3NlbiByaWdodHNQYWNrYWdlXG4gICAgcGFja2FnZXMgPSBwYWNrYWdlcy5zb3J0KChhLGIpID0+IGEuaWQgLSBiLmlkKTsgLy9zb3J0IGJ5IGlkXG5cbiAgICByZXR1cm4gKFxuICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImxpc3RpbmctcmlnaHRzIGNvbFwiPlxuICAgICAgICAgICAge3BhY2thZ2VzLnNsaWNlKDAsNikubWFwKChycCwgaSkgPT4ge1xuICAgICAgICAgICAgICAgIGxldCBpY29uID0gJyc7XG5cbiAgICAgICAgICAgICAgICBpZiAocnAuZXhjbHVzaXZlID09IG51bGwpIHtcbiAgICAgICAgICAgICAgICAgICAgaWNvbiA9IGdyZXlNaW51c0ljb25cbiAgICAgICAgICAgICAgICB9IGVsc2UgaWYgKHJwLmV4Y2x1c2l2ZSl7XG4gICAgICAgICAgICAgICAgICAgIGljb24gPSB5ZWxsb3dDaGVja0ljb25cbiAgICAgICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICBpY29uID0gYmx1ZUNoZWNrSWNvblxuICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICAgIHJldHVybiAoXG4gICAgICAgICAgICAgICAgICAgIDxkaXYga2V5PXtpfSBjbGFzc05hbWU9XCJsaXN0aW5nLWl0ZW1cIj5cblxuICAgICAgICAgICAgICAgICAgICAgICAgPGltZyBzdHlsZT17e3dpZHRoOiAxNSwgaGVpZ2h0OiAxNSwgbWFyZ2luOiAnMCA1cHgnfX0gc3JjPXtpY29ufS8+XG5cbiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgc3R5bGU9e3tkaXNwbGF5OiAnZmxleCcsIGZsZXhEaXJlY3Rpb246IFwicm93XCJ9fT5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB7cnAuc2hvcnRMYWJlbCA9PT0gXCJQUlwiID8gY29udGV4dC50KFwiTElTVElOR19ERVRBSUxTX0VESVRFRF9QUk9HUkFNXCIpIDogcnAubmFtZX1cbiAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgICApXG4gICAgICAgICAgICB9KX1cbiAgICAgICAgPC9kaXY+XG4gICAgKTtcbn07XG5cbkNvbnRlbnRMaXN0aW5nUmlnaHRzUGFja2FnZS5jb250ZXh0VHlwZXMgPSB7XG4gICAgdDogUHJvcFR5cGVzLmZ1bmMuaXNSZXF1aXJlZFxufTtcblxuZXhwb3J0IGRlZmF1bHQgQ29udGVudExpc3RpbmdSaWdodHNQYWNrYWdlO1xuXG5cblxuLy8gV0VCUEFDSyBGT09URVIgLy9cbi8vIC4vc3JjL0FwcEJ1bmRsZS9SZXNvdXJjZXMvcHVibGljL2phdmFzY3JpcHQvYnV5L2NvbXBvbmVudHMvQ29udGVudExpc3RpbmdSaWdodHNQYWNrYWdlLmpzIiwiaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCB7IGNvbm5lY3QgfSBmcm9tIFwicmVhY3QtcmVkdXhcIjtcbmltcG9ydCBTZWxlY3QgZnJvbSAncmVhY3Qtc2VsZWN0JztcbmltcG9ydCB7dXBkYXRlRXZlbnQsIHVwZGF0ZVNwb3J0fSBmcm9tIFwiLi4vYWN0aW9ucy9maWx0ZXJBY3Rpb25zXCI7XG5pbXBvcnQge3NlYXJjaEljb259IGZyb20gXCIuLi8uLi9tYWluL2NvbXBvbmVudHMvSWNvbnNcIjtcbmltcG9ydCB7UHJvcFR5cGVzfSBmcm9tICdwcm9wLXR5cGVzJztcblxuY2xhc3MgRXZlbnRGaWx0ZXIgZXh0ZW5kcyBSZWFjdC5Db21wb25lbnQge1xuXG4gICAgY29uc3RydWN0b3IocHJvcHMpIHtcbiAgICAgICAgc3VwZXIocHJvcHMpO1xuICAgICAgICB0aGlzLnN0YXRlID0ge1xuICAgICAgICAgICAgc3BvcnRzOltdXG4gICAgICAgIH07XG5cbiAgICAgICAgdGhpcy5zZWFyY2hJY29uID0gc2VhcmNoSWNvbjtcbiAgICB9XG5cbiAgICBjb21wb25lbnREaWRNb3VudCAoKSB7XG4gICAgICAgIGlmICggQ29udGVudEFyZW5hLkRhdGEuQWN0aXZlU3BvcnRzLmxlbmd0aCA9PT0gMCkge1xuICAgICAgICAgICAgQ29udGVudEFyZW5hLkFwaS5nZXRBY3RpdmVTcG9ydHMoKS5kb25lKCAoc3BvcnRzICkgPT4ge1xuICAgICAgICAgICAgICAgIENvbnRlbnRBcmVuYS5EYXRhLkFjdGl2ZVNwb3J0cyA9IHNwb3J0cztcbiAgICAgICAgICAgICAgICB0aGlzLnNldFN0YXRlKHtzcG9ydHN9KTtcbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgdGhpcy5zZXRTdGF0ZSh7c3BvcnRzOiBDb250ZW50QXJlbmEuRGF0YS5BY3RpdmVTcG9ydHN9KTtcbiAgICAgICAgfVxuICAgIH1cblxuICAgIGNvbXBvbmVudFdpbGxSZWNlaXZlUHJvcHMobmV4dFByb3BzKSB7XG4gICAgfVxuXG4gICAgZ2V0T3B0aW9ucyA9ICgpID0+IHtcbiAgICAgICAgY29uc3Qge2ZpbHRlciA9IFtdLCBhdmFpbGFibGV9ID0gdGhpcy5wcm9wcztcbiAgICAgICAgY29uc3Qge3Nwb3J0c30gPSB0aGlzLnN0YXRlO1xuXG4gICAgICAgIGxldCBjb3VudHJpZXMgPSBzcG9ydHMuZmlsdGVyKHM9PnMubmFtZSkubWFwKChpLGspPT4oe3ZhbHVlIDogaS5uYW1lICwgbGFiZWwgOiBpLm5hbWUgfSkpO1xuXG4gICAgICAgIHJldHVybiBbLi4uW3t2YWx1ZTogbnVsbCwgbGFiZWw6ICdBbGwgc3BvcnRzJ31dLCAuLi5jb3VudHJpZXNdO1xuICAgIH07XG5cbiAgICBzaG93VGFiID0gKHRhYikgPT4ge1xuICAgICAgICB0aGlzLnNldFN0YXRlKHt0YWJ9KTtcbiAgICB9O1xuXG4gICAgc2VsZWN0U3BvcnQgPSAoZSkgPT4ge1xuXG4gICAgICAgIHRoaXMucHJvcHMuc2VsZWN0U3BvcnQoZSk7XG4gICAgfTtcblxuICAgIHVwZGF0ZUV2ZW50ID0gKGUpID0+IHtcbiAgICAgICAgdGhpcy5wcm9wcy51cGRhdGVFdmVudCh0aGlzLnJlZnMuc2VhcmNoX2ZpZWxkLnZhbHVlKTtcbiAgICB9O1xuXG4gICAgaGFuZGxlRmlsdGVyID0gKCkgPT4ge1xuICAgICAgICBjb25zdCB7b25GaWx0ZXJ9ID0gdGhpcy5wcm9wcztcbiAgICAgICAgb25GaWx0ZXIoKTtcbiAgICB9XG5cbiAgICBoYW5kbGVLZXlQcmVzcyA9IChlKSA9PiB7XG4gICAgICAgIGlmIChlLmtleSA9PT0gJ0VudGVyJykge1xuICAgICAgICAgICAgdGhpcy5oYW5kbGVGaWx0ZXIoKVxuICAgICAgICB9XG4gICAgfTtcblxuICAgIHJlbmRlcigpIHtcbiAgICAgICAgY29uc3Qge3Nwb3J0LCBldmVudH0gPSB0aGlzLnByb3BzO1xuICAgICAgICByZXR1cm4gKFxuICAgICAgICAgICAgPGRpdj5cbiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImJveFwiPlxuICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cInNlYXJjaC1idG5cIlxuICAgICAgICAgICAgICAgICAgICAgICAgIG9uQ2xpY2s9e3RoaXMuaGFuZGxlRmlsdGVyfVxuICAgICAgICAgICAgICAgICAgICA+XG4gICAgICAgICAgICAgICAgICAgICAgICA8aW1nIHNyYz17dGhpcy5zZWFyY2hJY29ufS8+XG4gICAgICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICAgICAgICA8aW5wdXRcbiAgICAgICAgICAgICAgICAgICAgICAgIGNsYXNzTmFtZT1cInNlYXJjaC1pbnB1dCBjYS1mb3JtLWNvbnRyb2xcIlxuICAgICAgICAgICAgICAgICAgICAgICAgZGVmYXVsdFZhbHVlPXtldmVudH1cbiAgICAgICAgICAgICAgICAgICAgICAgIG9uS2V5UHJlc3M9e3RoaXMuaGFuZGxlS2V5UHJlc3N9XG4gICAgICAgICAgICAgICAgICAgICAgICBvbkNoYW5nZT17dGhpcy51cGRhdGVFdmVudH1cbiAgICAgICAgICAgICAgICAgICAgICAgIHJlZj1cInNlYXJjaF9maWVsZFwiXG4gICAgICAgICAgICAgICAgICAgICAgICB0eXBlPVwidGV4dFwiXG4gICAgICAgICAgICAgICAgICAgICAgICBpZD1cImlucHV0U2VhcmNoXCJcbiAgICAgICAgICAgICAgICAgICAgICAgIG5hbWU9XCJldmVudFwiXG4gICAgICAgICAgICAgICAgICAgICAgICBwbGFjZWhvbGRlcj17dGhpcy5jb250ZXh0LnQoXCJTZWFyY2hcIiwge30sIFwiTWFya2V0cGxhY2UgLSBQbGFjZWhvbGRlciBmb3IgU2VhcmNoIGlucHV0XCIpfS8+XG4gICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJib3hcIj5cbiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJ0aXRsZVwiPlxuICAgICAgICAgICAgICAgICAgICAgICAge3RoaXMuY29udGV4dC50KFwiTUFSS0VUUExBQ0VfTEFCRUxfRklMVEVSX1NQT1JUXCIpfVxuICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cblxuICAgICAgICAgICAgICAgICAgICA8U2VsZWN0XG4gICAgICAgICAgICAgICAgICAgICAgICBuYW1lPVwiZm9ybS1maWVsZC1uYW1lXCJcbiAgICAgICAgICAgICAgICAgICAgICAgIG11bHRpPXtmYWxzZX1cbiAgICAgICAgICAgICAgICAgICAgICAgIGNsYXNzTmFtZT1cInNwb3J0LWlucHV0LWZpbHRlclwiXG4gICAgICAgICAgICAgICAgICAgICAgICBvbkNoYW5nZT17dGhpcy5zZWxlY3RTcG9ydH1cbiAgICAgICAgICAgICAgICAgICAgICAgIHZhbHVlPXtzcG9ydH1cbiAgICAgICAgICAgICAgICAgICAgICAgIG9wdGlvbnM9e3RoaXMuZ2V0T3B0aW9ucygpfVxuICAgICAgICAgICAgICAgICAgICAvPlxuICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICk7XG4gICAgfVxufVxuXG5FdmVudEZpbHRlci5jb250ZXh0VHlwZXMgPSB7XG4gICAgdDogUHJvcFR5cGVzLmZ1bmMuaXNSZXF1aXJlZFxufTtcblxuY29uc3QgbWFwU3RhdGVUb1Byb3BzID0gc3RhdGUgPT4ge1xuICAgIHJldHVybiBzdGF0ZS5maWx0ZXJcbn07XG5cbmNvbnN0IG1hcERpc3BhdGNoVG9Qcm9wcyA9IGRpc3BhdGNoID0+IHtcbiAgICByZXR1cm4ge1xuICAgICAgICBvbkNsaWNrOiBpZCA9PiBkaXNwYXRjaCh0ZXN0KGlkKSksXG4gICAgICAgIHNlbGVjdFNwb3J0IDogc3BvcnQgPT5kaXNwYXRjaCh1cGRhdGVTcG9ydChzcG9ydCkpLFxuICAgICAgICB1cGRhdGVFdmVudCA6IGV2ZW50ID0+IGRpc3BhdGNoKHVwZGF0ZUV2ZW50KGV2ZW50KSlcbiAgICB9XG59O1xuXG5cbmV4cG9ydCBkZWZhdWx0IGNvbm5lY3QoXG4gICAgbWFwU3RhdGVUb1Byb3BzLFxuICAgIG1hcERpc3BhdGNoVG9Qcm9wc1xuKShFdmVudEZpbHRlcilcblxuXG4vLyBXRUJQQUNLIEZPT1RFUiAvL1xuLy8gLi9zcmMvQXBwQnVuZGxlL1Jlc291cmNlcy9wdWJsaWMvamF2YXNjcmlwdC9idXkvY29tcG9uZW50cy9FdmVudEZpbHRlci5qcyIsImltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgeyBjb25uZWN0IH0gZnJvbSBcInJlYWN0LXJlZHV4XCI7XG5pbXBvcnQge1xuICAgIGFkZFJpZ2h0LCBjbGVhckZpbHRlciwgcmVtb3ZlUmlnaHQsIHVwZGF0ZUNvdW50cmllcywgdXBkYXRlRXhjbHVzaXZlLFxuICAgIHVwZGF0ZUluY2x1ZGVkQ291bnRyaWVzXG59IGZyb20gXCIuLi9hY3Rpb25zL2ZpbHRlckFjdGlvbnNcIjtcbmltcG9ydCBDb3VudHJ5U2VsZWN0b3IgZnJvbSBcIi4uLy4uL21haW4vY29tcG9uZW50cy9Db3VudHJ5U2VsZWN0b3JcIjtcbmltcG9ydCB7UHJvcFR5cGVzfSBmcm9tIFwicHJvcC10eXBlc1wiO1xuaW1wb3J0IFBvcHVwQ291bnRyeVNlbGVjdG9yIGZyb20gXCIuLi8uLi9tYWluL2NvbXBvbmVudHMvUG9wdXBDb3VudHJ5U2VsZWN0b3JcIjtcbmltcG9ydCB7Y2FuY2VsSWNvbn0gZnJvbSBcIi4uLy4uL21haW4vY29tcG9uZW50cy9JY29uc1wiO1xuXG5jbGFzcyBSaWdodHNGaWx0ZXIgZXh0ZW5kcyBSZWFjdC5Db21wb25lbnQge1xuXG4gICAgY29uc3RydWN0b3IocHJvcHMpIHtcbiAgICAgICAgc3VwZXIocHJvcHMpO1xuICAgICAgICB0aGlzLnN0YXRlID0ge1xuICAgICAgICB9O1xuXG4gICAgICAgIHRoaXMud29ybGR3aWRlQ291bnRyaWVzID0gMjQyO1xuICAgIH1cblxuICAgIGNvbXBvbmVudFdpbGxSZWNlaXZlUHJvcHMobmV4dFByb3BzKSB7XG4gICAgICAgIGNvbnNvbGUubG9nKFwiUmlnaHRzRmlsdGVyXCIsIG5leHRQcm9wcylcbiAgICB9XG5cbiAgICBzZWxlY3RUZXJyaXRvcnkgPSAoY291bnRyaWVzKSA9PiB7XG4gICAgICAgIGNvdW50cmllcyA9IGNvdW50cmllc1swXSA9PT0gbnVsbCA/IFtdIDogY291bnRyaWVzO1xuICAgICAgICBsZXQgaW5jbHVkZUFsbENvdW50cmllcyA9ICh0aGlzLnJlZnMuY291bnRyeVNlbGVjdG9yLnN0YXRlLnNlbGVjdGVkT3B0aW9uID09PSBcIm11bHRpcGxlXCIpO1xuICAgICAgICB0aGlzLnByb3BzLnVwZGF0ZUNvdW50cmllcyhjb3VudHJpZXMpO1xuICAgICAgICB0aGlzLnByb3BzLnVwZGF0ZUluY2x1ZGVkQ291bnRyaWVzKGluY2x1ZGVBbGxDb3VudHJpZXMpO1xuICAgIH07XG5cbiAgICByZW5kZXIoKSB7XG4gICAgICAgIGNvbnN0IHtyaWdodHMscmlnaHRzUGFja2FnZSxjb3VudHJpZXMsIG9uRmlsdGVyLCBleGNsdXNpdmUsIGNsZWFyRmlsdGVyLCBpbmNsdWRlQWxsQ291bnRyaWVzfSA9IHRoaXMucHJvcHM7XG4gICAgICAgIGxldCBjb3VudHJpZXNWYWx1ZSAgPSAoY291bnRyaWVzWzBdICYmIGNvdW50cmllc1swXSkgPyB7bGFiZWw6IGNvdW50cmllc1swXSwgdmFsdWU6IGNvdW50cmllc1swXX0gOiAnJztcblxuICAgICAgICByZXR1cm4gKFxuICAgICAgICAgICAgPGRpdj5cbiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImJveFwiPlxuICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cInRpdGxlXCI+XG4gICAgICAgICAgICAgICAgICAgICAgICB7dGhpcy5jb250ZXh0LnQoXCJNQVJLRVRQTEFDRV9MQUJFTF9GSUxURVJfVEVSUklUT1JJRVNcIil9XG4gICAgICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICAgICAgICA8ZGl2IHN0eWxlPXt7ZGlzcGxheTogJ2ZsZXgnLCBhbGlnbkl0ZW1zOiAnY2VudGVyJ319PlxuXG4gICAgICAgICAgICAgICAgICAgICAgICB7Y291bnRyaWVzLmxlbmd0aCA8PSAxICYmXG4gICAgICAgICAgICAgICAgICAgICAgICA8Q291bnRyeVNlbGVjdG9yXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgbXVsdGk9e2ZhbHNlfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNsYXNzTmFtZT17XCJiYXNlLWlucHV0LXNlbGVjdFwifVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhbHVlPXtjb3VudHJpZXNWYWx1ZX1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBvbkNoYW5nZT17KGMpPT57XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuc2VsZWN0VGVycml0b3J5KFtjXSlcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9fS8+XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgICAgICAgICAgIHtjb3VudHJpZXMubGVuZ3RoID4gMSAmJiBjb3VudHJpZXMubGVuZ3RoICE9PSB0aGlzLndvcmxkd2lkZUNvdW50cmllcyAmJlxuICAgICAgICAgICAgICAgICAgICAgICAgPGlucHV0IHR5cGU9XCJ0ZXh0XCIgY2xhc3NOYW1lPVwiY2EtZm9ybS1jb250cm9sXCIgdmFsdWU9e2NvdW50cmllcy5sZW5ndGggK1wiIHRlcnJpdG9yaWVzXCJ9IGRpc2FibGVkLz5cbiAgICAgICAgICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICAgICAgICAgICAge2NvdW50cmllcy5sZW5ndGggPT09IHRoaXMud29ybGR3aWRlQ291bnRyaWVzICYmXG4gICAgICAgICAgICAgICAgICAgICAgICA8aW5wdXQgdHlwZT1cInRleHRcIiBjbGFzc05hbWU9XCJjYS1mb3JtLWNvbnRyb2xcIiB2YWx1ZT17XCJXb3JsZHdpZGVcIn0gcmVhZG9ubHkvPlxuICAgICAgICAgICAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgICAgICAgICAgICB7Y291bnRyaWVzLmxlbmd0aCA+IDEgJiZcbiAgICAgICAgICAgICAgICAgICAgICAgIDxpbWcgY2xhc3NOYW1lPVwidGVycml0b3JpZXMtaWNvblwiIHNyYz17Y2FuY2VsSWNvbn1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgb25DbGljaz17KCk9PntcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuc2VsZWN0VGVycml0b3J5KFtdKVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9fS8+XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgICAgICAgICAgIDxQb3B1cENvdW50cnlTZWxlY3RvciByZWY9XCJjb3VudHJ5U2VsZWN0b3JcIlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhbHVlPXtjb3VudHJpZXN9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaW5jbHVkZUFsbENvdW50cmllcz17aW5jbHVkZUFsbENvdW50cmllc31cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBvblNlbGVjdD17dGhpcy5zZWxlY3RUZXJyaXRvcnl9XG4gICAgICAgICAgICAgICAgICAgICAgICAvPlxuXG4gICAgICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiYm94XCI+XG4gICAgICAgICAgICAgICAgICAgIDxkaXYgaWQ9XCJyaWdodHMtcGFja2FnZXNcIiBjbGFzc05hbWU9e1wiZmlsdGVyLXJpZ2h0c1wifT5cbiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwidGl0bGVcIj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB7dGhpcy5jb250ZXh0LnQoXCJNQVJLRVRQTEFDRV9MQUJFTF9GSUxURVJfUklHSFRTXCIpfVxuICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcmlnaHRzUGFja2FnZSAmJiByaWdodHNQYWNrYWdlLm1hcCgocmlnaHQsaSkgPT4ge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gKFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBrZXk9e3JpZ2h0LmlkfSBjbGFzc05hbWU9XCJmaWx0ZXItcmlnaHRcIj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aW5wdXRcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY2xhc3NOYW1lPSdjYS1jaGVja2JveCBjaGVja2JveC1pdGVtJ1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0eXBlPSdjaGVja2JveCdcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY2hlY2tlZD17cmlnaHRzLmluZGV4T2YocmlnaHQuaWQpICE9PSAtMX1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgb25DaGFuZ2U9eyhlKSA9PiB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoIGUudGFyZ2V0LmNoZWNrZWQgKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5wcm9wcy5hZGRSaWdodChyaWdodC5pZClcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5wcm9wcy5yZW1vdmVSaWdodChyaWdodC5pZClcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfX1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaWQ9e3JpZ2h0LmlkfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxhYmVsIGh0bWxGb3I9e3JpZ2h0LmlkfT5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAge3JpZ2h0Lm5hbWV9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9sYWJlbD5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICApXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfSlcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgc3R5bGU9e3tiYWNrZ3JvdW5kOiAnIzk5OScsIGhlaWdodDogMSwgbWFyZ2luOiAnMjBweCAwJ319IC8+XG5cbiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiZmlsdGVyLXJpZ2h0XCI+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPGlucHV0XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHR5cGU9XCJjaGVja2JveFwiXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNoZWNrZWQ9e2V4Y2x1c2l2ZX1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY2xhc3NOYW1lPVwiY2EtY2hlY2tib3ggY2hlY2tib3gtaXRlbVwiXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG9uQ2hhbmdlPXsoZSkgPT4ge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5wcm9wcy51cGRhdGVFeGNsdXNpdmUoZS50YXJnZXQuY2hlY2tlZClcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfX1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAvPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHt0aGlzLmNvbnRleHQudChcIk1BUktFVFBMQUNFX0xBQkVMX0ZJTFRFUl9FWENMVVNJVkVcIil9XG4gICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgICAgICAgPC9kaXY+XG5cbiAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImJveFwiPlxuICAgICAgICAgICAgICAgICAgICA8ZGl2IHN0eWxlPXt7XG4gICAgICAgICAgICAgICAgICAgICAgICBkaXNwbGF5OiAnZmxleCcsXG4gICAgICAgICAgICAgICAgICAgICAgICBhbGlnbkl0ZW1zOiAnY2VudGVyJyxcbiAgICAgICAgICAgICAgICAgICAgICAgIGZsZXhEaXJlY3Rpb246ICdjb2x1bW4nXG4gICAgICAgICAgICAgICAgICAgIH19PlxuICAgICAgICAgICAgICAgICAgICAgICAgPGJ1dHRvbiBjbGFzc05hbWU9XCJjYS1idG4gY2EtYnRuLXByaW1hcnlcIiBzdHlsZT17e21hcmdpbjo1fX0gb25DbGljaz17b25GaWx0ZXJ9PlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHt0aGlzLmNvbnRleHQudChcIk1BUktFVFBMQUNFX0JVVFRPTl9BUFBMWVwiKX1cbiAgICAgICAgICAgICAgICAgICAgICAgIDwvYnV0dG9uPlxuICAgICAgICAgICAgICAgICAgICAgICAgPGJ1dHRvbiBjbGFzc05hbWU9XCJjYS1idG4gY2EtYnRuLWxpbmtcIiBzdHlsZT17e21hcmdpbjo1fX0gb25DbGljaz17Y2xlYXJGaWx0ZXJ9PlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHt0aGlzLmNvbnRleHQudChcIk1BUktFVFBMQUNFX0JVVFRPTl9DTEVBUlwiKX1cbiAgICAgICAgICAgICAgICAgICAgICAgIDwvYnV0dG9uPlxuICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICApO1xuICAgIH1cbn1cblxuUmlnaHRzRmlsdGVyLmNvbnRleHRUeXBlcyA9IHtcbiAgICB0OiBQcm9wVHlwZXMuZnVuYy5pc1JlcXVpcmVkXG59O1xuXG5cbmNvbnN0IG1hcFN0YXRlVG9Qcm9wcyA9IHN0YXRlID0+IHtcbiAgICByZXR1cm4gc3RhdGUuZmlsdGVyXG59O1xuXG5jb25zdCBtYXBEaXNwYXRjaFRvUHJvcHMgPSBkaXNwYXRjaCA9PiB7XG4gICAgcmV0dXJuIHtcbiAgICAgICAgYWRkUmlnaHQ6IGlkID0+IGRpc3BhdGNoKGFkZFJpZ2h0KGlkKSksXG4gICAgICAgIHJlbW92ZVJpZ2h0OiBpZCA9PiBkaXNwYXRjaChyZW1vdmVSaWdodChpZCkpLFxuICAgICAgICB1cGRhdGVDb3VudHJpZXM6IGNvdW50cmllcyA9PiBkaXNwYXRjaCh1cGRhdGVDb3VudHJpZXMoY291bnRyaWVzKSksXG4gICAgICAgIHVwZGF0ZUV4Y2x1c2l2ZTogZXhjbHVzaXZlID0+IGRpc3BhdGNoKHVwZGF0ZUV4Y2x1c2l2ZShleGNsdXNpdmUpKSxcbiAgICAgICAgdXBkYXRlSW5jbHVkZWRDb3VudHJpZXM6IGluY2x1ZGVBbGxDb3VudHJpZXMgPT4gZGlzcGF0Y2godXBkYXRlSW5jbHVkZWRDb3VudHJpZXMoaW5jbHVkZUFsbENvdW50cmllcykpLFxuICAgICAgICBjbGVhckZpbHRlciA6ICgpID0+IGRpc3BhdGNoKGNsZWFyRmlsdGVyKCkpXG4gICAgfVxufTtcblxuZXhwb3J0IGRlZmF1bHQgY29ubmVjdChcbiAgICBtYXBTdGF0ZVRvUHJvcHMsXG4gICAgbWFwRGlzcGF0Y2hUb1Byb3BzXG4pKFJpZ2h0c0ZpbHRlcilcblxuXG4vLyBXRUJQQUNLIEZPT1RFUiAvL1xuLy8gLi9zcmMvQXBwQnVuZGxlL1Jlc291cmNlcy9wdWJsaWMvamF2YXNjcmlwdC9idXkvY29tcG9uZW50cy9SaWdodHNGaWx0ZXIuanMiLCJpbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xuaW1wb3J0IHsgY29ubmVjdCB9IGZyb20gXCJyZWFjdC1yZWR1eFwiO1xuaW1wb3J0IHsgdGVzdCB9IGZyb20gXCIuLi9hY3Rpb25zXCI7XG5pbXBvcnQgU2FsZXNQYWNrYWdlcyBmcm9tIFwiLi9TYWxlc1BhY2thZ2VzXCI7XG5pbXBvcnQge1Byb3BUeXBlc30gZnJvbSBcInByb3AtdHlwZXNcIjtcblxuY2xhc3MgQ29tbWVyY2lhbFRlcm1zIGV4dGVuZHMgUmVhY3QuQ29tcG9uZW50IHtcblxuICAgIGNvbnN0cnVjdG9yKHByb3BzKSB7XG4gICAgICAgIHN1cGVyKHByb3BzKTtcbiAgICAgICAgdGhpcy5zdGF0ZSA9IHtcblxuICAgICAgICB9O1xuICAgICAgICB0aGlzLm5vSW5mb1RleHQgPSBcIk5vIGluZm9ybWF0aW9uIGF2YWlsYWJsZVwiO1xuICAgIH1cblxuICAgIHJlbmRlcigpIHtcbiAgICAgICAgY29uc3Qge3NhbGVzUGFja2FnZXMsIG9uU2VsZWN0UGFja2FnZSwgcHJvZ3JhbURlc2NyaXB0aW9uLCBwcm9maWxlLCBjdXN0b21JZH0gPSB0aGlzLnByb3BzO1xuICAgICAgICByZXR1cm4gKFxuICAgICAgICAgICAgPGRpdiBzdHlsZT17eyBtYXJnaW5Ub3A6IDI1IH19PlxuXG4gICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJmdWxsLWl0ZW0tYm94XCI+XG4gICAgICAgICAgICAgICAgICAgIDxsYWJlbD5cbiAgICAgICAgICAgICAgICAgICAgICAgIHt0aGlzLmNvbnRleHQudChcIkxJU1RJTkdfREVUQUlMU19FVkVOVF9USVRMRV9QUk9HUkFNX0RFU0NSSVBUSU9OXCIpfVxuICAgICAgICAgICAgICAgICAgICA8L2xhYmVsPlxuICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImZ1bGwtaXRlbS1jb250ZW50XCI+XG4gICAgICAgICAgICAgICAgICAgICAgICB7cHJvZ3JhbURlc2NyaXB0aW9uICYmIHByb2dyYW1EZXNjcmlwdGlvbn1cbiAgICAgICAgICAgICAgICAgICAgICAgIHshcHJvZ3JhbURlc2NyaXB0aW9uICYmIHRoaXMubm9JbmZvVGV4dH1cbiAgICAgICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgICAgPC9kaXY+XG5cbiAgICAgICAgICAgICAgICA8U2FsZXNQYWNrYWdlc1xuICAgICAgICAgICAgICAgICAgICBsaXN0aW5nSWQ9e2N1c3RvbUlkfVxuICAgICAgICAgICAgICAgICAgICBwcm9maWxlPXtwcm9maWxlfVxuICAgICAgICAgICAgICAgICAgICBvblNlbGVjdFBhY2thZ2U9e29uU2VsZWN0UGFja2FnZX1cbiAgICAgICAgICAgICAgICAgICAgc2FsZXNQYWNrYWdlcz17c2FsZXNQYWNrYWdlc30vPlxuICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICk7XG4gICAgfVxufVxuXG5Db21tZXJjaWFsVGVybXMuY29udGV4dFR5cGVzID0ge1xuICAgIHQ6IFByb3BUeXBlcy5mdW5jLmlzUmVxdWlyZWRcbn07XG5cbmNvbnN0IG1hcFN0YXRlVG9Qcm9wcyA9IHN0YXRlID0+IHtcbiAgICByZXR1cm4gc3RhdGVcbn07XG5cbmNvbnN0IG1hcERpc3BhdGNoVG9Qcm9wcyA9IGRpc3BhdGNoID0+IHtcbiAgICByZXR1cm4ge1xuICAgICAgICBvbkNsaWNrOiBpZCA9PiBkaXNwYXRjaCh0ZXN0KGlkKSlcbiAgICB9XG59O1xuXG5cbmV4cG9ydCBkZWZhdWx0IGNvbm5lY3QoXG4gICAgbWFwU3RhdGVUb1Byb3BzLFxuICAgIG1hcERpc3BhdGNoVG9Qcm9wc1xuKShDb21tZXJjaWFsVGVybXMpXG5cblxuLy8gV0VCUEFDSyBGT09URVIgLy9cbi8vIC4vc3JjL0FwcEJ1bmRsZS9SZXNvdXJjZXMvcHVibGljL2phdmFzY3JpcHQvYnV5L2NvbnRhaW5lcnMvQ29tbWVyY2lhbFRlcm1zLmpzIiwiaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCB7IGNvbm5lY3QgfSBmcm9tIFwicmVhY3QtcmVkdXhcIjtcbmltcG9ydCB7IHRlc3QgfSBmcm9tIFwiLi4vYWN0aW9uc1wiO1xuaW1wb3J0IHsgU3RhdGljU2NoZWR1bGVzIH0gZnJvbSBcIi4uLy4uL3NlbGwvY29tcG9uZW50cy9TZWxsRm9ybUl0ZW1zXCI7XG5pbXBvcnQge1Byb3BUeXBlc30gZnJvbSBcInByb3AtdHlwZXNcIjtcblxuY2xhc3MgQ29udGVudEluZm9ybWF0aW9uIGV4dGVuZHMgUmVhY3QuQ29tcG9uZW50IHtcblxuICAgIGNvbnN0cnVjdG9yKHByb3BzKSB7XG4gICAgICAgIHN1cGVyKHByb3BzKTtcbiAgICAgICAgdGhpcy5zdGF0ZSA9IHtcbiAgICAgICAgICAgIHNlYXNvbnMgOiBwcm9wcy5zZWFzb25zXG4gICAgICAgIH07XG4gICAgICAgIHRoaXMuYmFzZURpciA9IGFzc2V0c0Jhc2VEaXIgKyBcIi4uL1wiO1xuICAgICAgICB0aGlzLnBkZkljb24gPSBhc3NldHNCYXNlRGlyICsgXCJhcHAvaW1hZ2VzL3BkZi5wbmdcIjtcbiAgICB9XG5cbiAgICBjb21wb25lbnREaWRNb3VudCgpIHtcbiAgICAgICAgdGhpcy5sb2FkU2NoZWR1bGUoKTtcbiAgICB9XG5cbiAgICBjb21wb25lbnRXaWxsUmVjZWl2ZVByb3BzKG5leHRQcm9wcykge31cblxuICAgIGxvYWRTY2hlZHVsZSAoKSB7XG5cbiAgICAgICAgbGV0IF90aGlzID0gdGhpcztcbiAgICAgICAgY29uc3QgeyBzZWFzb25zLCBzY2hlZHVsZXNCeVNlYXNvbiB9ID0gdGhpcy5wcm9wcztcblxuICAgICAgICBzZWFzb25zLmZvckVhY2goKCBzZWFzb24sIGluZGV4ICkgPT57XG4gICAgICAgICAgICBpZiAoICFzZWFzb24uc2NoZWR1bGVzICYmICFzZWFzb24uY3VzdG9tICl7XG4gICAgICAgICAgICAgICAgX3RoaXMuc2V0U3RhdGUoeyBsb2FkaW5nU2NoZWR1bGUgOiB0cnVlIH0pO1xuICAgICAgICAgICAgICAgIENvbnRlbnRBcmVuYS5BcGkuZ2V0U2NoZWR1bGUoc2Vhc29uLmV4dGVybmFsSWQpLmRvbmUoIChzY2hlZHVsZXMgKSA9PiB7XG4gICAgICAgICAgICAgICAgICAgIF90aGlzLnNldFN0YXRlKHsgbG9hZGluZ1NjaGVkdWxlIDogZmFsc2UgfSk7XG4gICAgICAgICAgICAgICAgICAgIGxldCBrZXlzID0gW107XG4gICAgICAgICAgICAgICAgICAgIGlmIChzY2hlZHVsZXNCeVNlYXNvbiAmJiBzY2hlZHVsZXNCeVNlYXNvbltpbmRleF0pe1xuICAgICAgICAgICAgICAgICAgICAgICAga2V5cyA9IE9iamVjdC5rZXlzKHNjaGVkdWxlc0J5U2Vhc29uW2luZGV4XSk7XG4gICAgICAgICAgICAgICAgICAgICAgICBrZXlzLmZvckVhY2goKGspPT57XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgc2NoZWR1bGVzQnlTZWFzb25baW5kZXhdW2tdLm1hdGNoZXMuZm9yRWFjaCgobSk9PntcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKG0uc2VsZWN0ZWQpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNjaGVkdWxlc1trXS5tYXRjaGVzLmdldChtLmV4dGVybmFsSWQpLnNlbGVjdGVkID0gdHJ1ZTtcblxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgc2NoZWR1bGVzW2tdLnNlbGVjdGVkID0gdHJ1ZTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgICAgICAgbGV0IHRlbXBTZWFzb25zICA9IF90aGlzLnN0YXRlLnNlYXNvbnM7XG4gICAgICAgICAgICAgICAgICAgIHRlbXBTZWFzb25zW2luZGV4XS5zY2hlZHVsZXMgPSBzY2hlZHVsZXM7XG4gICAgICAgICAgICAgICAgICAgIGlmKCBrZXlzLmxlbmd0aD4gMCkgdGVtcFNlYXNvbnNbaW5kZXhdLnNob3djaGVkdWxlcyA9IHRydWU7XG5cbiAgICAgICAgICAgICAgICAgICAgX3RoaXMuc2V0U3RhdGUoe1xuICAgICAgICAgICAgICAgICAgICAgICAgc2Vhc29uczogdGVtcFNlYXNvbnNcbiAgICAgICAgICAgICAgICAgICAgfSk7XG5cbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSk7XG4gICAgfVxuXG4gICAgcmVuZGVyKCkge1xuICAgICAgICBjb25zdCB7ZGVzY3JpcHRpb24sIHdlYnNpdGUsIGF0dGFjaG1lbnRzIH09IHRoaXMucHJvcHM7XG4gICAgICAgIGNvbnN0IHtzZWFzb25zIH09IHRoaXMuc3RhdGU7XG4gICAgICAgIHJldHVybiAoXG4gICAgICAgICAgICA8ZGl2IHN0eWxlPXt7bWFyZ2luVG9wOiAyMH19PlxuXG4gICAgICAgICAgICAgICAgey8qU0VBU09OL0ZJWFRVUkVTKi99XG4gICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICBzZWFzb25zICYmIHNlYXNvbnMubGVuZ3RoID4gMCAmJiBzZWFzb25zLm1hcCgoc2Vhc29uLCBrZXkpICA9PiB7XG4gICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gPGRpdiBrZXk9e1wic2Vhc29uLVwiICsga2V5fSBjbGFzc05hbWU9XCJzZWFzb24tZGV0YWlsc1wiPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwic2Vhc29uLW5hbWVcIj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAge3RoaXMuY29udGV4dC50KFwiTElTVElOR19ERVRBSUxTX0VWRU5UX1RJVExFX1NFQVNPTlwiKX0ge3NlYXNvbi5uYW1lfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHsoICFzZWFzb24uZml4dHVyZXMgfHwgc2Vhc29uLmZpeHR1cmVzLmxlbmd0aCA9PT0gMCkgJiYgPFN0YXRpY1NjaGVkdWxlcyBzZWFzb249e2tleX0gc2Vhc29ucz17c2Vhc29uc30vPn1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB7IHNlYXNvbi5maXh0dXJlcyAmJiBzZWFzb24uZml4dHVyZXMubGVuZ3RoID4gMCAmJlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwic2NoZWR1bGVcIj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAge3NlYXNvbi5maXh0dXJlcy5tYXAoZml4dHVyZSA9PiB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gPGRpdiBjbGFzc05hbWU9XCJtYXRjaGRheVwiPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHtmaXh0dXJlLm5hbWV9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj59KX1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj59XG4gICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgICAgICAgfSlcbiAgICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgICB7LypERVNDUklQVElPTlMqL31cbiAgICAgICAgICAgICAgICB7ZGVzY3JpcHRpb24gJiYgKFxuICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImZ1bGwtaXRlbS1ib3hcIj5cbiAgICAgICAgICAgICAgICAgICAgICAgIDxsYWJlbD5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB7dGhpcy5jb250ZXh0LnQoXCJMSVNUSU5HX0RFVEFJTFNfRVZFTlRfVElUTEVfREVTQ1JJUFRJT05cIil9XG4gICAgICAgICAgICAgICAgICAgICAgICA8L2xhYmVsPlxuICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJmdWxsLWl0ZW0tY29udGVudFwiPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHtkZXNjcmlwdGlvbn1cbiAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgICApfVxuXG5cbiAgICAgICAgICAgICAgICB7LypXRUJTSVRFKi99XG4gICAgICAgICAgICAgICAge3dlYnNpdGUgJiYgKFxuICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImZ1bGwtaXRlbS1ib3hcIlxuICAgICAgICAgICAgICAgICAgICAgICAgIHN0eWxlPXt7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgIGZsZXhEaXJlY3Rpb24gOiAncm93JyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgd2lkdGggOiAnNzAlJ1xuICAgICAgICAgICAgICAgICAgICAgICAgIH19PlxuICAgICAgICAgICAgICAgICAgICAgICAgPGxhYmVsPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHt0aGlzLmNvbnRleHQudChcIkxJU1RJTkdfREVUQUlMU19FVkVOVF9USVRMRV9XRUJTSVRFXCIpfVxuICAgICAgICAgICAgICAgICAgICAgICAgPC9sYWJlbD5cbiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgc3R5bGU9e3sgcGFkZGluZzogMTIsIGJvcmRlcjogJzFweCBzb2xpZCBsaWdodGdyZXknLCBtYXJnaW5MZWZ0OiAzLCBtaW5XaWR0aDogMjIwfX0+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAge3dlYnNpdGUgJiYgd2Vic2l0ZS5tYXAod2Vic2l0ZT0+e1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gPGRpdj48YSB0YXJnZXQ9XCJfYmxhbmtcIiBocmVmPXt3ZWJzaXRlfT57d2Vic2l0ZX08L2E+PC9kaXY+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfSl9XG4gICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgICAgKX1cblxuICAgICAgICAgICAgICAgIHsvKkFUVEFDSE1FTlRTKi99XG4gICAgICAgICAgICAgICAge2F0dGFjaG1lbnRzICYmIGF0dGFjaG1lbnRzLmxlbmd0aCA+IDAgJiYgKFxuICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImZ1bGwtaXRlbS1ib3hcIlxuICAgICAgICAgICAgICAgICAgICAgICAgIHN0eWxlPXt7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgIGZsZXhEaXJlY3Rpb24gOiAncm93JyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgd2lkdGggOiAnNzAlJ1xuICAgICAgICAgICAgICAgICAgICAgICAgIH19PlxuICAgICAgICAgICAgICAgICAgICAgICAgPGxhYmVsIHN0eWxlPXt7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaGVpZ2h0OiAnYXV0bydcbiAgICAgICAgICAgICAgICAgICAgICAgIH19PlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHt0aGlzLmNvbnRleHQudChcIkxJU1RJTkdfREVUQUlMU19FVkVOVF9USVRMRV9BVFRBQ0hNRU5UU1wiKX1cbiAgICAgICAgICAgICAgICAgICAgICAgIDwvbGFiZWw+XG4gICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IHN0eWxlPXt7ZGlzcGxheSA6IFwiZmxleFwiLCBmbGV4RGlyZWN0aW9uOiAnY29sdW1uJ319PnthdHRhY2htZW50cy5tYXAoYT0+e1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiA8ZGl2IG9uQ2xpY2s9eygpPT57fX0gc3R5bGU9e3tcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcGFkZGluZzogMTIsIGJvcmRlcjogJzFweCBzb2xpZCBsaWdodGdyZXknLCBtYXJnaW5MZWZ0OiAzLCBtaW5XaWR0aDogMjIwLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBkaXNwbGF5OiAnZmxleCdcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9fT5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGEgZG93bmxvYWQ9e2EubmFtZX0gdGFyZ2V0PVwiX2JsYW5rXCIgaHJlZj17dGhpcy5iYXNlRGlyICsgYS5maWxlfSBzdHlsZT17e1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZGlzcGxheTogJ2lubGluZS1mbGV4JyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHBhZGRpbmdSaWdodDogMzBcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfX0+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aW1nIHN0eWxlPXt7IG1hcmdpbjogJy0ycHggNXB4IDAgMCd9fSBzcmM9e3RoaXMucGRmSWNvbn0vPiAge2EubmFtZX1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9hPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICAgICAgICAgICAgfSl9PC9kaXY+XG4gICAgICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICAgICl9XG5cblxuXG4gICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgKTtcbiAgICB9XG59XG5cbkNvbnRlbnRJbmZvcm1hdGlvbi5jb250ZXh0VHlwZXMgPSB7XG4gICAgdDogUHJvcFR5cGVzLmZ1bmMuaXNSZXF1aXJlZFxufTtcblxuY29uc3QgbWFwU3RhdGVUb1Byb3BzID0gc3RhdGUgPT4ge1xuICAgIHJldHVybiBzdGF0ZVxufTtcblxuY29uc3QgbWFwRGlzcGF0Y2hUb1Byb3BzID0gZGlzcGF0Y2ggPT4ge1xuICAgIHJldHVybiB7XG4gICAgICAgIG9uQ2xpY2s6IGlkID0+IGRpc3BhdGNoKHRlc3QoaWQpKVxuICAgIH1cbn07XG5cblxuZXhwb3J0IGRlZmF1bHQgY29ubmVjdChcbiAgICBtYXBTdGF0ZVRvUHJvcHMsXG4gICAgbWFwRGlzcGF0Y2hUb1Byb3BzXG4pKENvbnRlbnRJbmZvcm1hdGlvbilcblxuXG4vLyBXRUJQQUNLIEZPT1RFUiAvL1xuLy8gLi9zcmMvQXBwQnVuZGxlL1Jlc291cmNlcy9wdWJsaWMvamF2YXNjcmlwdC9idXkvY29udGFpbmVycy9Db250ZW50SW5mb3JtYXRpb24uanMiLCJpbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xuaW1wb3J0IHsgY29ubmVjdCB9IGZyb20gXCJyZWFjdC1yZWR1eFwiO1xuaW1wb3J0IHsgdGVzdCB9IGZyb20gXCIuLi9hY3Rpb25zXCI7XG5pbXBvcnQgQ29tbWVyY2lhbFRlcm1zIGZyb20gXCIuL0NvbW1lcmNpYWxUZXJtc1wiO1xuaW1wb3J0IENvbnRlbnRJbmZvcm1hdGlvbiBmcm9tIFwiLi9Db250ZW50SW5mb3JtYXRpb25cIjtcbmltcG9ydCBUZXJtU2hlZXQgZnJvbSBcIi4vVGVybVNoZWV0XCI7XG5pbXBvcnQgUHJvZ3JhbURldGFpbHMgZnJvbSBcIi4vUHJvZ3JhbURldGFpbHNcIjtcbmltcG9ydCBTZWxsZXIgZnJvbSBcIi4vU2VsbGVyXCI7XG5pbXBvcnQgTW9tZW50IGZyb20gXCJtb21lbnQvbW9tZW50XCI7XG5pbXBvcnQge0xpbmssIFJvdXRlfSBmcm9tICdyZWFjdC1yb3V0ZXItZG9tJztcbmltcG9ydCBDb250ZW50TGlzdGluZ0V2ZW50RGV0YWlscyBmcm9tIFwiLi4vLi4vYnV5L2NvbXBvbmVudHMvQ29udGVudExpc3RpbmdFdmVudERldGFpbHNcIjtcbmltcG9ydCBEaWdpdGFsU2lnbmF0dXJlIGZyb20gXCIuLi8uLi9tYWluL2NvbXBvbmVudHMvRGlnaXRhbFNpZ25hdHVyZVwiO1xuaW1wb3J0IFNlbmRNZXNzYWdlIGZyb20gXCIuLi8uLi9tYWluL2NvbXBvbmVudHMvU2VuZE1lc3NhZ2VcIjtcbmltcG9ydCB7XG4gICAgZ2V0Q3VycmVuY3lTeW1ib2wsIGdldEZ1bGxOYW1lLCBnb1RvLCBnb1RvQ2xvc2VkRGVhbHMsIGdvVG9MaXN0aW5nLFxuICAgIGdvVG9NYXJrZXRwbGFjZSwgdmlld0xpY2Vuc2UsIHZpZXdMaWNlbnNlQ3VzdG9tXG59IGZyb20gXCIuLi8uLi9tYWluL2FjdGlvbnMvdXRpbHNcIjtcbmltcG9ydCB7Y3VzdG9tU3R5bGVzfSBmcm9tIFwiLi4vLi4vbWFpbi9zdHlsZXMvY3VzdG9tXCI7XG5pbXBvcnQge2NvbXBhbnlJc1ZhbGlkfSBmcm9tIFwiLi4vLi4vc2VsbC9hY3Rpb25zL3ZhbGlkYXRpb25BY3Rpb25zXCI7XG5pbXBvcnQgTW9kYWwgZnJvbSAncmVhY3QtbW9kYWwnO1xuaW1wb3J0IENvdW50cnlTZWxlY3RvciBmcm9tIFwiLi4vLi4vbWFpbi9jb21wb25lbnRzL0NvdW50cnlTZWxlY3RvclwiO1xuaW1wb3J0IFJlYWN0VG9vbHRpcCBmcm9tICdyZWFjdC10b29sdGlwJ1xuaW1wb3J0IHtQcm9wVHlwZXN9IGZyb20gXCJwcm9wLXR5cGVzXCI7XG5jb25zdCBsYWJlbFN0eWxlID0geyBoZWlnaHQ6IFwiMzBweFwiLCBmb250U2l6ZTogXCIxMnB4XCIsIHdpZHRoOiAnNDAwcHgnfTtcbmNvbnN0IGlucHV0U3R5bGUgPSB7IHdpZHRoOiAnMzgwcHgnLCBtYXJnaW46IDAsIGhlaWdodDogXCIzMHB4XCJ9O1xuY29uc3QgYmlkQnV0dG9uU3R5bGUgPSB7IGhlaWdodDogMzQsIHdpZHRoOiA3NSwgcGFkZGluZzogNSwgbWFyZ2luTGVmdDogMTAsIGZvbnRTaXplOiAxNCwgbWFyZ2luUmlnaHQ6IDEwIH07XG5jb25zdCBiaWRUZXh0Qm94U3R5bGUgPSB7XG4gICAgYmFja2dyb3VuZENvbG9yOiBcIiNmZmZcIixcbiAgICBwYWRkaW5nOiAnNXB4IDEwcHgnLFxuICAgIGJvcmRlcjogJzFweCBzb2xpZCBsaWdodGdyZXknLFxuICAgIG1hcmdpbkxlZnQ6IDVcbn07XG5cbmNsYXNzIExpc3RpbmdEZXRhaWxzIGV4dGVuZHMgUmVhY3QuQ29tcG9uZW50IHtcblxuICAgIGNvbnN0cnVjdG9yKHByb3BzKSB7XG4gICAgICAgIHN1cGVyKHByb3BzKTtcblxuICAgICAgICBsZXQgbGlzdGluZyA9IENvbnRlbnRBcmVuYS5VdGlscy5jb250ZW50UGFyc2VyRnJvbVNlcnZlcihwcm9wcy5saXN0aW5nKSB8fCB7fTtcblxuICAgICAgICB0aGlzLnN0YXRlID0ge1xuICAgICAgICAgICAgY29udGVudCA6IGxpc3RpbmcsXG4gICAgICAgICAgICBjb21wYW55OiBwcm9wcy5jb21wYW55LFxuICAgICAgICAgICAgc3Bpbm5lciA6IGZhbHNlLFxuICAgICAgICAgICAgdGFiIDogcHJvcHMudGFiIHx8IFwiYnVuZGxlc1wiLFxuICAgICAgICAgICAgYnV5aW5nTW9kZSA6IHByb3BzLnRhYiAmJiBwcm9wcy50YWIgPT09IFwiY2hlY2tvdXRcIixcbiAgICAgICAgICAgIHNvbGRPdXQgIDogZmFsc2UsXG4gICAgICAgICAgICBzZWxlY3RlZFBhY2thZ2UgOiAoIHByb3BzLnRhYiAmJiBwcm9wcy50YWIgPT09IFwiY2hlY2tvdXRcIikgPyBsaXN0aW5nLnNhbGVzUGFja2FnZXMuZmluZChzcD0+c3AuaWQ9PXByb3BzLmJ1bmRsZSkgOiB7fSxcbiAgICAgICAgICAgIHRlcnJpdG9yaWVzTGlzdDogW10sXG4gICAgICAgICAgICBlZGl0Q29tcGFueU9wZW4gOiBmYWxzZSxcbiAgICAgICAgICAgIGJpZFVwZGF0ZWQgOiBmYWxzZVxuICAgICAgICB9O1xuICAgICAgICB0aGlzLmJsdWVDaGVjayA9IGFzc2V0c0Jhc2VEaXIgKyBcImFwcC9pbWFnZXMvYmx1ZV9jaGVjay5wbmdcIjtcbiAgICAgICAgdGhpcy5jaGVja0ljb24gPSBhc3NldHNCYXNlRGlyICsgXCJhcHAvaW1hZ2VzL2NoZWNrLnBuZ1wiO1xuICAgICAgICB0aGlzLnllbGxvd0NoZWNrID0gYXNzZXRzQmFzZURpciArIFwiYXBwL2ltYWdlcy95ZWxsb3dfY2hlY2gucG5nXCI7XG4gICAgICAgIHRoaXMuY29udGFjdEljb24gPSBhc3NldHNCYXNlRGlyICsgXCJhcHAvaW1hZ2VzL2VudmVsb3BlLnBuZ1wiO1xuICAgICAgICB0aGlzLndhdGNobGlzdEljb24gPSBhc3NldHNCYXNlRGlyICsgXCJhcHAvaW1hZ2VzL3dhdGNobGlzdC5wbmdcIjtcbiAgICAgICAgdGhpcy5iaWRJY29uID0gYXNzZXRzQmFzZURpciArIFwiYXBwL2ltYWdlcy9oYW1tZXIucG5nXCI7XG4gICAgICAgIHRoaXMucGFja2FnZUljb24gPSBhc3NldHNCYXNlRGlyICsgXCJhcHAvaW1hZ2VzL2JpZC5wbmdcIjtcbiAgICAgICAgdGhpcy5pbmZvSWNvbiA9IGFzc2V0c0Jhc2VEaXIgKyBcImFwcC9pbWFnZXMvaW5mby5wbmdcIjtcbiAgICAgICAgdGhpcy5wZGZJY29uID0gYXNzZXRzQmFzZURpciArIFwiYXBwL2ltYWdlcy9wZGYucG5nXCI7XG4gICAgICAgIHRoaXMuZHJhZnRJY29uID0gYXNzZXRzQmFzZURpciArIFwiYXBwL2ltYWdlcy9kcmFmdC5wbmdcIjtcbiAgICAgICAgdGhpcy5iYXNlRGlyID0gYXNzZXRzQmFzZURpciArIFwiLi4vXCI7XG4gICAgfVxuXG4gICAgY29tcG9uZW50RGlkTW91bnQgKCl7XG4gICAgICAgIGNvbnN0IHtzYWxlc1BhY2thZ2V9ID0gdGhpcy5wcm9wcztcbiAgICAgICAgY29uc3Qge2NvbnRlbnR9ID0gdGhpcy5zdGF0ZTtcbiAgICAgICAgbGV0IHNlbGVjdGVkUGFja2FnZTtcblxuICAgICAgICBpZiAoc2FsZXNQYWNrYWdlKXtcbiAgICAgICAgICAgIHNlbGVjdGVkUGFja2FnZSA9IGNvbnRlbnQuc2FsZXNQYWNrYWdlcy5maWx0ZXIocD0+e3JldHVybiBOdW1iZXIocC5pZCk9PT1OdW1iZXIoc2FsZXNQYWNrYWdlKX0pWzBdO1xuICAgICAgICAgICAgdGhpcy5zZWxlY3RQYWNrYWdlKHNlbGVjdGVkUGFja2FnZSk7XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICBjb21wb25lbnRXaWxsUmVjZWl2ZVByb3BzKG5leHRQcm9wcykge1xuXG4gICAgICAgIHRoaXMuc2V0U3RhdGUoe1xuICAgICAgICAgICAgY29udGVudCA6IENvbnRlbnRBcmVuYS5VdGlscy5jb250ZW50UGFyc2VyRnJvbVNlcnZlcihuZXh0UHJvcHMubGlzdGluZylcbiAgICAgICAgfSk7XG4gICAgfVxuXG4gICAgdG9nZ2xlQnV5aW5nTW9kZSA9ICgpID0+IHtcbiAgICAgICAgdGhpcy5zZXRTdGF0ZSh7YnV5aW5nTW9kZTogIXRoaXMuc3RhdGUuYnV5aW5nTW9kZX0pO1xuICAgIH07XG5cbiAgICBzZWxlY3RQYWNrYWdlID0gKCBzZWxlY3RlZFBhY2thZ2UsIGN1c3RvbUlkICkgPT4ge1xuICAgICAgICBjb25zdCB7IGhpc3RvcnkgfSA9IHRoaXMucHJvcHM7XG5cbiAgICAgICAgaGlzdG9yeS5wdXNoKCcvbGlzdGluZy8nK2N1c3RvbUlkKycvY2hlY2tvdXQvJytzZWxlY3RlZFBhY2thZ2UuaWQpO1xuICAgICAgICB0aGlzLnNldFN0YXRlKHtcbiAgICAgICAgICAgIHNlbGVjdGVkUGFja2FnZTogc2VsZWN0ZWRQYWNrYWdlLFxuICAgICAgICAgICAgYnV5aW5nTW9kZSA6IHRydWUsXG4gICAgICAgICAgICBiaWQ6IHNlbGVjdGVkUGFja2FnZS5mZWUsXG4gICAgICAgICAgICBtaW5pbXVtQmlkIDogc2VsZWN0ZWRQYWNrYWdlLmZlZVxuICAgICAgICB9KVxuICAgIH07XG5cbiAgICBvcmRpbmFsX3N1ZmZpeF9vZiA9IChpKSA9PiB7XG4gICAgICAgIGxldCBqID0gaSAlIDEwLFxuICAgICAgICAgICAgayA9IGkgJSAxMDA7XG4gICAgICAgIGlmIChqID09PSAxICYmIGsgIT09IDExKSB7XG4gICAgICAgICAgICByZXR1cm4gaSArIFwic3RcIjtcbiAgICAgICAgfVxuICAgICAgICBpZiAoaiA9PT0gMiAmJiBrICE9PSAxMikge1xuICAgICAgICAgICAgcmV0dXJuIGkgKyBcIm5kXCI7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKGogPT09IDMgJiYgayAhPT0gMTMpIHtcbiAgICAgICAgICAgIHJldHVybiBpICsgXCJyZFwiO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBpICsgXCJ0aFwiO1xuICAgIH07XG5cbiAgICBzaG93VGFiID0gKHRhYikgPT4ge1xuICAgICAgICB0aGlzLnNldFN0YXRlKHt0YWJ9KTtcbiAgICB9O1xuXG4gICAgaXNUYWJIYXNEYXRhID0gKGNvbnRlbnQsIHRhYikgPT4ge1xuICAgICAgICBjb25zdCB7ZGVzY3JpcHRpb24sIHdlYnNpdGUsIGF0dGFjaG1lbnRzfSA9IGNvbnRlbnQ7XG5cbiAgICAgICAgaWYgKHRhYiA9PT0gXCJldmVudFwiKSB7XG4gICAgICAgICAgICByZXR1cm4gISEoZGVzY3JpcHRpb24gfHwgd2Vic2l0ZSB8fCAoYXR0YWNobWVudHMgJiYgYXR0YWNobWVudHMubGVuZ3RoID4gMCkpO1xuICAgICAgICB9XG5cbiAgICB9XG5cbiAgICBjbG9zZU1vZGFsID0gKCkgPT4ge1xuICAgICAgICB0aGlzLnNldFN0YXRlKHsgZWRpdENvbXBhbnlPcGVuOiBmYWxzZX0pO1xuICAgIH07XG5cbiAgICBjbG9zZVRlcnJpdG9yaWVzTW9kYWwgPSAoKSA9PiB7XG4gICAgICAgIHRoaXMuc2V0U3RhdGUoeyBzaG93QWxsVGVycml0b3JpZXM6IGZhbHNlfSk7XG4gICAgfTtcblxuICAgIGNsb3NlU3VjY2Vzc1NjcmVlbiA9ICgpID0+IHtcblxuICAgICAgICBjb25zdCB7aGlzdG9yeX0gPSB0aGlzLnByb3BzO1xuICAgICAgICBoaXN0b3J5LnB1c2goXCIvbWFya2V0cGxhY2VcIik7XG4gICAgfTtcblxuICAgIGVkaXRDb21wYW55ID0gKCkgPT4ge1xuXG4gICAgICAgIGNvbnN0IHsgY29tcGFueSB9ID0gdGhpcy5zdGF0ZTtcblxuICAgICAgICByZXR1cm4gPE1vZGFsXG4gICAgICAgICAgICBpc09wZW49e3RoaXMuc3RhdGUuZWRpdENvbXBhbnlPcGVufVxuICAgICAgICAgICAgb25SZXF1ZXN0Q2xvc2U9e3RoaXMuY2xvc2VNb2RhbH1cbiAgICAgICAgICAgIGJvZHlPcGVuQ2xhc3NOYW1lPXtcInNlbGVjdG9yXCJ9XG4gICAgICAgICAgICBzdHlsZT17Y3VzdG9tU3R5bGVzfVxuICAgICAgICAgICAgY29udGVudExhYmVsPVwiRXhhbXBsZSBNb2RhbFwiXG4gICAgICAgID5cblxuICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJtb2RhbC10aXRsZVwiPlxuICAgICAgICAgICAgICAgIENvbXBhbnkgSW5mb3JtYXRpb25cbiAgICAgICAgICAgICAgICA8aSBjbGFzc05hbWU9XCJmYSBmYS10aW1lcy1jaXJjbGUtbyBjbG9zZS1pY29uXCIgb25DbGljaz17dGhpcy5jbG9zZU1vZGFsfS8+XG4gICAgICAgICAgICA8L2Rpdj5cblxuICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJzdGVwLWNvbnRlbnRcIj5cbiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cInN0ZXAtY29udGVudC1jb250YWluZXJcIj5cblxuICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImJhc2UtZnVsbC1pbnB1dFwiPlxuICAgICAgICAgICAgICAgICAgICAgICAgPGxhYmVsIHN0eWxlPXtsYWJlbFN0eWxlfSA+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgTGVnYWwgbmFtZVxuICAgICAgICAgICAgICAgICAgICAgICAgPC9sYWJlbD5cbiAgICAgICAgICAgICAgICAgICAgICAgIDxpbnB1dFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHR5cGU9e1widGV4dFwifVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHN0eWxlPXtpbnB1dFN0eWxlfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhbHVlPXtjb21wYW55LmxlZ2FsTmFtZX0vPlxuICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cblxuICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImJhc2UtZnVsbC1pbnB1dFwiPlxuICAgICAgICAgICAgICAgICAgICAgICAgPGxhYmVsIHN0eWxlPXtsYWJlbFN0eWxlfSA+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgUmVnaXN0cmF0aW9uIG51bWJlclxuICAgICAgICAgICAgICAgICAgICAgICAgPC9sYWJlbD5cbiAgICAgICAgICAgICAgICAgICAgICAgIDxpbnB1dFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHN0eWxlPXtpbnB1dFN0eWxlfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHR5cGU9e1widGV4dFwifVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIG9uQ2hhbmdlPXsoZSkgPT4ge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb21wYW55LnJlZ2lzdHJhdGlvbk51bWJlciA9IGUudGFyZ2V0LnZhbHVlO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0aGlzLnNldFN0YXRlKHtjb21wYW55fSk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfX1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YWx1ZT17Y29tcGFueS5yZWdpc3RyYXRpb25OdW1iZXJ9Lz5cbiAgICAgICAgICAgICAgICAgICAgPC9kaXY+XG5cbiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJiYXNlLWZ1bGwtaW5wdXRcIj5cbiAgICAgICAgICAgICAgICAgICAgICAgIDxsYWJlbCBzdHlsZT17bGFiZWxTdHlsZX0gPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIFZBVCBJRCBudW1iZXJcbiAgICAgICAgICAgICAgICAgICAgICAgIDwvbGFiZWw+XG4gICAgICAgICAgICAgICAgICAgICAgICA8aW5wdXRcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBzdHlsZT17aW5wdXRTdHlsZX1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB0eXBlPXtcInRleHRcIn1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBvbkNoYW5nZT17KGUpID0+IHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY29tcGFueS52YXQgPSBlLnRhcmdldC52YWx1ZTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5zZXRTdGF0ZSh7Y29tcGFueX0pO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH19XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdmFsdWU9e2NvbXBhbnkudmF0fS8+XG4gICAgICAgICAgICAgICAgICAgIDwvZGl2PlxuXG4gICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiYmFzZS1mdWxsLWlucHV0XCI+XG4gICAgICAgICAgICAgICAgICAgICAgICA8bGFiZWwgc3R5bGU9e2xhYmVsU3R5bGV9ID5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBTdHJlZXQgTmFtZSAvIE51bWJlclxuICAgICAgICAgICAgICAgICAgICAgICAgPC9sYWJlbD5cbiAgICAgICAgICAgICAgICAgICAgICAgIDxpbnB1dFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHN0eWxlPXtpbnB1dFN0eWxlfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHR5cGU9e1widGV4dFwifVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIG9uQ2hhbmdlPXsoZSkgPT4ge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb21wYW55LmFkZHJlc3MgPSBlLnRhcmdldC52YWx1ZTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5zZXRTdGF0ZSh7Y29tcGFueX0pO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH19XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdmFsdWU9e2NvbXBhbnkuYWRkcmVzc30vPlxuICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cblxuICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImJhc2UtZnVsbC1pbnB1dFwiPlxuICAgICAgICAgICAgICAgICAgICAgICAgPGxhYmVsIHN0eWxlPXtsYWJlbFN0eWxlfSA+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgQ2l0eVxuICAgICAgICAgICAgICAgICAgICAgICAgPC9sYWJlbD5cbiAgICAgICAgICAgICAgICAgICAgICAgIDxpbnB1dFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHN0eWxlPXtpbnB1dFN0eWxlfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHR5cGU9e1widGV4dFwifVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIG9uQ2hhbmdlPXsoZSkgPT4ge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb21wYW55LmNpdHkgPSBlLnRhcmdldC52YWx1ZTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5zZXRTdGF0ZSh7Y29tcGFueX0pO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH19XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdmFsdWU9e2NvbXBhbnkuY2l0eX0vPlxuICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cblxuICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImJhc2UtZnVsbC1pbnB1dFwiPlxuICAgICAgICAgICAgICAgICAgICAgICAgPGxhYmVsIHN0eWxlPXtsYWJlbFN0eWxlfSA+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgWklQIGNvZGVcbiAgICAgICAgICAgICAgICAgICAgICAgIDwvbGFiZWw+XG4gICAgICAgICAgICAgICAgICAgICAgICA8aW5wdXRcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBzdHlsZT17aW5wdXRTdHlsZX1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB0eXBlPXtcInRleHRcIn1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBvbkNoYW5nZT17KGUpID0+IHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY29tcGFueS56aXAgPSBlLnRhcmdldC52YWx1ZTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5zZXRTdGF0ZSh7Y29tcGFueX0pO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH19XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdmFsdWU9e2NvbXBhbnkuemlwfS8+XG4gICAgICAgICAgICAgICAgICAgIDwvZGl2PlxuXG4gICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiYmFzZS1mdWxsLWlucHV0XCI+XG4gICAgICAgICAgICAgICAgICAgICAgICA8bGFiZWwgc3R5bGU9e2xhYmVsU3R5bGV9ID5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBDb3VudHJ5XG4gICAgICAgICAgICAgICAgICAgICAgICA8L2xhYmVsPlxuICAgICAgICAgICAgICAgICAgICAgICAgPENvdW50cnlTZWxlY3RvclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIG11bHRpPXtmYWxzZX1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBvbkNoYW5nZT17KHZhbHVlKSA9PiB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbXBhbnkuY291bnRyeS5uYW1lID0gdmFsdWUubGFiZWw7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuc2V0U3RhdGUoe2NvbXBhbnl9KTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9fVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhbHVlPXt7dmFsdWU6IGNvbXBhbnkuY291bnRyeS5uYW1lLCBsYWJlbDogY29tcGFueS5jb3VudHJ5Lm5hbWV9fS8+XG4gICAgICAgICAgICAgICAgICAgIDwvZGl2PlxuXG5cbiAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgIDwvZGl2PlxuXG4gICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT17XCJidXR0b25zXCJ9PlxuICAgICAgICAgICAgICAgIHsgY29tcGFueUlzVmFsaWQoY29tcGFueSkgJiY8YnV0dG9uXG4gICAgICAgICAgICAgICAgICAgIGNsYXNzTmFtZT17XCJzdGFuZGFyZC1idXR0b25cIn1cbiAgICAgICAgICAgICAgICAgICAgb25DbGljaz17dGhpcy5jbG9zZU1vZGFsfT5PazwvYnV0dG9uPn1cblxuICAgICAgICAgICAgICAgIHsgIWNvbXBhbnlJc1ZhbGlkKGNvbXBhbnkpICYmPGJ1dHRvblxuICAgICAgICAgICAgICAgICAgICBjbGFzc05hbWU9e1wic3RhbmRhcmQtYnV0dG9uXCJ9XG4gICAgICAgICAgICAgICAgICAgIGRpc2FibGVkXG4gICAgICAgICAgICAgICAgPk9rPC9idXR0b24+fVxuICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgIDwvTW9kYWw+XG4gICAgfTtcblxuICAgIHNob3dBbGxUZXJyaXRvcmllcyA9IChleHRyYVRlcnJpdG9yaWVzKSA9PiB7XG4gICAgICAgIHRoaXMuc2V0U3RhdGUoe1xuICAgICAgICAgICAgc2hvd0FsbFRlcnJpdG9yaWVzIDogdHJ1ZSxcbiAgICAgICAgICAgIHRlcnJpdG9yaWVzTGlzdCA6IGV4dHJhVGVycml0b3JpZXNcbiAgICAgICAgfSlcbiAgICB9O1xuXG4gICAgYWxsVGVycml0b3JpZXMgPSAoKSA9PiB7XG5cbiAgICAgICAgcmV0dXJuIDxNb2RhbFxuICAgICAgICAgICAgaXNPcGVuPXt0aGlzLnN0YXRlLnNob3dBbGxUZXJyaXRvcmllc31cbiAgICAgICAgICAgIG9uUmVxdWVzdENsb3NlPXt0aGlzLmNsb3NlVGVycml0b3JpZXNNb2RhbH1cbiAgICAgICAgICAgIGJvZHlPcGVuQ2xhc3NOYW1lPXtcInNlbGVjdG9yXCJ9XG4gICAgICAgICAgICBzdHlsZT17Y3VzdG9tU3R5bGVzfVxuICAgICAgICA+XG5cbiAgICAgICAgICAgIDxkaXYgc3R5bGU9e3tcbiAgICAgICAgICAgICAgICBjb2xvcjogJ2dyZXknLFxuICAgICAgICAgICAgICAgIHBhZGRpbmc6IDIwLFxuICAgICAgICAgICAgICAgIGRpc3BsYXk6ICdmbGV4JyxcbiAgICAgICAgICAgICAgICBmbGV4V3JhcDogJ3dyYXAnLFxuICAgICAgICAgICAgfX0+XG4gICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICB0aGlzLnN0YXRlLnRlcnJpdG9yaWVzTGlzdC5tYXAodGVycml0b3J5ID0+e1xuICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIDxkaXYgY2xhc3NOYW1lPVwiY291bnRyeS1tb2RhbFwiPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHt0ZXJyaXRvcnkubGFiZWx9XG4gICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgICAgICAgfSlcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICA8L2Rpdj5cblxuICAgICAgICA8L01vZGFsPlxuICAgIH07XG5cbiAgICBzdWNjZXNzU2NyZWVuID0gKCkgPT4ge1xuICAgICAgICBjb25zdCB7IHNlbGVjdGVkUGFja2FnZSB9ID0gdGhpcy5zdGF0ZTtcbiAgICAgICAgY29uc3QgeyBoaXN0b3J5IH0gPSB0aGlzLnByb3BzO1xuICAgICAgICByZXR1cm4gPE1vZGFsXG4gICAgICAgICAgICBpc09wZW49e3RoaXMuc3RhdGUuc2hvd1N1Y2Nlc3NTY3JlZW59XG4gICAgICAgICAgICBvblJlcXVlc3RDbG9zZT17dGhpcy5jbG9zZVN1Y2Nlc3NTY3JlZW59XG4gICAgICAgICAgICBib2R5T3BlbkNsYXNzTmFtZT17XCJzZWxlY3RvclwifVxuICAgICAgICAgICAgc3R5bGU9e2N1c3RvbVN0eWxlc31cbiAgICAgICAgPlxuXG4gICAgICAgICAgICA8ZGl2IHN0eWxlPXt7XG4gICAgICAgICAgICAgICAgY29sb3I6ICdncmV5JyxcbiAgICAgICAgICAgICAgICBwYWRkaW5nOiAyMCxcbiAgICAgICAgICAgICAgICBkaXNwbGF5OiAnZmxleCcsXG4gICAgICAgICAgICAgICAgZmxleERpcmVjdGlvbjogJ2NvbHVtbicsXG4gICAgICAgICAgICAgICAgYWxpZ25JdGVtczogJ2NlbnRlcidcbiAgICAgICAgICAgIH19PlxuICAgICAgICAgICAgICAgIDxkaXYgc3R5bGU9e3tcbiAgICAgICAgICAgICAgICAgICAgZm9udFNpemU6IDMwLFxuICAgICAgICAgICAgICAgICAgICB3aWR0aCA6IDYwMCxcbiAgICAgICAgICAgICAgICAgICAgdGV4dEFsaWduIDogJ2NlbnRlcicsXG4gICAgICAgICAgICAgICAgICAgIGZvbnRXZWlnaHQ6IDYwMFxuICAgICAgICAgICAgICAgIH19PlxuICAgICAgICAgICAgICAgICAgICB7dGhpcy5jb250ZXh0LnQoXCJDSEVDS09VVF9DT05HUkFUVUxBVElPTlNcIil9XG4gICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgICAge3NlbGVjdGVkUGFja2FnZS5zYWxlc01ldGhvZCA9PT0gXCJGSVhFRFwiICYmIDxkaXYgc3R5bGU9e3tcbiAgICAgICAgICAgICAgICAgICAgZm9udFNpemU6IDIwLFxuICAgICAgICAgICAgICAgICAgICB3aWR0aCA6IDYwMCxcbiAgICAgICAgICAgICAgICAgICAgbWFyZ2luIDogNDAsXG4gICAgICAgICAgICAgICAgICAgIHRleHRBbGlnbiA6ICdjZW50ZXInXG4gICAgICAgICAgICAgICAgfX0+XG4gICAgICAgICAgICAgICAgICAgIHt0aGlzLmNvbnRleHQudChcIkNIRUNLT1VUX0ZJWEVEX1NVQ0NFU1NfTUVTU0FHRVwiKX1cbiAgICAgICAgICAgICAgICA8L2Rpdj59XG4gICAgICAgICAgICAgICAge3NlbGVjdGVkUGFja2FnZS5zYWxlc01ldGhvZCA9PT0gXCJCSURESU5HXCIgJiYgPGRpdiBzdHlsZT17e1xuICAgICAgICAgICAgICAgICAgICBmb250U2l6ZTogMjAsXG4gICAgICAgICAgICAgICAgICAgIHdpZHRoIDogNjAwLFxuICAgICAgICAgICAgICAgICAgICBtYXJnaW4gOiA0MCxcbiAgICAgICAgICAgICAgICAgICAgdGV4dEFsaWduIDogJ2NlbnRlcidcbiAgICAgICAgICAgICAgICB9fT5cbiAgICAgICAgICAgICAgICAgICAge3RoaXMuY29udGV4dC50KFwiQ0hFQ0tPVVRfQklEX1NVQ0NFU1NfTUVTU0FHRVwiKX1cbiAgICAgICAgICAgICAgICA8L2Rpdj59XG5cbiAgICAgICAgICAgICAgICA8ZGl2IHN0eWxlPXt7ZGlzcGxheTogJ2ZsZXgnfX0+XG4gICAgICAgICAgICAgICAgICAgIHtzZWxlY3RlZFBhY2thZ2Uuc2FsZXNNZXRob2QgPT09IFwiRklYRURcIiAmJlxuICAgICAgICAgICAgICAgICAgICAgICAgPGJ1dHRvbiBjbGFzc05hbWU9XCJzdGFuZGFyZC1idXR0b25cIiBvbkNsaWNrPXsoKSA9PiB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaGlzdG9yeS5wdXNoKFwiL2Nsb3NlZGRlYWxzXCIpO1xuICAgICAgICAgICAgICAgICAgICAgICAgfX0gPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHt0aGlzLmNvbnRleHQudChcIkNIRUNLT1VUX0ZJWEVEX0dPX1RPX0NMT1NFRF9ERUFMU1wiKX1cbiAgICAgICAgICAgICAgICAgICAgICAgIDwvYnV0dG9uPlxuICAgICAgICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgICAgICAge3NlbGVjdGVkUGFja2FnZS5zYWxlc01ldGhvZCAhPT0gXCJGSVhFRFwiICYmXG4gICAgICAgICAgICAgICAgICAgIDxidXR0b24gY2xhc3NOYW1lPVwic3RhbmRhcmQtYnV0dG9uXCIgb25DbGljaz17KCkgPT4ge1xuICAgICAgICAgICAgICAgICAgICAgICAgaGlzdG9yeS5wdXNoKFwiL2JpZHMvYWN0aXZlYmlkc1wiKTtcbiAgICAgICAgICAgICAgICAgICAgfX0gPlxuICAgICAgICAgICAgICAgICAgICAgICAge3RoaXMuY29udGV4dC50KFwiQ0hFQ0tPVVRfRklYRURfR09fVE9fQklEU1wiKX1cbiAgICAgICAgICAgICAgICAgICAgPC9idXR0b24+XG4gICAgICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICAgICAgICA8YnV0dG9uIGNsYXNzTmFtZT1cInN0YW5kYXJkLWJ1dHRvblwiIG9uQ2xpY2s9e3RoaXMuY2xvc2VTdWNjZXNzU2NyZWVufSA+XG4gICAgICAgICAgICAgICAgICAgICAgICB7dGhpcy5jb250ZXh0LnQoXCJDSEVDS09VVF9GSVhFRF9HT19UT19NQVJLRVRQTEFDRVwiKX1cbiAgICAgICAgICAgICAgICAgICAgPC9idXR0b24+XG4gICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICA8L2Rpdj5cblxuICAgICAgICA8L01vZGFsPlxuICAgIH07XG5cbiAgICBnZXRUZWNobmljYWxGZWUgPSAoKSA9PiB7XG4gICAgICAgIGNvbnN0IHtjb250ZW50fSA9IHRoaXMuc3RhdGU7XG5cbiAgICAgICAgbGV0IHJlc3BvbnNlID0ge1xuICAgICAgICAgICAgVEVDSE5JQ0FMX0ZFRSA6XCJcIixcbiAgICAgICAgICAgIFRFQ0hOSUNBTF9GRUVfUEVSQ0VOVEFHRSA6IDBcbiAgICAgICAgfTtcblxuICAgICAgICBsZXQgc2VsZWN0ZWQgPSAoY29udGVudC5yaWdodHNQYWNrYWdlICYmIGNvbnRlbnQucmlnaHRzUGFja2FnZVswXSAmJiBjb250ZW50LnJpZ2h0c1BhY2thZ2VbMF0uc2VsZWN0ZWRSaWdodHMpID8gY29udGVudC5yaWdodHNQYWNrYWdlWzBdLnNlbGVjdGVkUmlnaHRzIDogbnVsbDtcblxuICAgICAgICBpZiAoIHNlbGVjdGVkICl7XG4gICAgICAgICAgICByZXNwb25zZVtcIlRFQ0hOSUNBTF9GRUVcIl0gPSBzZWxlY3RlZFtcIlRFQ0hOSUNBTF9GRUVcIl07XG4gICAgICAgICAgICByZXNwb25zZVtcIlRFQ0hOSUNBTF9GRUVfUEVSQ0VOVEFHRVwiXSA9IHNlbGVjdGVkW1wiVEVDSE5JQ0FMX0ZFRV9QRVJDRU5UQUdFXCJdO1xuICAgICAgICB9XG5cbiAgICAgICAgcmV0dXJuIHNlbGVjdGVkO1xuXG4gICAgfTtcblxuICAgIGdldFRvdGFsRmVlID0gKCkgPT4ge1xuICAgICAgICBjb25zdCB7c2VsZWN0ZWRQYWNrYWdlIH0gPSB0aGlzLnN0YXRlO1xuICAgICAgICBsZXQgdGVjaG5pY2FsRmVlID0gdGhpcy5nZXRUZWNobmljYWxGZWUoKTtcbiAgICAgICAgbGV0IHRvdGFsID0gTnVtYmVyKHNlbGVjdGVkUGFja2FnZS5mZWUpO1xuXG4gICAgICAgIGlmICggdGVjaG5pY2FsRmVlLlRFQ0hOSUNBTF9GRUUgPT09IFwiT05fVE9QXCIgKXtcbiAgICAgICAgICAgIHRvdGFsICA9IHRvdGFsICsgKHRvdGFsLzEwMCkqTnVtYmVyKHRlY2huaWNhbEZlZS5URUNITklDQUxfRkVFX1BFUkNFTlRBR0UpXG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHRvdGFsO1xuICAgIH07XG5cbiAgICBzZXRCaWQgPSAoKSA9PiB7XG4gICAgICAgIGNvbnN0IHtzZWxlY3RlZFBhY2thZ2UsIGJpZCB9ID0gdGhpcy5zdGF0ZTtcblxuICAgICAgICBzZWxlY3RlZFBhY2thZ2UuZmVlID0gYmlkO1xuXG4gICAgICAgIHRoaXMuc2V0U3RhdGUoe1xuICAgICAgICAgICAgc2VsZWN0ZWRQYWNrYWdlLFxuICAgICAgICAgICAgYmlkVXBkYXRlZCA6IHRydWVcbiAgICAgICAgfSlcbiAgICB9O1xuXG4gICAgZWRpdEJpZCA9ICgpID0+IHtcbiAgICAgICAgdGhpcy5zZXRTdGF0ZSh7XG4gICAgICAgICAgICBiaWRVcGRhdGVkIDogZmFsc2VcbiAgICAgICAgfSk7XG4gICAgfTtcblxuICAgIHBsYWNlQmlkID0gKCkgPT4ge1xuICAgICAgICBjb25zdCB7YmlkLCBzZWxlY3RlZFBhY2thZ2UsIHNpZ25hdHVyZSwgY29udGVudCB9ID0gdGhpcy5zdGF0ZTtcbiAgICAgICAgdGhpcy5zZXRTdGF0ZSh7c3Bpbm5lciA6IHRydWV9KTtcbiAgICAgICAgbGV0IGJpZE9iaiA9IHtcbiAgICAgICAgICAgIGFtb3VudCA6IGJpZCxcbiAgICAgICAgICAgIHNhbGVzUGFja2FnZSA6IHNlbGVjdGVkUGFja2FnZS5pZCxcbiAgICAgICAgICAgIHNpZ25hdHVyZSA6IHNpZ25hdHVyZSxcbiAgICAgICAgICAgIHRvdGFsRmVlIDogdGhpcy5nZXRUb3RhbEZlZSgpLFxuICAgICAgICAgICAgY29udGVudCA6IGNvbnRlbnQuaWQsXG4gICAgICAgICAgICBzYWxlc01ldGhvZCA6IHNlbGVjdGVkUGFja2FnZS5zYWxlc01ldGhvZFxuICAgICAgICB9O1xuXG4gICAgICAgIENvbnRlbnRBcmVuYS5Db250ZW50QXBpLnBsYWNlQmlkKGJpZE9iaikudGhlbihyID0+e1xuICAgICAgICAgICAgdGhpcy5zZXRTdGF0ZSh7c2hvd1N1Y2Nlc3NTY3JlZW4gOiB0cnVlLCBzb2xkT3V0IDogci5zb2xkT3V0LCBzcGlubmVyIDogZmFsc2V9KTtcbiAgICAgICAgfSk7XG5cbiAgICB9O1xuXG4gICAgaW52YWxpZFBhY2thZ2UgPSAoKSA9PiB7XG4gICAgICAgIGNvbnN0IHtzaWduYXR1cmUsIHNlbGVjdGVkUGFja2FnZSwgYmlkVXBkYXRlZCwgdGVybXN9ID0gdGhpcy5zdGF0ZTtcbiAgICAgICAgcmV0dXJuICFzaWduYXR1cmUgfHwgKHNlbGVjdGVkUGFja2FnZS5zYWxlc01ldGhvZCA9PT0gJ0JJRERJTkcnICYmICFiaWRVcGRhdGVkICkgfHwgIXRlcm1zO1xuICAgIH07XG5cbiAgICB3YXRjaGxpc3QgPSAoKSA9PiB7XG4gICAgICAgIGxldCBjb250ZW50ID0gdGhpcy5zdGF0ZS5jb250ZW50O1xuICAgICAgICBsZXQgX3RoaXMgPSB0aGlzO1xuXG4gICAgICAgIGNvbnRlbnQud2F0Y2hsaXN0ID0gIWNvbnRlbnQud2F0Y2hsaXN0O1xuICAgICAgICBfdGhpcy5zZXRTdGF0ZSh7Y29udGVudH0pO1xuXG4gICAgICAgIENvbnRlbnRBcmVuYS5BcGkud2F0Y2hsaXN0KGNvbnRlbnQuY3VzdG9tSWQpLnRoZW4ocmVzcG9uc2UgPT4ge1xuICAgICAgICAgICAgaWYgKCByZXNwb25zZSAmJiByZXNwb25zZS5zdWNjZXNzID09PSB0cnVlICkge1xuICAgICAgICAgICAgICAgIGNvbnRlbnQud2F0Y2hsaXN0ID0gISFyZXNwb25zZS5zdGF0ZTtcbiAgICAgICAgICAgICAgICBfdGhpcy5zZXRTdGF0ZSh7Y29udGVudH0pO1xuICAgICAgICAgICAgfVxuICAgICAgICB9KTtcblxuICAgIH07XG5cbiAgICByZW5kZXIoKSB7XG4gICAgICAgIFJlYWN0VG9vbHRpcC5yZWJ1aWxkKCk7XG4gICAgICAgIGNvbnN0IHtvbkJhY2ssIHByb2ZpbGUsaGlzdG9yeSB9ID0gdGhpcy5wcm9wcztcbiAgICAgICAgY29uc3Qge2J1eWluZ01vZGUsIHNlbGVjdGVkUGFja2FnZSx0YWIsIGNvbnRlbnQsIHNpZ25hdHVyZSwgYmlkLCBjb21wYW55LCBiaWRVcGRhdGVkLCBzcGlubmVyLCBtaW5pbXVtQmlkfSA9IHRoaXMuc3RhdGU7XG4gICAgICAgIGxldCBsaXN0aW5nSW1hZ2UgPSAoY29udGVudC5pbWFnZSkgPyBhc3NldHNCYXNlRGlyICsgXCIuLi9cIiArIGNvbnRlbnQuaW1hZ2UgOiB0aGlzLm5vSW1hZ2U7XG4gICAgICAgIGxldCB0ZWNobmljYWxGZWUgPSB0aGlzLmdldFRlY2huaWNhbEZlZSgpO1xuICAgICAgICBsZXQgZXh0cmFUZXJyaXRvcmllcyA9ICggc2VsZWN0ZWRQYWNrYWdlLnRlcnJpdG9yaWVzTWV0aG9kID09PSBcIldPUkxEV0lERV9FWENMVURJTkdcIikgPyBzZWxlY3RlZFBhY2thZ2UuZXhjbHVkZWRUZXJyaXRvcmllcyA6IHNlbGVjdGVkUGFja2FnZS50ZXJyaXRvcmllcztcbiAgICAgICAgcmV0dXJuIChcbiAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwibGlzdGluZy1kZXRhaWxzXCI+XG4gICAgICAgICAgICAgICAgPFNlbmRNZXNzYWdlIHJlZj1cIm1lc3NhZ2VQb3B1cFwiIGxpc3RpbmdJZD17Y29udGVudC5pZH0gcmVjaXBpZW50PXtjb250ZW50LmNvbXBhbnl9Lz5cbiAgICAgICAgICAgICAgICB7IHRoaXMuZWRpdENvbXBhbnkoKSB9XG4gICAgICAgICAgICAgICAgeyB0aGlzLmFsbFRlcnJpdG9yaWVzKCkgfVxuICAgICAgICAgICAgICAgIHsgdGhpcy5zdWNjZXNzU2NyZWVuKCkgfVxuICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwibGlzdGluZy1kZXRhaWxzLWNvbnRlbnRcIj5cbiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9e1wibGVmdFwifSAgPlxuICAgICAgICAgICAgICAgICAgICAgICAgey8qSU1BR0UqL31cbiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPXtcImltYWdlXCJ9PlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpbWcgc3JjPXtsaXN0aW5nSW1hZ2V9Lz5cbiAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxuXG4gICAgICAgICAgICAgICAgICAgICAgICA8Q29udGVudExpc3RpbmdFdmVudERldGFpbHMgey4uLnRoaXMucHJvcHMubGlzdGluZ30vPlxuXG4gICAgICAgICAgICAgICAgICAgICAgICB7LyogUklHSFRTKi99XG4gICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IHN0eWxlPXt7ZmxleDogMiwgZmxleERpcmVjdGlvbjogXCJjb2x1bW5cIiwgbWFyZ2luOiAnMjBweCAwJyB9fT5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbnRlbnQucmlnaHRzUGFja2FnZS5tYXAoKCBzcixpICk9PntcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiA8ZGl2IGtleT17aX0gIHN0eWxlPXt7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbWluSGVpZ2h0OiA0NixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBmbGV4RGlyZWN0aW9uOiAncm93JyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBkaXNwbGF5OiAnZmxleCcsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYWxpZ25JdGVtczogJ2NlbnRlcidcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH19PlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHshc3IuZXhjbHVzaXZlICYmXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGltZyBzdHlsZT17e3dpZHRoOiAyMywgaGVpZ2h0OiAyMiwgbWFyZ2luOiAnMCA1cHgnfX0gc3JjPXt0aGlzLmJsdWVDaGVja30vPn1cblxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHtzci5leGNsdXNpdmUgJiZcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aW1nIHN0eWxlPXt7d2lkdGg6IDIzLCBoZWlnaHQ6IDIyLCBtYXJnaW46ICcwIDVweCd9fSBzcmM9e3RoaXMueWVsbG93Q2hlY2t9Lz59XG5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IHN0eWxlPXt7ZGlzcGxheTogJ2ZsZXgnLCBmbGV4RGlyZWN0aW9uOiBcInJvd1wiICB9fT5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgeyBzci5zaG9ydExhYmVsICE9PSBcIlBSXCIgJiYgc3IubmFtZSB9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHsgc3Iuc2hvcnRMYWJlbCA9PT0gXCJQUlwiICYmIGNvbnRlbnQuUFJPR1JBTV9OQU1FICYmXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFwiUHJvZ3JhbTogXCIgKyBjb250ZW50LlBST0dSQU1fTkFNRVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHtzci5leGNsdXNpdmUgJiYgPHNwYW4gc3R5bGU9e3tmb250V2VpZ2h0OiA2MDAsIG1hcmdpbkxlZnQ6IDN9fT4gRVg8L3NwYW4+fVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0pXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XG5cbiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPXtcImRhdGVcIn0+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAge3RoaXMuY29udGV4dC50KFwiTElTVElOR19ERVRBSUxTX0xJQ0VOU0VfU1RBUlRcIil9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHsgY29udGVudC5zdGFydERhdGVNb2RlICE9PSBcIkRBVEVcIiAgJiYgdGhpcy5jb250ZXh0LnQoXCJMSVNUSU5HX0RFVEFJTFNfTElDRU5TRV9TVEFSVF9DT05DTFVTSU9OXCIpfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB7IGNvbnRlbnQuc3RhcnREYXRlTW9kZSA9PT0gXCJEQVRFXCIgICYmIFwiIFwiICsgTW9tZW50KGNvbnRlbnQuc3RhcnREYXRlKS5mb3JtYXQoJ0REL01NL1lZWVknKX1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3NwYW4+XG4gICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPXtcImRhdGVcIn0+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAge3RoaXMuY29udGV4dC50KFwiTElTVElOR19ERVRBSUxTX0xJQ0VOU0VfRU5EXCIpfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHsgY29udGVudC5lbmREYXRlTW9kZSA9PT0gXCJMSU1JVEVEXCIgICYmIFwiIFwiICsgY29udGVudC5lbmREYXRlTGltaXQgKyB0aGlzLmNvbnRleHQudChcIkxJU1RJTkdfREVUQUlMU19MSUNFTlNFX0VORF9EQVlTXCIpfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHsgY29udGVudC5lbmREYXRlTW9kZSA9PT0gXCJEQVRFXCIgICYmIFwiIFwiICtNb21lbnQoY29udGVudC5lbmREYXRlKS5mb3JtYXQoJ0REL01NL1lZWVknKX1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB7IGNvbnRlbnQuZW5kRGF0ZU1vZGUgPT09IFwiVU5MSU1JVEVEXCIgICYmIHRoaXMuY29udGV4dC50KFwiIFVubGltaXRlZFwiKX1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3NwYW4+XG4gICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPXtcImRhdGVcIn0+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAge3RoaXMuY29udGV4dC50KFwiUHVibGlzaGluZyBkYXRlXCIpfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuPntNb21lbnQoKS5mb3JtYXQoJ0REL01NL1lZWVknKX08L3NwYW4+PC9kaXY+XG4gICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT17XCJkYXRlXCJ9PlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHt0aGlzLmNvbnRleHQudChcIkV4cGlyeVwiKX1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3Bhbj57TW9tZW50KGNvbnRlbnQuZXhwaXJlc0F0KS5mb3JtYXQoJ0REL01NL1lZWVknKX08L3NwYW4+PC9kaXY+XG4gICAgICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICAgICAgICB7IWJ1eWluZ01vZGUgJiYgPGRpdiBjbGFzc05hbWU9e1wicmlnaHRcIn0gPlxuICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9e1wiaGVhZGVyXCJ9PlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPXtcImNvbnRlbnRcIn0+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwibmFtZVwiPntjb250ZW50Lm5hbWV9PC9kaXY+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHtwcm9maWxlID09PSBcIkJVWUVSXCIgJiYgPGRpdiBjbGFzc05hbWU9XCJwdWJsaXNoZXJcIiBzdHlsZT17e1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZmxleDoxLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZm9udFNpemU6IDE4LFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZm9udFdlaWdodDogNjAwXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH19Pntjb250ZW50LmNvbXBhbnkubGVnYWxOYW1lfTwvZGl2Pn1cblxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB7cHJvZmlsZSA9PT0gXCJCVVlFUlwiICYmIDxkaXYgc3R5bGU9e3ttYXJnaW46ICcwIDEwcHgnLCBkaXNwbGF5OiAnZmxleCcsIGN1cnNvcjogJ3BvaW50ZXInfX1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBvbkNsaWNrPXsoKT0+e1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0aGlzLnJlZnMubWVzc2FnZVBvcHVwLm9wZW4oKVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH19PlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGltZyBzdHlsZT17e3dpZHRoOiAyMiwgaGVpZ2h0OiAxOCwgbWFyZ2luQm90dG9tOiA1fX0gc3JjPXt0aGlzLmNvbnRhY3RJY29ufS8+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IHN0eWxlPXt7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZmxleDoxLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbG9yOiAnIzRGNEY0RicsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZm9udFNpemU6IDE2LFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG1hcmdpbjogJzAgMTBweCdcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH19PlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHt0aGlzLmNvbnRleHQudChcIkNvbnRhY3QgU2VsbGVyXCIpfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2Pn1cblxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB7cHJvZmlsZSA9PT0gXCJCVVlFUlwiICYmIDxkaXYgc3R5bGU9e3ttYXJnaW46ICcwIDEwcHgnLCBkaXNwbGF5OiAnZmxleCcsIGN1cnNvciA6ICdwb2ludGVyJ319XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgb25DbGljaz17dGhpcy53YXRjaGxpc3R9PlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGltZyBzdHlsZT17e3dpZHRoOiAxOCwgaGVpZ2h0OiAxOCwgbWFyZ2luVG9wOiAyfX1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc3JjPXtjb250ZW50LndhdGNobGlzdCA/IHRoaXMuY2hlY2tJY29uIDogdGhpcy53YXRjaGxpc3RJY29ufVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgLz5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgc3R5bGU9e3tcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBmbGV4OjEsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY29sb3I6ICcjMkRBN0U2JyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBmb250U2l6ZTogMTYsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdGV4dERlY29yYXRpb246IChjb250ZW50LndhdGNobGlzdCkgPyAnJyA6ICd1bmRlcmxpbmUnLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG1hcmdpbjogJzAgMTBweCAwIDVweCdcblxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfX0+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAge2NvbnRlbnQud2F0Y2hsaXN0ID8gdGhpcy5jb250ZXh0LnQoJ0xJU1RJTkdfREVUQUlMU19BRERFRF9UT19XQVRDSExJU1QnKSA6IHRoaXMuY29udGV4dC50KCdXYXRjaGxpc3QnKX1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj59XG5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgey8qQ1VTVE9NIElEKi99XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiY3VzdG9tLWlkXCI+I3tjb250ZW50LmN1c3RvbUlkfTwvZGl2PlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XG5cbiAgICAgICAgICAgICAgICAgICAgICAgIHsvKlRBQlMqL31cbiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPXtcImxpc3RpbmctZGV0YWlscy1idXR0b25zXCJ9PlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxidXR0b24gY2xhc3NOYW1lPXsodGFiID09PVwiYnVuZGxlc1wiKT9cImFjdGl2ZVwiOiBcIlwifSBvbkNsaWNrPXsoKT0+e1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBoaXN0b3J5LnB1c2goJy9saXN0aW5nLycrY29udGVudC5jdXN0b21JZCsnL2J1bmRsZXMnKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5zaG93VGFiKFwiYnVuZGxlc1wiKVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH19PlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB7dGhpcy5jb250ZXh0LnQoXCJMSVNUSU5HX0RFVEFJTFNfVEFCX0JVTkRMRVNcIil9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9idXR0b24+XG5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB7dGhpcy5pc1RhYkhhc0RhdGEoY29udGVudCwgXCJldmVudFwiKSAmJlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YnV0dG9uIGNsYXNzTmFtZT17KHRhYiA9PT1cImV2ZW50XCIpP1wiYWN0aXZlXCI6IFwiXCJ9IG9uQ2xpY2s9eygpPT57XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBoaXN0b3J5LnB1c2goJy9saXN0aW5nLycrY29udGVudC5jdXN0b21JZCsnL2V2ZW50Jyk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0aGlzLnNob3dUYWIoXCJldmVudFwiKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfX0+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB7dGhpcy5jb250ZXh0LnQoXCJMSVNUSU5HX0RFVEFJTFNfVEFCX0VWRU5UXCIpfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2J1dHRvbj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPGJ1dHRvbiBjbGFzc05hbWU9eyh0YWIgPT09XCJncmFudG9mcmlnaHRzXCIpP1wiYWN0aXZlXCI6IFwiXCJ9IG9uQ2xpY2s9eygpPT57XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGhpc3RvcnkucHVzaCgnL2xpc3RpbmcvJytjb250ZW50LmN1c3RvbUlkKycvZ3JhbnRvZnJpZ2h0cycpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0aGlzLnNob3dUYWIoXCJncmFudG9mcmlnaHRzXCIpXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfX0+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHt0aGlzLmNvbnRleHQudChcIkxJU1RJTkdfREVUQUlMU19UQUJfUklHSFRTXCIpfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvYnV0dG9uPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHtjb250ZW50LlBST0dSQU1fTkFNRSAmJlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YnV0dG9uIGNsYXNzTmFtZT17KHRhYiA9PT1cImVkaXRlZHByb2dyYW1cIik/XCJhY3RpdmVcIjogXCJcIn0gb25DbGljaz17KCk9PntcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGhpc3RvcnkucHVzaCgnL2xpc3RpbmcvJytjb250ZW50LmN1c3RvbUlkKycvZWRpdGVkcHJvZ3JhbScpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5zaG93VGFiKFwiZWRpdGVkcHJvZ3JhbVwiKVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9fT5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHt0aGlzLmNvbnRleHQudChcIkxJU1RJTkdfREVUQUlMU19FRElURURfUFJPR1JBTVwiKX1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9idXR0b24+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxidXR0b24gY2xhc3NOYW1lPXsodGFiID09PVwic2VsbGVyXCIpP1wiYWN0aXZlXCI6IFwiXCJ9IG9uQ2xpY2s9eygpPT57XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGhpc3RvcnkucHVzaCgnL2xpc3RpbmcvJytjb250ZW50LmN1c3RvbUlkKycvc2VsbGVyJyk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuc2hvd1RhYihcInNlbGxlclwiKVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH19PlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB7dGhpcy5jb250ZXh0LnQoXCJMSVNUSU5HX0RFVEFJTFNfVEFCX1NFTExFUlwiKX1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2J1dHRvbj5cbiAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxuXG4gICAgICAgICAgICAgICAgICAgICAgICB7LypUQUIgQ09OVEVOVCovfVxuICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9e1wibGlzdGluZy1kZXRhaWxzLXRhYlwifT5cblxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHsgdGhpcy5zdGF0ZS50YWIgPT09IFwiYnVuZGxlc1wiICYmXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxDb21tZXJjaWFsVGVybXNcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHByb2ZpbGU9e3Byb2ZpbGV9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBvblNlbGVjdFBhY2thZ2U9e3RoaXMuc2VsZWN0UGFja2FnZX1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHsuLi5jb250ZW50fVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAvPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB7dGhpcy5zdGF0ZS50YWIgPT09IFwiZXZlbnRcIiAmJiB0aGlzLmlzVGFiSGFzRGF0YShjb250ZW50LCBcImV2ZW50XCIpICYmXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxDb250ZW50SW5mb3JtYXRpb24gey4uLmNvbnRlbnR9Lz5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgeyB0aGlzLnN0YXRlLnRhYiA9PT0gXCJncmFudG9mcmlnaHRzXCIgJiZcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPFRlcm1TaGVldHsuLi5jb250ZW50fS8+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHsgdGhpcy5zdGF0ZS50YWIgPT09IFwiZWRpdGVkcHJvZ3JhbVwiICYmXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxQcm9ncmFtRGV0YWlscyB7Li4uY29udGVudH0vPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB7dGhpcy5zdGF0ZS50YWIgPT09IFwic2VsbGVyXCIgJiZcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPFNlbGxlciB7Li4uY29udGVudH0vPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cblxuXG4gICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgICAgICAgPC9kaXY+fVxuXG4gICAgICAgICAgICAgICAgICAgIHtidXlpbmdNb2RlICYmIDxkaXYgY2xhc3NOYW1lPXtcInJpZ2h0XCJ9IHN0eWxlPXt7cGFkZGluZzonMCAyMHB4J319ID5cblxuICAgICAgICAgICAgICAgICAgICAgICAgey8qTkFNRSovfVxuICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9e1wiaGVhZGVyXCJ9PlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPXtcImNvbnRlbnRcIn0+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwibmFtZVwiPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAge3NlbGVjdGVkUGFja2FnZSAmJiBzZWxlY3RlZFBhY2thZ2Uuc2FsZXNNZXRob2QgPT09IFwiRklYRURcIiAmJiBcIkJ1eSBub3dcIn1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHtzZWxlY3RlZFBhY2thZ2UgJiYgc2VsZWN0ZWRQYWNrYWdlLnNhbGVzTWV0aG9kID09PSBcIkJJRERJTkdcIiAmJiBcIkJpZFwifVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxuXG4gICAgICAgICAgICAgICAgICAgICAgICB7LypURVJSSVRPUklFUyovfVxuICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBzdHlsZT17e2Rpc3BsYXk6ICdmbGV4JywgbWFyZ2luQm90dG9tOiAxMH19PlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgc3R5bGU9e3tcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZmxleDogMSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcGFkZGluZ0xlZnQ6IDMwLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBwYWRkaW5nVG9wOiA1LFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBmb250V2VpZ2h0OiA2MDAsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRpc3BsYXk6ICdmbGV4JyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYWxpZ25JdGVtczogJ2NlbnRlcidcblxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH19PlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB7dGhpcy5jb250ZXh0LnQoXCJTYWxlcyBidW5kbGVcIil9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBzdHlsZT17e1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBmbGV4OiAnMi41IDEgMCUnLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH19PlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IHN0eWxlPXt7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBwYWRkaW5nOiAxMixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGJvcmRlcjogJzFweCBzb2xpZCAjRERFMUU3JyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGJhY2tncm91bmRDb2xvcjogJyNGQUZCRkMnLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbWFyZ2luOiA1LFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYm94U2l6aW5nOiAnYm9yZGVyLWJveCcsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBkaXNwbGF5OiAnZmxleCcsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBmbGV4RGlyZWN0aW9uOiAncm93JyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbG9yOiAnZ3JleScsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBtYXhXaWR0aDogNzUwXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH19PlxuXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB7c2VsZWN0ZWRQYWNrYWdlLmJ1bmRsZU1ldGhvZCA9PT0gXCJTRUxMX0FTX0JVTkRMRVwiXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAmJiBzZWxlY3RlZFBhY2thZ2UudGVycml0b3JpZXMubGVuZ3RoID4gMVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJiYgPGRpdiBzdHlsZT17eyAgfX0+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGltZyBzdHlsZT17eyB3aWR0aDogMjYsIGhlaWdodDogMjN9fSBzcmM9e3RoaXMucGFja2FnZUljb259Lz5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB7c2VsZWN0ZWRQYWNrYWdlLnRlcnJpdG9yaWVzLmxlbmd0aCA+IDEgJiYgPGRpdiBzdHlsZT17e21hcmdpbjogJzAgMTVweCcsIGZvbnRXZWlnaHQ6IDYwMH19PlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHtzZWxlY3RlZFBhY2thZ2UudGVycml0b3JpZXMubGVuZ3RofVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+fVxuXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2PlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHtzZWxlY3RlZFBhY2thZ2UubmFtZX1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGV4dHJhVGVycml0b3JpZXMgJiYgZXh0cmFUZXJyaXRvcmllcy5sZW5ndGggPiAzICYmIDxzcGFuXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzdHlsZT17e1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbG9yOiAnIzJEQTdFNicsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdGV4dERlY29yYXRpb246ICd1bmRlcmxpbmUnLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG1hcmdpbkxlZnQgOiA1LFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGN1cnNvciA6ICdwb2ludGVyJ1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfX1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG9uQ2xpY2s9eygpID0+IHt0aGlzLnNob3dBbGxUZXJyaXRvcmllcyhleHRyYVRlcnJpdG9yaWVzKX19PlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAge1wiK1wiICsgKGV4dHJhVGVycml0b3JpZXMubGVuZ3RoIC0gMyl9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvc3Bhbj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cblxuICAgICAgICAgICAgICAgICAgICAgICAgey8qRkVFKi99XG4gICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IHN0eWxlPXt7ZGlzcGxheTogJ2ZsZXgnLCBtYXJnaW5Cb3R0b206IDEwfX0+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBzdHlsZT17e1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBmbGV4OiAxLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBwYWRkaW5nTGVmdDogMzAsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHBhZGRpbmdUb3A6IDUsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGZvbnRXZWlnaHQ6IDYwMCxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZGlzcGxheTogJ2ZsZXgnLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBhbGlnbkl0ZW1zOiAnY2VudGVyJ1xuXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfX0+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHt0aGlzLmNvbnRleHQudChcIkNvbW1lcmNpYWwgaW5mb3JtYXRpb25cIil9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBzdHlsZT17e1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBmbGV4OiAnMi41IDEgMCUnLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH19PlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IHN0eWxlPXt7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBwYWRkaW5nOiAnOHB4IDEycHgnLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYm9yZGVyOiAnMXB4IHNvbGlkICNEREUxRTcnLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYmFja2dyb3VuZENvbG9yOiAnI0ZBRkJGQycsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBtYXJnaW46IDUsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBib3hTaXppbmc6ICdib3JkZXItYm94JyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRpc3BsYXk6ICdmbGV4JyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGZsZXhEaXJlY3Rpb246ICdyb3cnLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY29sb3I6ICdncmV5JyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG1heFdpZHRoOiA3NTBcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfX0+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB7c2VsZWN0ZWRQYWNrYWdlLnNhbGVzTWV0aG9kID09PSBcIkZJWEVEXCIgJiZcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgc3R5bGU9e3sgZGlzcGxheSA6ICdmbGV4JywgYWxpZ25JdGVtczogJ2NlbnRlcid9fT5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB7dGhpcy5jb250ZXh0LnQoXCJMaWNlbnNlIGZlZTpcIil9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gc3R5bGU9e2JpZFRleHRCb3hTdHlsZX0+e3NlbGVjdGVkUGFja2FnZS5mZWV9IHtnZXRDdXJyZW5jeVN5bWJvbChzZWxlY3RlZFBhY2thZ2UuY3VycmVuY3kuY29kZSl9PC9zcGFuPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+fVxuXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB7c2VsZWN0ZWRQYWNrYWdlLnNhbGVzTWV0aG9kID09PSBcIkJJRERJTkdcIiAmJlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBzdHlsZT17eyBkaXNwbGF5IDogJ2ZsZXgnLCBhbGlnbkl0ZW1zOiAnY2VudGVyJ319PlxuXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAge3RoaXMuY29udGV4dC50KFwiQmlkOlwiKX1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB7IWJpZFVwZGF0ZWQgJiZcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aW5wdXRcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc3R5bGU9e3tcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHBhZGRpbmc6ICc2cHggMTBweCcsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB3aWR0aDogMTAwLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbWFyZ2luTGVmdDogMTAsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBtYXJnaW5SaWdodDogMTAsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0ZXh0QWxpZ246ICdyaWdodCdcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfX1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdHlwZT1cIm51bWJlclwiXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhbHVlPXtiaWR9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG9uQ2hhbmdlPXtlPT57XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBsZXQgdmFsdWUgPSBlLnRhcmdldC52YWx1ZTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuc2V0U3RhdGUoe2JpZDp2YWx1ZX0pXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH19XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG1pbj17c2VsZWN0ZWRQYWNrYWdlLmZlZX0vPn1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB7YmlkVXBkYXRlZCAmJiA8c3BhbiBzdHlsZT17YmlkVGV4dEJveFN0eWxlfT57c2VsZWN0ZWRQYWNrYWdlLmZlZX0ge2dldEN1cnJlbmN5U3ltYm9sKHNlbGVjdGVkUGFja2FnZS5jdXJyZW5jeS5jb2RlKX08L3NwYW4+fVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHshYmlkVXBkYXRlZCAmJiBnZXRDdXJyZW5jeVN5bWJvbChzZWxlY3RlZFBhY2thZ2UuY3VycmVuY3kuY29kZSl9XG5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB7IWJpZFVwZGF0ZWQgJiZcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZGF0YS10aXBcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRhdGEtZm9yPSdhcHBseS1iaWQnXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBkYXRhLXRpcC1kaXNhYmxlPXtwYXJzZUZsb2F0KGJpZCk+PXBhcnNlRmxvYXQobWluaW11bUJpZCl9PlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGJ1dHRvbiBjbGFzc05hbWU9XCJzdGFuZGFyZC1idXR0b25cIlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzdHlsZT17YmlkQnV0dG9uU3R5bGV9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRpc2FibGVkPXshYmlkIHx8IHBhcnNlRmxvYXQoYmlkKSA9PT0gMCB8fCBwYXJzZUZsb2F0KGJpZCk8cGFyc2VGbG9hdChtaW5pbXVtQmlkKX1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgb25DbGljaz17dGhpcy5zZXRCaWR9PkFwcGx5PC9idXR0b24+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2Pn1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8UmVhY3RUb29sdGlwIGlkPSdhcHBseS1iaWQnPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3Bhbj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHt0aGlzLmNvbnRleHQudChcIkxJU1RJTkdfREVUQUlMU19FWENFRURfTUlOSU1VTVwiKX1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9zcGFuPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvUmVhY3RUb29sdGlwPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHtiaWRVcGRhdGVkICYmIDxidXR0b24gY2xhc3NOYW1lPVwibGluay1idXR0b25cIiBvbkNsaWNrPXt0aGlzLmVkaXRCaWR9PlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB7dGhpcy5jb250ZXh0LnQoXCJSYWlzZVwiKX1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2J1dHRvbj59XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj59XG5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgc3R5bGU9e3tcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBtYXJnaW46ICc1cHggMTBweCdcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH19PlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHt0aGlzLmNvbnRleHQudChcIlRlY2huaWNhbCBmZWU6XCIpfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIHN0eWxlPXtiaWRUZXh0Qm94U3R5bGV9PlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB7dGVjaG5pY2FsRmVlLlRFQ0hOSUNBTF9GRUUgPT09IFwiT05fVE9QXCIgJiYgdGVjaG5pY2FsRmVlLlRFQ0hOSUNBTF9GRUVfUEVSQ0VOVEFHRSArIFwiJVwifVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB7dGVjaG5pY2FsRmVlLlRFQ0hOSUNBTF9GRUUgIT09IFwiT05fVE9QXCIgJiYgXCJJbmNsdWRlZFwifVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvc3Bhbj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxuXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IHN0eWxlPXt7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbWFyZ2luOiAnNXB4IDEwcHgnXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9fT5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB7dGhpcy5jb250ZXh0LnQoXCJUb3RhbDpcIil9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gc3R5bGU9e2JpZFRleHRCb3hTdHlsZX0+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHt0aGlzLmdldFRvdGFsRmVlKCkgKyBnZXRDdXJyZW5jeVN5bWJvbChzZWxlY3RlZFBhY2thZ2UuY3VycmVuY3kuY29kZSl9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9zcGFuPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XG5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cblxuICAgICAgICAgICAgICAgICAgICAgICAgey8qUEFZTUVOVCBERVRBSUxTKi99XG4gICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IHN0eWxlPXt7ZGlzcGxheTogJ2ZsZXgnLCBtYXJnaW5Cb3R0b206IDEwfX0+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBzdHlsZT17e1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBmbGV4OiAxLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBwYWRkaW5nTGVmdDogMzAsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHBhZGRpbmdUb3A6IDUsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGZvbnRXZWlnaHQ6IDYwMCxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZGlzcGxheTogJ2ZsZXgnLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBhbGlnbkl0ZW1zOiAnY2VudGVyJ1xuXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfX0+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHt0aGlzLmNvbnRleHQudChcIlBheW1lbnQgZGV0YWlsc1wiKX1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IHN0eWxlPXt7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGZsZXg6ICcyLjUgMSAwJScsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfX0+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNlbGVjdGVkUGFja2FnZS5pbnN0YWxsbWVudHMgJiYgc2VsZWN0ZWRQYWNrYWdlLmluc3RhbGxtZW50cy5tYXAoKGluc3RhbGxtZW50LCBpbmRleCkgPT4ge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiA8ZGl2IGtleT17XCJpbnN0YWxsbWVudC1cIisgaW5kZXh9IHN0eWxlPXt7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHBhZGRpbmc6IDEyLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBib3JkZXI6ICcxcHggc29saWQgI0RERTFFNycsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGJhY2tncm91bmRDb2xvcjogJyNGQUZCRkMnLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBtYXJnaW46IDUsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGJveFNpemluZzogJ2JvcmRlci1ib3gnLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBkaXNwbGF5OiAnZmxleCcsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGZsZXhEaXJlY3Rpb246ICdyb3cnLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb2xvcjogJ2dyZXknLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBtYXhXaWR0aDogNzUwXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfX0+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgc3R5bGU9e3tcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG1hcmdpbjogJzAgMTBweCAwIDAnLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZm9udFdlaWdodDogNjAwXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH19Pnt0aGlzLm9yZGluYWxfc3VmZml4X29mKGluZGV4ICsgMSl9IHt0aGlzLmNvbnRleHQudChcImluc3RhbGxtZW50XCIpfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBzdHlsZT17e21hcmdpbjogJzAgMzBweCd9fT57aW5zdGFsbG1lbnQudmFsdWV9JTwvZGl2PlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IHN0eWxlPXt7bWFyZ2luOiAnMCAxMHB4J319PlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAge2luc3RhbGxtZW50LnR5cGUgPT09IFwiREFZXCIgJiYgaW5zdGFsbG1lbnQuZGF5cyArIHRoaXMuY29udGV4dC50KFwiSU5TVEFMTE1FTlRfQ0xPU1VSRV9EQVlTXCIpfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAge2luc3RhbGxtZW50LnR5cGUgPT09IFwiREFURVwiICYmIFwiIFwiICsgTW9tZW50KGluc3RhbGxtZW50LmRhdGUpLmZvcm1hdCgnREQvTU0vWVlZWScpfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0pXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxuXG4gICAgICAgICAgICAgICAgICAgICAgICB7LypDT01QQU5ZKi99XG4gICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IHN0eWxlPXt7ZGlzcGxheTogJ2ZsZXgnLCBtYXJnaW5Cb3R0b206IDEwfX0+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBzdHlsZT17e1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBmbGV4OiAxLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBwYWRkaW5nTGVmdDogMzAsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHBhZGRpbmdUb3A6IDUsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGZvbnRXZWlnaHQ6IDYwMCxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZGlzcGxheTogJ2ZsZXgnLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBhbGlnbkl0ZW1zOiAnY2VudGVyJ1xuXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfX0+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHt0aGlzLmNvbnRleHQudChcIkNIRUNLT1VUX0xBQkVMX0NPTVBBTllfQUREUkVTU1wiKX1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IHN0eWxlPXt7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGZsZXg6ICcyLjUgMSAwJScsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfX0+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgc3R5bGU9e3tcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHBhZGRpbmc6IDEyLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYm9yZGVyOiAnMXB4IHNvbGlkICNEREUxRTcnLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYmFja2dyb3VuZENvbG9yOiAnI0ZBRkJGQycsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBtYXJnaW46IDUsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBib3hTaXppbmc6ICdib3JkZXItYm94JyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRpc3BsYXk6ICdmbGV4JyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGZsZXhEaXJlY3Rpb246ICdyb3cnLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY29sb3I6ICdncmV5JyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG1heFdpZHRoOiA3NTBcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfX0+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgW2NvbXBhbnkubGVnYWxOYW1lLCBjb21wYW55LmFkZHJlc3MsIGNvbXBhbnkuemlwLCBjb21wYW55LmNvdW50cnkubmFtZV0uam9pbihcIiwgXCIpXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aW1nIHNyYz17dGhpcy5kcmFmdEljb259XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG9uQ2xpY2s9e2UgPT4ge3RoaXMuc2V0U3RhdGUoe2VkaXRDb21wYW55T3BlbjogdHJ1ZX0pfX1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc3R5bGU9e3tjdXJzb3I6ICdwb2ludGVyJywgbWFyZ2luOiAnLTJweCAxMHB4J319IC8+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XG5cbiAgICAgICAgICAgICAgICAgICAgICAgIHsvKkxJQ0VOU0UqL31cbiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgc3R5bGU9e3tcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBkaXNwbGF5OiAnZmxleCcsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAganVzdGlmeUNvbnRlbnQ6ICdjZW50ZXInLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRleHREZWNvcmF0aW9uOiAndW5kZXJsaW5lJyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjdXJzb3IgOiAncG9pbnRlcicsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgY29sb3I6ICcjNDhDMEZFJyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBmb250U2l6ZTogMTYsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgbWFyZ2luOiAxMFxuICAgICAgICAgICAgICAgICAgICAgICAgfX0gb25DbGljaz17KCk9PntcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB2aWV3TGljZW5zZUN1c3RvbShjb250ZW50LmN1c3RvbUlkLCBzZWxlY3RlZFBhY2thZ2UuaWQsIGJpZCk7XG4gICAgICAgICAgICAgICAgICAgICAgICB9fT5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aW1nIHN0eWxlPXt7bWFyZ2luUmlnaHQ6IDEwfX0gc3JjPXt0aGlzLnBkZkljb259Lz5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB7dGhpcy5jb250ZXh0LnQoXCJMaWNlbnNlIGFncmVlbWVudFwiKX1cbiAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxuXG4gICAgICAgICAgICAgICAgICAgICAgICB7LypTSUdOQVRVUkUqL31cbiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXY+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPERpZ2l0YWxTaWduYXR1cmUgc2lnbmF0dXJlPXtzaWduYXR1cmV9IG9uUmVhZHk9e3NpZ25hdHVyZSA9PiB7IHRoaXMuc2V0U3RhdGUoe3NpZ25hdHVyZX0pIH19IC8+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBzdHlsZT17e3RleHRBbGlnbjonY2VudGVyJyxwYWRkaW5nOicyMHB4IDAgMCd9fT5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGlucHV0IHR5cGU9XCJjaGVja2JveFwiXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZD1cInRlcm1zLWJ1eVwiXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjbGFzc05hbWU9XCJjYS1jaGVja2JveFwiXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzdHlsZT17e21hcmdpblJpZ2h0OlwiNXB4XCJ9fVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgb25DaGFuZ2U9e2UgPT57IHRoaXMuc2V0U3RhdGUoe3Rlcm1zOiBlLnRhcmdldC5jaGVja2VkfSkgfX1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNoZWNrZWQ9e3RoaXMuc3RhdGUudGVybXN9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsYWJlbCBodG1sRm9yPXtcInRlcm1zLWJ1eVwifT5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHt0aGlzLmNvbnRleHQudChcIkNIRUNLT1VUX1RFUk1TXCIpfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2xhYmVsPlxuXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgc3R5bGU9e3tcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBkaXNwbGF5OiAnZmxleCcsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAganVzdGlmeUNvbnRlbnQ6ICdjZW50ZXInLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIG1hcmdpblRvcDogMjAsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgbWFyZ2luQm90dG9tOiA0MFxuICAgICAgICAgICAgICAgICAgICAgICAgfX0+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgeyAhc3Bpbm5lciAmJiBzZWxlY3RlZFBhY2thZ2Uuc2FsZXNNZXRob2QgPT09IFwiRklYRURcIiAmJlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxidXR0b24gY2xhc3NOYW1lPVwic3RhbmRhcmQtYnV0dG9uXCJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG9uQ2xpY2s9e3RoaXMucGxhY2VCaWR9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBkaXNhYmxlZD17dGhpcy5pbnZhbGlkUGFja2FnZSgpfT5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAge3RoaXMuY29udGV4dC50KFwiQ0hFQ0tPVVRfQlVUVE9OX0JVWVwiKX1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2J1dHRvbj59XG5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB7ICFzcGlubmVyICYmIHNlbGVjdGVkUGFja2FnZS5zYWxlc01ldGhvZCAhPT0gXCJGSVhFRFwiICYmXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPGJ1dHRvbiBjbGFzc05hbWU9XCJzdGFuZGFyZC1idXR0b25cIlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgb25DbGljaz17dGhpcy5wbGFjZUJpZH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRpc2FibGVkPXt0aGlzLmludmFsaWRQYWNrYWdlKCl9PlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB7dGhpcy5jb250ZXh0LnQoXCJDSEVDS09VVF9CVVRUT05fUExBQ0VfQklEXCIpfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvYnV0dG9uPn1cblxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHsgc3Bpbm5lciAmJiA8aSBjbGFzc05hbWU9XCJmYSBmYS1jb2cgZmEtc3BpblwiLz59XG4gICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgICAgICAgPC9kaXY+fVxuICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgPC9kaXY+XG5cbiAgICAgICAgKTtcbiAgICB9XG59XG5cbkxpc3RpbmdEZXRhaWxzLmNvbnRleHRUeXBlcyA9IHtcbiAgICB0OiBQcm9wVHlwZXMuZnVuYy5pc1JlcXVpcmVkXG59O1xuXG5jb25zdCBtYXBTdGF0ZVRvUHJvcHMgPSBzdGF0ZSA9PiB7XG4gICAgcmV0dXJuIHN0YXRlXG59O1xuXG5jb25zdCBtYXBEaXNwYXRjaFRvUHJvcHMgPSBkaXNwYXRjaCA9PiB7XG4gICAgcmV0dXJuIHtcbiAgICAgICAgb25DbGljazogaWQgPT4gZGlzcGF0Y2godGVzdChpZCkpXG4gICAgfVxufTtcblxuXG5leHBvcnQgZGVmYXVsdCBjb25uZWN0KFxuICAgIG1hcFN0YXRlVG9Qcm9wcyxcbiAgICBtYXBEaXNwYXRjaFRvUHJvcHNcbikoTGlzdGluZ0RldGFpbHMpXG5cblxuLy8gV0VCUEFDSyBGT09URVIgLy9cbi8vIC4vc3JjL0FwcEJ1bmRsZS9SZXNvdXJjZXMvcHVibGljL2phdmFzY3JpcHQvYnV5L2NvbnRhaW5lcnMvTGlzdGluZ0RldGFpbHMuanMiLCJpbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xuaW1wb3J0IHsgY29ubmVjdCB9IGZyb20gXCJyZWFjdC1yZWR1eFwiO1xuaW1wb3J0IHsgdGVzdCB9IGZyb20gXCIuLi9hY3Rpb25zXCI7XG5pbXBvcnQgRXZlbnRGaWx0ZXIgZnJvbSAnLi4vY29tcG9uZW50cy9FdmVudEZpbHRlcic7XG5pbXBvcnQgUmlnaHRzRmlsdGVyIGZyb20gJy4uL2NvbXBvbmVudHMvUmlnaHRzRmlsdGVyJztcbmltcG9ydCBDb250ZW50TGlzdGluZyBmcm9tICcuLi8uLi9tYWluL2NvbXBvbmVudHMvQ29udGVudExpc3RpbmcnO1xuaW1wb3J0IExpc3RpbmdEZXRhaWxzIGZyb20gJy4vTGlzdGluZ0RldGFpbHMnO1xuaW1wb3J0IHtcbiAgICBhZGRSaWdodCwgY2xlYXJVcGRhdGVGaWx0ZXIsIHJlbW92ZVJpZ2h0LCB1cGRhdGVDb3VudHJpZXMsIHVwZGF0ZUV4Y2x1c2l2ZSxcbiAgICB1cGRhdGVNYW55XG59IGZyb20gXCIuLi9hY3Rpb25zL2ZpbHRlckFjdGlvbnNcIjtcbmltcG9ydCB7Z29Ub0xpc3Rpbmd9IGZyb20gXCIuLi8uLi9tYWluL2FjdGlvbnMvdXRpbHNcIjtcbmltcG9ydCB7dXBkYXRlRXZlbnQsIHVwZGF0ZVNwb3J0fSBmcm9tIFwiLi4vYWN0aW9ucy9maWx0ZXJBY3Rpb25zXCI7XG5pbXBvcnQge3VwZGF0ZVByb2ZpbGV9IGZyb20gXCIuLi8uLi9tYWluL2FjdGlvbnMvdXNlckFjdGlvbnNcIjtcbmltcG9ydCBSaWdodHNMZWdlbmQgZnJvbSBcIi4uLy4uL21haW4vY29tcG9uZW50cy9SaWdodHNMZWdlbmRcIjtcbmltcG9ydCB7UHJvcFR5cGVzfSBmcm9tIFwicHJvcC10eXBlc1wiO1xuY29uc3QgcXVlcnlTdHJpbmcgPSByZXF1aXJlKCdxdWVyeS1zdHJpbmcnKTtcblxuY2xhc3MgTWFya2V0cGxhY2UgZXh0ZW5kcyBSZWFjdC5Db21wb25lbnQge1xuICAgIGNvbnN0cnVjdG9yKHByb3BzKSB7XG4gICAgICAgIHN1cGVyKHByb3BzKTtcbiAgICAgICAgdGhpcy5zdGF0ZSA9IHtcbiAgICAgICAgICAgIGRlZmF1bHRSaWdodHNQYWNrYWdlIDogSlNPTi5wYXJzZShwcm9wcy5yaWdodHMpLFxuICAgICAgICAgICAgY29tcGFueSA6IEpTT04ucGFyc2UocHJvcHMuY29tcGFueSksXG4gICAgICAgICAgICBsb2FkaW5nTGlzdGluZzogZmFsc2UsXG4gICAgICAgICAgICBsb2FkaW5nTGlzdGluZ0RldGFpbHMgOiBmYWxzZSxcbiAgICAgICAgICAgIHNob3dEZXRhaWxzIDogZmFsc2UsXG4gICAgICAgICAgICBsaXN0aW5ncyA6IFtdLFxuICAgICAgICAgICAgY291bnRyaWVzIDogW10sXG4gICAgICAgICAgICB0ZXJyaXRvcmllczogW10sXG4gICAgICAgICAgICBwcm9maWxlIDogcHJvcHMudXNlci5wcm9maWxlLFxuICAgICAgICAgICAgZXJyb3JNZXNzYWdlOiAnJ1xuICAgICAgICB9O1xuICAgIH1cblxuICAgIGNvbXBvbmVudERpZE1vdW50ICgpIHtcbiAgICAgICAgY29uc3Qge2NsZWFyVXBkYXRlRmlsdGVyLCBtYXRjaCwgbG9jYXRpb259ID0gdGhpcy5wcm9wcztcblxuICAgICAgICBpZiAoIG1hdGNoICYmIG1hdGNoLnBhcmFtcyAmJiBtYXRjaC5wYXJhbXMuY3VzdG9tSWQgKXtcbiAgICAgICAgICAgIHRoaXMuc2VsZWN0TGlzdGluZyhtYXRjaC5wYXJhbXMuY3VzdG9tSWQpO1xuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG5cbiAgICAgICAgaWYgKCBtYXRjaCAmJiBtYXRjaC5wYXJhbXMgJiYgbWF0Y2gucGFyYW1zLmZpbHRlck5hbWUgKXtcblxuICAgICAgICAgICAgc3dpdGNoIChtYXRjaC5wYXJhbXMuZmlsdGVyTmFtZSl7XG4gICAgICAgICAgICAgICAgY2FzZSBcInNwb3J0XCI6XG4gICAgICAgICAgICAgICAgICAgIHRoaXMucHJvcHMuc2VsZWN0U3BvcnQoe3ZhbHVlOm1hdGNoLnBhcmFtcy5maWx0ZXJWYWx1ZSwgbGFiZWwgOiBtYXRjaC5wYXJhbXMuZmlsdGVyVmFsdWUgfSk7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICAgICAgICBjYXNlIFwic2VhcmNoXCI6XG4gICAgICAgICAgICAgICAgICAgIHRoaXMucHJvcHMudXBkYXRlRXZlbnQoIG1hdGNoLnBhcmFtcy5maWx0ZXJWYWx1ZSk7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICAgICAgICBjYXNlIFwidGVycml0b3J5XCI6XG4gICAgICAgICAgICAgICAgICAgIHRoaXMucHJvcHMudXBkYXRlRmlsdGVycygge2NvdW50cmllczogW21hdGNoLnBhcmFtcy5maWx0ZXJWYWx1ZV19KTtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgICAgICAgIGNhc2UgXCJtdWx0aVwiOlxuICAgICAgICAgICAgICAgICAgICBsZXQgY3VzdG9tRmlsdGVyID0gcXVlcnlTdHJpbmcucGFyc2UoIGxvY2F0aW9uLnNlYXJjaCx7YXJyYXlGb3JtYXQ6ICdpbmRleCd9KTtcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5wcm9wcy51cGRhdGVGaWx0ZXJzKGN1c3RvbUZpbHRlcik7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICAgIH1cblxuICAgICAgICB9XG5cbiAgICAgICAgdGhpcy5maWx0ZXIoKTtcbiAgICAgICAgY2xlYXJVcGRhdGVGaWx0ZXIoKTtcbiAgICAgICAgdGhpcy5wcm9wcy51cGRhdGVQcm9maWxlKFwiQlVZRVJcIik7XG5cbiAgICAgICAgalF1ZXJ5KCdib2R5LCAubWFya2V0cGxhY2UtY29udGFpbmVyJykuY3NzKCdiYWNrZ3JvdW5kLWNvbG9yJywgJyNlZWUnKSAvL3RvZG86IHJlbW92ZSB0aGlzIHdoZW4gb3RoZXIgcGFnZSByZWRlc2lnbiByZWFkeVxuICAgIH1cblxuICAgIGNvbXBvbmVudFdpbGxVbm1vdW50KCl7XG4gICAgICAgIGpRdWVyeSgnYm9keSwgLm1hcmtldHBsYWNlLWNvbnRhaW5lcicpLnJlbW92ZUF0dHIoJ3N0eWxlJykgLy90b2RvOiByZW1vdmUgdGhpcyB3aGVuIG90aGVyIHBhZ2UgcmVkZXNpZ24gcmVhZHlcbiAgICB9XG5cbiAgICBjb21wb25lbnRXaWxsUmVjZWl2ZVByb3BzICggcHJvcHMgKSB7XG4gICAgICAgIGNvbnN0IHtmaWx0ZXIsY2xlYXJVcGRhdGVGaWx0ZXJ9ID0gcHJvcHM7XG5cbiAgICAgICAgdGhpcy5zZXRTdGF0ZSh7c29ydFNhbGVzUGFja2FnZXMgOiBmYWxzZX0pO1xuICAgICAgICBpZiAoIGZpbHRlci5mb3JjZVVwZGF0ZSApIHtcbiAgICAgICAgICAgIHRoaXMuZ2V0Q29udGVudCh0aGlzLnBhcnNlRmlsdGVyKGZpbHRlcikpO1xuICAgICAgICAgICAgY2xlYXJVcGRhdGVGaWx0ZXIoKTtcbiAgICAgICAgfVxuICAgIH1cblxuICAgIHNlbGVjdExpc3RpbmcgPSAoaWQpID0+IHtcblxuICAgICAgICBsZXQgX3RoaXMgPSB0aGlzO1xuXG4gICAgICAgIGlmICggaWQgPT09IF90aGlzLnN0YXRlLmlkICl7XG4gICAgICAgICAgICBfdGhpcy5zZXRTdGF0ZSh7XG4gICAgICAgICAgICAgICAgc2hvd0RldGFpbHMgOiB0cnVlXG4gICAgICAgICAgICB9KTtcblxuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG5cbiAgICAgICAgX3RoaXMuc2V0U3RhdGUoe1xuICAgICAgICAgICAgaWQgOiBpZCxcbiAgICAgICAgICAgIGxvYWRpbmdMaXN0aW5nRGV0YWlscyA6IHRydWUsXG4gICAgICAgICAgICBzaG93RGV0YWlscyA6IHRydWVcbiAgICAgICAgfSk7XG5cbiAgICAgICAgQ29udGVudEFyZW5hLkNvbnRlbnRBcGkuZ2V0QnlDdXN0b21JZChpZCkuZG9uZSgoY29udGVudCkgPT4ge1xuXG4gICAgICAgICAgICBfdGhpcy5zZXRTdGF0ZSh7XG4gICAgICAgICAgICAgICAgY29udGVudCA6IGNvbnRlbnQsXG4gICAgICAgICAgICAgICAgbG9hZGluZ0xpc3RpbmdEZXRhaWxzIDogZmFsc2VcbiAgICAgICAgICAgIH0pXG4gICAgICAgIH0pLmZhaWwoZXJyb3IgPT4ge1xuICAgICAgICAgICAgX3RoaXMuc2V0U3RhdGUoe1xuICAgICAgICAgICAgICAgIGVycm9yTWVzc2FnZTogZXJyb3IuZGF0YS5yZXNwb25zZUpTT04ubWVzc2FnZSxcbiAgICAgICAgICAgICAgICBsb2FkaW5nTGlzdGluZ0RldGFpbHM6IGZhbHNlXG4gICAgICAgICAgICB9KVxuXG4gICAgICAgIH0pO1xuICAgIH07XG5cbiAgICBwYXJzZUZpbHRlciA9IChmaWx0ZXIpID0+e1xuICAgICAgICBsZXQgcmVzcG9uc2UgPSB7XG4gICAgICAgICAgICByaWdodHM6IGZpbHRlci5yaWdodHMsXG4gICAgICAgICAgICBjb3VudHJpZXM6IGZpbHRlci5jb3VudHJpZXMsXG4gICAgICAgIH07XG5cbiAgICAgICAgaWYgKCBmaWx0ZXIuc3BvcnQgKSB7XG4gICAgICAgICAgICByZXNwb25zZS5zcG9ydHMgPSAoZmlsdGVyLnNwb3J0LnZhbHVlKSA/IFt7bmFtZTogZmlsdGVyLnNwb3J0LmxhYmVsfV0gOiAoIWZpbHRlci5zcG9ydC5sYWJlbCkgPyBbe25hbWU6IGZpbHRlci5zcG9ydH1dIDogbnVsbDtcbiAgICAgICAgfVxuICAgICAgICBpZiAoIGZpbHRlci5leGNsdXNpdmUgKSByZXNwb25zZS5leGNsdXNpdmUgPSBmaWx0ZXIuZXhjbHVzaXZlO1xuICAgICAgICBpZiAoIGZpbHRlci5ldmVudCApIHJlc3BvbnNlLmV2ZW50ID0gZmlsdGVyLmV2ZW50O1xuICAgICAgICBpZiAoIGZpbHRlci5pbmNsdWRlQWxsQ291bnRyaWVzICkgcmVzcG9uc2UuaW5jbHVkZUFsbENvdW50cmllcyA9IGZpbHRlci5pbmNsdWRlQWxsQ291bnRyaWVzO1xuXG4gICAgICAgIHJldHVybiByZXNwb25zZTtcbiAgICB9O1xuXG4gICAgcGFyc2VGaWx0ZXJGb3JVcmwgPSAoZmlsdGVyKSA9PntcblxuICAgICAgICBsZXQgcmVzcG9uc2UgPSB7XG4gICAgICAgICAgICByaWdodHM6IGZpbHRlci5yaWdodHMsXG4gICAgICAgICAgICBjb3VudHJpZXM6IGZpbHRlci5jb3VudHJpZXMsXG4gICAgICAgIH07XG5cbiAgICAgICAgaWYgKCBmaWx0ZXIuc3BvcnQgJiYgZmlsdGVyLnNwb3J0LnZhbHVlICYmIGZpbHRlci5zcG9ydC5sYWJlbCAhPT0gXCJBbGwgc3BvcnRzXCIgKSB7XG4gICAgICAgICAgICByZXNwb25zZS5zcG9ydCA9IGZpbHRlci5zcG9ydC5sYWJlbFxuICAgICAgICB9XG5cbiAgICAgICAgaWYgKCBmaWx0ZXIuc3BvcnQgJiYgIWZpbHRlci5zcG9ydC52YWx1ZSAmJiAhZmlsdGVyLnNwb3J0LmxhYmVsKSB7XG4gICAgICAgICAgICByZXNwb25zZS5zcG9ydCA9IGZpbHRlci5zcG9ydFxuICAgICAgICB9XG5cbiAgICAgICAgaWYgKCBmaWx0ZXIuZXhjbHVzaXZlICkgcmVzcG9uc2UuZXhjbHVzaXZlID0gZmlsdGVyLmV4Y2x1c2l2ZTtcbiAgICAgICAgaWYgKCBmaWx0ZXIuaW5jbHVkZUFsbENvdW50cmllcyApIHJlc3BvbnNlLmluY2x1ZGVBbGxDb3VudHJpZXMgPSBmaWx0ZXIuaW5jbHVkZUFsbENvdW50cmllcztcbiAgICAgICAgaWYgKCBmaWx0ZXIuZXZlbnQgKSByZXNwb25zZS5ldmVudCA9IGZpbHRlci5ldmVudDtcblxuICAgICAgICByZXR1cm4gcmVzcG9uc2U7XG4gICAgfTtcblxuICAgIGdldENvbnRlbnQgPSAoIGZpbHRlciApID0+IHtcbiAgICAgICAgbGV0IF90aGlzID0gdGhpcztcblxuICAgICAgICBfdGhpcy5zZXRTdGF0ZSh7XG4gICAgICAgICAgICBsb2FkaW5nTGlzdGluZyA6IHRydWUsXG4gICAgICAgICAgICBsaXN0aW5nczogW11cbiAgICAgICAgfSk7XG5cbiAgICAgICAgQ29udGVudEFyZW5hLkFwaS5nZXRKc29uQ29udGVudChmaWx0ZXIpLmRvbmUoKGxpc3RpbmdzKSA9PiB7XG5cbiAgICAgICAgICAgIGxpc3RpbmdzID0gbGlzdGluZ3MubWFwKCBsaXN0aW5nID0+IENvbnRlbnRBcmVuYS5VdGlscy5jb250ZW50UGFyc2VyRnJvbVNlcnZlcihsaXN0aW5nKSApO1xuICAgICAgICAgICAgX3RoaXMuc2V0U3RhdGUoe2xpc3RpbmdzOiBsaXN0aW5ncywgbG9hZGluZ0xpc3RpbmcgOiBmYWxzZSwgc29ydFNhbGVzUGFja2FnZXMgOiB0cnVlfSk7XG4gICAgICAgIH0pO1xuICAgIH07XG5cbiAgICBmaWx0ZXIgPSAoKSA9PiB7XG5cbiAgICAgICAgY29uc3QgeyBmaWx0ZXIgfSA9IHRoaXMucHJvcHM7XG4gICAgICAgIGxldCBwYXJzZWRGaWx0ZXIgPSB0aGlzLnBhcnNlRmlsdGVyKGZpbHRlcik7XG4gICAgICAgIHRoaXMuZ2V0Q29udGVudChwYXJzZWRGaWx0ZXIpO1xuXG4gICAgfTtcblxuICAgIGZpbHRlckJ5Um91dGUgPSAoKSA9PiB7XG4gICAgICAgIGNvbnN0IHtoaXN0b3J5LCBmaWx0ZXJ9ID0gdGhpcy5wcm9wcztcbiAgICAgICAgY29uc3Qgc2VyaWFsaXplID0gZnVuY3Rpb24ob2JqLCBwcmVmaXgpIHtcbiAgICAgICAgICAgIHZhciBzdHIgPSBbXSxcbiAgICAgICAgICAgICAgICBwO1xuICAgICAgICAgICAgZm9yIChwIGluIG9iaikge1xuICAgICAgICAgICAgICAgIGlmIChvYmouaGFzT3duUHJvcGVydHkocCkpIHtcbiAgICAgICAgICAgICAgICAgICAgdmFyIGsgPSBwcmVmaXggPyBwcmVmaXggKyBcIltcIiArIHAgKyBcIl1cIiA6IHAsXG4gICAgICAgICAgICAgICAgICAgICAgICB2ID0gb2JqW3BdO1xuICAgICAgICAgICAgICAgICAgICBzdHIucHVzaCgodiAhPT0gbnVsbCAmJiB0eXBlb2YgdiA9PT0gXCJvYmplY3RcIikgP1xuICAgICAgICAgICAgICAgICAgICAgICAgc2VyaWFsaXplKHYsIGspIDpcbiAgICAgICAgICAgICAgICAgICAgICAgIGVuY29kZVVSSUNvbXBvbmVudChrKSArIFwiPVwiICsgZW5jb2RlVVJJQ29tcG9uZW50KHYpKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICByZXR1cm4gc3RyLmpvaW4oXCImXCIpO1xuICAgICAgICB9O1xuICAgICAgICBoaXN0b3J5LnB1c2goXCIvbWFya2V0cGxhY2UvZmlsdGVyL211bHRpP1wiK3NlcmlhbGl6ZSh0aGlzLnBhcnNlRmlsdGVyRm9yVXJsKGZpbHRlcikpKTtcblxuXG4gICAgfTtcblxuICAgIHJlbmRlciAoKSB7XG4gICAgICAgIGNvbnN0IHsgZmlsdGVyLCBzYWxlc1BhY2thZ2UgLGhpc3RvcnksIGxvY2F0aW9uLCBtYXRjaCB9ID0gdGhpcy5wcm9wcztcbiAgICAgICAgY29uc3Qge1xuICAgICAgICAgICAgbGlzdGluZ3MsXG4gICAgICAgICAgICBsb2FkaW5nTGlzdGluZyxcbiAgICAgICAgICAgIGxvYWRpbmdMaXN0aW5nRGV0YWlscyxcbiAgICAgICAgICAgIHNob3dEZXRhaWxzLFxuICAgICAgICAgICAgY29udGVudCxcbiAgICAgICAgICAgIGNvbXBhbnksXG4gICAgICAgICAgICBzb3J0U2FsZXNQYWNrYWdlcyxcbiAgICAgICAgICAgIHByb2ZpbGUsXG4gICAgICAgICAgICBlcnJvck1lc3NhZ2UsXG4gICAgICAgICAgICBkZWZhdWx0UmlnaHRzUGFja2FnZVxuICAgICAgICB9ID0gdGhpcy5zdGF0ZTtcblxuICAgICAgICBpZiAoZXJyb3JNZXNzYWdlKSB7XG4gICAgICAgICAgICByZXR1cm4gPGgyIGNsYXNzTmFtZT1cInRleHQtY2VudGVyXCI+e2Vycm9yTWVzc2FnZX08L2gyPlxuICAgICAgICB9XG4gICAgICAgIHJldHVybiAoXG4gICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cIm1hbmFnZXItY29udGVudFwiIHN0eWxlPXt7ZmxleERpcmVjdGlvbjogJ3JvdycsIGZsZXhXcmFwOiAnd3JhcCd9fT5cbiAgICAgICAgICAgICAgICA8ZGl2IHN0eWxlPXt7d2lkdGg6ICcxMDAlJywgdGV4dEFsaWduOiAncmlnaHQnfX0+XG4gICAgICAgICAgICAgICAgICAgIDxSaWdodHNMZWdlbmQgLz5cbiAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgICB7IXNob3dEZXRhaWxzICYmIDxkaXYgY2xhc3NOYW1lPVwiYnV5LWNvbnRhaW5lci1sZWZ0XCI+XG4gICAgICAgICAgICAgICAgICAgIDxFdmVudEZpbHRlclxuICAgICAgICAgICAgICAgICAgICAgICAgb25GaWx0ZXI9e3RoaXMuZmlsdGVyfS8+XG4gICAgICAgICAgICAgICAgICAgIDxSaWdodHNGaWx0ZXJcbiAgICAgICAgICAgICAgICAgICAgICAgIG9uRmlsdGVyPXt0aGlzLmZpbHRlckJ5Um91dGV9XG4gICAgICAgICAgICAgICAgICAgICAgICByaWdodHNQYWNrYWdlPXt0aGlzLnN0YXRlLmRlZmF1bHRSaWdodHNQYWNrYWdlfS8+XG4gICAgICAgICAgICAgICAgPC9kaXY+fVxuXG4gICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICAhc2hvd0RldGFpbHMgJiYgKFxuICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJidXktY29udGFpbmVyLXJpZ2h0XCI+XG5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB7bGlzdGluZ3MubGVuZ3RoID4gMCAmJlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGxpc3RpbmdzLm1hcChsaXN0aW5nID0+IHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIChcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxDb250ZW50TGlzdGluZ1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG9uU2VsZWN0PXsoKSA9PiBnb1RvTGlzdGluZyhsaXN0aW5nLmN1c3RvbUlkLCB0cnVlKX1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBrZXk9e2xpc3RpbmcuY3VzdG9tSWR9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZmlsdGVyPXtmaWx0ZXJ9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc29ydFNhbGVzUGFja2FnZXM9e3NvcnRTYWxlc1BhY2thZ2VzfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRlZmF1bHRSaWdodHNQYWNrYWdlPXtkZWZhdWx0UmlnaHRzUGFja2FnZX1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB7Li4ubGlzdGluZ31cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfSl9XG5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB7bGlzdGluZ3MubGVuZ3RoID09PSAwICYmXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgbG9hZGluZ0xpc3RpbmcgJiYgKFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT17XCJiaWctc3Bpbm5lclwifT5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpIGNsYXNzTmFtZT1cImZhIGZhLWNvZyBmYS1zcGluXCIgLz5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgKX1cblxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHtsaXN0aW5ncy5sZW5ndGggPT09IDAgJiZcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAhbG9hZGluZ0xpc3RpbmcgJiYgKFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzc05hbWU9e1wibm8tcmVzdWx0c1wifT5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHt0aGlzLmNvbnRleHQudChcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcIk1BUktFVFBMQUNFX05PX1JFU1VMVFNcIlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgKX1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9zcGFuPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICl9XG4gICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgICAgICAgKVxuICAgICAgICAgICAgICAgIH1cblxuXG4gICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICBsb2FkaW5nTGlzdGluZ0RldGFpbHMgJiYgPGRpdiBjbGFzc05hbWU9e1wiYmlnLXNwaW5uZXJcIn0+XG4gICAgICAgICAgICAgICAgICAgICAgICA8aSBjbGFzc05hbWU9XCJmYSBmYS1jb2cgZmEtc3BpblwiLz5cbiAgICAgICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICBzaG93RGV0YWlscyAmJiAhbG9hZGluZ0xpc3RpbmdEZXRhaWxzICYmIDxMaXN0aW5nRGV0YWlsc1xuICAgICAgICAgICAgICAgICAgICAgICAga2V5PXtsb2NhdGlvbi5wYXRobmFtZX1cbiAgICAgICAgICAgICAgICAgICAgICAgIHRhYj17bWF0Y2gucGFyYW1zLnRhYn1cbiAgICAgICAgICAgICAgICAgICAgICAgIGJ1bmRsZT17bWF0Y2gucGFyYW1zLmJ1bmRsZX1cbiAgICAgICAgICAgICAgICAgICAgICAgIGhpc3Rvcnk9e2hpc3Rvcnl9XG4gICAgICAgICAgICAgICAgICAgICAgICBvbkJhY2s9eygpID0+IHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB0aGlzLnNldFN0YXRlKHtzaG93RGV0YWlsczogZmFsc2V9KVxuICAgICAgICAgICAgICAgICAgICAgICAgfX1cbiAgICAgICAgICAgICAgICAgICAgICAgIHNhbGVzUGFja2FnZT17c2FsZXNQYWNrYWdlfVxuICAgICAgICAgICAgICAgICAgICAgICAgY29tcGFueT17Y29tcGFueX1cbiAgICAgICAgICAgICAgICAgICAgICAgIHByb2ZpbGU9e3Byb2ZpbGV9XG4gICAgICAgICAgICAgICAgICAgICAgICBsaXN0aW5nPXtjb250ZW50fS8+XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgIClcbiAgICB9XG59XG5cbk1hcmtldHBsYWNlLmNvbnRleHRUeXBlcyA9IHtcbiAgICB0OiBQcm9wVHlwZXMuZnVuYy5pc1JlcXVpcmVkXG59O1xuXG5jb25zdCBtYXBTdGF0ZVRvUHJvcHMgPSAoIHN0YXRlLCBvd25Qcm9wcykgPT4ge1xuICAgIHJldHVybiBzdGF0ZTtcbn07XG5cbmNvbnN0IG1hcERpc3BhdGNoVG9Qcm9wcyA9IGRpc3BhdGNoID0+IHtcbiAgICByZXR1cm4ge1xuICAgICAgICBvbkNsaWNrOiBpZCA9PiBkaXNwYXRjaCh0ZXN0KGlkKSksXG4gICAgICAgIHNlbGVjdFNwb3J0IDogc3BvcnQgPT5kaXNwYXRjaCh1cGRhdGVTcG9ydChzcG9ydCkpLFxuICAgICAgICB1cGRhdGVFdmVudCA6IGV2ZW50ID0+IGRpc3BhdGNoKHVwZGF0ZUV2ZW50KGV2ZW50KSksXG4gICAgICAgIGNsZWFyVXBkYXRlRmlsdGVyIDogKCkgPT4gZGlzcGF0Y2goY2xlYXJVcGRhdGVGaWx0ZXIoKSksXG4gICAgICAgIGFkZFJpZ2h0OiBpZCA9PiBkaXNwYXRjaChhZGRSaWdodChpZCkpLFxuICAgICAgICByZW1vdmVSaWdodDogaWQgPT4gZGlzcGF0Y2gocmVtb3ZlUmlnaHQoaWQpKSxcbiAgICAgICAgdXBkYXRlQ291bnRyaWVzOiBjb3VudHJpZXMgPT4gZGlzcGF0Y2godXBkYXRlQ291bnRyaWVzKGNvdW50cmllcykpLFxuICAgICAgICB1cGRhdGVFeGNsdXNpdmU6IGV4Y2x1c2l2ZSA9PiBkaXNwYXRjaCh1cGRhdGVFeGNsdXNpdmUoZXhjbHVzaXZlKSksXG4gICAgICAgIHVwZGF0ZUZpbHRlcnM6IGZpbHRlcnMgPT4gZGlzcGF0Y2godXBkYXRlTWFueShmaWx0ZXJzKSksXG4gICAgICAgIHVwZGF0ZVByb2ZpbGUgOiBwcm9maWxlID0+ZGlzcGF0Y2godXBkYXRlUHJvZmlsZShwcm9maWxlKSksXG4gICAgfVxufTtcblxuXG5leHBvcnQgZGVmYXVsdCBjb25uZWN0KFxuICAgIG1hcFN0YXRlVG9Qcm9wcyxcbiAgICBtYXBEaXNwYXRjaFRvUHJvcHNcbikoTWFya2V0cGxhY2UpXG5cblxuXG4vLyBXRUJQQUNLIEZPT1RFUiAvL1xuLy8gLi9zcmMvQXBwQnVuZGxlL1Jlc291cmNlcy9wdWJsaWMvamF2YXNjcmlwdC9idXkvY29udGFpbmVycy9NYXJrZXRwbGFjZS5qcyIsImltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgeyBjb25uZWN0IH0gZnJvbSBcInJlYWN0LXJlZHV4XCI7XG5pbXBvcnQgeyB0ZXN0IH0gZnJvbSBcIi4uL2FjdGlvbnNcIjtcbmltcG9ydCB7UHJvZ3JhbVR5cGVzRGVmaW5pdGlvbnN9IGZyb20gXCIuLi8uLi9tYWluL2NvbXBvbmVudHMvUHJvZ3JhbVR5cGVzRGVmaW5pdGlvbnNcIjtcbmltcG9ydCB7UHJvcFR5cGVzfSBmcm9tIFwicHJvcC10eXBlc1wiO1xuXG5jb25zdCByb3dTdHlsZSA9IHtcbiAgICBib3JkZXJCb3R0b206ICcxcHggc29saWQgI0VFRjNGNicsXG4gICAgYm9yZGVyUmlnaHQ6ICcxcHggc29saWQgI0VFRjNGNicsXG4gICAgZGlzcGxheTogJ2ZsZXgnXG59O1xuXG5jb25zdCB0aXRsZVN0eWxlID0ge1xuICAgIGJhY2tncm91bmRDb2xvcjogJyNGNEY2RjknLFxuICAgIGNvbG9yOiAnIzRGNEY0RicsXG4gICAgZm9udFNpemU6IDE0LFxuICAgIGZvbnRXZWlnaHQ6IDYwMCxcbiAgICBtYXJnaW46ICczcHggMCcsXG4gICAgcGFkZGluZzogMTAsXG4gICAgd2lkdGg6ICc1MCUnXG59O1xuXG5jb25zdCB2YWx1ZVN0eWxlID0ge1xuICAgIGNvbG9yOiAnIzRGNEY0RicsXG4gICAgZm9udFNpemU6IDE0LFxuICAgIGZvbnRXZWlnaHQ6IDYwMCxcbiAgICBtYXJnaW46ICczcHggMCcsXG4gICAgcGFkZGluZzogMTAsXG4gICAgd2lkdGg6ICc1MCUnXG59O1xuXG5jbGFzcyBQcm9ncmFtRGV0YWlscyBleHRlbmRzIFJlYWN0LkNvbXBvbmVudCB7XG5cbiAgICBjb25zdHJ1Y3Rvcihwcm9wcykge1xuICAgICAgICBzdXBlcihwcm9wcyk7XG4gICAgICAgIHRoaXMuc3RhdGUgPSB7XG4gICAgICAgIH07XG4gICAgfVxuXG4gICAgcmVuZGVyKCkge1xuICAgICAgICBjb25zdCB7XG4gICAgICAgICAgICBQUk9HUkFNX05BTUUsXG4gICAgICAgICAgICBQUk9HUkFNX1lFQVIsXG4gICAgICAgICAgICBQUk9HUkFNX0RFU0NSSVBUSU9OLFxuICAgICAgICAgICAgUFJPR1JBTV9EVVJBVElPTixcbiAgICAgICAgICAgIFBST0dSQU1fRVBJU09ERVMsXG4gICAgICAgICAgICBQUk9HUkFNX1RZUEUsXG4gICAgICAgIH0gPSB0aGlzLnByb3BzO1xuICAgICAgICByZXR1cm4gKFxuICAgICAgICAgICAgPGRpdiBzdHlsZT17eyBwYWRkaW5nOicyMHB4IDAnfX0+XG4gICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJmdWxsLWl0ZW0tYm94XCIgc3R5bGU9e3t3aWR0aDogJzUwJSd9fT5cbiAgICAgICAgICAgICAgICAgICAgPGxhYmVsPlBST0dSQU0ge1BST0dSQU1fTkFNRX08L2xhYmVsPlxuICAgICAgICAgICAgICAgICAgICA8ZGl2PlxuICAgICAgICAgICAgICAgICAgICAgICAge1BST0dSQU1fVFlQRSAmJiAoXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBzdHlsZT17cm93U3R5bGV9PlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IHN0eWxlPXt0aXRsZVN0eWxlfT5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHt0aGlzLmNvbnRleHQudChcIkxJU1RJTkdfREVUQUlMU19QUk9HUkFNX1RJVExFX1RZUEVcIil9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IHN0eWxlPXt2YWx1ZVN0eWxlfT5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHtQcm9ncmFtVHlwZXNEZWZpbml0aW9uc1tQUk9HUkFNX1RZUEVdfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgICAgICAgICAgICl9XG4gICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IHN0eWxlPXtyb3dTdHlsZX0+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBzdHlsZT17dGl0bGVTdHlsZX0+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHt0aGlzLmNvbnRleHQudChcIkxJU1RJTkdfREVUQUlMU19QUk9HUkFNX1RJVExFX0VQSVNPREVTXCIpfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgc3R5bGU9e3ZhbHVlU3R5bGV9PlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB7UFJPR1JBTV9FUElTT0RFU31cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBzdHlsZT17cm93U3R5bGV9PlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgc3R5bGU9e3RpdGxlU3R5bGV9PlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB7dGhpcy5jb250ZXh0LnQoXCJMSVNUSU5HX0RFVEFJTFNfUFJPR1JBTV9USVRMRV9EVVJBVElPTlwiKX1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IHN0eWxlPXt2YWx1ZVN0eWxlfT5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAge1BST0dSQU1fRFVSQVRJT059XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgICAgICAgICAgIHtQUk9HUkFNX1lFQVIgJiYgKFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgc3R5bGU9e3Jvd1N0eWxlfT5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBzdHlsZT17dGl0bGVTdHlsZX0+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB7dGhpcy5jb250ZXh0LnQoXCJMSVNUSU5HX0RFVEFJTFNfUFJPR1JBTV9USVRMRV9SRUxFQVNFXCIpfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBzdHlsZT17dmFsdWVTdHlsZX0+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB7UFJPR1JBTV9ZRUFSfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgICAgICAgICAgICl9XG4gICAgICAgICAgICAgICAgICAgICAgICB7UFJPR1JBTV9ERVNDUklQVElPTiAmJiAoXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBzdHlsZT17cm93U3R5bGV9PlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IHN0eWxlPXt0aXRsZVN0eWxlfT5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHt0aGlzLmNvbnRleHQudChcIkxJU1RJTkdfREVUQUlMU19QUk9HUkFNX1RJVExFX0RFU0NSSVBUSU9OXCIpfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBzdHlsZT17dmFsdWVTdHlsZX0+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB7UFJPR1JBTV9ERVNDUklQVElPTn1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgICAgICAgICAgICApfVxuICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICApO1xuICAgIH1cbn1cblxuUHJvZ3JhbURldGFpbHMuY29udGV4dFR5cGVzID0ge1xuICAgIHQ6IFByb3BUeXBlcy5mdW5jLmlzUmVxdWlyZWRcbn07XG5cbmV4cG9ydCBkZWZhdWx0IFByb2dyYW1EZXRhaWxzO1xuXG5cbi8vIFdFQlBBQ0sgRk9PVEVSIC8vXG4vLyAuL3NyYy9BcHBCdW5kbGUvUmVzb3VyY2VzL3B1YmxpYy9qYXZhc2NyaXB0L2J1eS9jb250YWluZXJzL1Byb2dyYW1EZXRhaWxzLmpzIiwiaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCB7IGNvbm5lY3QgfSBmcm9tIFwicmVhY3QtcmVkdXhcIjtcbmltcG9ydCB7IHRlc3QgfSBmcm9tIFwiLi4vYWN0aW9uc1wiO1xuaW1wb3J0IHtjdXN0b21TdHlsZXN9IGZyb20gXCIuLi8uLi9tYWluL3N0eWxlcy9jdXN0b21cIjtcbmltcG9ydCBNb2RhbCBmcm9tICdyZWFjdC1tb2RhbCc7XG5pbXBvcnQgTW9tZW50IGZyb20gXCJtb21lbnQvbW9tZW50XCI7XG5pbXBvcnQgTGljZW5zZURvd25sb2FkZXIgZnJvbSAnLi4vLi4vbWFpbi9jb21wb25lbnRzL0xpY2Vuc2VEb3dubG9hZGVyJ1xuaW1wb3J0IHtQcm9wVHlwZXN9IGZyb20gXCJwcm9wLXR5cGVzXCI7XG5cbmNsYXNzIFNhbGVzUGFja2FnZXMgZXh0ZW5kcyBSZWFjdC5Db21wb25lbnQge1xuXG4gICAgY29uc3RydWN0b3IocHJvcHMpIHtcbiAgICAgICAgc3VwZXIocHJvcHMpO1xuICAgICAgICB0aGlzLnN0YXRlID0ge1xuICAgICAgICAgICAgdGVycml0b3JpZXNMaXN0OiBbXSxcbiAgICAgICAgICAgIGluc3RhbGxtZW50cyA6IFtdXG4gICAgICAgIH07XG4gICAgICAgIHRoaXMuYmlkSWNvbiA9IGFzc2V0c0Jhc2VEaXIgKyBcImFwcC9pbWFnZXMvaGFtbWVyLnBuZ1wiO1xuICAgICAgICB0aGlzLnBhY2thZ2VJY29uID0gYXNzZXRzQmFzZURpciArIFwiYXBwL2ltYWdlcy9iaWQucG5nXCI7XG4gICAgICAgIHRoaXMuaW5mb0ljb24gPSBhc3NldHNCYXNlRGlyICsgXCJhcHAvaW1hZ2VzL2luZm8ucG5nXCI7XG4gICAgfVxuXG4gICAgc2hvd0FsbFRlcnJpdG9yaWVzID0gKGV4dHJhVGVycml0b3JpZXMpID0+IHtcbiAgICAgICAgdGhpcy5zZXRTdGF0ZSh7XG4gICAgICAgICAgICBzaG93QWxsVGVycml0b3JpZXMgOiB0cnVlLFxuICAgICAgICAgICAgdGVycml0b3JpZXNMaXN0IDogZXh0cmFUZXJyaXRvcmllc1xuICAgICAgICB9KVxuICAgIH07XG5cbiAgICBzaG93SW5zdGFsbG1lbnRzID0gKGluc3RhbGxtZW50cykgPT4ge1xuICAgICAgICB0aGlzLnNldFN0YXRlKHtcbiAgICAgICAgICAgIHNob3dJbnN0YWxsbWVudHMgOiB0cnVlLFxuICAgICAgICAgICAgaW5zdGFsbG1lbnRzIDogaW5zdGFsbG1lbnRzXG4gICAgICAgIH0pXG4gICAgfTtcblxuICAgIGNsb3NlVGVycml0b2llc01vZGFsID0gKCkgPT4ge1xuICAgICAgICB0aGlzLnNldFN0YXRlKHsgc2hvd0FsbFRlcnJpdG9yaWVzOiBmYWxzZX0pO1xuICAgIH07XG5cbiAgICBjbG9zZUluc3RhbGxtZW50c01vZGFsID0gKCkgPT4ge1xuICAgICAgICB0aGlzLnNldFN0YXRlKHsgc2hvd0luc3RhbGxtZW50czogZmFsc2V9KTtcbiAgICB9O1xuXG4gICAgb3JkaW5hbF9zdWZmaXhfb2YgPSAoaSkgPT4ge1xuICAgICAgICBsZXQgaiA9IGkgJSAxMCxcbiAgICAgICAgICAgIGsgPSBpICUgMTAwO1xuICAgICAgICBpZiAoaiA9PT0gMSAmJiBrICE9PSAxMSkge1xuICAgICAgICAgICAgcmV0dXJuIGkgKyBcInN0XCI7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKGogPT09IDIgJiYgayAhPT0gMTIpIHtcbiAgICAgICAgICAgIHJldHVybiBpICsgXCJuZFwiO1xuICAgICAgICB9XG4gICAgICAgIGlmIChqID09PSAzICYmIGsgIT09IDEzKSB7XG4gICAgICAgICAgICByZXR1cm4gaSArIFwicmRcIjtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gaSArIFwidGhcIjtcbiAgICB9O1xuXG4gICAgaW5zdGFsbG1lbnRzTW9kYWwgPSAoKSA9PiB7XG4gICAgICAgIGNvbnN0IHtpbnN0YWxsbWVudHN9ID0gdGhpcy5zdGF0ZTtcbiAgICAgICAgcmV0dXJuIDxNb2RhbFxuICAgICAgICAgICAgaXNPcGVuPXt0aGlzLnN0YXRlLnNob3dJbnN0YWxsbWVudHN9XG4gICAgICAgICAgICBvblJlcXVlc3RDbG9zZT17dGhpcy5jbG9zZUluc3RhbGxtZW50c01vZGFsfVxuICAgICAgICAgICAgYm9keU9wZW5DbGFzc05hbWU9e1wic2VsZWN0b3JcIn1cbiAgICAgICAgICAgIHN0eWxlPXtjdXN0b21TdHlsZXN9XG4gICAgICAgID5cblxuICAgICAgICAgICAgPGRpdiBzdHlsZT17e1xuICAgICAgICAgICAgICAgIGRpc3BsYXk6ICdmbGV4JyxcbiAgICAgICAgICAgICAgICBmbGV4RGlyZWN0aW9uOiAnY29sdW1uJ1xuICAgICAgICAgICAgfX0+XG4gICAgICAgICAgICAgICAgPGRpdiBzdHlsZT17e1xuICAgICAgICAgICAgICAgICAgICBwYWRkaW5nOiAnMTJweCAyMHB4JyxcbiAgICAgICAgICAgICAgICAgICAgYmFja2dyb3VuZENvbG9yOiAnIzMyQTlFNycsXG4gICAgICAgICAgICAgICAgICAgIGNvbG9yOiAnd2hpdGUnLFxuICAgICAgICAgICAgICAgICAgICBmb250V2VpZ2h0OiA2MDBcbiAgICAgICAgICAgICAgICB9fT5QYXltZW50IERldGFpbHM8L2Rpdj5cbiAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgIGluc3RhbGxtZW50cyAmJiBpbnN0YWxsbWVudHMubWFwKCggaW5zdGFsbG1lbnQsIGluZGV4ICkgPT57XG4gICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gPGRpdiBzdHlsZT17e1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHBhZGRpbmc6IDEyLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGJvcmRlcjogJzFweCBzb2xpZCAjRERFMUU3JyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBiYWNrZ3JvdW5kQ29sb3I6ICcjRkFGQkZDJyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBtYXJnaW46IDUsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgYm94U2l6aW5nOiAnYm9yZGVyLWJveCcsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgZGlzcGxheTogJ2ZsZXgnLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGZsZXhEaXJlY3Rpb246ICdyb3cnLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbG9yOiAnZ3JleSdcbiAgICAgICAgICAgICAgICAgICAgICAgIH19PlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgc3R5bGU9e3ttYXJnaW46ICcwIDEwcHgnLCBmb250V2VpZ2h0OiA2MDB9fT57IHRoaXMub3JkaW5hbF9zdWZmaXhfb2YoaW5kZXgrMSl9IGluc3RhbGxtZW50PC9kaXY+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBzdHlsZT17e21hcmdpbjogJzAgMzBweCd9fT57aW5zdGFsbG1lbnQudmFsdWV9JTwvZGl2PlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgc3R5bGU9e3ttYXJnaW46ICcwIDEwcHgnfX0+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHtpbnN0YWxsbWVudC50eXBlID09PSBcIkRBWVwiICYmIGluc3RhbGxtZW50LmRheXMgKyB0aGlzLmNvbnRleHQudChcIklOU1RBTExNRU5UX0NMT1NVUkVfREFZU1wiKX1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAge2luc3RhbGxtZW50LnR5cGUgPT09IFwiREFURVwiICYmIFwiIFwiICsgTW9tZW50KGluc3RhbGxtZW50LmRhdGUpLmZvcm1hdCgnREQvTU0vWVlZWScpfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgICAgICAgIH0pXG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgPC9kaXY+XG5cbiAgICAgICAgPC9Nb2RhbD5cbiAgICB9O1xuXG4gICAgYWxsVGVycml0b3JpZXMgPSAoKSA9PiB7XG5cbiAgICAgICAgcmV0dXJuIDxNb2RhbFxuICAgICAgICAgICAgaXNPcGVuPXt0aGlzLnN0YXRlLnNob3dBbGxUZXJyaXRvcmllc31cbiAgICAgICAgICAgIG9uUmVxdWVzdENsb3NlPXt0aGlzLmNsb3NlVGVycml0b2llc01vZGFsfVxuICAgICAgICAgICAgYm9keU9wZW5DbGFzc05hbWU9e1wic2VsZWN0b3JcIn1cbiAgICAgICAgICAgIHN0eWxlPXtjdXN0b21TdHlsZXN9XG4gICAgICAgID5cblxuICAgICAgICAgICAgPGRpdiBzdHlsZT17e1xuICAgICAgICAgICAgICAgIGNvbG9yOiAnZ3JleScsXG4gICAgICAgICAgICAgICAgcGFkZGluZzogMjAsXG4gICAgICAgICAgICAgICAgZGlzcGxheTogJ2ZsZXgnLFxuICAgICAgICAgICAgICAgIGZsZXhXcmFwOiAnd3JhcCcsXG4gICAgICAgICAgICB9fT5cbiAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgIHRoaXMuc3RhdGUudGVycml0b3JpZXNMaXN0Lm1hcCh0ZXJyaXRvcnkgPT57XG4gICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gPGRpdiBjbGFzc05hbWU9XCJjb3VudHJ5LW1vZGFsXCI+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAge3RlcnJpdG9yeS5sYWJlbH1cbiAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICAgICAgICB9KVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIDwvZGl2PlxuXG4gICAgICAgIDwvTW9kYWw+XG4gICAgfTtcblxuICAgIGdldEZlZSA9IChzYWxlc1BhY2thZ2UpID0+IHtcbiAgICAgICAgY29uc3QgZmVlTnVtYmVyID0gcGFyc2VGbG9hdChzYWxlc1BhY2thZ2UuZmVlKTtcbiAgICAgICAgcmV0dXJuIGZlZU51bWJlci50b0xvY2FsZVN0cmluZygpICsgXCIgXCIgKyB0aGlzLmdldEN1cnJlbmN5U3ltYm9sKCk7XG4gICAgfTtcblxuICAgIGdldEN1cnJlbmN5U3ltYm9sID0gKCkgPT4ge1xuICAgICAgICBjb25zdCB7Y3VycmVuY3l9ID0gdGhpcy5wcm9wcztcbiAgICAgICAgcmV0dXJuIChjdXJyZW5jeSA9PT0gXCJFVVJcIiA/IFwi4oKsXCIgOiBcIiRcIik7XG4gICAgfTtcblxuXG5cbiAgICByZW5kZXIoKSB7XG4gICAgICAgIGNvbnN0IHtzYWxlc1BhY2thZ2VzLCBvblNlbGVjdFBhY2thZ2UsIHVzZXIsIGxpc3RpbmdJZH0gPSB0aGlzLnByb3BzO1xuXG4gICAgICAgIHJldHVybiAoXG4gICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cInNhbGVzLXBhY2thZ2VzXCI+XG4gICAgICAgICAgICAgICAgeyB0aGlzLmFsbFRlcnJpdG9yaWVzKCkgfVxuICAgICAgICAgICAgICAgIHsgdGhpcy5pbnN0YWxsbWVudHNNb2RhbCgpIH1cbiAgICAgICAgICAgICAgICB7IHNhbGVzUGFja2FnZXMubWFwKCAoc2FsZXNQYWNrYWdlLCBpKSA9PiB7XG5cbiAgICAgICAgICAgICAgICAgICAgaWYgKHNhbGVzUGFja2FnZS5zb2xkICkgcmV0dXJuO1xuXG4gICAgICAgICAgICAgICAgICAgIGxldCBleHRyYVRlcnJpdG9yaWVzID0gKCBzYWxlc1BhY2thZ2UudGVycml0b3JpZXNNZXRob2QgPT09IFwiV09STERXSURFX0VYQ0xVRElOR1wiKSA/IHNhbGVzUGFja2FnZS5leGNsdWRlZFRlcnJpdG9yaWVzIDogc2FsZXNQYWNrYWdlLnRlcnJpdG9yaWVzO1xuICAgICAgICAgICAgICAgICAgICByZXR1cm4gPGRpdiBjbGFzc05hbWU9XCJzYWxlcy1wYWNrYWdlLWNvbnRhaW5lclwiIGtleT17XCJzYWxlcy1wYWNrYWdlLVwiKyBpfT5cblxuICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBzdHlsZT17e2ZsZXggOiAxMCwgZGlzcGxheTogJ2ZsZXgnfX0+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAge3NhbGVzUGFja2FnZS5idW5kbGVNZXRob2QgPT09IFwiU0VMTF9BU19CVU5ETEVcIlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAmJiBzYWxlc1BhY2thZ2UudGVycml0b3JpZXMubGVuZ3RoID4gMVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAmJiA8ZGl2IHN0eWxlPXt7IH19PlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGltZyBzdHlsZT17eyB3aWR0aDogMjYsIGhlaWdodDogMjN9fSBzcmM9e3RoaXMucGFja2FnZUljb259Lz5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAge3NhbGVzUGFja2FnZS50ZXJyaXRvcmllcy5sZW5ndGggPiAxICYmIDxkaXYgc3R5bGU9e3ttYXJnaW46ICcwIDE1cHgnLCBmb250V2VpZ2h0OiA2MDB9fT5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAge3NhbGVzUGFja2FnZS50ZXJyaXRvcmllcy5sZW5ndGh9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+fVxuXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAge3NhbGVzUGFja2FnZS5uYW1lfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBleHRyYVRlcnJpdG9yaWVzICYmIGV4dHJhVGVycml0b3JpZXMubGVuZ3RoID4gMyAmJiA8c3BhblxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHN0eWxlPXt7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbG9yOiAnIzJEQTdFNicsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRleHREZWNvcmF0aW9uOiAndW5kZXJsaW5lJyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbWFyZ2luTGVmdCA6IDUsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGN1cnNvcjogJ3BvaW50ZXInXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfX1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBvbkNsaWNrPXsoKSA9PiB7dGhpcy5zaG93QWxsVGVycml0b3JpZXMoZXh0cmFUZXJyaXRvcmllcyl9fT5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHtcIitcIiArIChleHRyYVRlcnJpdG9yaWVzLmxlbmd0aCAtIDMpfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3NwYW4+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxuXG4gICAgICAgICAgICAgICAgICAgICAgICA8TGljZW5zZURvd25sb2FkZXJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB0eXBlPXtcIkJVTkRMRVwifVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlkPXtzYWxlc1BhY2thZ2UuaWR9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgbGlzdGluZ0lkPXtsaXN0aW5nSWR9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgc3R5bGU9e3tmbGV4IDogMSwgZGlzcGxheTogJ2ZsZXgnLCBqdXN0aWZ5Q29udGVudDogJ2NlbnRlcid9fSAvPlxuXG4gICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IHN0eWxlPXt7ZmxleCA6IDEsIGRpc3BsYXk6ICdmbGV4JywganVzdGlmeUNvbnRlbnQ6ICdjZW50ZXInLCBjdXJzb3I6ICdwb2ludGVyJ319XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgIG9uQ2xpY2s9eygpID0+IHt0aGlzLnNob3dJbnN0YWxsbWVudHMoc2FsZXNQYWNrYWdlLmluc3RhbGxtZW50cyl9fT5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aW1nIHN0eWxlPXt7d2lkdGg6IDIzLCBoZWlnaHQ6IDIzfX0gc3JjPXt0aGlzLmluZm9JY29ufS8+XG4gICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cblxuICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBzdHlsZT17e2ZsZXggOiAxLjUsIGp1c3RpZnlDb250ZW50OiBcImNlbnRlclwiLCBkaXNwbGF5OiBcImZsZXhcIn19PlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHt0aGlzLmdldEZlZShzYWxlc1BhY2thZ2UpfVxuICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XG5cbiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgc3R5bGU9e3sgZmxleDogMSwganVzdGlmeUNvbnRlbnQ6IFwiY2VudGVyXCIsIGRpc3BsYXk6IFwiZmxleFwifX0+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAge3NhbGVzUGFja2FnZS5zYWxlc01ldGhvZCA9PT0gXCJCSURESU5HXCJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJiYgPGltZyBzdHlsZT17e3dpZHRoOiAyMywgaGVpZ2h0OiAyM319IHNyYz17dGhpcy5iaWRJY29ufS8+fVxuICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XG5cbiAgICAgICAgICAgICAgICAgICAgICAgIHsgc2FsZXNQYWNrYWdlLnNhbGVzTWV0aG9kID09PSBcIkZJWEVEXCIgJiYgdXNlci5wcm9maWxlID09PSBcIkJVWUVSXCIgJiZcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YnV0dG9uIGNsYXNzTmFtZT1cInN0YW5kYXJkLWJ1dHRvblwiXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzdHlsZT17e3dpZHRoOiAxMzB9fVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgb25DbGljaz17KCkgPT4ge29uU2VsZWN0UGFja2FnZShzYWxlc1BhY2thZ2UsIGxpc3RpbmdJZCkgfX0+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHt0aGlzLmNvbnRleHQudChcIkJ1eSBub3dcIil9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9idXR0b24+XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgICAgICAgICAgIHsgc2FsZXNQYWNrYWdlLnNhbGVzTWV0aG9kID09PSBcIkJJRERJTkdcIiAmJiB1c2VyLnByb2ZpbGUgPT09IFwiQlVZRVJcIiAmJlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxidXR0b24gY2xhc3NOYW1lPVwic3RhbmRhcmQtYnV0dG9uXCJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHN0eWxlPXt7d2lkdGg6IDEzMH19XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBvbkNsaWNrPXsoKSA9PiB7b25TZWxlY3RQYWNrYWdlKHNhbGVzUGFja2FnZSwgbGlzdGluZ0lkKSB9fT5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAge3RoaXMuY29udGV4dC50KFwiUGxhY2UgYmlkXCIpfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvYnV0dG9uPlxuICAgICAgICAgICAgICAgICAgICAgICAgfVxuXG5cblxuXG4gICAgICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICAgIH0pfVxuICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICk7XG4gICAgfVxufVxuXG5TYWxlc1BhY2thZ2VzLmNvbnRleHRUeXBlcyA9IHtcbiAgICB0OiBQcm9wVHlwZXMuZnVuYy5pc1JlcXVpcmVkXG59O1xuXG5jb25zdCBtYXBTdGF0ZVRvUHJvcHMgPSBzdGF0ZSA9PiB7XG4gICAgcmV0dXJuIHN0YXRlXG59O1xuXG5jb25zdCBtYXBEaXNwYXRjaFRvUHJvcHMgPSBkaXNwYXRjaCA9PiB7XG4gICAgcmV0dXJuIHtcbiAgICAgICAgb25DbGljazogaWQgPT4gZGlzcGF0Y2godGVzdChpZCkpXG4gICAgfVxufTtcblxuXG5leHBvcnQgZGVmYXVsdCBjb25uZWN0KFxuICAgIG1hcFN0YXRlVG9Qcm9wcyxcbiAgICBtYXBEaXNwYXRjaFRvUHJvcHNcbikoU2FsZXNQYWNrYWdlcylcblxuXG4vLyBXRUJQQUNLIEZPT1RFUiAvL1xuLy8gLi9zcmMvQXBwQnVuZGxlL1Jlc291cmNlcy9wdWJsaWMvamF2YXNjcmlwdC9idXkvY29udGFpbmVycy9TYWxlc1BhY2thZ2VzLmpzIiwiaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCB7IGNvbm5lY3QgfSBmcm9tIFwicmVhY3QtcmVkdXhcIjtcbmltcG9ydCB7IHRlc3QgfSBmcm9tIFwiLi4vYWN0aW9uc1wiO1xuaW1wb3J0IHtQcm9wVHlwZXN9IGZyb20gXCJwcm9wLXR5cGVzXCI7XG5cbmNvbnN0IHJvd1N0eWxlID0ge1xuICAgIGJvcmRlckJvdHRvbTogJzFweCBzb2xpZCAjRUVGM0Y2JyxcbiAgICBib3JkZXJSaWdodDogJzFweCBzb2xpZCAjRUVGM0Y2JyxcbiAgICBkaXNwbGF5OiAnZmxleCdcbn07XG5cbmNvbnN0IHRpdGxlU3R5bGUgPSB7XG4gICAgYmFja2dyb3VuZENvbG9yOiAnI0Y0RjZGOScsXG4gICAgY29sb3I6ICcjNEY0RjRGJyxcbiAgICBmb250U2l6ZTogMTQsXG4gICAgZm9udFdlaWdodDogNjAwLFxuICAgIG1hcmdpbjogJzNweCAwJyxcbiAgICBwYWRkaW5nOiAxMCxcbiAgICB3aWR0aDogJzUwJSdcbn07XG5cbmNvbnN0IHZhbHVlU3R5bGUgPSB7XG4gICAgY29sb3I6ICcjNEY0RjRGJyxcbiAgICBmb250U2l6ZTogMTQsXG4gICAgZm9udFdlaWdodDogNjAwLFxuICAgIG1hcmdpbjogJzNweCAwJyxcbiAgICBwYWRkaW5nOiAxMCxcbiAgICB3aWR0aDogJzUwJSdcbn07XG5cbmNsYXNzIFNlbGxlciBleHRlbmRzIFJlYWN0LkNvbXBvbmVudCB7XG5cbiAgICBjb25zdHJ1Y3Rvcihwcm9wcykge1xuICAgICAgICBzdXBlcihwcm9wcyk7XG4gICAgICAgIHRoaXMuc3RhdGUgPSB7XG4gICAgICAgIH07XG4gICAgfVxuXG4gICAgcmVuZGVyKCkge1xuICAgICAgICBjb25zdCB7IGNvbXBhbnkgfSA9IHRoaXMucHJvcHM7XG4gICAgICAgIHJldHVybiAoXG4gICAgICAgICAgICA8ZGl2IHN0eWxlPXt7IHBhZGRpbmc6JzIwcHggMCd9fT5cbiAgICAgICAgICAgICAgICA8ZGl2IHN0eWxlPXt7bWFyZ2luQm90dG9tOiAyMH19PlxuICAgICAgICAgICAgICAgICAgICA8ZGl2IHN0eWxlPXt7XG4gICAgICAgICAgICAgICAgICAgICAgICBjb2xvcjogJyMxQTRCNjMnLFxuICAgICAgICAgICAgICAgICAgICAgICAgZm9udFNpemU6IDIwLFxuICAgICAgICAgICAgICAgICAgICAgICAgZm9udFdlaWdodDogNjAwXG4gICAgICAgICAgICAgICAgICAgIH19PlxuICAgICAgICAgICAgICAgICAgICAgICAge2NvbXBhbnkuZGlzcGxheU5hbWV9XG4gICAgICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICAgICAgICB7Y29tcGFueS53ZWJzaXRlICYmIDxkaXYgc3R5bGU9e3tcbiAgICAgICAgICAgICAgICAgICAgICAgIGNvbG9yOiAnIzRGNEY0RicsXG4gICAgICAgICAgICAgICAgICAgICAgICBmb250U2l6ZTogMTQsXG4gICAgICAgICAgICAgICAgICAgIH19PlxuICAgICAgICAgICAgICAgICAgICAgICAge2NvbXBhbnkud2Vic2l0ZX1cbiAgICAgICAgICAgICAgICAgICAgPC9kaXY+fVxuXG4gICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJmdWxsLWl0ZW0tYm94XCIgc3R5bGU9e3t3aWR0aDogJzc1JSd9fT5cbiAgICAgICAgICAgICAgICAgICAgPGxhYmVsPntjb21wYW55LmRpc3BsYXlOYW1lfVxuICAgICAgICAgICAgICAgICAgICAgICAge3RoaXMuY29udGV4dC50KFwiTElTVElOR19ERVRBSUxTX1NFTExFUl9USVRMRV9ERVRBSUxTXCIpfVxuICAgICAgICAgICAgICAgICAgICA8L2xhYmVsPlxuICAgICAgICAgICAgICAgICAgICA8ZGl2ID5cbiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgc3R5bGU9e3Jvd1N0eWxlfT5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IHN0eWxlPXt0aXRsZVN0eWxlfT5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAge3RoaXMuY29udGV4dC50KFwiTElTVElOR19ERVRBSUxTX1NFTExFUl9USVRMRV9OQU1FXCIpfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgc3R5bGU9e3ZhbHVlU3R5bGV9PlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB7Y29tcGFueS5sZWdhbE5hbWV9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgc3R5bGU9e3Jvd1N0eWxlfT5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IHN0eWxlPXt0aXRsZVN0eWxlfT5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAge3RoaXMuY29udGV4dC50KFwiTElTVElOR19ERVRBSUxTX1NFTExFUl9USVRMRV9BRERSRVNTXCIpfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgc3R5bGU9e3ZhbHVlU3R5bGV9PlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB7Y29tcGFueS5hZGRyZXNzfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XG5cbiAgICAgICAgICAgICAgICAgICAgICAgIHtjb21wYW55LmNpdHkgJiZcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IHN0eWxlPXtyb3dTdHlsZX0+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgc3R5bGU9e3RpdGxlU3R5bGV9PlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAge3RoaXMuY29udGV4dC50KFwiTElTVElOR19ERVRBSUxTX1NFTExFUl9USVRMRV9DSVRZXCIpfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBzdHlsZT17dmFsdWVTdHlsZX0+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB7Y29tcGFueS5jaXR5fVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICAgICAgICAgICAge2NvbXBhbnkuY291bnRyeS5uYW1lICYmXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBzdHlsZT17cm93U3R5bGV9PlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IHN0eWxlPXt0aXRsZVN0eWxlfT5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHt0aGlzLmNvbnRleHQudChcIkxJU1RJTkdfREVUQUlMU19TRUxMRVJfVElUTEVfQ09VTlRSWVwiKX1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgc3R5bGU9e3ZhbHVlU3R5bGV9PlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAge2NvbXBhbnkuY291bnRyeS5uYW1lfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICAgICAgICAgICAge2NvbXBhbnkuemlwICYmXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBzdHlsZT17cm93U3R5bGV9PlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IHN0eWxlPXt0aXRsZVN0eWxlfT5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHt0aGlzLmNvbnRleHQudChcIkxJU1RJTkdfREVUQUlMU19TRUxMRVJfVElUTEVfWklQXCIpfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBzdHlsZT17dmFsdWVTdHlsZX0+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB7Y29tcGFueS56aXB9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgICAgICAgICAgICB7Y29tcGFueS5yZWdpc3RyYXRpb25OdW1iZXIgJiZcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IHN0eWxlPXtyb3dTdHlsZX0+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgc3R5bGU9e3RpdGxlU3R5bGV9PlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAge3RoaXMuY29udGV4dC50KFwiTElTVElOR19ERVRBSUxTX1NFTExFUl9USVRMRV9SRUdJU1RSQVRJT05fTlVNQkVSXCIpfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBzdHlsZT17dmFsdWVTdHlsZX0+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB7Y29tcGFueS5yZWdpc3RyYXRpb25OdW1iZXJ9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IHN0eWxlPXtyb3dTdHlsZX0+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBzdHlsZT17dGl0bGVTdHlsZX0+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHt0aGlzLmNvbnRleHQudChcIkxJU1RJTkdfREVUQUlMU19TRUxMRVJfVElUTEVfVkFUXCIpfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgc3R5bGU9e3ZhbHVlU3R5bGV9PlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB7Y29tcGFueS52YXR9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgICAgPC9kaXY+XG5cbiAgICAgICAgICAgICAgICB7Y29tcGFueS5kZXNjcmlwdGlvbiAmJlxuICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImZ1bGwtaXRlbS1ib3hcIj5cbiAgICAgICAgICAgICAgICAgICAgICAgIDxsYWJlbD5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB7dGhpcy5jb250ZXh0LnQoXCJMSVNUSU5HX0RFVEFJTFNfU0VMTEVSX1RJVExFX0RFU0NSSVBUSU9OXCIpfVxuICAgICAgICAgICAgICAgICAgICAgICAgPC9sYWJlbD5cbiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiZnVsbC1pdGVtLWNvbnRlbnRcIj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB7Y29tcGFueS5kZXNjcmlwdGlvbn1cbiAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICApO1xuICAgIH1cbn1cblxuU2VsbGVyLmNvbnRleHRUeXBlcyA9IHtcbiAgICB0OiBQcm9wVHlwZXMuZnVuYy5pc1JlcXVpcmVkXG59O1xuXG5jb25zdCBtYXBTdGF0ZVRvUHJvcHMgPSBzdGF0ZSA9PiB7XG4gICAgcmV0dXJuIHN0YXRlXG59O1xuXG5jb25zdCBtYXBEaXNwYXRjaFRvUHJvcHMgPSBkaXNwYXRjaCA9PiB7XG4gICAgcmV0dXJuIHtcbiAgICAgICAgb25DbGljazogaWQgPT4gZGlzcGF0Y2godGVzdChpZCkpXG4gICAgfVxufTtcblxuXG5leHBvcnQgZGVmYXVsdCBjb25uZWN0KFxuICAgIG1hcFN0YXRlVG9Qcm9wcyxcbiAgICBtYXBEaXNwYXRjaFRvUHJvcHNcbikoU2VsbGVyKVxuXG5cbi8vIFdFQlBBQ0sgRk9PVEVSIC8vXG4vLyAuL3NyYy9BcHBCdW5kbGUvUmVzb3VyY2VzL3B1YmxpYy9qYXZhc2NyaXB0L2J1eS9jb250YWluZXJzL1NlbGxlci5qcyIsImltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgeyBjb25uZWN0IH0gZnJvbSBcInJlYWN0LXJlZHV4XCI7XG5pbXBvcnQgeyB0ZXN0IH0gZnJvbSBcIi4uL2FjdGlvbnNcIjtcbmltcG9ydCB7UmlnaHREZWZpbml0aW9uc30gZnJvbSBcIi4uLy4uL3NlbGwvY29tcG9uZW50cy9SaWdodERlZmluaXRpb25zXCI7XG5pbXBvcnQge1Byb2R1Y3Rpb25TdGFuZGFyZHNEZWZpbml0aW9uc30gZnJvbSBcIi4uLy4uL3NlbGwvY29tcG9uZW50cy9Qcm9kdWN0aW9uU3RhbmRhcmRzRGVmaW5pdGlvbnNcIjtcbmltcG9ydCB7UmlnaHRJdGVtc0RlZmluaXRpb25zfSBmcm9tIFwiLi4vLi4vc2VsbC9jb21wb25lbnRzL1JpZ2h0SXRlbXNEZWZpbml0aW9uc1wiO1xuaW1wb3J0IHtTdXBlclJpZ2h0UHJvZHVjdGlvbkRldGFpbHNMYWJlbHN9IGZyb20gXCIuLi8uLi9zZWxsL2NvbXBvbmVudHMvU3VwZXJSaWdodERlZmluaXRpb25zXCI7XG5pbXBvcnQge1Byb3BUeXBlc30gZnJvbSBcInByb3AtdHlwZXNcIjtcblxuY2xhc3MgVGVybVNoZWV0IGV4dGVuZHMgUmVhY3QuQ29tcG9uZW50IHtcblxuICAgIGNvbnN0cnVjdG9yKHByb3BzKSB7XG4gICAgICAgIHN1cGVyKHByb3BzKTtcbiAgICAgICAgdGhpcy5zdGF0ZSA9IHtcbiAgICAgICAgfTtcbiAgICB9XG5cbiAgICBoYXNSaWdodCA9IChzaG9ydExhYmVsKSA9PiB7XG4gICAgICAgIGNvbnN0IHtyaWdodHNQYWNrYWdlfSA9IHRoaXMucHJvcHM7XG4gICAgICAgIHJldHVybiByaWdodHNQYWNrYWdlLmZpbHRlcihycCA9PiBycC5zaG9ydExhYmVsID09PSBzaG9ydExhYmVsICkubGVuZ3RoID4gMDtcbiAgICB9O1xuXG4gICAgcmVuZGVyUHJvZ3JhbUluZm8gPSAodmFsdWVzLCBuYW1lLCBpKSA9PiB7XG4gICAgICAgIGNvbnN0IHsgcmlnaHRzUGFja2FnZSB9ID0gdGhpcy5wcm9wcztcbiAgICAgICAgcmV0dXJuIDxkaXYgY2xhc3NOYW1lPXsncm93ICcrKGklMiA/ICdvZGQtcm93JzonJyl9IGtleT17J3Byb2dyYW0nK2l9PlxuICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwicmlnaHQtbmFtZSByaWdodC1kZWZpbml0aW9uXCI+e25hbWV9PC9kaXY+XG4gICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICByaWdodHNQYWNrYWdlLm1hcCgocnAsayk9PntcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmICggcnAuc2VsZWN0ZWRSaWdodHNbJ0NPTlRFTlRfREVMSVZFUlknXT09PVwiQ09OVEVOVF9ERUxJVkVSWV9OT05fREVESUNBVEVEXCIpIHJldHVybjtcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmICggcnAuc2hvcnRMYWJlbCAhPT0gJ1BSJyApIHJldHVybiA8ZGl2IGNsYXNzTmFtZT1cInJpZ2h0LWRlZmluaXRpb25cIi8+O1xuXG4gICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gPGRpdiAgY2xhc3NOYW1lPVwicmlnaHQtZGVmaW5pdGlvblwiIGtleT17XCJwcm9ncmFtX2NoaWxkXCIra30+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgeyB2YWx1ZXMgJiYgdmFsdWVzLmxlbmd0aCA9PT0gMCAmJiBcIk5vXCIgfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHsgdmFsdWVzICYmIHZhbHVlcy5sZW5ndGggPiAwICYmIHZhbHVlcy5tYXAobD0+bC5sYWJlbCkuam9pbihcIiwgXCIpIH1cbiAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICAgICAgICB9KVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIDwvZGl2PlxuICAgIH07XG5cbiAgICByZW5kZXJMaXN0ID0gKGRlZmluaXRpb25zLCBjaGVja0NvbnRlbnREZWxpdmVyeSkgPT4ge1xuICAgICAgICBjb25zdCB7c2VsZWN0ZWRSaWdodHNCeVN1cGVyUmlnaHQsIHJpZ2h0c1BhY2thZ2UsIExJQ0VOU0VEX0xBTkdVQUdFU30gPSB0aGlzLnByb3BzO1xuICAgICAgICBpZiAoY2hlY2tDb250ZW50RGVsaXZlcnkpIHtcbiAgICAgICAgICAgIGRlZmluaXRpb25zID0gdGhpcy5nZXRGaWx0ZXJlZEJ5RGVsaXZlcnkoZGVmaW5pdGlvbnMsIHJpZ2h0c1BhY2thZ2UpO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBkZWZpbml0aW9ucy5tYXAoIChyaWdodCwgaSkgPT4ge1xuXG4gICAgICAgICAgICBpZiAocmlnaHQua2V5ID09PSAnQ09OVEVOVF9ERUxJVkVSWScpIHJldHVybjtcbiAgICAgICAgICAgIGlmIChyaWdodC5rZXkgPT09ICdQUk9HUkFNJykgcmV0dXJuO1xuXG4gICAgICAgICAgICBpZiAoIHJpZ2h0LmtleSA9PT0gXCJMSUNFTlNFRF9MQU5HVUFHRVNcIikge1xuICAgICAgICAgICAgICAgIGlmICghTElDRU5TRURfTEFOR1VBR0VTIHx8IExJQ0VOU0VEX0xBTkdVQUdFUy5sZW5ndGggPT09IDApIHJldHVybiBmYWxzZTtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgcmV0dXJuIDxkaXYgY2xhc3NOYW1lPXsncm93ICcrKGklMiA/ICdvZGQtcm93JzonJyl9IGtleT17J2xpc3QnK2l9PlxuICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwicmlnaHQtbmFtZSByaWdodC1kZWZpbml0aW9uXCI+e3JpZ2h0Lm5hbWV9PC9kaXY+XG4gICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICByaWdodHNQYWNrYWdlLm1hcCgocnAsayk9PntcblxuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKCBjaGVja0NvbnRlbnREZWxpdmVyeSAmJiBycC5zZWxlY3RlZFJpZ2h0c1snQ09OVEVOVF9ERUxJVkVSWSddPT09XCJDT05URU5UX0RFTElWRVJZX05PTl9ERURJQ0FURURcIikgcmV0dXJuO1xuXG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAoIHJpZ2h0LmtleSA9PT0gJ0xJQ0VOU0VEX0xBTkdVQUdFUycgKSByZXR1cm4gPGRpdiBjbGFzc05hbWU9XCJyaWdodC1kZWZpbml0aW9uXCI+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAge0xJQ0VOU0VEX0xBTkdVQUdFUy5tYXAobD0+bC5sYWJlbCkuam9pbihcIiwgXCIpfVxuICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+O1xuXG4gICAgICAgICAgICAgICAgICAgICAgICBjb25zdCBkZWZJdGVtcyA9IHNlbGVjdGVkUmlnaHRzQnlTdXBlclJpZ2h0W3JwLmlkXS5pdGVtcztcbiAgICAgICAgICAgICAgICAgICAgICAgIGxldCBkZWZpbml0aW9uID0gZGVmSXRlbXNbcmlnaHQua2V5XTtcbiAgICAgICAgICAgICAgICAgICAgICAgIGxldCBsYWJlbCA9ICcnO1xuXG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAocmlnaHQubXVsdGlwbGUpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoQXJyYXkuaXNBcnJheShkZWZJdGVtc1tyaWdodC5rZXldKSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBsYWJlbCA9IGRlZkl0ZW1zW3JpZ2h0LmtleV0ubWFwKGl0ZW0gPT4gUmlnaHRJdGVtc0RlZmluaXRpb25zW2l0ZW1dLmxhYmVsKS5qb2luKFwiLCBcIik7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbGFiZWwgPSBkZWZJdGVtc1tyaWdodC5rZXldO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgY29uc3QgZHluS2V5ID0gYCR7cmlnaHQua2V5fV9URVhUYDtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoZGVmSXRlbXNbZHluS2V5XSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBsYWJlbCA9IGRlZkl0ZW1zW2R5bktleV07XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbGFiZWwgPSBkZWZpbml0aW9uICYmIFJpZ2h0SXRlbXNEZWZpbml0aW9uc1tkZWZpbml0aW9uXS5sYWJlbDtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChyaWdodC5rZXkgPT09ICdSVU5TJyAmJiBkZWZJdGVtc1tcIlJVTlNfTlVNQkVSXCJdKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgbGFiZWwgPSBkZWZJdGVtc1tcIlJVTlNfTlVNQkVSXCJdO1xuICAgICAgICAgICAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAocmlnaHQua2V5ID09PSAnR1JBUEhJQ1MnICYmIGRlZkl0ZW1zW1wiR1JBUEhJQ1NfTEFOR1VBR0VTXCJdKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgbGFiZWwgPSBkZWZJdGVtc1tcIkdSQVBISUNTX0xBTkdVQUdFU1wiXS5tYXAobD0+bC5sYWJlbCkuam9pbihcIiwgXCIpO1xuICAgICAgICAgICAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAocmlnaHQua2V5ID09PSAnQ09NTUVOVEFSWScgJiYgZGVmSXRlbXNbXCJDT01NRU5UQVJZX0xBTkdVQUdFU1wiXSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGxhYmVsID0gZGVmSXRlbXNbXCJDT01NRU5UQVJZX0xBTkdVQUdFU1wiXS5tYXAobD0+bC5sYWJlbCkuam9pbihcIiwgXCIpO1xuICAgICAgICAgICAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gPGRpdiAgY2xhc3NOYW1lPVwicmlnaHQtZGVmaW5pdGlvblwiIGtleT17J2xpc3RfY2hpbGQnK2t9PlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHtsYWJlbH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB7cmlnaHQua2V5ID09PSAnQ0FNRVJBJyAmJiA8c3BhbiBzdHlsZT17e21hcmdpbkxlZnQ6IDV9fT57ZGVmSXRlbXNbXCJDQU1FUkFTXCJdfTwvc3Bhbj59XG4gICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgICAgICAgfSlcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgfSlcbiAgICB9O1xuXG4gICAgZ2V0RmlsdGVyZWRCeURlbGl2ZXJ5ID0gKGRlZmluaXRpb25zLCByaWdodHNQYWNrYWdlKSA9PiB7XG4gICAgICAgIC8vZmlsdGVyIGRlZmluaXRpb25zIGJ5IHVzZXIgY2hvc2VuIHJpZ2h0UGFja2FnZVxuICAgICAgICByZXR1cm4gZGVmaW5pdGlvbnMuZmlsdGVyKGQgPT4ge1xuICAgICAgICAgICAgaWYgKGQuY2hlY2tEZWxpdmVyeSkge1xuICAgICAgICAgICAgICAgIHJldHVybiByaWdodHNQYWNrYWdlLnNvbWUocCA9PlxuICAgICAgICAgICAgICAgICAgICAhKHAuc2VsZWN0ZWRSaWdodHNbJ0NPTlRFTlRfREVMSVZFUlknXSA9PT0gXCJDT05URU5UX0RFTElWRVJZX05PTl9ERURJQ0FURURcIiB8fFxuICAgICAgICAgICAgICAgICAgICAgICAgcC5zaG9ydExhYmVsID09PSBcIlBSXCIgJiYgZC5rZXkgIT09ICdURUNITklDQUxfREVMSVZFUlknKVxuICAgICAgICAgICAgICAgIClcbiAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIHRydWVcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSk7XG4gICAgfVxuXG4gICAgcmVuZGVyVGV4dGFyZWEgPSAoZGVmaW5pdGlvbnMpID0+IHtcbiAgICAgICAgY29uc3Qge3NlbGVjdGVkUmlnaHRzQnlTdXBlclJpZ2h0LCByaWdodHNQYWNrYWdlfSA9IHRoaXMucHJvcHM7XG4gICAgICAgIHJldHVybiBkZWZpbml0aW9ucy5tYXAoIChyaWdodCxpKSA9PiB7XG4gICAgICAgICAgICBpZiAocmlnaHQua2V5ID09PSAnUFJPR1JBTScgfHwgIXNlbGVjdGVkUmlnaHRzQnlTdXBlclJpZ2h0W3JpZ2h0c1BhY2thZ2VbMF0uaWRdLml0ZW1zW3JpZ2h0LmtleStcIl9URVhUQVJFQVwiXSkgcmV0dXJuO1xuICAgICAgICAgICAgcmV0dXJuIDxkaXYgY2xhc3NOYW1lPVwidGVybS1zaGVldC1mdWxsLWl0ZW0tYm94XCIga2V5PXsndGV4dGFyZWFfJytpfT5cbiAgICAgICAgICAgICAgICA8bGFiZWw+e3JpZ2h0Lm5hbWV9PC9sYWJlbD5cbiAgICAgICAgICAgICAgICA8ZGl2ICBjbGFzc05hbWU9XCJmdWxsLWl0ZW0tY29udGVudFwiPlxuICAgICAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgICAgICBzZWxlY3RlZFJpZ2h0c0J5U3VwZXJSaWdodFtyaWdodHNQYWNrYWdlWzBdLmlkXS5pdGVtc1tyaWdodC5rZXkrXCJfVEVYVEFSRUFcIl1cbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgIH0pXG4gICAgfTtcblxuICAgIHJlbmRlckRldGFpbHM9IChkZWZpbml0aW9ucykgPT4ge1xuICAgICAgICBjb25zdCB7c2VsZWN0ZWRSaWdodHNCeVN1cGVyUmlnaHQsIHJpZ2h0c1BhY2thZ2V9ID0gdGhpcy5wcm9wcztcbiAgICAgICAgcmV0dXJuIGRlZmluaXRpb25zLm1hcCggKHJpZ2h0KSA9PiB7XG4gICAgICAgICAgICBpZiAocmlnaHQua2V5ID09PSAnUFJPR1JBTScgfHwgIXNlbGVjdGVkUmlnaHRzQnlTdXBlclJpZ2h0W3JpZ2h0c1BhY2thZ2VbMF0uaWRdLml0ZW1zW3JpZ2h0LmtleStcIl9ERVRBSUxTXCJdKSByZXR1cm47XG4gICAgICAgICAgICByZXR1cm4gPGRpdiBjbGFzc05hbWU9XCJmdWxsLWl0ZW0tYm94XCI+XG4gICAgICAgICAgICAgICAgPGxhYmVsPntyaWdodC5uYW1lfTwvbGFiZWw+XG4gICAgICAgICAgICAgICAgPGRpdiAgY2xhc3NOYW1lPVwiZnVsbC1pdGVtLWNvbnRlbnRcIj5cbiAgICAgICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICAgICAgc2VsZWN0ZWRSaWdodHNCeVN1cGVyUmlnaHRbcmlnaHRzUGFja2FnZVswXS5pZF0uaXRlbXNbcmlnaHQua2V5K1wiX0RFVEFJTFNcIl1cbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgIH0pXG4gICAgfTtcblxuICAgIHJlbmRlcigpIHtcbiAgICAgICAgY29uc3Qge3NlbGVjdGVkUmlnaHRzQnlTdXBlclJpZ2h0LCByaWdodHNQYWNrYWdlLCBQUk9HUkFNX1NDUklQVCwgUFJPR1JBTV9TVUJUSVRMRVMsIFBST0dSQU1fTEFOR1VBR0UsXG4gICAgICAgICAgICBDT01NRU5UU19SSUdIVFMsIENPTU1FTlRTX1BST0RVQ1RJT04sIEhMX0lOUFVULCBOQV9JTlBVVH0gPSB0aGlzLnByb3BzO1xuICAgICAgICBsZXQgcGFja2FnZXNBdmFpbGFibGUgPSByaWdodHNQYWNrYWdlLm1hcChycCA9PnJwLnNob3J0TGFiZWwpO1xuXG4gICAgICAgIHJldHVybiAoXG4gICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cInRlcm0tc2hlZXRcIj5cblxuICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwidGVybS1zaGVldC1pdGVtc1wiPlxuICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cInJvd1wiIHN0eWxlPXt7XG4gICAgICAgICAgICAgICAgICAgICAgICBib3JkZXI6ICdub25lJ1xuICAgICAgICAgICAgICAgICAgICB9fSA+XG4gICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cInJpZ2h0LWRlZmluaXRpb24gcmlnaHQtZGVmaW5pdGlvbi10aXRsZVwiPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHt0aGlzLmNvbnRleHQudChcIkxJU1RJTkdfREVUQUlMU19SSUdIVFNfSEVBREVSX1JJR0hUU1wiKX1cbiAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJpZ2h0c1BhY2thZ2UubWFwKChycCwgaSk9PntcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIDxkaXYga2V5PXtcInJwLWdyYW50XCIgKyBpIH0gY2xhc3NOYW1lPVwicmlnaHQtZGVmaW5pdGlvbiByaWdodC1kZWZpbml0aW9uLXRpdGxlXCI+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcnAubmFtZVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAge3RoaXMuY29udGV4dC50KFwiIFJpZ2h0c1wiKX1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfSlcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgICAgICAgIHsgdGhpcy5yZW5kZXJMaXN0KFJpZ2h0RGVmaW5pdGlvbnMsIGZhbHNlKSB9XG5cbiAgICAgICAgICAgICAgICAgICAgeyAoIHRoaXMuaGFzUmlnaHQoXCJOQVwiKSAmJiB0aGlzLmhhc1JpZ2h0KFwiSExcIikgKSAmJlxuICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT17J3Jvdyd9IGtleT17J3RyYW5zbWlzc2lvbid9PlxuICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJyaWdodC1uYW1lIHJpZ2h0LWRlZmluaXRpb25cIj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB7dGhpcy5jb250ZXh0LnQoXCJMSVNUSU5HX0RFVEFJTFNfUklHSFRTX0hFQURFUl9HUkFOVEVEX1RJTUVcIil9XG4gICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICByaWdodHNQYWNrYWdlLm1hcCgocnAsayk9PntcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIDxkaXYgIGNsYXNzTmFtZT1cInJpZ2h0LWRlZmluaXRpb25cIiBrZXk9eydsaXN0X2NoaWxkcycra30+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB7cnAuc2hvcnRMYWJlbCA9PT0gXCJOQVwiICYmIE5BX0lOUFVUICsgXCIgc2Vjb25kc1wiIH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHtycC5zaG9ydExhYmVsID09PSBcIkhMXCIgJiYgSExfSU5QVVQgKyBcIiBtaW51dGVzXCIgfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAge3JwLnNob3J0TGFiZWwgIT09IFwiTkFcIiAmJiBycC5zaG9ydExhYmVsICE9PSBcIkhMXCIgJiYgXCItXCIgfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9KVxuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgICAgPC9kaXY+XG5cbiAgICAgICAgICAgICAgICA8ZGl2PlxuICAgICAgICAgICAgICAgICAgICB7IHRoaXMucmVuZGVyVGV4dGFyZWEoUmlnaHREZWZpbml0aW9ucykgfVxuICAgICAgICAgICAgICAgICAgICB7IHRoaXMucmVuZGVyVGV4dGFyZWEoUHJvZHVjdGlvblN0YW5kYXJkc0RlZmluaXRpb25zKSB9XG4gICAgICAgICAgICAgICAgPC9kaXY+XG5cbiAgICAgICAgICAgICAgICB7IENPTU1FTlRTX1JJR0hUUyAmJiA8ZGl2IGNsYXNzTmFtZT1cInRlcm0tc2hlZXQtZnVsbC1pdGVtLWJveFwiPlxuICAgICAgICAgICAgICAgICAgICA8bGFiZWw+XG4gICAgICAgICAgICAgICAgICAgICAgICB7dGhpcy5jb250ZXh0LnQoXCJMSVNUSU5HX0RFVEFJTFNfUklHSFRTX1RJVExFX0FNRU5ETUVOVFNcIil9XG4gICAgICAgICAgICAgICAgICAgIDwvbGFiZWw+XG4gICAgICAgICAgICAgICAgICAgIDxkaXYgIGNsYXNzTmFtZT1cImZ1bGwtaXRlbS1jb250ZW50XCI+XG4gICAgICAgICAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgQ09NTUVOVFNfUklHSFRTXG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICAgIDwvZGl2Pn1cblxuICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwidGVybS1zaGVldC1pdGVtc1wiPlxuICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cInJvd1wiIHN0eWxlPXt7Ym9yZGVyOiAnbm9uZSd9fT5cbiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwicmlnaHQtZGVmaW5pdGlvbiByaWdodC1kZWZpbml0aW9uLXRpdGxlXCI+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAge3RoaXMuY29udGV4dC50KFwiTElTVElOR19ERVRBSUxTX1JJR0hUU19USVRMRV9QUk9EVUNUSU9OX0RFVEFJTFNcIil9XG4gICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICByaWdodHNQYWNrYWdlLm1hcCgocnAsIGkpPT57XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmICggcnAuc2VsZWN0ZWRSaWdodHNbJ0NPTlRFTlRfREVMSVZFUlknXT09PVwiQ09OVEVOVF9ERUxJVkVSWV9OT05fREVESUNBVEVEXCIpIHJldHVybjtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbGV0IHZpYUxpdmVGZWVkID0gcnAuc2VsZWN0ZWRSaWdodHNbJ0NPTlRFTlRfREVMSVZFUlknXT09PVwiQ09OVEVOVF9ERUxJVkVSWV9MSVZFXCI7XG5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIChcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYga2V5PXtcInJwLXByb2RcIiArIGkgfSBjbGFzc05hbWU9XCJyaWdodC1kZWZpbml0aW9uIHJpZ2h0LWRlZmluaXRpb24tdGl0bGVcIj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB7U3VwZXJSaWdodFByb2R1Y3Rpb25EZXRhaWxzTGFiZWxzW3JwLnNob3J0TGFiZWxdfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHt2aWFMaXZlRmVlZCAmJiBcIiAodmlhIGxpdmUgZmVlZClcIn1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICApXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfSlcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgICAgICAgIHsgdGhpcy5yZW5kZXJMaXN0KFByb2R1Y3Rpb25TdGFuZGFyZHNEZWZpbml0aW9ucywgdHJ1ZSkgfVxuXG4gICAgICAgICAgICAgICAgICAgIHsgcGFja2FnZXNBdmFpbGFibGUuaW5kZXhPZihcIlBSXCIpICE9PSAtMSAmJiBQUk9HUkFNX0xBTkdVQUdFICYmIHRoaXMucmVuZGVyUHJvZ3JhbUluZm8oUFJPR1JBTV9MQU5HVUFHRSwgXCJMYW5ndWFnZXNcIikgfVxuICAgICAgICAgICAgICAgICAgICB7IHBhY2thZ2VzQXZhaWxhYmxlLmluZGV4T2YoXCJQUlwiKSAhPT0gLTEgJiYgUFJPR1JBTV9TVUJUSVRMRVMgJiYgdGhpcy5yZW5kZXJQcm9ncmFtSW5mbyhQUk9HUkFNX1NVQlRJVExFUywgXCJTdWJ0aXRsZXNcIikgfVxuICAgICAgICAgICAgICAgICAgICB7IHBhY2thZ2VzQXZhaWxhYmxlLmluZGV4T2YoXCJQUlwiKSAhPT0gLTEgJiYgUFJPR1JBTV9TQ1JJUFQgJiYgdGhpcy5yZW5kZXJQcm9ncmFtSW5mbyhQUk9HUkFNX1NDUklQVCwgXCJTY3JpcHRcIikgfVxuICAgICAgICAgICAgICAgIDwvZGl2PlxuXG4gICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICBzZWxlY3RlZFJpZ2h0c0J5U3VwZXJSaWdodFtyaWdodHNQYWNrYWdlWzBdLmlkXS5pdGVtc1tcIlRFQ0hOSUNBTF9GRUVfREVUQUlMU1wiXSAmJlxuICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cInRlcm0tc2hlZXQtZnVsbC1pdGVtLWJveFwiPlxuICAgICAgICAgICAgICAgICAgICAgICAgPGxhYmVsPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHt0aGlzLmNvbnRleHQudChcIkxJU1RJTkdfREVUQUlMU19SSUdIVFNfVEVDSE5JQ0FMX0ZFRV9ERVRBSUxTXCIpfVxuICAgICAgICAgICAgICAgICAgICAgICAgPC9sYWJlbD5cbiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgIGNsYXNzTmFtZT1cImZ1bGwtaXRlbS1jb250ZW50XCI+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzZWxlY3RlZFJpZ2h0c0J5U3VwZXJSaWdodFtyaWdodHNQYWNrYWdlWzBdLmlkXS5pdGVtc1tcIlRFQ0hOSUNBTF9GRUVfREVUQUlMU1wiXVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgICB7IENPTU1FTlRTX1BST0RVQ1RJT04gJiYgPGRpdiBjbGFzc05hbWU9XCJ0ZXJtLXNoZWV0LWZ1bGwtaXRlbS1ib3hcIj5cbiAgICAgICAgICAgICAgICAgICAgPGxhYmVsPlxuICAgICAgICAgICAgICAgICAgICAgICAge3RoaXMuY29udGV4dC50KFwiTElTVElOR19ERVRBSUxTX1JJR0hUU19USVRMRV9BTUVORE1FTlRTXzJcIil9XG4gICAgICAgICAgICAgICAgICAgIDwvbGFiZWw+XG4gICAgICAgICAgICAgICAgICAgIDxkaXYgIGNsYXNzTmFtZT1cImZ1bGwtaXRlbS1jb250ZW50XCI+XG4gICAgICAgICAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgQ09NTUVOVFNfUFJPRFVDVElPTlxuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgICA8L2Rpdj59XG5cbiAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICApO1xuICAgIH1cbn1cblxuVGVybVNoZWV0LmNvbnRleHRUeXBlcyA9IHtcbiAgICB0OiBQcm9wVHlwZXMuZnVuYy5pc1JlcXVpcmVkXG59O1xuXG5jb25zdCBtYXBTdGF0ZVRvUHJvcHMgPSBzdGF0ZSA9PiB7XG4gICAgcmV0dXJuIHN0YXRlXG59O1xuXG5jb25zdCBtYXBEaXNwYXRjaFRvUHJvcHMgPSBkaXNwYXRjaCA9PiB7XG4gICAgcmV0dXJuIHtcbiAgICAgICAgb25DbGljazogaWQgPT4gZGlzcGF0Y2godGVzdChpZCkpXG4gICAgfVxufTtcblxuXG5leHBvcnQgZGVmYXVsdCBjb25uZWN0KFxuICAgIG1hcFN0YXRlVG9Qcm9wcyxcbiAgICBtYXBEaXNwYXRjaFRvUHJvcHNcbikoVGVybVNoZWV0KVxuXG5cbi8vIFdFQlBBQ0sgRk9PVEVSIC8vXG4vLyAuL3NyYy9BcHBCdW5kbGUvUmVzb3VyY2VzL3B1YmxpYy9qYXZhc2NyaXB0L2J1eS9jb250YWluZXJzL1Rlcm1TaGVldC5qcyIsIlxuZXhwb3J0IGNvbnN0IGZpbHRlclR5cGVzPSB7XG4gICAgQUREX1JJR0hUOidBRERfUklHSFQnLFxuICAgIFJFTU9WRV9SSUdIVCA6ICdSRU1PVkVfUklHSFQnLFxuICAgIFVQREFURV9DT1VOVFJJRVMgOiAnVVBEQVRFX0NPVU5UUklFUycsXG4gICAgVVBEQVRFX0VYQ0xVU0lWRSA6ICdVUERBVEVfRVhDTFVTSVZFJyxcbiAgICBVUERBVEVfSU5DTFVERURfQ09VTlRSSUVTIDogJ1VQREFURV9JTkNMVURFRF9DT1VOVFJJRVMnLFxuICAgIFVQREFURV9TUE9SVCA6ICdVUERBVEVfU1BPUlQnLFxuICAgIFVQREFURV9FVkVOVCA6ICdVUERBVEVfRVZFTlQnLFxuICAgIENMRUFSIDogJ0NMRUFSJyxcbiAgICBDTEVBUl9VUERBVEUgOiAnQ0xFQVJfVVBEQVRFJyxcbiAgICBVUERBVEVfTUFOWSA6ICdVUERBVEVfTUFOWSdcbn07XG5cbmNvbnN0IGRlZmF1bHRGaWx0ZXIgPSB7XG4gICAgcmlnaHRzOiBbXSxcbiAgICBjb3VudHJpZXM6IFtdLFxuICAgIGV4Y2x1c2l2ZSA6IGZhbHNlLFxuICAgIGluY2x1ZGVBbGxDb3VudHJpZXMgOiBmYWxzZSxcbiAgICBzcG9ydDoge1xuICAgICAgICB2YWx1ZSA6IG51bGwsXG4gICAgICAgIGxhYmVsIDogXCJBbGwgc3BvcnRzXCJcbiAgICB9LFxuICAgIGV2ZW50IDogXCJcIixcbiAgICBmb3JjZVVwZGF0ZSA6IHRydWVcblxufTtcblxuZXhwb3J0IGNvbnN0IGZpbHRlciA9IChzdGF0ZSA9IGRlZmF1bHRGaWx0ZXIsIGFjdGlvbikgPT4ge1xuXG4gICAgc3dpdGNoIChhY3Rpb24udHlwZSkge1xuICAgICAgICBjYXNlIGZpbHRlclR5cGVzLlVQREFURV9JTkNMVURFRF9DT1VOVFJJRVM6XG4gICAgICAgICAgICByZXR1cm4gT2JqZWN0LmFzc2lnbih7fSwgc3RhdGUsIHtcbiAgICAgICAgICAgICAgICBpbmNsdWRlQWxsQ291bnRyaWVzOiBhY3Rpb24uaW5jbHVkZUFsbENvdW50cmllc1xuICAgICAgICAgICAgfSk7XG4gICAgICAgIGNhc2UgZmlsdGVyVHlwZXMuQ0xFQVI6XG4gICAgICAgICAgICByZXR1cm4gT2JqZWN0LmFzc2lnbih7fSwgc3RhdGUsIGRlZmF1bHRGaWx0ZXIpO1xuICAgICAgICBjYXNlIGZpbHRlclR5cGVzLkNMRUFSX1VQREFURTpcbiAgICAgICAgICAgIHJldHVybiBPYmplY3QuYXNzaWduKHt9LCBzdGF0ZSwge1xuICAgICAgICAgICAgICAgIGZvcmNlVXBkYXRlOiBmYWxzZVxuICAgICAgICAgICAgfSk7XG4gICAgICAgIGNhc2UgZmlsdGVyVHlwZXMuQUREX1JJR0hUOlxuICAgICAgICAgICAgcmV0dXJuIE9iamVjdC5hc3NpZ24oe30sIHN0YXRlLCB7XG4gICAgICAgICAgICAgICAgcmlnaHRzOiBbLi4uc3RhdGUucmlnaHRzLCBhY3Rpb24uaWRdXG4gICAgICAgICAgICB9KTtcbiAgICAgICAgY2FzZSBmaWx0ZXJUeXBlcy5SRU1PVkVfUklHSFQ6XG5cbiAgICAgICAgICAgIGxldCBpbmRleCA9IHN0YXRlLnJpZ2h0cy5pbmRleE9mKGFjdGlvbi5pZCk7XG4gICAgICAgICAgICBzdGF0ZS5yaWdodHMuc3BsaWNlKGluZGV4LCAxKTtcbiAgICAgICAgICAgIHJldHVybiBPYmplY3QuYXNzaWduKHt9LCBzdGF0ZSwge1xuICAgICAgICAgICAgICAgIHJpZ2h0czogWy4uLnN0YXRlLnJpZ2h0c11cbiAgICAgICAgICAgIH0pO1xuICAgICAgICBjYXNlIGZpbHRlclR5cGVzLlVQREFURV9DT1VOVFJJRVM6XG4gICAgICAgICAgICByZXR1cm4gT2JqZWN0LmFzc2lnbih7fSwgc3RhdGUsIHtcbiAgICAgICAgICAgICAgICBjb3VudHJpZXM6IGFjdGlvbi5jb3VudHJpZXMubWFwKGM9PmMudmFsdWUpXG4gICAgICAgICAgICB9KTtcbiAgICAgICAgY2FzZSBmaWx0ZXJUeXBlcy5VUERBVEVfRVhDTFVTSVZFOlxuICAgICAgICAgICAgcmV0dXJuIE9iamVjdC5hc3NpZ24oe30sIHN0YXRlLCB7XG4gICAgICAgICAgICAgICAgZXhjbHVzaXZlOiBhY3Rpb24uZXhjbHVzaXZlXG4gICAgICAgICAgICB9KTtcbiAgICAgICAgY2FzZSBmaWx0ZXJUeXBlcy5VUERBVEVfU1BPUlQ6XG4gICAgICAgICAgICByZXR1cm4gT2JqZWN0LmFzc2lnbih7fSwgc3RhdGUsIHtcbiAgICAgICAgICAgICAgICBzcG9ydDogYWN0aW9uLnNwb3J0XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgY2FzZSBmaWx0ZXJUeXBlcy5VUERBVEVfRVZFTlQ6XG4gICAgICAgICAgICByZXR1cm4gT2JqZWN0LmFzc2lnbih7fSwgc3RhdGUsIHtcbiAgICAgICAgICAgICAgICBldmVudDogYWN0aW9uLmV2ZW50XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgY2FzZSBmaWx0ZXJUeXBlcy5VUERBVEVfTUFOWTpcbiAgICAgICAgICAgIGFjdGlvbi5maWx0ZXJzLmZvcmNlVXBkYXRlID0gdHJ1ZTtcbiAgICAgICAgICAgIGlmIChhY3Rpb24uZmlsdGVycy5yaWdodHMpIGFjdGlvbi5maWx0ZXJzLnJpZ2h0cyA9IGFjdGlvbi5maWx0ZXJzLnJpZ2h0cy5tYXAocj0+TnVtYmVyKHIpKTtcbiAgICAgICAgICAgIHJldHVybiBPYmplY3QuYXNzaWduKHt9LCBkZWZhdWx0RmlsdGVyLCBhY3Rpb24uZmlsdGVycyk7XG4gICAgICAgIGRlZmF1bHQ6XG4gICAgICAgICAgICByZXR1cm4gc3RhdGU7XG4gICAgfVxufTtcblxuXG4vLyBXRUJQQUNLIEZPT1RFUiAvL1xuLy8gLi9zcmMvQXBwQnVuZGxlL1Jlc291cmNlcy9wdWJsaWMvamF2YXNjcmlwdC9idXkvcmVkdWNlcnMvZmlsdGVyLmpzIiwiXG5leHBvcnQgY29uc3QgbWFya2V0cGxhY2VUeXBlcz0ge1xuICAgIFRFU1Q6J1RFU1QnLFxufTtcblxuZXhwb3J0IGNvbnN0IG1hcmtldHBsYWNlID0gKHN0YXRlID0ge1xuICAgIHRlc3RJdGVtOiBcIm1hcmtldHBsYWNlUmVkdWNlclwiXG5cbn0sIGFjdGlvbikgPT4ge1xuXG4gICAgc3dpdGNoIChhY3Rpb24udHlwZSkge1xuICAgICAgICBjYXNlIG1hcmtldHBsYWNlVHlwZXMuVEVTVDpcbiAgICAgICAgICAgIHJldHVybiBPYmplY3QuYXNzaWduKHt9LCBzdGF0ZSwge1xuICAgICAgICAgICAgICAgIHRlc3Q6IGFjdGlvbi50ZXh0LFxuICAgICAgICAgICAgICAgIGlkIDogYWN0aW9uLmlkXG4gICAgICAgICAgICB9KTtcbiAgICAgICAgZGVmYXVsdDpcbiAgICAgICAgICAgIHJldHVybiBzdGF0ZTtcbiAgICB9XG59O1xuXG5cbi8vIFdFQlBBQ0sgRk9PVEVSIC8vXG4vLyAuL3NyYy9BcHBCdW5kbGUvUmVzb3VyY2VzL3B1YmxpYy9qYXZhc2NyaXB0L2J1eS9yZWR1Y2Vycy9tYXJrZXRwbGFjZS5qcyIsIi8qKlxuKiBDcmVhdGVkIGJ5IEp1YW5DcnV6IG9uIDQvMS8yMDE4LlxuKi9cblxubGV0IF9fYXBpU3RvcmUgPSB7XG4gICAgdG91cm5hbWVudHMgOiB7fVxufTtcblxud2luZG93LkNvbnRlbnRBcmVuYSA9IHdpbmRvdy5Db250ZW50QXJlbmEgfHwge307XG5Db250ZW50QXJlbmEuQ29udGVudEFwaSA9IENvbnRlbnRBcmVuYS5Db250ZW50QXBpfHwge307XG5cbkNvbnRlbnRBcmVuYS5Db250ZW50QXBpPSB7XG4gICAgc2F2ZUNvbnRlbnRBc0RyYWZ0ICggY29udGVudCApIHtcbiAgICAgICAgbGV0IGRlZmVycmVkID0galF1ZXJ5LkRlZmVycmVkKCksXG4gICAgICAgICAgICBfdGhpcyA9IHRoaXM7XG5cbiAgICAgICAgJC5hamF4KHtcbiAgICAgICAgICAgIHVybDogZW52aG9zdHVybCArIFwiY29udGVudC9kcmFmdC9zYXZlXCIsXG4gICAgICAgICAgICB0eXBlOiBcIlBPU1RcIixcbiAgICAgICAgICAgIGRhdGE6IEpTT04uc3RyaW5naWZ5KGNvbnRlbnQpLFxuICAgICAgICAgICAgY29udGVudFR5cGU6IFwiYXBwbGljYXRpb24vanNvblwiLFxuICAgICAgICAgICAgc3VjY2VzczogZnVuY3Rpb24gKHJlc3BvbnNlKSB7XG4gICAgICAgICAgICAgICAgZGVmZXJyZWQucmVzb2x2ZShyZXNwb25zZSk7XG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgZXJyb3IgOiBmdW5jdGlvbiAoZGF0YSwgc3RhdHVzKSB7XG4gICAgICAgICAgICAgICAgZGVmZXJyZWQucmVqZWN0KHtcbiAgICAgICAgICAgICAgICAgICAgZGF0YTogZGF0YSxcbiAgICAgICAgICAgICAgICAgICAgc3RhdHVzOiBzdGF0dXNcbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSk7XG5cbiAgICAgICAgcmV0dXJuIGRlZmVycmVkLnByb21pc2UoKTtcbiAgICB9LFxuICAgIHNhdmVDb250ZW50QXNJbmFjdGl2ZSAoIGNvbnRlbnQgKSB7XG4gICAgICAgIGxldCBkZWZlcnJlZCA9IGpRdWVyeS5EZWZlcnJlZCgpLFxuICAgICAgICAgICAgX3RoaXMgPSB0aGlzO1xuXG4gICAgICAgICQuYWpheCh7XG4gICAgICAgICAgICB1cmw6IGVudmhvc3R1cmwgKyBcImFwaS9saXN0aW5nL3NhdmVcIixcbiAgICAgICAgICAgIHR5cGU6IFwiUE9TVFwiLFxuICAgICAgICAgICAgZGF0YTogSlNPTi5zdHJpbmdpZnkoY29udGVudCksXG4gICAgICAgICAgICBjb250ZW50VHlwZTogXCJhcHBsaWNhdGlvbi9qc29uXCIsXG4gICAgICAgICAgICBzdWNjZXNzOiBmdW5jdGlvbiAocmVzcG9uc2UpIHtcbiAgICAgICAgICAgICAgICBkZWZlcnJlZC5yZXNvbHZlKHJlc3BvbnNlKTtcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBlcnJvciA6IGZ1bmN0aW9uIChkYXRhLCBzdGF0dXMpIHtcbiAgICAgICAgICAgICAgICBkZWZlcnJlZC5yZWplY3Qoe1xuICAgICAgICAgICAgICAgICAgICBkYXRhOiBkYXRhLFxuICAgICAgICAgICAgICAgICAgICBzdGF0dXM6IHN0YXR1c1xuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgfVxuICAgICAgICB9KTtcblxuICAgICAgICByZXR1cm4gZGVmZXJyZWQucHJvbWlzZSgpO1xuICAgIH0sXG4gICAgc2F2ZUNvbnRlbnRBc0FjdGl2ZSAoIGNvbnRlbnQgKSB7XG4gICAgICAgIGxldCBkZWZlcnJlZCA9IGpRdWVyeS5EZWZlcnJlZCgpLFxuICAgICAgICAgICAgX3RoaXMgPSB0aGlzO1xuXG4gICAgICAgICQuYWpheCh7XG4gICAgICAgICAgICB1cmw6IGVudmhvc3R1cmwgKyBcImFwaS9saXN0aW5nL3B1Ymxpc2hcIixcbiAgICAgICAgICAgIHR5cGU6IFwiUE9TVFwiLFxuICAgICAgICAgICAgZGF0YTogSlNPTi5zdHJpbmdpZnkoY29udGVudCksXG4gICAgICAgICAgICBjb250ZW50VHlwZTogXCJhcHBsaWNhdGlvbi9qc29uXCIsXG4gICAgICAgICAgICBzdWNjZXNzOiBmdW5jdGlvbiAocmVzcG9uc2UpIHtcbiAgICAgICAgICAgICAgICBkZWZlcnJlZC5yZXNvbHZlKHJlc3BvbnNlKTtcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBlcnJvciA6IGZ1bmN0aW9uIChkYXRhLCBzdGF0dXMpIHtcbiAgICAgICAgICAgICAgICBkZWZlcnJlZC5yZWplY3Qoe1xuICAgICAgICAgICAgICAgICAgICBkYXRhOiBkYXRhLFxuICAgICAgICAgICAgICAgICAgICBzdGF0dXM6IHN0YXR1c1xuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgfVxuICAgICAgICB9KTtcblxuICAgICAgICByZXR1cm4gZGVmZXJyZWQucHJvbWlzZSgpO1xuICAgIH0sXG4gICAgc2VuZE1lc3NhZ2UgKCBtZXNzYWdlICkge1xuICAgICAgICBsZXQgZGVmZXJyZWQgPSBqUXVlcnkuRGVmZXJyZWQoKSxcbiAgICAgICAgICAgIF90aGlzID0gdGhpcztcblxuICAgICAgICAkLmFqYXgoe1xuICAgICAgICAgICAgdXJsOiBlbnZob3N0dXJsICsgXCJhcGkvbWVzc2FnZXMvc2VuZFwiLFxuICAgICAgICAgICAgdHlwZTogXCJQT1NUXCIsXG4gICAgICAgICAgICBkYXRhOiBKU09OLnN0cmluZ2lmeShtZXNzYWdlKSxcbiAgICAgICAgICAgIGNvbnRlbnRUeXBlOiBcImFwcGxpY2F0aW9uL2pzb25cIixcbiAgICAgICAgICAgIHN1Y2Nlc3M6IGZ1bmN0aW9uIChyZXNwb25zZSkge1xuICAgICAgICAgICAgICAgIGRlZmVycmVkLnJlc29sdmUocmVzcG9uc2UpO1xuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIGVycm9yIDogZnVuY3Rpb24gKGRhdGEsIHN0YXR1cykge1xuICAgICAgICAgICAgICAgIGRlZmVycmVkLnJlamVjdCh7XG4gICAgICAgICAgICAgICAgICAgIGRhdGE6IGRhdGEsXG4gICAgICAgICAgICAgICAgICAgIHN0YXR1czogc3RhdHVzXG4gICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0pO1xuXG4gICAgICAgIHJldHVybiBkZWZlcnJlZC5wcm9taXNlKCk7XG4gICAgfSxcbiAgICBnZXRVc2VySW5mbyAoICkge1xuICAgICAgICBsZXQgZGVmZXJyZWQgPSBqUXVlcnkuRGVmZXJyZWQoKSxcbiAgICAgICAgICAgIF90aGlzID0gdGhpcztcblxuICAgICAgICAkLmFqYXgoe1xuICAgICAgICAgICAgdXJsOiBlbnZob3N0dXJsICsgXCJhcGkvdXNlci9pbmZvXCIsXG4gICAgICAgICAgICB0eXBlOiBcIlBPU1RcIixcbiAgICAgICAgICAgIGNvbnRlbnRUeXBlOiBcImFwcGxpY2F0aW9uL2pzb25cIixcbiAgICAgICAgICAgIHN1Y2Nlc3M6IGZ1bmN0aW9uIChyZXNwb25zZSkge1xuICAgICAgICAgICAgICAgIGRlZmVycmVkLnJlc29sdmUocmVzcG9uc2UpO1xuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIGVycm9yIDogZnVuY3Rpb24gKGRhdGEsIHN0YXR1cykge1xuICAgICAgICAgICAgICAgIGRlZmVycmVkLnJlamVjdCh7XG4gICAgICAgICAgICAgICAgICAgIGRhdGE6IGRhdGEsXG4gICAgICAgICAgICAgICAgICAgIHN0YXR1czogc3RhdHVzXG4gICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0pO1xuXG4gICAgICAgIHJldHVybiBkZWZlcnJlZC5wcm9taXNlKCk7XG4gICAgfSxcbiAgICBnZXRDb21wYW55VXNlcnMgKCApIHtcbiAgICAgICAgbGV0IGRlZmVycmVkID0galF1ZXJ5LkRlZmVycmVkKCksXG4gICAgICAgICAgICBfdGhpcyA9IHRoaXM7XG5cbiAgICAgICAgJC5hamF4KHtcbiAgICAgICAgICAgIHVybDogZW52aG9zdHVybCArIFwiYXBpL2NvbXBhbnkvdXNlcnNcIixcbiAgICAgICAgICAgIHR5cGU6IFwiUE9TVFwiLFxuICAgICAgICAgICAgY29udGVudFR5cGU6IFwiYXBwbGljYXRpb24vanNvblwiLFxuICAgICAgICAgICAgc3VjY2VzczogZnVuY3Rpb24gKHJlc3BvbnNlKSB7XG4gICAgICAgICAgICAgICAgZGVmZXJyZWQucmVzb2x2ZShyZXNwb25zZSk7XG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgZXJyb3IgOiBmdW5jdGlvbiAoZGF0YSwgc3RhdHVzKSB7XG4gICAgICAgICAgICAgICAgZGVmZXJyZWQucmVqZWN0KHtcbiAgICAgICAgICAgICAgICAgICAgZGF0YTogZGF0YSxcbiAgICAgICAgICAgICAgICAgICAgc3RhdHVzOiBzdGF0dXNcbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSk7XG5cbiAgICAgICAgcmV0dXJuIGRlZmVycmVkLnByb21pc2UoKTtcbiAgICB9LFxuICAgIHVwZGF0ZUNvbXBhbnkgKCBjb21wYW55ICkge1xuICAgICAgICBsZXQgZGVmZXJyZWQgPSBqUXVlcnkuRGVmZXJyZWQoKSxcbiAgICAgICAgICAgIF90aGlzID0gdGhpcztcblxuICAgICAgICAkLmFqYXgoe1xuICAgICAgICAgICAgdXJsOiBlbnZob3N0dXJsICsgXCJhcGkvY29tcGFueS91cGRhdGVcIixcbiAgICAgICAgICAgIHR5cGU6IFwiUE9TVFwiLFxuICAgICAgICAgICAgZGF0YTogSlNPTi5zdHJpbmdpZnkoe2NvbXBhbnk6Y29tcGFueX0pLFxuICAgICAgICAgICAgY29udGVudFR5cGU6IFwiYXBwbGljYXRpb24vanNvblwiLFxuICAgICAgICAgICAgc3VjY2VzczogZnVuY3Rpb24gKHJlc3BvbnNlKSB7XG4gICAgICAgICAgICAgICAgZGVmZXJyZWQucmVzb2x2ZShyZXNwb25zZSk7XG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgZXJyb3IgOiBmdW5jdGlvbiAoZGF0YSwgc3RhdHVzKSB7XG4gICAgICAgICAgICAgICAgZGVmZXJyZWQucmVqZWN0KHtcbiAgICAgICAgICAgICAgICAgICAgZGF0YTogZGF0YSxcbiAgICAgICAgICAgICAgICAgICAgc3RhdHVzOiBzdGF0dXNcbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSk7XG5cbiAgICAgICAgcmV0dXJuIGRlZmVycmVkLnByb21pc2UoKTtcbiAgICB9LFxuXG4gICAgdXBkYXRlUGFzc3dvcmQgKCBkYXRhICkge1xuICAgICAgICBsZXQgZGVmZXJyZWQgPSBqUXVlcnkuRGVmZXJyZWQoKSxcbiAgICAgICAgICAgIF90aGlzID0gdGhpcztcblxuICAgICAgICAkLmFqYXgoe1xuICAgICAgICAgICAgdXJsOiBlbnZob3N0dXJsICsgXCJhcGkvdXNlci9wYXNzd29yZFwiLFxuICAgICAgICAgICAgdHlwZTogXCJQT1NUXCIsXG4gICAgICAgICAgICBkYXRhOiBKU09OLnN0cmluZ2lmeShkYXRhKSxcbiAgICAgICAgICAgIGNvbnRlbnRUeXBlOiBcImFwcGxpY2F0aW9uL2pzb25cIixcbiAgICAgICAgICAgIHN1Y2Nlc3M6IGZ1bmN0aW9uIChyZXNwb25zZSkge1xuICAgICAgICAgICAgICAgIGRlZmVycmVkLnJlc29sdmUocmVzcG9uc2UpO1xuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIGVycm9yIDogZnVuY3Rpb24gKGRhdGEsIHN0YXR1cykge1xuICAgICAgICAgICAgICAgIGRlZmVycmVkLnJlamVjdCh7XG4gICAgICAgICAgICAgICAgICAgIGRhdGE6IGRhdGEsXG4gICAgICAgICAgICAgICAgICAgIHN0YXR1czogc3RhdHVzXG4gICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0pO1xuXG4gICAgICAgIHJldHVybiBkZWZlcnJlZC5wcm9taXNlKCk7XG4gICAgfSxcbiAgICB1cGRhdGVVc2VyICggdXNlciApIHtcbiAgICAgICAgbGV0IGRlZmVycmVkID0galF1ZXJ5LkRlZmVycmVkKCksXG4gICAgICAgICAgICBfdGhpcyA9IHRoaXM7XG5cbiAgICAgICAgJC5hamF4KHtcbiAgICAgICAgICAgIHVybDogZW52aG9zdHVybCArIFwiYXBpL3VzZXIvdXBkYXRlXCIsXG4gICAgICAgICAgICB0eXBlOiBcIlBPU1RcIixcbiAgICAgICAgICAgIGRhdGE6IEpTT04uc3RyaW5naWZ5KHt1c2VyOnVzZXJ9KSxcbiAgICAgICAgICAgIGNvbnRlbnRUeXBlOiBcImFwcGxpY2F0aW9uL2pzb25cIixcbiAgICAgICAgICAgIHN1Y2Nlc3M6IGZ1bmN0aW9uIChyZXNwb25zZSkge1xuICAgICAgICAgICAgICAgIGRlZmVycmVkLnJlc29sdmUocmVzcG9uc2UpO1xuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIGVycm9yIDogZnVuY3Rpb24gKGRhdGEsIHN0YXR1cykge1xuICAgICAgICAgICAgICAgIGRlZmVycmVkLnJlamVjdCh7XG4gICAgICAgICAgICAgICAgICAgIGRhdGE6IGRhdGEsXG4gICAgICAgICAgICAgICAgICAgIHN0YXR1czogc3RhdHVzXG4gICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0pO1xuXG4gICAgICAgIHJldHVybiBkZWZlcnJlZC5wcm9taXNlKCk7XG4gICAgfSxcbiAgICBnZXRUaHJlYWQgKCBjdXN0b21JZCApIHtcbiAgICAgICAgbGV0IGRlZmVycmVkID0galF1ZXJ5LkRlZmVycmVkKCksXG4gICAgICAgICAgICBfdGhpcyA9IHRoaXM7XG5cbiAgICAgICAgJC5hamF4KHtcbiAgICAgICAgICAgIHVybDogZW52aG9zdHVybCArIFwiYXBpL21lc3NhZ2VzL3RocmVhZFwiLFxuICAgICAgICAgICAgdHlwZTogXCJQT1NUXCIsXG4gICAgICAgICAgICBkYXRhOiBKU09OLnN0cmluZ2lmeSh7Y3VzdG9tSWQ6IGN1c3RvbUlkfSksXG4gICAgICAgICAgICBjb250ZW50VHlwZTogXCJhcHBsaWNhdGlvbi9qc29uXCIsXG4gICAgICAgICAgICBzdWNjZXNzOiBmdW5jdGlvbiAocmVzcG9uc2UpIHtcbiAgICAgICAgICAgICAgICBkZWZlcnJlZC5yZXNvbHZlKHJlc3BvbnNlKTtcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBlcnJvciA6IGZ1bmN0aW9uIChkYXRhLCBzdGF0dXMpIHtcbiAgICAgICAgICAgICAgICBkZWZlcnJlZC5yZWplY3Qoe1xuICAgICAgICAgICAgICAgICAgICBkYXRhOiBkYXRhLFxuICAgICAgICAgICAgICAgICAgICBzdGF0dXM6IHN0YXR1c1xuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgfVxuICAgICAgICB9KTtcblxuICAgICAgICByZXR1cm4gZGVmZXJyZWQucHJvbWlzZSgpO1xuICAgIH0sXG4gICAgZ2V0VGhyZWFkcyAoICApIHtcbiAgICAgICAgbGV0IGRlZmVycmVkID0galF1ZXJ5LkRlZmVycmVkKCksXG4gICAgICAgICAgICBfdGhpcyA9IHRoaXM7XG5cbiAgICAgICAgJC5hamF4KHtcbiAgICAgICAgICAgIHVybDogZW52aG9zdHVybCArIFwiYXBpL21lc3NhZ2VzL3RocmVhZHNcIixcbiAgICAgICAgICAgIHR5cGU6IFwiUE9TVFwiLFxuICAgICAgICAgICAgY29udGVudFR5cGU6IFwiYXBwbGljYXRpb24vanNvblwiLFxuICAgICAgICAgICAgc3VjY2VzczogZnVuY3Rpb24gKHJlc3BvbnNlKSB7XG4gICAgICAgICAgICAgICAgZGVmZXJyZWQucmVzb2x2ZShyZXNwb25zZSk7XG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgZXJyb3IgOiBmdW5jdGlvbiAoZGF0YSwgc3RhdHVzKSB7XG4gICAgICAgICAgICAgICAgZGVmZXJyZWQucmVqZWN0KHtcbiAgICAgICAgICAgICAgICAgICAgZGF0YTogZGF0YSxcbiAgICAgICAgICAgICAgICAgICAgc3RhdHVzOiBzdGF0dXNcbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSk7XG5cbiAgICAgICAgcmV0dXJuIGRlZmVycmVkLnByb21pc2UoKTtcbiAgICB9LFxuICAgIHBsYWNlQmlkICggYmlkICkge1xuICAgICAgICBsZXQgZGVmZXJyZWQgPSBqUXVlcnkuRGVmZXJyZWQoKSxcbiAgICAgICAgICAgIF90aGlzID0gdGhpcztcblxuICAgICAgICAkLmFqYXgoe1xuICAgICAgICAgICAgdXJsOiBlbnZob3N0dXJsICsgXCJhcGkvYmlkL3BsYWNlXCIsXG4gICAgICAgICAgICB0eXBlOiBcIlBPU1RcIixcbiAgICAgICAgICAgIGRhdGE6IEpTT04uc3RyaW5naWZ5KGJpZCksXG4gICAgICAgICAgICBjb250ZW50VHlwZTogXCJhcHBsaWNhdGlvbi9qc29uXCIsXG4gICAgICAgICAgICBzdWNjZXNzOiBmdW5jdGlvbiAocmVzcG9uc2UpIHtcbiAgICAgICAgICAgICAgICBkZWZlcnJlZC5yZXNvbHZlKHJlc3BvbnNlKTtcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBlcnJvciA6IGZ1bmN0aW9uIChkYXRhLCBzdGF0dXMpIHtcbiAgICAgICAgICAgICAgICBkZWZlcnJlZC5yZWplY3Qoe1xuICAgICAgICAgICAgICAgICAgICBkYXRhOiBkYXRhLFxuICAgICAgICAgICAgICAgICAgICBzdGF0dXM6IHN0YXR1c1xuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgfVxuICAgICAgICB9KTtcblxuICAgICAgICByZXR1cm4gZGVmZXJyZWQucHJvbWlzZSgpO1xuICAgIH0sXG4gICAgYWNjZXB0QmlkICggYmlkLCBzaWduYXR1cmUgKSB7XG4gICAgICAgIGxldCBkZWZlcnJlZCA9IGpRdWVyeS5EZWZlcnJlZCgpLFxuICAgICAgICAgICAgX3RoaXMgPSB0aGlzO1xuXG4gICAgICAgIGJpZC5zaWduYXR1cmUgPSBzaWduYXR1cmU7XG5cbiAgICAgICAgJC5hamF4KHtcbiAgICAgICAgICAgIHVybDogZW52aG9zdHVybCArIFwiYXBpL2JpZC9hY2NlcHRcIixcbiAgICAgICAgICAgIHR5cGU6IFwiUE9TVFwiLFxuICAgICAgICAgICAgZGF0YTogSlNPTi5zdHJpbmdpZnkoYmlkKSxcbiAgICAgICAgICAgIGNvbnRlbnRUeXBlOiBcImFwcGxpY2F0aW9uL2pzb25cIixcbiAgICAgICAgICAgIHN1Y2Nlc3M6IGZ1bmN0aW9uIChyZXNwb25zZSkge1xuICAgICAgICAgICAgICAgIGRlZmVycmVkLnJlc29sdmUocmVzcG9uc2UpO1xuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIGVycm9yIDogZnVuY3Rpb24gKGRhdGEsIHN0YXR1cykge1xuICAgICAgICAgICAgICAgIGRlZmVycmVkLnJlamVjdCh7XG4gICAgICAgICAgICAgICAgICAgIGRhdGE6IGRhdGEsXG4gICAgICAgICAgICAgICAgICAgIHN0YXR1czogc3RhdHVzXG4gICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0pO1xuXG4gICAgICAgIHJldHVybiBkZWZlcnJlZC5wcm9taXNlKCk7XG4gICAgfSxcbiAgICByZWplY3RCaWQgKCBiaWQgKSB7XG4gICAgICAgIGxldCBkZWZlcnJlZCA9IGpRdWVyeS5EZWZlcnJlZCgpLFxuICAgICAgICAgICAgX3RoaXMgPSB0aGlzO1xuXG4gICAgICAgICQuYWpheCh7XG4gICAgICAgICAgICB1cmw6IGVudmhvc3R1cmwgKyBcImFwaS9iaWQvcmVqZWN0XCIsXG4gICAgICAgICAgICB0eXBlOiBcIlBPU1RcIixcbiAgICAgICAgICAgIGRhdGE6IEpTT04uc3RyaW5naWZ5KGJpZCksXG4gICAgICAgICAgICBjb250ZW50VHlwZTogXCJhcHBsaWNhdGlvbi9qc29uXCIsXG4gICAgICAgICAgICBzdWNjZXNzOiBmdW5jdGlvbiAocmVzcG9uc2UpIHtcbiAgICAgICAgICAgICAgICBkZWZlcnJlZC5yZXNvbHZlKHJlc3BvbnNlKTtcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBlcnJvciA6IGZ1bmN0aW9uIChkYXRhLCBzdGF0dXMpIHtcbiAgICAgICAgICAgICAgICBkZWZlcnJlZC5yZWplY3Qoe1xuICAgICAgICAgICAgICAgICAgICBkYXRhOiBkYXRhLFxuICAgICAgICAgICAgICAgICAgICBzdGF0dXM6IHN0YXR1c1xuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgfVxuICAgICAgICB9KTtcblxuICAgICAgICByZXR1cm4gZGVmZXJyZWQucHJvbWlzZSgpO1xuICAgIH0sXG4gICAgcmVtb3ZlQmlkICggYmlkICkge1xuICAgICAgICBsZXQgZGVmZXJyZWQgPSBqUXVlcnkuRGVmZXJyZWQoKSxcbiAgICAgICAgICAgIF90aGlzID0gdGhpcztcblxuICAgICAgICAkLmFqYXgoe1xuICAgICAgICAgICAgdXJsOiBlbnZob3N0dXJsICsgXCJhcGkvYmlkL3JlbW92ZVwiLFxuICAgICAgICAgICAgdHlwZTogXCJQT1NUXCIsXG4gICAgICAgICAgICBkYXRhOiBKU09OLnN0cmluZ2lmeShiaWQpLFxuICAgICAgICAgICAgY29udGVudFR5cGU6IFwiYXBwbGljYXRpb24vanNvblwiLFxuICAgICAgICAgICAgc3VjY2VzczogZnVuY3Rpb24gKHJlc3BvbnNlKSB7XG4gICAgICAgICAgICAgICAgZGVmZXJyZWQucmVzb2x2ZShyZXNwb25zZSk7XG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgZXJyb3IgOiBmdW5jdGlvbiAoZGF0YSwgc3RhdHVzKSB7XG4gICAgICAgICAgICAgICAgZGVmZXJyZWQucmVqZWN0KHtcbiAgICAgICAgICAgICAgICAgICAgZGF0YTogZGF0YSxcbiAgICAgICAgICAgICAgICAgICAgc3RhdHVzOiBzdGF0dXNcbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSk7XG5cbiAgICAgICAgcmV0dXJuIGRlZmVycmVkLnByb21pc2UoKTtcbiAgICB9LFxuXG4gICAgc2F2ZVRtcEZpbGUgKCBmaWxlcyApIHtcbiAgICAgICAgbGV0IGRlZmVycmVkID0galF1ZXJ5LkRlZmVycmVkKCksXG4gICAgICAgICAgICBfdGhpcyA9IHRoaXM7XG5cbiAgICAgICAgY29uc3QgZGF0YSA9IG5ldyBGb3JtRGF0YSgpO1xuICAgICAgICBkYXRhLmFwcGVuZCgnZmlsZScsIGZpbGVzWzBdKTtcblxuICAgICAgICAkLmFqYXgoe1xuICAgICAgICAgICAgdXJsOiBlbnZob3N0dXJsICsgXCJjb250ZW50L3NhdmUvZmlsZVwiLFxuICAgICAgICAgICAgdHlwZTogXCJQT1NUXCIsXG4gICAgICAgICAgICBkYXRhOiBkYXRhLFxuICAgICAgICAgICAgcHJvY2Vzc0RhdGE6IGZhbHNlLFxuICAgICAgICAgICAgY29udGVudFR5cGU6IGZhbHNlLFxuICAgICAgICAgICAgc3VjY2VzczogZnVuY3Rpb24gKHJlc3BvbnNlKSB7XG4gICAgICAgICAgICAgICAgZGVmZXJyZWQucmVzb2x2ZShyZXNwb25zZSk7XG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgZXJyb3IgOiBmdW5jdGlvbiAoZGF0YSwgc3RhdHVzKSB7XG4gICAgICAgICAgICAgICAgZGVmZXJyZWQucmVqZWN0KHtcbiAgICAgICAgICAgICAgICAgICAgZGF0YTogZGF0YSxcbiAgICAgICAgICAgICAgICAgICAgc3RhdHVzOiBzdGF0dXNcbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSk7XG5cbiAgICAgICAgcmV0dXJuIGRlZmVycmVkLnByb21pc2UoKTtcbiAgICB9LFxuICAgIGdldEJ5Q3VzdG9tSWQgKCBjdXN0b21JZCApIHtcbiAgICAgICAgdmFyIGRlZmVycmVkID0galF1ZXJ5LkRlZmVycmVkKCksXG4gICAgICAgICAgICBfdGhpcyA9IHRoaXM7XG5cbiAgICAgICAgJC5hamF4KHtcbiAgICAgICAgICAgIHVybDogZW52aG9zdHVybCArIFwibGlzdGluZy9kZXRhaWxzXCIsXG4gICAgICAgICAgICB0eXBlOiBcIlBPU1RcIixcbiAgICAgICAgICAgIGRhdGE6IHtcbiAgICAgICAgICAgICAgICBjdXN0b21JZCA6IGN1c3RvbUlkLFxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIHN1Y2Nlc3M6IGZ1bmN0aW9uIChyZXNwb25zZSkge1xuICAgICAgICAgICAgICAgIGRlZmVycmVkLnJlc29sdmUocmVzcG9uc2UpO1xuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIGVycm9yIDogZnVuY3Rpb24gKGRhdGEsIHN0YXR1cykge1xuICAgICAgICAgICAgICAgIGRlZmVycmVkLnJlamVjdCh7XG4gICAgICAgICAgICAgICAgICAgIGRhdGE6IGRhdGEsXG4gICAgICAgICAgICAgICAgICAgIHN0YXR1czogc3RhdHVzXG4gICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0pO1xuXG4gICAgICAgIHJldHVybiBkZWZlcnJlZC5wcm9taXNlKCk7XG4gICAgfSxcblxuICAgIGdldERyYWZ0TGlzdGluZ3MgKCApIHtcbiAgICAgICAgbGV0IGRlZmVycmVkID0galF1ZXJ5LkRlZmVycmVkKCk7XG5cbiAgICAgICAgJC5hamF4KHtcbiAgICAgICAgICAgIHVybDogZW52aG9zdHVybCArIFwiYXBpL2xpc3RpbmdzL2RyYWZ0XCIsXG4gICAgICAgICAgICB0eXBlOiBcIlBPU1RcIixcbiAgICAgICAgICAgIHN1Y2Nlc3M6IGZ1bmN0aW9uIChyZXNwb25zZSkge1xuICAgICAgICAgICAgICAgIGRlZmVycmVkLnJlc29sdmUocmVzcG9uc2UpO1xuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIGVycm9yIDogZnVuY3Rpb24gKGRhdGEsIHN0YXR1cykge1xuICAgICAgICAgICAgICAgIGRlZmVycmVkLnJlamVjdCh7XG4gICAgICAgICAgICAgICAgICAgIGRhdGE6IGRhdGEsXG4gICAgICAgICAgICAgICAgICAgIHN0YXR1czogc3RhdHVzXG4gICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0pO1xuXG4gICAgICAgIHJldHVybiBkZWZlcnJlZC5wcm9taXNlKCk7XG4gICAgfSxcbiAgICBnZXRJbmFjdGl2ZUxpc3RpbmdzICggKSB7XG4gICAgICAgIGxldCBkZWZlcnJlZCA9IGpRdWVyeS5EZWZlcnJlZCgpO1xuXG4gICAgICAgICQuYWpheCh7XG4gICAgICAgICAgICB1cmw6IGVudmhvc3R1cmwgKyBcImFwaS9saXN0aW5ncy9pbmFjdGl2ZVwiLFxuICAgICAgICAgICAgdHlwZTogXCJQT1NUXCIsXG4gICAgICAgICAgICBzdWNjZXNzOiBmdW5jdGlvbiAocmVzcG9uc2UpIHtcbiAgICAgICAgICAgICAgICBkZWZlcnJlZC5yZXNvbHZlKHJlc3BvbnNlKTtcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBlcnJvciA6IGZ1bmN0aW9uIChkYXRhLCBzdGF0dXMpIHtcbiAgICAgICAgICAgICAgICBkZWZlcnJlZC5yZWplY3Qoe1xuICAgICAgICAgICAgICAgICAgICBkYXRhOiBkYXRhLFxuICAgICAgICAgICAgICAgICAgICBzdGF0dXM6IHN0YXR1c1xuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgfVxuICAgICAgICB9KTtcblxuICAgICAgICByZXR1cm4gZGVmZXJyZWQucHJvbWlzZSgpO1xuICAgIH0sXG4gICAgZ2V0QWN0aXZlTGlzdGluZ3MgKCApIHtcbiAgICAgICAgbGV0IGRlZmVycmVkID0galF1ZXJ5LkRlZmVycmVkKCk7XG5cbiAgICAgICAgJC5hamF4KHtcbiAgICAgICAgICAgIHVybDogZW52aG9zdHVybCArIFwiYXBpL2xpc3RpbmdzL2FjdGl2ZVwiLFxuICAgICAgICAgICAgdHlwZTogXCJQT1NUXCIsXG4gICAgICAgICAgICBzdWNjZXNzOiBmdW5jdGlvbiAocmVzcG9uc2UpIHtcbiAgICAgICAgICAgICAgICBkZWZlcnJlZC5yZXNvbHZlKHJlc3BvbnNlKTtcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBlcnJvciA6IGZ1bmN0aW9uIChkYXRhLCBzdGF0dXMpIHtcbiAgICAgICAgICAgICAgICBkZWZlcnJlZC5yZWplY3Qoe1xuICAgICAgICAgICAgICAgICAgICBkYXRhOiBkYXRhLFxuICAgICAgICAgICAgICAgICAgICBzdGF0dXM6IHN0YXR1c1xuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgfVxuICAgICAgICB9KTtcblxuICAgICAgICByZXR1cm4gZGVmZXJyZWQucHJvbWlzZSgpO1xuICAgIH0sXG4gICAgZ2V0RXhwaXJlZExpc3RpbmdzICggKSB7XG4gICAgICAgIGxldCBkZWZlcnJlZCA9IGpRdWVyeS5EZWZlcnJlZCgpO1xuXG4gICAgICAgICQuYWpheCh7XG4gICAgICAgICAgICB1cmw6IGVudmhvc3R1cmwgKyBcImFwaS9saXN0aW5ncy9leHBpcmVkXCIsXG4gICAgICAgICAgICB0eXBlOiBcIlBPU1RcIixcbiAgICAgICAgICAgIHN1Y2Nlc3M6IGZ1bmN0aW9uIChyZXNwb25zZSkge1xuICAgICAgICAgICAgICAgIGRlZmVycmVkLnJlc29sdmUocmVzcG9uc2UpO1xuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIGVycm9yIDogZnVuY3Rpb24gKGRhdGEsIHN0YXR1cykge1xuICAgICAgICAgICAgICAgIGRlZmVycmVkLnJlamVjdCh7XG4gICAgICAgICAgICAgICAgICAgIGRhdGE6IGRhdGEsXG4gICAgICAgICAgICAgICAgICAgIHN0YXR1czogc3RhdHVzXG4gICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0pO1xuXG4gICAgICAgIHJldHVybiBkZWZlcnJlZC5wcm9taXNlKCk7XG4gICAgfSxcbiAgICByZW1vdmVMaXN0aW5nKCBjdXN0b21JZCApIHtcbiAgICAgICAgdmFyIGRlZmVycmVkID0galF1ZXJ5LkRlZmVycmVkKCksXG4gICAgICAgICAgICBfdGhpcyA9IHRoaXM7XG5cbiAgICAgICAgJC5hamF4KHtcbiAgICAgICAgICAgIHVybDogZW52aG9zdHVybCArIFwiYXBpL2xpc3RpbmdzL3JlbW92ZVwiLFxuICAgICAgICAgICAgdHlwZTogXCJQT1NUXCIsXG4gICAgICAgICAgICBkYXRhOiB7XG4gICAgICAgICAgICAgICAgY3VzdG9tSWQgOiBjdXN0b21JZCxcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBzdWNjZXNzOiBmdW5jdGlvbiAocmVzcG9uc2UpIHtcbiAgICAgICAgICAgICAgICBkZWZlcnJlZC5yZXNvbHZlKHJlc3BvbnNlKTtcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBlcnJvciA6IGZ1bmN0aW9uIChkYXRhLCBzdGF0dXMpIHtcbiAgICAgICAgICAgICAgICBkZWZlcnJlZC5yZWplY3Qoe1xuICAgICAgICAgICAgICAgICAgICBkYXRhOiBkYXRhLFxuICAgICAgICAgICAgICAgICAgICBzdGF0dXM6IHN0YXR1c1xuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgfVxuICAgICAgICB9KTtcblxuICAgICAgICByZXR1cm4gZGVmZXJyZWQucHJvbWlzZSgpO1xuICAgIH0sXG4gICAgZHVwbGljYXRlTGlzdGluZyggY3VzdG9tSWQgKSB7XG4gICAgICAgIHZhciBkZWZlcnJlZCA9IGpRdWVyeS5EZWZlcnJlZCgpLFxuICAgICAgICAgICAgX3RoaXMgPSB0aGlzO1xuXG4gICAgICAgICQuYWpheCh7XG4gICAgICAgICAgICB1cmw6IGVudmhvc3R1cmwgKyBcImFwaS9saXN0aW5ncy9kdXBsaWNhdGVcIixcbiAgICAgICAgICAgIHR5cGU6IFwiUE9TVFwiLFxuICAgICAgICAgICAgZGF0YToge1xuICAgICAgICAgICAgICAgIGN1c3RvbUlkIDogY3VzdG9tSWQsXG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgc3VjY2VzczogZnVuY3Rpb24gKHJlc3BvbnNlKSB7XG4gICAgICAgICAgICAgICAgZGVmZXJyZWQucmVzb2x2ZShyZXNwb25zZSk7XG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgZXJyb3IgOiBmdW5jdGlvbiAoZGF0YSwgc3RhdHVzKSB7XG4gICAgICAgICAgICAgICAgZGVmZXJyZWQucmVqZWN0KHtcbiAgICAgICAgICAgICAgICAgICAgZGF0YTogZGF0YSxcbiAgICAgICAgICAgICAgICAgICAgc3RhdHVzOiBzdGF0dXNcbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSk7XG5cbiAgICAgICAgcmV0dXJuIGRlZmVycmVkLnByb21pc2UoKTtcbiAgICB9LFxuICAgIGRlYWN0aXZhdGVMaXN0aW5nKCBjdXN0b21JZCApIHtcbiAgICAgICAgdmFyIGRlZmVycmVkID0galF1ZXJ5LkRlZmVycmVkKCksXG4gICAgICAgICAgICBfdGhpcyA9IHRoaXM7XG5cbiAgICAgICAgJC5hamF4KHtcbiAgICAgICAgICAgIHVybDogZW52aG9zdHVybCArIFwiYXBpL2xpc3RpbmdzL2RlYWN0aXZhdGVcIixcbiAgICAgICAgICAgIHR5cGU6IFwiUE9TVFwiLFxuICAgICAgICAgICAgZGF0YToge1xuICAgICAgICAgICAgICAgIGN1c3RvbUlkIDogY3VzdG9tSWQsXG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgc3VjY2VzczogZnVuY3Rpb24gKHJlc3BvbnNlKSB7XG4gICAgICAgICAgICAgICAgZGVmZXJyZWQucmVzb2x2ZShyZXNwb25zZSk7XG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgZXJyb3IgOiBmdW5jdGlvbiAoZGF0YSwgc3RhdHVzKSB7XG4gICAgICAgICAgICAgICAgZGVmZXJyZWQucmVqZWN0KHtcbiAgICAgICAgICAgICAgICAgICAgZGF0YTogZGF0YSxcbiAgICAgICAgICAgICAgICAgICAgc3RhdHVzOiBzdGF0dXNcbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSk7XG5cbiAgICAgICAgcmV0dXJuIGRlZmVycmVkLnByb21pc2UoKTtcbiAgICB9LFxuICAgIGFyY2hpdmVMaXN0aW5nKCBjdXN0b21JZCApIHtcbiAgICAgICAgdmFyIGRlZmVycmVkID0galF1ZXJ5LkRlZmVycmVkKCksXG4gICAgICAgICAgICBfdGhpcyA9IHRoaXM7XG5cbiAgICAgICAgJC5hamF4KHtcbiAgICAgICAgICAgIHVybDogZW52aG9zdHVybCArIFwiYXBpL2xpc3RpbmdzL2FyY2hpdmVcIixcbiAgICAgICAgICAgIHR5cGU6IFwiUE9TVFwiLFxuICAgICAgICAgICAgZGF0YToge1xuICAgICAgICAgICAgICAgIGN1c3RvbUlkIDogY3VzdG9tSWQsXG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgc3VjY2VzczogZnVuY3Rpb24gKHJlc3BvbnNlKSB7XG4gICAgICAgICAgICAgICAgZGVmZXJyZWQucmVzb2x2ZShyZXNwb25zZSk7XG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgZXJyb3IgOiBmdW5jdGlvbiAoZGF0YSwgc3RhdHVzKSB7XG4gICAgICAgICAgICAgICAgZGVmZXJyZWQucmVqZWN0KHtcbiAgICAgICAgICAgICAgICAgICAgZGF0YTogZGF0YSxcbiAgICAgICAgICAgICAgICAgICAgc3RhdHVzOiBzdGF0dXNcbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSk7XG5cbiAgICAgICAgcmV0dXJuIGRlZmVycmVkLnByb21pc2UoKTtcbiAgICB9LFxuXG4gICAgZ2V0Q2xvc2VkRGVhbHMgKCAgKSB7XG4gICAgICAgIGxldCBkZWZlcnJlZCA9IGpRdWVyeS5EZWZlcnJlZCgpO1xuXG4gICAgICAgICQuYWpheCh7XG4gICAgICAgICAgICB1cmw6IGVudmhvc3R1cmwgKyBcImFwaS9iaWQvY2xvc2VkXCIsXG4gICAgICAgICAgICB0eXBlOiBcIlBPU1RcIixcbiAgICAgICAgICAgIGRhdGE6IHtcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBzdWNjZXNzOiBmdW5jdGlvbiAocmVzcG9uc2UpIHtcbiAgICAgICAgICAgICAgICBkZWZlcnJlZC5yZXNvbHZlKHJlc3BvbnNlKTtcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBlcnJvciA6IGZ1bmN0aW9uIChkYXRhLCBzdGF0dXMpIHtcbiAgICAgICAgICAgICAgICBkZWZlcnJlZC5yZWplY3Qoe1xuICAgICAgICAgICAgICAgICAgICBkYXRhOiBkYXRhLFxuICAgICAgICAgICAgICAgICAgICBzdGF0dXM6IHN0YXR1c1xuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgfVxuICAgICAgICB9KTtcblxuICAgICAgICByZXR1cm4gZGVmZXJyZWQucHJvbWlzZSgpO1xuICAgIH0sXG4gICAgZ2V0QWxsRGVhbHMgKCAgKSB7XG4gICAgICAgIGxldCBkZWZlcnJlZCA9IGpRdWVyeS5EZWZlcnJlZCgpO1xuXG4gICAgICAgICQuYWpheCh7XG4gICAgICAgICAgICB1cmw6IGVudmhvc3R1cmwgKyBcImFwaS9iaWQvYWxsXCIsXG4gICAgICAgICAgICB0eXBlOiBcIlBPU1RcIixcbiAgICAgICAgICAgIGRhdGE6IHtcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBzdWNjZXNzOiBmdW5jdGlvbiAocmVzcG9uc2UpIHtcbiAgICAgICAgICAgICAgICBkZWZlcnJlZC5yZXNvbHZlKHJlc3BvbnNlKTtcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBlcnJvciA6IGZ1bmN0aW9uIChkYXRhLCBzdGF0dXMpIHtcbiAgICAgICAgICAgICAgICBkZWZlcnJlZC5yZWplY3Qoe1xuICAgICAgICAgICAgICAgICAgICBkYXRhOiBkYXRhLFxuICAgICAgICAgICAgICAgICAgICBzdGF0dXM6IHN0YXR1c1xuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgfVxuICAgICAgICB9KTtcblxuICAgICAgICByZXR1cm4gZGVmZXJyZWQucHJvbWlzZSgpO1xuICAgIH0sXG4gICAgZ2V0UGVuZGluZ0RlYWxzICggICkge1xuICAgICAgICBsZXQgZGVmZXJyZWQgPSBqUXVlcnkuRGVmZXJyZWQoKTtcblxuICAgICAgICAkLmFqYXgoe1xuICAgICAgICAgICAgdXJsOiBlbnZob3N0dXJsICsgXCJhcGkvYmlkL3BlbmRpbmdcIixcbiAgICAgICAgICAgIHR5cGU6IFwiUE9TVFwiLFxuICAgICAgICAgICAgZGF0YToge1xuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIHN1Y2Nlc3M6IGZ1bmN0aW9uIChyZXNwb25zZSkge1xuICAgICAgICAgICAgICAgIGRlZmVycmVkLnJlc29sdmUocmVzcG9uc2UpO1xuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIGVycm9yIDogZnVuY3Rpb24gKGRhdGEsIHN0YXR1cykge1xuICAgICAgICAgICAgICAgIGRlZmVycmVkLnJlamVjdCh7XG4gICAgICAgICAgICAgICAgICAgIGRhdGE6IGRhdGEsXG4gICAgICAgICAgICAgICAgICAgIHN0YXR1czogc3RhdHVzXG4gICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0pO1xuXG4gICAgICAgIHJldHVybiBkZWZlcnJlZC5wcm9taXNlKCk7XG4gICAgfSxcbiAgICBnZXRSZWplY3RlZERlYWxzICggICkge1xuICAgICAgICBsZXQgZGVmZXJyZWQgPSBqUXVlcnkuRGVmZXJyZWQoKTtcblxuICAgICAgICAkLmFqYXgoe1xuICAgICAgICAgICAgdXJsOiBlbnZob3N0dXJsICsgXCJhcGkvYmlkL3JlamVjdGVkXCIsXG4gICAgICAgICAgICB0eXBlOiBcIlBPU1RcIixcbiAgICAgICAgICAgIGRhdGE6IHtcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBzdWNjZXNzOiBmdW5jdGlvbiAocmVzcG9uc2UpIHtcbiAgICAgICAgICAgICAgICBkZWZlcnJlZC5yZXNvbHZlKHJlc3BvbnNlKTtcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBlcnJvciA6IGZ1bmN0aW9uIChkYXRhLCBzdGF0dXMpIHtcbiAgICAgICAgICAgICAgICBkZWZlcnJlZC5yZWplY3Qoe1xuICAgICAgICAgICAgICAgICAgICBkYXRhOiBkYXRhLFxuICAgICAgICAgICAgICAgICAgICBzdGF0dXM6IHN0YXR1c1xuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgfVxuICAgICAgICB9KTtcblxuICAgICAgICByZXR1cm4gZGVmZXJyZWQucHJvbWlzZSgpO1xuICAgIH0sXG4gICAgZ2V0V2F0Y2hsaXN0TGlzdGluZ3MgKCl7XG4gICAgICAgIHZhciBkZWZlcnJlZCA9IGpRdWVyeS5EZWZlcnJlZCgpLFxuICAgICAgICAgICAgX3RoaXMgPSB0aGlzO1xuXG4gICAgICAgICQuYWpheCh7XG4gICAgICAgICAgICB1cmw6IGVudmhvc3R1cmwgKyBcImFwaS9saXN0aW5ncy93YXRjaGxpc3RcIixcbiAgICAgICAgICAgIHR5cGU6IFwiUE9TVFwiLFxuICAgICAgICAgICAgc3VjY2VzczogZnVuY3Rpb24gKHJlc3BvbnNlKSB7XG4gICAgICAgICAgICAgICAgZGVmZXJyZWQucmVzb2x2ZShyZXNwb25zZSk7XG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgZXJyb3IgOiBmdW5jdGlvbiAoZGF0YSwgc3RhdHVzKSB7XG4gICAgICAgICAgICAgICAgZGVmZXJyZWQucmVqZWN0KHtcbiAgICAgICAgICAgICAgICAgICAgZGF0YTogZGF0YSxcbiAgICAgICAgICAgICAgICAgICAgc3RhdHVzOiBzdGF0dXNcbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSk7XG5cbiAgICAgICAgcmV0dXJuIGRlZmVycmVkLnByb21pc2UoKTtcbiAgICB9LFxuXG59O1xuXG5cblxuXG5cbi8vIFdFQlBBQ0sgRk9PVEVSIC8vXG4vLyAuL3NyYy9BcHBCdW5kbGUvUmVzb3VyY2VzL3B1YmxpYy9qYXZhc2NyaXB0L2NhL2NhLmFwaS5jb250ZW50LmpzIiwiaW1wb3J0IGF4aW9zIGZyb20gJ2F4aW9zJztcblxuLyoqXG4gKiBDcmVhdGVkIGJ5IEp1YW5DcnV6IG9uIDQvMS8yMDE4LlxuICovXG5cbmxldCBfX2FwaVN0b3JlID0ge1xuICAgIHRvdXJuYW1lbnRzIDoge31cbn07XG5cbndpbmRvdy5Db250ZW50QXJlbmEgPSB3aW5kb3cuQ29udGVudEFyZW5hIHx8IHt9O1xuXG5Db250ZW50QXJlbmEuQXBpPSB7XG4gICAgc29ydEJ5TGFiZWwgKGEsIGIpIHtcbiAgICAgICAgcmV0dXJuIChhLm5hbWUgPiBiLm5hbWUpID8gMSA6ICgoYi5uYW1lID4gYS5uYW1lKSA/IC0xIDogMClcbiAgICB9LFxuICAgIHNvcnRCeVNwb3J0IChhLCBiKSB7XG5cbiAgICAgICAgaWYgKGEuc3BvcnQubmFtZSA+IGIuc3BvcnQubmFtZSkgcmV0dXJuIDE7XG4gICAgICAgIGlmIChhLnNwb3J0Lm5hbWUgPCBiLnNwb3J0Lm5hbWUpIHJldHVybiAtMTtcbiAgICAgICAgaWYgKGEuc3BvcnRDYXRlZ29yeS5uYW1lID4gYi5zcG9ydENhdGVnb3J5Lm5hbWUpIHJldHVybiAxO1xuICAgICAgICBpZiAoYS5zcG9ydENhdGVnb3J5Lm5hbWUgPCBiLnNwb3J0Q2F0ZWdvcnkubmFtZSkgcmV0dXJuIC0xO1xuICAgICAgICBpZiAoYS5uYW1lID4gYi5uYW1lKSByZXR1cm4gMTtcbiAgICAgICAgaWYgKGEubmFtZSA8IGIubmFtZSkgcmV0dXJuIC0xO1xuICAgICAgICByZXR1cm4gMDtcblxuICAgIH0sXG4gICAgcHJlcGFyZUxpc3QgKCBsaXN0LCBjYXRlZ29yeUlkICkge1xuXG4gICAgICAgIGxldCBfdGhpcyA9IHRoaXM7XG5cbiAgICAgICAgbGlzdCA9ICQubWFwKGxpc3QsIGZ1bmN0aW9uIChpdGVtKSB7XG5cbiAgICAgICAgICAgIC8vIEZpbHRlciBieSBjYXRlZ29yeVxuICAgICAgICAgICAgaWYgKCBjYXRlZ29yeUlkICYmIGl0ZW0uY2F0ZWdvcnlbJ0BhdHRyaWJ1dGVzJ10uaWQgIT0gY2F0ZWdvcnlJZCkgcmV0dXJuIG51bGw7XG5cbiAgICAgICAgICAgIHJldHVybiB7bmFtZTogaXRlbVsnQGF0dHJpYnV0ZXMnXS5uYW1lLCBleHRlcm5hbElkOiBpdGVtWydAYXR0cmlidXRlcyddLmlkfVxuICAgICAgICB9KTtcblxuICAgICAgICBsaXN0LnNvcnQoX3RoaXMuc29ydEJ5TGFiZWwpO1xuXG4gICAgICAgIHJldHVybiBsaXN0O1xuICAgIH0sXG4gICAgZ2V0Q29udGVudCAoIGZpbHRlcikge1xuICAgICAgICBsZXQgZGVmZXJyZWQgPSBqUXVlcnkuRGVmZXJyZWQoKTtcblxuICAgICAgICAkLmFqYXgoe1xuICAgICAgICAgICAgdXJsOiBlbnZob3N0dXJsICsgXCJidXkvc2VhcmNoXCIsXG4gICAgICAgICAgICB0eXBlOiBcIlBPU1RcIixcbiAgICAgICAgICAgIGRhdGEgOiBmaWx0ZXIsXG4gICAgICAgICAgICBzdWNjZXNzOiBmdW5jdGlvbiAocmVzcG9uc2UpIHtcbiAgICAgICAgICAgICAgICBkZWZlcnJlZC5yZXNvbHZlKHJlc3BvbnNlKTtcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBlcnJvciA6IGZ1bmN0aW9uIChkYXRhLCBzdGF0dXMpIHtcbiAgICAgICAgICAgICAgICBkZWZlcnJlZC5yZWplY3Qoe1xuICAgICAgICAgICAgICAgICAgICBkYXRhOiBkYXRhLFxuICAgICAgICAgICAgICAgICAgICBzdGF0dXM6IHN0YXR1c1xuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgfVxuICAgICAgICB9KTtcblxuICAgICAgICByZXR1cm4gZGVmZXJyZWQucHJvbWlzZSgpO1xuICAgIH0sXG4gICAgZ2V0SnNvbkNvbnRlbnQgKCBmaWx0ZXIpIHtcbiAgICAgICAgbGV0IGRlZmVycmVkID0galF1ZXJ5LkRlZmVycmVkKCk7XG5cbiAgICAgICAgJC5hamF4KHtcbiAgICAgICAgICAgIHVybDogZW52aG9zdHVybCArIFwibGlzdGluZ3MvbWFya2V0cGxhY2VcIixcbiAgICAgICAgICAgIHR5cGU6IFwiUE9TVFwiLFxuICAgICAgICAgICAgZGF0YSA6IGZpbHRlcixcbiAgICAgICAgICAgIHN1Y2Nlc3M6IGZ1bmN0aW9uIChyZXNwb25zZSkge1xuICAgICAgICAgICAgICAgIGRlZmVycmVkLnJlc29sdmUocmVzcG9uc2UpO1xuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIGVycm9yIDogZnVuY3Rpb24gKGRhdGEsIHN0YXR1cykge1xuICAgICAgICAgICAgICAgIGRlZmVycmVkLnJlamVjdCh7XG4gICAgICAgICAgICAgICAgICAgIGRhdGE6IGRhdGEsXG4gICAgICAgICAgICAgICAgICAgIHN0YXR1czogc3RhdHVzXG4gICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0pO1xuXG4gICAgICAgIHJldHVybiBkZWZlcnJlZC5wcm9taXNlKCk7XG4gICAgfSxcbiAgICBzYXZlRmlsdGVyICggZmlsdGVyKSB7XG4gICAgICAgIGxldCBkZWZlcnJlZCA9IGpRdWVyeS5EZWZlcnJlZCgpO1xuXG4gICAgICAgICQuYWpheCh7XG4gICAgICAgICAgICB1cmw6IGVudmhvc3R1cmwgKyBcImJ1eS9maWx0ZXIvc2F2ZVwiLFxuICAgICAgICAgICAgdHlwZTogXCJQT1NUXCIsXG4gICAgICAgICAgICBkYXRhIDogZmlsdGVyLFxuICAgICAgICAgICAgc3VjY2VzczogZnVuY3Rpb24gKHJlc3BvbnNlKSB7XG4gICAgICAgICAgICAgICAgZGVmZXJyZWQucmVzb2x2ZShyZXNwb25zZSk7XG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgZXJyb3IgOiBmdW5jdGlvbiAoZGF0YSwgc3RhdHVzKSB7XG4gICAgICAgICAgICAgICAgZGVmZXJyZWQucmVqZWN0KHtcbiAgICAgICAgICAgICAgICAgICAgZGF0YTogZGF0YSxcbiAgICAgICAgICAgICAgICAgICAgc3RhdHVzOiBzdGF0dXNcbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSk7XG5cbiAgICAgICAgcmV0dXJuIGRlZmVycmVkLnByb21pc2UoKTtcbiAgICB9LFxuICAgIGdldENvdW50cmllcyAoKSB7XG4gICAgICAgIGxldCBkZWZlcnJlZCA9IGpRdWVyeS5EZWZlcnJlZCgpO1xuICAgICAgICBsZXQgX3RoaXMgPSB0aGlzO1xuXG4gICAgICAgIGlmICggQ29udGVudEFyZW5hLkRhdGEuQ291bnRyaWVzICYmIENvbnRlbnRBcmVuYS5EYXRhLkNvdW50cmllcy5sZW5ndGggPiAwICl7XG4gICAgICAgICAgICBkZWZlcnJlZC5yZXNvbHZlKENvbnRlbnRBcmVuYS5EYXRhLkNvdW50cmllcyk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAkLmFqYXgoe1xuICAgICAgICAgICAgICAgIHVybDogZW52aG9zdHVybCArIFwiYXBpL3NlYXJjaC9jb3VudHJpZXMvYWxsXCIsXG4gICAgICAgICAgICAgICAgdHlwZTogXCJQT1NUXCIsXG4gICAgICAgICAgICAgICAgLyoqXG4gICAgICAgICAgICAgICAgICogQHBhcmFtIHthcnJheX0gcmVzcG9uc2VcbiAgICAgICAgICAgICAgICAgKi9cbiAgICAgICAgICAgICAgICBzdWNjZXNzOiBmdW5jdGlvbiAocmVzcG9uc2UpIHtcbiAgICAgICAgICAgICAgICAgICAgcmVzcG9uc2Uuc29ydChfdGhpcy5zb3J0QnlMYWJlbCk7XG4gICAgICAgICAgICAgICAgICAgIHJlc3BvbnNlID0gcmVzcG9uc2UubWFwKGM9PntcbiAgICAgICAgICAgICAgICAgICAgICAgIGMucmVnaW9ucyA9IGMucmVnaW9ucy5tYXAocj0+ci5pZCk7XG4gICAgICAgICAgICAgICAgICAgICAgICBjLmV4dGVybmFsSWQgPSBjLmlkO1xuICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGNcblxuICAgICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICAgICAgQ29udGVudEFyZW5hLkRhdGEuQ291bnRyaWVzID0gcmVzcG9uc2U7XG4gICAgICAgICAgICAgICAgICAgIGRlZmVycmVkLnJlc29sdmUocmVzcG9uc2UpO1xuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgZXJyb3IgOiBmdW5jdGlvbiAoZGF0YSwgc3RhdHVzKSB7XG4gICAgICAgICAgICAgICAgICAgIGRlZmVycmVkLnJlamVjdCh7XG4gICAgICAgICAgICAgICAgICAgICAgICBkYXRhOiBkYXRhLFxuICAgICAgICAgICAgICAgICAgICAgICAgc3RhdHVzOiBzdGF0dXNcbiAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSk7XG4gICAgICAgIH1cblxuICAgICAgICByZXR1cm4gZGVmZXJyZWQucHJvbWlzZSgpO1xuICAgIH0sXG4gICAgZ2V0QWN0aXZlU3BvcnRzICgpIHtcbiAgICAgICAgbGV0IGRlZmVycmVkID0galF1ZXJ5LkRlZmVycmVkKCk7XG4gICAgICAgIGxldCBfdGhpcyA9IHRoaXM7XG4gICAgICAgICQuYWpheCh7XG4gICAgICAgICAgICB1cmw6IGVudmhvc3R1cmwgKyBcImFwaS9zZWFyY2gvc3BvcnRzL2FjdGl2ZVwiLFxuICAgICAgICAgICAgdHlwZTogXCJQT1NUXCIsXG4gICAgICAgICAgICAvKipcbiAgICAgICAgICAgICAqIEBwYXJhbSB7YXJyYXl9IHJlc3BvbnNlXG4gICAgICAgICAgICAgKi9cbiAgICAgICAgICAgIHN1Y2Nlc3M6IGZ1bmN0aW9uIChyZXNwb25zZSkge1xuICAgICAgICAgICAgICAgIGRlZmVycmVkLnJlc29sdmUocmVzcG9uc2UpO1xuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIGVycm9yIDogZnVuY3Rpb24gKGRhdGEsIHN0YXR1cykge1xuICAgICAgICAgICAgICAgIGRlZmVycmVkLnJlamVjdCh7XG4gICAgICAgICAgICAgICAgICAgIGRhdGE6IGRhdGEsXG4gICAgICAgICAgICAgICAgICAgIHN0YXR1czogc3RhdHVzXG4gICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0pO1xuXG4gICAgICAgIHJldHVybiBkZWZlcnJlZC5wcm9taXNlKCk7XG4gICAgfSxcbiAgICBnZXRDb3VudHJpZXNGdWxsICgpIHtcbiAgICAgICAgbGV0IGRlZmVycmVkID0galF1ZXJ5LkRlZmVycmVkKCk7XG4gICAgICAgIGxldCBfdGhpcyA9IHRoaXM7XG4gICAgICAgICQuYWpheCh7XG4gICAgICAgICAgICB1cmw6IGVudmhvc3R1cmwgKyBcImFwaS9zZWFyY2gvY291bnRyaWVzL2Z1bGxcIixcbiAgICAgICAgICAgIHR5cGU6IFwiUE9TVFwiLFxuICAgICAgICAgICAgLyoqXG4gICAgICAgICAgICAgKiBAcGFyYW0ge2FycmF5fSByZXNwb25zZVxuICAgICAgICAgICAgICovXG4gICAgICAgICAgICBzdWNjZXNzOiBmdW5jdGlvbiAocmVzcG9uc2UpIHtcbiAgICAgICAgICAgICAgICByZXNwb25zZS5zb3J0KF90aGlzLnNvcnRCeUxhYmVsKTtcbiAgICAgICAgICAgICAgICBkZWZlcnJlZC5yZXNvbHZlKHJlc3BvbnNlKTtcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBlcnJvciA6IGZ1bmN0aW9uIChkYXRhLCBzdGF0dXMpIHtcbiAgICAgICAgICAgICAgICBkZWZlcnJlZC5yZWplY3Qoe1xuICAgICAgICAgICAgICAgICAgICBkYXRhOiBkYXRhLFxuICAgICAgICAgICAgICAgICAgICBzdGF0dXM6IHN0YXR1c1xuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgfVxuICAgICAgICB9KTtcblxuICAgICAgICByZXR1cm4gZGVmZXJyZWQucHJvbWlzZSgpO1xuICAgIH0sXG4gICAgZ2V0VGVycml0b3JpZXMgKCkge1xuICAgICAgICBsZXQgZGVmZXJyZWQgPSBqUXVlcnkuRGVmZXJyZWQoKTtcbiAgICAgICAgbGV0IF90aGlzID0gdGhpcztcbiAgICAgICAgJC5hamF4KHtcbiAgICAgICAgICAgIHVybDogZW52aG9zdHVybCArIFwiYXBpL3NlYXJjaC90ZXJyaXRvcmllc1wiLFxuICAgICAgICAgICAgdHlwZTogXCJQT1NUXCIsXG4gICAgICAgICAgICAvKipcbiAgICAgICAgICAgICAqIEBwYXJhbSB7YXJyYXl9IHJlc3BvbnNlXG4gICAgICAgICAgICAgKi9cbiAgICAgICAgICAgIHN1Y2Nlc3M6IGZ1bmN0aW9uIChyZXNwb25zZSkge1xuICAgICAgICAgICAgICAgIHJlc3BvbnNlLnNvcnQoX3RoaXMuc29ydEJ5TGFiZWwpO1xuICAgICAgICAgICAgICAgIGRlZmVycmVkLnJlc29sdmUocmVzcG9uc2UpO1xuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIGVycm9yIDogZnVuY3Rpb24gKGRhdGEsIHN0YXR1cykge1xuICAgICAgICAgICAgICAgIGRlZmVycmVkLnJlamVjdCh7XG4gICAgICAgICAgICAgICAgICAgIGRhdGE6IGRhdGEsXG4gICAgICAgICAgICAgICAgICAgIHN0YXR1czogc3RhdHVzXG4gICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0pO1xuXG4gICAgICAgIHJldHVybiBkZWZlcnJlZC5wcm9taXNlKCk7XG4gICAgfSxcbiAgICBnZXRSZWdpb25zICgpIHtcbiAgICAgICAgbGV0IGRlZmVycmVkID0galF1ZXJ5LkRlZmVycmVkKCk7XG4gICAgICAgIGxldCBfdGhpcyA9IHRoaXM7XG4gICAgICAgICQuYWpheCh7XG4gICAgICAgICAgICB1cmw6IGVudmhvc3R1cmwgKyBcImFwaS9zZWFyY2gvcmVnaW9uc1wiLFxuICAgICAgICAgICAgdHlwZTogXCJQT1NUXCIsXG4gICAgICAgICAgICAvKipcbiAgICAgICAgICAgICAqIEBwYXJhbSB7YXJyYXl9IHJlc3BvbnNlXG4gICAgICAgICAgICAgKi9cbiAgICAgICAgICAgIHN1Y2Nlc3M6IGZ1bmN0aW9uIChyZXNwb25zZSkge1xuICAgICAgICAgICAgICAgIHJlc3BvbnNlLnNvcnQoX3RoaXMuc29ydEJ5TGFiZWwpO1xuICAgICAgICAgICAgICAgIGRlZmVycmVkLnJlc29sdmUocmVzcG9uc2UpO1xuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIGVycm9yIDogZnVuY3Rpb24gKGRhdGEsIHN0YXR1cykge1xuICAgICAgICAgICAgICAgIGRlZmVycmVkLnJlamVjdCh7XG4gICAgICAgICAgICAgICAgICAgIGRhdGE6IGRhdGEsXG4gICAgICAgICAgICAgICAgICAgIHN0YXR1czogc3RhdHVzXG4gICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0pO1xuXG4gICAgICAgIHJldHVybiBkZWZlcnJlZC5wcm9taXNlKCk7XG4gICAgfSxcbiAgICBnZXRSaWdodHMgKHJpZ2h0c1BhY2thZ2UsIGdyb3VwKSB7XG4gICAgICAgIGxldCBkZWZlcnJlZCA9IGpRdWVyeS5EZWZlcnJlZCgpO1xuICAgICAgICBsZXQgX3RoaXMgPSB0aGlzO1xuICAgICAgICAkLmFqYXgoe1xuICAgICAgICAgICAgdXJsOiBlbnZob3N0dXJsICsgXCJhcGkvc2VhcmNoL3JpZ2h0c1wiLFxuICAgICAgICAgICAgdHlwZTogXCJQT1NUXCIsXG4gICAgICAgICAgICBkYXRhIDoge1xuICAgICAgICAgICAgICAgIHJpZ2h0c1BhY2thZ2U6IHJpZ2h0c1BhY2thZ2UsXG4gICAgICAgICAgICAgICAgZ3JvdXA6IGdyb3VwXG4gICAgICAgICAgICB9LFxuXG4gICAgICAgICAgICAvKipcbiAgICAgICAgICAgICAqIEBwYXJhbSB7YXJyYXl9IHJlc3BvbnNlXG4gICAgICAgICAgICAgKi9cbiAgICAgICAgICAgIHN1Y2Nlc3M6IGZ1bmN0aW9uIChyZXNwb25zZSkge1xuICAgICAgICAgICAgICAgIGRlZmVycmVkLnJlc29sdmUocmVzcG9uc2UpO1xuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIGVycm9yIDogZnVuY3Rpb24gKGRhdGEsIHN0YXR1cykge1xuICAgICAgICAgICAgICAgIGRlZmVycmVkLnJlamVjdCh7XG4gICAgICAgICAgICAgICAgICAgIGRhdGE6IGRhdGEsXG4gICAgICAgICAgICAgICAgICAgIHN0YXR1czogc3RhdHVzXG4gICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0pO1xuXG4gICAgICAgIHJldHVybiBkZWZlcnJlZC5wcm9taXNlKCk7XG4gICAgfSxcbiAgICBnZXRSaWdodHNQYWNrYWdlIChyaWdodHNQYWNrYWdlLCBncm91cCkge1xuICAgICAgICBsZXQgZGVmZXJyZWQgPSBqUXVlcnkuRGVmZXJyZWQoKTtcbiAgICAgICAgbGV0IF90aGlzID0gdGhpcztcbiAgICAgICAgJC5hamF4KHtcbiAgICAgICAgICAgIHVybDogZW52aG9zdHVybCArIFwiYXBpL3NlYXJjaC9yaWdodHMtcGFja2FnZVwiLFxuICAgICAgICAgICAgdHlwZTogXCJQT1NUXCIsXG4gICAgICAgICAgICBkYXRhIDoge1xuICAgICAgICAgICAgICAgIHJpZ2h0c1BhY2thZ2U6IHJpZ2h0c1BhY2thZ2UsXG4gICAgICAgICAgICAgICAgZ3JvdXA6IGdyb3VwXG4gICAgICAgICAgICB9LFxuXG4gICAgICAgICAgICAvKipcbiAgICAgICAgICAgICAqIEBwYXJhbSB7YXJyYXl9IHJlc3BvbnNlXG4gICAgICAgICAgICAgKi9cbiAgICAgICAgICAgIHN1Y2Nlc3M6IGZ1bmN0aW9uIChyZXNwb25zZSkge1xuICAgICAgICAgICAgICAgIGRlZmVycmVkLnJlc29sdmUocmVzcG9uc2UpO1xuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIGVycm9yIDogZnVuY3Rpb24gKGRhdGEsIHN0YXR1cykge1xuICAgICAgICAgICAgICAgIGRlZmVycmVkLnJlamVjdCh7XG4gICAgICAgICAgICAgICAgICAgIGRhdGE6IGRhdGEsXG4gICAgICAgICAgICAgICAgICAgIHN0YXR1czogc3RhdHVzXG4gICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0pO1xuXG4gICAgICAgIHJldHVybiBkZWZlcnJlZC5wcm9taXNlKCk7XG4gICAgfSxcbiAgICBnZXRTcG9ydHMgKCkge1xuICAgICAgICBsZXQgZGVmZXJyZWQgPSBqUXVlcnkuRGVmZXJyZWQoKTtcbiAgICAgICAgbGV0IF90aGlzID0gdGhpcztcbiAgICAgICAgJC5hamF4KHtcbiAgICAgICAgICAgIHVybDogZXh0ZXJuYWxBcGlVcmwgKyBcInYxL2ZlZWQvc3BvcnRzXCIsXG4gICAgICAgICAgICB0eXBlOiBcIkdFVFwiLFxuICAgICAgICAgICAgLyoqXG4gICAgICAgICAgICAgKiBAcGFyYW0ge3tzcG9ydDpvYmplY3R9fSByZXNwb25zZVxuICAgICAgICAgICAgICovXG4gICAgICAgICAgICBzdWNjZXNzOiBmdW5jdGlvbiAocmVzcG9uc2UpIHtcblxuICAgICAgICAgICAgICAgIHZhciBzcG9ydHMgPSBfdGhpcy5wcmVwYXJlTGlzdCggcmVzcG9uc2Uuc3BvcnQpO1xuICAgICAgICAgICAgICAgIGRlZmVycmVkLnJlc29sdmUoc3BvcnRzKTtcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBlcnJvciA6IGZ1bmN0aW9uIChkYXRhLCBzdGF0dXMpIHtcbiAgICAgICAgICAgICAgICBkZWZlcnJlZC5yZWplY3Qoe1xuICAgICAgICAgICAgICAgICAgICBkYXRhOiBkYXRhLFxuICAgICAgICAgICAgICAgICAgICBzdGF0dXM6IHN0YXR1c1xuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgfVxuICAgICAgICB9KTtcblxuICAgICAgICByZXR1cm4gZGVmZXJyZWQucHJvbWlzZSgpO1xuICAgIH0sXG4gICAgZ2V0Q29udGVudERldGFpbHMoIGlkICkge1xuICAgICAgICB2YXIgZGVmZXJyZWQgPSBqUXVlcnkuRGVmZXJyZWQoKSxcbiAgICAgICAgICAgIF90aGlzID0gdGhpcztcblxuICAgICAgICAkLmFqYXgoe1xuICAgICAgICAgICAgdXJsOiBlbnZob3N0dXJsICsgXCJjb250ZW50L2RldGFpbHMvXCIsXG4gICAgICAgICAgICB0eXBlOiBcIlBPU1RcIixcbiAgICAgICAgICAgIGRhdGE6IHtpZCA6IGlkfSxcbiAgICAgICAgICAgIHN1Y2Nlc3M6IGZ1bmN0aW9uIChyZXNwb25zZSkge1xuICAgICAgICAgICAgICAgIGRlZmVycmVkLnJlc29sdmUocmVzcG9uc2UpO1xuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIGVycm9yIDogZnVuY3Rpb24gKGRhdGEsIHN0YXR1cykge1xuICAgICAgICAgICAgICAgIGRlZmVycmVkLnJlamVjdCh7XG4gICAgICAgICAgICAgICAgICAgIGRhdGE6IGRhdGEsXG4gICAgICAgICAgICAgICAgICAgIHN0YXR1czogc3RhdHVzXG4gICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0pO1xuXG4gICAgICAgIHJldHVybiBkZWZlcnJlZC5wcm9taXNlKCk7XG4gICAgfSxcbiAgICBnZXRQZW5kaW5nTGlzdGluZ3MoIGlkICkge1xuICAgICAgICB2YXIgZGVmZXJyZWQgPSBqUXVlcnkuRGVmZXJyZWQoKSxcbiAgICAgICAgICAgIF90aGlzID0gdGhpcztcblxuICAgICAgICAkLmFqYXgoe1xuICAgICAgICAgICAgdXJsOiBlbnZob3N0dXJsICsgXCJjb250ZW50L3BlbmRpbmctbGlzdGluZ3MvXCIsXG4gICAgICAgICAgICB0eXBlOiBcIlBPU1RcIixcbiAgICAgICAgICAgIGRhdGE6IHtpZCA6IGlkfSxcbiAgICAgICAgICAgIHN1Y2Nlc3M6IGZ1bmN0aW9uIChyZXNwb25zZSkge1xuICAgICAgICAgICAgICAgIGRlZmVycmVkLnJlc29sdmUocmVzcG9uc2UpO1xuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIGVycm9yIDogZnVuY3Rpb24gKGRhdGEsIHN0YXR1cykge1xuICAgICAgICAgICAgICAgIGRlZmVycmVkLnJlamVjdCh7XG4gICAgICAgICAgICAgICAgICAgIGRhdGE6IGRhdGEsXG4gICAgICAgICAgICAgICAgICAgIHN0YXR1czogc3RhdHVzXG4gICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0pO1xuXG4gICAgICAgIHJldHVybiBkZWZlcnJlZC5wcm9taXNlKCk7XG4gICAgfSxcbiAgICBnZXRDYXRlZ29yaWVzICggc3BvcnRJZCApIHtcbiAgICAgICAgdmFyIGRlZmVycmVkID0galF1ZXJ5LkRlZmVycmVkKCksXG4gICAgICAgICAgICBfdGhpcyA9IHRoaXMsXG4gICAgICAgICAgICBsaXN0ID0gW10sXG4gICAgICAgICAgICBjYXRzID0gW107XG5cbiAgICAgICAgX3RoaXMuZ2V0VG91cm5hbWVudHMoc3BvcnRJZCkuZG9uZShmdW5jdGlvbiAoKSB7XG5cbiAgICAgICAgICAgIGlmICggISBfX2FwaVN0b3JlLnRvdXJuYW1lbnRzW3Nwb3J0SWRdICkge1xuICAgICAgICAgICAgICAgIGRlZmVycmVkLnJlc29sdmUoIFtdICk7XG4gICAgICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICBsaXN0ID0gJC5tYXAoIF9fYXBpU3RvcmUudG91cm5hbWVudHNbc3BvcnRJZF0udG91cm5hbWVudCAsIGZ1bmN0aW9uIChpdGVtKSB7XG5cbiAgICAgICAgICAgICAgICBsZXQgaWQgPSBpdGVtLmNhdGVnb3J5WydAYXR0cmlidXRlcyddLmlkO1xuXG4gICAgICAgICAgICAgICAgaWYgKCBjYXRzLmluZGV4T2YoaWQpICE9PSAtMSApIHtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIG51bGw7XG4gICAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgY2F0cy5wdXNoKCBpZCApO1xuICAgICAgICAgICAgICAgICAgICByZXR1cm4gaXRlbS5jYXRlZ29yeTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9KTtcblxuICAgICAgICAgICAgZGVmZXJyZWQucmVzb2x2ZShfdGhpcy5wcmVwYXJlTGlzdChsaXN0KSApO1xuICAgICAgICB9KTtcblxuXG4gICAgICAgIHJldHVybiBkZWZlcnJlZC5wcm9taXNlKCk7XG4gICAgfSxcbiAgICBnZXRUb3VybmFtZW50cyAoIHNwb3J0SWQsIGNhdGVnb3J5SWQgKSB7XG4gICAgICAgIHZhciBkZWZlcnJlZCA9IGpRdWVyeS5EZWZlcnJlZCgpLFxuICAgICAgICAgICAgX3RoaXMgPSB0aGlzO1xuXG4gICAgICAgIGlmICggX19hcGlTdG9yZS50b3VybmFtZW50c1tzcG9ydElkXSAhPT0gdW5kZWZpbmVkICl7XG4gICAgICAgICAgICBkZWZlcnJlZC5yZXNvbHZlKF90aGlzLnByZXBhcmVMaXN0KF9fYXBpU3RvcmUudG91cm5hbWVudHNbc3BvcnRJZF0udG91cm5hbWVudCwgY2F0ZWdvcnlJZCkpO1xuICAgICAgICAgICAgcmV0dXJuIGRlZmVycmVkLnByb21pc2UoKTtcbiAgICAgICAgfVxuXG4gICAgICAgICQuYWpheCh7XG4gICAgICAgICAgICB1cmw6IGV4dGVybmFsQXBpVXJsICsgXCJ2MS9mZWVkL3RvdXJuYW1lbnRzXCIsXG4gICAgICAgICAgICB0eXBlOiBcIlBPU1RcIixcbiAgICAgICAgICAgIGRhdGEgOiB7IGlkIDogc3BvcnRJZCB9LFxuICAgICAgICAgICAgLyoqXG4gICAgICAgICAgICAgKiBAcGFyYW0ge3t0b3VybmFtZW50czp7dG91cm5hbWVudDpBcnJheX19fSByZXNwb25zZVxuICAgICAgICAgICAgICovXG4gICAgICAgICAgICBzdWNjZXNzOiBmdW5jdGlvbiAocmVzcG9uc2UpIHtcblxuICAgICAgICAgICAgICAgIC8vIEEgY29tbWVudFxuICAgICAgICAgICAgICAgIGlmICggcmVzcG9uc2UudG91cm5hbWVudHMgPT09IHVuZGVmaW5lZCB8fCByZXNwb25zZS50b3VybmFtZW50cy50b3VybmFtZW50ID09PSB1bmRlZmluZWQgKSB7XG4gICAgICAgICAgICAgICAgICAgIGRlZmVycmVkLnJlc29sdmUoW10pO1xuICAgICAgICAgICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgICAgX19hcGlTdG9yZS50b3VybmFtZW50c1tzcG9ydElkXSA9IHJlc3BvbnNlLnRvdXJuYW1lbnRzO1xuICAgICAgICAgICAgICAgIGRlZmVycmVkLnJlc29sdmUoX3RoaXMucHJlcGFyZUxpc3QocmVzcG9uc2UudG91cm5hbWVudHMudG91cm5hbWVudCwgY2F0ZWdvcnlJZCkpO1xuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIGVycm9yIDogZnVuY3Rpb24gKGRhdGEsIHN0YXR1cyApIHtcbiAgICAgICAgICAgICAgICBkZWZlcnJlZC5yZWplY3Qoe1xuICAgICAgICAgICAgICAgICAgICBkYXRhOiBkYXRhLFxuICAgICAgICAgICAgICAgICAgICBzdGF0dXM6IHN0YXR1c1xuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgfVxuICAgICAgICB9KTtcbiAgICAgICAgcmV0dXJuIGRlZmVycmVkLnByb21pc2UoKTtcbiAgICB9LFxuICAgIGdldFNlYXNvbnMgKCB0b3VybmFtZW50SWQgKSB7XG4gICAgICAgIHZhciBkZWZlcnJlZCA9IGpRdWVyeS5EZWZlcnJlZCgpLFxuICAgICAgICAgICAgX3RoaXMgPSB0aGlzO1xuXG4gICAgICAgICQuYWpheCh7XG4gICAgICAgICAgICB1cmw6IGV4dGVybmFsQXBpVXJsICsgXCJ2MS9mZWVkL3NlYXNvbnNcIixcbiAgICAgICAgICAgIHR5cGU6IFwiUE9TVFwiLFxuICAgICAgICAgICAgZGF0YSA6IHsgaWQgOiB0b3VybmFtZW50SWQgfSxcbiAgICAgICAgICAgIC8qKlxuICAgICAgICAgICAgICogQHBhcmFtIHt7dG91cm5hbWVudHM6e3RvdXJuYW1lbnQ6QXJyYXl9fX0gcmVzcG9uc2VcbiAgICAgICAgICAgICAqL1xuICAgICAgICAgICAgc3VjY2VzczogZnVuY3Rpb24gKHJlc3BvbnNlKSB7XG5cbiAgICAgICAgICAgICAgICB2YXIgbGlzdDtcblxuICAgICAgICAgICAgICAgIGlmICggcmVzcG9uc2Uuc2Vhc29ucyA9PT0gdW5kZWZpbmVkIHx8IHJlc3BvbnNlLnNlYXNvbnMuc2Vhc29uID09PSB1bmRlZmluZWQgKSByZXR1cm4gZmFsc2U7XG5cbiAgICAgICAgICAgICAgICBpZiAoICQuaXNBcnJheShyZXNwb25zZS5zZWFzb25zLnNlYXNvbikgKXtcbiAgICAgICAgICAgICAgICAgICAgbGlzdCA9ICQubWFwKHJlc3BvbnNlLnNlYXNvbnMuc2Vhc29uLCBmdW5jdGlvbiAoaXRlbSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBuYW1lOiBpdGVtWydAYXR0cmlidXRlcyddLm5hbWUsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgZXh0ZXJuYWxJZDogaXRlbVsnQGF0dHJpYnV0ZXMnXS5pZCxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBlbmREYXRlOiBpdGVtWydAYXR0cmlidXRlcyddLmVuZF9kYXRlLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHN0YXJ0RGF0ZTogaXRlbVsnQGF0dHJpYnV0ZXMnXS5zdGFydF9kYXRlLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRvdXJuYW1lbnRJZDogaXRlbVsnQGF0dHJpYnV0ZXMnXS50b3VybmFtZW50X2lkLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHllYXI6IGl0ZW1bJ0BhdHRyaWJ1dGVzJ10ueWVhcixcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgfSkucmV2ZXJzZSgpO1xuICAgICAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgIGxpc3QgPSBbe1xuICAgICAgICAgICAgICAgICAgICAgICAgbmFtZTogcmVzcG9uc2Uuc2Vhc29ucy5zZWFzb25bJ0BhdHRyaWJ1dGVzJ10ubmFtZSxcbiAgICAgICAgICAgICAgICAgICAgICAgIGV4dGVybmFsSWQ6IHJlc3BvbnNlLnNlYXNvbnMuc2Vhc29uWydAYXR0cmlidXRlcyddLmlkLFxuICAgICAgICAgICAgICAgICAgICAgICAgZW5kRGF0ZTogcmVzcG9uc2Uuc2Vhc29ucy5zZWFzb25bJ0BhdHRyaWJ1dGVzJ10uZW5kX2RhdGUsXG4gICAgICAgICAgICAgICAgICAgICAgICBzdGFydERhdGU6IHJlc3BvbnNlLnNlYXNvbnMuc2Vhc29uWydAYXR0cmlidXRlcyddLnN0YXJ0X2RhdGUsXG4gICAgICAgICAgICAgICAgICAgICAgICB0b3VybmFtZW50SWQ6IHJlc3BvbnNlLnNlYXNvbnMuc2Vhc29uWydAYXR0cmlidXRlcyddLnRvdXJuYW1lbnRfaWQsXG4gICAgICAgICAgICAgICAgICAgICAgICB5ZWFyOiByZXNwb25zZS5zZWFzb25zLnNlYXNvblsnQGF0dHJpYnV0ZXMnXS55ZWFyLFxuICAgICAgICAgICAgICAgICAgICB9XVxuICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICAgIGRlZmVycmVkLnJlc29sdmUobGlzdCk7XG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgZXJyb3IgOiBmdW5jdGlvbiAoZGF0YSwgc3RhdHVzICkge1xuICAgICAgICAgICAgICAgIGRlZmVycmVkLnJlamVjdCh7XG4gICAgICAgICAgICAgICAgICAgIGRhdGE6IGRhdGEsXG4gICAgICAgICAgICAgICAgICAgIHN0YXR1czogc3RhdHVzXG4gICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0pO1xuICAgICAgICByZXR1cm4gZGVmZXJyZWQucHJvbWlzZSgpO1xuICAgIH0sXG4gICAgZ2V0U2NoZWR1bGUgKCBzZWFzb25JZCApIHtcbiAgICAgICAgdmFyIGRlZmVycmVkID0galF1ZXJ5LkRlZmVycmVkKCksXG4gICAgICAgICAgICBfdGhpcyA9IHRoaXM7XG5cbiAgICAgICAgJC5hamF4KHtcbiAgICAgICAgICAgIHVybDogZXh0ZXJuYWxBcGlVcmwgKyBcInYxL2ZlZWQvc2NoZWR1bGVzXCIsXG4gICAgICAgICAgICB0eXBlOiBcIlBPU1RcIixcbiAgICAgICAgICAgIGRhdGEgOiB7IGlkIDogc2Vhc29uSWQgfSxcbiAgICAgICAgICAgIC8qKlxuICAgICAgICAgICAgICogQHBhcmFtIHt7dG91cm5hbWVudHM6e3RvdXJuYW1lbnQ6QXJyYXl9fX0gcmVzcG9uc2VcbiAgICAgICAgICAgICAqL1xuICAgICAgICAgICAgc3VjY2VzczogZnVuY3Rpb24gKHJlc3BvbnNlKSB7XG5cbiAgICAgICAgICAgICAgICBsZXQgbGlzdCA9IHt9O1xuXG4gICAgICAgICAgICAgICAgaWYgKCByZXNwb25zZS5zcG9ydF9ldmVudHMgPT09IHVuZGVmaW5lZCB8fCByZXNwb25zZS5zcG9ydF9ldmVudHMuc3BvcnRfZXZlbnQgPT09IHVuZGVmaW5lZCApIHJldHVybiBmYWxzZTtcblxuICAgICAgICAgICAgICAgIHJlc3BvbnNlLnNwb3J0X2V2ZW50cy5zcG9ydF9ldmVudC5mb3JFYWNoKCAoaXRlbSkgPT4ge1xuXG4gICAgICAgICAgICAgICAgICAgIGxldCByb3VuZCAgPSAoaXRlbS50b3VybmFtZW50X3JvdW5kKSA/IGl0ZW0udG91cm5hbWVudF9yb3VuZFsnQGF0dHJpYnV0ZXMnXSA6IG51bGw7XG5cbiAgICAgICAgICAgICAgICAgICAgaWYgKCFyb3VuZCkgcmV0dXJuO1xuXG4gICAgICAgICAgICAgICAgICAgIGxldCBuYW1lID0gKHJvdW5kLm51bWJlcikgPyBcInJvdW5kX1wiICsgcm91bmQubnVtYmVyIDogcm91bmQubmFtZTtcblxuICAgICAgICAgICAgICAgICAgICBpZiAoICFsaXN0W25hbWVdICkgbGlzdFtuYW1lXSA9IHt9O1xuXG4gICAgICAgICAgICAgICAgICAgIGlmICggIWxpc3RbbmFtZV0ubWF0Y2hlcyApIGxpc3RbbmFtZV0ubWF0Y2hlcyA9IG5ldyBNYXAoKTtcblxuICAgICAgICAgICAgICAgICAgICBsaXN0W25hbWVdLm1hdGNoZXMuc2V0KGl0ZW1bJ0BhdHRyaWJ1dGVzJ10uaWQse1xuICAgICAgICAgICAgICAgICAgICAgICAgc2NoZWR1bGVkOiBpdGVtWydAYXR0cmlidXRlcyddLnNjaGVkdWxlZCxcbiAgICAgICAgICAgICAgICAgICAgICAgIGV4dGVybmFsSWQ6IGl0ZW1bJ0BhdHRyaWJ1dGVzJ10uaWQsXG4gICAgICAgICAgICAgICAgICAgICAgICBzdGF0dXM6IGl0ZW1bJ0BhdHRyaWJ1dGVzJ10uc3RhdHVzLFxuICAgICAgICAgICAgICAgICAgICAgICAgdG91cm5hbWVudFJvdW5kIDogcm91bmQsXG4gICAgICAgICAgICAgICAgICAgICAgICBjb21wZXRpdG9ycyA6IChpdGVtLmNvbXBldGl0b3JzKSA/IGl0ZW0uY29tcGV0aXRvcnMuY29tcGV0aXRvci5tYXAoKCBjb21wZXRpdG9yKT0+eyByZXR1cm4gY29tcGV0aXRvclsnQGF0dHJpYnV0ZXMnXSAgfSkgIDogbnVsbFxuICAgICAgICAgICAgICAgICAgICB9KTtcblxuICAgICAgICAgICAgICAgIH0pO1xuXG4gICAgICAgICAgICAgICAgZGVmZXJyZWQucmVzb2x2ZShsaXN0KTtcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBlcnJvciA6IGZ1bmN0aW9uIChkYXRhLCBzdGF0dXMgKSB7XG4gICAgICAgICAgICAgICAgZGVmZXJyZWQucmVqZWN0KHtcbiAgICAgICAgICAgICAgICAgICAgZGF0YTogZGF0YSxcbiAgICAgICAgICAgICAgICAgICAgc3RhdHVzOiBzdGF0dXNcbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSk7XG4gICAgICAgIHJldHVybiBkZWZlcnJlZC5wcm9taXNlKCk7XG4gICAgfSxcbiAgICBzZWFyY2hDb21wZXRpdGlvbihyZXF1ZXN0KSB7XG5cbiAgICAgICAgbGV0IGRlZmVycmVkID0galF1ZXJ5LkRlZmVycmVkKCk7XG4gICAgICAgIGxldCBfdGhpcyA9IHRoaXM7XG5cbiAgICAgICAgJC5hamF4KHtcbiAgICAgICAgICAgIHVybDogZW52aG9zdHVybCArICdhcGkvc2VhcmNoL3RvdXJuYW1lbnQnLFxuICAgICAgICAgICAgZGF0YToge1xuICAgICAgICAgICAgICAgIFwiY29udGVudFwiOiByZXF1ZXN0XG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgdHJhZGl0aW9uYWw6IHRydWUsXG4gICAgICAgICAgICB0eXBlOiBcIlBPU1RcIixcbiAgICAgICAgICAgIGRhdGFUeXBlOiBcImpzb25cIixcbiAgICAgICAgICAgIHN1Y2Nlc3M6IGZ1bmN0aW9uIChkYXRhKSB7XG5cbiAgICAgICAgICAgICAgICBkYXRhLmZpbHRlcihpdGVtID0+ICEhaXRlbS5zcG9ydCkuc29ydChfdGhpcy5zb3J0QnlTcG9ydCk7XG5cbiAgICAgICAgICAgICAgICBkZWZlcnJlZC5yZXNvbHZlKGRhdGEpO1xuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIGVycm9yIDogZnVuY3Rpb24gKGRhdGEsIHN0YXR1cyApIHtcbiAgICAgICAgICAgICAgICBkZWZlcnJlZC5yZWplY3Qoe1xuICAgICAgICAgICAgICAgICAgICBkYXRhOiBkYXRhLFxuICAgICAgICAgICAgICAgICAgICBzdGF0dXM6IHN0YXR1c1xuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgfVxuICAgICAgICB9KTtcbiAgICAgICAgcmV0dXJuIGRlZmVycmVkLnByb21pc2UoKTtcbiAgICB9LFxuICAgIHdhdGNobGlzdCggaWQgKSB7XG4gICAgICAgIHZhciBkZWZlcnJlZCA9IGpRdWVyeS5EZWZlcnJlZCgpLFxuICAgICAgICAgICAgX3RoaXMgPSB0aGlzO1xuXG4gICAgICAgICQuYWpheCh7XG4gICAgICAgICAgICB1cmw6IGVudmhvc3R1cmwgKyBcImFwaS93YXRjaGxpc3QvYWRkXCIsXG4gICAgICAgICAgICB0eXBlOiBcIlBPU1RcIixcbiAgICAgICAgICAgIGRhdGE6IHtpZCA6IGlkfSxcbiAgICAgICAgICAgIHN1Y2Nlc3M6IGZ1bmN0aW9uIChyZXNwb25zZSkge1xuICAgICAgICAgICAgICAgIGRlZmVycmVkLnJlc29sdmUocmVzcG9uc2UpO1xuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIGVycm9yIDogZnVuY3Rpb24gKGRhdGEsIHN0YXR1cykge1xuICAgICAgICAgICAgICAgIGRlZmVycmVkLnJlamVjdCh7XG4gICAgICAgICAgICAgICAgICAgIGRhdGE6IGRhdGEsXG4gICAgICAgICAgICAgICAgICAgIHN0YXR1czogc3RhdHVzXG4gICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0pO1xuXG4gICAgICAgIHJldHVybiBkZWZlcnJlZC5wcm9taXNlKCk7XG4gICAgfSxcbiAgICBnZXROb3RpZmljYXRpb25zKCkge1xuICAgICAgICByZXR1cm4gYXhpb3MuZ2V0KGAke2Vudmhvc3R1cmx9YXBpL25vdGlmaWNhdGlvbnMvYCk7XG4gICAgfSxcbiAgICBtYXJrTm90aWZpY2F0aW9uQXNTZWVuKGlkKSB7XG4gICAgICAgIHJldHVybiBheGlvcy5wb3N0KGAke2Vudmhvc3R1cmx9YXBpL25vdGlmaWNhdGlvbnMvc2VlbmAsIHtcbiAgICAgICAgICAgIGlkXG4gICAgICAgIH0pO1xuICAgIH0sXG59O1xuXG5cblxuXG5cbi8vIFdFQlBBQ0sgRk9PVEVSIC8vXG4vLyAuL3NyYy9BcHBCdW5kbGUvUmVzb3VyY2VzL3B1YmxpYy9qYXZhc2NyaXB0L2NhL2NhLmFwaS5qcyIsIi8qKlxuICogQ3JlYXRlZCBieSBKdWFuQ3J1eiBvbiA0LzEvMjAxOC5cbiAqL1xuXG53aW5kb3cuQ29udGVudEFyZW5hID0gd2luZG93LkNvbnRlbnRBcmVuYSB8fCB7fTtcblxuQ29udGVudEFyZW5hLkRhdGEgPSBDb250ZW50QXJlbmEuRGF0YSB8fCB7fTtcbkNvbnRlbnRBcmVuYS5MYW5ndWFnZXMgPSBDb250ZW50QXJlbmEuTGFuZ3VhZ2VzIHx8IHt9O1xuXG5Db250ZW50QXJlbmEuRGF0YS5Ub3BTcG9ydHMgPSBbXG4gICAgeyBuYW1lIDogXCJTb2NjZXJcIiwgZXh0ZXJuYWxJZDogXCJzcjpzcG9ydDoxXCJ9LFxuICAgIHsgbmFtZSA6IFwiQmFza2V0YmFsbFwiLCBleHRlcm5hbElkOiBcInNyOnNwb3J0OjJcIn0sXG4gICAgeyBuYW1lIDogXCJCYXNlYmFsbFwiLCBleHRlcm5hbElkOiBcInNyOnNwb3J0OjNcIn0sXG4gICAgeyBuYW1lIDogXCJUZW5uaXNcIiwgZXh0ZXJuYWxJZDogXCJzcjpzcG9ydDo1XCJ9LFxuICAgIHsgbmFtZSA6IFwiQ3JpY2tldFwiLCBleHRlcm5hbElkOiBcInNyOnNwb3J0OjIxXCJ9LFxuICAgIHsgbmFtZSA6IFwiRmllbGQgSG9ja2V5XCIsIGV4dGVybmFsSWQ6IFwic3I6c3BvcnQ6MjRcIn0sXG4gICAgeyBuYW1lIDogXCJWb2xsZXliYWxsXCIsIGV4dGVybmFsSWQ6IFwic3I6c3BvcnQ6MjNcIn0sXG4gICAgeyBuYW1lIDogXCJUYWJsZSBUZW5uaXNcIiwgZXh0ZXJuYWxJZDogXCJzcjpzcG9ydDoyMFwifSxcbiAgICB7IG5hbWUgOiBcIkdvbGZcIiwgZXh0ZXJuYWxJZDogXCJzcjpzcG9ydDo5XCJ9LFxuICAgIHsgbmFtZSA6IFwiQW1lcmljYW4gRm9vdGJhbGxcIiwgZXh0ZXJuYWxJZDogXCJzcjpzcG9ydDoxNlwifSxcbiAgICB7IG5hbWUgOiBcIkhhbmRiYWxsXCIsIGV4dGVybmFsSWQ6IFwic3I6c3BvcnQ6NlwifVxuXTtcblxuQ29udGVudEFyZW5hLkRhdGEuRnVsbFNwb3J0cyA9IFtdO1xuQ29udGVudEFyZW5hLkRhdGEuQWN0aXZlU3BvcnRzID0gW107XG5Db250ZW50QXJlbmEuRGF0YS5Db3VudHJpZXMgPSBbXTtcbkNvbnRlbnRBcmVuYS5EYXRhLlRlcnJpdG9yaWVzID0gW107XG5Db250ZW50QXJlbmEuRGF0YS5SZWdpb25zID0gW107XG5Db250ZW50QXJlbmEuTGFuZ3VhZ2VzLlNob3J0ID0ge1xuICAgIFwibWRyXCI6IFwiTWFuZGFyaW5cIixcbiAgICBcImVzXCI6IFwiU3BhbmlzaFwiLFxuICAgIFwiZW5cIjogXCJFbmdsaXNoXCIsXG4gICAgXCJoaVwiOiBcIkhpbmRpXCIsXG4gICAgXCJhclwiOiBcIkFyYWJpY1wiLFxuICAgIFwicHRcIjogXCJQb3J0dWd1ZXNlXCIsXG4gICAgXCJiblwiOiBcIkJlbmdhbGlcIixcbiAgICBcInJ1XCI6IFwiUnVzc2lhblwiLFxuICAgIFwiamFcIjogXCJKYXBhbmVzZVwiLFxuICAgIFwianZcIjogXCJKYXZhbmVzZVwiLFxuICAgIFwiZGVcIjogXCJHZXJtYW5cIixcbiAgICBcImFsbFwiIDogXCJTaG93IEFsbFwiXG59O1xuXG5Db250ZW50QXJlbmEuTGFuZ3VhZ2VzLkxvbmcgPSB7XG4gICAgXCJhYVwiOiBcIkFmYXJcIixcbiAgICBcImFmXCI6IFwiQWZyaWthYW5zXCIsXG4gICAgXCJhaW5cIjogXCJBaW51XCIsXG4gICAgXCJha3pcIjogXCJBbGFiYW1hXCIsXG4gICAgXCJzcVwiOiBcIkFsYmFuaWFuXCIsXG4gICAgXCJhbGVcIjogXCJBbGV1dFwiLFxuICAgIFwiYXJxXCI6IFwiQWxnZXJpYW4gQXJhYmljXCIsXG4gICAgXCJlbl9VU1wiOiBcIkFtZXJpY2FuIEVuZ2xpc2hcIixcbiAgICBcImFzZVwiOiBcIkFtZXJpY2FuIFNpZ24gTGFuZ3VhZ2VcIixcbiAgICBcImFtXCI6IFwiQW1oYXJpY1wiLFxuICAgIFwiZWd5XCI6IFwiQW5jaWVudCBFZ3lwdGlhblwiLFxuICAgIFwiZ3JjXCI6IFwiQW5jaWVudCBHcmVla1wiLFxuICAgIFwiYXJcIjogXCJBcmFiaWNcIixcbiAgICBcImFyY1wiOiBcIkFyYW1haWNcIixcbiAgICBcImFycFwiOiBcIkFyYXBhaG9cIixcbiAgICBcImFyd1wiOiBcIkFyYXdha1wiLFxuICAgIFwiaHlcIjogXCJBcm1lbmlhblwiLFxuICAgIFwiYXNcIjogXCJBc3NhbWVzZVwiLFxuICAgIFwiYXNhXCI6IFwiQXN1XCIsXG4gICAgXCJlbl9BVVwiOiBcIkF1c3RyYWxpYW4gRW5nbGlzaFwiLFxuICAgIFwiZGVfQVRcIjogXCJBdXN0cmlhbiBHZXJtYW5cIixcbiAgICBcImF5XCI6IFwiQXltYXJhXCIsXG4gICAgXCJhelwiOiBcIkF6ZXJiYWlqYW5pXCIsXG4gICAgXCJiYW5cIjogXCJCYWxpbmVzZVwiLFxuICAgIFwiZXVcIjogXCJCYXNxdWVcIixcbiAgICBcImJhclwiOiBcIkJhdmFyaWFuXCIsXG4gICAgXCJiZVwiOiBcIkJlbGFydXNpYW5cIixcbiAgICBcImJuXCI6IFwiQmVuZ2FsaVwiLFxuICAgIFwiYmlrXCI6IFwiQmlrb2xcIixcbiAgICBcImJpblwiOiBcIkJpbmlcIixcbiAgICBcImJzXCI6IFwiQm9zbmlhblwiLFxuICAgIFwiYnJoXCI6IFwiQnJhaHVpXCIsXG4gICAgXCJicmFcIjogXCJCcmFqXCIsXG4gICAgXCJwdF9CUlwiOiBcIkJyYXppbGlhbiBQb3J0dWd1ZXNlXCIsXG4gICAgXCJiclwiOiBcIkJyZXRvblwiLFxuICAgIFwiZW5fR0JcIjogXCJCcml0aXNoIEVuZ2xpc2hcIixcbiAgICBcImJnXCI6IFwiQnVsZ2FyaWFuXCIsXG4gICAgXCJteVwiOiBcIkJ1cm1lc2VcIixcbiAgICBcImZyY1wiOiBcIkNhanVuIEZyZW5jaFwiLFxuICAgIFwiZW5fQ0FcIjogXCJDYW5hZGlhbiBFbmdsaXNoXCIsXG4gICAgXCJmcl9DQVwiOiBcIkNhbmFkaWFuIEZyZW5jaFwiLFxuICAgIFwieXVlXCI6IFwiQ2FudG9uZXNlXCIsXG4gICAgXCJjYXJcIjogXCJDYXJpYlwiLFxuICAgIFwiY2FcIjogXCJDYXRhbGFuXCIsXG4gICAgXCJjYXlcIjogXCJDYXl1Z2FcIixcbiAgICBcImNlYlwiOiBcIkNlYnVhbm9cIixcbiAgICBcInNodVwiOiBcIkNoYWRpYW4gQXJhYmljXCIsXG4gICAgXCJjZVwiOiBcIkNoZWNoZW5cIixcbiAgICBcImNoclwiOiBcIkNoZXJva2VlXCIsXG4gICAgXCJxdWdcIjogXCJDaGltYm9yYXpvIEhpZ2hsYW5kIFF1aWNodWFcIixcbiAgICBcInpoXCI6IFwiQ2hpbmVzZVwiLFxuICAgIFwiY2huXCI6IFwiQ2hpbm9vayBKYXJnb25cIixcbiAgICBcImNocFwiOiBcIkNoaXBld3lhblwiLFxuICAgIFwiY2hvXCI6IFwiQ2hvY3Rhd1wiLFxuICAgIFwiY3VcIjogXCJDaHVyY2ggU2xhdmljXCIsXG4gICAgXCJjdlwiOiBcIkNodXZhc2hcIixcbiAgICBcIm53Y1wiOiBcIkNsYXNzaWNhbCBOZXdhcmlcIixcbiAgICBcInN5Y1wiOiBcIkNsYXNzaWNhbCBTeXJpYWNcIixcbiAgICBcInN3Y1wiOiBcIkNvbmdvIFN3YWhpbGlcIixcbiAgICBcImNvcFwiOiBcIkNvcHRpY1wiLFxuICAgIFwia3dcIjogXCJDb3JuaXNoXCIsXG4gICAgXCJjb1wiOiBcIkNvcnNpY2FuXCIsXG4gICAgXCJjclwiOiBcIkNyZWVcIixcbiAgICBcIm11c1wiOiBcIkNyZWVrXCIsXG4gICAgXCJjcmhcIjogXCJDcmltZWFuIFR1cmtpc2hcIixcbiAgICBcImhyXCI6IFwiQ3JvYXRpYW5cIixcbiAgICBcImNzXCI6IFwiQ3plY2hcIixcbiAgICBcImRha1wiOiBcIkRha290YVwiLFxuICAgIFwiZGFcIjogXCJEYW5pc2hcIixcbiAgICBcImRlbFwiOiBcIkRlbGF3YXJlXCIsXG4gICAgXCJubFwiOiBcIkR1dGNoXCIsXG4gICAgXCJmcnNcIjogXCJFYXN0ZXJuIEZyaXNpYW5cIixcbiAgICBcImFyelwiOiBcIkVneXB0aWFuIEFyYWJpY1wiLFxuICAgIFwiZW5cIjogXCJFbmdsaXNoXCIsXG4gICAgXCJlb1wiOiBcIkVzcGVyYW50b1wiLFxuICAgIFwiZXRcIjogXCJFc3RvbmlhblwiLFxuICAgIFwicHRfUFRcIjogXCJFdXJvcGVhbiBQb3J0dWd1ZXNlXCIsXG4gICAgXCJlc19FU1wiOiBcIkV1cm9wZWFuIFNwYW5pc2hcIixcbiAgICBcImVlXCI6IFwiRXdlXCIsXG4gICAgXCJmYW5cIjogXCJGYW5nXCIsXG4gICAgXCJoaWZcIjogXCJGaWppIEhpbmRpXCIsXG4gICAgXCJmalwiOiBcIkZpamlhblwiLFxuICAgIFwiZmlsXCI6IFwiRmlsaXBpbm9cIixcbiAgICBcImZpXCI6IFwiRmlubmlzaFwiLFxuICAgIFwibmxfQkVcIjogXCJGbGVtaXNoXCIsXG4gICAgXCJmb25cIjogXCJGb25cIixcbiAgICBcImZyXCI6IFwiRnJlbmNoXCIsXG4gICAgXCJnYWFcIjogXCJHYVwiLFxuICAgIFwiZ2FuXCI6IFwiR2FuIENoaW5lc2VcIixcbiAgICBcImthXCI6IFwiR2VvcmdpYW5cIixcbiAgICBcImRlXCI6IFwiR2VybWFuXCIsXG4gICAgXCJnb3RcIjogXCJHb3RoaWNcIixcbiAgICBcImdyYlwiOiBcIkdyZWJvXCIsXG4gICAgXCJlbFwiOiBcIkdyZWVrXCIsXG4gICAgXCJnblwiOiBcIkd1YXJhbmlcIixcbiAgICBcImd1XCI6IFwiR3VqYXJhdGlcIixcbiAgICBcImd1elwiOiBcIkd1c2lpXCIsXG4gICAgXCJoYWlcIjogXCJIYWlkYVwiLFxuICAgIFwiaHRcIjogXCJIYWl0aWFuXCIsXG4gICAgXCJoYWtcIjogXCJIYWtrYSBDaGluZXNlXCIsXG4gICAgXCJoYVwiOiBcIkhhdXNhXCIsXG4gICAgXCJoYXdcIjogXCJIYXdhaWlhblwiLFxuICAgIFwiaGVcIjogXCJIZWJyZXdcIixcbiAgICBcImh6XCI6IFwiSGVyZXJvXCIsXG4gICAgXCJoaVwiOiBcIkhpbmRpXCIsXG4gICAgXCJoaXRcIjogXCJIaXR0aXRlXCIsXG4gICAgXCJobW5cIjogXCJIbW9uZ1wiLFxuICAgIFwiaHVcIjogXCJIdW5nYXJpYW5cIixcbiAgICBcImlzXCI6IFwiSWNlbGFuZGljXCIsXG4gICAgXCJpb1wiOiBcIklkb1wiLFxuICAgIFwiaWdcIjogXCJJZ2JvXCIsXG4gICAgXCJpdVwiOiBcIkludWt0aXR1dFwiLFxuICAgIFwiaWtcIjogXCJJbnVwaWFxXCIsXG4gICAgXCJnYVwiOiBcIklyaXNoXCIsXG4gICAgXCJpdFwiOiBcIkl0YWxpYW5cIixcbiAgICBcImphbVwiOiBcIkphbWFpY2FuIENyZW9sZSBFbmdsaXNoXCIsXG4gICAgXCJqYVwiOiBcIkphcGFuZXNlXCIsXG4gICAgXCJqdlwiOiBcIkphdmFuZXNlXCIsXG4gICAgXCJrYWpcIjogXCJKanVcIixcbiAgICBcImR5b1wiOiBcIkpvbGEtRm9ueWlcIixcbiAgICBcInhhbFwiOiBcIkthbG15a1wiLFxuICAgIFwia2FtXCI6IFwiS2FtYmFcIixcbiAgICBcImtibFwiOiBcIkthbmVtYnVcIixcbiAgICBcImtuXCI6IFwiS2FubmFkYVwiLFxuICAgIFwia3JcIjogXCJLYW51cmlcIixcbiAgICBcImthYVwiOiBcIkthcmEtS2FscGFrXCIsXG4gICAgXCJrcmNcIjogXCJLYXJhY2hheS1CYWxrYXJcIixcbiAgICBcImtybFwiOiBcIkthcmVsaWFuXCIsXG4gICAgXCJrc1wiOiBcIkthc2htaXJpXCIsXG4gICAgXCJjc2JcIjogXCJLYXNodWJpYW5cIixcbiAgICBcImthd1wiOiBcIkthd2lcIixcbiAgICBcImtrXCI6IFwiS2F6YWtoXCIsXG4gICAgXCJrZW5cIjogXCJLZW55YW5nXCIsXG4gICAgXCJraGFcIjogXCJLaGFzaVwiLFxuICAgIFwia21cIjogXCJLaG1lclwiLFxuICAgIFwia2hvXCI6IFwiS2hvdGFuZXNlXCIsXG4gICAgXCJraHdcIjogXCJLaG93YXJcIixcbiAgICBcImtpXCI6IFwiS2lrdXl1XCIsXG4gICAgXCJrbWJcIjogXCJLaW1idW5kdVwiLFxuICAgIFwia3JqXCI6IFwiS2luYXJheS1hXCIsXG4gICAgXCJyd1wiOiBcIktpbnlhcndhbmRhXCIsXG4gICAgXCJraXVcIjogXCJLaXJtYW5qa2lcIixcbiAgICBcInRsaFwiOiBcIktsaW5nb25cIixcbiAgICBcImJrbVwiOiBcIktvbVwiLFxuICAgIFwia3ZcIjogXCJLb21pXCIsXG4gICAgXCJrb2lcIjogXCJLb21pLVBlcm15YWtcIixcbiAgICBcImtnXCI6IFwiS29uZ29cIixcbiAgICBcImtva1wiOiBcIktvbmthbmlcIixcbiAgICBcImtvXCI6IFwiS29yZWFuXCIsXG4gICAgXCJrZm9cIjogXCJLb3JvXCIsXG4gICAgXCJrb3NcIjogXCJLb3NyYWVhblwiLFxuICAgIFwiYXZrXCI6IFwiS290YXZhXCIsXG4gICAgXCJraHFcIjogXCJLb3lyYSBDaGlpbmlcIixcbiAgICBcInNlc1wiOiBcIktveXJhYm9ybyBTZW5uaVwiLFxuICAgIFwia3BlXCI6IFwiS3BlbGxlXCIsXG4gICAgXCJrcmlcIjogXCJLcmlvXCIsXG4gICAgXCJralwiOiBcIkt1YW55YW1hXCIsXG4gICAgXCJrdW1cIjogXCJLdW15a1wiLFxuICAgIFwia3VcIjogXCJLdXJkaXNoXCIsXG4gICAgXCJrcnVcIjogXCJLdXJ1a2hcIixcbiAgICBcImt1dFwiOiBcIkt1dGVuYWlcIixcbiAgICBcIm5tZ1wiOiBcIkt3YXNpb1wiLFxuICAgIFwia3lcIjogXCJLeXJneXpcIixcbiAgICBcInF1Y1wiOiBcIktcXHUwMmJjaWNoZVxcdTAyYmNcIixcbiAgICBcImxhZFwiOiBcIkxhZGlub1wiLFxuICAgIFwibGFoXCI6IFwiTGFobmRhXCIsXG4gICAgXCJsa3RcIjogXCJMYWtvdGFcIixcbiAgICBcImxhbVwiOiBcIkxhbWJhXCIsXG4gICAgXCJsYWdcIjogXCJMYW5naVwiLFxuICAgIFwibG9cIjogXCJMYW9cIixcbiAgICBcImx0Z1wiOiBcIkxhdGdhbGlhblwiLFxuICAgIFwibGFcIjogXCJMYXRpblwiLFxuICAgIFwiZXNfNDE5XCI6IFwiTGF0aW4gQW1lcmljYW4gU3BhbmlzaFwiLFxuICAgIFwibHZcIjogXCJMYXR2aWFuXCIsXG4gICAgXCJsenpcIjogXCJMYXpcIixcbiAgICBcImxlelwiOiBcIkxlemdoaWFuXCIsXG4gICAgXCJsaWpcIjogXCJMaWd1cmlhblwiLFxuICAgIFwibGlcIjogXCJMaW1idXJnaXNoXCIsXG4gICAgXCJsblwiOiBcIkxpbmdhbGFcIixcbiAgICBcImxmblwiOiBcIkxpbmd1YSBGcmFuY2EgTm92YVwiLFxuICAgIFwibHpoXCI6IFwiTGl0ZXJhcnkgQ2hpbmVzZVwiLFxuICAgIFwibHRcIjogXCJMaXRodWFuaWFuXCIsXG4gICAgXCJsaXZcIjogXCJMaXZvbmlhblwiLFxuICAgIFwiamJvXCI6IFwiTG9qYmFuXCIsXG4gICAgXCJsbW9cIjogXCJMb21iYXJkXCIsXG4gICAgXCJuZHNcIjogXCJMb3cgR2VybWFuXCIsXG4gICAgXCJzbGlcIjogXCJMb3dlciBTaWxlc2lhblwiLFxuICAgIFwiZHNiXCI6IFwiTG93ZXIgU29yYmlhblwiLFxuICAgIFwibG96XCI6IFwiTG96aVwiLFxuICAgIFwibHVcIjogXCJMdWJhLUthdGFuZ2FcIixcbiAgICBcImx1YVwiOiBcIkx1YmEtTHVsdWFcIixcbiAgICBcImx1aVwiOiBcIkx1aXNlbm9cIixcbiAgICBcInNtalwiOiBcIkx1bGUgU2FtaVwiLFxuICAgIFwibHVuXCI6IFwiTHVuZGFcIixcbiAgICBcImx1b1wiOiBcIkx1b1wiLFxuICAgIFwibGJcIjogXCJMdXhlbWJvdXJnaXNoXCIsXG4gICAgXCJsdXlcIjogXCJMdXlpYVwiLFxuICAgIFwibWRlXCI6IFwiTWFiYVwiLFxuICAgIFwibWtcIjogXCJNYWNlZG9uaWFuXCIsXG4gICAgXCJqbWNcIjogXCJNYWNoYW1lXCIsXG4gICAgXCJtYWRcIjogXCJNYWR1cmVzZVwiLFxuICAgIFwibWFmXCI6IFwiTWFmYVwiLFxuICAgIFwibWFnXCI6IFwiTWFnYWhpXCIsXG4gICAgXCJ2bWZcIjogXCJNYWluLUZyYW5jb25pYW5cIixcbiAgICBcIm1haVwiOiBcIk1haXRoaWxpXCIsXG4gICAgXCJtYWtcIjogXCJNYWthc2FyXCIsXG4gICAgXCJtZ2hcIjogXCJNYWtodXdhLU1lZXR0b1wiLFxuICAgIFwia2RlXCI6IFwiTWFrb25kZVwiLFxuICAgIFwibWdcIjogXCJNYWxhZ2FzeVwiLFxuICAgIFwibXNcIjogXCJNYWxheVwiLFxuICAgIFwibWxcIjogXCJNYWxheWFsYW1cIixcbiAgICBcIm10XCI6IFwiTWFsdGVzZVwiLFxuICAgIFwibW5jXCI6IFwiTWFuY2h1XCIsXG4gICAgXCJtZHJcIjogXCJNYW5kYXJpblwiLFxuICAgIFwibWFuXCI6IFwiTWFuZGluZ29cIixcbiAgICBcIm1uaVwiOiBcIk1hbmlwdXJpXCIsXG4gICAgXCJndlwiOiBcIk1hbnhcIixcbiAgICBcIm1pXCI6IFwiTWFvcmlcIixcbiAgICBcImFyblwiOiBcIk1hcHVjaGVcIixcbiAgICBcIm1yXCI6IFwiTWFyYXRoaVwiLFxuICAgIFwiY2htXCI6IFwiTWFyaVwiLFxuICAgIFwibWhcIjogXCJNYXJzaGFsbGVzZVwiLFxuICAgIFwibXdyXCI6IFwiTWFyd2FyaVwiLFxuICAgIFwibWFzXCI6IFwiTWFzYWlcIixcbiAgICBcIm16blwiOiBcIk1hemFuZGVyYW5pXCIsXG4gICAgXCJieXZcIjogXCJNZWR1bWJhXCIsXG4gICAgXCJtZW5cIjogXCJNZW5kZVwiLFxuICAgIFwibXd2XCI6IFwiTWVudGF3YWlcIixcbiAgICBcIm1lclwiOiBcIk1lcnVcIixcbiAgICBcIm1nb1wiOiBcIk1ldGFcXHUwMmJjXCIsXG4gICAgXCJlc19NWFwiOiBcIk1leGljYW4gU3BhbmlzaFwiLFxuICAgIFwibWljXCI6IFwiTWljbWFjXCIsXG4gICAgXCJkdW1cIjogXCJNaWRkbGUgRHV0Y2hcIixcbiAgICBcImVubVwiOiBcIk1pZGRsZSBFbmdsaXNoXCIsXG4gICAgXCJmcm1cIjogXCJNaWRkbGUgRnJlbmNoXCIsXG4gICAgXCJnbWhcIjogXCJNaWRkbGUgSGlnaCBHZXJtYW5cIixcbiAgICBcIm1nYVwiOiBcIk1pZGRsZSBJcmlzaFwiLFxuICAgIFwibmFuXCI6IFwiTWluIE5hbiBDaGluZXNlXCIsXG4gICAgXCJtaW5cIjogXCJNaW5hbmdrYWJhdVwiLFxuICAgIFwieG1mXCI6IFwiTWluZ3JlbGlhblwiLFxuICAgIFwibXdsXCI6IFwiTWlyYW5kZXNlXCIsXG4gICAgXCJsdXNcIjogXCJNaXpvXCIsXG4gICAgXCJhcl8wMDFcIjogXCJNb2Rlcm4gU3RhbmRhcmQgQXJhYmljXCIsXG4gICAgXCJtb2hcIjogXCJNb2hhd2tcIixcbiAgICBcIm1kZlwiOiBcIk1va3NoYVwiLFxuICAgIFwicm9fTURcIjogXCJNb2xkYXZpYW5cIixcbiAgICBcImxvbFwiOiBcIk1vbmdvXCIsXG4gICAgXCJtblwiOiBcIk1vbmdvbGlhblwiLFxuICAgIFwibWZlXCI6IFwiTW9yaXN5ZW5cIixcbiAgICBcImFyeVwiOiBcIk1vcm9jY2FuIEFyYWJpY1wiLFxuICAgIFwibW9zXCI6IFwiTW9zc2lcIixcbiAgICBcIm11bFwiOiBcIk11bHRpcGxlIExhbmd1YWdlc1wiLFxuICAgIFwibXVhXCI6IFwiTXVuZGFuZ1wiLFxuICAgIFwidHR0XCI6IFwiTXVzbGltIFRhdFwiLFxuICAgIFwibXllXCI6IFwiTXllbmVcIixcbiAgICBcIm5hcVwiOiBcIk5hbWFcIixcbiAgICBcIm5hXCI6IFwiTmF1cnVcIixcbiAgICBcIm52XCI6IFwiTmF2YWpvXCIsXG4gICAgXCJuZ1wiOiBcIk5kb25nYVwiLFxuICAgIFwibmFwXCI6IFwiTmVhcG9saXRhblwiLFxuICAgIFwibmVcIjogXCJOZXBhbGlcIixcbiAgICBcIm5ld1wiOiBcIk5ld2FyaVwiLFxuICAgIFwic2JhXCI6IFwiTmdhbWJheVwiLFxuICAgIFwibm5oXCI6IFwiTmdpZW1ib29uXCIsXG4gICAgXCJqZ29cIjogXCJOZ29tYmFcIixcbiAgICBcInlybFwiOiBcIk5oZWVuZ2F0dVwiLFxuICAgIFwibmlhXCI6IFwiTmlhc1wiLFxuICAgIFwibml1XCI6IFwiTml1ZWFuXCIsXG4gICAgXCJ6eHhcIjogXCJObyBsaW5ndWlzdGljIGNvbnRlbnRcIixcbiAgICBcIm5vZ1wiOiBcIk5vZ2FpXCIsXG4gICAgXCJuZFwiOiBcIk5vcnRoIE5kZWJlbGVcIixcbiAgICBcImZyclwiOiBcIk5vcnRoZXJuIEZyaXNpYW5cIixcbiAgICBcInNlXCI6IFwiTm9ydGhlcm4gU2FtaVwiLFxuICAgIFwibnNvXCI6IFwiTm9ydGhlcm4gU290aG9cIixcbiAgICBcIm5vXCI6IFwiTm9yd2VnaWFuXCIsXG4gICAgXCJuYlwiOiBcIk5vcndlZ2lhbiBCb2ttXFx1MDBlNWxcIixcbiAgICBcIm5uXCI6IFwiTm9yd2VnaWFuIE55bm9yc2tcIixcbiAgICBcIm5vdlwiOiBcIk5vdmlhbFwiLFxuICAgIFwibnVzXCI6IFwiTnVlclwiLFxuICAgIFwibnltXCI6IFwiTnlhbXdlemlcIixcbiAgICBcIm55XCI6IFwiTnlhbmphXCIsXG4gICAgXCJueW5cIjogXCJOeWFua29sZVwiLFxuICAgIFwidG9nXCI6IFwiTnlhc2EgVG9uZ2FcIixcbiAgICBcIm55b1wiOiBcIk55b3JvXCIsXG4gICAgXCJuemlcIjogXCJOemltYVwiLFxuICAgIFwibnFvXCI6IFwiTlxcdTAyYmNLb1wiLFxuICAgIFwib2NcIjogXCJPY2NpdGFuXCIsXG4gICAgXCJvalwiOiBcIk9qaWJ3YVwiLFxuICAgIFwiYW5nXCI6IFwiT2xkIEVuZ2xpc2hcIixcbiAgICBcImZyb1wiOiBcIk9sZCBGcmVuY2hcIixcbiAgICBcImdvaFwiOiBcIk9sZCBIaWdoIEdlcm1hblwiLFxuICAgIFwic2dhXCI6IFwiT2xkIElyaXNoXCIsXG4gICAgXCJub25cIjogXCJPbGQgTm9yc2VcIixcbiAgICBcInBlb1wiOiBcIk9sZCBQZXJzaWFuXCIsXG4gICAgXCJwcm9cIjogXCJPbGQgUHJvdmVuXFx1MDBlN2FsXCIsXG4gICAgXCJvclwiOiBcIk9yaXlhXCIsXG4gICAgXCJvbVwiOiBcIk9yb21vXCIsXG4gICAgXCJvc2FcIjogXCJPc2FnZVwiLFxuICAgIFwib3NcIjogXCJPc3NldGljXCIsXG4gICAgXCJvdGFcIjogXCJPdHRvbWFuIFR1cmtpc2hcIixcbiAgICBcInBhbFwiOiBcIlBhaGxhdmlcIixcbiAgICBcInBmbFwiOiBcIlBhbGF0aW5lIEdlcm1hblwiLFxuICAgIFwicGF1XCI6IFwiUGFsYXVhblwiLFxuICAgIFwicGlcIjogXCJQYWxpXCIsXG4gICAgXCJwZGNcIjogXCJQZW5uc3lsdmFuaWEgR2VybWFuXCIsXG4gICAgXCJmYVwiOiBcIlBlcnNpYW5cIixcbiAgICBcInBoblwiOiBcIlBob2VuaWNpYW5cIixcbiAgICBcInBjZFwiOiBcIlBpY2FyZFwiLFxuICAgIFwicG1zXCI6IFwiUGllZG1vbnRlc2VcIixcbiAgICBcInBkdFwiOiBcIlBsYXV0ZGlldHNjaFwiLFxuICAgIFwicG9uXCI6IFwiUG9obnBlaWFuXCIsXG4gICAgXCJwbFwiOiBcIlBvbGlzaFwiLFxuICAgIFwicG50XCI6IFwiUG9udGljXCIsXG4gICAgXCJwdFwiOiBcIlBvcnR1Z3Vlc2VcIixcbiAgICBcInByZ1wiOiBcIlBydXNzaWFuXCIsXG4gICAgXCJwYVwiOiBcIlB1bmphYmlcIixcbiAgICBcInF1XCI6IFwiUXVlY2h1YVwiLFxuICAgIFwicm9cIjogXCJSb21hbmlhblwiLFxuICAgIFwicm1cIjogXCJSb21hbnNoXCIsXG4gICAgXCJyb21cIjogXCJSb21hbnlcIixcbiAgICBcInJvb3RcIjogXCJSb290XCIsXG4gICAgXCJydVwiOiBcIlJ1c3NpYW5cIixcbiAgICBcInJ3a1wiOiBcIlJ3YVwiLFxuICAgIFwic2FoXCI6IFwiU2FraGFcIixcbiAgICBcInNhbVwiOiBcIlNhbWFyaXRhbiBBcmFtYWljXCIsXG4gICAgXCJzbVwiOiBcIlNhbW9hblwiLFxuICAgIFwic2NvXCI6IFwiU2NvdHNcIixcbiAgICBcImdkXCI6IFwiU2NvdHRpc2ggR2FlbGljXCIsXG4gICAgXCJzbHlcIjogXCJTZWxheWFyXCIsXG4gICAgXCJzZWxcIjogXCJTZWxrdXBcIixcbiAgICBcInNlaFwiOiBcIlNlbmFcIixcbiAgICBcInNlZVwiOiBcIlNlbmVjYVwiLFxuICAgIFwic3JcIjogXCJTZXJiaWFuXCIsXG4gICAgXCJzaFwiOiBcIlNlcmJvLUNyb2F0aWFuXCIsXG4gICAgXCJzcnJcIjogXCJTZXJlclwiLFxuICAgIFwic2VpXCI6IFwiU2VyaVwiLFxuICAgIFwia3NiXCI6IFwiU2hhbWJhbGFcIixcbiAgICBcInNoblwiOiBcIlNoYW5cIixcbiAgICBcInNuXCI6IFwiU2hvbmFcIixcbiAgICBcImlpXCI6IFwiU2ljaHVhbiBZaVwiLFxuICAgIFwic2NuXCI6IFwiU2ljaWxpYW5cIixcbiAgICBcInNpZFwiOiBcIlNpZGFtb1wiLFxuICAgIFwiYmxhXCI6IFwiU2lrc2lrYVwiLFxuICAgIFwic3psXCI6IFwiU2lsZXNpYW5cIixcbiAgICBcInpoX0hhbnNcIjogXCJTaW1wbGlmaWVkIENoaW5lc2VcIixcbiAgICBcInNkXCI6IFwiU2luZGhpXCIsXG4gICAgXCJzaVwiOiBcIlNpbmhhbGFcIixcbiAgICBcInNtc1wiOiBcIlNrb2x0IFNhbWlcIixcbiAgICBcImRlblwiOiBcIlNsYXZlXCIsXG4gICAgXCJza1wiOiBcIlNsb3Zha1wiLFxuICAgIFwic2xcIjogXCJTbG92ZW5pYW5cIixcbiAgICBcInhvZ1wiOiBcIlNvZ2FcIixcbiAgICBcInNvZ1wiOiBcIlNvZ2RpZW5cIixcbiAgICBcInNvXCI6IFwiU29tYWxpXCIsXG4gICAgXCJzbmtcIjogXCJTb25pbmtlXCIsXG4gICAgXCJja2JcIjogXCJTb3JhbmkgS3VyZGlzaFwiLFxuICAgIFwiYXpiXCI6IFwiU291dGggQXplcmJhaWphbmlcIixcbiAgICBcIm5yXCI6IFwiU291dGggTmRlYmVsZVwiLFxuICAgIFwiYWx0XCI6IFwiU291dGhlcm4gQWx0YWlcIixcbiAgICBcInNtYVwiOiBcIlNvdXRoZXJuIFNhbWlcIixcbiAgICBcInN0XCI6IFwiU291dGhlcm4gU290aG9cIixcbiAgICBcImVzXCI6IFwiU3BhbmlzaFwiLFxuICAgIFwic3JuXCI6IFwiU3JhbmFuIFRvbmdvXCIsXG4gICAgXCJ6Z2hcIjogXCJTdGFuZGFyZCBNb3JvY2NhbiBUYW1hemlnaHRcIixcbiAgICBcInN1a1wiOiBcIlN1a3VtYVwiLFxuICAgIFwic3V4XCI6IFwiU3VtZXJpYW5cIixcbiAgICBcInN1XCI6IFwiU3VuZGFuZXNlXCIsXG4gICAgXCJzdXNcIjogXCJTdXN1XCIsXG4gICAgXCJzd1wiOiBcIlN3YWhpbGlcIixcbiAgICBcInNzXCI6IFwiU3dhdGlcIixcbiAgICBcInN2XCI6IFwiU3dlZGlzaFwiLFxuICAgIFwiZnJfQ0hcIjogXCJTd2lzcyBGcmVuY2hcIixcbiAgICBcImdzd1wiOiBcIlN3aXNzIEdlcm1hblwiLFxuICAgIFwiZGVfQ0hcIjogXCJTd2lzcyBIaWdoIEdlcm1hblwiLFxuICAgIFwic3lyXCI6IFwiU3lyaWFjXCIsXG4gICAgXCJzaGlcIjogXCJUYWNoZWxoaXRcIixcbiAgICBcInRsXCI6IFwiVGFnYWxvZ1wiLFxuICAgIFwidHlcIjogXCJUYWhpdGlhblwiLFxuICAgIFwiZGF2XCI6IFwiVGFpdGFcIixcbiAgICBcInRnXCI6IFwiVGFqaWtcIixcbiAgICBcInRseVwiOiBcIlRhbHlzaFwiLFxuICAgIFwidG1oXCI6IFwiVGFtYXNoZWtcIixcbiAgICBcInRhXCI6IFwiVGFtaWxcIixcbiAgICBcInRydlwiOiBcIlRhcm9rb1wiLFxuICAgIFwidHdxXCI6IFwiVGFzYXdhcVwiLFxuICAgIFwidHRcIjogXCJUYXRhclwiLFxuICAgIFwidGVcIjogXCJUZWx1Z3VcIixcbiAgICBcInRlclwiOiBcIlRlcmVub1wiLFxuICAgIFwidGVvXCI6IFwiVGVzb1wiLFxuICAgIFwidGV0XCI6IFwiVGV0dW1cIixcbiAgICBcInRoXCI6IFwiVGhhaVwiLFxuICAgIFwiYm9cIjogXCJUaWJldGFuXCIsXG4gICAgXCJ0aWdcIjogXCJUaWdyZVwiLFxuICAgIFwidGlcIjogXCJUaWdyaW55YVwiLFxuICAgIFwidGVtXCI6IFwiVGltbmVcIixcbiAgICBcInRpdlwiOiBcIlRpdlwiLFxuICAgIFwidGxpXCI6IFwiVGxpbmdpdFwiLFxuICAgIFwidHBpXCI6IFwiVG9rIFBpc2luXCIsXG4gICAgXCJ0a2xcIjogXCJUb2tlbGF1XCIsXG4gICAgXCJ0b1wiOiBcIlRvbmdhblwiLFxuICAgIFwiZml0XCI6IFwiVG9ybmVkYWxlbiBGaW5uaXNoXCIsXG4gICAgXCJ6aF9IYW50XCI6IFwiVHJhZGl0aW9uYWwgQ2hpbmVzZVwiLFxuICAgIFwidGtyXCI6IFwiVHNha2h1clwiLFxuICAgIFwidHNkXCI6IFwiVHNha29uaWFuXCIsXG4gICAgXCJ0c2lcIjogXCJUc2ltc2hpYW5cIixcbiAgICBcInRzXCI6IFwiVHNvbmdhXCIsXG4gICAgXCJ0blwiOiBcIlRzd2FuYVwiLFxuICAgIFwidGN5XCI6IFwiVHVsdVwiLFxuICAgIFwidHVtXCI6IFwiVHVtYnVrYVwiLFxuICAgIFwiYWViXCI6IFwiVHVuaXNpYW4gQXJhYmljXCIsXG4gICAgXCJ0clwiOiBcIlR1cmtpc2hcIixcbiAgICBcInRrXCI6IFwiVHVya21lblwiLFxuICAgIFwidHJ1XCI6IFwiVHVyb3lvXCIsXG4gICAgXCJ0dmxcIjogXCJUdXZhbHVcIixcbiAgICBcInR5dlwiOiBcIlR1dmluaWFuXCIsXG4gICAgXCJ0d1wiOiBcIlR3aVwiLFxuICAgIFwia2NnXCI6IFwiVHlhcFwiLFxuICAgIFwidWRtXCI6IFwiVWRtdXJ0XCIsXG4gICAgXCJ1Z2FcIjogXCJVZ2FyaXRpY1wiLFxuICAgIFwidWtcIjogXCJVa3JhaW5pYW5cIixcbiAgICBcInVtYlwiOiBcIlVtYnVuZHVcIixcbiAgICBcInVuZFwiOiBcIlVua25vd24gTGFuZ3VhZ2VcIixcbiAgICBcImhzYlwiOiBcIlVwcGVyIFNvcmJpYW5cIixcbiAgICBcInVyXCI6IFwiVXJkdVwiLFxuICAgIFwidWdcIjogXCJVeWdodXJcIixcbiAgICBcInV6XCI6IFwiVXpiZWtcIixcbiAgICBcInZhaVwiOiBcIlZhaVwiLFxuICAgIFwidmVcIjogXCJWZW5kYVwiLFxuICAgIFwidmVjXCI6IFwiVmVuZXRpYW5cIixcbiAgICBcInZlcFwiOiBcIlZlcHNcIixcbiAgICBcInZpXCI6IFwiVmlldG5hbWVzZVwiLFxuICAgIFwidm9cIjogXCJWb2xhcFxcdTAwZmNrXCIsXG4gICAgXCJ2cm9cIjogXCJWXFx1MDBmNXJvXCIsXG4gICAgXCJ2b3RcIjogXCJWb3RpY1wiLFxuICAgIFwidnVuXCI6IFwiVnVuam9cIixcbiAgICBcIndhXCI6IFwiV2FsbG9vblwiLFxuICAgIFwid2FlXCI6IFwiV2Fsc2VyXCIsXG4gICAgXCJ3YXJcIjogXCJXYXJheVwiLFxuICAgIFwid2FzXCI6IFwiV2FzaG9cIixcbiAgICBcImd1Y1wiOiBcIldheXV1XCIsXG4gICAgXCJjeVwiOiBcIldlbHNoXCIsXG4gICAgXCJ2bHNcIjogXCJXZXN0IEZsZW1pc2hcIixcbiAgICBcImZ5XCI6IFwiV2VzdGVybiBGcmlzaWFuXCIsXG4gICAgXCJtcmpcIjogXCJXZXN0ZXJuIE1hcmlcIixcbiAgICBcIndhbFwiOiBcIldvbGF5dHRhXCIsXG4gICAgXCJ3b1wiOiBcIldvbG9mXCIsXG4gICAgXCJ3dXVcIjogXCJXdSBDaGluZXNlXCIsXG4gICAgXCJ4aFwiOiBcIlhob3NhXCIsXG4gICAgXCJoc25cIjogXCJYaWFuZyBDaGluZXNlXCIsXG4gICAgXCJ5YXZcIjogXCJZYW5nYmVuXCIsXG4gICAgXCJ5YW9cIjogXCJZYW9cIixcbiAgICBcInlhcFwiOiBcIllhcGVzZVwiLFxuICAgIFwieWJiXCI6IFwiWWVtYmFcIixcbiAgICBcInlpXCI6IFwiWWlkZGlzaFwiLFxuICAgIFwieW9cIjogXCJZb3J1YmFcIixcbiAgICBcInphcFwiOiBcIlphcG90ZWNcIixcbiAgICBcImRqZVwiOiBcIlphcm1hXCIsXG4gICAgXCJ6emFcIjogXCJaYXphXCIsXG4gICAgXCJ6ZWFcIjogXCJaZWVsYW5kaWNcIixcbiAgICBcInplblwiOiBcIlplbmFnYVwiLFxuICAgIFwiemFcIjogXCJaaHVhbmdcIixcbiAgICBcImdielwiOiBcIlpvcm9hc3RyaWFuIERhcmlcIixcbiAgICBcInp1XCI6IFwiWnVsdVwiLFxuICAgIFwienVuXCI6IFwiWnVuaVwiXG59XG5cblxuXG5cbi8vIFdFQlBBQ0sgRk9PVEVSIC8vXG4vLyAuL3NyYy9BcHBCdW5kbGUvUmVzb3VyY2VzL3B1YmxpYy9qYXZhc2NyaXB0L2NhL2NhLmRhdGEuanMiLCIvKipcbiAqIENyZWF0ZWQgYnkgSnVhbkNydXogb24gNC8xLzIwMTguXG4gKi9cblxuJChmdW5jdGlvbiAoKSB7XG5cbiAgICB3aW5kb3cuQ29udGVudEFyZW5hID0gd2luZG93LkNvbnRlbnRBcmVuYSB8fCB7fTtcblxuICAgIENvbnRlbnRBcmVuYS5Nb2RlbCA9IENvbnRlbnRBcmVuYS5Nb2RlbCB8fCB7fTtcblxuICAgIENvbnRlbnRBcmVuYS5Nb2RlbC5SaWdodFBhY2thZ2UgPSBmdW5jdGlvbigpe1xuICAgICAgICB0aGlzLmlkID0gbnVsbDtcbiAgICAgICAgdGhpcy5uYW1lID0gbnVsbDtcbiAgICAgICAgdGhpcy5yaWdodHMgPSB7fTtcbiAgICB9O1xuXG4gICAgQ29udGVudEFyZW5hLk1vZGVsLlJpZ2h0ID0gZnVuY3Rpb24oKXtcbiAgICAgICAgdGhpcy5pZCA9IG51bGw7XG4gICAgICAgIHRoaXMubmFtZSA9IG51bGw7XG4gICAgICAgIHRoaXMucmlnaHRJdGVtcyA9IHt9O1xuICAgIH07XG5cbiAgICBDb250ZW50QXJlbmEuTW9kZWwuUmlnaHRJdGVtID0gZnVuY3Rpb24oKXtcbiAgICAgICAgdGhpcy5pZCA9IG51bGw7XG4gICAgICAgIHRoaXMubmFtZSA9IG51bGw7XG4gICAgICAgIHRoaXMuaW5wdXRzID0gW107XG4gICAgfTtcblxuICAgIENvbnRlbnRBcmVuYS5Nb2RlbC5TZWxlY3RlZFJpZ2h0ID0gZnVuY3Rpb24oKXtcbiAgICAgICAgdGhpcy5yaWdodCA9IG51bGw7XG4gICAgICAgIHRoaXMucmlnaHRJdGVtID0gbnVsbDtcbiAgICAgICAgdGhpcy5ncm91cCA9IG51bGw7XG4gICAgICAgIHRoaXMuaW5wdXRzID0gW107XG4gICAgfTtcblxuICAgIENvbnRlbnRBcmVuYS5Nb2RlbC5TYWxlc1BhY2thZ2UgPSBmdW5jdGlvbigpe1xuXG4gICAgICAgIHRoaXMuc2FsZXNNZXRob2QgPSAgbnVsbDtcbiAgICAgICAgdGhpcy5mZWUgPSBudWxsO1xuICAgICAgICB0aGlzLmN1cnJlbmN5ID0gbnVsbDtcbiAgICAgICAgdGhpcy5pZCA9IG51bGw7XG4gICAgICAgIHRoaXMubmFtZSA9IG51bGw7XG4gICAgICAgIHRoaXMudGVycml0b3JpZXMgPSBudWxsO1xuICAgICAgICB0aGlzLnNlbGVjdGVkVGVycml0b3JpZXMgPSBbXTtcbiAgICAgICAgdGhpcy5leGNsdWRlZFRlcnJpdG9yaWVzID0gW107XG4gICAgICAgIHRoaXMudGVycml0b3J5QmlkcyA9IGZhbHNlO1xuICAgICAgICB0aGlzLnNlbGxBc1BhY2thZ2UgPSBmYWxzZTtcblxuICAgICAgICB0aGlzLnZhbGlkYXRlID0gKCkgPT4ge1xuXG4gICAgICAgICAgICB2YXIgZGVzY3JpcHRpb24gPSBcIlNhbGVzIFBhY2thZ2UgXCIgKyB0aGlzLmlkICsgXCI6IFwiLFxuICAgICAgICAgICAgICAgIGhhc0Vycm9ycyA9IGZhbHNlO1xuXG4gICAgICAgICAgICBpZiAoICEgdGhpcy5jdXJyZW5jeSApIHtcbiAgICAgICAgICAgICAgICBoYXNFcnJvcnMgPSB0cnVlO1xuICAgICAgICAgICAgICAgIGRlc2NyaXB0aW9uICs9IFwiQ3VycmVuY3kgY2FuJ3QgYmUgZW1wdHkuIFwiO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICBpZiAoICEgdGhpcy5mZWUgKSB7XG4gICAgICAgICAgICAgICAgaGFzRXJyb3JzID0gdHJ1ZTtcbiAgICAgICAgICAgICAgICBkZXNjcmlwdGlvbiArPSBcIkZlZSBjYW4ndCBiZSBlbXB0eS4gXCI7XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIGlmICggISB0aGlzLnRlcnJpdG9yaWVzICkge1xuICAgICAgICAgICAgICAgIGhhc0Vycm9ycyA9IHRydWU7XG4gICAgICAgICAgICAgICAgZGVzY3JpcHRpb24gKz0gXCJUZXJyaXRvcmllcyBjYW4ndCBiZSBlbXB0eS4gXCI7XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIGlmICggISB0aGlzLnNhbGVzTWV0aG9kICkge1xuICAgICAgICAgICAgICAgIGhhc0Vycm9ycyA9IHRydWU7XG4gICAgICAgICAgICAgICAgZGVzY3JpcHRpb24gKz0gXCJTYWxlcyBtZXRob2QgY2FuJ3QgYmUgZW1wdHkuIFwiO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgICAgIGhhc0Vycm9yczogaGFzRXJyb3JzLFxuICAgICAgICAgICAgICAgIGRlc2NyaXB0aW9uIDogZGVzY3JpcHRpb25cbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuXG4gICAgfTtcblxuICAgIENvbnRlbnRBcmVuYS5Nb2RlbC5Db250ZW50ID0gZnVuY3Rpb24oKSB7XG5cbiAgICAgICAgdGhpcy5zcG9ydCA9IHt9O1xuICAgICAgICB0aGlzLnNwb3J0cyA9IFtdO1xuICAgICAgICB0aGlzLnRvdXJuYW1lbnQgPSBudWxsO1xuICAgICAgICB0aGlzLmNhdGVnb3J5ID0gbnVsbDtcbiAgICAgICAgdGhpcy5zYWxlc1BhY2thZ2VzID0ge307XG4gICAgICAgIHRoaXMuaW5zdGFsbG1lbnRzID0ge307XG5cbiAgICAgICAgdGhpcy5nZXRUaXRsZSA9ICgpID0+IHtcblxuICAgICAgICAgICAgY29uc29sZS5sb2codGhpcyk7XG5cbiAgICAgICAgICAgIHZhciB0aXRsZSA9IFwiXCI7XG5cbiAgICAgICAgICAgIGlmICggdGhpcy5zcG9ydHMubGVuZ3RoID4gMCApe1xuICAgICAgICAgICAgICAgIHRoaXMuc3BvcnRzLmZvckVhY2goZnVuY3Rpb24gKHNwb3J0LCBpbmRleCwgYXJyYXkpIHtcbiAgICAgICAgICAgICAgICAgICAgdGl0bGUgKz0gc3BvcnQudmFsdWU7XG4gICAgICAgICAgICAgICAgICAgIGlmICggKGluZGV4KzEpICE9IGFycmF5Lmxlbmd0aCApIHRpdGxlICs9IFwiLCBcIlxuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgfVxuXG5cbiAgICAgICAgICAgIGlmICggdGhpcy5zcG9ydCAhPT0gbnVsbCApIHRpdGxlICs9IHRoaXMuc3BvcnQudmFsdWU7XG4gICAgICAgICAgICBpZiAoIHRoaXMuY2F0ZWdvcnkgIT09IG51bGwgKSB0aXRsZSArPSBcIiAtIFwiICsgdGhpcy5jYXRlZ29yeS52YWx1ZTtcbiAgICAgICAgICAgIGlmICggdGhpcy50b3VybmFtZW50ICE9PSBudWxsICkgdGl0bGUgKz0gXCIgLSBcIiArIHRoaXMudG91cm5hbWVudC52YWx1ZTtcblxuICAgICAgICAgICAgaWYgKCB0aGlzLnNlYXNvbnMgJiYgdGhpcy5zZWFzb25zLmxlbmd0aCA+IDApe1xuICAgICAgICAgICAgICAgIHRpdGxlICs9IFwiIFwiICsgdGhpcy5zZWFzb25zLm1hcCggKCBzZWFzb24gKSA9PiB7XG4gICAgICAgICAgICAgICAgICAgIHZhciB2YWx1ZXMgPSBzZWFzb24udmFsdWUuc3BsaXQoXCIgXCIpO1xuICAgICAgICAgICAgICAgICAgICByZXR1cm4gdmFsdWVzW3ZhbHVlcy5sZW5ndGggLSAxXVxuICAgICAgICAgICAgICAgIH0pLmpvaW4oXCIgLSBcIik7XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIHJldHVybiB0aXRsZTtcbiAgICAgICAgfTtcblxuICAgICAgICB3YXRjaCh0aGlzLCBcInNwb3J0c1wiLCBmdW5jdGlvbigpe1xuICAgICAgICAgICAgY29uc29sZS5sb2coXCJVcGRhdGluZyBzcG9ydHNcIiwgYXJndW1lbnRzKTtcbiAgICAgICAgfSk7XG5cblxuICAgIH07XG5cbn0pO1xuXG5cblxuLy8gV0VCUEFDSyBGT09URVIgLy9cbi8vIC4vc3JjL0FwcEJ1bmRsZS9SZXNvdXJjZXMvcHVibGljL2phdmFzY3JpcHQvY2EvY2EubW9kZWxzLmpzIiwiLyoqXG4gKiBDcmVhdGVkIGJ5IEp1YW5DcnV6IG9uIDQvMS8yMDE4LlxuICovXG5cbmltcG9ydCBtb21lbnQgZnJvbSBcIm1vbWVudFwiO1xuXG53aW5kb3cuQ29udGVudEFyZW5hID0gd2luZG93LkNvbnRlbnRBcmVuYSB8fCB7fTtcbkNvbnRlbnRBcmVuYS5VdGlscyA9IHtcblxuICAgIGNvbnRlbnRQYXJzZXJGcm9tU2VydmVyKGNvbnRlbnQpIHtcblxuICAgICAgICBpZiAoIGNvbnRlbnQucGFyc2VkICkgcmV0dXJuIGNvbnRlbnQ7XG5cbiAgICAgICAgbGV0IHNvcnQgPSB0cnVlO1xuXG4gICAgICAgIGlmICggY29udGVudC5leHRyYURhdGEpe1xuICAgICAgICAgICAgT2JqZWN0LmVudHJpZXMoY29udGVudC5leHRyYURhdGEpLmZvckVhY2goXG4gICAgICAgICAgICAgICAgKFtrZXksIHZhbHVlXSkgPT4gY29udGVudFtrZXldID0gdmFsdWVcbiAgICAgICAgICAgICk7XG4gICAgICAgIH1cblxuICAgICAgICBjb250ZW50LnRvdXJuYW1lbnQgPSAoY29udGVudC50b3VybmFtZW50KSA/IEFycmF5LmlzQXJyYXkoY29udGVudC50b3VybmFtZW50KT8gY29udGVudC50b3VybmFtZW50IDogW2NvbnRlbnQudG91cm5hbWVudF0gOiBbXTtcbiAgICAgICAgY29udGVudC5zcG9ydENhdGVnb3J5ID0gKGNvbnRlbnQuc3BvcnRDYXRlZ29yeSkgPyBBcnJheS5pc0FycmF5KGNvbnRlbnQuc3BvcnRDYXRlZ29yeSk/IGNvbnRlbnQuc3BvcnRDYXRlZ29yeSA6IFtjb250ZW50LnNwb3J0Q2F0ZWdvcnldIDogW107XG5cbiAgICAgICAgaWYgKGNvbnRlbnQuc2VsZWN0ZWRSaWdodHNCeVN1cGVyUmlnaHQpe1xuICAgICAgICAgICAgY29udGVudC5yaWdodHNQYWNrYWdlLmZvckVhY2goIChycCkgPT4ge1xuICAgICAgICAgICAgICAgIHJwLnNlbGVjdGVkUmlnaHRzID0gY29udGVudC5zZWxlY3RlZFJpZ2h0c0J5U3VwZXJSaWdodFtycC5pZF1bJ2l0ZW1zJ107XG4gICAgICAgICAgICAgICAgcnAuZXhjbHVzaXZlID0gY29udGVudC5zZWxlY3RlZFJpZ2h0c0J5U3VwZXJSaWdodFtycC5pZF1bJ2V4Y2x1c2l2ZSddO1xuICAgICAgICAgICAgfSk7XG4gICAgICAgIH1cblxuICAgICAgICBpZiAoY29udGVudC5maXh0dXJlc0J5U2Vhc29uKXtcbiAgICAgICAgICAgIGNvbnRlbnQuc2Vhc29ucy5mb3JFYWNoKCAocywgaSkgPT4ge1xuICAgICAgICAgICAgICAgIHMuZml4dHVyZXMgPSBjb250ZW50LmZpeHR1cmVzQnlTZWFzb25baV1cbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9XG5cbiAgICAgICAgaWYgKCBjb250ZW50LnNhbGVzUGFja2FnZXMgKSB7XG4gICAgICAgICAgICBjb250ZW50LnNhbGVzUGFja2FnZXMuZm9yRWFjaCgoc3ApID0+IHtcbiAgICAgICAgICAgICAgICBpZiAoc3Auc2FsZXNNZXRob2QpIHNwLnNhbGVzTWV0aG9kID0gc3Auc2FsZXNNZXRob2QubmFtZTtcbiAgICAgICAgICAgICAgICBpZiAoc3AuZXhjbHVkZWRDb3VudHJpZXMpIHNwLmV4Y2x1ZGVkVGVycml0b3JpZXMgPSBzcC5leGNsdWRlZENvdW50cmllcy5tYXAodD0+e3JldHVybntsYWJlbDp0Lm5hbWUsIHZhbHVlOnQubmFtZX19KVxuICAgICAgICAgICAgICAgIGlmIChzcC50ZXJyaXRvcmllcykgc3AudGVycml0b3JpZXMgPSBzcC50ZXJyaXRvcmllcy5tYXAodD0+e3JldHVybntsYWJlbDp0Lm5hbWUsIHZhbHVlOnQubmFtZX19KVxuICAgICAgICAgICAgICAgIGlmICghc3AudGVycml0b3JpZXMpIHNvcnQgPSBmYWxzZVxuICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICBpZiAoc29ydCkgY29udGVudC5zYWxlc1BhY2thZ2VzLnNvcnQodGhpcy5zb3J0U2FsZXNQYWNrYWdlcykucmV2ZXJzZSgpO1xuICAgICAgICB9XG5cbiAgICAgICAgaWYgKGNvbnRlbnQuZW5kRGF0ZSkgY29udGVudC5lbmREYXRlID0gbW9tZW50KGNvbnRlbnQuZW5kRGF0ZSk7XG4gICAgICAgIGlmIChjb250ZW50LnN0YXJ0RGF0ZSkgY29udGVudC5zdGFydERhdGUgPSBtb21lbnQoY29udGVudC5zdGFydERhdGUpO1xuXG4gICAgICAgIGNvbnRlbnQuc3RlcCA9IE51bWJlcihjb250ZW50LnN0ZXApO1xuICAgICAgICBjb250ZW50LmN1c3RvbVNlYXNvbnMgPSBjb250ZW50LnNlYXNvbnMuZmlsdGVyKHM9PntcbiAgICAgICAgICAgIHJldHVybiBzLmV4dGVybmFsSWQgJiYgcy5leHRlcm5hbElkLnN0YXJ0c1dpdGgoXCJjYTpcIilcbiAgICAgICAgfSkubWFwKChzLGkpPT57XG4gICAgICAgICAgICBsZXQgeWVhcnMgPSBzLnllYXIuc3BsaXQoXCIvXCIpO1xuICAgICAgICAgICAgcy5mcm9tID0geWVhcnMubGVuZ3RoID09PSAxID8geWVhcnNbMF0gOiAyMDAwICsgTnVtYmVyKHllYXJzWzBdKTtcbiAgICAgICAgICAgIHMudG8gPSB5ZWFycy5sZW5ndGggPT09IDEgPyBudWxsIDogMjAwMCArIE51bWJlcih5ZWFyc1sxXSk7XG4gICAgICAgICAgICBpZiAoY29udGVudC5maXh0dXJlc0J5U2Vhc29uKXtcbiAgICAgICAgICAgICAgICBzLmZpeHR1cmVzID0gY29udGVudC5maXh0dXJlc0J5U2Vhc29uW2ldXG4gICAgICAgICAgICB9XG4gICAgICAgICAgICByZXR1cm4gcztcbiAgICAgICAgfSk7XG5cblxuICAgICAgICBjb250ZW50LnNlYXNvbnMgPSBjb250ZW50LnNlYXNvbnMubWFwKHM9PntcbiAgICAgICAgICAgIGlmICggcy5leHRlcm5hbElkICYmIHMuZXh0ZXJuYWxJZC5zdGFydHNXaXRoKFwiY2E6XCIpICl7XG4gICAgICAgICAgICAgICAgcy5jdXN0b20gPSB0cnVlXG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIHJldHVybiBzO1xuXG4gICAgICAgIH0pO1xuXG5cbiAgICAgICAgY29udGVudC5wYXJzZWQgPSB0cnVlO1xuXG4gICAgICAgIHJldHVybiBjb250ZW50O1xuICAgIH0sXG5cbiAgICBzb3J0U2FsZXNQYWNrYWdlcyAoYSwgYil7XG4gICAgICAgIGxldCBjID0gKGEsIGIpID0+IHtcbiAgICAgICAgICAgIHJldHVybiAoYSA+IGIpID8gMSA6ICgoYiA+IGEpID8gLTEgOiAwKVxuICAgICAgICB9O1xuICAgICAgICByZXR1cm4gYyhhLnRlcnJpdG9yaWVzLmxlbmd0aCwgYi50ZXJyaXRvcmllcy5sZW5ndGgpIHx8IGMoYi5uYW1lLCBhLm5hbWUpO1xuICAgIH0sXG5cblxuXG4gICAgaXNBUElBdmFpbGFibGUoKSB7XG4gICAgICAgIC8vIENoZWNrIGZvciB0aGUgdmFyaW91cyBGaWxlIEFQSSBzdXBwb3J0LlxuICAgICAgICBpZiAod2luZG93LkZpbGUgJiYgd2luZG93LkZpbGVSZWFkZXIgJiYgd2luZG93LkZpbGVMaXN0ICYmIHdpbmRvdy5CbG9iKSB7XG4gICAgICAgICAgICAvLyBHcmVhdCBzdWNjZXNzISBBbGwgdGhlIEZpbGUgQVBJcyBhcmUgc3VwcG9ydGVkLlxuICAgICAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAvLyBzb3VyY2U6IEZpbGUgQVBJIGF2YWlsYWJpbGl0eSAtIGh0dHA6Ly9jYW5pdXNlLmNvbS8jZmVhdD1maWxlYXBpXG4gICAgICAgICAgICAvLyBzb3VyY2U6IDxvdXRwdXQ+IGF2YWlsYWJpbGl0eSAtIGh0dHA6Ly9odG1sNWRvY3Rvci5jb20vdGhlLW91dHB1dC1lbGVtZW50L1xuICAgICAgICAgICAgZG9jdW1lbnQud3JpdGVsbignVGhlIEhUTUw1IEFQSXMgdXNlZCBpbiB0aGlzIGZvcm0gYXJlIG9ubHkgYXZhaWxhYmxlIGluIHRoZSBmb2xsb3dpbmcgYnJvd3NlcnM6PGJyIC8+Jyk7XG4gICAgICAgICAgICAvLyA2LjAgRmlsZSBBUEkgJiAxMy4wIDxvdXRwdXQ+XG4gICAgICAgICAgICBkb2N1bWVudC53cml0ZWxuKCcgLSBHb29nbGUgQ2hyb21lOiAxMy4wIG9yIGxhdGVyPGJyIC8+Jyk7XG4gICAgICAgICAgICAvLyAzLjYgRmlsZSBBUEkgJiA2LjAgPG91dHB1dD5cbiAgICAgICAgICAgIGRvY3VtZW50LndyaXRlbG4oJyAtIE1vemlsbGEgRmlyZWZveDogNi4wIG9yIGxhdGVyPGJyIC8+Jyk7XG4gICAgICAgICAgICAvLyAxMC4wIEZpbGUgQVBJICYgMTAuMCA8b3V0cHV0PlxuICAgICAgICAgICAgZG9jdW1lbnQud3JpdGVsbignIC0gSW50ZXJuZXQgRXhwbG9yZXI6IE5vdCBzdXBwb3J0ZWQgKHBhcnRpYWwgc3VwcG9ydCBleHBlY3RlZCBpbiAxMC4wKTxiciAvPicpO1xuICAgICAgICAgICAgLy8gPyBGaWxlIEFQSSAmIDUuMSA8b3V0cHV0PlxuICAgICAgICAgICAgZG9jdW1lbnQud3JpdGVsbignIC0gU2FmYXJpOiBOb3Qgc3VwcG9ydGVkPGJyIC8+Jyk7XG4gICAgICAgICAgICAvLyA/IEZpbGUgQVBJICYgOS4yIDxvdXRwdXQ+XG4gICAgICAgICAgICBkb2N1bWVudC53cml0ZWxuKCcgLSBPcGVyYTogTm90IHN1cHBvcnRlZCcpO1xuICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgICB9XG4gICAgfSxcbiAgICBhZGRPcmRpbmFsKG4pIHtcbiAgICAgICAgdmFyIHN0ciA9IG4udG9TdHJpbmcoKS5zbGljZSgtMSksXG4gICAgICAgICAgICBvcmQgPSAnJztcbiAgICAgICAgc3dpdGNoIChzdHIpIHtcbiAgICAgICAgICAgIGNhc2UgJzEnOlxuICAgICAgICAgICAgICAgIG9yZCA9ICdzdCc7XG4gICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICBjYXNlICcyJzpcbiAgICAgICAgICAgICAgICBvcmQgPSAnbmQnO1xuICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgY2FzZSAnMyc6XG4gICAgICAgICAgICAgICAgb3JkID0gJ3JkJztcbiAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgIGNhc2UgJzQnOlxuICAgICAgICAgICAgY2FzZSAnNSc6XG4gICAgICAgICAgICBjYXNlICc2JzpcbiAgICAgICAgICAgIGNhc2UgJzcnOlxuICAgICAgICAgICAgY2FzZSAnOCc6XG4gICAgICAgICAgICBjYXNlICc5JzpcbiAgICAgICAgICAgIGNhc2UgJzAnOlxuICAgICAgICAgICAgICAgIG9yZCA9ICd0aCc7XG4gICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIG4gKyBvcmQ7XG4gICAgfSxcbiAgICAvKipcbiAgICAgKlxuICAgICAqIEBwYXJhbSB2YWx1ZVxuICAgICAqIEBwYXJhbSBhcnJcbiAgICAgKiBAcGFyYW0gcHJvcFxuICAgICAqIEByZXR1cm5zIHtudW1iZXJ9XG4gICAgICovXG4gICAgZ2V0SW5kZXggKHZhbHVlLCBhcnIsIHByb3ApIHtcbiAgICAgICAgZm9yKHZhciBpID0gMDsgaSA8IGFyci5sZW5ndGg7IGkrKykge1xuICAgICAgICAgICAgaWYoYXJyW2ldW3Byb3BdID09PSB2YWx1ZSkge1xuICAgICAgICAgICAgICAgIHJldHVybiBpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIHJldHVybiAtMTsgLy90byBoYW5kbGUgdGhlIGNhc2Ugd2hlcmUgdGhlIHZhbHVlIGRvZXNuJ3QgZXhpc3RcbiAgICB9XG5cbn07XG5cblxuXG5cblxuLy8gV0VCUEFDSyBGT09URVIgLy9cbi8vIC4vc3JjL0FwcEJ1bmRsZS9SZXNvdXJjZXMvcHVibGljL2phdmFzY3JpcHQvY2EvY2EudXRpbHMuanMiLCJpbXBvcnQgeyB1c2VyVHlwZXMgfSBmcm9tICcuLi9yZWR1Y2Vycy91c2VyJztcblxuXG5leHBvcnQgY29uc3QgdXBkYXRlUHJvZmlsZSA9IHByb2ZpbGUgPT4gKHtcbiAgICB0eXBlOiB1c2VyVHlwZXMuUFJPRklMRSxcbiAgICBwcm9maWxlLFxufSk7XG5cbmV4cG9ydCBjb25zdCBsb2FkVXNlckRhdGEgPSAoKSA9PiB7XG4gICAgY29uc3QgZGF0YUNvbnRhaW5lciA9IGRvY3VtZW50LmdldEVsZW1lbnRzQnlDbGFzc05hbWUoJ21hcmtldHBsYWNlLWNvbnRhaW5lcicpO1xuICAgIGxldCB1c2VyID0ge307XG4gICAgICAgICAgICAgICAgXG4gICAgaWYgKGRhdGFDb250YWluZXIgJiYgZGF0YUNvbnRhaW5lci5sZW5ndGgpIHtcbiAgICAgICAgY29uc3QgdXNlclN0ciA9IGRhdGFDb250YWluZXJbMF0uZGF0YXNldC5sb2dnZWRVc2VyRGF0YTtcbiAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgIHVzZXIgPSBKU09OLnBhcnNlKHVzZXJTdHIpO1xuICAgICAgICB9IGNhdGNoIChlKSB7fVxuICAgIH1cblxuICAgIHJldHVybiB7XG4gICAgICAgIHR5cGU6IHVzZXJUeXBlcy5MT0FEX1VTRVJfREFUQSxcbiAgICAgICAgdXNlclxuICAgIH07XG59O1xuXG5cblxuLy8gV0VCUEFDSyBGT09URVIgLy9cbi8vIC4vc3JjL0FwcEJ1bmRsZS9SZXNvdXJjZXMvcHVibGljL2phdmFzY3JpcHQvbWFpbi9hY3Rpb25zL3VzZXJBY3Rpb25zLmpzIiwiZXhwb3J0IGNvbnN0IGdldEN1cnJlbmN5U3ltYm9sID0gY29kZSA9PiB7XG4gICAgcmV0dXJuIChjb2RlID09PSBcIkVVUlwiKSA/IFwi4oKsXCIgOiBcIiRcIjtcbn07XG5cbmV4cG9ydCBjb25zdCBnb1RvID0gKHJvdXRlLCBvcGVuTmV3KSA9PiB7XG5cbiAgICBpZiAob3Blbk5ldykge1xuICAgICAgICB3aW5kb3cub3BlbihlbnZob3N0dXJsICsgcm91dGUsIFwiX2JsYW5rXCIpO1xuICAgIH0gZWxzZSB7XG4gICAgICAgIHdpbmRvdy5sb2NhdGlvbi5ocmVmID0gZW52aG9zdHVybCArIHJvdXRlXG4gICAgfVxufTtcblxuZXhwb3J0IGNvbnN0IGhpc3RvcnlHb1RvID0gKHJvdXRlKSA9PiB7XG4gICAgd2luZG93Lmhpc3RvcnkucHVzaFN0YXRlKG51bGwsIG51bGwsIGVudmhvc3R1cmwrcm91dGUpO1xufTtcblxuZXhwb3J0IGNvbnN0IGdvVG9MaXN0aW5nID0gKGlkLCBvcGVuTmV3KSA9PiB7XG4gICAgZ29UbyhcImxpc3RpbmcvXCIrIGlkLCBvcGVuTmV3KVxufTtcblxuZXhwb3J0IGNvbnN0IHZpZXdMaWNlbnNlID0gaWQgPT4ge1xuICAgIGdvVG8oXCJsaWNlbnNlL3ByZXZpZXcvXCIrIGlkKVxufTtcblxuZXhwb3J0IGNvbnN0IHZpZXdMaWNlbnNlQmlkID0gaWQgPT4ge1xuICAgIGdvVG8oXCJsaWNlbnNlL2JpZC9cIisgaWQpXG59O1xuXG5leHBvcnQgY29uc3Qgdmlld0xpY2Vuc2VCdW5kbGUgPSAoaWQsIGxpc3RpbmdJZCkgPT4ge1xuICAgIGdvVG8oXCJsaWNlbnNlL2J1bmRsZS9cIisgaWQgKyBcIi9cIiArIGxpc3RpbmdJZClcbn07XG5cbmV4cG9ydCBjb25zdCB2aWV3TGljZW5zZUN1c3RvbSA9IChsaXN0aW5nSWQsIGJ1bmRsZUlkLCBiaWQpID0+IHtcblxuICAgIGNvbnN0IHNlcmlhbGl6ZSA9IGZ1bmN0aW9uKG9iaiwgcHJlZml4KSB7XG4gICAgICAgIHZhciBzdHIgPSBbXSxcbiAgICAgICAgICAgIHA7XG4gICAgICAgIGZvciAocCBpbiBvYmopIHtcbiAgICAgICAgICAgIGlmIChvYmouaGFzT3duUHJvcGVydHkocCkpIHtcbiAgICAgICAgICAgICAgICB2YXIgayA9IHByZWZpeCA/IHByZWZpeCArIFwiW1wiICsgcCArIFwiXVwiIDogcCxcbiAgICAgICAgICAgICAgICAgICAgdiA9IG9ialtwXTtcbiAgICAgICAgICAgICAgICBzdHIucHVzaCgodiAhPT0gbnVsbCAmJiB0eXBlb2YgdiA9PT0gXCJvYmplY3RcIikgP1xuICAgICAgICAgICAgICAgICAgICBzZXJpYWxpemUodiwgaykgOlxuICAgICAgICAgICAgICAgICAgICBlbmNvZGVVUklDb21wb25lbnQoaykgKyBcIj1cIiArIGVuY29kZVVSSUNvbXBvbmVudCh2KSk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHN0ci5qb2luKFwiJlwiKTtcbiAgICB9O1xuXG4gICAgLy9sZXQgcXVlcnlTdHJpbmcgPSBPYmplY3Qua2V5cyhidW5kbGUpLm1hcChrZXkgPT4ga2V5ICsgJz0nICsgYnVuZGxlW2tleV0pLmpvaW4oJyYnKTtcbiAgICBnb1RvKFwibGljZW5zZS9jdXN0b20vXCIgKyBsaXN0aW5nSWQgKyBcIi9cIiArIGJ1bmRsZUlkICsgXCI/XCIgKyBzZXJpYWxpemUoe2JpZDogYmlkfSkgKTtcbn07XG5cbmV4cG9ydCBjb25zdCBnb1RvTWFya2V0cGxhY2UgPSAoKSA9PiB7XG4gICAgZ29UbyhcIm1hcmtldHBsYWNlXCIpXG59O1xuXG5leHBvcnQgY29uc3QgZ29Ub0Nsb3NlZERlYWxzID0gKCkgPT4ge1xuICAgIGdvVG8oXCJjbG9zZWRkZWFsc1wiKVxufTtcblxuZXhwb3J0IGNvbnN0IGdldEZlZSA9IChzYWxlc1BhY2thZ2UpID0+IHtcbiAgICBjb25zdCBmZWVOdW1iZXIgPSBwYXJzZUZsb2F0KHNhbGVzUGFja2FnZS5mZWUpO1xuICAgIHJldHVybiBmZWVOdW1iZXIudG9Mb2NhbGVTdHJpbmcoKSArXCIgXCIgKyBnZXRDdXJyZW5jeVN5bWJvbChzYWxlc1BhY2thZ2UuY3VycmVuY3kuY29kZSk7XG59O1xuXG5leHBvcnQgY29uc3QgZ2V0RnVsbE5hbWUgPSAodXNlcikgPT4ge1xuICAgIHJldHVybiB1c2VyLmZpcnN0TmFtZSArIFwiIFwiICsgdXNlci5sYXN0TmFtZTtcbn07XG5cbmV4cG9ydCBjb25zdCBsaW1pdFRleHQgPSAodHh0LCBsaW1pdCA9IDI1KSA9PiB7XG4gICAgcmV0dXJuICh0eHQubGVuZ3RoID4gbGltaXQpID8gdHh0LnN1YnN0cmluZygwLGxpbWl0KSArIFwiLi4uXCIgOiB0eHRcbn07XG5cbmV4cG9ydCBjb25zdCBlZGl0ZWRQcm9ncmFtU2VsZWN0ZWQgPSAocmlnaHRzKSA9PiB7XG4gICAgcmV0dXJuIHJpZ2h0cy5maWx0ZXIocj0+ci5zaG9ydExhYmVsID09PSAnUFInKS5sZW5ndGggPT09IDFcbn07XG5cbmV4cG9ydCBjb25zdCBwYXJzZVNlYXNvbnMgPSAoY29udGVudCkgPT4ge1xuICAgIGlmIChjb250ZW50LnNlYXNvbnMgPT09IHVuZGVmaW5lZCkgcmV0dXJuIGNvbnRlbnQ7XG4gICAgY29udGVudC5zZWFzb25zLmZvckVhY2goKHNlYXNvbik9PntcbiAgICAgICAgc2Vhc29uLnNlbGVjdGVkU2NoZWR1bGVzID0ge307XG5cbiAgICAgICAgaWYgKHNlYXNvbi5zY2hlZHVsZXMgPT09IHVuZGVmaW5lZCApIHJldHVybjtcblxuICAgICAgICBPYmplY3QuZW50cmllcyggc2Vhc29uLnNjaGVkdWxlcykuZmlsdGVyKChyb3VuZCkgPT57XG4gICAgICAgICAgICBpZiAoICFyb3VuZCB8fCByb3VuZC5sZW5ndGggPD0gMSApIHJldHVybiBmYWxzZTtcbiAgICAgICAgICAgIHJldHVybiByb3VuZFsxXS5zZWxlY3RlZFxuICAgICAgICB9KS5tYXAoKHJvdW5kKT0+e1xuICAgICAgICAgICAgaWYgKCFzZWFzb24uc2VsZWN0ZWRTY2hlZHVsZXNbcm91bmRbMF1dKSBzZWFzb24uc2VsZWN0ZWRTY2hlZHVsZXNbcm91bmRbMF1dID0ge21hdGNoZXM6W119O1xuICAgICAgICAgICAgaWYocm91bmRbMV0uc2VsZWN0ZWQpe1xuICAgICAgICAgICAgICAgIEFycmF5LmZyb20ocm91bmRbMV0ubWF0Y2hlcy52YWx1ZXMoKSkuZmlsdGVyKG1hdGNoID0+IG1hdGNoLnNlbGVjdGVkKS5mb3JFYWNoKChtYXRjaCk9PntcbiAgICAgICAgICAgICAgICAgICAgc2Vhc29uLnNlbGVjdGVkU2NoZWR1bGVzW3JvdW5kWzBdXS5tYXRjaGVzLnB1c2gobWF0Y2gpXG4gICAgICAgICAgICAgICAgfSlcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSlcbiAgICB9KTtcblxuICAgIHJldHVybiBjb250ZW50O1xufTtcblxuXG4vLyBXRUJQQUNLIEZPT1RFUiAvL1xuLy8gLi9zcmMvQXBwQnVuZGxlL1Jlc291cmNlcy9wdWJsaWMvamF2YXNjcmlwdC9tYWluL2FjdGlvbnMvdXRpbHMuanMiLCJpbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xuaW1wb3J0IE1vbWVudCBmcm9tIFwibW9tZW50L21vbWVudFwiO1xuaW1wb3J0IFJlYWN0VGFibGUgZnJvbSBcInJlYWN0LXRhYmxlXCI7XG5pbXBvcnQgTW9kYWwgZnJvbSAncmVhY3QtbW9kYWwnO1xuXG5pbXBvcnQgRGlnaXRhbFNpZ25hdHVyZSBmcm9tIFwiLi4vLi4vbWFpbi9jb21wb25lbnRzL0RpZ2l0YWxTaWduYXR1cmVcIjtcbmltcG9ydCB7Z2V0Q3VycmVuY3lTeW1ib2wsIGdldEZlZSwgbGltaXRUZXh0LCB2aWV3TGljZW5zZUJpZH0gZnJvbSBcIi4uL2FjdGlvbnMvdXRpbHNcIjtcbmltcG9ydCB7YWRkSWNvbiwgYmlkSWNvbiwgYmx1ZUNoZWNrSWNvbiwgYmx1ZUVudmVsb3BlSWNvbiwgYnVja2V0SWNvbiwgY2FuY2VsSWNvbiwgZG9jSWNvbiwgZml4ZWRJY29ufSBmcm9tIFwiLi9JY29uc1wiO1xuaW1wb3J0IHtjdXN0b21TdHlsZXMsIEdlbmVyaWNNb2RhbFN0eWxlfSBmcm9tIFwiLi4vc3R5bGVzL2N1c3RvbVwiO1xuaW1wb3J0IFNlbmRNZXNzYWdlIGZyb20gXCIuLi8uLi9tYWluL2NvbXBvbmVudHMvU2VuZE1lc3NhZ2VcIjtcbmltcG9ydCB7UHJvcFR5cGVzfSBmcm9tIFwicHJvcC10eXBlc1wiO1xuXG5jbGFzcyBDb21tZXJjaWFsU2FsZXNCdW5kbGUgZXh0ZW5kcyBSZWFjdC5Db21wb25lbnR7XG4gICAgY29uc3RydWN0b3IocHJvcHMpe1xuICAgICAgICBzdXBlcihwcm9wcyk7XG5cbiAgICAgICAgdGhpcy5zdGF0ZSA9IHtcbiAgICAgICAgICAgIGFwcHJvdmVNb2RhbElzT3BlbiA6IGZhbHNlLFxuICAgICAgICAgICAgcmVqZWN0TW9kYWxJc09wZW4gOiBmYWxzZSxcbiAgICAgICAgICAgIHJlbW92ZU1vZGFsSXNPcGVuIDogZmFsc2UsXG4gICAgICAgICAgICBzaG93QmlkcyA6IHByb3BzLmJpZHNPcGVuXG5cbiAgICAgICAgfVxuICAgIH1cblxuICAgIGNvbXBvbmVudFdpbGxSZWNlaXZlUHJvcHMgKCl7XG4gICAgICAgIHRoaXMuc2V0U3RhdGUoe3JlbW92ZU1vZGFsSXNPcGVuIDogZmFsc2UsIHNhdmluZyA6IGZhbHNlfSk7XG4gICAgfVxuXG4gICAgYWNjZXB0QmlkID0gKCkgPT4ge1xuICAgICAgICBjb25zdCB7c2lnbmF0dXJlfSA9IHRoaXMuc3RhdGU7XG4gICAgICAgIGNvbnN0IHtjb250ZW50SWR9ID0gdGhpcy5wcm9wcztcbiAgICAgICAgbGV0IHNlbGVjdGVkQmlkID0gdGhpcy5zdGF0ZS5zZWxlY3RlZEJpZDtcbiAgICAgICAgc2VsZWN0ZWRCaWQuY29udGVudCA9IGNvbnRlbnRJZDtcbiAgICAgICAgdGhpcy5zZXRTdGF0ZSh7c2F2aW5nIDogdHJ1ZX0pO1xuICAgICAgICBDb250ZW50QXJlbmEuQ29udGVudEFwaS5hY2NlcHRCaWQoc2VsZWN0ZWRCaWQsIHNpZ25hdHVyZSkuZG9uZShyZXNwb25zZT0+e1xuICAgICAgICAgICAgdGhpcy5zZXRTdGF0ZSh7YXBwcm92ZU1vZGFsSXNPcGVuIDogZmFsc2UsIHNhdmluZyA6IGZhbHNlfSk7XG4gICAgICAgICAgICB0aGlzLnByb3BzLm9uVXBkYXRlKCk7XG4gICAgICAgIH0pO1xuXG4gICAgfTtcblxuICAgIHJlbW92ZUJpZCA9ICgpID0+IHtcbiAgICAgICAgbGV0IHNlbGVjdGVkQmlkID0gdGhpcy5zdGF0ZS5zZWxlY3RlZEJpZDtcbiAgICAgICAgdGhpcy5zZXRTdGF0ZSh7c2F2aW5nIDogdHJ1ZX0pO1xuICAgICAgICBDb250ZW50QXJlbmEuQ29udGVudEFwaS5yZW1vdmVCaWQoc2VsZWN0ZWRCaWQpLmRvbmUocmVzcG9uc2U9PntcbiAgICAgICAgICAgIC8vdGhpcy5zZXRTdGF0ZSh7cmVtb3ZlTW9kYWxJc09wZW4gOiBmYWxzZSwgc2F2aW5nIDogZmFsc2V9KVxuICAgICAgICAgICAgdGhpcy5wcm9wcy5vblVwZGF0ZSgpO1xuICAgICAgICB9KTtcblxuICAgIH07XG5cbiAgICByZWplY3RCaWQgPSAoKSA9PiB7XG4gICAgICAgIGxldCBzZWxlY3RlZEJpZCA9IHRoaXMuc3RhdGUuc2VsZWN0ZWRCaWQ7XG4gICAgICAgIHNlbGVjdGVkQmlkLm1lc3NhZ2UgPSB0aGlzLnN0YXRlLm1lc3NhZ2U7XG4gICAgICAgIHRoaXMuc2V0U3RhdGUoe3NhdmluZyA6IHRydWV9KTtcbiAgICAgICAgQ29udGVudEFyZW5hLkNvbnRlbnRBcGkucmVqZWN0QmlkKHNlbGVjdGVkQmlkKS5hbHdheXMocmVzcG9uc2U9PntcbiAgICAgICAgICAgIHRoaXMuc2V0U3RhdGUoe3JlamVjdE1vZGFsSXNPcGVuIDogZmFsc2UsIHNhdmluZyA6IGZhbHNlfSk7XG4gICAgICAgICAgICB0aGlzLnByb3BzLm9uVXBkYXRlKCk7XG4gICAgICAgIH0pO1xuXG4gICAgfTtcblxuICAgIGNsb3NlUmVtb3ZlTW9kYWwgPSAoKSA9PiB7XG4gICAgICAgIHRoaXMuc2V0U3RhdGUoe3JlbW92ZU1vZGFsSXNPcGVuIDogZmFsc2V9KVxuICAgIH07XG5cbiAgICBjbG9zZUFwcHJvdmVNb2RhbCA9ICgpID0+IHtcbiAgICAgICAgdGhpcy5zZXRTdGF0ZSh7YXBwcm92ZU1vZGFsSXNPcGVuIDogZmFsc2V9KVxuICAgIH07XG5cbiAgICBjbG9zZVJlamVjdE1vZGFsID0gKCkgPT4ge1xuICAgICAgICB0aGlzLnNldFN0YXRlKHtyZWplY3RNb2RhbElzT3BlbiA6IGZhbHNlfSlcbiAgICB9O1xuXG4gICAgcmVuZGVyQXBwcm92ZU1vZGFsID0gKCkgPT4ge1xuXG4gICAgICAgIGNvbnN0IHtzYWxlc0J1bmRsZX0gPSB0aGlzLnByb3BzO1xuICAgICAgICBjb25zdCB7c2lnbmF0dXJlLCBzYXZpbmcsIHNlbGVjdGVkQmlkfSA9IHRoaXMuc3RhdGU7XG5cbiAgICAgICAgcmV0dXJuIDxNb2RhbFxuICAgICAgICAgICAgaXNPcGVuPXt0aGlzLnN0YXRlLmFwcHJvdmVNb2RhbElzT3Blbn1cbiAgICAgICAgICAgIG9uUmVxdWVzdENsb3NlPXt0aGlzLmNsb3NlQXBwcm92ZU1vZGFsfVxuICAgICAgICAgICAgYm9keU9wZW5DbGFzc05hbWU9e1wiZ2VuZXJpYy1tb2RhbFwifVxuICAgICAgICAgICAgc3R5bGU9e0dlbmVyaWNNb2RhbFN0eWxlfVxuICAgICAgICA+XG4gICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT17XCJnZW5lcmljLW1vZGFsLWNvbnRhaW5lclwifT5cbiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cInRpdGxlXCI+XG4gICAgICAgICAgICAgICAgICAgIHt0aGlzLmNvbnRleHQudChcIkNPTU1FUkNJQUxfQUNUSVZJVFlfQklEX1RJVExFX0FDQ0VQVFwiKX1cbiAgICAgICAgICAgICAgICA8L2Rpdj5cblxuICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiY29udGFpbmVyXCI+XG4gICAgICAgICAgICAgICAgICAgIDxEaWdpdGFsU2lnbmF0dXJlIHNpZ25hdHVyZT17c2lnbmF0dXJlfSBvblJlYWR5PXtzaWduYXR1cmUgPT4geyB0aGlzLnNldFN0YXRlKHtzaWduYXR1cmV9KSB9fSAvPlxuICAgICAgICAgICAgICAgIDwvZGl2PlxuXG4gICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9e1wiYnV0dG9uc1wifT5cbiAgICAgICAgICAgICAgICAgICAgPGJ1dHRvbiBzdHlsZT17e2ZvbnRTaXplOiAxM319IG9uQ2xpY2s9eygpPT57IHZpZXdMaWNlbnNlQmlkKHNlbGVjdGVkQmlkLmN1c3RvbUlkKSB9fT5WaWV3IExpY2Vuc2UgQWdyZWVtZW50PC9idXR0b24+XG4gICAgICAgICAgICAgICAgICAgIDxidXR0b24gb25DbGljaz17dGhpcy5jbG9zZUFwcHJvdmVNb2RhbH0+XG4gICAgICAgICAgICAgICAgICAgICAgICB7dGhpcy5jb250ZXh0LnQoXCJDT01NRVJDSUFMX0FDVElWSVRZX0JJRF9CVVRUT05fQ0FOQ0VMXCIpfVxuICAgICAgICAgICAgICAgICAgICA8L2J1dHRvbj5cbiAgICAgICAgICAgICAgICAgICAgeyFzYXZpbmcgJiYgPGJ1dHRvbiBjbGFzc05hbWU9e1wiY29uZmlybVwifSBkaXNhYmxlZD17IXNpZ25hdHVyZX0gb25DbGljaz17dGhpcy5hY2NlcHRCaWR9PlxuICAgICAgICAgICAgICAgICAgICAgICAge3RoaXMuY29udGV4dC50KFwiQ09NTUVSQ0lBTF9BQ1RJVklUWV9CSURfQlVUVE9OX0FDQ0VQVFwiKX1cbiAgICAgICAgICAgICAgICAgICAgPC9idXR0b24+fVxuICAgICAgICAgICAgICAgICAgICB7c2F2aW5nICYmIDxpIGNsYXNzTmFtZT1cImZhIGZhLXNwaW4gZmEtY29nXCIvPn1cbiAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICA8L01vZGFsPlxuICAgIH07XG5cbiAgICByZW5kZXJSZWplY3RNb2RhbCA9ICgpID0+IHtcblxuICAgICAgICBjb25zdCB7c2FsZXNCdW5kbGV9ID0gdGhpcy5wcm9wcztcbiAgICAgICAgY29uc3Qge3NhdmluZywgbWVzc2FnZX0gPSB0aGlzLnN0YXRlO1xuXG4gICAgICAgIHJldHVybiA8TW9kYWxcbiAgICAgICAgICAgIGlzT3Blbj17dGhpcy5zdGF0ZS5yZWplY3RNb2RhbElzT3Blbn1cbiAgICAgICAgICAgIG9uUmVxdWVzdENsb3NlPXt0aGlzLmNsb3NlUmVqZWN0TW9kYWx9XG4gICAgICAgICAgICBib2R5T3BlbkNsYXNzTmFtZT17XCJnZW5lcmljLW1vZGFsXCJ9XG4gICAgICAgICAgICBzdHlsZT17R2VuZXJpY01vZGFsU3R5bGV9XG4gICAgICAgID5cbiAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPXtcImdlbmVyaWMtbW9kYWwtY29udGFpbmVyXCJ9PlxuICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwidGl0bGVcIj5cbiAgICAgICAgICAgICAgICAgICAge3RoaXMuY29udGV4dC50KFwiQ09NTUVSQ0lBTF9BQ1RJVklUWV9CSURfVElUTEVfUkVKRUNUXCIpfVxuICAgICAgICAgICAgICAgIDwvZGl2PlxuXG4gICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJjb250YWluZXJcIj5cbiAgICAgICAgICAgICAgICAgICAge3RoaXMuY29udGV4dC50KFwiQ09NTUVSQ0lBTF9BQ1RJVklUWV9CSURfUkVKRUNUX01FU1NBR0VcIil9XG4gICAgICAgICAgICAgICAgICAgIDx0ZXh0YXJlYSBvbkNoYW5nZT17KGUpPT57dGhpcy5zZXRTdGF0ZSh7bWVzc2FnZTogZS50YXJnZXQudmFsdWV9KX19IHZhbHVlPXttZXNzYWdlfT5cbiAgICAgICAgICAgICAgICAgICAgPC90ZXh0YXJlYT5cbiAgICAgICAgICAgICAgICA8L2Rpdj5cblxuICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPXtcImJ1dHRvbnNcIn0+XG5cbiAgICAgICAgICAgICAgICAgICAgeyFzYXZpbmcgJiYgPGJ1dHRvbiBjbGFzc05hbWU9e1wiY29uZmlybVwifSBvbkNsaWNrPXt0aGlzLnJlamVjdEJpZH0+XG4gICAgICAgICAgICAgICAgICAgICAgICB7dGhpcy5jb250ZXh0LnQoXCJDT01NRVJDSUFMX0FDVElWSVRZX0JJRF9CVVRUT05fUkVKRUNUX0NPTkZJUk1cIil9XG4gICAgICAgICAgICAgICAgICAgIDwvYnV0dG9uPn1cbiAgICAgICAgICAgICAgICAgICAge3NhdmluZyAmJiA8aSBjbGFzc05hbWU9XCJmYSBmYS1zcGluIGZhLWNvZ1wiLz59XG4gICAgICAgICAgICAgICAgICAgIDxidXR0b24gb25DbGljaz17dGhpcy5jbG9zZVJlamVjdE1vZGFsfT5cbiAgICAgICAgICAgICAgICAgICAgICAgIHt0aGlzLmNvbnRleHQudChcIkNPTU1FUkNJQUxfQUNUSVZJVFlfQklEX0JVVFRPTl9SRUpFQ1RfQ0FOQ0VMXCIpfVxuICAgICAgICAgICAgICAgICAgICA8L2J1dHRvbj5cbiAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICA8L01vZGFsPlxuICAgIH07XG5cbiAgICByZW5kZXJSZW1vdmVNb2RhbCA9ICgpID0+IHtcblxuICAgICAgICBjb25zdCB7c2F2aW5nfSA9IHRoaXMuc3RhdGU7XG5cbiAgICAgICAgcmV0dXJuIDxNb2RhbFxuICAgICAgICAgICAgaXNPcGVuPXt0aGlzLnN0YXRlLnJlbW92ZU1vZGFsSXNPcGVufVxuICAgICAgICAgICAgb25SZXF1ZXN0Q2xvc2U9e3RoaXMuY2xvc2VSZW1vdmVNb2RhbH1cbiAgICAgICAgICAgIGJvZHlPcGVuQ2xhc3NOYW1lPXtcImdlbmVyaWMtbW9kYWxcIn1cbiAgICAgICAgICAgIHN0eWxlPXtHZW5lcmljTW9kYWxTdHlsZX1cbiAgICAgICAgPlxuICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9e1wiZ2VuZXJpYy1tb2RhbC1jb250YWluZXJcIn0+XG4gICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJ0aXRsZVwiPlxuICAgICAgICAgICAgICAgICAgICB7dGhpcy5jb250ZXh0LnQoXCJDT01NRVJDSUFMX0FDVElWSVRZX0JJRF9USVRMRV9SRU1PVkVcIil9XG4gICAgICAgICAgICAgICAgPC9kaXY+XG5cbiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImNvbnRhaW5lclwiPlxuICAgICAgICAgICAgICAgIDwvZGl2PlxuXG4gICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9e1wiYnV0dG9uc1wifT5cblxuICAgICAgICAgICAgICAgICAgICB7IXNhdmluZyAmJiA8YnV0dG9uIG9uQ2xpY2s9e3RoaXMucmVtb3ZlQmlkfSBjbGFzc05hbWU9e1wiY29uZmlybVwifT5cbiAgICAgICAgICAgICAgICAgICAgICAgIHt0aGlzLmNvbnRleHQudChcIkNPTU1FUkNJQUxfQUNUSVZJVFlfQklEX0JVVFRPTl9SRU1PVkVfQ09ORklSTVwiKX1cbiAgICAgICAgICAgICAgICAgICAgPC9idXR0b24+fVxuICAgICAgICAgICAgICAgICAgICB7c2F2aW5nICYmIDxpIGNsYXNzTmFtZT1cImZhIGZhLXNwaW4gZmEtY29nXCIvPn1cbiAgICAgICAgICAgICAgICAgICAgPGJ1dHRvbiBvbkNsaWNrPXt0aGlzLmNsb3NlUmVtb3ZlTW9kYWx9PlxuICAgICAgICAgICAgICAgICAgICAgICAge3RoaXMuY29udGV4dC50KFwiQ09NTUVSQ0lBTF9BQ1RJVklUWV9CSURfQlVUVE9OX1JFTU9WRV9DQU5DRUxcIil9XG4gICAgICAgICAgICAgICAgICAgIDwvYnV0dG9uPlxuICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgIDwvTW9kYWw+XG4gICAgfTtcblxuICAgIHJlbmRlcigpe1xuICAgICAgICBjb25zdCB7IHNhbGVzQnVuZGxlLCBjb21wYW55LCBvbkRlbGV0ZSwgY29udGVudElkIH0gPSB0aGlzLnByb3BzO1xuICAgICAgICBjb25zdCB7IHNob3dCaWRzIH0gPSB0aGlzLnN0YXRlO1xuXG4gICAgICAgIGxldCBjbG9zZWREZWFscyA9IHNhbGVzQnVuZGxlLmJpZHMuZmlsdGVyKGI9PmIuc3RhdHVzLm5hbWUgPT09IFwiQVBQUk9WRURcIik7XG4gICAgICAgIGxldCB0b3RhbEZlZSA9IChjbG9zZWREZWFscy5sZW5ndGggPiAwKSA/IGNsb3NlZERlYWxzLm1hcChiPT5OdW1iZXIoYi50b3RhbEZlZSkpLnJlZHVjZSgodCxuKT0+dCtuKSA6IG51bGw7XG4gICAgICAgIGxldCBfdGhpcyA9IHRoaXM7XG5cbiAgICAgICAgcmV0dXJuIChcbiAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiY29tbWVyY2lhbC1zYWxlcy1idW5kbGVzXCI+XG4gICAgICAgICAgICAgICAge3RoaXMucmVuZGVyQXBwcm92ZU1vZGFsKCl9XG4gICAgICAgICAgICAgICAge3RoaXMucmVuZGVyUmVqZWN0TW9kYWwoKX1cbiAgICAgICAgICAgICAgICB7dGhpcy5yZW5kZXJSZW1vdmVNb2RhbCgpfVxuICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiY29tbWVyY2lhbC1zYWxlcy1idW5kbGVzLWNvbnRhaW5lclwiIG9uQ2xpY2s9eygpPT57dGhpcy5zZXRTdGF0ZSh7c2hvd0JpZHM6ICFzaG93Qmlkc30pfX0+XG4gICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwic2FsZXMtYnVuZGxlLWl0ZW1cIj5cbiAgICAgICAgICAgICAgICAgICAgICAgIHtzYWxlc0J1bmRsZS5idW5kbGVNZXRob2QgPT09IFwiU0VMTF9BU19CVU5ETEVcIiAmJjxpbWcgc3R5bGU9e3t3aWR0aDogMjYsIGhlaWdodDogMjN9fSBzcmM9e2ZpeGVkSWNvbn0vPn1cbiAgICAgICAgICAgICAgICAgICAgICAgIHtzYWxlc0J1bmRsZS5uYW1lfVxuICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cblxuICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cInNhbGVzLWJ1bmRsZS1pdGVtXCI+XG4gICAgICAgICAgICAgICAgICAgICAgICB7c2FsZXNCdW5kbGUuZmVlID4gMCAmJiBnZXRGZWUoc2FsZXNCdW5kbGUpfVxuICAgICAgICAgICAgICAgICAgICAgICAge3NhbGVzQnVuZGxlLnNhbGVzTWV0aG9kID09PSBcIkJJRERJTkdcIlxuICAgICAgICAgICAgICAgICAgICAgICAgJiY8aW1nIHN0eWxlPXt7d2lkdGg6IDIzLCBoZWlnaHQ6IDIzfX0gc3JjPXtiaWRJY29ufS8+fVxuICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cblxuICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cInNhbGVzLWJ1bmRsZS1pdGVtLXJpZ2h0XCIgc3R5bGU9e3ttYXJnaW5MZWZ0OiAnYXV0byd9fT5cbiAgICAgICAgICAgICAgICAgICAgICAgIHt0aGlzLmNvbnRleHQudChbXCJjbG9zZWQgZGVhbFwiLCBcImNsb3NlZCBkZWFsc1wiLCBcIm5cIl0sIHtuIDogY2xvc2VkRGVhbHMubGVuZ3RofSl9XG4gICAgICAgICAgICAgICAgICAgIDwvZGl2PlxuXG4gICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwic2FsZXMtYnVuZGxlLWl0ZW0tcmlnaHRcIj5cbiAgICAgICAgICAgICAgICAgICAgICAgIHt0aGlzLmNvbnRleHQudChbXCJvcGVuIGJpZFwiLFwib3BlbiBiaWRzXCIsIFwiblwiXSwge24gOiBzYWxlc0J1bmRsZS5iaWRzLmZpbHRlcihiPT5iLnN0YXR1cy5uYW1lID09PSBcIlBFTkRJTkdcIikubGVuZ3RofSl9XG4gICAgICAgICAgICAgICAgICAgIDwvZGl2PlxuXG4gICAgICAgICAgICAgICAgICAgIHt0b3RhbEZlZSAmJiA8ZGl2IGNsYXNzTmFtZT1cInNhbGVzLWJ1bmRsZS1pdGVtLXJpZ2h0XCI+XG4gICAgICAgICAgICAgICAgICAgICAgICB7dG90YWxGZWV9IHtnZXRDdXJyZW5jeVN5bWJvbChzYWxlc0J1bmRsZS5jdXJyZW5jeS5jb2RlKX1cbiAgICAgICAgICAgICAgICAgICAgPC9kaXY+fVxuXG4gICAgICAgICAgICAgICAgICAgIHtzYWxlc0J1bmRsZS5iaWRzLmxlbmd0aCA+IDAgJiZcbiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJzYWxlcy1idW5kbGUtc2hvdy1iaWRzXCI+XG4gICAgICAgICAgICAgICAgICAgICAgICB7IXNob3dCaWRzICYmIDxpbWcgc3JjPXthZGRJY29ufS8+fVxuICAgICAgICAgICAgICAgICAgICAgICAge3Nob3dCaWRzICYmIDxpbWcgc3JjPXtjYW5jZWxJY29ufS8+fVxuICAgICAgICAgICAgICAgICAgICA8L2Rpdj59XG4gICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgICAge3Nob3dCaWRzICYmIHNhbGVzQnVuZGxlLmJpZHMubGVuZ3RoID4gMCAmJlxuICAgICAgICAgICAgICAgIDxkaXY+XG4gICAgICAgICAgICAgICAgICAgIHtzYWxlc0J1bmRsZS5iaWRzLm1hcCgoYik9PntcbiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiA8U2VuZE1lc3NhZ2Ugcm9sZT17J1NFTExFUid9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJlZj17XCJtZXNzYWdlUG9wdXBcIiArIGIuaWQgfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBsaXN0aW5nSWQ9e2NvbnRlbnRJZH0gcmVjaXBpZW50PXtiLmJ1eWVyVXNlci5jb21wYW55fS8+XG4gICAgICAgICAgICAgICAgICAgIH0pfVxuXG4gICAgICAgICAgICAgICAgICAgIDxSZWFjdFRhYmxlXG4gICAgICAgICAgICAgICAgICAgICAgICBjbGFzc05hbWU9e1wiY2EtdGFibGVcIn1cbiAgICAgICAgICAgICAgICAgICAgICAgIGRlZmF1bHRQYWdlU2l6ZT17MzB9XG4gICAgICAgICAgICAgICAgICAgICAgICBzaG93UGFnZVNpemVPcHRpb25zPXtmYWxzZX1cbiAgICAgICAgICAgICAgICAgICAgICAgIHNob3dQYWdpbmF0aW9uPXtmYWxzZX1cbiAgICAgICAgICAgICAgICAgICAgICAgIG9uUGFnZUNoYW5nZT17dGhpcy5vblBhZ2VDaGFuZ2V9XG4gICAgICAgICAgICAgICAgICAgICAgICBtaW5Sb3dzPXswfVxuICAgICAgICAgICAgICAgICAgICAgICAgcmVzaXphYmxlPXtmYWxzZX1cbiAgICAgICAgICAgICAgICAgICAgICAgIGRhdGE9e3NhbGVzQnVuZGxlLmJpZHN9XG4gICAgICAgICAgICAgICAgICAgICAgICBzZWxlY3Q9e3RoaXMucHJvcHMuc2VsZWN0fVxuICAgICAgICAgICAgICAgICAgICAgICAgY29sdW1ucz17W3tcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBhY2Nlc3NvcjogZCA9PiB7cmV0dXJuIGQuYnV5ZXJVc2VyLmNvbXBhbnkubGVnYWxOYW1lfSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBDZWxsOiBwcm9wcyA9PiA8ZGl2PlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB7cHJvcHMudmFsdWV9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+LFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIEhlYWRlcjogdGhpcy5jb250ZXh0LnQoXCJCdXllclwiKSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBoZWFkZXJDbGFzc05hbWUgOiAndGFibGUtaGVhZGVyLWJpZycsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgY2xhc3NOYW1lIDogJ3RhYmxlLWhlYWRlci1iaWcnLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlkIDogXCJjb21wYW55XCJcbiAgICAgICAgICAgICAgICAgICAgICAgIH0sICB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgSGVhZGVyOiB0aGlzLmNvbnRleHQudChcIkZlZVwiKSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBoZWFkZXJDbGFzc05hbWUgOiAndGFibGUtaGVhZGVyJyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjbGFzc05hbWUgOiAndGFibGUtaGVhZGVyJyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZDogXCJwcmljZVwiLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGFjY2Vzc29yOiBkID0+IHtyZXR1cm4ge2ZlZTogZC50b3RhbEZlZSwgY3VycmVuY3k6IHNhbGVzQnVuZGxlLmN1cnJlbmN5LmNvZGV9fSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBDZWxsOiBwcm9wcyA9PiA8ZGl2IGNsYXNzTmFtZT17XCJibHVlXCJ9PlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB7cGFyc2VGbG9hdChwcm9wcy52YWx1ZS5mZWUpLnRvTG9jYWxlU3RyaW5nKCkgKyBcIiBcIiArIGdldEN1cnJlbmN5U3ltYm9sKHByb3BzLnZhbHVlLmN1cnJlbmN5KX1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgICAgICAgICAgIH0sIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBIZWFkZXI6IHRoaXMuY29udGV4dC50KFwiVXNlclwiKSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBoZWFkZXJDbGFzc05hbWUgOiAndGFibGUtaGVhZGVyLWJpZycsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgY2xhc3NOYW1lIDogJ3RhYmxlLWhlYWRlci1iaWcnLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGFjY2Vzc29yOiAnYnV5ZXJVc2VyJyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBDZWxsOiBwcm9wcyA9PiA8ZGl2PlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB7cHJvcHMudmFsdWUuZmlyc3ROYW1lICsgXCIgXCIgKyBwcm9wcy52YWx1ZS5sYXN0TmFtZX1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cblxuICAgICAgICAgICAgICAgICAgICAgICAgfSx7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgSGVhZGVyOiB0aGlzLmNvbnRleHQudChcIkFjdGlvblwiKSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBoZWFkZXJDbGFzc05hbWUgOiAndGFibGUtaGVhZGVyJyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjbGFzc05hbWUgOiAndGFibGUtaGVhZGVyJyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBhY2Nlc3NvcjogJ3N0YXR1cy5uYW1lJyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBDZWxsOiBwcm9wcyA9PiA8ZGl2PlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB7cHJvcHMudmFsdWUgPT09IFwiQVBQUk9WRURcIiAmJiBcIkNsb3NlZCBEZWFsXCJ9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHtwcm9wcy52YWx1ZSA9PT0gXCJQRU5ESU5HXCIgJiYgXCJCaWQgUGxhY2VkXCJ9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHtwcm9wcy52YWx1ZSA9PT0gXCJSRUpFQ1RFRFwiICYmIFwiQmlkIERlY2xpbmVkXCJ9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XG5cbiAgICAgICAgICAgICAgICAgICAgICAgIH0se1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIEhlYWRlcjogdGhpcy5jb250ZXh0LnQoXCJDT01NRVJDSUFMX0FDVElWSVRZX0FDVElPTl9EQVRFXCIpLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGhlYWRlckNsYXNzTmFtZSA6ICd0YWJsZS1oZWFkZXInLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNsYXNzTmFtZSA6ICd0YWJsZS1oZWFkZXInLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGFjY2Vzc29yOiAnY3JlYXRlZEF0JyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBDZWxsOiBwcm9wcyA9PiA8ZGl2PlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB7TW9tZW50KHByb3BzLnZhbHVlKS5mb3JtYXQoJ0REL01NL1lZWVknKX1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cblxuICAgICAgICAgICAgICAgICAgICAgICAgfSwge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIEhlYWRlcjogdGhpcy5jb250ZXh0LnQoXCJBY3Rpb25zXCIpLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGhlYWRlckNsYXNzTmFtZSA6ICd0YWJsZS1oZWFkZXInLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNsYXNzTmFtZSA6ICd0YWJsZS1oZWFkZXInLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlkIDogXCJhY3Rpb25zXCIsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgYWNjZXNzb3I6IGIgPT4ge3JldHVybiB7c3RhdHVzOiBiLnN0YXR1cy5uYW1lLCBiaWQ6IGJ9fSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBDZWxsOiBwcm9wcyA9PiA8ZGl2IGNsYXNzTmFtZT17XCJcIn0+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHtwcm9wcy52YWx1ZS5zdGF0dXMgPT09IFwiUkVKRUNURURcIlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJiYgPGltZyBzdHlsZT17e21hcmdpbjonMCAxMHB4JywgY3Vyc29yOiAncG9pbnRlcid9fSBvbkNsaWNrPXsoKT0+e1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5zZXRTdGF0ZSh7c2hvd1JlbW92ZUNvbmZpcm06IHRydWUsIHNlbGVjdGVkQmlkRm9yRGVsZXRpb24gOiBwcm9wcy52YWx1ZS5iaWR9KTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfX0gc3JjPXtidWNrZXRJY29ufS8+fVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB7cHJvcHMudmFsdWUuc3RhdHVzID09PSBcIlBFTkRJTkdcIlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJiYgPGltZyBzdHlsZT17e21hcmdpbjonMCAxMHB4JywgY3Vyc29yOiAncG9pbnRlcid9fSBvbkNsaWNrPXsoKT0+e1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuc2V0U3RhdGUoe2FwcHJvdmVNb2RhbElzT3Blbjp0cnVlLCBzZWxlY3RlZEJpZCA6IHByb3BzLnZhbHVlLmJpZH0pO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9fSBzcmM9e2JsdWVDaGVja0ljb259Lz59XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHtwcm9wcy52YWx1ZS5zdGF0dXMgPT09IFwiUEVORElOR1wiXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAmJiA8aW1nIHN0eWxlPXt7bWFyZ2luOicwIDEwcHgnLCBjdXJzb3I6ICdwb2ludGVyJ319IG9uQ2xpY2s9eygpPT57XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0aGlzLnNldFN0YXRlKHtyZWplY3RNb2RhbElzT3Blbjp0cnVlLCBzZWxlY3RlZEJpZCA6IHByb3BzLnZhbHVlLmJpZH0pO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9fSBzcmM9e2NhbmNlbEljb259Lz59XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHsgKHByb3BzLnZhbHVlLnN0YXR1cyA9PT0gXCJBUFBST1ZFRFwiIHx8IHByb3BzLnZhbHVlLnN0YXR1cyA9PT0gXCJQRU5ESU5HXCIpXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAmJiA8aW1nIHN0eWxlPXt7bWFyZ2luOicwIDEwcHgnLCBjdXJzb3I6ICdwb2ludGVyJ319IG9uQ2xpY2s9eygpPT57XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdmlld0xpY2Vuc2VCaWQocHJvcHMudmFsdWUuYmlkLmN1c3RvbUlkKVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9fSBzcmM9e2RvY0ljb259Lz59XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHtwcm9wcy52YWx1ZS5zdGF0dXMgPT09IFwiQVBQUk9WRURcIlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJiYgPGltZyBzdHlsZT17e21hcmdpbjonMCAxMHB4JywgY3Vyc29yOiAncG9pbnRlcid9fSBvbkNsaWNrPXsoKT0+e1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmIChwcm9wcy52YWx1ZS5zdGF0dXMgPT09IFwiQVBQUk9WRURcIikge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB3aW5kb3cubG9jYXRpb24uaHJlZiA9IGAvcmVkaXJlY3QtaW50ZWdyYXRpb24vbWVzc2FnZXMtYnktYmlkLyR7cHJvcHMudmFsdWUuYmlkLmlkfWA7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgX3RoaXMucmVmc1tcIm1lc3NhZ2VQb3B1cFwiICsgcHJvcHMudmFsdWUuYmlkLmlkXS5vcGVuKCk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9fSBzcmM9e2JsdWVFbnZlbG9wZUljb259Lz59XG5cblxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB7LypDT05GSVJNIFJFTU9WRSovfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB7dGhpcy5zdGF0ZS5zaG93UmVtb3ZlQ29uZmlybSAmJiA8ZGl2IGNsYXNzTmFtZT1cImNvbmZpcm1hdGlvbi10b29sdGlwXCI+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT17XCJjb25maXJtYXRpb24tdGV4dFwifSBzdHlsZT17eyB3aGl0ZVNwYWNlOiAnbm9ybWFsJ319PlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHt0aGlzLmNvbnRleHQudChcIkNPTU1FUkNJQUxfQUNUSVZJVFlfQklEX1RJVExFX1JFTU9WRVwiKX1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGJ1dHRvbiBjbGFzc05hbWU9e1wiYnV0dG9uIGJ1dHRvbi1jb25maXJtXCJ9IG9uQ2xpY2s9eyhlKT0+e1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG9uRGVsZXRlKHRoaXMuc3RhdGUuc2VsZWN0ZWRCaWRGb3JEZWxldGlvbi5pZCk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5zZXRTdGF0ZSh7c2hvd1JlbW92ZUNvbmZpcm06IGZhbHNlLCBzZWxlY3RlZEJpZEZvckRlbGV0aW9uOiBudWxsfSk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZS5zdG9wUHJvcGFnYXRpb24oKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH19PlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHt0aGlzLmNvbnRleHQudChcIkNPTU1FUkNJQUxfQUNUSVZJVFlfQklEX0JVVFRPTl9SRU1PVkVfQ09ORklSTVwiKX1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvYnV0dG9uPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGJ1dHRvbiBjbGFzc05hbWU9e1wiYnV0dG9uXCJ9IG9uQ2xpY2s9eyhlKT0+e1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuc2V0U3RhdGUoe3Nob3dSZW1vdmVDb25maXJtOiBmYWxzZSwgc2VsZWN0ZWRCaWRGb3JEZWxldGlvbjogbnVsbH0pO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGUuc3RvcFByb3BhZ2F0aW9uKCk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9fT5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB7dGhpcy5jb250ZXh0LnQoXCJDT01NRVJDSUFMX0FDVElWSVRZX0JJRF9CVVRUT05fUkVNT1ZFX0NBTkNFTFwiKX1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvYnV0dG9uPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj59XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgICAgICAgICAgIF19XG4gICAgICAgICAgICAgICAgICAgIC8+XG5cbiAgICAgICAgICAgICAgICA8L2Rpdj59XG4gICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgKVxuICAgIH1cbn1cblxuQ29tbWVyY2lhbFNhbGVzQnVuZGxlLmNvbnRleHRUeXBlcyA9IHtcbiAgICB0OiBQcm9wVHlwZXMuZnVuYy5pc1JlcXVpcmVkXG59O1xuXG5leHBvcnQgZGVmYXVsdCBDb21tZXJjaWFsU2FsZXNCdW5kbGU7XG5cblxuLy8gV0VCUEFDSyBGT09URVIgLy9cbi8vIC4vc3JjL0FwcEJ1bmRsZS9SZXNvdXJjZXMvcHVibGljL2phdmFzY3JpcHQvbWFpbi9jb21wb25lbnRzL0NvbW1lcmNpYWxTYWxlc0J1bmRsZS5qcyIsImltcG9ydCBSZWFjdCwgeyBDb21wb25lbnQgfSBmcm9tICdyZWFjdCc7XG5pbXBvcnQgTW9tZW50IGZyb20gXCJtb21lbnQvbW9tZW50XCI7XG5pbXBvcnQgQ29udGVudExpc3RpbmdFdmVudERldGFpbHMgZnJvbSBcIi4uLy4uL2J1eS9jb21wb25lbnRzL0NvbnRlbnRMaXN0aW5nRXZlbnREZXRhaWxzXCI7XG5pbXBvcnQgQ29udGVudExpc3RpbmdSaWdodHNQYWNrYWdlIGZyb20gXCIuLi8uLi9idXkvY29tcG9uZW50cy9Db250ZW50TGlzdGluZ1JpZ2h0c1BhY2thZ2VcIjtcbmltcG9ydCB7UHJvcFR5cGVzfSBmcm9tIFwicHJvcC10eXBlc1wiO1xuaW1wb3J0IHtcbiAgICBibHVlQ2hlY2tJY29uLFxuICAgIHllbGxvd0NoZWNrSWNvbixcbiAgICBjb2luSWNvbixcbiAgICBoYW1tZXJJY29uLFxuICAgIGJ1Y2tldEljb24sXG4gICAgYmlkSWNvbixcbiAgICBmaXhlZEljb25cbn0gZnJvbSBcIi4vSWNvbnNcIjtcbmltcG9ydCBNb2RhbCBmcm9tICdyZWFjdC1tb2RhbCc7XG5pbXBvcnQge2N1c3RvbVN0eWxlc30gZnJvbSBcIi4uL3N0eWxlcy9jdXN0b21cIjtcbmltcG9ydCB7Z2V0Q3VycmVuY3lTeW1ib2x9IGZyb20gXCIuLi9hY3Rpb25zL3V0aWxzXCI7XG5pbXBvcnQgVG9vbHRpcCBmcm9tICcuLi8uLi9tYWluL2NvbXBvbmVudHMvVG9vbHRpcCc7XG5cbmNvbnN0IFNhbGVzUGFja2FnZXMgPSAoe3NhbGVzUGFja2FnZXMsIGdldEZlZSwgc2hvd0FsbFRlcnJpdG9yaWVzfSkgPT4ge1xuICAgIGxldCBzYWxlc1BhY2thZ2VzQXJyYXkgPSBBcnJheS5pc0FycmF5KHNhbGVzUGFja2FnZXMpID8gc2FsZXNQYWNrYWdlcyA6IFtzYWxlc1BhY2thZ2VzXVxuICAgIHJldHVybiAoXG4gICAgICAgIDxSZWFjdC5GcmFnbWVudD5cbiAgICAgICAgICAgIHtzYWxlc1BhY2thZ2VzQXJyYXkuc2xpY2UoMCwgMykubWFwKCAoIHNhbGVzUGFja2FnZSwgaSkgPT4ge1xuICAgICAgICAgICAgICAgIGxldCBleHRyYVRlcnJpdG9yaWVzID0gKCBzYWxlc1BhY2thZ2UudGVycml0b3JpZXNNZXRob2QgPT09ICdXT1JMRFdJREVfRVhDTFVESU5HJykgPyBzYWxlc1BhY2thZ2UuZXhjbHVkZWRUZXJyaXRvcmllcyA6IHNhbGVzUGFja2FnZS50ZXJyaXRvcmllcztcbiAgICAgICAgICAgICAgICByZXR1cm4gKFxuICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cInNhbGVzLXBhY2thZ2VcIiBrZXk9e1wic3AtXCIrIGl9PlxuXG4gICAgICAgICAgICAgICAgICAgICAgICB7c2FsZXNQYWNrYWdlLmJ1bmRsZU1ldGhvZCA9PT0gXCJTRUxMX0FTX0JVTkRMRVwiICYmIChcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImljb25cIj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGltZyBzcmM9e2ZpeGVkSWNvbn0vPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICAgICAgICAgICAgKX1cblxuICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJuYW1lXCI+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAge3NhbGVzUGFja2FnZS5uYW1lfVxuICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XG5cbiAgICAgICAgICAgICAgICAgICAgICAgIHtleHRyYVRlcnJpdG9yaWVzICYmIGV4dHJhVGVycml0b3JpZXMubGVuZ3RoID4gMyAmJiAoXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJhbGwtdGVycml0b3JpZXNcIj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGEgb25DbGljaz17KGUpID0+IHtzaG93QWxsVGVycml0b3JpZXMoZSxleHRyYVRlcnJpdG9yaWVzKX19PlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAge1wiK1wiICsgKGV4dHJhVGVycml0b3JpZXMubGVuZ3RoIC0gMyl9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvYT5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgICAgICAgICAgICl9XG5cbiAgICAgICAgICAgICAgICAgICAgICAgIHsoc2FsZXNQYWNrYWdlLnNhbGVzTWV0aG9kICE9PSBcIkJJRERJTkdcIiB8fCAgKHNhbGVzUGFja2FnZS5zYWxlc01ldGhvZCA9PT0gXCJCSURESU5HXCIgJiYgc2FsZXNQYWNrYWdlLmZlZSA+IDApKSAmJiAoXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJmZWVcIj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAge2dldEZlZShzYWxlc1BhY2thZ2UpfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICAgICAgICAgICAgKX1cblxuICAgICAgICAgICAgICAgICAgICAgICAge3NhbGVzUGFja2FnZS5zYWxlc01ldGhvZCA9PT0gXCJCSURESU5HXCIgJiYgKFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiaWNvblwiPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aW1nIHNyYz17YmlkSWNvbn0vPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICAgICAgICAgICAgKX1cblxuICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgICApXG4gICAgICAgICAgICB9KX1cbiAgICAgICAgICAgIHtzYWxlc1BhY2thZ2VzLmxlbmd0aCA+IDMgJiYgKFxuICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwic2FsZXMtcGFja2FnZSBzaG93LWFsbFwiPlxuICAgICAgICAgICAgICAgICAgICA8Yj4gKyB7c2FsZXNQYWNrYWdlcy5sZW5ndGggLSAzfSA8L2I+XG4gICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICApIH1cbiAgICAgICAgPC9SZWFjdC5GcmFnbWVudD5cbiAgICApXG59XG5cbmNsYXNzIENvbnRlbnRMaXN0aW5nIGV4dGVuZHMgUmVhY3QuQ29tcG9uZW50e1xuICAgIGNvbnN0cnVjdG9yKHByb3BzKXtcbiAgICAgICAgc3VwZXIocHJvcHMpO1xuXG4gICAgICAgIHRoaXMuc3RhdGUgPSB7XG4gICAgICAgICAgICBidXlpbmdNb2RlIDogZmFsc2UsXG4gICAgICAgICAgICB0ZXJyaXRvcmllc0xpc3Q6IFtdXG4gICAgICAgIH07XG4gICAgICAgIHRoaXMubm9JbWFnZSA9IGFzc2V0c0Jhc2VEaXIgKyBcImFwcC9pbWFnZXMvbm8taW1hZ2UucG5nXCI7XG4gICAgICAgIHRoaXMuYmlkSWNvbiA9IGhhbW1lckljb247XG4gICAgICAgIHRoaXMuZml4ZWRJY29uID0gZml4ZWRJY29uO1xuICAgICAgICB0aGlzLmJsdWVDaGVjayA9IGJsdWVDaGVja0ljb247XG4gICAgICAgIHRoaXMueWVsbG93Q2hlY2sgPSB5ZWxsb3dDaGVja0ljb247XG4gICAgICAgIHRoaXMuYnVja2V0aWNvbiA9IGFzc2V0c0Jhc2VEaXIgKyBcImFwcC9pbWFnZXMvYnVja2V0LnBuZ1wiO1xuICAgIH1cblxuICAgIGdldEZlZSA9IChzYWxlc1BhY2thZ2UpID0+IHtcbiAgICAgICAgY29uc3QgZmVlTnVtYmVyID0gcGFyc2VGbG9hdChzYWxlc1BhY2thZ2UuZmVlKTtcbiAgICAgICAgcmV0dXJuIGZlZU51bWJlci50b0xvY2FsZVN0cmluZygpICsgXCIgXCIgKyB0aGlzLmdldEN1cnJlbmN5U3ltYm9sKCk7XG4gICAgfTtcblxuICAgIGdldEN1cnJlbmN5U3ltYm9sID0gKCkgPT4ge1xuICAgICAgICBjb25zdCB7Y3VycmVuY3l9ID0gdGhpcy5wcm9wcztcbiAgICAgICAgcmV0dXJuIChjdXJyZW5jeSA9PT0gXCJFVVJcIiA/IFwi4oKsXCIgOiBcIiRcIik7XG4gICAgfTtcblxuICAgIG9uU2VsZWN0ID0gKCkgPT4ge1xuICAgICAgY29uc3Qge29uU2VsZWN0LCBjdXN0b21JZH0gPSB0aGlzLnByb3BzO1xuXG4gICAgICBpZiAoIG9uU2VsZWN0ICkgb25TZWxlY3QoY3VzdG9tSWQpO1xuXG4gICAgfTtcblxuICAgIGNvbmZpcm1SZW1vdmVGcm9tV2F0Y2hsaXN0ID0gKGUpID0+e1xuICAgICAgICB0aGlzLnNldFN0YXRlKHtjb25maXJtV2F0Y2hsaXN0UmVtb3ZlIDogdHJ1ZX0pO1xuICAgICAgICBlLnN0b3BQcm9wYWdhdGlvbigpO1xuICAgIH07XG5cbiAgICBjYW5jZWxSZW1vdmVGcm9tV2F0Y2hsaXN0ID0gKGUpID0+e1xuICAgICAgICB0aGlzLnNldFN0YXRlKHtjb25maXJtV2F0Y2hsaXN0UmVtb3ZlIDogZmFsc2V9KTtcbiAgICAgICAgZS5zdG9wUHJvcGFnYXRpb24oKTtcbiAgICB9O1xuXG4gICAgcmVtb3ZlRnJvbVdhdGNobGlzdCA9IChlKSA9PiB7XG4gICAgICAgIGNvbnN0IHtjdXN0b21JZCwgb25XYXRjaGxpc3RSZW1vdmV9ID0gdGhpcy5wcm9wcztcbiAgICAgICAgQ29udGVudEFyZW5hLkFwaS53YXRjaGxpc3QoY3VzdG9tSWQpO1xuXG4gICAgICAgIGlmICggb25XYXRjaGxpc3RSZW1vdmUgKSBvbldhdGNobGlzdFJlbW92ZShjdXN0b21JZCk7XG4gICAgICAgIGUuc3RvcFByb3BhZ2F0aW9uKCk7XG4gICAgfTtcblxuICAgIHNvcnRTYWxlc1BhY2thZ2VzID0gKGEsIGIpID0+IHtcbiAgICAgICAgaWYgKGIudGVycml0b3JpZXNNZXRob2QgPT09XCJXT1JMRFdJREVcIikgcmV0dXJuIC0xO1xuICAgICAgICByZXR1cm4gdGhpcy5jb21wYXJlUHJvcGVydHkoYS50ZXJyaXRvcmllcy5sZW5ndGgsIGIudGVycml0b3JpZXMubGVuZ3RoKVxuICAgICAgICAgICAgfHwgdGhpcy5jb21wYXJlUHJvcGVydHkoYi5uYW1lLCBhLm5hbWUpO1xuICAgIH07XG5cbiAgICBzb3J0QWZ0ZXJGaWx0ZXIgPSAoYSwgYikgPT4ge1xuXG4gICAgICAgIGlmIChiLnRlcnJpdG9yaWVzTWV0aG9kID09PVwiV09STERXSURFXCIpIHtcbiAgICAgICAgICAgIHJldHVybiB0aGlzLmNvbXBhcmVQcm9wZXJ0eShiLnRlcnJpdG9yaWVzLmxlbmd0aCwgYS50ZXJyaXRvcmllcy5sZW5ndGgpXG4gICAgICAgICAgICAgICAgfHwgdGhpcy5jb21wYXJlUHJvcGVydHkoYS5uYW1lLCBiLm5hbWUpO1xuICAgICAgICB9XG5cbiAgICAgICAgcmV0dXJuIHRoaXMuY29tcGFyZVByb3BlcnR5KGEudGVycml0b3JpZXMubGVuZ3RoLCBiLnRlcnJpdG9yaWVzLmxlbmd0aClcbiAgICAgICAgICAgIHx8IHRoaXMuY29tcGFyZVByb3BlcnR5KGEubmFtZSwgYi5uYW1lKTtcbn07XG5cbiAgICBzb3J0QnlGaWx0ZXIgPSAoc2FsZXNQYWNrYWdlcykgPT4ge1xuXG4gICAgICAgIGNvbnN0IHsgZmlsdGVyIH0gPSB0aGlzLnByb3BzO1xuXG4gICAgICAgIGxldCB0ZW1wID0gW10gO1xuICAgICAgICBsZXQgdGVycml0b3JpZXMgPSBmaWx0ZXIuY291bnRyaWVzLm1hcChjID0+IGMpO1xuXG4gICAgICAgIHNhbGVzUGFja2FnZXMuZm9yRWFjaCgoZSxpLGwpPT57XG5cbiAgICAgICAgICAgIGxldCB0ID0gZS50ZXJyaXRvcmllcy5tYXAodD0+dC52YWx1ZSk7XG4gICAgICAgICAgICBsZXQgZXQgPSAoZS50ZXJyaXRvcmllc01ldGhvZCA9PT0gXCJXT1JMRFdJREVfRVhDTFVESU5HXCIpID8gZS5leGNsdWRlZFRlcnJpdG9yaWVzLm1hcCh0PT50LnZhbHVlKSA6IFtdO1xuICAgICAgICAgICAgbGV0IGFsbCA9IFsuLi50LC4uLmV0XTtcbiAgICAgICAgICAgIGxldCBpbmNsdWRlID0gZmFsc2U7XG5cbiAgICAgICAgICAgIHRlcnJpdG9yaWVzLmZvckVhY2godCA9PntcbiAgICAgICAgICAgICAgICBpZiAoIGFsbC5pbmRleE9mKHQpICE9PSAtMSApIGluY2x1ZGUgPSB0cnVlO1xuICAgICAgICAgICAgfSk7XG5cbiAgICAgICAgICAgIGlmICggZS5idW5kbGVNZXRob2QgPT09IFwiU0VMTF9BU19CVU5ETEVcIiAmJiBlLnRlcnJpdG9yaWVzTWV0aG9kID09PSBcIldPUkxEV0lERVwiKSB7XG4gICAgICAgICAgICAgICAgaW5jbHVkZSA9IHRydWU7XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIGlmICggaW5jbHVkZSkge1xuICAgICAgICAgICAgICAgIHRlbXAucHVzaChlKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSk7XG5cbiAgICAgICAgcmV0dXJuIFsuLi50ZW1wXTtcbiAgICB9O1xuXG4gICAgY29tcGFyZVByb3BlcnR5ID0gKGEsIGIpID0+ICB7XG4gICAgICAgIHJldHVybiAoYSA+IGIpID8gMSA6ICgoYiA+IGEpID8gLTEgOiAwKVxuICAgIH07XG5cbiAgICBjbG9zZVRlcnJpdG9yaWVzTW9kYWwgPSAoZSkgPT4ge1xuICAgICAgICBlLnN0b3BQcm9wYWdhdGlvbigpO1xuICAgICAgICB0aGlzLnNldFN0YXRlKHsgc2hvd0FsbFRlcnJpdG9yaWVzOiBmYWxzZX0pO1xuICAgIH07XG5cbiAgICBzaG93QWxsVGVycml0b3JpZXMgPSAoZSxleHRyYVRlcnJpdG9yaWVzKSA9PiB7XG4gICAgICAgIGUuc3RvcFByb3BhZ2F0aW9uKCk7XG4gICAgICAgIHRoaXMuc2V0U3RhdGUoe1xuICAgICAgICAgICAgc2hvd0FsbFRlcnJpdG9yaWVzIDogdHJ1ZSxcbiAgICAgICAgICAgIHRlcnJpdG9yaWVzTGlzdCA6IGV4dHJhVGVycml0b3JpZXNcbiAgICAgICAgfSlcbiAgICB9O1xuXG4gICAgYWxsVGVycml0b3JpZXMgPSAoKSA9PiB7XG5cbiAgICAgICAgcmV0dXJuIDxNb2RhbFxuICAgICAgICAgICAgaXNPcGVuPXt0aGlzLnN0YXRlLnNob3dBbGxUZXJyaXRvcmllc31cbiAgICAgICAgICAgIG9uUmVxdWVzdENsb3NlPXt0aGlzLmNsb3NlVGVycml0b3JpZXNNb2RhbH1cbiAgICAgICAgICAgIGJvZHlPcGVuQ2xhc3NOYW1lPXtcInNlbGVjdG9yXCJ9XG4gICAgICAgICAgICBzdHlsZT17Y3VzdG9tU3R5bGVzfVxuICAgICAgICA+XG5cbiAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwibW9kYWwtaW5uZXJcIj5cbiAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgIHRoaXMuc3RhdGUudGVycml0b3JpZXNMaXN0Lm1hcCh0ZXJyaXRvcnkgPT57XG4gICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gPGRpdiBjbGFzc05hbWU9XCJjb3VudHJ5LW1vZGFsXCI+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAge3RlcnJpdG9yeS5sYWJlbCAmJiB0ZXJyaXRvcnkubGFiZWx9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAge3RlcnJpdG9yeS5uYW1lICYmIHRlcnJpdG9yeS5uYW1lfVxuICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgICAgICAgIH0pXG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgPC9kaXY+XG5cbiAgICAgICAgPC9Nb2RhbD5cbiAgICB9O1xuXG4gICAgcmVuZGVyKCl7XG4gICAgICAgIGNvbnN0IHtcbiAgICAgICAgICAgIG5hbWUsXG4gICAgICAgICAgICBleHBpcmVzQXQsXG4gICAgICAgICAgICBQUk9HUkFNX05BTUUsXG4gICAgICAgICAgICBvblNlbGVjdE5hbWUsXG4gICAgICAgICAgICBpbWFnZUJhc2U2NCxcbiAgICAgICAgICAgIGltYWdlLFxuICAgICAgICAgICAgZmlsdGVyLFxuICAgICAgICAgICAgc29ydFNhbGVzUGFja2FnZXMsXG4gICAgICAgICAgICB3YXRjaGxpc3RSZW1vdmUsXG4gICAgICAgICAgICBjb21wYW55LFxuICAgICAgICAgICAgZGVmYXVsdFJpZ2h0c1BhY2thZ2UsXG4gICAgICAgICAgICByaWdodHNQYWNrYWdlLFxuICAgICAgICAgICAgb3duZXIsXG4gICAgICAgICAgICBiaWQsXG4gICAgICAgICAgICBkZWNsaW5lZCxcbiAgICAgICAgICAgIGN1c3RvbUlkXG4gICAgICAgIH0gPSB0aGlzLnByb3BzO1xuICAgICAgICBjb25zdCB7Y29uZmlybVdhdGNobGlzdFJlbW92ZX0gPSB0aGlzLnN0YXRlO1xuXG4gICAgICAgIGxldCBzYWxlc1BhY2thZ2VzID0gdGhpcy5wcm9wcy5zYWxlc1BhY2thZ2VzO1xuICAgICAgICBsZXQgbGlzdGluZ0ltYWdlID0gKGltYWdlQmFzZTY0KSA/IGltYWdlQmFzZTY0IDogaW1hZ2UgPyBhc3NldHNCYXNlRGlyICsgXCIuLi9cIiArIGltYWdlIDogdGhpcy5ub0ltYWdlO1xuXG4gICAgICAgIGlmICggZmlsdGVyICYmIGZpbHRlci5jb3VudHJpZXMubGVuZ3RoID4gMCAmJiBzb3J0U2FsZXNQYWNrYWdlcykge1xuICAgICAgICAgICAgc2FsZXNQYWNrYWdlcyA9IHRoaXMuc29ydEJ5RmlsdGVyKHNhbGVzUGFja2FnZXMpO1xuICAgICAgICAgICAgc2FsZXNQYWNrYWdlcy5zb3J0KHRoaXMuc29ydEFmdGVyRmlsdGVyKTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIHNhbGVzUGFja2FnZXMuc29ydCh0aGlzLnNvcnRTYWxlc1BhY2thZ2VzKS5yZXZlcnNlKCk7XG4gICAgICAgIH1cblxuICAgICAgICByZXR1cm4gKFxuICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJsaXN0aW5nLWxpc3Qtdmlld1wiIG9uQ2xpY2s9e3RoaXMub25TZWxlY3R9PlxuICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPXtcImxlZnRcIn0gID5cbiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9e1wiaW1hZ2VcIn0+XG4gICAgICAgICAgICAgICAgICAgICAgICA8aW1nIHNyYz17bGlzdGluZ0ltYWdlfS8+XG4gICAgICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPXtcInJpZ2h0XCJ9ID5cbiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJuYW1lLXdyYXBwZXJcIj5cbiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPXtcIm5hbWVcIn0gb25DbGljaz17KCkgPT4geyBpZiAob25TZWxlY3ROYW1lKSBvblNlbGVjdE5hbWUoKSB9fT5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB7bmFtZX1cbiAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxuXG4gICAgICAgICAgICAgICAgICAgICAgICB7Y29tcGFueSAmJiAoXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJjb21wYW55LW5hbWVcIj57Y29pbkljb259IHtjb21wYW55LmxlZ2FsTmFtZX08L2Rpdj5cbiAgICAgICAgICAgICAgICAgICAgICAgICl9XG4gICAgICAgICAgICAgICAgICAgIDwvZGl2PlxuXG4gICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwibGlzdGluZy13cmFwcGVyXCI+XG4gICAgICAgICAgICAgICAgICAgICAgICA8Q29udGVudExpc3RpbmdFdmVudERldGFpbHMgey4uLnRoaXMucHJvcHN9IC8+XG5cbiAgICAgICAgICAgICAgICAgICAgICAgIDxDb250ZW50TGlzdGluZ1JpZ2h0c1BhY2thZ2VcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICByaWdodHNQYWNrYWdlPXtyaWdodHNQYWNrYWdlfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRlZmF1bHRSaWdodHNQYWNrYWdlPXtkZWZhdWx0UmlnaHRzUGFja2FnZX1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBwcm9ncmFtTmFtZT17UFJPR1JBTV9OQU1FfVxuICAgICAgICAgICAgICAgICAgICAgICAgLz5cbiAgICAgICAgICAgICAgICAgICAgPC9kaXY+XG5cbiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJzYWxlcy1idW5kbGVzLXdyYXBwZXJcIj5cbiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPXtcInNhbGVzLWJ1bmRsZXNcIn0+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPFNhbGVzUGFja2FnZXNcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc2FsZXNQYWNrYWdlcz17c2FsZXNQYWNrYWdlc31cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZ2V0RmVlPXt0aGlzLmdldEZlZX1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc2hvd0FsbFRlcnJpdG9yaWVzPXt0aGlzLnNob3dBbGxUZXJyaXRvcmllc31cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAvPlxuICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgICAgICAgICAgICB7ZXhwaXJlc0F0ICYmIChcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImV4cGlyZXNcIj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgRXhwaXJ5OiA8Yj57TW9tZW50KGV4cGlyZXNBdCkuZm9ybWF0KCdNTS9ERC9ZWVlZJyl9PC9iPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICAgICAgICAgICAgKX1cbiAgICAgICAgICAgICAgICAgICAgPC9kaXY+XG5cbiAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgICB7d2F0Y2hsaXN0UmVtb3ZlICYmIChcbiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJ3YXRjaGxpc3Qtb3B0aW9ucyBhZGRpdGlvbmFsXCI+XG4gICAgICAgICAgICAgICAgICAgICAgICB7Y29uZmlybVdhdGNobGlzdFJlbW92ZSA/IChcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cIndyYXBwZXJcIj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHt0aGlzLmNvbnRleHQudChcIldBVENITElTVF9SRU1PVkVfQ09ORklSTUFUSU9OXCIpfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGJ1dHRvbiB0eXBlPVwiYnV0dG9uXCIgY2xhc3NOYW1lPVwiY2EtYnRuIGNhLWJ0bi1wcmltYXJ5IGNhLWJ0bi1zbWFsbFwiIG9uQ2xpY2s9e3RoaXMucmVtb3ZlRnJvbVdhdGNobGlzdH0+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB7dGhpcy5jb250ZXh0LnQoXCJZZXNcIil9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2J1dHRvbj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGJ1dHRvbiB0eXBlPVwiYnV0dG9uXCIgY2xhc3NOYW1lPVwiY2EtYnRuIGNhLWJ0bi1kYW5nZXIgY2EtYnRuLXNtYWxsXCIgb25DbGljaz17dGhpcy5jYW5jZWxSZW1vdmVGcm9tV2F0Y2hsaXN0fT5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHt0aGlzLmNvbnRleHQudChcIkNhbmNlbFwiKX1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9idXR0b24+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgICAgICAgICAgICApIDogKFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXY+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpIGNsYXNzTmFtZT1cImZhIGZhLXRyYXNoLW8gaWNvblwiIGFyaWEtaGlkZGVuPVwidHJ1ZVwiXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG9uQ2xpY2s9e3RoaXMuY29uZmlybVJlbW92ZUZyb21XYXRjaGxpc3R9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHtvd25lciAmJiAoXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cIm93bmVyXCI+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAge3RoaXMuY29udGV4dC50KFwiUGxhY2VkIGJ5XCIpfSA8Yj57b3duZXIuZmlyc3ROYW1lfSB7b3duZXIubGFzdE5hbWV9PC9iPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICl9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XG5cbiAgICAgICAgICAgICAgICAgICAgICAgICl9XG4gICAgICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICAgICl9XG5cbiAgICAgICAgICAgICAgICB7LypCSUQgT1BUSU9OUyovfVxuICAgICAgICAgICAgICAgIHtiaWQgJiYgKFxuICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImJpZHMtb3B0aW9ucyBhZGRpdGlvbmFsXCI+XG4gICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cIndyYXBwZXJcIj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImJpZC1zYWxlcy13cmFwXCI+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxTYWxlc1BhY2thZ2VzXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzYWxlc1BhY2thZ2VzPXtiaWQuc2FsZXNQYWNrYWdlfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZ2V0RmVlPXt0aGlzLmdldEZlZX1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNob3dBbGxUZXJyaXRvcmllcz17dGhpcy5zaG93QWxsVGVycml0b3JpZXN9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XG5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImJpZC1wcmljZVwiPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB7cGFyc2VGbG9hdChiaWQuYW1vdW50KS50b0xvY2FsZVN0cmluZygpfSB7Z2V0Q3VycmVuY3lTeW1ib2woYmlkLnNhbGVzUGFja2FnZS5jdXJyZW5jeS5jb2RlKX1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cblxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiYmlkLWFjdGlvbnNcIj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAge2JpZC5zdGF0dXMubmFtZSA9PT0gXCJFRElURURcIiAmJiAoXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8VG9vbHRpcFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlkPVwiU3RhdHVzVG9vbHRpcFwiXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaWNvbj17XCJiaWQtaWNvbiBzdGF0dXMgZmEgZmEtaW5mby1jaXJjbGVcIn1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0ZXh0PXt0aGlzLmNvbnRleHQudChcIlBFTkRJTkdfQklEU19UT09MVElQX0xJU1RJTkdfRURJVEVEXCIpfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgLz5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgKX1cblxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB7KCAhZGVjbGluZWQgfHwgKGRlY2xpbmVkICYmIGJpZC5zdGF0dXMubmFtZSA9PT0gXCJSRUpFQ1RFRFwiICYmICFiaWQuc2FsZXNQYWNrYWdlLnNvbGQpICkgJiYgKFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGEgY2xhc3NOYW1lPVwiY2EtYnRuIGNhLWJ0bi1wcmltYXJ5XCJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGhyZWY9e2Vudmhvc3R1cmwgKyBcImxpc3RpbmcvXCIgKyBjdXN0b21JZCArIFwiL2NoZWNrb3V0L1wiICsgYmlkLnNhbGVzUGFja2FnZS5pZH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgID5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB7dGhpcy5jb250ZXh0LnQoXCJJbmNyZWFzZSBiaWRcIil9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2E+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICl9XG5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAge2JpZC5tZXNzYWdlICYmIGJpZC5tZXNzYWdlICE9PSBcIlwiICYmIChcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxUb29sdGlwXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgb25DbGljaz17KGUpID0+IHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZS5zdG9wUHJvcGFnYXRpb24oKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgd2luZG93LmxvY2F0aW9uLmhyZWYgPSBgL3JlZGlyZWN0LWludGVncmF0aW9uL21lc3NhZ2VzLWJ5LWJpZC8ke2JpZC5pZH1gO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH19XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaWQ9XCJNZXNzYWdlVG9vbHRpcFwiXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaWNvbj17XCJiaWQtaWNvbiBtZXNzYWdlIGZhIGZhLWVudmVsb3BlXCJ9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdGV4dD17YmlkLm1lc3NhZ2V9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAvPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICApfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxuXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJiaWQtYXV0aG9yXCI+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXY+e01vbWVudChiaWQuY3JlYXRlZEF0KS5mb3JtYXQoJ0REL01NL1lZWVknKX08L2Rpdj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAge3RoaXMuY29udGV4dC50KFwiUGxhY2VkIGJ5OlwiKX0gPGI+e2JpZC5idXllclVzZXIuZmlyc3ROYW1lICsgXCIgXCIgKyBiaWQuYnV5ZXJVc2VyLmxhc3ROYW1lfTwvYj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cblxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHtiaWQuc3RhdHVzLm5hbWUgPT09IFwiUkVKRUNURURcIiAmJiAoXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiYmlkLXJlbW92ZVwiXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgb25DbGljaz17KGUpPT57dGhpcy5zZXRTdGF0ZSh7c2hvd1JlbW92ZUNvbmZpcm06IHRydWV9KTtlLnN0b3BQcm9wYWdhdGlvbigpO319XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgID5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpbWcgc3JjPXtidWNrZXRJY29ufS8+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICl9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgey8qQ09ORklSTSBSRU1PVkUqL31cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB7dGhpcy5zdGF0ZS5zaG93UmVtb3ZlQ29uZmlybSAmJiAoXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiY29uZmlybWF0aW9uLXRvb2x0aXBcIj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPXtcImNvbmZpcm1hdGlvbi10ZXh0XCJ9PlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHt0aGlzLmNvbnRleHQudChcIlBFTkRJTkdfQklEU19SRU1PVkVfVElUTEVcIil9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxidXR0b24gY2xhc3NOYW1lPXtcImJ1dHRvbiBidXR0b24tY29uZmlybVwifSBvbkNsaWNrPXsoZSk9PntcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0aGlzLnNldFN0YXRlKHtzaG93UmVtb3ZlQ29uZmlybTogZmFsc2V9KTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBvbkRlbGV0ZShiaWQuaWQpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGUuc3RvcFByb3BhZ2F0aW9uKCk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9fT5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB7dGhpcy5jb250ZXh0LnQoXCJQRU5ESU5HX0JJRFNfUkVNT1ZFX0JVVFRPTl9DT05GSVJNXCIpfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9idXR0b24+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YnV0dG9uIGNsYXNzTmFtZT17XCJidXR0b25cIn0gb25DbGljaz17KGUpPT57XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5zZXRTdGF0ZSh7c2hvd1JlbW92ZUNvbmZpcm06IGZhbHNlfSk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZS5zdG9wUHJvcGFnYXRpb24oKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH19PlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHt0aGlzLmNvbnRleHQudChcIlBFTkRJTkdfQklEU19SRU1PVkVfQlVUVE9OX0NBTkNFTFwiKX1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvYnV0dG9uPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICApfVxuICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICAgICl9XG4gICAgICAgICAgICAgICAgeyB0aGlzLmFsbFRlcnJpdG9yaWVzKCkgfVxuICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgIClcbiAgICB9XG59XG5cbkNvbnRlbnRMaXN0aW5nLmNvbnRleHRUeXBlcyA9IHtcbiAgICB0OiBQcm9wVHlwZXMuZnVuYy5pc1JlcXVpcmVkXG59O1xuXG5leHBvcnQgZGVmYXVsdCBDb250ZW50TGlzdGluZztcblxuXG5cblxuLy8gV0VCUEFDSyBGT09URVIgLy9cbi8vIC4vc3JjL0FwcEJ1bmRsZS9SZXNvdXJjZXMvcHVibGljL2phdmFzY3JpcHQvbWFpbi9jb21wb25lbnRzL0NvbnRlbnRMaXN0aW5nLmpzIiwiaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCBNb21lbnQgZnJvbSBcIm1vbWVudC9tb21lbnRcIjtcbmltcG9ydCBDb250ZW50TGlzdGluZ0V2ZW50RGV0YWlscyBmcm9tIFwiLi4vLi4vYnV5L2NvbXBvbmVudHMvQ29udGVudExpc3RpbmdFdmVudERldGFpbHNcIjtcbmltcG9ydCBDb250ZW50TGlzdGluZ1JpZ2h0c1BhY2thZ2UgZnJvbSBcIi4uLy4uL2J1eS9jb21wb25lbnRzL0NvbnRlbnRMaXN0aW5nUmlnaHRzUGFja2FnZVwiO1xuaW1wb3J0IENvbW1lcmNpYWxTYWxlc0J1bmRsZSBmcm9tIFwiLi4vLi4vbWFpbi9jb21wb25lbnRzL0NvbW1lcmNpYWxTYWxlc0J1bmRsZVwiO1xuaW1wb3J0IENvbnRlbnRMaXN0aW5nIGZyb20gXCIuL0NvbnRlbnRMaXN0aW5nXCI7XG5pbXBvcnQge2dldEN1cnJlbmN5U3ltYm9sfSBmcm9tIFwiLi4vYWN0aW9ucy91dGlsc1wiO1xuaW1wb3J0IHthZGRJY29uLCBjYW5jZWxJY29ufSBmcm9tIFwiLi9JY29uc1wiO1xuaW1wb3J0IHtQcm9wVHlwZXN9IGZyb20gXCJwcm9wLXR5cGVzXCI7XG5cbmNsYXNzIENvbnRlbnRMaXN0aW5nQ29tbWVyY2lhbEFjdGl2aXR5IGV4dGVuZHMgQ29udGVudExpc3Rpbmcge1xuICAgIGNvbnN0cnVjdG9yKHByb3BzKXtcbiAgICAgICAgc3VwZXIocHJvcHMpO1xuXG4gICAgICAgIHRoaXMuc3RhdGUgPSB7XG4gICAgICAgICAgICBzaG93U2FsZXNQYWNrYWdlIDogcHJvcHMuYnVuZGxlc09wZW5cbiAgICAgICAgfTtcbiAgICAgICAgdGhpcy5ub0ltYWdlID0gYXNzZXRzQmFzZURpciArIFwiYXBwL2ltYWdlcy9uby1pbWFnZS5wbmdcIjtcbiAgICAgICAgdGhpcy5iaWRJY29uID0gYXNzZXRzQmFzZURpciArIFwiYXBwL2ltYWdlcy9oYW1tZXIucG5nXCI7XG4gICAgICAgIHRoaXMuZml4ZWRJY29uID0gYXNzZXRzQmFzZURpciArIFwiYXBwL2ltYWdlcy9iaWQucG5nXCI7XG4gICAgICAgIHRoaXMuYmx1ZUNoZWNrID0gYXNzZXRzQmFzZURpciArIFwiYXBwL2ltYWdlcy9ibHVlX2NoZWNrLnBuZ1wiO1xuICAgICAgICB0aGlzLnllbGxvd0NoZWNrID0gYXNzZXRzQmFzZURpciArIFwiYXBwL2ltYWdlcy95ZWxsb3dfY2hlY2gucG5nXCI7XG4gICAgICAgIHRoaXMuYnVja2V0aWNvbiA9IGFzc2V0c0Jhc2VEaXIgKyBcImFwcC9pbWFnZXMvYnVja2V0LnBuZ1wiO1xuICAgICAgICB0aGlzLmV4Y2xhbWF0aW9uSWNvbiA9IGFzc2V0c0Jhc2VEaXIgKyBcImFwcC9pbWFnZXMvRXhjbGFtYXRpb24ucG5nXCI7XG4gICAgICAgIHRoaXMuZW52ZWxvcGVJY29uID0gYXNzZXRzQmFzZURpciArIFwiYXBwL2ltYWdlcy9lbnZlbG9wZV8yLnBuZ1wiO1xuICAgIH1cblxuICAgIHNvcnRTYWxlc1BhY2thZ2VzID0gKGEsIGIpID0+IHtcblxuICAgICAgICBsZXQgYU9wZW4gPSBhLmJpZHMuZmlsdGVyKGJpZD0+YmlkLnN0YXR1cy5uYW1lPT09IFwiUEVORElOR1wiKS5sZW5ndGggPiAwO1xuICAgICAgICBsZXQgYk9wZW4gPSBiLmJpZHMuZmlsdGVyKGJpZD0+YmlkLnN0YXR1cy5uYW1lPT09IFwiUEVORElOR1wiKS5sZW5ndGggPiAwO1xuICAgICAgICBsZXQgYUNsb3NlZCA9IGEuYmlkcy5maWx0ZXIoYmlkPT5iaWQuc3RhdHVzLm5hbWU9PT0gXCJBUFBST1ZFRFwiKS5sZW5ndGggPiAwO1xuICAgICAgICBsZXQgYkNsb3NlZCA9IGIuYmlkcy5maWx0ZXIoYmlkPT5iaWQuc3RhdHVzLm5hbWU9PT0gXCJBUFBST1ZFRFwiKS5sZW5ndGggPiAwO1xuICAgICAgICBsZXQgYVdvcmxkd2lkZSA9IGEudGVycml0b3JpZXNNZXRob2QgPT09XCJXT1JMRFdJREVcIjtcbiAgICAgICAgbGV0IGJXb3JsZHdpZGUgPSBiLnRlcnJpdG9yaWVzTWV0aG9kID09PVwiV09STERXSURFXCI7XG5cbiAgICAgICAgbGV0IG9wZW4gPSAoICFhT3BlbiAmJiBiT3BlbiApID8gMSA6ICgoIWJPcGVuICYmIGFPcGVuKSA/IC0xIDogMCk7XG4gICAgICAgIGxldCBjbG9zZWQgPSAoICFhQ2xvc2VkICYmIGJDbG9zZWQgKSA/IDEgOiAoKCFiQ2xvc2VkICYmIGFDbG9zZWQpID8gLTEgOiAwKTtcbiAgICAgICAgbGV0IHdvcmxkd2lkZSA9ICggIWFXb3JsZHdpZGUgJiYgYldvcmxkd2lkZSApID8gMSA6ICgoIWJXb3JsZHdpZGUgJiYgYVdvcmxkd2lkZSkgPyAtMSA6IDApO1xuXG4gICAgICAgIHJldHVybiBvcGVuIHx8IGNsb3NlZCB8fCB3b3JsZHdpZGUgfHx0aGlzLmNvbXBhcmVQcm9wZXJ0eShiLnRlcnJpdG9yaWVzLmxlbmd0aCwgYS50ZXJyaXRvcmllcy5sZW5ndGgpXG4gICAgICAgICAgICB8fCB0aGlzLmNvbXBhcmVQcm9wZXJ0eShiLm5hbWUsIGEubmFtZSk7XG4gICAgfTtcblxuICAgIGNvbXBhcmVQcm9wZXJ0eSA9IChhLCBiKSA9PiAge1xuICAgICAgICByZXR1cm4gKGEgPiBiKSA/IDEgOiAoKGIgPiBhKSA/IC0xIDogMClcbiAgICB9O1xuXG4gICAgcmVuZGVyKCl7XG4gICAgICAgIGNvbnN0IHtcbiAgICAgICAgICAgIG5hbWUsXG4gICAgICAgICAgICBvbkRlbGV0ZSxcbiAgICAgICAgICAgIG9uVXBkYXRlLFxuICAgICAgICAgICAgaGlkZVdpdGhvdXRCaWRzLFxuICAgICAgICAgICAgZmlsdGVyQnlPcGVuQmlkcyxcbiAgICAgICAgICAgIGZpbHRlckJ5Q2xvc2VkRGVhbHMsXG4gICAgICAgICAgICBiaWRzT3BlbixcbiAgICAgICAgICAgIHJpZ2h0c1BhY2thZ2UsXG4gICAgICAgICAgICBpbWFnZUJhc2U2NCxcbiAgICAgICAgICAgIGltYWdlLFxuICAgICAgICAgICAgY29tcGFueSxcbiAgICAgICAgICAgIGlkLFxuICAgICAgICB9ID0gdGhpcy5wcm9wcztcblxuICAgICAgICBjb25zdCB7c2hvd1NhbGVzUGFja2FnZX0gPSB0aGlzLnN0YXRlO1xuXG4gICAgICAgIGxldCBzYWxlc1BhY2thZ2VzID0gdGhpcy5wcm9wcy5zYWxlc1BhY2thZ2VzO1xuICAgICAgICBzYWxlc1BhY2thZ2VzLnNvcnQodGhpcy5zb3J0U2FsZXNQYWNrYWdlcyk7XG5cbiAgICAgICAgbGV0IGxpc3RpbmdJbWFnZSA9IChpbWFnZUJhc2U2NCkgPyBpbWFnZUJhc2U2NCA6IGltYWdlID8gYXNzZXRzQmFzZURpciArIFwiLi4vXCIgKyBpbWFnZSA6IHRoaXMubm9JbWFnZTtcbiAgICAgICAgbGV0IGJpZHMgPSBzYWxlc1BhY2thZ2VzLnJlZHVjZSgodCwgc3ApPT50LmNvbmNhdChzcC5iaWRzKSxbXSk7XG4gICAgICAgIGxldCBjbG9zZWREZWFscyA9IGJpZHMuZmlsdGVyKGI9PmIuc3RhdHVzLm5hbWUgPT09IFwiQVBQUk9WRURcIik7XG4gICAgICAgIGxldCBvcGVuQmlkcyA9IGJpZHMuZmlsdGVyKGI9PmIuc3RhdHVzLm5hbWUgPT09IFwiUEVORElOR1wiKTtcbiAgICAgICAgbGV0IHRvdGFsID0gKGNsb3NlZERlYWxzLmxlbmd0aCA+IDAgKSA/IGNsb3NlZERlYWxzLm1hcChiPT5OdW1iZXIoYi50b3RhbEZlZSkpLnJlZHVjZSgodCxuKT0+dCtuKSA6IDA7XG4gICAgICAgIHJldHVybiAoXG4gICAgICAgICAgICA8ZGl2IHN0eWxlPXt7ZGlzcGxheSA6ICdmbGV4JywgZmxleERpcmVjdGlvbjogJ2NvbHVtbicsIG1hcmdpbkJvdHRvbTogMjB9fT5cbiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImxpc3RpbmctbGlzdC12aWV3XCIgc3R5bGU9e3twYWRkaW5nOiAwLCBtYXJnaW5Cb3R0b206IDAgfX0+XG4gICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPXtcImxlZnRcIn0gc3R5bGU9e3twYWRkaW5nOiAyNX19ID5cbiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPXtcImltYWdlXCJ9PlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpbWcgc3JjPXtsaXN0aW5nSW1hZ2V9Lz5cbiAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9e1wicmlnaHRcIn0gIHN0eWxlPXt7cGFkZGluZzonMjVweCAwJ319PlxuICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9e1wibmFtZVwifSBvbkNsaWNrPXt0aGlzLm9uU2VsZWN0fT57bmFtZX08L2Rpdj5cblxuICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJsaXN0aW5nLXdyYXBwZXJcIj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8Q29udGVudExpc3RpbmdFdmVudERldGFpbHMgey4uLnRoaXMucHJvcHN9IC8+XG5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8Q29udGVudExpc3RpbmdSaWdodHNQYWNrYWdlIHJpZ2h0c1BhY2thZ2U9e3JpZ2h0c1BhY2thZ2V9Lz5cbiAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgICAgICAgey8qQklEIERFVEFJTFMqL31cbiAgICAgICAgICAgICAgICAgICAgPGRpdiAgY2xhc3NOYW1lPXtcImJpZC1saXN0aW5nLWRldGFpbHNcIn0+XG4gICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT17XCJpdGVtXCJ9PlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXY+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHt0aGlzLmNvbnRleHQudChbXCJjbG9zZWQgZGVhbFwiLCBcImNsb3NlZCBkZWFsc1wiLCBcIm5cIl0sIHtuIDogY2xvc2VkRGVhbHMubGVuZ3RofSl9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPXtcIml0ZW1cIn0+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAge3RoaXMuY29udGV4dC50KFtcIm9wZW4gYmlkXCIsXCJvcGVuIGJpZHNcIiwgXCJuXCJdLCB7biA6IG9wZW5CaWRzLmxlbmd0aH0pfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgICAgICAgICAgICB7Ymlkcy5sZW5ndGggPiAwICYmIDxkaXYgY2xhc3NOYW1lPXtcIml0ZW1cIn0gc3R5bGU9e3tmb250V2VpZ2h0OjYwMH19PlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXY+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHt0aGlzLmNvbnRleHQudChcIkNvbW1lcmNpYWwgQWN0aXZpdHkgVG90YWwgLSB7bn1cIiwge24gOiB0b3RhbC50b0xvY2FsZVN0cmluZyhcImVuXCIsIHsgbWF4aW11bUZyYWN0aW9uRGlnaXRzOiAyIH0pfSl9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHtnZXRDdXJyZW5jeVN5bWJvbChzYWxlc1BhY2thZ2VzWzBdLmN1cnJlbmN5LmNvZGUpfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+fVxuXG4gICAgICAgICAgICAgICAgICAgICAgICB7Ymlkcy5sZW5ndGggPiAwICYmIDxkaXYgY2xhc3NOYW1lPVwic2hvdy1idW5kbGVcIiBvbkNsaWNrPXsoKT0+e3RoaXMuc2V0U3RhdGUoe3Nob3dTYWxlc1BhY2thZ2U6ICFzaG93U2FsZXNQYWNrYWdlfSl9fT5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB7IXNob3dTYWxlc1BhY2thZ2UgJiYgXCJTaG93IHNhbGVzIGJ1bmRsZVwifVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHtzaG93U2FsZXNQYWNrYWdlICYmIFwiSGlkZSBzYWxlcyBidW5kbGVcIn1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB7IXNob3dTYWxlc1BhY2thZ2UgJiYgPGltZyBzcmM9e2FkZEljb259Lz59XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAge3Nob3dTYWxlc1BhY2thZ2UgJiYgPGltZyBzcmM9e2NhbmNlbEljb259Lz59XG4gICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj59XG4gICAgICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICAgIHtzaG93U2FsZXNQYWNrYWdlICYmIHNhbGVzUGFja2FnZXMubWFwKChzYiwgaSApPT57XG5cbiAgICAgICAgICAgICAgICAgICAgbGV0IGNsb3NlZD0gc2IuYmlkcy5maWx0ZXIoYj0+Yi5zdGF0dXMubmFtZSA9PT0gXCJBUFBST1ZFRFwiKTtcbiAgICAgICAgICAgICAgICAgICAgbGV0IG9wZW4gPSBzYi5iaWRzLmZpbHRlcihiPT5iLnN0YXR1cy5uYW1lID09PSBcIlBFTkRJTkdcIik7XG5cblxuXG4gICAgICAgICAgICAgICAgICAgIGlmIChoaWRlV2l0aG91dEJpZHMgJiYgc2IuYmlkcy5sZW5ndGggPT09IDAgKSByZXR1cm47XG4gICAgICAgICAgICAgICAgICAgIGlmIChmaWx0ZXJCeU9wZW5CaWRzICYmIG9wZW4ubGVuZ3RoID09PSAwICkgcmV0dXJuO1xuICAgICAgICAgICAgICAgICAgICBpZiAoZmlsdGVyQnlDbG9zZWREZWFscyAmJiBjbG9zZWQubGVuZ3RoID09PSAwICkgcmV0dXJuO1xuXG4gICAgICAgICAgICAgICAgICAgIHJldHVybiA8Q29tbWVyY2lhbFNhbGVzQnVuZGxlXG4gICAgICAgICAgICAgICAgICAgICAgICBvblVwZGF0ZT17b25VcGRhdGV9XG4gICAgICAgICAgICAgICAgICAgICAgICBvbkRlbGV0ZT17b25EZWxldGV9XG4gICAgICAgICAgICAgICAgICAgICAgICBzYWxlc0J1bmRsZT17c2J9XG4gICAgICAgICAgICAgICAgICAgICAgICBiaWRzT3Blbj17Ymlkc09wZW59XG4gICAgICAgICAgICAgICAgICAgICAgICBjb21wYW55PXtjb21wYW55fVxuICAgICAgICAgICAgICAgICAgICAgICAgY29udGVudElkPXtpZH1cbiAgICAgICAgICAgICAgICAgICAgICAgIGtleT17aX0vPlxuICAgICAgICAgICAgICAgIH0pfVxuICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgIClcbiAgICB9XG59XG5Db250ZW50TGlzdGluZ0NvbW1lcmNpYWxBY3Rpdml0eS5jb250ZXh0VHlwZXMgPSB7XG4gICAgdDogUHJvcFR5cGVzLmZ1bmMuaXNSZXF1aXJlZFxufTtcblxuZXhwb3J0IGRlZmF1bHQgQ29udGVudExpc3RpbmdDb21tZXJjaWFsQWN0aXZpdHk7XG5cblxuXG4vLyBXRUJQQUNLIEZPT1RFUiAvL1xuLy8gLi9zcmMvQXBwQnVuZGxlL1Jlc291cmNlcy9wdWJsaWMvamF2YXNjcmlwdC9tYWluL2NvbXBvbmVudHMvQ29udGVudExpc3RpbmdDb21tZXJjaWFsQWN0aXZpdHkuanMiLCJpbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xuaW1wb3J0IE1vbWVudCBmcm9tIFwibW9tZW50L21vbWVudFwiO1xuaW1wb3J0IENvbnRlbnRMaXN0aW5nRXZlbnREZXRhaWxzIGZyb20gXCIuLi8uLi9idXkvY29tcG9uZW50cy9Db250ZW50TGlzdGluZ0V2ZW50RGV0YWlsc1wiO1xuaW1wb3J0IENvbnRlbnRMaXN0aW5nUmlnaHRzUGFja2FnZSBmcm9tIFwiLi4vLi4vYnV5L2NvbXBvbmVudHMvQ29udGVudExpc3RpbmdSaWdodHNQYWNrYWdlXCI7XG5pbXBvcnQgQ29udGVudExpc3RpbmcgZnJvbSBcIi4vQ29udGVudExpc3RpbmdcIjtcbmltcG9ydCBTZW5kTWVzc2FnZSBmcm9tIFwiLi4vLi4vbWFpbi9jb21wb25lbnRzL1NlbmRNZXNzYWdlXCI7XG5pbXBvcnQge2dldEN1cnJlbmN5U3ltYm9sfSBmcm9tIFwiLi4vYWN0aW9ucy91dGlsc1wiO1xuaW1wb3J0IHtibHVlRW52ZWxvcGVJY29uLCBidWNrZXRJY29uLCBpbmZvSWNvbn0gZnJvbSBcIi4vSWNvbnNcIjtcbmltcG9ydCB7UHJvcFR5cGVzfSBmcm9tIFwicHJvcC10eXBlc1wiO1xuaW1wb3J0IERpZ2l0YWxTaWduYXR1cmUgZnJvbSBcIi4vRGlnaXRhbFNpZ25hdHVyZVwiO1xuXG5jbGFzcyBDb250ZW50TGlzdGluZ1BlbmRpbmdCaWQgZXh0ZW5kcyBDb250ZW50TGlzdGluZyB7XG4gICAgY29uc3RydWN0b3IocHJvcHMpe1xuICAgICAgICBzdXBlcihwcm9wcyk7XG5cbiAgICAgICAgdGhpcy5zdGF0ZSA9IHtcbiAgICAgICAgfTtcbiAgICAgICAgdGhpcy5ub0ltYWdlID0gYXNzZXRzQmFzZURpciArIFwiYXBwL2ltYWdlcy9uby1pbWFnZS5wbmdcIjtcbiAgICAgICAgdGhpcy5iaWRJY29uID0gYXNzZXRzQmFzZURpciArIFwiYXBwL2ltYWdlcy9oYW1tZXIucG5nXCI7XG4gICAgICAgIHRoaXMuZml4ZWRJY29uID0gYXNzZXRzQmFzZURpciArIFwiYXBwL2ltYWdlcy9iaWQucG5nXCI7XG4gICAgICAgIHRoaXMuYmx1ZUNoZWNrID0gYXNzZXRzQmFzZURpciArIFwiYXBwL2ltYWdlcy9ibHVlX2NoZWNrLnBuZ1wiO1xuICAgICAgICB0aGlzLnllbGxvd0NoZWNrID0gYXNzZXRzQmFzZURpciArIFwiYXBwL2ltYWdlcy95ZWxsb3dfY2hlY2gucG5nXCI7XG4gICAgICAgIHRoaXMuZXhjbGFtYXRpb25JY29uID0gYXNzZXRzQmFzZURpciArIFwiYXBwL2ltYWdlcy9FeGNsYW1hdGlvbi5wbmdcIjtcbiAgICAgICAgdGhpcy5lbnZlbG9wZUljb24gPSBhc3NldHNCYXNlRGlyICsgXCJhcHAvaW1hZ2VzL2VudmVsb3BlXzIucG5nXCI7XG4gICAgfVxuXG4gICAgcmVuZGVyKCl7XG4gICAgICAgIGNvbnN0IHtcbiAgICAgICAgICAgIG5hbWUsXG4gICAgICAgICAgICBleHBpcmVzQXQsXG4gICAgICAgICAgICBvbkRlbGV0ZSxcbiAgICAgICAgICAgIHJpZ2h0c1BhY2thZ2UsXG4gICAgICAgICAgICBpbWFnZUJhc2U2NCxcbiAgICAgICAgICAgIGltYWdlLFxuICAgICAgICAgICAgZGVjbGluZWQsXG4gICAgICAgICAgICBpZCxcbiAgICAgICAgICAgIGNvbXBhbnksXG4gICAgICAgICAgICBjdXN0b21JZCxcbiAgICAgICAgICAgIGJpZCxcbiAgICAgICAgfSA9IHRoaXMucHJvcHM7XG5cbiAgICAgICAgY29uc3Qge3Nob3dNZXNzYWdlLCBzaG93RWRpdGVkfSA9IHRoaXMuc3RhdGU7XG5cbiAgICAgICAgbGV0IGxpc3RpbmdJbWFnZSA9IChpbWFnZUJhc2U2NCkgPyBpbWFnZUJhc2U2NCA6IGltYWdlID8gYXNzZXRzQmFzZURpciArIFwiLi4vXCIgKyBpbWFnZSA6IHRoaXMubm9JbWFnZTtcblxuICAgICAgICByZXR1cm4gKFxuICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJsaXN0aW5nLWxpc3Qtdmlld1wiPlxuICAgICAgICAgICAgICAgIDxTZW5kTWVzc2FnZSByZWY9e1wibWVzc2FnZVBvcHVwXCIgKyBpZCB9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgIGxpc3RpbmdJZD17aWR9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJlY2lwaWVudD17Y29tcGFueX0vPlxuICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPXtcImxlZnRcIn0+XG4gICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPXtcImltYWdlXCJ9PlxuICAgICAgICAgICAgICAgICAgICAgICAgPGltZyBzcmM9e2xpc3RpbmdJbWFnZX0vPlxuICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT17XCJyaWdodFwifSAgc3R5bGU9e3twYWRkaW5nOicyNXB4IDAnfX0+XG5cbiAgICAgICAgICAgICAgICAgICAgey8qTkFNRSovfVxuICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT17XCJuYW1lXCJ9IG9uQ2xpY2s9e3RoaXMub25TZWxlY3R9PlxuICAgICAgICAgICAgICAgICAgICAgICAge25hbWV9XG4gICAgICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICAgICAgICA8ZGl2IHN0eWxlPXt7ZGlzcGxheTogJ2ZsZXgnLCBhbGlnbkl0ZW1zOidjZW50ZXInfX0+XG4gICAgICAgICAgICAgICAgICAgICAgICA8ZGl2PkV4cGlyeToge01vbWVudChleHBpcmVzQXQpLmZvcm1hdCgnREQvTU0vWVlZWScpfTwvZGl2PlxuICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJjdXN0b20taWRcIj4je2N1c3RvbUlkfTwvZGl2PlxuICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cblxuICAgICAgICAgICAgICAgICAgICB7LypDT01QQU5ZKi99XG4gICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPXtcImNvbXBhbnlcIn0gb25DbGljaz17KGUpPT57XG4gICAgICAgICAgICAgICAgICAgICAgICB0aGlzLnJlZnNbXCJtZXNzYWdlUG9wdXBcIiArIGlkXS5vcGVuKCk7XG4gICAgICAgICAgICAgICAgICAgICAgICBlLnN0b3BQcm9wYWdhdGlvbigpO1xuICAgICAgICAgICAgICAgICAgICB9fT5cbiAgICAgICAgICAgICAgICAgICAgICAgIHtjb21wYW55LmxlZ2FsTmFtZX0gPGltZyBzdHlsZT17e21hcmdpbkxlZnQ6IDV9fSBzcmM9e3RoaXMuZW52ZWxvcGVJY29ufS8+XG4gICAgICAgICAgICAgICAgICAgIDwvZGl2PlxuXG4gICAgICAgICAgICAgICAgICAgIDxkaXYgc3R5bGU9e3tkaXNwbGF5OiAnZmxleCd9fT5cbiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwibGlzdGluZy13cmFwcGVyXCIgc3R5bGU9e3tmbGV4OicxIDAgMCcsb3ZlcmZsb3c6ICdhdXRvJ319PlxuXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPENvbnRlbnRMaXN0aW5nRXZlbnREZXRhaWxzIHsuLi50aGlzLnByb3BzfSAvPlxuXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPENvbnRlbnRMaXN0aW5nUmlnaHRzUGFja2FnZSByaWdodHNQYWNrYWdlPXtyaWdodHNQYWNrYWdlfS8+XG4gICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgICAgICAgICAgIHsvKkJJRCBPUFRJT05TKi99XG4gICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IHN0eWxlPXt7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgZmxleDogJzI0MHB4IDAgMCcsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgYmFja2dyb3VuZENvbG9yOiAnI0ZBRkJGQycsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgYm9yZGVyTGVmdDogJzFweCBzb2xpZCAjRTZFNkU2JyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBhbGlnbkl0ZW1zOiAnY2VudGVyJyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBkaXNwbGF5OiAnZmxleCcsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgZmxleERpcmVjdGlvbjogJ2NvbHVtbicsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcGFkZGluZ1JvcDogMTUsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAganVzdGlmeUNvbnRlbnQ6ICdzcGFjZS1ldmVubHknLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHBhZGRpbmc6ICcyMHB4IDAnLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHBvc2l0aW9uIDogJ3JlbGF0aXZlJ1xuICAgICAgICAgICAgICAgICAgICAgICAgfX0+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBzdHlsZT17e1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBkaXNwbGF5OidmbGV4JyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAganVzdGlmeUNvbnRlbnQ6ICdzcGFjZS1ldmVubHknLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBmbGV4RGlyZWN0aW9uOiAncm93JyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYWxpZ25JdGVtczogJ2NlbnRlcicsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHdpZHRoOiAnMTAwJScsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfX0+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXY+e01vbWVudChiaWQuY3JlYXRlZEF0KS5mb3JtYXQoJ0REL01NL1lZWVknKX08L2Rpdj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IHN0eWxlPXt7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGJhY2tncm91bmRDb2xvcjogJyNmZmYnLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBib3JkZXI6ICcxcHggc29saWQgbGlnaHRncmV5JyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcGFkZGluZzogMTAsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG1hcmdpbjogJzAgMjBweCdcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9fT5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdj57YmlkLnNhbGVzUGFja2FnZS5uYW1lfTwvZGl2PlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxuXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBzdHlsZT17e1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBmb250U2l6ZTogMjQsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGZvbnRXZWlnaHQ6IDYwMCxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbWFyZ2luQm90dG9tOiAxMFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH19PlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2PntwYXJzZUZsb2F0KGJpZC5hbW91bnQpLnRvTG9jYWxlU3RyaW5nKCl9IHtnZXRDdXJyZW5jeVN5bWJvbChiaWQuc2FsZXNQYWNrYWdlLmN1cnJlbmN5LmNvZGUpfTwvZGl2PlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgc3R5bGU9e3tcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZGlzcGxheTogJ2ZsZXgnLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBmbGV4RGlyZWN0aW9uOiAncm93JyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYWxpZ25JdGVtczogJ2NlbnRlcicsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHBvc2l0aW9uOiAncmVsYXRpdmUnXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfX0+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHtiaWQuc3RhdHVzLm5hbWUgPT09IFwiRURJVEVEXCJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJiYgPGltZyBzcmM9e2luZm9JY29ufVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHN0eWxlPXt7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG1hcmdpblJpZ2h0OiA1LFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjdXJzb3I6ICdwb2ludGVyJ1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH19XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgb25Nb3VzZU92ZXI9eygpID0+IHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5zZXRTdGF0ZSh7c2hvd0VkaXRlZDogdHJ1ZX0pXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfX1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBvbk1vdXNlTGVhdmU9eygpID0+IHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5zZXRTdGF0ZSh7c2hvd0VkaXRlZDogZmFsc2V9KVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH19Lz59XG5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgeyAoICFkZWNsaW5lZCB8fCAoZGVjbGluZWQgJiYgYmlkLnN0YXR1cy5uYW1lID09PSBcIlJFSkVDVEVEXCIgJiYgIWJpZC5zYWxlc1BhY2thZ2Uuc29sZCApKVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAmJiA8YSBjbGFzc05hbWU9XCJzdGFuZGFyZC1idXR0b25cIiBzdHlsZT17e1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaGVpZ2h0OiAzNixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGZvbnRTaXplOiAxNixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG1hcmdpbkJvdHRvbTogMTBcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfX0gaHJlZj17ZW52aG9zdHVybCArIFwibGlzdGluZy9cIiArIGN1c3RvbUlkICsgXCIvY2hlY2tvdXQvXCIgKyBiaWQuc2FsZXNQYWNrYWdlLmlkfT5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHt0aGlzLmNvbnRleHQudChcIkluY3JlYXNlIGJpZFwiKX1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9hPn1cblxuXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHtiaWQubWVzc2FnZSAmJiBiaWQubWVzc2FnZSAhPT0gXCJcIlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAmJiA8aW1nIHNyYz17Ymx1ZUVudmVsb3BlSWNvbn1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzdHlsZT17e1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBtYXJnaW5MZWZ0OiA1LFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjdXJzb3I6ICdwb2ludGVyJ1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH19XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgb25Nb3VzZU92ZXI9eygpID0+IHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5zZXRTdGF0ZSh7c2hvd01lc3NhZ2U6IHRydWV9KVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH19XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgb25Nb3VzZUxlYXZlPXsoKSA9PiB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuc2V0U3RhdGUoe3Nob3dNZXNzYWdlOiBmYWxzZX0pXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfX0vPn1cblxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB7LypNRVNTQUdFKi99XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHtzaG93TWVzc2FnZSAmJiA8ZGl2IGNsYXNzTmFtZT1cInN0YXR1cy10b29sdGlwXCI+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT17XCJvcHRpb25cIn0+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAge2JpZC5tZXNzYWdlfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2Pn1cblxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB7LypFRElURUQgVE9PTFRJUCovfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB7c2hvd0VkaXRlZCAmJiA8ZGl2IGNsYXNzTmFtZT1cInN0YXR1cy10b29sdGlwXCI+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT17XCJvcHRpb25cIn0+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAge3RoaXMuY29udGV4dC50KFwiUEVORElOR19CSURTX1RPT0xUSVBfTElTVElOR19FRElURURcIil9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+fVxuXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBzdHlsZT17e1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBmb250U2l6ZTogMTIsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGZvbnRXZWlnaHQ6IDYwMCxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9fT5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIHN0eWxlPXt7Zm9udFdlaWdodDogNDAwLGZvbnRTdHlsZTogJ2l0YWxpYyd9fT5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB7dGhpcy5jb250ZXh0LnQoXCJQbGFjZWQgYnk6XCIpfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9zcGFuPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAge1wiIFwiICtiaWQuYnV5ZXJVc2VyLmZpcnN0TmFtZSArIFwiIFwiICsgYmlkLmJ1eWVyVXNlci5sYXN0TmFtZX08L2Rpdj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB7YmlkLnN0YXR1cy5uYW1lID09PSBcIlJFSkVDVEVEXCIgJiYgPGRpdiBzdHlsZT17e1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBwb3NpdGlvbjogJ2Fic29sdXRlJyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY3Vyc29yIDogJ3BvaW50ZXInLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0b3AgOiAyMCxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmlnaHQgOiAyMFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH19IG9uQ2xpY2s9eyhlKT0+e1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0aGlzLnNldFN0YXRlKHtzaG93UmVtb3ZlQ29uZmlybTogdHJ1ZX0pO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBlLnN0b3BQcm9wYWdhdGlvbigpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH19PlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aW1nIHNyYz17YnVja2V0SWNvbn0vPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2Pn1cblxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHsvKkNPTkZJUk0gUkVNT1ZFKi99XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAge3RoaXMuc3RhdGUuc2hvd1JlbW92ZUNvbmZpcm0gJiYgPGRpdiBjbGFzc05hbWU9XCJjb25maXJtYXRpb24tdG9vbHRpcFwiPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT17XCJjb25maXJtYXRpb24tdGV4dFwifT5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHt0aGlzLmNvbnRleHQudChcIlBFTkRJTkdfQklEU19SRU1PVkVfVElUTEVcIil9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YnV0dG9uIGNsYXNzTmFtZT17XCJidXR0b24gYnV0dG9uLWNvbmZpcm1cIn0gb25DbGljaz17KGUpPT57XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0aGlzLnNldFN0YXRlKHtzaG93UmVtb3ZlQ29uZmlybTogZmFsc2V9KTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG9uRGVsZXRlKGJpZC5pZCk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBlLnN0b3BQcm9wYWdhdGlvbigpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9fT5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHt0aGlzLmNvbnRleHQudChcIlBFTkRJTkdfQklEU19SRU1PVkVfQlVUVE9OX0NPTkZJUk1cIil9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvYnV0dG9uPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YnV0dG9uIGNsYXNzTmFtZT17XCJidXR0b25cIn0gb25DbGljaz17KGUpPT57XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0aGlzLnNldFN0YXRlKHtzaG93UmVtb3ZlQ29uZmlybTogZmFsc2V9KTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGUuc3RvcFByb3BhZ2F0aW9uKCk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH19PlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAge3RoaXMuY29udGV4dC50KFwiUEVORElOR19CSURTX1JFTU9WRV9CVVRUT05fQ0FOQ0VMXCIpfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2J1dHRvbj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj59XG4gICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgICAgPC9kaXY+XG5cbiAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICApXG4gICAgfVxufVxuXG5Db250ZW50TGlzdGluZ1BlbmRpbmdCaWQuY29udGV4dFR5cGVzID0ge1xuICAgIHQ6IFByb3BUeXBlcy5mdW5jLmlzUmVxdWlyZWRcbn07XG5cbmV4cG9ydCBkZWZhdWx0IENvbnRlbnRMaXN0aW5nUGVuZGluZ0JpZDtcblxuXG5cbi8vIFdFQlBBQ0sgRk9PVEVSIC8vXG4vLyAuL3NyYy9BcHBCdW5kbGUvUmVzb3VyY2VzL3B1YmxpYy9qYXZhc2NyaXB0L21haW4vY29tcG9uZW50cy9Db250ZW50TGlzdGluZ1BlbmRpbmdCaWQuanMiLCJpbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xuaW1wb3J0IFNlbGVjdCBmcm9tICdyZWFjdC1zZWxlY3QnO1xuXG5jbGFzcyBDb3VudHJ5U2VsZWN0b3IgZXh0ZW5kcyBSZWFjdC5Db21wb25lbnQge1xuXG4gICAgY29uc3RydWN0b3IocHJvcHMpIHtcbiAgICAgICAgc3VwZXIocHJvcHMpO1xuICAgICAgICB0aGlzLnN0YXRlID0ge1xuICAgICAgICAgICAgY291bnRyaWVzIDogW11cbiAgICAgICAgfTtcbiAgICB9XG5cbiAgICBjb21wb25lbnREaWRNb3VudCAoKSB7XG4gICAgICAgIGxldCBfdGhpcyA9IHRoaXM7XG4gICAgICAgIENvbnRlbnRBcmVuYS5BcGkuZ2V0Q291bnRyaWVzKCkuZG9uZSggKGNvdW50cmllcyApID0+IHtcbiAgICAgICAgICAgIF90aGlzLnNldFN0YXRlKHtjb3VudHJpZXN9KTtcbiAgICAgICAgfSk7XG4gICAgfVxuXG4gICAgZ2V0T3B0aW9ucyA9ICgpID0+IHtcbiAgICAgICAgY29uc3Qge2ZpbHRlciA9IFtdLCBhdmFpbGFibGV9ID0gdGhpcy5wcm9wcztcblxuICAgICAgICBsZXQgY291bnRyaWVzID0gT2JqZWN0LnZhbHVlcyhDb250ZW50QXJlbmEuRGF0YS5Db3VudHJpZXMpLm1hcCgoaSxrKT0+KHt2YWx1ZSA6IGkubmFtZSAsIGxhYmVsIDogaS5uYW1lIH0pKTtcblxuICAgICAgICBpZiAoYXZhaWxhYmxlICYmIGF2YWlsYWJsZS5sZW5ndGggPiAwICkgY291bnRyaWVzID0gYXZhaWxhYmxlLm1hcCgoaSxrKT0+KHt2YWx1ZSA6IGkgLCBsYWJlbCA6IGkgfSkpO1xuXG4gICAgICAgIGNvdW50cmllcyA9IGNvdW50cmllcy5maWx0ZXIoY291bnRyeSA9PiBmaWx0ZXIuaW5kZXhPZihjb3VudHJ5LnZhbHVlKSA9PT0gLTEpO1xuXG4gICAgICAgIHJldHVybiBjb3VudHJpZXM7XG4gICAgfTtcblxuICAgIHJlbmRlcigpe1xuICAgICAgICBjb25zdCB7dmFsdWUsIG9uQ2hhbmdlLCBjbGFzc05hbWUsIG11bHRpID0gdHJ1ZSwgZGlzYWJsZWQgPSBmYWxzZX0gPSB0aGlzLnByb3BzO1xuICAgICAgICByZXR1cm4gKFxuICAgICAgICAgICAgPFNlbGVjdFxuICAgICAgICAgICAgICAgIGNsYXNzTmFtZT17Y2xhc3NOYW1lIH1cbiAgICAgICAgICAgICAgICBuYW1lPVwiZm9ybS1maWVsZC1uYW1lXCJcbiAgICAgICAgICAgICAgICBvbkNoYW5nZT17b25DaGFuZ2V9XG4gICAgICAgICAgICAgICAgcGxhY2Vob2xkZXI9e2Rpc2FibGVkID8gJ0Rpc2FibGVkJyA6ICdTZWxlY3QuLi4nfVxuICAgICAgICAgICAgICAgIGRpc2FibGVkPXtkaXNhYmxlZH1cbiAgICAgICAgICAgICAgICB2YWx1ZT17dmFsdWV9XG4gICAgICAgICAgICAgICAgbXVsdGk9e211bHRpfVxuICAgICAgICAgICAgICAgIG9wdGlvbnM9e3RoaXMuZ2V0T3B0aW9ucygpfVxuICAgICAgICAgICAgLz5cbiAgICAgICAgKVxuICAgIH1cbn1cblxuZXhwb3J0IGRlZmF1bHQgQ291bnRyeVNlbGVjdG9yO1xuXG5cbi8vIFdFQlBBQ0sgRk9PVEVSIC8vXG4vLyAuL3NyYy9BcHBCdW5kbGUvUmVzb3VyY2VzL3B1YmxpYy9qYXZhc2NyaXB0L21haW4vY29tcG9uZW50cy9Db3VudHJ5U2VsZWN0b3IuanMiLCJpbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xuaW1wb3J0IFNpZ25hdHVyZVBhZCBmcm9tICdyZWFjdC1zaWduYXR1cmUtcGFkJztcbmltcG9ydCB7UHJvcFR5cGVzfSBmcm9tIFwicHJvcC10eXBlc1wiO1xuXG5jbGFzcyBEaWdpdGFsU2lnbmF0dXJlIGV4dGVuZHMgUmVhY3QuQ29tcG9uZW50e1xuICAgIGNvbnN0cnVjdG9yKHByb3BzKXtcbiAgICAgICAgc3VwZXIocHJvcHMpO1xuXG4gICAgICAgIHRoaXMuc3RhdGUgPSB7XG4gICAgICAgICAgICByZWFkeSA6IGZhbHNlXG4gICAgICAgIH1cbiAgICB9XG5cbiAgICBjb21wb25lbnREaWRNb3VudCAoKSB7XG4gICAgICAgIHRoaXMuc2V0U3RhdGUoe2JsYW5rOnRoaXMucmVmcy5zaWduYXR1cmUudG9EYXRhVVJMKCl9KTtcbiAgICB9XG5cbiAgICBjbGVhciA9ICgpID0+IHtcbiAgICAgICAgdGhpcy5yZWZzLnNpZ25hdHVyZS5jbGVhcigpO1xuICAgIH07XG5cbiAgICBkb25lID0gKCkgPT4ge1xuICAgICAgICBjb25zdCB7IGJsYW5rIH0gPSB0aGlzLnN0YXRlO1xuICAgICAgICBjb25zdCB7IG9uUmVhZHkgfSA9IHRoaXMucHJvcHM7XG4gICAgICAgIGNvbnN0IHsgc2lnbmF0dXJlIH0gPSB0aGlzLnJlZnM7XG5cbiAgICAgICAgbGV0IGRhdGEgPSBzaWduYXR1cmUudG9EYXRhVVJMKCk7XG5cbiAgICAgICAgaWYgKCBkYXRhID09PSBibGFuayApIHJldHVybjtcblxuICAgICAgICB0aGlzLnNldFN0YXRlKHtyZWFkeTp0cnVlfSk7XG4gICAgICAgIGlmIChvblJlYWR5KSBvblJlYWR5KGRhdGEpO1xuICAgIH07XG5cbiAgICBlZGl0ID0gKCkgPT4ge1xuICAgICAgICBjb25zdCB7IG9uUmVhZHkgfSA9IHRoaXMucHJvcHM7XG4gICAgICAgIHRoaXMuc2V0U3RhdGUoe3JlYWR5OmZhbHNlfSk7XG4gICAgICAgIGlmIChvblJlYWR5KSBvblJlYWR5KG51bGwpO1xuICAgIH07XG5cbiAgICByZW5kZXIoKXtcbiAgICAgICAgY29uc3QgeyBzaWduYXR1cmUgfSA9IHRoaXMucHJvcHM7XG4gICAgICAgIGNvbnN0IHsgcmVhZHkgfSA9IHRoaXMuc3RhdGU7XG5cbiAgICAgICAgcmV0dXJuIChcbiAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiZGlnaXRhbC1zaWduYXR1cmVcIj5cbiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT17XCJkaWdpdGFsLXNpZ25hdHVyZS1wbGFjZWhvbGRlclwifT5cbiAgICAgICAgICAgICAgICAgICAge3RoaXMuY29udGV4dC50KFwiRElHSVRBTF9TSUdOQVRVUkVfVElUTEVcIil9XG4gICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgICAge3NpZ25hdHVyZSAmJiByZWFkeSAmJlxuICAgICAgICAgICAgICAgICAgICA8aW1nIHN0eWxlPXt7d2lkdGg6IDgwMCwgaGVpZ2h0OiAzMDAsIG1hcmdpbjogJzAgYXV0byd9fSBzcmM9e3NpZ25hdHVyZX0gLz5cbiAgICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgICB7IXJlYWR5ICYmIDxTaWduYXR1cmVQYWQgcmVmPVwic2lnbmF0dXJlXCIgLz59XG5cbiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT17XCJidXR0b25zXCJ9PlxuICAgICAgICAgICAgICAgICAgICB7IXJlYWR5ICYmIDxidXR0b24gb25DbGljaz17dGhpcy5jbGVhcn0gY2xhc3NOYW1lPVwic3RhbmRhcmQtYnV0dG9uLXNtYWxsIHRyYW5zcGFyZW50XCI+XG4gICAgICAgICAgICAgICAgICAgICAgICB7dGhpcy5jb250ZXh0LnQoXCJESUdJVEFMX1NJR05BVFVSRV9CVVRUT05fQ0xFQVJcIil9XG4gICAgICAgICAgICAgICAgICAgIDwvYnV0dG9uPn1cbiAgICAgICAgICAgICAgICAgICAgeyFyZWFkeSAmJiA8YnV0dG9uIG9uQ2xpY2s9e3RoaXMuZG9uZX0gY2xhc3NOYW1lPVwic3RhbmRhcmQtYnV0dG9uLXNtYWxsXCI+XG4gICAgICAgICAgICAgICAgICAgICAgICB7dGhpcy5jb250ZXh0LnQoXCJESUdJVEFMX1NJR05BVFVSRV9CVVRUT05fRE9ORVwiKX1cbiAgICAgICAgICAgICAgICAgICAgPC9idXR0b24+fVxuICAgICAgICAgICAgICAgICAgICB7cmVhZHkgJiYgPGJ1dHRvbiBvbkNsaWNrPXt0aGlzLmVkaXR9IGNsYXNzTmFtZT1cInN0YW5kYXJkLWJ1dHRvbi1iaWdcIj5cbiAgICAgICAgICAgICAgICAgICAgICAgIHt0aGlzLmNvbnRleHQudChcIkRJR0lUQUxfU0lHTkFUVVJFX0JVVFRPTl9ORVdcIil9XG4gICAgICAgICAgICAgICAgICAgIDwvYnV0dG9uPn1cbiAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICApXG4gICAgfVxufVxuRGlnaXRhbFNpZ25hdHVyZS5jb250ZXh0VHlwZXMgPSB7XG4gICAgdDogUHJvcFR5cGVzLmZ1bmMuaXNSZXF1aXJlZFxufTtcbmV4cG9ydCBkZWZhdWx0IERpZ2l0YWxTaWduYXR1cmU7XG5cblxuLy8gV0VCUEFDSyBGT09URVIgLy9cbi8vIC4vc3JjL0FwcEJ1bmRsZS9SZXNvdXJjZXMvcHVibGljL2phdmFzY3JpcHQvbWFpbi9jb21wb25lbnRzL0RpZ2l0YWxTaWduYXR1cmUuanMiLCJpbXBvcnQgUmVhY3QsIHsgQ29tcG9uZW50IH0gZnJvbSAncmVhY3QnO1xuaW1wb3J0IHtQcm9wVHlwZXN9IGZyb20gXCJwcm9wLXR5cGVzXCI7XG5pbXBvcnQgSGVhZGVyQmFyIGZyb20gXCIuL0hlYWRlckJhclwiO1xuXG5jb25zdCBGaWxlSXRlbSA9ICh7aXRlbSwgb25DbGlja30pID0+IChcbiAgICA8ZGl2IHN0eWxlPXt7XG4gICAgICAgIGJvcmRlcjogJzFweCBzb2xpZCBsaWdodGdyYXknLFxuICAgICAgICBwYWRkaW5nOiAxMCxcbiAgICAgICAgbWFyZ2luVG9wOiA1LFxuICAgICAgICBjdXJzb3IgOiAnbm9ybWFsJ1xuICAgIH19PlxuICAgICAgICB7aXRlbS5uYW1lfSA8aW1nIHN0eWxlPXt7IHJpZ2h0OiAxMCwgcG9zaXRpb246ICdhYnNvbHV0ZScsIGN1cnNvcjogJ3BvaW50ZXInfX0gc3JjPXthc3NldHNCYXNlRGlyICsgXCJhcHAvaW1hZ2VzL2NhbmNlbC5wbmdcIn0gb25DbGljaz17b25DbGlja30vPlxuICAgIDwvZGl2PlxuKTtcblxuY29uc3QgSW52YWxpZEZpbGVJdGVtID0gKHtpdGVtLCBvbkNsaWNrfSkgPT4gKFxuICAgIDxkaXYgc3R5bGU9e3tcbiAgICAgICAgYm9yZGVyOiAnMXB4IHNvbGlkIHJlZCcsXG4gICAgICAgIHBhZGRpbmc6IDEwLFxuICAgICAgICBtYXJnaW5Ub3A6IDUsXG4gICAgICAgIGN1cnNvciA6ICdub3JtYWwnLFxuICAgICAgICBjb2xvcjogXCJyZWRcIlxuICAgIH19PlxuICAgICAgICB7aXRlbX0gaGFzIGFuIGludmFsaWQgZm9ybWF0IDxpbWcgc3R5bGU9e3sgcmlnaHQ6IDEwLCBwb3NpdGlvbjogJ2Fic29sdXRlJywgY3Vyc29yOiAncG9pbnRlcid9fSBzcmM9e2Fzc2V0c0Jhc2VEaXIgKyBcImFwcC9pbWFnZXMvY2FuY2VsLnBuZ1wifSBvbkNsaWNrPXtvbkNsaWNrfS8+XG4gICAgPC9kaXY+XG4pO1xuXG5jb25zdCBpbWFnZVN0eWxlID0ge1xuICAgIG1heEhlaWdodDogMjUwLFxuICAgIG1hcmdpbkJvdHRvbTogNSxcbiAgICBtYXJnaW5Ub3A6IDEwXG59O1xuXG5jbGFzcyBGaWxlU2VsZWN0b3IgZXh0ZW5kcyBDb21wb25lbnQge1xuXG4gICAgY29uc3RydWN0b3IgKHByb3BzKSB7XG4gICAgICAgIHN1cGVyKHByb3BzKTtcblxuICAgICAgICBsZXQgZm9ybSA9IG5ldyBGb3JtRGF0YSgpO1xuXG4gICAgICAgIHRoaXMuc3RhdGUgPSB7XG4gICAgICAgICAgICBmYWlsZWQ6IFtdLFxuICAgICAgICAgICAgZm9ybSA6IGZvcm0sXG4gICAgICAgICAgICB1cGxvYWRpbmcgOiBmYWxzZSxcbiAgICAgICAgICAgIGFjY2VwdCA6IHByb3BzLmFjY2VwdCB8fCBbXCIucG5nXCIsIFwiLmpwZ1wiXVxuICAgICAgICB9XG4gICAgfTtcblxuICAgIGhhbmRsZVVwbG9hZEZpbGUgPSAoZXZlbnQpID0+IHtcbiAgICAgICAgY29uc3Qge2lzSW1hZ2UsIG9uU2VsZWN0LCB0YXJnZXQsIHRtcH0gPSB0aGlzLnByb3BzO1xuICAgICAgICBsZXQgX3RoaXMgPSB0aGlzO1xuXG4gICAgICAgIHRoaXMuc3RhdGUuZm9ybS5hcHBlbmQoZXZlbnQudGFyZ2V0LmZpbGVzWzBdLnNpemUsIGV2ZW50LnRhcmdldC5maWxlc1swXSk7XG4gICAgICAgIHRoaXMuc2V0U3RhdGUoe1xuICAgICAgICAgICAgZm9ybSA6IHRoaXMuc3RhdGUuZm9ybVxuICAgICAgICB9KTtcblxuICAgICAgICBpZiAoIHRtcCApIHtcbiAgICAgICAgICAgIHRoaXMuc2V0U3RhdGUoeyB1cGxvYWRpbmcgOiB0cnVlfSk7XG5cbiAgICAgICAgICAgIENvbnRlbnRBcmVuYS5Db250ZW50QXBpLnNhdmVUbXBGaWxlKGV2ZW50LnRhcmdldC5maWxlcykudGhlbigocmVzcG9uc2UpPT57XG5cbiAgICAgICAgICAgICAgICBpZiAocmVzcG9uc2Uuc3VjY2Vzcyl7XG4gICAgICAgICAgICAgICAgICAgIGlmKCBvblNlbGVjdCApIG9uU2VsZWN0KCByZXNwb25zZSAgKTtcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5zZXRTdGF0ZSh7IHVwbG9hZGluZyA6IGZhbHNlfSk7XG4gICAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5zZXRTdGF0ZSgocHJldikgPT4ge1xuICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBmYWlsZWQgOiBbLi4ucHJldi5mYWlsZWQsIHJlc3BvbnNlLm5hbWVdLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHVwbG9hZGluZyA6IGZhbHNlXG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0pO1xuXG4gICAgICAgIH1cblxuICAgICAgICBpZiAoIGlzSW1hZ2UgKSB7XG4gICAgICAgICAgICB0aGlzLmdldEJhc2U2NChldmVudC50YXJnZXQuZmlsZXNbMF0sIChyZXNwb25zZSkgPT4ge1xuICAgICAgICAgICAgICAgIF90aGlzLnNldFN0YXRlKHtcbiAgICAgICAgICAgICAgICAgICAgaW1hZ2UgOiByZXNwb25zZVxuICAgICAgICAgICAgICAgIH0pO1xuXG4gICAgICAgICAgICAgICAgaWYoIG9uU2VsZWN0ICkge1xuICAgICAgICAgICAgICAgICAgICBvblNlbGVjdCh0YXJnZXQsIHJlc3BvbnNlKTtcbiAgICAgICAgICAgICAgICAgICAgb25TZWxlY3QoXCJpbWFnZVwiLCBudWxsKTtcbiAgICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIH0pXG4gICAgICAgIH1cbiAgICB9O1xuXG4gICAgZ2V0SXRlbXMgPSAoKSA9PiB7XG4gICAgICAgIGxldCBsaXN0ID0gW107XG4gICAgICAgIGZvciAobGV0IHZhbHVlIG9mIHRoaXMuc3RhdGUuZm9ybS52YWx1ZXMoKSkge1xuICAgICAgICAgICAgbGlzdC5wdXNoKCB2YWx1ZSApO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBsaXN0O1xuICAgIH07XG5cbiAgICByZW1vdmUgPSAobmFtZSkgPT4ge1xuICAgICAgICB0aGlzLnN0YXRlLmZvcm0uZGVsZXRlKG5hbWUpO1xuICAgICAgICB0aGlzLnNldFN0YXRlKHtmb3JtOnRoaXMuc3RhdGUuZm9ybX0pO1xuICAgIH07XG5cbiAgICByZW1vdmVGYWlsZWQgPSAoaW5kZXgpID0+IHtcbiAgICAgICAgdGhpcy5zZXRTdGF0ZSgocHJldikgPT57XG4gICAgICAgICAgICBwcmV2LmZhaWxlZC5zcGxpY2UoaW5kZXgsIDEpO1xuXG4gICAgICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgICAgIGZhaWxlZCA6IHByZXYuZmFpbGVkXG4gICAgICAgICAgICB9XG4gICAgICAgIH0pO1xuICAgIH07XG5cbiAgICBnZXRCYXNlNjQgPSAoZmlsZSwgY2IpID0+IHtcbiAgICAgICAgbGV0IHJlYWRlciA9IG5ldyBGaWxlUmVhZGVyKCk7XG4gICAgICAgIHJlYWRlci5yZWFkQXNEYXRhVVJMKGZpbGUpO1xuICAgICAgICByZWFkZXIub25sb2FkID0gZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgY2IocmVhZGVyLnJlc3VsdClcbiAgICAgICAgfTtcbiAgICAgICAgcmVhZGVyLm9uZXJyb3IgPSBmdW5jdGlvbiAoZXJyb3IpIHtcbiAgICAgICAgICAgIGNvbnNvbGUubG9nKCdFcnJvcjogJywgZXJyb3IpO1xuICAgICAgICB9O1xuICAgIH07XG5cbiAgICByZW5kZXIoKSB7XG5cbiAgICAgICAgY29uc3Qge2xhYmVsLCBpc0ltYWdlLCBwcmV2aW91c0ltYWdlLCBzZWxlY3RlZCwgb25SZW1vdmUsIGluZm9UZXh0fSA9IHRoaXMucHJvcHM7XG4gICAgICAgIGNvbnN0IHtpbWFnZSwgdXBsb2FkaW5nLCBmYWlsZWR9ID0gdGhpcy5zdGF0ZTtcblxuICAgICAgICByZXR1cm4gKFxuICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJiYXNlLWlucHV0IGN1c3RvbS1zZWxlY3RvclwiIHN0eWxlPXt7ZmxleERpcmVjdGlvbjogJ2NvbHVtbid9fT5cbiAgICAgICAgICAgICAgICA8ZGl2IHN0eWxlPXt7ZGlzcGxheTogJ2ZsZXgnfX0+XG4gICAgICAgICAgICAgICAgICAgIDxsYWJlbD5cbiAgICAgICAgICAgICAgICAgICAgICAgIHsobGFiZWwpP2xhYmVsOlwiRmlsZXNcIn1cbiAgICAgICAgICAgICAgICAgICAgICAgIHtpbmZvVGV4dCAmJiAoXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPGkgY2xhc3NOYW1lPVwiZmEgZmEtaW5mby1jaXJjbGUgdG9vbHRpcC1pY29uXCIgdGl0bGU9e2luZm9UZXh0fS8+XG4gICAgICAgICAgICAgICAgICAgICAgICApfVxuICAgICAgICAgICAgICAgICAgICA8L2xhYmVsPlxuICAgICAgICAgICAgICAgICAgICA8YnV0dG9uXG4gICAgICAgICAgICAgICAgICAgICAgICBjbGFzc05hbWU9XCJzdGFuZGFyZC1idXR0b25cIlxuICAgICAgICAgICAgICAgICAgICAgICAgZGlzYWJsZWQ9e3VwbG9hZGluZ31cbiAgICAgICAgICAgICAgICAgICAgICAgIG9uQ2xpY2s9eygpPT57ICQoXCIjaW5wdXQtXCIgKyB0aGlzLnByb3BzLnRhcmdldCkudHJpZ2dlcihcImNsaWNrXCIpICB9fT5cbiAgICAgICAgICAgICAgICAgICAgICAgIHt0aGlzLmNvbnRleHQudChcIlVwbG9hZFwiKX1cbiAgICAgICAgICAgICAgICAgICAgPC9idXR0b24+XG4gICAgICAgICAgICAgICAgICAgIDxpbnB1dFxuICAgICAgICAgICAgICAgICAgICAgICAgY2xhc3NOYW1lPVwiaXMtaGlkZGVuXCJcbiAgICAgICAgICAgICAgICAgICAgICAgIG9uQ2hhbmdlPXt0aGlzLmhhbmRsZVVwbG9hZEZpbGV9XG4gICAgICAgICAgICAgICAgICAgICAgICBhY2NlcHQ9e3RoaXMuc3RhdGUuYWNjZXB0LmpvaW4oXCIsIFwiKX1cbiAgICAgICAgICAgICAgICAgICAgICAgIGlkPXtcImlucHV0LVwiICsgdGhpcy5wcm9wcy50YXJnZXR9XG4gICAgICAgICAgICAgICAgICAgICAgICB0eXBlPVwiZmlsZVwiXG4gICAgICAgICAgICAgICAgICAgICAgICBuYW1lPXt0aGlzLnByb3BzLnRhcmdldCArIFwiW11cIn0gLz5cbiAgICAgICAgICAgICAgICAgICAge3VwbG9hZGluZyAmJiA8aSBjbGFzc05hbWU9XCJmYSBmYS1jb2cgZmEtc3BpblwiLz59XG4gICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgICAgPGRpdj5cbiAgICAgICAgICAgICAgICAgICAgeyBmYWlsZWQgJiYgZmFpbGVkLm1hcCgoaXRlbSwgaSk9PntcbiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiA8SW52YWxpZEZpbGVJdGVtIGtleT17XCJmYWlsZWRcIiAraX0gaXRlbT17aXRlbX0gb25DbGljaz17ICgpID0+IHRoaXMucmVtb3ZlRmFpbGVkKGkpfSAvPlxuICAgICAgICAgICAgICAgICAgICB9KX1cblxuICAgICAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgICAgICBzZWxlY3RlZCAmJiBzZWxlY3RlZC5sZW5ndGggPiAwICYmIHNlbGVjdGVkLm1hcCgocywgaSApID0+IHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gPEZpbGVJdGVtIGtleT17XCJrZXktXCIgKyBpfSBpdGVtPXt7bmFtZTogcy5uYW1lfX0gb25DbGljaz17b25SZW1vdmV9IC8+XG4gICAgICAgICAgICAgICAgICAgICAgICB9KVxuICAgICAgICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICAgICAgaXNJbWFnZSAmJiBpbWFnZSAmJlxuICAgICAgICAgICAgICAgICAgICAgICAgPGltZyBzcmM9e2ltYWdlfSBzdHlsZT17aW1hZ2VTdHlsZX0vPlxuICAgICAgICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICAgICAgcHJldmlvdXNJbWFnZSAmJlxuICAgICAgICAgICAgICAgICAgICAgICAgPGltZyBzcmM9e2Fzc2V0c0Jhc2VEaXIgKyBcIi4uL1wiICArIHByZXZpb3VzSW1hZ2V9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgIHN0eWxlPXtpbWFnZVN0eWxlfS8+XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICApXG4gICAgfVxufVxuXG5GaWxlU2VsZWN0b3IuY29udGV4dFR5cGVzID0ge1xuICAgIHQ6IFByb3BUeXBlcy5mdW5jLmlzUmVxdWlyZWRcbn07XG5cblxuZXhwb3J0IGRlZmF1bHQgRmlsZVNlbGVjdG9yO1xuXG5cblxuLy8gV0VCUEFDSyBGT09URVIgLy9cbi8vIC4vc3JjL0FwcEJ1bmRsZS9SZXNvdXJjZXMvcHVibGljL2phdmFzY3JpcHQvbWFpbi9jb21wb25lbnRzL0ZpbGVTZWxlY3Rvci5qcyIsImltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQge2dvVG99IGZyb20gXCIuLi9hY3Rpb25zL3V0aWxzXCI7XG5pbXBvcnQge0xpbmt9IGZyb20gXCJyZWFjdC1yb3V0ZXItZG9tXCI7XG5pbXBvcnQge1Byb3BUeXBlc30gZnJvbSAncHJvcC10eXBlcyc7XG5pbXBvcnQgSGVhZGVyTm90aWZpY2F0aW9ucyBmcm9tICcuL0hlYWRlck5vdGlmaWNhdGlvbnMnO1xuXG5jb25zdCBIZWFkZXJCYXJUYWIgPSAoe21hdGNoLCBjaGlsZHJlbiwgcm91dGV9KSA9PiB7XG4gICAgcmV0dXJuIChcbiAgICAgICAgPGRpdiBjbGFzc05hbWU9eyhtYXRjaCkgPyBcInRhYiBhY3RpdmUtdGFiXCIgOiBcInRhYlwifT5cbiAgICAgICAgICAgIDxMaW5rIHRvPXtyb3V0ZX0gPntjaGlsZHJlbn08L0xpbms+XG4gICAgICAgIDwvZGl2PlxuICAgIClcbn07XG5cbmNvbnN0IEN1c3RvbUxpbmsgPSAoe21hdGNoLCBjaGlsZHJlbiwgcm91dGV9KSA9PiB7XG4gICAgcmV0dXJuIChcbiAgICAgICAgPGRpdiBjbGFzc05hbWU9eyhtYXRjaCkgPyBcInRhYiBhY3RpdmUtdGFiXCIgOiBcInRhYlwifT5cbiAgICAgICAgICAgIDxhIGhyZWY9e3JvdXRlfT57Y2hpbGRyZW59PC9hPlxuICAgICAgICA8L2Rpdj5cbiAgICApXG59O1xuXG5jbGFzcyBIZWFkZXJCYXIgZXh0ZW5kcyAgUmVhY3QuQ29tcG9uZW50IHtcbiAgICBjb25zdHJ1Y3Rvcihwcm9wcyl7XG4gICAgICAgIHN1cGVyKHByb3BzKTtcblxuICAgICAgICB0aGlzLnN0YXRlID0ge1xuICAgICAgICB9XG5cblxuICAgIH1cblxuICAgIHJlbmRlcigpe1xuICAgICAgICBjb25zdCB7dGFiLCBwcm9maWxlLCBtYXRjaH0gPSB0aGlzLnByb3BzO1xuICAgICAgICBjb25zdCBsb2dvVXJsID0gdGhpcy5nZXRMb2dvVXJsKHRhYik7XG5cbiAgICAgICAgcmV0dXJuKFxuICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJtYW5hZ2VyLWhlYWRlclwiPlxuICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwibG9nb1wiIG9uQ2xpY2s9eygpPT5nb1RvKGxvZ29VcmwpfT5cbiAgICAgICAgICAgICAgICAgICAgPGltZyBzcmM9e2Fzc2V0c0Jhc2VEaXIgKyBcImFwcC9pbWFnZXMvbG9nby5wbmdcIn0gYWx0PVwiXCIvPlxuICAgICAgICAgICAgICAgIDwvZGl2PlxuXG4gICAgICAgICAgICAgICAge3Byb2ZpbGUgPT09IFwiQlVZRVJcIiAmJiAoXG4gICAgICAgICAgICAgICAgICAgIDxIZWFkZXJCYXJUYWJcbiAgICAgICAgICAgICAgICAgICAgICAgIG1hdGNoPXttYXRjaC51cmwgPT09IFwiL21hcmtldHBsYWNlXCJ9XG4gICAgICAgICAgICAgICAgICAgICAgICByb3V0ZT17XCIvbWFya2V0cGxhY2VcIn1cbiAgICAgICAgICAgICAgICAgICAgPlxuICAgICAgICAgICAgICAgICAgICAgICAgPGI+e3RoaXMuY29udGV4dC50KFwiSEVBREVSX0xJTktfTUFSS0VUUExBQ0VcIil9PC9iPlxuICAgICAgICAgICAgICAgICAgICA8L0hlYWRlckJhclRhYj5cbiAgICAgICAgICAgICAgICApfVxuXG4gICAgICAgICAgICAgICAge3Byb2ZpbGUgPT09IFwiQlVZRVJcIiAmJiAoXG4gICAgICAgICAgICAgICAgICAgIDxIZWFkZXJCYXJUYWIgbWF0Y2g9e21hdGNoLnVybCA9PT0gXCIvd2F0Y2hsaXN0XCJ9IHJvdXRlPXtcIi93YXRjaGxpc3RcIn0+XG4gICAgICAgICAgICAgICAgICAgICAgICA8Yj57dGhpcy5jb250ZXh0LnQoXCJIRUFERVJfTElOS19XQVRDSExJU1RcIil9PC9iPlxuICAgICAgICAgICAgICAgICAgICA8L0hlYWRlckJhclRhYj5cbiAgICAgICAgICAgICAgICApfVxuXG4gICAgICAgICAgICAgICAge3Byb2ZpbGUgPT09IFwiQlVZRVJcIiAmJiAoXG4gICAgICAgICAgICAgICAgICAgIDxIZWFkZXJCYXJUYWJcbiAgICAgICAgICAgICAgICAgICAgICAgIG1hdGNoPXtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBtYXRjaC51cmwgPT09IFwiL2JpZHMvYWN0aXZlYmlkc1wiIHx8XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgbWF0Y2gudXJsID09PSBcIi9iaWRzL2RlY2xpbmVkYmlkc1wiXG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICByb3V0ZT17XCIvYmlkcy9hY3RpdmViaWRzXCJ9XG4gICAgICAgICAgICAgICAgICAgID5cbiAgICAgICAgICAgICAgICAgICAgICAgIDxiPnt0aGlzLmNvbnRleHQudChcIkhFQURFUl9MSU5LX0JJRFNcIil9PC9iPlxuICAgICAgICAgICAgICAgICAgICA8L0hlYWRlckJhclRhYj5cbiAgICAgICAgICAgICAgICApfVxuXG4gICAgICAgICAgICAgICAge3Byb2ZpbGUgPT09IFwiQlVZRVJcIiAmJiAoXG4gICAgICAgICAgICAgICAgICAgIDxIZWFkZXJCYXJUYWJcbiAgICAgICAgICAgICAgICAgICAgICAgIG1hdGNoPXttYXRjaC51cmwgPT09IFwiL2Nsb3NlZGRlYWxzXCJ9XG4gICAgICAgICAgICAgICAgICAgICAgICByb3V0ZT17XCIvY2xvc2VkZGVhbHNcIn1cbiAgICAgICAgICAgICAgICAgICAgPlxuICAgICAgICAgICAgICAgICAgICAgICAgPGI+e3RoaXMuY29udGV4dC50KFwiSEVBREVSX0xJTktfQ0xPU0VEX0RFQUxTXCIpfTwvYj5cbiAgICAgICAgICAgICAgICAgICAgPC9IZWFkZXJCYXJUYWI+XG4gICAgICAgICAgICAgICAgKX1cblxuICAgICAgICAgICAgICAgIHtwcm9maWxlID09PSBcIlNFTExFUlwiICYmIChcbiAgICAgICAgICAgICAgICAgICAgPEhlYWRlckJhclRhYlxuICAgICAgICAgICAgICAgICAgICAgICAgbWF0Y2g9e21hdGNoLnVybCA9PT0gXCIvbWFuYWdlbGlzdGluZ3NcIn1cbiAgICAgICAgICAgICAgICAgICAgICAgIHJvdXRlPXtcIi9tYW5hZ2VsaXN0aW5nc1wifVxuICAgICAgICAgICAgICAgICAgICA+XG4gICAgICAgICAgICAgICAgICAgICAgICA8Yj57dGhpcy5jb250ZXh0LnQoXCJIRUFERVJfTElOS19NQU5BR0VfTElTVElOR1NcIil9PC9iPlxuICAgICAgICAgICAgICAgICAgICA8L0hlYWRlckJhclRhYj5cbiAgICAgICAgICAgICAgICApfVxuXG4gICAgICAgICAgICAgICAge3Byb2ZpbGUgPT09IFwiU0VMTEVSXCIgJiYgKFxuICAgICAgICAgICAgICAgICAgICA8SGVhZGVyQmFyVGFiXG4gICAgICAgICAgICAgICAgICAgICAgICBtYXRjaD17bWF0Y2gudXJsID09PSBcIi9jb21tZXJjaWFsYWN0aXZpdHlcIn1cbiAgICAgICAgICAgICAgICAgICAgICAgIHJvdXRlPXtcIi9jb21tZXJjaWFsYWN0aXZpdHlcIn1cbiAgICAgICAgICAgICAgICAgICAgPlxuICAgICAgICAgICAgICAgICAgICAgICAgPGI+e3RoaXMuY29udGV4dC50KFwiSEVBREVSX0xJTktfQ09NTUVSQ0lBTF9BQ1RJVklUWVwiKX08L2I+XG4gICAgICAgICAgICAgICAgICAgIDwvSGVhZGVyQmFyVGFiPlxuICAgICAgICAgICAgICAgICl9XG5cbiAgICAgICAgICAgICAgICB7cHJvZmlsZSA9PT0gXCJTRUxMRVJcIiAmJiAoXG4gICAgICAgICAgICAgICAgICAgIDxDdXN0b21MaW5rXG4gICAgICAgICAgICAgICAgICAgICAgICBtYXRjaD17bWF0Y2gucGF0aCA9PT0gXCIvY29udGVudGxpc3RpbmcvOmN1c3RvbUlkPy86c3RlcD9cIn1cbiAgICAgICAgICAgICAgICAgICAgICAgIHJvdXRlPXtcIi9jb250ZW50bGlzdGluZy9uZXdcIn1cbiAgICAgICAgICAgICAgICAgICAgPlxuICAgICAgICAgICAgICAgICAgICAgICAgPGI+e3RoaXMuY29udGV4dC50KFwiSEVBREVSX0xJTktfQ1JFQVRFX0xJU1RJTkdcIil9PC9iPlxuICAgICAgICAgICAgICAgICAgICA8L0N1c3RvbUxpbms+XG4gICAgICAgICAgICAgICAgKX1cblxuICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwic3BhY2VyXCIgLz5cblxuICAgICAgICAgICAgICAgIHtwcm9maWxlID09PSBcIkJVWUVSXCIgJiYgKFxuICAgICAgICAgICAgICAgICAgICA8SGVhZGVyQmFyVGFiIGNsYXNzTmFtZT1cInRhYlwiIHJvdXRlPVwiL21hbmFnZWxpc3RpbmdzXCI+XG4gICAgICAgICAgICAgICAgICAgICAgICB7dGhpcy5jb250ZXh0LnQoXCJIRUFERVJfTElOS19TRUxMSU5HX01PREVcIil9XG4gICAgICAgICAgICAgICAgICAgIDwvSGVhZGVyQmFyVGFiPlxuICAgICAgICAgICAgICAgICl9XG5cbiAgICAgICAgICAgICAgICB7cHJvZmlsZSA9PT0gXCJTRUxMRVJcIiAmJiAoXG4gICAgICAgICAgICAgICAgICAgIDxIZWFkZXJCYXJUYWIgY2xhc3NOYW1lPVwidGFiXCIgcm91dGU9XCIvbWFya2V0cGxhY2VcIj5cbiAgICAgICAgICAgICAgICAgICAgICAgIHt0aGlzLmNvbnRleHQudChcIkhFQURFUl9MSU5LX0JVWUlOR19NT0RFXCIpfVxuICAgICAgICAgICAgICAgICAgICA8L0hlYWRlckJhclRhYj5cbiAgICAgICAgICAgICAgICApfVxuXG4gICAgICAgICAgICAgICAgPEhlYWRlckJhclRhYiBjbGFzc05hbWU9XCJ0YWJcIiByb3V0ZT1cIi9tZXNzYWdlc1wiPlxuICAgICAgICAgICAgICAgICAgICA8aSBjbGFzc05hbWU9XCJmYSBmYS1lbnZlbG9wZVwiIC8+XG4gICAgICAgICAgICAgICAgICAgIHt0aGlzLmNvbnRleHQudChcIkhFQURFUl9MSU5LX01FU1NBR0VTXCIpfVxuICAgICAgICAgICAgICAgIDwvSGVhZGVyQmFyVGFiPlxuXG4gICAgICAgICAgICAgICAgPEhlYWRlck5vdGlmaWNhdGlvbnMgLz5cblxuICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwic2V0dGluZ3NcIj5cbiAgICAgICAgICAgICAgICAgICAgPGkgY2xhc3NOYW1lPVwiZmEgZmEtMnggZmEtZ2VhclwiIC8+XG5cbiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJwb3B1cFwiPlxuICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJ3cmFwXCI+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPEhlYWRlckJhclRhYlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICByb3V0ZT1cIi9zZXR0aW5nc1wiXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNsYXNzTmFtZT1cInRhYlwiID5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAge3RoaXMuY29udGV4dC50KFwiSEVBREVSX0xJTktfU0VUVElOR1NcIil9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9IZWFkZXJCYXJUYWI+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj1cIi9sb2dvdXRcIiBjbGFzc05hbWU9XCJ0YWJcIj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAge3RoaXMuY29udGV4dC50KFwiSEVBREVSX0xJTktfTE9HT1VUXCIpfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvYT5cbiAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICApXG4gICAgfVxuXG4gICAgZ2V0TG9nb1VybCA9ICgpID0+IHtcbiAgICAgICAgY29uc3QgeyBwcm9maWxlIH0gPSB0aGlzLnByb3BzO1xuXG4gICAgICAgIGlmIChwcm9maWxlID09PSBcIlNFTExFUlwiKSB7XG4gICAgICAgICAgICByZXR1cm4gXCJtYW5hZ2VsaXN0aW5nc1wiO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgcmV0dXJuIFwibWFya2V0cGxhY2VcIjtcbiAgICAgICAgfVxuICAgIH1cbn1cblxuSGVhZGVyQmFyLmNvbnRleHRUeXBlcyA9IHtcbiAgICB0OiBQcm9wVHlwZXMuZnVuYy5pc1JlcXVpcmVkXG59O1xuXG5cbmV4cG9ydCBkZWZhdWx0IEhlYWRlckJhcjtcblxuXG5cblxuLy8gV0VCUEFDSyBGT09URVIgLy9cbi8vIC4vc3JjL0FwcEJ1bmRsZS9SZXNvdXJjZXMvcHVibGljL2phdmFzY3JpcHQvbWFpbi9jb21wb25lbnRzL0hlYWRlckJhci5qcyIsImltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgY24gZnJvbSAnY2xhc3NuYW1lcyc7XG5pbXBvcnQgdW5pcUJ5IGZyb20gJ2xvZGFzaC91bmlxQnknO1xuaW1wb3J0IHNvcnRCeSBmcm9tICdsb2Rhc2gvc29ydEJ5JztcbmltcG9ydCB7UHJvcFR5cGVzfSBmcm9tIFwicHJvcC10eXBlc1wiO1xuXG5jbGFzcyBIZWFkZXJOb3RpZmljYXRpb25zIGV4dGVuZHMgIFJlYWN0LkNvbXBvbmVudCB7XG4gICAgY29uc3RydWN0b3IocHJvcHMpe1xuICAgICAgICBzdXBlcihwcm9wcyk7XG5cbiAgICAgICAgdGhpcy5zdGF0ZSA9IHtcbiAgICAgICAgICAgIGRhdGFMb2FkaW5nOiB0cnVlLFxuICAgICAgICAgICAgbm90aWZpY2F0aW9uczogW11cbiAgICAgICAgfVxuICAgIH1cblxuICAgIGNvbXBvbmVudERpZE1vdW50KCkge1xuICAgICAgICB0aGlzLmxvYWROb3RpZmljYXRpb25zKCk7XG4gICAgfVxuXG4gICAgcmVuZGVyKCl7XG4gICAgICAgIGNvbnN0IHsgbm90aWZpY2F0aW9ucywgZGF0YUxvYWRpbmcsIHVuc2Vlbk5vdGlmaWNhdGlvbnNDb3VudCB9ID0gdGhpcy5zdGF0ZTtcbiAgICAgICAgY29uc3QgbkNvdW50ID0gbm90aWZpY2F0aW9ucy5sZW5ndGg7XG5cbiAgICAgICAgcmV0dXJuKFxuICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9J25vdGlmaWNhdGlvbnMnPlxuICAgICAgICAgICAgICAgIDxpIGNsYXNzTmFtZT1cImZhIGZhLWJlbGxcIiB0aXRsZT0nTm90aWZpY2F0aW9ucycgLz5cbiAgICAgICAgICAgICAgICB7ISF1bnNlZW5Ob3RpZmljYXRpb25zQ291bnQgJiYgPGRpdiBjbGFzc05hbWU9J2NvdW50ZXInPnt1bnNlZW5Ob3RpZmljYXRpb25zQ291bnR9PC9kaXY+fVxuICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPSdleHBhbmRlZC1saXN0Jz5cbiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9J2NhcHRpb24nPntkYXRhTG9hZGluZyA/ICdMb2FkaW5nIG5vdGlmaWNhdGlvbnMuLi4nIDogJ05vdGlmaWNhdGlvbnMnfTwvZGl2PlxuICAgICAgICAgICAgICAgICAgICB7IWRhdGFMb2FkaW5nICYmICEhbkNvdW50ICYmIChcbiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPSdpdGVtcyc+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAge25vdGlmaWNhdGlvbnMubWFwKChpdGVtKSA9PiB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbnN0IHsgaWQsIHNlZW4sIHRleHQgfSA9IGl0ZW07XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiAoXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGtleT17XCJub3RpZmljYXRpb24tXCIraWR9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNsYXNzTmFtZT17Y24oJ2l0ZW0nLCB7J3VucmVhZCc6ICFzZWVuIH0pfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBvbkNsaWNrPXt0aGlzLm9uTm90aWZpY2F0aW9uQ2xpY2tlZC5iaW5kKHRoaXMsIGl0ZW0pfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHt0ZXh0fVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfSl9XG4gICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgICAgICAgKX1cbiAgICAgICAgICAgICAgICAgICAgeyFkYXRhTG9hZGluZyAmJiAhbkNvdW50ICYmIChcbiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPSduby1ub3RpZmljYXRpb25zJz5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB7dGhpcy5jb250ZXh0LnQoXCJOT1RJRklDQVRJT05TX0VNUFRZXCIpfVxuICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgICAgICAgICl9XG4gICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgKVxuICAgIH1cblxuICAgIG9uTm90aWZpY2F0aW9uQ2xpY2tlZCA9IChpdGVtKSA9PiB7XG4gICAgICAgIGNvbnN0IHR5cGVOYW1lID0gaXRlbS50eXBlLm5hbWU7XG4gICAgICAgIGlmICh0eXBlTmFtZSA9PT0gJ01FU1NBR0UnKSB7XG4gICAgICAgICAgICBDb250ZW50QXJlbmEuQXBpLm1hcmtOb3RpZmljYXRpb25Bc1NlZW4oaXRlbS5pZCk7XG4gICAgICAgICAgICBkb2N1bWVudC5sb2NhdGlvbi5ocmVmID0gYC9tZXNzYWdlcy8ke2l0ZW0ucmVmZXJlbmNlSWR9YFxuICAgICAgICB9XG4gICAgfTtcblxuICAgIGxvYWROb3RpZmljYXRpb25zKCkge1xuICAgICAgICBDb250ZW50QXJlbmEuQXBpLmdldE5vdGlmaWNhdGlvbnMoKS50aGVuKCh7ZGF0YX0pID0+IHtcblxuICAgICAgICAgICAgaWYgKCBkYXRhID09PSB1bmRlZmluZWQgKSByZXR1cm47XG5cbiAgICAgICAgICAgIGRhdGEuc29ydCgoYSwgYikgPT4ge1xuICAgICAgICAgICAgICAgIHJldHVybiBiLmlkIC0gYS5pZDtcbiAgICAgICAgICAgIH0pO1xuXG4gICAgICAgICAgICBjb25zdCB1bmlxTm90aWZpY2F0aW9ucyA9IHVuaXFCeShkYXRhLCAncmVmZXJlbmNlSWQnKTtcbiAgICAgICAgICAgIGNvbnN0IHVuc2Vlbk5vdGlmaWNhdGlvbnNDb3VudCA9IHVuaXFOb3RpZmljYXRpb25zLmZpbHRlcihpdGVtID0+ICFpdGVtLnNlZW4pLmxlbmd0aDtcblxuICAgICAgICAgICAgdGhpcy5zZXRTdGF0ZSh7XG4gICAgICAgICAgICAgICAgZGF0YUxvYWRpbmc6IGZhbHNlLFxuICAgICAgICAgICAgICAgIHVuc2Vlbk5vdGlmaWNhdGlvbnNDb3VudCxcbiAgICAgICAgICAgICAgICBub3RpZmljYXRpb25zOiB1bmlxTm90aWZpY2F0aW9uc1xuICAgICAgICAgICAgfSk7XG4gICAgICAgIH0pO1xuICAgIH1cbn1cblxuSGVhZGVyTm90aWZpY2F0aW9ucy5jb250ZXh0VHlwZXMgPSB7XG4gICAgdDogUHJvcFR5cGVzLmZ1bmMuaXNSZXF1aXJlZFxufTtcblxuZXhwb3J0IGRlZmF1bHQgSGVhZGVyTm90aWZpY2F0aW9ucztcblxuXG5cblxuLy8gV0VCUEFDSyBGT09URVIgLy9cbi8vIC4vc3JjL0FwcEJ1bmRsZS9SZXNvdXJjZXMvcHVibGljL2phdmFzY3JpcHQvbWFpbi9jb21wb25lbnRzL0hlYWRlck5vdGlmaWNhdGlvbnMuanMiLCJpbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xuXG5leHBvcnQgY29uc3QgY2FuY2VsSWNvbiA9IGFzc2V0c0Jhc2VEaXIgKyBcImFwcC9pbWFnZXMvY2FuY2VsLnBuZ1wiO1xuZXhwb3J0IGNvbnN0IGJ1Y2tldEljb24gPSBhc3NldHNCYXNlRGlyICsgXCJhcHAvaW1hZ2VzL2J1Y2tldC5wbmdcIjtcbmV4cG9ydCBjb25zdCBhZGRJY29uID0gYXNzZXRzQmFzZURpciArIFwiYXBwL2ltYWdlcy9hZGQucG5nXCI7XG5leHBvcnQgY29uc3QgZXhjbGFtYXRpb25Sb3VuZEljb24gPSBhc3NldHNCYXNlRGlyICsgXCJhcHAvaW1hZ2VzL2V4Y2xhbWF0aW9uX3JvdW5kLnBuZ1wiO1xuZXhwb3J0IGNvbnN0IGNsb2NrUm91bmRJY29uID0gYXNzZXRzQmFzZURpciArIFwiYXBwL2ltYWdlcy9jbG9jay5wbmdcIjtcbmV4cG9ydCBjb25zdCBwbGF5SWNvbiA9IGFzc2V0c0Jhc2VEaXIgKyBcImFwcC9pbWFnZXMvcGxheS5wbmdcIjtcblxuXG5leHBvcnQgY29uc3QgYmlkSWNvbiA9IGFzc2V0c0Jhc2VEaXIgKyBcImFwcC9pbWFnZXMvaGFtbWVyLnBuZ1wiO1xuZXhwb3J0IGNvbnN0IGZpeGVkSWNvbiA9IGFzc2V0c0Jhc2VEaXIgKyBcImFwcC9pbWFnZXMvYmlkLnBuZ1wiO1xuZXhwb3J0IGNvbnN0IGRvY0ljb24gPSBhc3NldHNCYXNlRGlyICsgXCJhcHAvaW1hZ2VzL2RvYy5wbmdcIjtcbmV4cG9ydCBjb25zdCBwZGZJY29uID0gYXNzZXRzQmFzZURpciArIFwiYXBwL2ltYWdlcy9wZGYucG5nXCI7XG5leHBvcnQgY29uc3QgZWRpdEljb24gPSBhc3NldHNCYXNlRGlyICsgXCJhcHAvaW1hZ2VzL2VkaXQucG5nXCI7XG5leHBvcnQgY29uc3QgYmx1ZUVudmVsb3BlSWNvbiA9IGFzc2V0c0Jhc2VEaXIgKyBcImFwcC9pbWFnZXMvZW52ZWxvcGVfMi5wbmdcIjtcbmV4cG9ydCBjb25zdCBpbmZvSWNvbiA9IGFzc2V0c0Jhc2VEaXIgKyBcImFwcC9pbWFnZXMvaW5mb19ibHVlLnBuZ1wiO1xuZXhwb3J0IGNvbnN0IHNvbGRJY29uID0gYXNzZXRzQmFzZURpciArIFwiYXBwL2ltYWdlcy9zb2xkLnBuZ1wiO1xuZXhwb3J0IGNvbnN0IGV4cGlyZWRJY29uID0gYXNzZXRzQmFzZURpciArIFwiYXBwL2ltYWdlcy9leHBpcmVkLnBuZ1wiO1xuZXhwb3J0IGNvbnN0IGZpbHRlckljb24gPSBhc3NldHNCYXNlRGlyICsgXCJhcHAvaW1hZ2VzL2ZpbHRlci5wbmdcIjtcbmV4cG9ydCBjb25zdCBzZWFyY2hJY29uID0gYXNzZXRzQmFzZURpciArIFwiYXBwL2ltYWdlcy9zZWFyY2guc3ZnXCI7XG5leHBvcnQgY29uc3QgaGFtbWVySWNvbiA9IGFzc2V0c0Jhc2VEaXIgKyBcImFwcC9pbWFnZXMvbGlzdGluZy9oYW1tZXIuc3ZnXCI7XG5cbi8vcmlnaHRzXG5leHBvcnQgY29uc3QgeWVsbG93Q2hlY2tJY29uID0gYXNzZXRzQmFzZURpciArIFwiYXBwL2ltYWdlcy9yaWdodHMvZXhjbHVzaXZlLnN2Z1wiO1xuZXhwb3J0IGNvbnN0IGJsdWVDaGVja0ljb24gPSBhc3NldHNCYXNlRGlyICsgXCJhcHAvaW1hZ2VzL3JpZ2h0cy9ub24tZXhjbHVzaXZlLnN2Z1wiO1xuZXhwb3J0IGNvbnN0IGdyZXlNaW51c0ljb24gPSBhc3NldHNCYXNlRGlyICsgXCJhcHAvaW1hZ2VzL3JpZ2h0cy9ub24taW5jbHVkZWQuc3ZnXCI7XG5cbi8vZXZlbnRzXG5leHBvcnQgY29uc3QgdG91cm5hbWVudEljb24gPSA8aW1nIHNyYz17YXNzZXRzQmFzZURpciArIFwiYXBwL2ltYWdlcy9saXN0aW5nL3Ryb3BoeS5zdmdcIn0gYWx0PVwiXCIvPjtcbmV4cG9ydCBjb25zdCBzZWFzb25SZWxlYXNlSWNvbiA9IDxpbWcgc3JjPXthc3NldHNCYXNlRGlyICsgXCJhcHAvaW1hZ2VzL2xpc3RpbmcvY2FsZW5kYXIuc3ZnXCJ9IGFsdD1cIlwiLz47XG5leHBvcnQgY29uc3Qgc3BvcnRJY29uID0gPGltZyBzcmM9e2Fzc2V0c0Jhc2VEaXIgKyBcImFwcC9pbWFnZXMvbGlzdGluZy90ZW5uaXMtYmFsbC5zdmdcIn0gYWx0PVwiXCIvPjtcbmV4cG9ydCBjb25zdCBmaXh0dXJlc0VwaXNvZGVJY29uID0gPGkgY2xhc3NOYW1lPVwiZmEgZmEtcGxheS1jaXJjbGVcIiBhcmlhLWhpZGRlbj1cInRydWVcIiBzdHlsZT17e2NvbG9yOiAnIzJhYWFlYycsIGZvbnRTaXplOiAxOH19Lz47XG5leHBvcnQgY29uc3Qgc3BvcnRDYXRlZ29yeUljb24gPSA8aW1nIHNyYz17YXNzZXRzQmFzZURpciArIFwiYXBwL2ltYWdlcy9saXN0aW5nL2ZsYWcuc3ZnXCJ9IGFsdD1cIlwiLz47XG5leHBvcnQgY29uc3QgZXZlbnRUaW1lSWNvbiA9IDxpbWcgc3JjPXthc3NldHNCYXNlRGlyICsgXCJhcHAvaW1hZ2VzL2xpc3RpbmcvY2FsZW5kYXItY2xvY2suc3ZnXCJ9IGFsdD1cIlwiLz47XG5leHBvcnQgY29uc3QgY29pbkljb24gPSA8aW1nIHNyYz17YXNzZXRzQmFzZURpciArIFwiYXBwL2ltYWdlcy9saXN0aW5nL2NvaW4uc3ZnXCJ9IGFsdD1cIlwiLz47XG5cblxuZXhwb3J0IGNvbnN0IFNwaW5uZXIgPSAoe3Rlc3R9KSA9PiAoXG4gICAgPGRpdj48aSBjbGFzc05hbWU9XCJmYSBmYS1jb2cgZmEtc3BpblwiLz48L2Rpdj5cbik7XG5cblxuLy8gV0VCUEFDSyBGT09URVIgLy9cbi8vIC4vc3JjL0FwcEJ1bmRsZS9SZXNvdXJjZXMvcHVibGljL2phdmFzY3JpcHQvbWFpbi9jb21wb25lbnRzL0ljb25zLmpzIiwiaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCBTZWxlY3QgZnJvbSAncmVhY3Qtc2VsZWN0JztcbmltcG9ydCB7bGFuZ3VhZ2VzfSBmcm9tIFwiLi4vLi4vLi4vZGF0YS9sYW5ndWFnZXNcIjtcblxuZXhwb3J0IGNvbnN0IGFsbFZhbHVlID0ge1xuICAgIHZhbHVlOiAnYWxsJyxcbiAgICBsYWJlbDogJ0FsbCdcbn07XG5cbmNsYXNzIExhbmd1YWdlU2VsZWN0b3IgZXh0ZW5kcyAgUmVhY3QuQ29tcG9uZW50IHtcbiAgICBjb25zdHJ1Y3Rvcihwcm9wcyl7XG4gICAgICAgIHN1cGVyKHByb3BzKTtcblxuICAgICAgICB0aGlzLnN0YXRlID0ge307XG5cbiAgICAgICAgdGhpcy5wcmV2U2VsZWN0aW9uID0gcHJvcHMudmFsdWUgPyBbLi4ucHJvcHMudmFsdWVdIDogW107XG4gICAgfVxuXG4gICAgaGFuZGxlT25DaGFuZ2UgPSAoc2VsZWN0aW9uKSA9PiB7XG4gICAgICAgIGNvbnN0IHsgb25DaGFuZ2UgfSA9IHRoaXMucHJvcHM7XG4gICAgICAgIGNvbnN0IGhhc0FsbCA9ICEhc2VsZWN0aW9uLmZpbmQoKGl0ZW0pID0+IGl0ZW0udmFsdWUgPT09ICdhbGwnKTtcbiAgICAgICAgY29uc3QgaGFzQWxsUHJldiA9ICEhdGhpcy5wcmV2U2VsZWN0aW9uLmZpbmQoKGl0ZW0pID0+IGl0ZW0udmFsdWUgPT09ICdhbGwnKTtcbiAgICAgICAgLy9jb25zdCBpdGVtc0NoYW5nZWQgPSBzZWxlY3Rpb24ubGVuZ3RoICE9PSB0aGlzLnByZXZTZWxlY3Rpb24ubGVuZ3RoO1xuXG4gICAgICAgIGlmIChoYXNBbGwpIHtcbiAgICAgICAgICAgIGlmIChoYXNBbGxQcmV2KSB7XG4gICAgICAgICAgICAgICAgLy8gUmVtb3ZlIEFsbFxuICAgICAgICAgICAgICAgIHNlbGVjdGlvbiA9IHNlbGVjdGlvbi5maWx0ZXIoaXRlbSA9PiBpdGVtLnZhbHVlICE9PSAnYWxsJyk7XG4gICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgIC8vIEFkZCBBbGwgYW5kIHJlbW92ZSBvdGhlcnNcbiAgICAgICAgICAgICAgICBzZWxlY3Rpb24gPSBbYWxsVmFsdWVdO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG5cbiAgICAgICAgdGhpcy5wcmV2U2VsZWN0aW9uID0gc2VsZWN0aW9uO1xuXG4gICAgICAgIG9uQ2hhbmdlKHNlbGVjdGlvbik7XG4gICAgfTtcblxuICAgIHJlbmRlcigpe1xuICAgICAgICBjb25zdCB7IHZhbHVlLCBtdWx0aSA9IHRydWUgfSA9IHRoaXMucHJvcHM7XG4gICAgICAgIGNvbnN0IHJlYWxMYW5ndWFnZXMgPSBPYmplY3QudmFsdWVzKGxhbmd1YWdlcykubWFwKChpLCBrKT0+KHt2YWx1ZSA6IGkubmFtZSAsIGxhYmVsIDogaS5uYW1lIH0pKTtcbiAgICAgICAgY29uc3QgYWxsTGFuZ3VhZ2VzID0gWyBhbGxWYWx1ZSwgLi4ucmVhbExhbmd1YWdlcyBdO1xuXG4gICAgICAgIHJldHVybihcbiAgICAgICAgICAgIDxTZWxlY3RcbiAgICAgICAgICAgICAgICBuYW1lPVwiZm9ybS1maWVsZC1uYW1lXCJcbiAgICAgICAgICAgICAgICBvbkNoYW5nZT17dGhpcy5oYW5kbGVPbkNoYW5nZX1cbiAgICAgICAgICAgICAgICB2YWx1ZT17dmFsdWV9XG4gICAgICAgICAgICAgICAgbXVsdGk9e211bHRpfVxuICAgICAgICAgICAgICAgIG9wdGlvbnM9e2FsbExhbmd1YWdlc31cbiAgICAgICAgICAgIC8+XG4gICAgICAgIClcbiAgICB9XG59XG5cbmV4cG9ydCB7IExhbmd1YWdlU2VsZWN0b3IgfTtcblxuXG5cblxuLy8gV0VCUEFDSyBGT09URVIgLy9cbi8vIC4vc3JjL0FwcEJ1bmRsZS9SZXNvdXJjZXMvcHVibGljL2phdmFzY3JpcHQvbWFpbi9jb21wb25lbnRzL0xhbmd1YWdlU2VsZWN0b3IuanMiLCJpbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xuaW1wb3J0IFNlbGVjdCBmcm9tICdyZWFjdC1zZWxlY3QnO1xuaW1wb3J0IHtsYW5ndWFnZXN9IGZyb20gXCIuLi8uLi8uLi9kYXRhL2xhbmd1YWdlc1wiO1xuXG5jbGFzcyBMYW5ndWFnZVNlbGVjdG9yRXh0ZW5kZWQgZXh0ZW5kcyAgUmVhY3QuQ29tcG9uZW50IHtcbiAgICBjb25zdHJ1Y3Rvcihwcm9wcyl7XG4gICAgICAgIHN1cGVyKHByb3BzKTtcblxuICAgICAgICB0aGlzLnN0YXRlID0ge1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgaGFuZGxlT25DaGFuZ2UgPSAoc2VsZWN0aW9uKSA9PiB7XG4gICAgICAgIGNvbnN0IHsgb25DaGFuZ2UgfSA9IHRoaXMucHJvcHM7XG4gICAgICAgIG9uQ2hhbmdlKHNlbGVjdGlvbiA/IHNlbGVjdGlvbi52YWx1ZTogbnVsbCk7XG4gICAgfTtcblxuICAgIGNvbXBvbmVudERpZE1vdW50ID0gKCkgPT4ge1xuICAgIH07XG5cbiAgICByZW5kZXIoKXtcbiAgICAgICAgY29uc3Qge3ZhbHVlLCBtdWx0aSA9IHRydWUsIHBsYWNlaG9sZGVyfSA9IHRoaXMucHJvcHM7XG4gICAgICAgIHJldHVybihcbiAgICAgICAgICAgIDxTZWxlY3RcbiAgICAgICAgICAgICAgICBuYW1lPVwiZm9ybS1maWVsZC1uYW1lXCJcbiAgICAgICAgICAgICAgICBvbkNoYW5nZT17dGhpcy5oYW5kbGVPbkNoYW5nZX1cbiAgICAgICAgICAgICAgICB2YWx1ZT17e3ZhbHVlIDogdmFsdWUgLCBsYWJlbCA6IHZhbHVlIH19XG4gICAgICAgICAgICAgICAgcGxhY2Vob2xkZXI9e3BsYWNlaG9sZGVyfVxuICAgICAgICAgICAgICAgIG11bHRpPXttdWx0aX1cbiAgICAgICAgICAgICAgICBvcHRpb25zPXtPYmplY3QudmFsdWVzKGxhbmd1YWdlcykubWFwKChpLGspPT4oe3ZhbHVlIDogaS5uYW1lICwgbGFiZWwgOiBpLm5hbWUgfSkpfVxuICAgICAgICAgICAgLz5cbiAgICAgICAgKVxuICAgIH1cbn1cblxuZXhwb3J0IGRlZmF1bHQgTGFuZ3VhZ2VTZWxlY3RvckV4dGVuZGVkO1xuXG5cblxuXG5cblxuLy8gV0VCUEFDSyBGT09URVIgLy9cbi8vIC4vc3JjL0FwcEJ1bmRsZS9SZXNvdXJjZXMvcHVibGljL2phdmFzY3JpcHQvbWFpbi9jb21wb25lbnRzL0xhbmd1YWdlU2VsZWN0b3JFeHRlbmRlZC5qcyIsImltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQge3BkZkljb259IGZyb20gXCIuL0ljb25zXCI7XG5pbXBvcnQge3ZpZXdMaWNlbnNlLCB2aWV3TGljZW5zZUJpZCwgdmlld0xpY2Vuc2VCdW5kbGUsIHZpZXdMaWNlbnNlQ3VzdG9tfSBmcm9tIFwiLi4vYWN0aW9ucy91dGlsc1wiO1xuXG5jbGFzcyBMaWNlbnNlRG93bmxvYWRlciBleHRlbmRzIFJlYWN0LkNvbXBvbmVudCB7XG5cbiAgICBjb25zdHJ1Y3Rvcihwcm9wcykge1xuICAgICAgICBzdXBlcihwcm9wcyk7XG4gICAgICAgIHRoaXMuc3RhdGUgPSB7XG4gICAgICAgIH07XG4gICAgfVxuXG4gICAgZ2V0TGljZW5zZSA9ICgpID0+IHtcbiAgICAgICAgY29uc3Qge3R5cGUgLCBpZCwgbGlzdGluZ0lkICwgYnVuZGxlfSA9IHRoaXMucHJvcHM7XG4gICAgICAgIHN3aXRjaCAodHlwZSl7XG4gICAgICAgICAgICBjYXNlIFwiQklEXCI6XG4gICAgICAgICAgICAgICAgdmlld0xpY2Vuc2VCaWQoaWQpO1xuICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgY2FzZSBcIkJVTkRMRVwiOlxuICAgICAgICAgICAgICAgIHZpZXdMaWNlbnNlQnVuZGxlKGlkLCBsaXN0aW5nSWQpO1xuICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgY2FzZSBcIkNVU1RPTVwiOlxuICAgICAgICAgICAgICAgIHZpZXdMaWNlbnNlQ3VzdG9tKGxpc3RpbmdJZCwgYnVuZGxlKTtcbiAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgIGRlZmF1bHQ6XG4gICAgICAgICAgICAgICAgdmlld0xpY2Vuc2UoaWQpO1xuICAgICAgICB9XG4gICAgfTtcblxuICAgIHJlbmRlcigpe1xuICAgICAgICBjb25zdCB7c3R5bGU9e30sIGljb25TdHlsZT17aGVpZ2h0OiAyM319ID0gdGhpcy5wcm9wcztcbiAgICAgICAgcmV0dXJuIChcbiAgICAgICAgICAgIDxkaXYgc3R5bGU9e3suLi5zdHlsZSxjdXJzb3I6ICdwb2ludGVyJ319XG4gICAgICAgICAgICAgICAgIG9uQ2xpY2s9e3RoaXMuZ2V0TGljZW5zZX0+XG4gICAgICAgICAgICAgICAgPGltZyBzdHlsZT17aWNvblN0eWxlfSBzcmM9e3BkZkljb259Lz5cbiAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICApXG4gICAgfVxufVxuXG5leHBvcnQgZGVmYXVsdCBMaWNlbnNlRG93bmxvYWRlcjtcblxuXG4vLyBXRUJQQUNLIEZPT1RFUiAvL1xuLy8gLi9zcmMvQXBwQnVuZGxlL1Jlc291cmNlcy9wdWJsaWMvamF2YXNjcmlwdC9tYWluL2NvbXBvbmVudHMvTGljZW5zZURvd25sb2FkZXIuanMiLCJpbXBvcnQgUmVhY3QsIHsgQ29tcG9uZW50IH0gZnJvbSAncmVhY3QnO1xuaW1wb3J0IHtzdGVwQ2hhbmdlUmVzZXR9IGZyb20gXCIuLi8uLi9zZWxsL2FjdGlvbnMvY29udGVudEFjdGlvbnNcIjtcbmltcG9ydCB7Y29ubmVjdH0gZnJvbSBcInJlYWN0LXJlZHV4XCI7XG5pbXBvcnQge1Byb3BUeXBlc30gZnJvbSBcInByb3AtdHlwZXNcIjtcblxuY2xhc3MgTmV3U2Vhc29uIGV4dGVuZHMgUmVhY3QuQ29tcG9uZW50e1xuICAgIGNvbnN0cnVjdG9yKHByb3BzKXtcbiAgICAgICAgc3VwZXIocHJvcHMpO1xuXG4gICAgICAgIGxldCBzdGFydFllYXIgPSAyMDMwO1xuICAgICAgICBsZXQgeWVhcnMgPSBbXTtcblxuICAgICAgICBmb3IgKGxldCBpID0wOyBpIDwgODE7aSsrICl7IHllYXJzLnB1c2goc3RhcnRZZWFyLWkpfVxuXG4gICAgICAgIHRoaXMuc3RhdGUgPSB7XG4gICAgICAgICAgICBzdGFydERhdGUgOiBudWxsLFxuICAgICAgICAgICAgZW5kRGF0ZSA6IG51bGwsXG4gICAgICAgICAgICB5ZWFycyA6IHllYXJzXG4gICAgICAgIH1cbiAgICB9XG5cbiAgICBnZXRFbmRPcHRpb25zID0gKCkgPT4ge1xuICAgICAgICBsZXQgdmFsdWVzID0gW107XG4gICAgICAgIGNvbnN0IHtpbmRleCwgc2Vhc29uc30gPSB0aGlzLnByb3BzO1xuICAgICAgICBpZiAoIHNlYXNvbnNbaW5kZXhdLmZyb20gKXtcbiAgICAgICAgICAgIHZhbHVlcy5wdXNoKE51bWJlcihzZWFzb25zW2luZGV4XS5mcm9tKSk7XG4gICAgICAgICAgICB2YWx1ZXMucHVzaChOdW1iZXIoc2Vhc29uc1tpbmRleF0uZnJvbSkrMSk7XG5cbiAgICAgICAgICAgIHJldHVybiB2YWx1ZXMubWFwKHZhbHVlID0+IHtcbiAgICAgICAgICAgICAgICByZXR1cm48b3B0aW9uIHNlbGVjdGVkPXtOdW1iZXIoc2Vhc29uc1tpbmRleF0uZnJvbSkgPT09IHZhbHVlfSB2YWx1ZT17dmFsdWV9Pnt2YWx1ZX08L29wdGlvbj5cbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9XG5cbiAgICAgICAgcmV0dXJuICg8b3B0aW9uPlllYXI8L29wdGlvbj4pXG4gICAgfTtcblxuICAgIHNldERhdGUgPSAoa2V5LCB2YWx1ZSkgPT4ge1xuICAgICAgICBjb25zdCB7aW5kZXh9ID0gdGhpcy5wcm9wcztcbiAgICAgICAgdGhpcy5wcm9wcy51cGRhdGVGcm9tTXVsdGlwbGUoaW5kZXgsIGtleSwgdmFsdWUpXG4gICAgfTtcblxuICAgIHJlbmRlcigpe1xuICAgICAgICBjb25zdCB7aW5kZXgsIHNlYXNvbnN9ID0gdGhpcy5wcm9wcztcbiAgICAgICAgcmV0dXJuIChcbiAgICAgICAgICAgIDxkaXY+XG4gICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJiYXNlLWlucHV0XCI+XG4gICAgICAgICAgICAgICAgICAgIDxsYWJlbD5TZWFzb248L2xhYmVsPlxuICAgICAgICAgICAgICAgICAgICA8bGFiZWwgY2xhc3NOYW1lPXtcInNlYXNvbi1zZWxlY3Rvci1sYWJlbFwifT5Gcm9tPC9sYWJlbD5cbiAgICAgICAgICAgICAgICAgICAgPHNlbGVjdFxuICAgICAgICAgICAgICAgICAgICAgICAgdmFsdWU9e3NlYXNvbnNbaW5kZXhdLmZyb219XG4gICAgICAgICAgICAgICAgICAgICAgICBvbkNoYW5nZT17KGUpID0+IHsgdGhpcy5zZXREYXRlKCdmcm9tJywgZS50YXJnZXQudmFsdWUpIH19PlxuICAgICAgICAgICAgICAgICAgICAgICAgPG9wdGlvbi8+XG4gICAgICAgICAgICAgICAgICAgICAgICA8b3B0aW9uIGRpc2FibGVkPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHt0aGlzLmNvbnRleHQudChcIlllYXJcIil9XG4gICAgICAgICAgICAgICAgICAgICAgICA8L29wdGlvbj5cbiAgICAgICAgICAgICAgICAgICAgICAgIHt0aGlzLnN0YXRlLnllYXJzLm1hcCgoeWVhcixpKT0+KDxvcHRpb24ga2V5PXtpfSB2YWx1ZT17eWVhcn0+e3llYXJ9PC9vcHRpb24+KSl9XG4gICAgICAgICAgICAgICAgICAgIDwvc2VsZWN0PlxuICAgICAgICAgICAgICAgICAgICA8bGFiZWwgY2xhc3NOYW1lPXtcInNlYXNvbi1zZWxlY3Rvci1sYWJlbFwifT5cbiAgICAgICAgICAgICAgICAgICAgICAgIC97dGhpcy5jb250ZXh0LnQoXCJUb1wiKX1cbiAgICAgICAgICAgICAgICAgICAgPC9sYWJlbD5cbiAgICAgICAgICAgICAgICAgICAgPHNlbGVjdFxuICAgICAgICAgICAgICAgICAgICAgICAgdmFsdWU9e3NlYXNvbnNbaW5kZXhdLnRvfVxuICAgICAgICAgICAgICAgICAgICAgICAgb25DaGFuZ2U9eyhlKSA9PiB7IHRoaXMuc2V0RGF0ZSgndG8nLCBlLnRhcmdldC52YWx1ZSkgfX1cbiAgICAgICAgICAgICAgICAgICAgICAgIGRpc2FibGVkPXshc2Vhc29uc1tpbmRleF0uZnJvbX0+XG4gICAgICAgICAgICAgICAgICAgICAgICB7dGhpcy5nZXRFbmRPcHRpb25zKCl9XG4gICAgICAgICAgICAgICAgICAgICAgICA8b3B0aW9uIHZhbHVlPXswfT5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB7dGhpcy5jb250ZXh0LnQoXCJOb3QgYXBwbGljYWJsZVwiKX1cbiAgICAgICAgICAgICAgICAgICAgICAgIDwvb3B0aW9uPlxuICAgICAgICAgICAgICAgICAgICA8L3NlbGVjdD5cbiAgICAgICAgICAgICAgICAgICAgeyB0aGlzLnByb3BzLnNob3dDbG9zZSAmJlxuICAgICAgICAgICAgICAgICAgICA8YnV0dG9uIGNsYXNzTmFtZT17XCJzdGFuZGFyZC1idXR0b25cIn0gb25DbGljaz17dGhpcy5wcm9wcy5vblJlbW92ZX0+XG4gICAgICAgICAgICAgICAgICAgICAgICA8aSBjbGFzc05hbWU9XCJmYSBmYS1jbG9zZVwiLz5cbiAgICAgICAgICAgICAgICAgICAgPC9idXR0b24+fVxuICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgIClcbiAgICB9XG59XG5cbk5ld1NlYXNvbi5jb250ZXh0VHlwZXMgPSB7XG4gICAgdDogUHJvcFR5cGVzLmZ1bmMuaXNSZXF1aXJlZFxufTtcblxuY29uc3QgbWFwU3RhdGVUb1Byb3BzID0gc3RhdGUgPT4ge1xuICAgIHJldHVybiBzdGF0ZS5jb250ZW50XG59O1xuXG5jb25zdCBtYXBEaXNwYXRjaFRvUHJvcHMgPSBkaXNwYXRjaCA9PiB7XG4gICAgcmV0dXJuIHtcbiAgICAgICAgdXBkYXRlRnJvbU11bHRpcGxlIDogKGluZGV4LCBrZXksIHZhbHVlKSA9PiBkaXNwYXRjaCh7XG4gICAgICAgICAgICB0eXBlOiAnVVBEQVRFX0ZST01fTVVMVElQTEUnLFxuICAgICAgICAgICAgc2VsZWN0b3JUeXBlOiAnc2Vhc29ucycsXG4gICAgICAgICAgICBpbmRleDogaW5kZXgsXG4gICAgICAgICAgICBrZXk6IGtleSxcbiAgICAgICAgICAgIHZhbHVlOiB2YWx1ZVxuICAgICAgICB9KSxcblxuICAgIH1cbn07XG5cblxuXG5leHBvcnQgZGVmYXVsdCBjb25uZWN0KFxuICAgIG1hcFN0YXRlVG9Qcm9wcyxcbiAgICBtYXBEaXNwYXRjaFRvUHJvcHNcbikoTmV3U2Vhc29uKVxuXG5cblxuLy8gV0VCUEFDSyBGT09URVIgLy9cbi8vIC4vc3JjL0FwcEJ1bmRsZS9SZXNvdXJjZXMvcHVibGljL2phdmFzY3JpcHQvbWFpbi9jb21wb25lbnRzL05ld1NlYXNvbi5qcyIsImltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgTW9kYWwgZnJvbSAncmVhY3QtbW9kYWwnO1xuaW1wb3J0IHtjdXN0b21TdHlsZXN9IGZyb20gXCIuLi9zdHlsZXMvY3VzdG9tXCI7XG5pbXBvcnQge2NhbmNlbEljb24sIGZpbHRlckljb259IGZyb20gXCIuL0ljb25zXCI7XG5pbXBvcnQge1Byb3BUeXBlc30gZnJvbSBcInByb3AtdHlwZXNcIjtcbmltcG9ydCBSZWdpb25Db3VudHJ5U2VsZWN0b3IgZnJvbSBcIi4vUmVnaW9uQ291bnRyeVNlbGVjdG9yXCI7XG5cbmNsYXNzIFBvcHVwQ291bnRyeVNlbGVjdG9yIGV4dGVuZHMgUmVhY3QuQ29tcG9uZW50IHtcblxuICAgIGNvbnN0cnVjdG9yKHByb3BzKSB7XG4gICAgICAgIHN1cGVyKHByb3BzKTtcbiAgICAgICAgdGhpcy5zdGF0ZSA9IHtcbiAgICAgICAgICAgIGlzT3BlbiA6IGZhbHNlLFxuICAgICAgICAgICAgdmFsdWUgOiBwcm9wcy52YWx1ZSxcbiAgICAgICAgICAgIHNlbGVjdGVkT3B0aW9uIDogcHJvcHMuaW5jbHVkZUFsbENvdW50cmllcyA/ICdtdWx0aXBsZScgOiAnc2luZ2xlJ1xuICAgICAgICB9O1xuICAgIH1cblxuXG4gICAgb3Blbk1vZGFsID0gKCkgPT4ge1xuICAgICAgICB0aGlzLnNldFN0YXRlKHtpc09wZW46dHJ1ZX0pO1xuICAgIH07XG5cbiAgICBjbG9zZU1vZGFsID0gKCkgPT4ge1xuICAgICAgICBjb25zdCB7XG4gICAgICAgICAgICBvblNlbGVjdCA9IHRydWVcbiAgICAgICAgfSA9IHRoaXMucHJvcHM7XG4gICAgICAgIHRoaXMuc2V0U3RhdGUoe1xuICAgICAgICAgICAgaXNPcGVuOmZhbHNlLFxuICAgICAgICAgICAgdmFsdWU6IFtdXG4gICAgICAgIH0pO1xuICAgICAgICBvblNlbGVjdCh0aGlzLnJlZnMuc2VsZWN0b3Iuc3RhdGUuc2VsZWN0aW9uKTtcbiAgICB9O1xuXG4gICAgY2FuY2VsTW9kYWwgPSAoKSA9PiB7XG4gICAgICAgIHRoaXMuc2V0U3RhdGUoe2lzT3BlbjpmYWxzZX0pO1xuICAgIH07XG5cbiAgICBoYW5kbGVPcHRpb25DaGFuZ2UgPSAoY2hhbmdlRXZlbnQpID0+IHtcbiAgICAgICAgdGhpcy5zZXRTdGF0ZSh7XG4gICAgICAgICAgICBzZWxlY3RlZE9wdGlvbjogY2hhbmdlRXZlbnQudGFyZ2V0LnZhbHVlXG4gICAgICAgIH0pO1xuICAgIH07XG5cbiAgICBoYW5kbGVDb3VudHJ5Q2hhbmdlID0gKHZhbHVlKSA9PiB7XG4gICAgICAgIHRoaXMuc2V0U3RhdGUoeyB2YWx1ZX0pO1xuICAgIH07XG5cbiAgICByZW5kZXJNb2RhbCA9ICgpID0+IHtcbiAgICAgICAgY29uc3Qge1xuICAgICAgICAgICAgdmFsdWVcbiAgICAgICAgfSA9IHRoaXMuc3RhdGU7XG5cbiAgICAgICAgcmV0dXJuIDxNb2RhbFxuICAgICAgICAgICAgaXNPcGVuPXt0aGlzLnN0YXRlLmlzT3Blbn1cbiAgICAgICAgICAgIGJvZHlPcGVuQ2xhc3NOYW1lPXtcInNlbGVjdG9yXCJ9XG4gICAgICAgICAgICBzdHlsZT17Y3VzdG9tU3R5bGVzfVxuICAgICAgICA+XG5cbiAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwibW9kYWwtdGl0bGVcIj5cbiAgICAgICAgICAgICAgICB7dGhpcy5jb250ZXh0LnQoXCJDb3VudHJ5IFNlbGVjdG9yXCIpfVxuICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiY2xvc2VcIiBvbkNsaWNrPXt0aGlzLmNhbmNlbE1vZGFsfT5YPC9kaXY+XG4gICAgICAgICAgICA8L2Rpdj5cblxuICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJzdGVwLWNvbnRlbnRcIj5cbiAgICAgICAgICAgICAgICA8UmVnaW9uQ291bnRyeVNlbGVjdG9yXG4gICAgICAgICAgICAgICAgICAgIHZhbHVlPXt2YWx1ZX1cbiAgICAgICAgICAgICAgICAgICAgcmVmPVwic2VsZWN0b3JcIlxuICAgICAgICAgICAgICAgICAgICB3b3JsZHdpZGU9e3RydWV9XG4gICAgICAgICAgICAgICAgICAgIG9uQ2hhbmdlPXt0aGlzLmhhbmRsZUNvdW50cnlDaGFuZ2V9XG4gICAgICAgICAgICAgICAgLz5cbiAgICAgICAgICAgIDwvZGl2PlxuXG4gICAgICAgICAgICA8ZGl2IHN0eWxlPXt7XG4gICAgICAgICAgICAgICAgZGlzcGxheTogXCJmbGV4XCIsXG4gICAgICAgICAgICAgICAgbWFyZ2luOiAyMCxcblxuICAgICAgICAgICAgfX0+XG4gICAgICAgICAgICAgICAgPGlucHV0IHR5cGU9XCJyYWRpb1wiXG4gICAgICAgICAgICAgICAgICAgICAgIHZhbHVlPVwic2luZ2xlXCJcbiAgICAgICAgICAgICAgICAgICAgICAgY2xhc3NOYW1lPVwiY2EtcmFkaW9cIlxuICAgICAgICAgICAgICAgICAgICAgICBzdHlsZT17eyBoZWlnaHQ6ICcyMHB4Jywgd2lkdGg6IDIwLCBtYXJnaW5SaWdodDogMTV9fVxuICAgICAgICAgICAgICAgICAgICAgICBkZWZhdWx0Q2hlY2tlZD17dHJ1ZX1cbiAgICAgICAgICAgICAgICAgICAgICAgY2hlY2tlZD17dGhpcy5zdGF0ZS5zZWxlY3RlZE9wdGlvbiA9PT0gJ3NpbmdsZSd9XG4gICAgICAgICAgICAgICAgICAgICAgIG9uQ2hhbmdlPXt0aGlzLmhhbmRsZU9wdGlvbkNoYW5nZX1cbiAgICAgICAgICAgICAgICAvPlxuICAgICAgICAgICAgICAgIDxzcGFuIHN0eWxlPXt7Y29sb3I6J2JsYWNrJywgbWFyZ2luUmlnaHQ6IDMwLCBmb250U2l6ZTogJzE0cHgnfX0+XG4gICAgICAgICAgICAgICAgICAgIHt0aGlzLmNvbnRleHQudChcIk1BUktFVFBMQUNFX0ZJTFRFUl9PTkVfVEVSUklUT1JZXCIpfVxuICAgICAgICAgICAgICAgIDwvc3Bhbj5cblxuICAgICAgICAgICAgICAgIDxpbnB1dCB0eXBlPVwicmFkaW9cIlxuICAgICAgICAgICAgICAgICAgICAgICB2YWx1ZT1cIm11bHRpcGxlXCJcbiAgICAgICAgICAgICAgICAgICAgICAgY2xhc3NOYW1lPVwiY2EtcmFkaW9cIlxuICAgICAgICAgICAgICAgICAgICAgICBzdHlsZT17eyBoZWlnaHQ6ICcyMHB4Jywgd2lkdGg6IDIwLCBtYXJnaW5SaWdodDogMTV9fVxuICAgICAgICAgICAgICAgICAgICAgICBjaGVja2VkPXt0aGlzLnN0YXRlLnNlbGVjdGVkT3B0aW9uID09PSAnbXVsdGlwbGUnfVxuICAgICAgICAgICAgICAgICAgICAgICBvbkNoYW5nZT17dGhpcy5oYW5kbGVPcHRpb25DaGFuZ2V9XG4gICAgICAgICAgICAgICAgLz5cbiAgICAgICAgICAgICAgICA8c3BhbiBzdHlsZT17e2NvbG9yOidibGFjaycsIGZvbnRTaXplOiAnMTRweCd9fT5cbiAgICAgICAgICAgICAgICAgICAge3RoaXMuY29udGV4dC50KFwiTUFSS0VUUExBQ0VfRklMVEVSX0FMTF9URVJSSVRPUklFU1wiKX1cbiAgICAgICAgICAgICAgICA8L3NwYW4+XG4gICAgICAgICAgICA8L2Rpdj5cblxuICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9e1wiYnV0dG9uc1wifT5cbiAgICAgICAgICAgICAgICA8YnV0dG9uXG4gICAgICAgICAgICAgICAgICAgIGRpc2FibGVkPXshdmFsdWUgfHwgdmFsdWUubGVuZ3RoID09PSAwfVxuICAgICAgICAgICAgICAgICAgICBjbGFzc05hbWU9e1wic3RhbmRhcmQtYnV0dG9uXCJ9XG4gICAgICAgICAgICAgICAgICAgIG9uQ2xpY2s9e3RoaXMuY2xvc2VNb2RhbH0+T2s8L2J1dHRvbj5cblxuICAgICAgICAgICAgPC9kaXY+XG5cbiAgICAgICAgPC9Nb2RhbD5cbiAgICB9O1xuXG5cbiAgICByZW5kZXIoKXtcbiAgICAgICAgY29uc3Qge1xuICAgICAgICAgICAgc2hvd1RlcnJpdG9yaWVzID0gdHJ1ZVxuICAgICAgICB9ID0gdGhpcy5wcm9wcztcblxuICAgICAgICBjb25zdCB7dGVycml0b3JpZXMsIGFjdGl2ZVRlcnJpdG9yeX0gPSB0aGlzLnN0YXRlO1xuXG4gICAgICAgIHJldHVybiAoXG4gICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cInBvcHVwLWNvdW50cnktc2VsZWN0b3JcIj5cbiAgICAgICAgICAgICAgICB7IHRoaXMucmVuZGVyTW9kYWwoKSB9XG4gICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJmaWx0ZXItYnRuXCI+XG4gICAgICAgICAgICAgICAgICAgIDxpIGNsYXNzTmFtZT1cImZhIGZhLXNsaWRlcnNcIiBhcmlhLWhpZGRlbj1cInRydWVcIiBvbkNsaWNrPXt0aGlzLm9wZW5Nb2RhbH0gLz5cbiAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICApXG4gICAgfVxufVxuXG5Qb3B1cENvdW50cnlTZWxlY3Rvci5jb250ZXh0VHlwZXMgPSB7XG4gICAgdDogUHJvcFR5cGVzLmZ1bmMuaXNSZXF1aXJlZFxufTtcblxuZXhwb3J0IGRlZmF1bHQgUG9wdXBDb3VudHJ5U2VsZWN0b3I7XG5cblxuLy8gV0VCUEFDSyBGT09URVIgLy9cbi8vIC4vc3JjL0FwcEJ1bmRsZS9SZXNvdXJjZXMvcHVibGljL2phdmFzY3JpcHQvbWFpbi9jb21wb25lbnRzL1BvcHVwQ291bnRyeVNlbGVjdG9yLmpzIiwiZXhwb3J0IGNvbnN0IFByb2dyYW1UeXBlc0RlZmluaXRpb25zID0ge1xuICAgIEhJR0hMSUdIVF9TSE9XOlwiSGlnaGxpZ2h0IHNob3dcIixcbiAgICBET0NVTUVOVEFSWTpcIkRvY3VtZW50YXJ5XCIsXG4gICAgUFJFVklFVzpcIlByZXZpZXdcIixcbiAgICBUQUxLX1NIT1c6XCJUYWxrIHNob3dcIixcbiAgICBPVEhFUjpcIk90aGVyXCIsXG59O1xuXG5cbi8vIFdFQlBBQ0sgRk9PVEVSIC8vXG4vLyAuL3NyYy9BcHBCdW5kbGUvUmVzb3VyY2VzL3B1YmxpYy9qYXZhc2NyaXB0L21haW4vY29tcG9uZW50cy9Qcm9ncmFtVHlwZXNEZWZpbml0aW9ucy5qcyIsImltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgU2VsZWN0IGZyb20gJ3JlYWN0LXNlbGVjdCc7XG5pbXBvcnQgQ291bnRyeVNlbGVjdG9yIGZyb20gXCIuL0NvdW50cnlTZWxlY3RvclwiO1xuXG5jbGFzcyBSZWdpb25Db3VudHJ5U2VsZWN0b3IgZXh0ZW5kcyBSZWFjdC5Db21wb25lbnQge1xuXG4gICAgY29uc3RydWN0b3IocHJvcHMpIHtcbiAgICAgICAgc3VwZXIocHJvcHMpO1xuICAgICAgICB0aGlzLnN0YXRlID0ge1xuICAgICAgICAgICAgY291bnRyaWVzIDogW10sXG4gICAgICAgICAgICBzZWxlY3Rpb246IHByb3BzLnZhbHVlLFxuICAgICAgICAgICAgdGVycml0b3JpZXMgOiBbXSxcbiAgICAgICAgICAgIHJlZ2lvbnM6IFtdLFxuICAgICAgICAgICAgYWN0aXZlVGVycml0b3J5IDogbnVsbFxuICAgICAgICB9O1xuICAgIH1cblxuICAgIGNvbXBvbmVudERpZE1vdW50ICgpIHtcbiAgICAgICAgbGV0IF90aGlzID0gdGhpcztcbiAgICAgICAgQ29udGVudEFyZW5hLkFwaS5nZXRDb3VudHJpZXMoKS5kb25lKCAoY291bnRyaWVzICkgPT4ge1xuICAgICAgICAgICAgX3RoaXMuc2V0U3RhdGUoe2NvdW50cmllc30pO1xuICAgICAgICB9KTtcblxuICAgICAgICBpZiAoIENvbnRlbnRBcmVuYS5EYXRhLlRlcnJpdG9yaWVzLmxlbmd0aCA9PT0gMCkge1xuICAgICAgICAgICAgQ29udGVudEFyZW5hLkFwaS5nZXRUZXJyaXRvcmllcygpLmRvbmUoICh0ZXJyaXRvcmllcyApID0+IHtcbiAgICAgICAgICAgICAgICBDb250ZW50QXJlbmEuRGF0YS5UZXJyaXRvcmllcyA9IHRlcnJpdG9yaWVzO1xuICAgICAgICAgICAgICAgIF90aGlzLnNldFN0YXRlKHt0ZXJyaXRvcmllc30pO1xuICAgICAgICAgICAgfSk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICBfdGhpcy5zZXRTdGF0ZSh7dGVycml0b3JpZXM6IENvbnRlbnRBcmVuYS5EYXRhLlRlcnJpdG9yaWVzfSk7XG4gICAgICAgIH1cblxuICAgICAgICBpZiAoIENvbnRlbnRBcmVuYS5EYXRhLlJlZ2lvbnMubGVuZ3RoID09PSAwKSB7XG4gICAgICAgICAgICBDb250ZW50QXJlbmEuQXBpLmdldFJlZ2lvbnMoKS5kb25lKCAocmVnaW9ucyApID0+IHtcbiAgICAgICAgICAgICAgICBDb250ZW50QXJlbmEuRGF0YS5SZWdpb25zID0gcmVnaW9ucztcbiAgICAgICAgICAgICAgICBfdGhpcy5zZXRTdGF0ZSh7cmVnaW9uc30pO1xuICAgICAgICAgICAgfSk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICBfdGhpcy5zZXRTdGF0ZSh7cmVnaW9uczogQ29udGVudEFyZW5hLkRhdGEuUmVnaW9uc30pO1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgY29tcG9uZW50V2lsbFJlY2VpdmVQcm9wcyAobmV4dFByb3BzKXtcbiAgICAgICAgdGhpcy5zZXRTdGF0ZSh7IHNlbGVjdGlvbjogbmV4dFByb3BzLnZhbHVlIH0pO1xuICAgIH1cblxuICAgIHNlbGVjdFRlcnJpdG9yeShpZCkge1xuICAgICAgICBjb25zdCB7XG4gICAgICAgICAgICBmaWx0ZXIgPSBbXSxcbiAgICAgICAgICAgIG9uQ2hhbmdlXG4gICAgICAgIH0gPSB0aGlzLnByb3BzO1xuICAgICAgICBjb25zdCB7Y291bnRyaWVzfSA9IHRoaXMuc3RhdGU7XG4gICAgICAgIGxldCBzZWxlY3Rpb24gPSBjb3VudHJpZXMuZmlsdGVyKGM9PmMudGVycml0b3J5SWQgPT09IGlkICYmIGZpbHRlci5pbmRleE9mKGMubmFtZSkgPT09IC0xKS5tYXAoKGksayk9Pih7dmFsdWUgOiBpLm5hbWUgLCBsYWJlbCA6IGkubmFtZSB9KSk7XG4gICAgICAgIHRoaXMuc2V0U3RhdGUoeyBzZWxlY3Rpb24gfSk7XG4gICAgICAgIGlmIChvbkNoYW5nZSkgb25DaGFuZ2Uoc2VsZWN0aW9uKTtcbiAgICB9XG5cbiAgICBzZWxlY3RXb3JsZHdpZGUgPSAoKSA9PiB7XG4gICAgICAgIGNvbnN0IHtcbiAgICAgICAgICAgIG9uQ2hhbmdlXG4gICAgICAgIH0gPSB0aGlzLnByb3BzO1xuICAgICAgICBjb25zdCB7Y291bnRyaWVzfSA9IHRoaXMuc3RhdGU7XG4gICAgICAgIGxldCBzZWxlY3Rpb24gPSBjb3VudHJpZXMubWFwKChpLGspPT4oe3ZhbHVlIDogaS5uYW1lICwgbGFiZWwgOiBpLm5hbWUgfSkpO1xuICAgICAgICB0aGlzLnNldFN0YXRlKHsgc2VsZWN0aW9uIH0pO1xuICAgICAgICBpZiAob25DaGFuZ2UpIG9uQ2hhbmdlKHNlbGVjdGlvbik7XG4gICAgfTtcblxuICAgIHNlbGVjdFJlZ2lvbiA9IChpZCkgPT4ge1xuICAgICAgICBjb25zdCB7Y291bnRyaWVzfSA9IHRoaXMuc3RhdGU7XG4gICAgICAgIGNvbnN0IHtcbiAgICAgICAgICAgIGZpbHRlciA9IFtdLFxuICAgICAgICAgICAgb25DaGFuZ2UsXG4gICAgICAgIH0gPSB0aGlzLnByb3BzO1xuICAgICAgICBsZXQgc2VsZWN0aW9uID0gY291bnRyaWVzLmZpbHRlcihjPT5jLnJlZ2lvbnMuaW5kZXhPZihpZCkgIT09IC0xICYmIGZpbHRlci5pbmRleE9mKGMubmFtZSkgPT09IC0xKS5tYXAoKGksayk9Pih7dmFsdWUgOiBpLm5hbWUgLCBsYWJlbCA6IGkubmFtZSB9KSk7XG4gICAgICAgIHRoaXMuc2V0U3RhdGUoeyBzZWxlY3Rpb24gfSk7XG4gICAgICAgIGlmIChvbkNoYW5nZSkgb25DaGFuZ2Uoc2VsZWN0aW9uKTtcbiAgICB9XG5cbiAgICBoYW5kbGVDaGFuZ2UgPSAoc2VsZWN0aW9uKSA9PiB7XG5cbiAgICAgICAgY29uc3Qge1xuICAgICAgICAgICAgb25DaGFuZ2UsXG4gICAgICAgICAgICB2YWx1ZSxcbiAgICAgICAgfSA9IHRoaXMucHJvcHM7XG5cbiAgICAgICAgaWYgKG9uQ2hhbmdlKSBvbkNoYW5nZShzZWxlY3Rpb24pO1xuXG4gICAgICAgIHRoaXMuc2V0U3RhdGUoeyBzZWxlY3Rpb24gfSk7XG4gICAgfTtcblxuICAgIHJlbmRlcigpe1xuICAgICAgICBjb25zdCB7XG4gICAgICAgICAgICBmaWx0ZXIsXG4gICAgICAgICAgICBkaXNhYmxlZCxcbiAgICAgICAgICAgIHdvcmxkd2lkZVxuICAgICAgICB9ID0gdGhpcy5wcm9wcztcblxuICAgICAgICBjb25zdCB7dGVycml0b3JpZXMsIHJlZ2lvbnN9ID0gdGhpcy5zdGF0ZTtcblxuICAgICAgICByZXR1cm4gKFxuICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJjb3VudHJ5LXNlbGVjdG9yXCI+XG4gICAgICAgICAgICAgICAgeyAhZGlzYWJsZWQgJiYgPGRpdj5cbiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJyZWdpb25zXCI+XG4gICAgICAgICAgICAgICAgICAgICAgICB7dGVycml0b3JpZXMubWFwKCh0ZXJyaXRvcnksaSk9PntcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gPGJ1dHRvbiBjbGFzc05hbWU9e1wicmVnaW9uXCJ9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAga2V5PXtcInRlcnJpdG9yeS1cIiArIGl9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgb25DbGljaz17KCk9PntcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5zZWxlY3RUZXJyaXRvcnkodGVycml0b3J5LmlkKVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH19PlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB7dGVycml0b3J5Lm5hbWV9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9idXR0b24+XG4gICAgICAgICAgICAgICAgICAgICAgICB9KX1cbiAgICAgICAgICAgICAgICAgICAgICAgIHt3b3JsZHdpZGUgJiYgPGJ1dHRvbiBjbGFzc05hbWU9e1wicmVnaW9uXCJ9IG9uQ2xpY2s9e3RoaXMuc2VsZWN0V29ybGR3aWRlfT5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBXb3JsZHdpZGVcbiAgICAgICAgICAgICAgICAgICAgICAgIDwvYnV0dG9uPn1cbiAgICAgICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwicmVnaW9uc1wiPlxuICAgICAgICAgICAgICAgICAgICAgICAge3JlZ2lvbnMubWFwKChyZWdpb24saSk9PntcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gPGJ1dHRvbiBjbGFzc05hbWU9e1wicmVnaW9uXCJ9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAga2V5PXtcInJlZ2lvbi1cIiArIGl9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgb25DbGljaz17KCk9PntcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5zZWxlY3RSZWdpb24ocmVnaW9uLmlkKVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH19PlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB7cmVnaW9uLm5hbWV9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9idXR0b24+XG4gICAgICAgICAgICAgICAgICAgICAgICB9KX1cbiAgICAgICAgICAgICAgICAgICAgPC9kaXY+XG5cbiAgICAgICAgICAgICAgICA8L2Rpdj59XG4gICAgICAgICAgICAgICAgPENvdW50cnlTZWxlY3RvclxuICAgICAgICAgICAgICAgICAgICBmaWx0ZXI9e2ZpbHRlcn1cbiAgICAgICAgICAgICAgICAgICAgZGlzYWJsZWQ9e2Rpc2FibGVkfVxuICAgICAgICAgICAgICAgICAgICBvbkNoYW5nZT17dGhpcy5oYW5kbGVDaGFuZ2V9XG4gICAgICAgICAgICAgICAgICAgIHZhbHVlPXt0aGlzLnN0YXRlLnNlbGVjdGlvbn1cbiAgICAgICAgICAgICAgICAvPlxuICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgIClcbiAgICB9XG59XG5cbmV4cG9ydCBkZWZhdWx0IFJlZ2lvbkNvdW50cnlTZWxlY3RvcjtcblxuXG4vLyBXRUJQQUNLIEZPT1RFUiAvL1xuLy8gLi9zcmMvQXBwQnVuZGxlL1Jlc291cmNlcy9wdWJsaWMvamF2YXNjcmlwdC9tYWluL2NvbXBvbmVudHMvUmVnaW9uQ291bnRyeVNlbGVjdG9yLmpzIiwiaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCBQcm9wVHlwZXMgZnJvbSAncHJvcC10eXBlcyc7XG5pbXBvcnQge2JsdWVDaGVja0ljb24sIHllbGxvd0NoZWNrSWNvbiwgZ3JleU1pbnVzSWNvbn0gZnJvbSBcIi4uLy4uL21haW4vY29tcG9uZW50cy9JY29uc1wiO1xuXG5jb25zdCBSaWdodHNMZWdlbmQgPSAocHJvcHMsIGNvbnRleHQpID0+IHtcbiAgICByZXR1cm4gKFxuICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cIlJpZ2h0c0xlZ2VuZFwiPlxuICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJpdGVtXCI+XG4gICAgICAgICAgICAgICAgPGltZyBjbGFzc05hbWU9XCJpY29uXCIgc3JjPXt5ZWxsb3dDaGVja0ljb259IGFsdD1cIlwiLz5cbiAgICAgICAgICAgICAgICA8c3BhbiBjbGFzc05hbWU9XCJuYW1lXCI+XG4gICAgICAgICAgICAgICAgICAgIHtjb250ZXh0LnQoXCJNQVJLRVRQTEFDRV9SSUdIVFNfTEFCRUxfRVhDTFVTSVZFXCIpfVxuICAgICAgICAgICAgICAgIDwvc3Bhbj5cbiAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJpdGVtXCI+XG4gICAgICAgICAgICAgICAgPGltZyBjbGFzc05hbWU9XCJpY29uXCIgc3JjPXtibHVlQ2hlY2tJY29ufSBhbHQ9XCJcIi8+XG4gICAgICAgICAgICAgICAgPHNwYW4gY2xhc3NOYW1lPVwibmFtZVwiPlxuICAgICAgICAgICAgICAgICAgICB7Y29udGV4dC50KFwiTUFSS0VUUExBQ0VfUklHSFRTX0xBQkVMX05PTl9FWENMVVNJVkVcIil9XG4gICAgICAgICAgICAgICAgPC9zcGFuPlxuICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cIml0ZW1cIj5cbiAgICAgICAgICAgICAgICA8aW1nIGNsYXNzTmFtZT1cImljb25cIiBzcmM9e2dyZXlNaW51c0ljb259IGFsdD1cIlwiLz5cbiAgICAgICAgICAgICAgICA8c3BhbiBjbGFzc05hbWU9XCJuYW1lXCI+XG4gICAgICAgICAgICAgICAgICAgIHtjb250ZXh0LnQoXCJNQVJLRVRQTEFDRV9SSUdIVFNfTEFCRUxfTk9OX0lOQ0xVREVEXCIpfVxuICAgICAgICAgICAgICAgIDwvc3Bhbj5cbiAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICA8L2Rpdj5cbiAgICApO1xufTtcblxuUmlnaHRzTGVnZW5kLmNvbnRleHRUeXBlcyA9IHtcbiAgICB0OiBQcm9wVHlwZXMuZnVuYy5pc1JlcXVpcmVkXG59O1xuXG5cbmV4cG9ydCBkZWZhdWx0IFJpZ2h0c0xlZ2VuZDtcblxuXG5cbi8vIFdFQlBBQ0sgRk9PVEVSIC8vXG4vLyAuL3NyYy9BcHBCdW5kbGUvUmVzb3VyY2VzL3B1YmxpYy9qYXZhc2NyaXB0L21haW4vY29tcG9uZW50cy9SaWdodHNMZWdlbmQuanMiLCJpbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xuaW1wb3J0IFJlYWN0VGFibGUgZnJvbSAncmVhY3QtdGFibGUnO1xuaW1wb3J0IHtQcm9wVHlwZXN9IGZyb20gXCJwcm9wLXR5cGVzXCI7XG5cbmNsYXNzIFNlYXJjaENvbXBldGl0aW9uIGV4dGVuZHMgIFJlYWN0LkNvbXBvbmVudCB7XG4gICAgY29uc3RydWN0b3IocHJvcHMpe1xuICAgICAgICBzdXBlcihwcm9wcyk7XG5cbiAgICAgICAgdGhpcy5zdGF0ZSA9IHtcbiAgICAgICAgICAgIHBhZ2VTaXplIDoyMCxcbiAgICAgICAgICAgIGlucHV0OiBcIlwiLFxuICAgICAgICAgICAgdmFsaWQgOiBmYWxzZSxcbiAgICAgICAgICAgIHNlYXJjaGluZyA6IGZhbHNlLFxuICAgICAgICAgICAgc2VhcmNoRG9uZSA6IGZhbHNlLFxuICAgICAgICAgICAgcmVzdWx0czogW10sXG4gICAgICAgICAgICByZXN1bHRNZXNzYWdlIDogXCJcIlxuICAgICAgICB9XG4gICAgfVxuXG4gICAgc2VhcmNoID0gKCkgPT57XG4gICAgICAgIGxldCBfdGhpcyA9IHRoaXM7XG5cbiAgICAgICAgdGhpcy5zZXRTdGF0ZSh7XG4gICAgICAgICAgICBzZWFyY2hpbmcgOiB0cnVlXG4gICAgICAgIH0pO1xuXG4gICAgICAgIENvbnRlbnRBcmVuYS5BcGkuc2VhcmNoQ29tcGV0aXRpb24odGhpcy5zdGF0ZS5pbnB1dCkuZG9uZSgocmVzdWx0cyk9PntcbiAgICAgICAgICAgIF90aGlzLnNldFN0YXRlKHtcbiAgICAgICAgICAgICAgICByZXN1bHRzIDogcmVzdWx0cyxcbiAgICAgICAgICAgICAgICBzZWFyY2hpbmcgOiBmYWxzZSxcbiAgICAgICAgICAgICAgICBzZWFyY2hEb25lIDogdHJ1ZSxcbiAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgX3RoaXMuc2V0U3RhdGUoe1xuICAgICAgICAgICAgICAgIHJlc3VsdE1lc3NhZ2UgOiBfdGhpcy5nZXRSZXN1bHRNZXNzYWdlKDApXG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfSkuYWx3YXlzKCgpPT57XG4gICAgICAgICAgICBfdGhpcy5zZXRTdGF0ZSh7XG4gICAgICAgICAgICAgICAgc2VhcmNoaW5nIDogZmFsc2UsXG4gICAgICAgICAgICAgICAgc2VhcmNoRG9uZSA6IHRydWUsXG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfSk7XG5cbiAgICB9O1xuXG4gICAgaGFuZGxlSW5wdXQgPSAoZSkgPT57XG5cbiAgICAgICAgbGV0IGlucHV0ID0gZS50YXJnZXQudmFsdWU7XG5cbiAgICAgICAgdGhpcy5zZXRTdGF0ZSgocHJldlN0YXRlKSA9Pih7XG4gICAgICAgICAgICB2YWxpZCA6IGlucHV0Lmxlbmd0aCA+IDIsXG4gICAgICAgICAgICBpbnB1dCA6IGlucHV0LFxuICAgICAgICAgICAgc2VhcmNoRG9uZSA6ICggaW5wdXQubGVuZ3RoID4gMCApID8gcHJldlN0YXRlLnNlYXJjaERvbmUgOiBmYWxzZVxuICAgICAgICB9KSk7XG4gICAgfTtcblxuICAgIGhhbmRsZUtleVByZXNzID0gKGUpID0+IHtcbiAgICAgICAgY29uc3QgeyBzZWFyY2hpbmcsIHZhbGlkIH0gPSB0aGlzLnN0YXRlO1xuICAgICAgICBpZiAoZS5rZXkgPT09ICdFbnRlcicgJiYgIXNlYXJjaGluZyAmJiB2YWxpZCkge1xuICAgICAgICAgICAgdGhpcy5zZWFyY2goKTtcbiAgICAgICAgfVxuICAgIH07XG5cbiAgICBnZXRSZXN1bHRNZXNzYWdlID0gKHBhZ2UpID0+IHtcbiAgICAgICAgcGFnZSsrO1xuICAgICAgICBsZXQgdG90YWwgPSB0aGlzLnN0YXRlLnJlc3VsdHMubGVuZ3RoO1xuICAgICAgICBsZXQgcGFnZVRvdGFsID0gdGhpcy5zdGF0ZS5wYWdlU2l6ZSAqIHBhZ2U7XG4gICAgICAgIGxldCBwYWdlUXVhbnRpdHkgPSAocGFnZSA9PT0gMSkgPyAxIDogKHRoaXMuc3RhdGUucGFnZVNpemUgKiAocGFnZSAgLSAxKSkgKyAxO1xuXG4gICAgICAgIGlmICggcGFnZVRvdGFsID4gdG90YWwgKSBwYWdlVG90YWwgPSB0b3RhbDtcblxuICAgICAgICByZXR1cm4gcGFnZVF1YW50aXR5ICsgXCItXCIrcGFnZVRvdGFsK1wiIG9mIFwiKyB0b3RhbCArXCIgcmVzdWx0cyBmb3IgJ1wiK3RoaXMuc3RhdGUuaW5wdXQrXCInXCI7XG4gICAgfTtcblxuICAgIG9uUGFnZUNoYW5nZSA9IChwYWdlKSA9PiB7XG4gICAgICAgIGxldCByZXN1bHRNZXNzYWdlID0gdGhpcy5nZXRSZXN1bHRNZXNzYWdlKHBhZ2UpO1xuICAgICAgICB0aGlzLnNldFN0YXRlKCgpID0+KHtcbiAgICAgICAgICAgIHJlc3VsdE1lc3NhZ2UgOiByZXN1bHRNZXNzYWdlXG4gICAgICAgIH0pKTtcbiAgICB9O1xuXG4gICAgcmVuZGVyKCl7XG4gICAgICAgIHJldHVybihcbiAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwic3RlcC1jb250ZW50LWNvbnRhaW5lclwiPlxuICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwic3RlcC1pdGVtLWRlc2NyaXB0aW9uXCI+XG4gICAgICAgICAgICAgICAgICAgIHt0aGlzLmNvbnRleHQudChcIkNMX1NURVAxX1NFQVJDSF9USVRMRVwiKX1cbiAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT17XCJiYXNlLWlucHV0XCJ9PlxuICAgICAgICAgICAgICAgICAgICA8bGFiZWw+XG4gICAgICAgICAgICAgICAgICAgICAgICB7dGhpcy5jb250ZXh0LnQoXCJDb21wZXRpdGlvblwiKX1cbiAgICAgICAgICAgICAgICAgICAgPC9sYWJlbD5cbiAgICAgICAgICAgICAgICAgICAgPGlucHV0IHR5cGU9XCJ0ZXh0XCJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgIG9uS2V5UHJlc3M9e3RoaXMuaGFuZGxlS2V5UHJlc3N9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICBvbkNoYW5nZT17dGhpcy5oYW5kbGVJbnB1dH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgIHBsYWNlaG9sZGVyPXt0aGlzLmNvbnRleHQudChcIkNMX1NURVAxX1NFQVJDSF9QTEFDRUhPTERFUlwiKX0gLz5cbiAgICAgICAgICAgICAgICAgICAgPGJ1dHRvbiBjbGFzc05hbWU9XCJzdGFuZGFyZC1idXR0b25cIiBkaXNhYmxlZD17IXRoaXMuc3RhdGUudmFsaWQgfHwgdGhpcy5zdGF0ZS5zZWFyY2hpbmd9IG9uQ2xpY2s9e3RoaXMuc2VhcmNofT5TZWFyY2g8L2J1dHRvbj5cbiAgICAgICAgICAgICAgICA8L2Rpdj5cblxuICAgICAgICAgICAgICAgIHt0aGlzLnN0YXRlLnNlYXJjaGluZyAmJiA8ZGl2PjxpIGNsYXNzTmFtZT1cImZhIGZhLWNvZyBmYS1zcGluXCIvPjwvZGl2Pn1cblxuICAgICAgICAgICAgICAgIHt0aGlzLnN0YXRlLnNlYXJjaERvbmUgJiYgdGhpcy5zdGF0ZS5yZXN1bHRzLmxlbmd0aCA+IDAgJiYgPGRpdj5cbiAgICAgICAgICAgICAgICAgICAge3RoaXMuc3RhdGUucmVzdWx0TWVzc2FnZX1cbiAgICAgICAgICAgICAgICA8L2Rpdj59XG5cbiAgICAgICAgICAgICAgICB7dGhpcy5zdGF0ZS5yZXN1bHRzLmxlbmd0aCA+IDAgJiYgPGRpdj5cbiAgICAgICAgICAgICAgICAgICAgPFJlYWN0VGFibGVcbiAgICAgICAgICAgICAgICAgICAgICAgIGRlZmF1bHRQYWdlU2l6ZT17dGhpcy5zdGF0ZS5wYWdlU2l6ZX1cbiAgICAgICAgICAgICAgICAgICAgICAgIHNob3dQYWdlU2l6ZU9wdGlvbnM9e2ZhbHNlfVxuICAgICAgICAgICAgICAgICAgICAgICAgb25QYWdlQ2hhbmdlPXt0aGlzLm9uUGFnZUNoYW5nZX1cbiAgICAgICAgICAgICAgICAgICAgICAgIG1pblJvd3M9ezB9XG4gICAgICAgICAgICAgICAgICAgICAgICBkYXRhPXt0aGlzLnN0YXRlLnJlc3VsdHN9XG4gICAgICAgICAgICAgICAgICAgICAgICBzZWxlY3Q9e3RoaXMucHJvcHMuc2VsZWN0fVxuICAgICAgICAgICAgICAgICAgICAgICAgY2xhc3NOYW1lPVwiY2EtdGFibGVcIlxuICAgICAgICAgICAgICAgICAgICAgICAgY29sdW1ucz17W3tcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBIZWFkZXI6IHRoaXMuY29udGV4dC50KFwiQ0xfU1RFUDFfU0VBUkNIX0hFQURFUl9DT01QRVRJVElPTlwiKSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBhY2Nlc3NvcjogJ25hbWUnIC8vIFN0cmluZy1iYXNlZCB2YWx1ZSBhY2Nlc3NvcnMhXG4gICAgICAgICAgICAgICAgICAgICAgICB9LCB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgSGVhZGVyOiB0aGlzLmNvbnRleHQudChcIkNMX1NURVAxX1NFQVJDSF9IRUFERVJfQ09VTlRSWVwiKSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBhY2Nlc3NvcjogJ3Nwb3J0Q2F0ZWdvcnkubmFtZScsXG4gICAgICAgICAgICAgICAgICAgICAgICB9LCB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgYWNjZXNzb3I6ICdzcG9ydC5uYW1lJywgLy8gUmVxdWlyZWQgYmVjYXVzZSBvdXIgYWNjZXNzb3IgaXMgbm90IGEgc3RyaW5nXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgSGVhZGVyOiB0aGlzLmNvbnRleHQudChcIkNMX1NURVAxX1NFQVJDSF9IRUFERVJfU1BPUlRcIiksXG4gICAgICAgICAgICAgICAgICAgICAgICB9LCB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgSGVhZGVyOiAnJywgLy8gQ3VzdG9tIGhlYWRlciBjb21wb25lbnRzIVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIENlbGw6IHByb3BzID0+IDxidXR0b24gY2xhc3NOYW1lPXtcImJsdWUtYnV0dG9uXCJ9IG9uQ2xpY2s9eygpID0+eyB0aGlzLnByb3BzLnNlbGVjdChwcm9wcy5vcmlnaW5hbCkgfX0+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHt0aGlzLmNvbnRleHQudChcIkNMX1NURVAxX1NFQVJDSF9CVVRUT05fU0VMRUNUXCIpfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvYnV0dG9uPlxuICAgICAgICAgICAgICAgICAgICAgICAgfV19XG4gICAgICAgICAgICAgICAgICAgIC8+XG4gICAgICAgICAgICAgICAgPC9kaXY+fVxuXG4gICAgICAgICAgICAgICAgPGRpdiBzdHlsZT17eyBkaXNwbGF5OiBcImlubGluZS1mbGV4XCIgfX0gPlxuICAgICAgICAgICAgICAgICAgICB7dGhpcy5zdGF0ZS5zZWFyY2hEb25lICYmIHRoaXMuc3RhdGUucmVzdWx0cy5sZW5ndGggPT09IDAgJiYgPGRpdj5cbiAgICAgICAgICAgICAgICAgICAgICAgIHt0aGlzLmNvbnRleHQudChcIkNMX1NURVAxX1NFQVJDSF9OT19SRVNVTFRTXCIsIHtuOiB0aGlzLnN0YXRlLmlucHV0IH0pfVxuICAgICAgICAgICAgICAgICAgICA8L2Rpdj59XG5cbiAgICAgICAgICAgICAgICAgICAgeyF0aGlzLnN0YXRlLnNlYXJjaERvbmUgJiY8ZGl2IGNsYXNzTmFtZT1cInN0ZXAtaXRlbS1kZXNjcmlwdGlvblwiPlxuICAgICAgICAgICAgICAgICAgICAgICAge3RoaXMuY29udGV4dC50KFwiQ0xfU1RFUDFfU0VBUkNIX0NBTlRfRklORF8yXCIpfVxuICAgICAgICAgICAgICAgICAgICA8L2Rpdj59XG5cbiAgICAgICAgICAgICAgICAgICAge3RoaXMuc3RhdGUuc2VhcmNoRG9uZSAmJiB0aGlzLnN0YXRlLnJlc3VsdHMubGVuZ3RoID4gMCAmJiA8ZGl2IGNsYXNzTmFtZT1cInN0ZXAtaXRlbS1kZXNjcmlwdGlvblwiPlxuICAgICAgICAgICAgICAgICAgICAgICAge3RoaXMuY29udGV4dC50KFwiQ0xfU1RFUDFfU0VBUkNIX0NBTlRfRklORFwiKX1cbiAgICAgICAgICAgICAgICAgICAgPC9kaXY+fVxuXG4gICAgICAgICAgICAgICAgICAgIHt0aGlzLnN0YXRlLnNlYXJjaERvbmUgJiYgdGhpcy5zdGF0ZS5yZXN1bHRzLmxlbmd0aCA9PT0gMCAmJiA8ZGl2IGNsYXNzTmFtZT1cInN0ZXAtaXRlbS1kZXNjcmlwdGlvblwiPlxuICAgICAgICAgICAgICAgICAgICAgICAge3RoaXMuY29udGV4dC50KFwiQ0xfU1RFUDFfU0VBUkNIX1RSWVwiKX1cbiAgICAgICAgICAgICAgICAgICAgPC9kaXY+fVxuXG4gICAgICAgICAgICAgICAgICAgIDxidXR0b24gY2xhc3NOYW1lPXtcInN0YW5kYXJkLWJ1dHRvbiBzdGFuZGFyZC1idXR0b24tYmlnXCJ9IG9uQ2xpY2s9e3RoaXMucHJvcHMuY2xvc2V9PlxuICAgICAgICAgICAgICAgICAgICAgICAge3RoaXMuY29udGV4dC50KFwiQ0xfU1RFUDFfRU5URVJfTUFOVUFMTFlcIil9XG4gICAgICAgICAgICAgICAgICAgIDwvYnV0dG9uPlxuICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgIClcbiAgICB9XG59XG5TZWFyY2hDb21wZXRpdGlvbi5jb250ZXh0VHlwZXMgPSB7XG4gICAgdDogUHJvcFR5cGVzLmZ1bmMuaXNSZXF1aXJlZFxufTtcblxuZXhwb3J0IGRlZmF1bHQgU2VhcmNoQ29tcGV0aXRpb247XG5cblxuXG5cbi8vIFdFQlBBQ0sgRk9PVEVSIC8vXG4vLyAuL3NyYy9BcHBCdW5kbGUvUmVzb3VyY2VzL3B1YmxpYy9qYXZhc2NyaXB0L21haW4vY29tcG9uZW50cy9TZWFyY2hDb21wZXRpdGlvbi5qcyIsImltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgTmV3U2Vhc29uIGZyb20gJy4vTmV3U2Vhc29uJ1xuaW1wb3J0IHsgU2NoZWR1bGVzIH0gZnJvbSBcIi4uLy4uL3NlbGwvY29tcG9uZW50cy9TZWxsRm9ybUl0ZW1zXCI7XG5pbXBvcnQge2Nvbm5lY3R9IGZyb20gXCJyZWFjdC1yZWR1eFwiO1xuaW1wb3J0IHtzdGVwQ2hhbmdlUmVzZXR9IGZyb20gXCIuLi8uLi9zZWxsL2FjdGlvbnMvY29udGVudEFjdGlvbnNcIjtcbmltcG9ydCBEYXRlUGlja2VyIGZyb20gJ3JlYWN0LWRhdGVwaWNrZXInO1xuaW1wb3J0IG1vbWVudCBmcm9tIFwibW9tZW50L21vbWVudFwiO1xuaW1wb3J0IHthZGRJY29uLCBjYW5jZWxJY29ufSBmcm9tIFwiLi9JY29uc1wiO1xuaW1wb3J0IHtQcm9wVHlwZXN9IGZyb20gXCJwcm9wLXR5cGVzXCI7XG5cbmV4cG9ydCBjb25zdCBOZXdGaXh0dXJlID0gKHtvblJlbW92ZSwgb25BZGQsIG9uQ2hhbmdlLCB2YWx1ZSwgc2hvd0FkZCwgZGF0ZSwgaGFuZGxlRGF0ZX0sIGNvbnRleHQpID0+IChcbiAgICA8ZGl2IGNsYXNzTmFtZT1cImJhc2UtaW5wdXRcIiBzdHlsZT17e2Rpc3BsYXk6ICdmbGV4JywgYWxpZ25JdGVtczonY2VudGVyJ319PlxuICAgICAgICA8bGFiZWw+XG4gICAgICAgICAgICB7Y29udGV4dC50KFwiRml4dHVyZVwiKX1cbiAgICAgICAgPC9sYWJlbD5cbiAgICAgICAgPGlucHV0XG4gICAgICAgICAgICBjbGFzc05hbWU9XCJuZXctY2F0ZWdvcnlcIlxuICAgICAgICAgICAgdHlwZT1cInRleHRcIlxuICAgICAgICAgICAgcGxhY2Vob2xkZXI9e2NvbnRleHQudChcIkVudGVyIGZpeHR1cmVcIil9XG4gICAgICAgICAgICBvbkNoYW5nZT17b25DaGFuZ2V9XG4gICAgICAgICAgICB2YWx1ZT17dmFsdWV9Lz5cbiAgICAgICAgPERhdGVQaWNrZXJcbiAgICAgICAgICAgIGNsYXNzTmFtZT17XCJkYXRlLXBpY2tlclwifVxuICAgICAgICAgICAgc2VsZWN0ZWQ9eyhkYXRlKT8gbW9tZW50KGRhdGUpOiB1bmRlZmluZWR9XG4gICAgICAgICAgICBvbkNoYW5nZT17aGFuZGxlRGF0ZX1cbiAgICAgICAgICAgIHBsYWNlaG9sZGVyVGV4dD17XCJkZC9tbS95eXl5XCJ9XG4gICAgICAgIC8+XG4gICAgICAgIDxkaXYgc3R5bGU9e3tcbiAgICAgICAgICAgIGRpc3BsYXk6ICdmbGV4JyxcbiAgICAgICAgICAgIGFsaWduSXRlbXM6J2NlbnRlcicsXG4gICAgICAgICAgICBtaW5XaWR0aDogNTAsXG4gICAgICAgICAgICBtYXJnaW5MZWZ0OiAzMCxcbiAgICAgICAgICAgIGp1c3RpZnlDb250ZW50OiAnZmxleC1lbmQnXG4gICAgICAgIH19PlxuICAgICAgICAgICAge3Nob3dBZGQgJiYgPGltZyBzcmM9e2FkZEljb259IG9uQ2xpY2s9e29uQWRkfSBzdHlsZT17e2N1cnNvcjogJ3BvaW50ZXInLCB3aWR0aDoyMCwgaGVpZ2h0OiAyMCwgbWFyZ2luUmlnaHQ6IDV9fS8+fVxuICAgICAgICAgICAgPGltZyBzcmM9e2NhbmNlbEljb259IG9uQ2xpY2s9e29uUmVtb3ZlfSBzdHlsZT17e2N1cnNvcjogJ3BvaW50ZXInLCB3aWR0aDoyMCwgaGVpZ2h0OiAyMH19Lz5cbiAgICAgICAgPC9kaXY+XG5cbiAgICA8L2Rpdj5cbik7XG5cbmNsYXNzIFNlYXNvblNlbGVjdG9yIGV4dGVuZHMgUmVhY3QuQ29tcG9uZW50IHtcbiAgICBjb25zdHJ1Y3Rvcihwcm9wcykge1xuICAgICAgICBzdXBlcihwcm9wcyk7XG4gICAgICAgIHRoaXMuc3RhdGUgPSB7XG4gICAgICAgIH07XG4gICAgfVxuXG4gICAgdG9nZ2xlID0gKCkgPT4ge1xuICAgICAgICBjb25zdCB7dXBkYXRlRnJvbU11bHRpcGxlLCBzZWFzb25zLCBpbmRleH0gPSB0aGlzLnByb3BzO1xuICAgICAgICB1cGRhdGVGcm9tTXVsdGlwbGUoXCJzZWFzb25zXCIsIGluZGV4LCBcInNob3dTY2hlZHVsZVwiLCAhc2Vhc29uc1tpbmRleF0uc2hvd1NjaGVkdWxlICk7XG4gICAgfTtcblxuICAgIGFkZEZpeHR1cmUgPSAoKSA9PiB7XG4gICAgICAgIGNvbnN0IHt1cGRhdGVGcm9tTXVsdGlwbGUsIHNlYXNvbnMsIGluZGV4fSA9IHRoaXMucHJvcHM7XG4gICAgICAgIGxldCBmaXh0dXJlcyA9IHNlYXNvbnNbaW5kZXhdLmZpeHR1cmVzIHx8IFtdO1xuICAgICAgICB1cGRhdGVGcm9tTXVsdGlwbGUoXCJzZWFzb25zXCIsIGluZGV4LCBcImZpeHR1cmVzXCIsIFsuLi5maXh0dXJlcyx7bmFtZSA6IFwiXCJ9XSApO1xuXG4gICAgfTtcblxuICAgIG9uQ2hhbmdlRml4dHVyZSA9IChpLCB2YWx1ZSApID0+IHtcbiAgICAgICAgY29uc3Qge3VwZGF0ZUZyb21NdWx0aXBsZSwgc2Vhc29ucywgaW5kZXh9ID0gdGhpcy5wcm9wcztcbiAgICAgICAgbGV0IGZpeHR1cmVzID0gc2Vhc29uc1tpbmRleF0uZml4dHVyZXM7XG5cbiAgICAgICAgZml4dHVyZXNbaV0ubmFtZSA9IHZhbHVlO1xuICAgICAgICB1cGRhdGVGcm9tTXVsdGlwbGUoXCJzZWFzb25zXCIsIGluZGV4LCBcImZpeHR1cmVzXCIsIGZpeHR1cmVzICk7XG5cbiAgICB9O1xuXG4gICAgb25DaGFuZ2VGaXh0dXJlRGF0ZSA9IChpLCB2YWx1ZSApID0+IHtcbiAgICAgICAgY29uc3Qge3VwZGF0ZUZyb21NdWx0aXBsZSwgc2Vhc29ucywgaW5kZXh9ID0gdGhpcy5wcm9wcztcbiAgICAgICAgbGV0IGZpeHR1cmVzID0gc2Vhc29uc1tpbmRleF0uZml4dHVyZXM7XG5cbiAgICAgICAgZml4dHVyZXNbaV0uZGF0ZSA9IHZhbHVlO1xuICAgICAgICB1cGRhdGVGcm9tTXVsdGlwbGUoXCJzZWFzb25zXCIsIGluZGV4LCBcImZpeHR1cmVzXCIsIGZpeHR1cmVzICk7XG5cbiAgICB9O1xuXG4gICAgcmVtb3ZlRml4dHVyZSA9IChpKSA9PiB7XG4gICAgICAgIGNvbnN0IHt1cGRhdGVGcm9tTXVsdGlwbGUsIHNlYXNvbnMsIGluZGV4fSA9IHRoaXMucHJvcHM7XG4gICAgICAgIGxldCBmaXh0dXJlcyA9IHNlYXNvbnNbaW5kZXhdLmZpeHR1cmVzIHx8IFtdO1xuICAgICAgICBmaXh0dXJlcy5zcGxpY2UoaSwxKTtcbiAgICAgICAgdXBkYXRlRnJvbU11bHRpcGxlKFwic2Vhc29uc1wiLCBpbmRleCwgXCJmaXh0dXJlc1wiLCBmaXh0dXJlcyApO1xuICAgIH07XG5cbiAgICByZW5kZXIoKXtcbiAgICAgICAgY29uc3Qge2luZGV4LCBzZWFzb24sIHNlYXNvbnN9ID0gdGhpcy5wcm9wcztcbiAgICAgICAgbGV0IGFjdGl2ZVNlYXNvbiA9IHNlYXNvbnNbc2Vhc29uXTtcbiAgICAgICAgcmV0dXJuIChcbiAgICAgICAgICAgIDxkaXYgc3R5bGU9e3t6SW5kZXg6IDF9fT5cbiAgICAgICAgICAgICAgICB7IXRoaXMucHJvcHMuaXNDdXN0b20gJiZcbiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImJhc2UtaW5wdXRcIj5cbiAgICAgICAgICAgICAgICAgICAgPGxhYmVsPlxuICAgICAgICAgICAgICAgICAgICAgICAge3RoaXMuY29udGV4dC50KFwiU2Vhc29uXCIpfVxuICAgICAgICAgICAgICAgICAgICA8L2xhYmVsPlxuICAgICAgICAgICAgICAgICAgICA8aW5wdXRcbiAgICAgICAgICAgICAgICAgICAgICAgIHR5cGU9XCJ0ZXh0XCJcbiAgICAgICAgICAgICAgICAgICAgICAgIHZhbHVlPXt0aGlzLnByb3BzLnZhbHVlIHx8IFwiXCJ9XG4gICAgICAgICAgICAgICAgICAgICAgICByZWFkT25seT17dHJ1ZX1cbiAgICAgICAgICAgICAgICAgICAgICAgIGRpc2FibGVkPXt0aGlzLnByb3BzLmxvYWRpbmd9XG4gICAgICAgICAgICAgICAgICAgICAgICBvbkNsaWNrPXt0aGlzLnByb3BzLm9wZW5TZWxlY3Rvcn1cbiAgICAgICAgICAgICAgICAgICAgICAgIHBsYWNlaG9sZGVyPXt0aGlzLmNvbnRleHQudChcIlNlYXNvblwiKX0vPlxuXG4gICAgICAgICAgICAgICAgICAgIHsgdGhpcy5wcm9wcy5zaG93Q2xvc2UgJiZcbiAgICAgICAgICAgICAgICAgICAgPGJ1dHRvbiBvbkNsaWNrPXt0aGlzLnByb3BzLnJlbW92ZVNlYXNvbn0gY2xhc3NOYW1lPXtcInN0YW5kYXJkLWJ1dHRvblwifT5cbiAgICAgICAgICAgICAgICAgICAgICAgIDxpIGNsYXNzTmFtZT1cImZhIGZhLWNsb3NlXCIvPlxuICAgICAgICAgICAgICAgICAgICA8L2J1dHRvbj5cbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIDwvZGl2PiB9XG5cbiAgICAgICAgICAgICAgICB7IHRoaXMucHJvcHMuaXNDdXN0b20gJiYgYWN0aXZlU2Vhc29uXG4gICAgICAgICAgICAgICAgJiYgPE5ld1NlYXNvbiBzaG93Q2xvc2U9e3RoaXMucHJvcHMuc2hvd0Nsb3NlfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgb25CbHVyPXt0aGlzLnByb3BzLm9uQmx1cn1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGluZGV4PXtpbmRleH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG9uUmVtb3ZlPXt0aGlzLnByb3BzLnJlbW92ZVNlYXNvbiB9IC8+fVxuXG5cbiAgICAgICAgICAgICAgICB7Lyp7YWN0aXZlU2Vhc29uICYmIGFjdGl2ZVNlYXNvbi5zY2hlZHVsZXMgJiYgPGRpdiBjbGFzc05hbWU9e1wiYmFzZS1pbnB1dFwifVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG9uQ2xpY2s9e3RoaXMudG9nZ2xlfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHN0eWxlPXt7ekluZGV4OiAxfX0+XG4gICAgICAgICAgICAgICAgICAgIDxsYWJlbD5FdmVudDwvbGFiZWw+XG4gICAgICAgICAgICAgICAgICAgIDxpbnB1dCB0eXBlPVwidGV4dFwiXG4gICAgICAgICAgICAgICAgICAgICAgICAgICBkaXNhYmxlZFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgc3R5bGU9e3tcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBiYWNrZ3JvdW5kQ29sb3I6ICd3aGl0ZSdcbiAgICAgICAgICAgICAgICAgICAgICAgICAgIH19XG4gICAgICAgICAgICAgICAgICAgICAgICAgICBwbGFjZWhvbGRlcj17XCJTZWxlY3QgZXZlbnRzXCJ9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAvPlxuICAgICAgICAgICAgICAgIDwvZGl2Pn0qL31cbiAgICAgICAgICAgICAgICB7Lyp7YWN0aXZlU2Vhc29uICYmIGFjdGl2ZVNlYXNvbi5zaG93U2NoZWR1bGUgJiYgPGRpdj5cbiAgICAgICAgICAgICAgICAgICAgPFNjaGVkdWxlcyBzZWFzb249e3NlYXNvbn0gc2Vhc29ucz17c2Vhc29uc30vPlxuICAgICAgICAgICAgICAgIDwvZGl2Pn0qL31cbiAgICAgICAgICAgICAgICB7dGhpcy5wcm9wcy5zaG93QWRkTmV3ICYmIDxkaXY+XG4gICAgICAgICAgICAgICAgICAgIDxidXR0b24gY2xhc3NOYW1lPVwibGluay1idXR0b25cIiBvbkNsaWNrPXt0aGlzLnByb3BzLmFkZFNlYXNvbn0+XG4gICAgICAgICAgICAgICAgICAgICAgICB7dGhpcy5jb250ZXh0LnQoXCJDTF9TVEVQMV9BRERfU0VBU09OXCIpfVxuICAgICAgICAgICAgICAgICAgICA8L2J1dHRvbj5cbiAgICAgICAgICAgICAgICA8L2Rpdj59XG4gICAgICAgICAgICAgICAge3RoaXMucHJvcHMuc2hvd0FkZE5ldyAmJiBhY3RpdmVTZWFzb24gJiZcbiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cInN0ZXAtaXRlbS1kZXNjcmlwdGlvblwiPlxuICAgICAgICAgICAgICAgICAgICA8YnV0dG9uIGNsYXNzTmFtZT1cImxpbmstYnV0dG9uXCIgb25DbGljaz17dGhpcy5hZGRGaXh0dXJlfT5cbiAgICAgICAgICAgICAgICAgICAgICAgIHt0aGlzLmNvbnRleHQudChcIkNMX1NURVAxX0FERF9GSVhUVVJFU1wiKX1cbiAgICAgICAgICAgICAgICAgICAgPC9idXR0b24+XG4gICAgICAgICAgICAgICAgPC9kaXY+fVxuXG4gICAgICAgICAgICAgICAge2FjdGl2ZVNlYXNvbiAmJiBhY3RpdmVTZWFzb24uZml4dHVyZXMgJiYgYWN0aXZlU2Vhc29uLmZpeHR1cmVzLmxlbmd0aCA+IDAgJiYgPGRpdj5cbiAgICAgICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICAgICAgYWN0aXZlU2Vhc29uLmZpeHR1cmVzLm1hcCggKGZpeHR1cmUsIGksIGxpc3QpID0+IHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gPE5ld0ZpeHR1cmVcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAga2V5PXtpfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBvbkFkZD17dGhpcy5hZGRGaXh0dXJlfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YWx1ZT17Zml4dHVyZS5uYW1lfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBkYXRlPXtmaXh0dXJlLmRhdGV9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGhhbmRsZURhdGU9eyhlKSA9PiB0aGlzLm9uQ2hhbmdlRml4dHVyZURhdGUoaSwgZSl9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG9uQ2hhbmdlPXsoZSkgPT4gdGhpcy5vbkNoYW5nZUZpeHR1cmUoaSwgZS50YXJnZXQudmFsdWUpfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBvblJlbW92ZT17KCkgPT4gdGhpcy5yZW1vdmVGaXh0dXJlKGkpfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzaG93QWRkPXtpID09PSBsaXN0Lmxlbmd0aCAtIDF9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgLz5cbiAgICAgICAgICAgICAgICAgICAgICAgIH0pXG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICA8L2Rpdj59XG4gICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgKVxuICAgIH1cbn1cblNlYXNvblNlbGVjdG9yLmNvbnRleHRUeXBlcyA9IHtcbiAgICB0OiBQcm9wVHlwZXMuZnVuYy5pc1JlcXVpcmVkXG59O1xuXG5OZXdGaXh0dXJlLmNvbnRleHRUeXBlcyA9IHtcbiAgICB0OiBQcm9wVHlwZXMuZnVuYy5pc1JlcXVpcmVkXG59O1xuXG5jb25zdCBtYXBTdGF0ZVRvUHJvcHMgPSBzdGF0ZSA9PiB7XG4gICAgcmV0dXJuIHN0YXRlLmNvbnRlbnRcbn07XG5cbmNvbnN0IG1hcERpc3BhdGNoVG9Qcm9wcyA9IGRpc3BhdGNoID0+IHtcbiAgICByZXR1cm4ge1xuICAgICAgICB1cGRhdGVGcm9tTXVsdGlwbGUgOiAodHlwZSwgaW5kZXgsIGtleSwgdmFsdWUpID0+IGRpc3BhdGNoKHtcbiAgICAgICAgICAgIHR5cGU6ICdVUERBVEVfRlJPTV9NVUxUSVBMRScsXG4gICAgICAgICAgICBzZWxlY3RvclR5cGU6IHR5cGUsXG4gICAgICAgICAgICBpbmRleDogaW5kZXgsXG4gICAgICAgICAgICBrZXk6IGtleSxcbiAgICAgICAgICAgIHZhbHVlOiB2YWx1ZVxuICAgICAgICB9KSxcbiAgICAgICAgdXBkYXRlQ29udGVudFZhbHVlIDogKGtleSwgdmFsdWUpID0+IGRpc3BhdGNoKHtcbiAgICAgICAgICAgIHR5cGU6ICdVUERBVEVfQ09OVEVOVF9WQUxVRScsXG4gICAgICAgICAgICBrZXk6IGtleSxcbiAgICAgICAgICAgIHZhbHVlIDogdmFsdWVcbiAgICAgICAgfSksXG5cbiAgICB9XG59O1xuXG5leHBvcnQgZGVmYXVsdCBjb25uZWN0KFxuICAgIG1hcFN0YXRlVG9Qcm9wcyxcbiAgICBtYXBEaXNwYXRjaFRvUHJvcHNcbikoU2Vhc29uU2VsZWN0b3IpXG5cblxuXG5cbi8vIFdFQlBBQ0sgRk9PVEVSIC8vXG4vLyAuL3NyYy9BcHBCdW5kbGUvUmVzb3VyY2VzL3B1YmxpYy9qYXZhc2NyaXB0L21haW4vY29tcG9uZW50cy9TZWFzb25TZWxlY3Rvci5qcyIsImltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgeyBjb25uZWN0IH0gZnJvbSBcInJlYWN0LXJlZHV4XCI7XG5pbXBvcnQgc3RvcmUgZnJvbSAnLi4vLi4vbWFpbi9zdG9yZSc7XG5pbXBvcnQgTW9kYWwgZnJvbSAncmVhY3QtbW9kYWwnO1xuaW1wb3J0IHsgU2VsZWN0b3JNb2RhbFN0eWxlIH0gZnJvbSBcIi4uL3N0eWxlcy9jdXN0b21cIjtcbmltcG9ydCB7UHJvcFR5cGVzfSBmcm9tIFwicHJvcC10eXBlc1wiO1xuXG5Nb2RhbC5zZXRBcHBFbGVtZW50KCcjaG9tZS13cmFwcGVyJyk7XG5cbmNvbnN0IFNlbGVjdG9ySXRlbSA9ICh7bGFiZWwsIHNlbGVjdGVkLCBvbkNsaWNrLCBkaXNhYmxlZH0pID0+IChcbiAgICA8ZGl2IGNsYXNzTmFtZT17XCJzZWxlY3Rvci1pdGVtIFwiICsgKChzZWxlY3RlZCkgP1wic2VsZWN0b3ItaXRlbS1zZWxlY3RlZCBcIjogXCJcIikgKyAoZGlzYWJsZWQgJiYgXCJzZWxlY3Rvci1pdGVtLWRpc2FibGVkXCIpIH0gb25DbGljaz17KCFkaXNhYmxlZCkgPyBvbkNsaWNrIDogdW5kZWZpbmVkfT5cbiAgICAgICAge2xhYmVsfVxuICAgIDwvZGl2PlxuKTtcblxuXG5jbGFzcyBTZWxlY3RvciBleHRlbmRzIFJlYWN0LkNvbXBvbmVudCB7XG5cbiAgICBjb25zdHJ1Y3Rvcihwcm9wcykge1xuICAgICAgICBzdXBlcihwcm9wcyk7XG5cbiAgICAgICAgdGhpcy5zdGF0ZSA9IHtcbiAgICAgICAgICAgIHVwZGF0ZWQgOiBmYWxzZSxcbiAgICAgICAgICAgIGZpbHRlclVwZGF0ZWQgOiBmYWxzZSxcbiAgICAgICAgICAgIG9wZW4gOiBwcm9wcy5zZWxlY3RvcixcbiAgICAgICAgICAgIHByZXZDb3VudHJpZXMgOiBuZXcgTWFwKCksXG4gICAgICAgICAgICBjdXN0b21Db3VudHJ5IDogZmFsc2UsXG4gICAgICAgICAgICBzZWxlY3Rvckl0ZW1zIDogcHJvcHMuc2VsZWN0b3JJdGVtcyB8fCBbXSxcbiAgICAgICAgICAgIHBvcHVsYXJJdGVtcyA6IHByb3BzLnBvcHVsYXJJdGVtcyB8fCBbXSxcbiAgICAgICAgICAgIGZpbHRlciA6IHtcbiAgICAgICAgICAgICAgICBcImFnXCIgOiB7IHR5cGU6IFwiZmlyc3RMZXR0ZXJcIiwgdmFsdWVzOiBbXCJhXCIsJ2InLCdjJywnZCcsJ2UnLCdmJywnZyddIH0sXG4gICAgICAgICAgICAgICAgXCJoblwiIDogeyB0eXBlOiBcImZpcnN0TGV0dGVyXCIsIHZhbHVlczogW1wiaFwiLCdpJywnaicsJ2snLCdsJywnbScsJ24nXSB9LFxuICAgICAgICAgICAgICAgIFwib3RcIiA6IHsgdHlwZTogXCJmaXJzdExldHRlclwiLCB2YWx1ZXM6IFtcIm9cIiwncCcsJ3EnLCdyJywncycsJ3QnXSB9LFxuICAgICAgICAgICAgICAgIFwidXpcIiA6IHsgdHlwZTogXCJmaXJzdExldHRlclwiLCB2YWx1ZXM6IFtcInVcIiwndicsJ3cnLCd4JywneScsJ3onXSB9LFxuICAgICAgICAgICAgICAgIFwicG9wdWxhclwiIDogeyB0eXBlOiBcIm9yaWdpblwiLCB2YWx1ZTogXCJwb3B1bGFySXRlbXNcIn0sXG4gICAgICAgICAgICAgICAgXCJpbnRlcm5hdGlvbmFsXCIgOiB7IHR5cGU6IFwiaW50ZXJuYXRpb25hbFwiLCB2YWx1ZTogXCJpbnRlcm5hdGlvbmFsXCJ9LFxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIGFjdGl2ZUZpbHRlciA6IHByb3BzLmFjdGl2ZUZpbHRlciB8fCBcImFnXCIsXG4gICAgICAgICAgICBzZWxlY3RlZEl0ZW1zIDogbmV3IE1hcCgpLFxuICAgICAgICAgICAgZGlzYWJsZWQgOiBuZXcgTWFwKCksXG4gICAgICAgIH07XG5cbiAgICAgICAgc3RvcmUuc3Vic2NyaWJlKChhKSA9PiB7XG4gICAgICAgIH0pO1xuICAgIH1cblxuICAgIGNvbXBvbmVudFdpbGxSZWNlaXZlUHJvcHMobmV4dFByb3BzKXtcblxuICAgICAgICBsZXQgZGlzYWJsZWQgPSBuZXcgTWFwKCksIHNlbGVjdGVkSXRlbXMgPSBuZXcgTWFwKCk7XG5cbiAgICAgICAgaWYgKCBuZXh0UHJvcHMuZGlzYWJsZWQgKSBkaXNhYmxlZCA9IG5leHRQcm9wcy5kaXNhYmxlZDtcbiAgICAgICAgaWYgKCBuZXh0UHJvcHMuc2VsZWN0ZWRJdGVtcyApIHtcbiAgICAgICAgICAgIG5leHRQcm9wcy5zZWxlY3RlZEl0ZW1zLmZvckVhY2goZnVuY3Rpb24odiwgaykge1xuICAgICAgICAgICAgICAgIGxldCBrZXkgPSB2LmV4dGVybmFsSWQgPyB2LmV4dGVybmFsSWQgOiBcImN1c3RvbVwiICsgaztcbiAgICAgICAgICAgICAgICBzZWxlY3RlZEl0ZW1zLnNldChrZXksIHYpO1xuICAgICAgICAgICAgfSk7XG4gICAgICAgIH1cblxuICAgICAgICB0aGlzLnNldFN0YXRlKHtcbiAgICAgICAgICAgIGRpc2FibGVkIDogZGlzYWJsZWQsXG4gICAgICAgICAgICBzZWxlY3RlZEl0ZW1zIDogc2VsZWN0ZWRJdGVtcyxcbiAgICAgICAgICAgIHNlbGVjdG9ySXRlbXMgOiBuZXh0UHJvcHMuc2VsZWN0b3JJdGVtc1xuICAgICAgICB9KTtcbiAgICB9XG5cbiAgICBvcGVuTW9kYWwgPSAoKSA9PiB7XG4gICAgICAgIHRoaXMucHJvcHMub3BlblNlbGVjdG9yKCk7XG4gICAgfTtcblxuICAgIGFmdGVyT3Blbk1vZGFsID0gKCkgPT4ge1xuICAgIH07XG5cbiAgICBjbG9zZU1vZGFsID0gKCkgPT4ge1xuICAgICAgICB0aGlzLnNldFN0YXRlKHsgdXBkYXRlZDogZmFsc2UsIGZpbHRlclVwZGF0ZWQgOiBmYWxzZSwgY3VzdG9tQ291bnRyeSA6ZmFsc2UgfSk7XG4gICAgICAgIHRoaXMucHJvcHMuY2xvc2VTZWxlY3RvcigpO1xuICAgIH07XG5cbiAgICBnZXRBY3RpdmVGaWx0ZXIgPSAoKSA9PiB7XG4gICAgICAgIGxldCBhY3RpdmVGaWx0ZXIgPSB0aGlzLmdldEFjdGl2ZUZpbHRlck5hbWUoKTtcbiAgICAgICAgcmV0dXJuIHRoaXMuc3RhdGUuZmlsdGVyW2FjdGl2ZUZpbHRlcl07XG4gICAgfTtcblxuICAgIGdldEFjdGl2ZUZpbHRlck5hbWUgPSAoKSA9PiB7XG4gICAgICAgIHJldHVybiAoIHRoaXMucHJvcHMuYWN0aXZlRmlsdGVyICYmICF0aGlzLnN0YXRlLmZpbHRlclVwZGF0ZWQgKSA/IHRoaXMucHJvcHMuYWN0aXZlRmlsdGVyIDogdGhpcy5zdGF0ZS5hY3RpdmVGaWx0ZXI7XG4gICAgfTtcblxuICAgIHNob3VsZFNob3dGaWx0ZXJzID0gKCkgPT57XG4gICAgICAgIHJldHVybiB0aGlzLnN0YXRlLnNlbGVjdG9ySXRlbXMgJiYgdGhpcy5zdGF0ZS5zZWxlY3Rvckl0ZW1zLmxlbmd0aCA+IDMwXG4gICAgfTtcblxuICAgIHNob3VsZFNob3dJbnRlcm5hdGlvbmFsRmlsdGVyID0gKCkgPT4ge1xuXG4gICAgICAgIGxldCBzaG93ID0gZmFsc2U7XG5cbiAgICAgICAgdGhpcy5zdGF0ZS5zZWxlY3Rvckl0ZW1zLnNvbWUoICggaXRlbSkgPT4ge1xuICAgICAgICAgICAgc2hvdyA9IGl0ZW0ubmFtZS5tYXRjaCgvaW50ZXJuYXRpb25hbC9naSkgIT09IG51bGw7XG4gICAgICAgICAgICByZXR1cm4gc2hvdztcbiAgICAgICAgfSk7XG5cbiAgICAgICAgcmV0dXJuIHNob3c7XG5cbiAgICB9O1xuXG4gICAgc2V0QWN0aXZlRmlsdGVyID0gKCBmaWx0ZXJOYW1lICkgPT57XG4gICAgICB0aGlzLnNldFN0YXRlKHsgYWN0aXZlRmlsdGVyOiBmaWx0ZXJOYW1lLGZpbHRlclVwZGF0ZWQgOiB0cnVlfSlcbiAgICB9O1xuXG4gICAgYXBwbHlTZWxlY3Rpb24gPSAoKSA9PiB7XG5cbiAgICAgICAgbGV0IGV4dGVuZGVkID0gZmFsc2UsXG4gICAgICAgICAgICBzZWxlY3RlZEl0ZW1zID0gdGhpcy5zdGF0ZS5zZWxlY3RlZEl0ZW1zLFxuICAgICAgICAgICAgcHJldkNvdW50cmllcyA9IHRoaXMuc3RhdGUucHJldkNvdW50cmllcztcblxuICAgICAgICBpZiAoIHRoaXMuc3RhdGUuY3VzdG9tQ291bnRyeSApe1xuICAgICAgICAgICAgc2VsZWN0ZWRJdGVtcy5mb3JFYWNoKChpdGVtKT0+e1xuICAgICAgICAgICAgICAgIGlmICghcHJldkNvdW50cmllcy5oYXMoaXRlbS5leHRlcm5hbElkKSkge1xuICAgICAgICAgICAgICAgICAgICBpdGVtLmV4dGVuZGVkID0gdHJ1ZTtcbiAgICAgICAgICAgICAgICAgICAgZXh0ZW5kZWQgPSB0cnVlO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9XG5cbiAgICAgICAgaWYgKGV4dGVuZGVkKXtcbiAgICAgICAgICAgIHRoaXMucHJvcHMuYWRkTmV3U2Vhc29uKDAsW10pO1xuICAgICAgICB9XG5cbiAgICAgICAgdGhpcy5zZXRTdGF0ZSh7IHVwZGF0ZWQ6IGZhbHNlLCBmaWx0ZXJVcGRhdGVkIDogZmFsc2UsIGN1c3RvbUNvdW50cnkgOiBmYWxzZSB9KTtcbiAgICAgICAgdGhpcy5wcm9wcy5hcHBseVNlbGVjdGlvbihcbiAgICAgICAgICAgIHRoaXMucHJvcHMuc2VsZWN0b3JUeXBlLFxuICAgICAgICAgICAgc2VsZWN0ZWRJdGVtcyxcbiAgICAgICAgICAgIHRoaXMucHJvcHMubXVsdGlwbGUsXG4gICAgICAgICAgICB0aGlzLnByb3BzLmluZGV4LFxuICAgICAgICAgICAgdGhpcy5wcm9wcy5jbGVhbik7XG4gICAgfTtcblxuICAgIGFkZE5ld1Nwb3J0ID0gKGluZGV4KSA9PiB7XG4gICAgICAgIHRoaXMuc2V0U3RhdGUoeyB1cGRhdGVkOiBmYWxzZSwgZmlsdGVyVXBkYXRlZCA6IGZhbHNlIH0pO1xuICAgICAgICB0aGlzLnByb3BzLmFkZE5ld1Nwb3J0KGluZGV4LHRoaXMucHJvcHMuY2xlYW4pO1xuICAgICAgICBpZiAoaW5kZXg9PT0wKSB0aGlzLnByb3BzLmFkZE5ld1NlYXNvbihpbmRleCxbXSk7XG4gICAgICAgIHRoaXMucHJvcHMuY2xvc2VTZWxlY3RvcigpO1xuICAgIH07XG5cbiAgICBhZGROZXdUb3VybmFtZW50ID0gKGluZGV4KSA9PiB7XG4gICAgICAgIHRoaXMuc2V0U3RhdGUoeyB1cGRhdGVkOiBmYWxzZSwgZmlsdGVyVXBkYXRlZCA6IGZhbHNlIH0pO1xuICAgICAgICB0aGlzLnByb3BzLmFkZE5ld1RvdXJuYW1lbnQoaW5kZXgsdGhpcy5wcm9wcy5jbGVhbik7XG4gICAgICAgIHRoaXMucHJvcHMuYWRkTmV3U2Vhc29uKGluZGV4LFtdKTtcbiAgICAgICAgdGhpcy5wcm9wcy5jbG9zZVNlbGVjdG9yKCk7XG4gICAgfTtcblxuICAgIGFkZE5ld1NlYXNvbiA9IChpbmRleCkgPT4ge1xuICAgICAgICB0aGlzLnNldFN0YXRlKHsgdXBkYXRlZDogZmFsc2UsIGZpbHRlclVwZGF0ZWQgOiBmYWxzZSB9KTtcbiAgICAgICAgdGhpcy5wcm9wcy5hZGROZXdTZWFzb24oaW5kZXgsdGhpcy5wcm9wcy5jbGVhbik7XG4gICAgICAgIHRoaXMucHJvcHMuY2xvc2VTZWxlY3RvcigpO1xuICAgIH07XG5cbiAgICBhZGROZXdDYXRlZ29yeSA9IChpbmRleCkgPT4ge1xuICAgICAgICB0aGlzLnNldFN0YXRlKHsgdXBkYXRlZDogZmFsc2UsIGZpbHRlclVwZGF0ZWQgOiBmYWxzZSB9KTtcbiAgICAgICAgdGhpcy5wcm9wcy5hZGROZXdDYXRlZ29yeShpbmRleCx0aGlzLnByb3BzLmNsZWFuKTtcbiAgICAgICAgdGhpcy5wcm9wcy5hZGROZXdUb3VybmFtZW50KDAsW10pO1xuICAgICAgICB0aGlzLnByb3BzLmFkZE5ld1NlYXNvbigwLFtdKTtcbiAgICAgICAgdGhpcy5wcm9wcy5jbG9zZVNlbGVjdG9yKCk7XG4gICAgfTtcblxuICAgIHNlbGVjdEl0ZW0gPSAoIGl0ZW0gKSA9PiB7XG5cbiAgICAgICAgbGV0IF90aGlzID0gdGhpcztcblxuICAgICAgICB0aGlzLnNldFN0YXRlKChwcmV2U3RhdGUpID0+IHtcblxuICAgICAgICAgICAgaWYgKCBwcmV2U3RhdGUuc2VsZWN0ZWRJdGVtcy5oYXMoaXRlbS5leHRlcm5hbElkKSl7XG4gICAgICAgICAgICAgICAgaWYgKCBfdGhpcy5wcm9wcy5tdWx0aXBsZSApIHtcbiAgICAgICAgICAgICAgICAgICAgcHJldlN0YXRlLnNlbGVjdGVkSXRlbXMuZGVsZXRlKGl0ZW0uZXh0ZXJuYWxJZCk7XG4gICAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICB9IGVsc2Uge1xuXG4gICAgICAgICAgICAgICAgaWYgKCAgIV90aGlzLnByb3BzLm11bHRpcGxlICkge1xuICAgICAgICAgICAgICAgICAgICBwcmV2U3RhdGUuc2VsZWN0ZWRJdGVtcy5jbGVhcigpO1xuICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICAgIHByZXZTdGF0ZS5zZWxlY3RlZEl0ZW1zLnNldChpdGVtLmV4dGVybmFsSWQsIGl0ZW0pO1xuXG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICAgICAgc2VsZWN0ZWRJdGVtcyA6IHByZXZTdGF0ZS5zZWxlY3RlZEl0ZW1zLFxuICAgICAgICAgICAgICAgIHVwZGF0ZWQ6IHRydWVcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSk7XG4gICAgfTtcblxuICAgIGlzSXRlbVNlbGVjdGVkID0gKCBpdGVtICkgPT4ge1xuICAgICAgICByZXR1cm4gdGhpcy5zdGF0ZS5zZWxlY3RlZEl0ZW1zLmhhcyhpdGVtLmV4dGVybmFsSWQpO1xuICAgIH07XG5cbiAgICBpc0l0ZW1EaXNhYmxlZCA9ICggaXRlbSApID0+IHtcblxuICAgICAgICByZXR1cm4gdGhpcy5zdGF0ZS5kaXNhYmxlZC5oYXMoaXRlbS5leHRlcm5hbElkKTtcbiAgICB9O1xuXG4gICAgc2hvd0FsbENvdW50cmllcyA9ICgpID0+IHtcblxuICAgICAgICBpZiAoICFDb250ZW50QXJlbmEuRGF0YS5Db3VudHJpZXMgfHwgQ29udGVudEFyZW5hLkRhdGEuQ291bnRyaWVzLmxlbmd0aCA9PT0wICkgcmV0dXJuO1xuXG4gICAgICAgIHRoaXMuc2V0U3RhdGUoKHByZXZTdGF0ZSkgPT4gKHtcbiAgICAgICAgICAgIHByZXZDb3VudHJpZXMgOiBuZXcgTWFwKHByZXZTdGF0ZS5zZWxlY3Rvckl0ZW1zLm1hcChpPT5baS5leHRlcm5hbElkLCBpXSkpICxcbiAgICAgICAgICAgIHNlbGVjdG9ySXRlbXMgOiBDb250ZW50QXJlbmEuRGF0YS5Db3VudHJpZXMsXG4gICAgICAgICAgICBjdXN0b21Db3VudHJ5IDogdHJ1ZVxuICAgICAgICB9KSk7XG5cbiAgICB9O1xuXG4gICAgZmlsdGVyTGV0dGVyID0gKGl0ZW0pID0+e1xuICAgICAgICBsZXQgZmlsdGVyID0gdGhpcy5nZXRBY3RpdmVGaWx0ZXIoKTtcbiAgICAgICAgcmV0dXJuIGZpbHRlci52YWx1ZXMuaW5kZXhPZihpdGVtLm5hbWVbMF0udG9Mb3dlckNhc2UoKSkgIT09IC0xXG4gICAgfTtcblxuICAgIGZpbHRlckludGVybmF0aW9uYWwgPSAoaXRlbSkgPT57XG4gICAgICAgIHJldHVybiBpdGVtLm5hbWUubWF0Y2goL2ludGVybmF0aW9uYWwvZ2kpICE9PSBudWxsXG4gICAgfTtcblxuICAgIGdldEl0ZW1zID0gKCkgPT57XG4gICAgICAgIGxldCBmaWx0ZXIgPSB0aGlzLmdldEFjdGl2ZUZpbHRlcigpO1xuICAgICAgICBpZiAoIGZpbHRlci50eXBlID09PSBcIm9yaWdpblwiICl7XG4gICAgICAgICAgICBpZiAodGhpcy5wcm9wc1tmaWx0ZXIudmFsdWVdKSByZXR1cm4gdGhpcy5wcm9wc1tmaWx0ZXIudmFsdWVdO1xuICAgICAgICAgICAgaWYgKCAhdGhpcy5zaG91bGRTaG93RmlsdGVycygpICkgcmV0dXJuIHRoaXMuc3RhdGUuc2VsZWN0b3JJdGVtcztcblxuICAgICAgICAgICAgcmV0dXJuIHRoaXMuc3RhdGUuc2VsZWN0b3JJdGVtcy5maWx0ZXIodGhpcy5maWx0ZXJMZXR0ZXIpO1xuICAgICAgICB9XG5cbiAgICAgICAgaWYgKCBmaWx0ZXIudHlwZSA9PT0gXCJpbnRlcm5hdGlvbmFsXCIgKSByZXR1cm4gdGhpcy5zdGF0ZS5zZWxlY3Rvckl0ZW1zLmZpbHRlcih0aGlzLmZpbHRlckludGVybmF0aW9uYWwpO1xuXG4gICAgICAgIGlmICggZmlsdGVyLnR5cGUgPT09IFwiZmlyc3RMZXR0ZXJcIikge1xuXG4gICAgICAgICAgICBpZiAoICF0aGlzLnNob3VsZFNob3dGaWx0ZXJzKCkgKSByZXR1cm4gdGhpcy5zdGF0ZS5zZWxlY3Rvckl0ZW1zO1xuXG4gICAgICAgICAgICByZXR1cm4gdGhpcy5zdGF0ZS5zZWxlY3Rvckl0ZW1zLmZpbHRlcih0aGlzLmZpbHRlckxldHRlcik7XG4gICAgICAgIH1cbiAgICB9O1xuXG4gICAgcmVuZGVyKCkge1xuICAgICAgICBsZXQgX3RoaXMgPSB0aGlzO1xuICAgICAgICByZXR1cm4gKFxuICAgICAgICAgICAgPE1vZGFsXG4gICAgICAgICAgICAgICAgaXNPcGVuPXt0aGlzLnByb3BzLm9wZW59XG4gICAgICAgICAgICAgICAgb25BZnRlck9wZW49e3RoaXMuYWZ0ZXJPcGVuTW9kYWx9XG4gICAgICAgICAgICAgICAgb25SZXF1ZXN0Q2xvc2U9e3RoaXMuY2xvc2VNb2RhbH1cbiAgICAgICAgICAgICAgICBib2R5T3BlbkNsYXNzTmFtZT17XCJzZWxlY3RvclwifVxuICAgICAgICAgICAgICAgIHN0eWxlPXtTZWxlY3Rvck1vZGFsU3R5bGV9XG4gICAgICAgICAgICAgICAgY2xhc3NOYW1lPVwiUmVhY3RNb2RhbF9fU2VsZWN0b3JcIlxuICAgICAgICAgICAgICAgIGNvbnRlbnRMYWJlbD1cIkV4YW1wbGUgTW9kYWxcIlxuICAgICAgICAgICAgPlxuICAgICAgICAgICAgICAgIDxkaXY+XG4gICAgICAgICAgICAgICAgICAgIHsgdGhpcy5wcm9wcy5wb3B1bGFySXRlbXMgJiZcbiAgICAgICAgICAgICAgICAgICAgPGJ1dHRvbiBjbGFzc05hbWU9e1wic2VsZWN0b3ItZmlsdGVyIFwiICsgKHRoaXMuZ2V0QWN0aXZlRmlsdGVyTmFtZSgpID09PSBcInBvcHVsYXJcIiAmJiBcInNlbGVjdG9yLWZpbHRlci1hY3RpdmVcIil9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgb25DbGljaz17KCk9PnsgdGhpcy5zZXRBY3RpdmVGaWx0ZXIoXCJwb3B1bGFyXCIpfX0+XG4gICAgICAgICAgICAgICAgICAgICAgICB7dGhpcy5jb250ZXh0LnQoXCJQb3B1bGFyXCIpfVxuICAgICAgICAgICAgICAgICAgICA8L2J1dHRvbj59XG4gICAgICAgICAgICAgICAgICAgIHsgdGhpcy5zaG91bGRTaG93RmlsdGVycygpICYmIDxidXR0b24gY2xhc3NOYW1lPXtcInNlbGVjdG9yLWZpbHRlciBcIiArICh0aGlzLmdldEFjdGl2ZUZpbHRlck5hbWUoKSA9PT0gXCJhZ1wiICYmIFwic2VsZWN0b3ItZmlsdGVyLWFjdGl2ZVwiKX1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBvbkNsaWNrPXsoKT0+eyB0aGlzLnNldEFjdGl2ZUZpbHRlcihcImFnXCIpfX0+QS1HPC9idXR0b24+fVxuICAgICAgICAgICAgICAgICAgICB7IHRoaXMuc2hvdWxkU2hvd0ZpbHRlcnMoKSAmJiA8YnV0dG9uIGNsYXNzTmFtZT17XCJzZWxlY3Rvci1maWx0ZXIgXCIgKyAodGhpcy5nZXRBY3RpdmVGaWx0ZXJOYW1lKCkgPT09IFwiaG5cIiAmJiBcInNlbGVjdG9yLWZpbHRlci1hY3RpdmVcIil9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgb25DbGljaz17KCk9PnsgdGhpcy5zZXRBY3RpdmVGaWx0ZXIoXCJoblwiKX19PkgtTjwvYnV0dG9uPn1cbiAgICAgICAgICAgICAgICAgICAgeyB0aGlzLnNob3VsZFNob3dGaWx0ZXJzKCkgJiYgPGJ1dHRvbiBjbGFzc05hbWU9e1wic2VsZWN0b3ItZmlsdGVyIFwiICsgKHRoaXMuZ2V0QWN0aXZlRmlsdGVyTmFtZSgpID09PSBcIm90XCIgJiYgXCJzZWxlY3Rvci1maWx0ZXItYWN0aXZlXCIpfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG9uQ2xpY2s9eygpPT57IHRoaXMuc2V0QWN0aXZlRmlsdGVyKFwib3RcIil9fT5PLVQ8L2J1dHRvbj59XG4gICAgICAgICAgICAgICAgICAgIHsgdGhpcy5zaG91bGRTaG93RmlsdGVycygpICYmIDxidXR0b24gY2xhc3NOYW1lPXtcInNlbGVjdG9yLWZpbHRlciBcIiArICh0aGlzLmdldEFjdGl2ZUZpbHRlck5hbWUoKSA9PT0gXCJ1elwiICYmIFwic2VsZWN0b3ItZmlsdGVyLWFjdGl2ZVwiKX1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBvbkNsaWNrPXsoKT0+eyB0aGlzLnNldEFjdGl2ZUZpbHRlcihcInV6XCIpfX0+VS1aPC9idXR0b24+fVxuICAgICAgICAgICAgICAgICAgICB7ICB0aGlzLnNob3VsZFNob3dJbnRlcm5hdGlvbmFsRmlsdGVyKCkgJiZcbiAgICAgICAgICAgICAgICAgICAgPGJ1dHRvbiBjbGFzc05hbWU9e1wic2VsZWN0b3ItZmlsdGVyIFwiICsgKHRoaXMuZ2V0QWN0aXZlRmlsdGVyTmFtZSgpID09PSBcImludGVybmF0aW9uYWxcIiAmJiBcInNlbGVjdG9yLWZpbHRlci1hY3RpdmVcIil9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgb25DbGljaz17KCk9PnsgdGhpcy5zZXRBY3RpdmVGaWx0ZXIoXCJpbnRlcm5hdGlvbmFsXCIpfX0+XG4gICAgICAgICAgICAgICAgICAgICAgICB7dGhpcy5jb250ZXh0LnQoXCJJbnRlcm5hdGlvbmFsXCIpfVxuICAgICAgICAgICAgICAgICAgICA8L2J1dHRvbj59XG4gICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJzZWxlY3Rvci1jb250ZW50XCI+XG4gICAgICAgICAgICAgICAgICAgIHsgdGhpcy5nZXRJdGVtcygpLm1hcChmdW5jdGlvbihpdGVtLCBpKXtcbiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiA8U2VsZWN0b3JJdGVtIGtleT17aX1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGxhYmVsPXtpdGVtLm5hbWV9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBvbkNsaWNrPXsgKCkgPT4gX3RoaXMuc2VsZWN0SXRlbShpdGVtKX1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNlbGVjdGVkPXsgX3RoaXMuaXNJdGVtU2VsZWN0ZWQoaXRlbSkgfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZGlzYWJsZWQ9eyBfdGhpcy5pc0l0ZW1EaXNhYmxlZChpdGVtKSB9XG4gICAgICAgICAgICAgICAgICAgICAgICAvPjtcbiAgICAgICAgICAgICAgICAgICAgfSl9XG4gICAgICAgICAgICAgICAgPC9kaXY+XG5cbiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT17XCJidXR0b25zXCJ9PlxuICAgICAgICAgICAgICAgICAgICA8YnV0dG9uIGNsYXNzTmFtZT17XCJsaWdodC1ibHVlLWJ1dHRvblwifSBzdHlsZT17e2JhY2tncm91bmRDb2xvcjogU2VsZWN0b3JNb2RhbFN0eWxlLmNvbnRlbnQuYmFja2dyb3VuZENvbG9yfX0gb25DbGljaz17dGhpcy5jbG9zZU1vZGFsfT5cbiAgICAgICAgICAgICAgICAgICAgICAgIHt0aGlzLmNvbnRleHQudChcIkNhbmNlbFwiKX1cbiAgICAgICAgICAgICAgICAgICAgPC9idXR0b24+XG4gICAgICAgICAgICAgICAgICAgIDxidXR0b24gY2xhc3NOYW1lPXtcInN0YW5kYXJkLWJ1dHRvblwifSBvbkNsaWNrPXt0aGlzLmFwcGx5U2VsZWN0aW9ufSBkaXNhYmxlZD17IXRoaXMuc3RhdGUudXBkYXRlZH0+XG4gICAgICAgICAgICAgICAgICAgICAgICB7dGhpcy5jb250ZXh0LnQoXCJBcHBseVwiKX1cbiAgICAgICAgICAgICAgICAgICAgPC9idXR0b24+XG4gICAgICAgICAgICAgICAgPC9kaXY+XG5cblxuICAgICAgICAgICAgICAgIHt0aGlzLnByb3BzLnNob3dOZXdTcG9ydCAmJiA8ZGl2IGNsYXNzTmFtZT17XCJleHRyYXNcIn0+XG4gICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPXtcIm1lc3NhZ2VcIn0+XG4gICAgICAgICAgICAgICAgICAgICAgICB7dGhpcy5jb250ZXh0LnQoXCJDTF9TVEVQMV9TRUxFQ1RPUl9TUE9SVF8xXCIpfVxuICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgICAgICAgPGJ1dHRvbiBjbGFzc05hbWU9e1wibGluay1idXR0b25cIn0gb25DbGljaz17KCkgPT4geyB0aGlzLmFkZE5ld1Nwb3J0KHRoaXMucHJvcHMuaW5kZXgpIH0gfSA+XG4gICAgICAgICAgICAgICAgICAgICAgICB7dGhpcy5jb250ZXh0LnQoXCJDTF9TVEVQMV9TRUxFQ1RPUl9BRERfU1BPUlRcIil9XG4gICAgICAgICAgICAgICAgICAgIDwvYnV0dG9uPlxuICAgICAgICAgICAgICAgIDwvZGl2Pn1cblxuICAgICAgICAgICAgICAgIHt0aGlzLnByb3BzLnNob3dOZXdUb3VybmFtZW50ICYmIDxkaXYgY2xhc3NOYW1lPXtcImV4dHJhc1wifT5cbiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9e1wibWVzc2FnZVwifT5cbiAgICAgICAgICAgICAgICAgICAgICAgIHt0aGlzLmNvbnRleHQudChcIkNMX1NURVAxX1NFTEVDVE9SX1RPVVJOQU1FTlRfMVwiKX1cbiAgICAgICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgICAgICAgIDxidXR0b24gY2xhc3NOYW1lPXtcImxpbmstYnV0dG9uXCJ9IG9uQ2xpY2s9eyAoKSA9PiB7IHRoaXMuYWRkTmV3VG91cm5hbWVudCh0aGlzLnByb3BzLmluZGV4ICkgfSB9ID5cbiAgICAgICAgICAgICAgICAgICAgICAgIHt0aGlzLmNvbnRleHQudChcIkNMX1NURVAxX1NFTEVDVE9SX0FERF9UT1VSTkFNRU5UXCIpfVxuICAgICAgICAgICAgICAgICAgICA8L2J1dHRvbj5cbiAgICAgICAgICAgICAgICA8L2Rpdj59XG5cbiAgICAgICAgICAgICAgICB7dGhpcy5wcm9wcy5zaG93TmV3U2Vhc29uICYmIDxkaXYgY2xhc3NOYW1lPXtcImV4dHJhc1wifT5cbiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9e1wibWVzc2FnZVwifT5cbiAgICAgICAgICAgICAgICAgICAgICAgIHt0aGlzLmNvbnRleHQudChcIkNMX1NURVAxX1NFTEVDVE9SX1NFQVNPTl8xXCIpfVxuICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgICAgICAgPGJ1dHRvbiBjbGFzc05hbWU9e1wibGluay1idXR0b25cIn0gb25DbGljaz17KCkgPT4geyB0aGlzLmFkZE5ld1NlYXNvbih0aGlzLnByb3BzLmluZGV4KSB9IH0gPlxuICAgICAgICAgICAgICAgICAgICAgICAge3RoaXMuY29udGV4dC50KFwiQ0xfU1RFUDFfU0VMRUNUT1JfQUREX1NFQVNPTlwiKX1cbiAgICAgICAgICAgICAgICAgICAgPC9idXR0b24+XG4gICAgICAgICAgICAgICAgPC9kaXY+fVxuXG4gICAgICAgICAgICAgICAgeyB0aGlzLnByb3BzLnNob3dBbGxDb3VudHJpZXMmJiA8ZGl2IGNsYXNzTmFtZT17XCJleHRyYXNcIn0+XG4gICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPXtcIm1lc3NhZ2VcIn0+XG4gICAgICAgICAgICAgICAgICAgICAgICB7dGhpcy5jb250ZXh0LnQoXCJDTF9TVEVQMV9TRUxFQ1RPUl9DT1VOVFJZXzFcIil9XG4gICAgICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICAgICAgICA8YnV0dG9uIGNsYXNzTmFtZT17XCJsaW5rLWJ1dHRvblwifSBvbkNsaWNrPXt0aGlzLnNob3dBbGxDb3VudHJpZXMgfSA+XG4gICAgICAgICAgICAgICAgICAgICAgICB7dGhpcy5jb250ZXh0LnQoXCJDTF9TVEVQMV9TRUxFQ1RPUl9DT1VOVFJJRVNfQUxMXCIpfVxuICAgICAgICAgICAgICAgICAgICA8L2J1dHRvbj5cbiAgICAgICAgICAgICAgICA8L2Rpdj59XG5cbiAgICAgICAgICAgICAgICB7IHRoaXMucHJvcHMuc2hvd05ld0NhdGVnb3J5ICYmIDxkaXYgY2xhc3NOYW1lPXtcImV4dHJhc1wifT5cbiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9e1wibWVzc2FnZVwifT5cbiAgICAgICAgICAgICAgICAgICAgICAgIHt0aGlzLmNvbnRleHQudChcIkNMX1NURVAxX1NFTEVDVE9SX0NBVEVHT1JZXzFcIil9XG4gICAgICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICAgICAgICA8YnV0dG9uIGNsYXNzTmFtZT17XCJsaW5rLWJ1dHRvblwifSBvbkNsaWNrPXsoKSA9PiB7IHRoaXMuYWRkTmV3Q2F0ZWdvcnkodGhpcy5wcm9wcy5pbmRleCkgfSB9ID5cbiAgICAgICAgICAgICAgICAgICAgICAgIHt0aGlzLmNvbnRleHQudChcIkNMX1NURVAxX1NFTEVDVE9SX0FERF9DQVRFR09SWVwiKX1cbiAgICAgICAgICAgICAgICAgICAgPC9idXR0b24+XG4gICAgICAgICAgICAgICAgPC9kaXY+fVxuXG4gICAgICAgICAgICA8L01vZGFsPlxuICAgICAgICApO1xuICAgIH1cbn1cblNlbGVjdG9yLmNvbnRleHRUeXBlcyA9IHtcbiAgICB0OiBQcm9wVHlwZXMuZnVuYy5pc1JlcXVpcmVkXG59O1xuXG5jb25zdCBtYXBTdGF0ZVRvUHJvcHMgPSAoIHN0YXRlICkgPT4ge1xuICAgIHJldHVybiBzdGF0ZS5zZWxlY3RvclxufTtcblxuY29uc3QgbWFwRGlzcGF0Y2hUb1Byb3BzID0gZGlzcGF0Y2ggPT4ge1xuICAgIHJldHVybiB7XG4gICAgICAgIG9wZW5TZWxlY3RvciA6ICgpID0+IGRpc3BhdGNoKHtcbiAgICAgICAgICAgIHR5cGUgOiAnT1BFTl9TRUxFQ1RPUidcbiAgICAgICAgfSksXG4gICAgICAgIGNsb3NlU2VsZWN0b3IgOiAoKSA9PiBkaXNwYXRjaCh7XG4gICAgICAgICAgICB0eXBlIDogJ0NMT1NFX1NFTEVDVE9SJ1xuICAgICAgICB9KSxcbiAgICAgICAgYXBwbHlTZWxlY3Rpb24gOiAoc2VsZWN0b3JUeXBlLCBzZWxlY3RlZEl0ZW1zLCBtdWx0aXBsZSwgaW5kZXgsIGNsZWFuKSA9PiBkaXNwYXRjaCh7XG4gICAgICAgICAgICB0eXBlIDogJ0FQUExZX1NFTEVDVElPTicsXG4gICAgICAgICAgICBzZWxlY3RvclR5cGUgOiBzZWxlY3RvclR5cGUsXG4gICAgICAgICAgICBzZWxlY3RlZEl0ZW1zIDogc2VsZWN0ZWRJdGVtcyxcbiAgICAgICAgICAgIG11bHRpcGxlIDogbXVsdGlwbGUsXG4gICAgICAgICAgICBpbmRleCA6IGluZGV4LFxuICAgICAgICAgICAgY2xlYW4gOiBjbGVhblxuICAgICAgICB9KSxcbiAgICAgICAgYWRkTmV3U3BvcnQgOiAoaW5kZXgsY2xlYW4pID0+IGRpc3BhdGNoKHtcbiAgICAgICAgICAgIHR5cGUgOiAnQUREX05FVycsXG4gICAgICAgICAgICBpbmRleCA6IGluZGV4LFxuICAgICAgICAgICAgc2VsZWN0b3JUeXBlOiBcInNwb3J0c1wiLFxuICAgICAgICAgICAgY2xlYW4gOiBjbGVhblxuICAgICAgICB9KSxcbiAgICAgICAgYWRkTmV3Q2F0ZWdvcnkgOiAoaW5kZXgsIGNsZWFuKSA9PiBkaXNwYXRjaCh7XG4gICAgICAgICAgICB0eXBlIDogJ0FERF9ORVcnLFxuICAgICAgICAgICAgaW5kZXggOiBpbmRleCxcbiAgICAgICAgICAgIHNlbGVjdG9yVHlwZTogXCJzcG9ydENhdGVnb3J5XCIsXG4gICAgICAgICAgICBjbGVhbiA6IGNsZWFuXG4gICAgICAgIH0pLFxuICAgICAgICBhZGROZXdUb3VybmFtZW50IDogKGluZGV4LCBjbGVhbikgPT4gZGlzcGF0Y2goe1xuICAgICAgICAgICAgdHlwZSA6ICdBRERfTkVXJyxcbiAgICAgICAgICAgIGluZGV4IDogaW5kZXgsXG4gICAgICAgICAgICBzZWxlY3RvclR5cGU6IFwidG91cm5hbWVudFwiLFxuICAgICAgICAgICAgY2xlYW4gOiBjbGVhblxuICAgICAgICB9KSxcbiAgICAgICAgYWRkTmV3U2Vhc29uIDogKGluZGV4LCBjbGVhbikgPT4gZGlzcGF0Y2goe1xuICAgICAgICAgICAgdHlwZTogJ0FERF9ORVcnLFxuICAgICAgICAgICAgaW5kZXggOiBpbmRleCxcbiAgICAgICAgICAgIHNlbGVjdG9yVHlwZTogXCJzZWFzb25zXCIsXG4gICAgICAgICAgICBjbGVhbiA6IGNsZWFuXG4gICAgICAgIH0pXG4gICAgfVxufTtcblxuZXhwb3J0IGRlZmF1bHQgY29ubmVjdChcbiAgICBtYXBTdGF0ZVRvUHJvcHMsXG4gICAgbWFwRGlzcGF0Y2hUb1Byb3BzXG4pKFNlbGVjdG9yKVxuXG5cbi8vIFdFQlBBQ0sgRk9PVEVSIC8vXG4vLyAuL3NyYy9BcHBCdW5kbGUvUmVzb3VyY2VzL3B1YmxpYy9qYXZhc2NyaXB0L21haW4vY29tcG9uZW50cy9TZWxlY3Rvci5qcyIsImltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgTW9kYWwgZnJvbSAncmVhY3QtbW9kYWwnO1xuaW1wb3J0IHsgR2VuZXJpY01vZGFsU3R5bGV9IGZyb20gXCIuLi9zdHlsZXMvY3VzdG9tXCI7XG5pbXBvcnQge1Byb3BUeXBlc30gZnJvbSBcInByb3AtdHlwZXNcIjtcblxuY2xhc3MgU2VuZE1lc3NhZ2UgZXh0ZW5kcyBSZWFjdC5Db21wb25lbnR7XG4gICAgY29uc3RydWN0b3IocHJvcHMpe1xuICAgICAgICBzdXBlcihwcm9wcyk7XG5cbiAgICAgICAgdGhpcy5zdGF0ZSA9IHtcbiAgICAgICAgICAgIGlzT3BlbiA6IHByb3BzLmlzT3BlblxuICAgICAgICB9XG4gICAgfVxuXG4gICAgb3BlbiA9ICgpID0+IHtcbiAgICAgICAgdGhpcy5zZXRTdGF0ZSh7aXNPcGVuIDogdHJ1ZX0pO1xuICAgIH07XG5cbiAgICBjbG9zZSA9ICgpID0+IHtcbiAgICAgICAgdGhpcy5zZXRTdGF0ZSh7aXNPcGVuIDogZmFsc2UsIHNob3dTdWNjZXNzIDogZmFsc2V9KTtcbiAgICB9O1xuXG4gICAgc2VuZCA9ICgpID0+IHtcbiAgICAgICAgY29uc3QgeyBsaXN0aW5nSWQsIHJlY2lwaWVudCwgcm9sZSB9ID0gdGhpcy5wcm9wcztcblxuICAgICAgICBsZXQgbWVzc2FnZSA9IHtcbiAgICAgICAgICAgIGNvbnRlbnQgOiB0aGlzLnN0YXRlLm1lc3NhZ2UsXG4gICAgICAgICAgICBsaXN0aW5nIDogbGlzdGluZ0lkLFxuICAgICAgICAgICAgcmVjaXBpZW50IDogcmVjaXBpZW50LmlkLFxuICAgICAgICAgICAgcm9sZSA6IHJvbGUgfHwgXCJCVVlFUlwiXG4gICAgICAgIH07XG5cbiAgICAgICAgdGhpcy5zZXRTdGF0ZSh7c2F2aW5nIDogdHJ1ZX0pO1xuXG4gICAgICAgIENvbnRlbnRBcmVuYS5Db250ZW50QXBpLnNlbmRNZXNzYWdlKG1lc3NhZ2UpLmRvbmUocj0+e1xuICAgICAgICAgICAgdGhpcy5zZXRTdGF0ZSh7c2F2aW5nIDogZmFsc2UsIHNob3dTdWNjZXNzIDogdHJ1ZSwgbWVzc2FnZSA6IG51bGx9KVxuICAgICAgICB9KTtcbiAgICB9O1xuXG5cbiAgICByZW5kZXIoKXtcbiAgICAgICAgY29uc3QgeyByZWNpcGllbnQgfSA9IHRoaXMucHJvcHM7XG4gICAgICAgIGNvbnN0IHsgc2hvd1N1Y2Nlc3MsIHNhdmluZywgbWVzc2FnZSB9ID0gdGhpcy5zdGF0ZTtcblxuICAgICAgICByZXR1cm4gKFxuICAgICAgICAgICAgPE1vZGFsXG4gICAgICAgICAgICAgICAgaXNPcGVuPXt0aGlzLnN0YXRlLmlzT3Blbn1cbiAgICAgICAgICAgICAgICBvblJlcXVlc3RDbG9zZT17dGhpcy5jbG9zZX1cbiAgICAgICAgICAgICAgICBib2R5T3BlbkNsYXNzTmFtZT17XCJnZW5lcmljLW1vZGFsXCJ9XG4gICAgICAgICAgICAgICAgc3R5bGU9e0dlbmVyaWNNb2RhbFN0eWxlfVxuICAgICAgICAgICAgPlxuICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPXtcImdlbmVyaWMtbW9kYWwtY29udGFpbmVyXCJ9PlxuICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cInRpdGxlXCI+XG4gICAgICAgICAgICAgICAgICAgICAgICB7dGhpcy5jb250ZXh0LnQoXCJDb250YWN0XCIpfSB7cmVjaXBpZW50LmxlZ2FsTmFtZX1cbiAgICAgICAgICAgICAgICAgICAgPC9kaXY+XG5cbiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJjb250YWluZXJcIj5cbiAgICAgICAgICAgICAgICAgICAgICAgIHshc2F2aW5nICYmICFzaG93U3VjY2VzcyAmJlxuICAgICAgICAgICAgICAgICAgICAgICAgPHRleHRhcmVhIG9uQ2hhbmdlPXsoZSk9Pnt0aGlzLnNldFN0YXRlKHttZXNzYWdlOiBlLnRhcmdldC52YWx1ZX0pfX0gdmFsdWU9e21lc3NhZ2V9Lz59XG4gICAgICAgICAgICAgICAgICAgICAgICB7c2F2aW5nICYmIDxkaXY+PGkgY2xhc3NOYW1lPVwiZmEgZmEtY29nIGZhLXNwaW5cIiAvPjwvZGl2Pn1cbiAgICAgICAgICAgICAgICAgICAgICAgIHtzaG93U3VjY2VzcyAmJiA8ZGl2PlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHt0aGlzLmNvbnRleHQudChcIk1FU1NBR0VfUE9QVVBfU0VOVFwiKX1cbiAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2Pn1cbiAgICAgICAgICAgICAgICAgICAgPC9kaXY+XG5cbiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9e1wiYnV0dG9uc1wifT5cblxuICAgICAgICAgICAgICAgICAgICAgICAgeyFzYXZpbmcgJiYgIXNob3dTdWNjZXNzICYmXG4gICAgICAgICAgICAgICAgICAgICAgICA8YnV0dG9uIGNsYXNzTmFtZT17XCJjb25maXJtXCJ9IGRpc2FibGVkPXshbWVzc2FnZX0gb25DbGljaz17dGhpcy5zZW5kfT5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB7dGhpcy5jb250ZXh0LnQoXCJNRVNTQUdFX1BPUFVQX0JVVFRPTl9TRU5EXCIpfVxuICAgICAgICAgICAgICAgICAgICAgICAgPC9idXR0b24+fVxuXG4gICAgICAgICAgICAgICAgICAgICAgICB7IXNob3dTdWNjZXNzICYmIDxidXR0b24gb25DbGljaz17dGhpcy5jbG9zZX0+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAge3RoaXMuY29udGV4dC50KFwiTUVTU0FHRV9QT1BVUF9CVVRUT05fQ0FOQ0VMXCIpfVxuICAgICAgICAgICAgICAgICAgICAgICAgPC9idXR0b24+fVxuICAgICAgICAgICAgICAgICAgICAgICAge3Nob3dTdWNjZXNzICYmIDxidXR0b24gIGNsYXNzTmFtZT17XCJjb25maXJtXCJ9IG9uQ2xpY2s9e3RoaXMuY2xvc2V9PlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHt0aGlzLmNvbnRleHQudChcIk1FU1NBR0VfUE9QVVBfQlVUVE9OX0NMT1NFXCIpfVxuICAgICAgICAgICAgICAgICAgICAgICAgPC9idXR0b24+fVxuICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgIDwvTW9kYWw+XG4gICAgICAgIClcbiAgICB9XG59XG5cblNlbmRNZXNzYWdlLmNvbnRleHRUeXBlcyA9IHtcbiAgICB0OiBQcm9wVHlwZXMuZnVuYy5pc1JlcXVpcmVkXG59O1xuXG5leHBvcnQgZGVmYXVsdCBTZW5kTWVzc2FnZTtcblxuXG4vLyBXRUJQQUNLIEZPT1RFUiAvL1xuLy8gLi9zcmMvQXBwQnVuZGxlL1Jlc291cmNlcy9wdWJsaWMvamF2YXNjcmlwdC9tYWluL2NvbXBvbmVudHMvU2VuZE1lc3NhZ2UuanMiLCJpbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xuaW1wb3J0IFJlYWN0VG9vbHRpcCBmcm9tICdyZWFjdC10b29sdGlwJztcblxuY29uc3QgVG9vbHRpcCA9ICh7aWQsIHRleHQsIGljb24sIG9uQ2xpY2t9KSA9PiB7XG4gICAgcmV0dXJuIChcbiAgICAgICAgPGlcbiAgICAgICAgICAgIG9uQ2xpY2s9e29uQ2xpY2t9XG4gICAgICAgICAgICBjbGFzc05hbWU9e2ljb24gPyBpY29uIDogXCJjYS10b29sdGlwIGZhIGZhLWluZm8tY2lyY2xlXCJ9XG4gICAgICAgICAgICBkYXRhLWZvcj17aWR9IGRhdGEtdGlwPXt0ZXh0fVxuICAgICAgICA+XG4gICAgICAgICAgICA8UmVhY3RUb29sdGlwIGlkPXtpZH0gcGxhY2U9XCJ0b3BcIiB0eXBlPVwiZGFya1wiIGVmZmVjdD1cInNvbGlkXCIvPlxuICAgICAgICA8L2k+XG4gICAgKTtcbn07XG5cbmV4cG9ydCBkZWZhdWx0IFRvb2x0aXA7XG5cblxuLy8gV0VCUEFDSyBGT09URVIgLy9cbi8vIC4vc3JjL0FwcEJ1bmRsZS9SZXNvdXJjZXMvcHVibGljL2phdmFzY3JpcHQvbWFpbi9jb21wb25lbnRzL1Rvb2x0aXAuanMiLCJpbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xuXG5pbXBvcnQgeyBjb25uZWN0IH0gZnJvbSBcInJlYWN0LXJlZHV4XCI7XG5pbXBvcnQgc3RvcmUgZnJvbSAnLi4vLi4vbWFpbi9zdG9yZSc7XG5pbXBvcnQge3VwZGF0ZVByb2ZpbGV9IGZyb20gXCIuLi8uLi9tYWluL2FjdGlvbnMvdXNlckFjdGlvbnNcIjtcbmltcG9ydCBSZWdpb25Db3VudHJ5U2VsZWN0b3IgZnJvbSBcIi4uL2NvbXBvbmVudHMvUmVnaW9uQ291bnRyeVNlbGVjdG9yXCI7XG5pbXBvcnQgUG9wdXBDb3VudHJ5U2VsZWN0b3IgZnJvbSBcIi4uL2NvbXBvbmVudHMvUG9wdXBDb3VudHJ5U2VsZWN0b3JcIjtcblxuY2xhc3MgVGVzdFBhZ2UgZXh0ZW5kcyBSZWFjdC5Db21wb25lbnQge1xuICAgIGNvbnN0cnVjdG9yKHByb3BzKSB7XG4gICAgICAgIHN1cGVyKHByb3BzKTtcblxuICAgICAgICB0aGlzLnN0YXRlID0ge1xuICAgICAgICB9O1xuXG4gICAgICAgIHN0b3JlLnN1YnNjcmliZSgoYSkgPT4ge1xuICAgICAgICAgICAgLy9jb25zb2xlLmxvZyhzdG9yZS5nZXRTdGF0ZSgpKTtcbiAgICAgICAgfSk7XG4gICAgfVxuXG4gICAgY29tcG9uZW50RGlkTW91bnQgPSAoKSA9PntcbiAgICB9IDtcblxuICAgIHJlbmRlcigpIHtcbiAgICAgICAgY29uc3Qge2hpc3Rvcnl9ID0gdGhpcy5wcm9wcztcbiAgICAgICAgcmV0dXJuIChcbiAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwibWFuYWdlci1jb250ZW50XCI+XG4gICAgICAgICAgICAgICAgPFJlZ2lvbkNvdW50cnlTZWxlY3RvclxuICAgICAgICAgICAgICAgICAgICBvblNlbGVjdD17KHMpPT57IGNvbnNvbGUubG9nKHMpfX1cbiAgICAgICAgICAgICAgICAvPlxuXG4gICAgICAgICAgICAgICAgPFBvcHVwQ291bnRyeVNlbGVjdG9yLz5cbiAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICApO1xuICAgIH1cbn1cblxuY29uc3QgbWFwU3RhdGVUb1Byb3BzID0gKCBzdGF0ZSwgb3duUHJvcHMpID0+IHtcbiAgICByZXR1cm4gb3duUHJvcHM7XG59O1xuXG5jb25zdCBtYXBEaXNwYXRjaFRvUHJvcHMgPSBkaXNwYXRjaCA9PiB7XG4gICAgcmV0dXJuIHtcbiAgICAgICAgY29udGVudExpc3RpbmdJbml0IDogKGNvbnRlbnQpID0+IGRpc3BhdGNoKHtcbiAgICAgICAgICAgIHR5cGUgOiAnQ09OVEVOVF9JTklUJyxcbiAgICAgICAgICAgIGNvbnRlbnQ6IGNvbnRlbnRcbiAgICAgICAgfSksXG4gICAgICAgIHVwZGF0ZVByb2ZpbGUgOiBwcm9maWxlID0+ZGlzcGF0Y2godXBkYXRlUHJvZmlsZShwcm9maWxlKSksXG4gICAgfVxufTtcblxuZXhwb3J0IGRlZmF1bHQgY29ubmVjdChcbiAgICBtYXBTdGF0ZVRvUHJvcHMsXG4gICAgbWFwRGlzcGF0Y2hUb1Byb3BzXG4pKFRlc3RQYWdlKVxuXG5cblxuXG5cblxuXG5cbi8vIFdFQlBBQ0sgRk9PVEVSIC8vXG4vLyAuL3NyYy9BcHBCdW5kbGUvUmVzb3VyY2VzL3B1YmxpYy9qYXZhc2NyaXB0L21haW4vY29udGFpbmVycy9UZXN0UGFnZS5qcyIsIi8qKlxuICogQ3JlYXRlZCBieSBKdWFuQ3J1eiBvbiA0LzEvMjAxOC5cbiAqL1xuXG5pbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xuaW1wb3J0IFJlYWN0RE9NIGZyb20gJ3JlYWN0LWRvbSc7XG5pbXBvcnQgeyBQcm92aWRlciB9IGZyb20gJ3JlYWN0LXJlZHV4JztcbmltcG9ydCBzdG9yZSBmcm9tICcuL3N0b3JlJztcbmltcG9ydCBBdXRoUm91dGVyIGZyb20gJy4vcm91dGVyJztcbmltcG9ydCBJMThuIGZyb20gXCJyZWR1eC1pMThuXCJcbmltcG9ydCB7dHJhbnNsYXRpb25zfSBmcm9tIFwiLi4vdHJhbnNsYXRpb25zL3RyYW5zbGF0aW9uc1wiXG5pbXBvcnQgJ3JlYWN0LXRhYmxlL3JlYWN0LXRhYmxlLmNzcyc7XG5pbXBvcnQgJ3JlYWN0LXRhZ3NpbnB1dC9yZWFjdC10YWdzaW5wdXQuY3NzJyAvLyBJZiB1c2luZyBXZWJQYWNrIGFuZCBzdHlsZS1sb2FkZXIuXG5pbXBvcnQgJ3JlYWN0LWRhdGVwaWNrZXIvZGlzdC9yZWFjdC1kYXRlcGlja2VyLmNzcyc7XG5pbXBvcnQgXCJyZWFjdC10b2dnbGUvc3R5bGUuY3NzXCI7XG4vLyBpbXBvcnQgJ3JlYWN0LXNlbGVjdC9kaXN0L3JlYWN0LXNlbGVjdC5jc3MnO1xucmVxdWlyZSAoXCIuLi9jYS9jYS5kYXRhXCIpO1xucmVxdWlyZSAoXCIuLi9jYS9jYS5hcGkuY29udGVudFwiKTtcbnJlcXVpcmUgKFwiLi4vY2EvY2EuYXBpXCIpO1xucmVxdWlyZSAoXCIuLi9jYS9jYS51dGlsc1wiKTtcbnJlcXVpcmUgKFwiLi4vY2EvY2EubW9kZWxzXCIpO1xuXG5cbmNvbnN0IGhvbWVXcmFwcGVyID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2hvbWUtd3JhcHBlcicpO1xuXG5SZWFjdERPTS5yZW5kZXIoXG4gICAgPFByb3ZpZGVyIHN0b3JlPXtzdG9yZX0+XG4gICAgICAgIDxJMThuIHRyYW5zbGF0aW9ucz17dHJhbnNsYXRpb25zfT5cbiAgICAgICAgICAgIDxBdXRoUm91dGVyIHsuLi5ob21lV3JhcHBlci5kYXRhc2V0IH0vPlxuICAgICAgICA8L0kxOG4+XG4gICAgPC9Qcm92aWRlcj4sXG4gICAgaG9tZVdyYXBwZXJcbik7XG5cblxuXG4vLyBXRUJQQUNLIEZPT1RFUiAvL1xuLy8gLi9zcmMvQXBwQnVuZGxlL1Jlc291cmNlcy9wdWJsaWMvamF2YXNjcmlwdC9tYWluL21haW4uanMiLCJleHBvcnQgY29uc3QgdXNlclR5cGVzPSB7XG4gICAgTE9HT1VUOidMT0dPVVQnLFxuICAgIExPR0lOOidMT0dJTicsXG4gICAgUFJPRklMRTonUFJPRklMRScsXG4gICAgTE9BRF9VU0VSX0RBVEE6J0xPQURfVVNFUl9EQVRBJyxcbn07XG5cbmNvbnN0IGRlZmF1bHRVc2VyID0ge1xuICAgIHByb2ZpbGUgOiBcIkJVWUVSXCJcblxufTtcblxuZXhwb3J0IGNvbnN0IHVzZXIgPSAoc3RhdGUgPSBkZWZhdWx0VXNlciwgYWN0aW9uKSA9PiB7XG5cbiAgICBzd2l0Y2ggKGFjdGlvbi50eXBlKSB7XG4gICAgICAgIGNhc2UgdXNlclR5cGVzLkxPR09VVDpcbiAgICAgICAgICAgIHJldHVybiBPYmplY3QuYXNzaWduKHt9LCBzdGF0ZSwgZGVmYXVsdFVzZXIpO1xuICAgICAgICBjYXNlIHVzZXJUeXBlcy5MT0dJTjpcbiAgICAgICAgICAgIHJldHVybiBPYmplY3QuYXNzaWduKHt9LCBzdGF0ZSwge1xuICAgICAgICAgICAgICAgIGVtYWlsOiBhY3Rpb24uZW1haWxcbiAgICAgICAgICAgIH0pO1xuICAgICAgICBjYXNlIHVzZXJUeXBlcy5QUk9GSUxFOlxuICAgICAgICAgICAgcmV0dXJuIE9iamVjdC5hc3NpZ24oe30sIHN0YXRlLCB7XG4gICAgICAgICAgICAgICAgcHJvZmlsZTogYWN0aW9uLnByb2ZpbGVcbiAgICAgICAgICAgIH0pO1xuICAgICAgICBjYXNlIHVzZXJUeXBlcy5MT0FEX1VTRVJfREFUQTpcbiAgICAgICAgICAgIHJldHVybiBPYmplY3QuYXNzaWduKHt9LCBzdGF0ZSwgey4uLmFjdGlvbi51c2VyfSk7XG4gICAgICAgIGRlZmF1bHQ6XG4gICAgICAgICAgICByZXR1cm4gc3RhdGU7XG4gICAgfVxufTtcblxuXG4vLyBXRUJQQUNLIEZPT1RFUiAvL1xuLy8gLi9zcmMvQXBwQnVuZGxlL1Jlc291cmNlcy9wdWJsaWMvamF2YXNjcmlwdC9tYWluL3JlZHVjZXJzL3VzZXIuanMiLCJpbXBvcnQgUmVhY3QgZnJvbSBcInJlYWN0XCI7XG5pbXBvcnQge3JvdXRlc30gZnJvbSBcIi4vcm91dGVzXCI7XG5pbXBvcnQge1Byb3BUeXBlc30gZnJvbSAncHJvcC10eXBlcyc7XG5cbmltcG9ydCB7XG4gICAgQnJvd3NlclJvdXRlciBhcyBSb3V0ZXIsXG4gICAgUm91dGUsXG4gICAgTGluayxcbiAgICBSZWRpcmVjdCxcbiAgICB3aXRoUm91dGVyXG59IGZyb20gXCJyZWFjdC1yb3V0ZXItZG9tXCI7XG5pbXBvcnQge2Nvbm5lY3R9IGZyb20gXCJyZWFjdC1yZWR1eFwiO1xuaW1wb3J0IHt1cGRhdGVQcm9maWxlLCBsb2FkVXNlckRhdGF9IGZyb20gXCIuL2FjdGlvbnMvdXNlckFjdGlvbnNcIjtcbmltcG9ydCB7c2V0TGFuZ3VhZ2V9IGZyb20gXCJyZWR1eC1pMThuXCI7XG5cblxuY29uc3QgZmFrZUF1dGggPSB7XG4gICAgaXNBdXRoZW50aWNhdGVkOiBmYWxzZSxcbiAgICBhdXRoZW50aWNhdGUoY2IpIHtcbiAgICAgICAgdGhpcy5pc0F1dGhlbnRpY2F0ZWQgPSB0cnVlO1xuICAgICAgICBzZXRUaW1lb3V0KGNiLCAxMDApOyAvLyBmYWtlIGFzeW5jXG4gICAgfSxcbiAgICBzaWdub3V0KGNiKSB7XG4gICAgICAgIHRoaXMuaXNBdXRoZW50aWNhdGVkID0gZmFsc2U7XG4gICAgICAgIHNldFRpbWVvdXQoY2IsIDEwMCk7XG4gICAgfVxufTtcblxuY29uc3QgUHJpdmF0ZVJvdXRlID0gKHsgY29tcG9uZW50OiBDb21wb25lbnQsIHVwZGF0ZUJ5UGF0aCwgLi4ucmVzdCB9KSA9PiAoXG4gICAgPFJvdXRlXG4gICAgICAgIHsuLi5yZXN0fVxuICAgICAgICByZW5kZXI9e3Byb3BzID0+XG4gICAgICAgICAgICBmYWtlQXV0aC5pc0F1dGhlbnRpY2F0ZWQgPyBwcm9wcy5tYXRjaC5wYXRoID09PSBcIi9cIiA/IChcbiAgICAgICAgICAgICAgICA8UmVkaXJlY3RcbiAgICAgICAgICAgICAgICAgICAgdG89e3tcbiAgICAgICAgICAgICAgICAgICAgICAgIHBhdGhuYW1lOiBcIi9tYXJrZXRwbGFjZVwiLFxuICAgICAgICAgICAgICAgICAgICAgICAgc3RhdGU6IHsgZnJvbTogcHJvcHMubG9jYXRpb24gfVxuICAgICAgICAgICAgICAgICAgICB9fVxuICAgICAgICAgICAgICAgIC8+XG4gICAgICAgICAgICApIDogKFxuICAgICAgICAgICAgICAgIENvbXBvbmVudCAmJiA8Q29tcG9uZW50IHsuLi5wcm9wc30gey4uLnJlc3R9IGtleT17KHVwZGF0ZUJ5UGF0aCkgPyBwcm9wcy5sb2NhdGlvbi5wYXRobmFtZSA6IHByb3BzLmxvY2F0aW9uLnNlYXJjaH0gLz5cbiAgICAgICAgICAgICkgOiAoXG4gICAgICAgICAgICAgICAgPFJlZGlyZWN0XG4gICAgICAgICAgICAgICAgICAgIHRvPXt7XG4gICAgICAgICAgICAgICAgICAgICAgICBwYXRobmFtZTogXCIvbGFuZGluZ1wiLFxuICAgICAgICAgICAgICAgICAgICAgICAgc3RhdGU6IHsgZnJvbTogcHJvcHMubG9jYXRpb24gfVxuICAgICAgICAgICAgICAgICAgICB9fVxuICAgICAgICAgICAgICAgIC8+XG4gICAgICAgICAgICApXG4gICAgICAgIH1cbiAgICAvPlxuKTtcblxuY29uc3QgUHVibGljUm91dGUgPSAoeyBjb21wb25lbnQ6IENvbXBvbmVudCwgLi4ucmVzdCB9KSA9PiAoXG4gICAgPFJvdXRlXG4gICAgICAgIHsuLi5yZXN0fVxuICAgICAgICByZW5kZXI9e3Byb3BzID0+IHtcbiAgICAgICAgICAgIGlmICghQ29tcG9uZW50KSByZXR1cm4gbnVsbFxuICAgICAgICAgICAgcmV0dXJuIDxDb21wb25lbnQgey4uLnByb3BzfSB7Li4ucmVzdH0vPlxuICAgICAgICB9fVxuICAgIC8+XG4pO1xuXG5cbmNsYXNzIExvZ2luIGV4dGVuZHMgUmVhY3QuQ29tcG9uZW50IHtcbiAgICBzdGF0ZSA9IHtcbiAgICAgICAgcmVkaXJlY3RUb1JlZmVycmVyOiBmYWxzZVxuICAgIH07XG5cbiAgICBsb2dpbiA9ICgpID0+IHtcbiAgICAgICAgZmFrZUF1dGguYXV0aGVudGljYXRlKCgpID0+IHtcbiAgICAgICAgICAgIHRoaXMuc2V0U3RhdGUoeyByZWRpcmVjdFRvUmVmZXJyZXI6IHRydWUgfSk7XG4gICAgICAgIH0pO1xuICAgIH07XG5cbiAgICByZW5kZXIoKSB7XG4gICAgICAgIGNvbnN0IHsgZnJvbSB9ID0gdGhpcy5wcm9wcy5sb2NhdGlvbi5zdGF0ZSB8fCB7IGZyb206IHsgcGF0aG5hbWU6IFwiL1wiIH0gfTtcbiAgICAgICAgY29uc3QgeyByZWRpcmVjdFRvUmVmZXJyZXIgfSA9IHRoaXMuc3RhdGU7XG5cbiAgICAgICAgaWYgKHJlZGlyZWN0VG9SZWZlcnJlcikge1xuICAgICAgICAgICAgcmV0dXJuIDxSZWRpcmVjdCB0bz17ZnJvbX0gLz47XG4gICAgICAgIH1cblxuICAgICAgICByZXR1cm4gKFxuICAgICAgICAgICAgPGRpdj5cbiAgICAgICAgICAgICAgICA8cD5Zb3UgbXVzdCBsb2cgaW4gdG8gdmlldyB0aGUgcGFnZSBhdCB7ZnJvbS5wYXRobmFtZX08L3A+XG4gICAgICAgICAgICAgICAgey8qPGJ1dHRvbiBvbkNsaWNrPXt0aGlzLmxvZ2lufT5Mb2cgaW48L2J1dHRvbj4qL31cbiAgICAgICAgICAgICAgICA8YSBocmVmPXtcIi9sb2dpblwifT5Mb2cgaW48L2E+XG4gICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgKTtcbiAgICB9XG59XG5cbmNsYXNzIExvZ291dCBleHRlbmRzIFJlYWN0LkNvbXBvbmVudCB7XG5cbiAgICBsb2dvdXQgPSAoKSA9PiB7XG4gICAgICAgIGZha2VBdXRoLnNpZ25vdXQoKCkgPT4gaGlzdG9yeS5wdXNoKFwiL1wiKSk7XG4gICAgfTtcblxuICAgIHJlbmRlcigpIHtcbiAgICAgICAgcmV0dXJuIChcbiAgICAgICAgICAgIDxkaXY+XG4gICAgICAgICAgICAgICAgPHA+QXJlIHlvdSBzdXJlIHlvdSB3YW50IHRvIHNpZ24gb3V0PzwvcD5cbiAgICAgICAgICAgICAgICA8YnV0dG9uIG9uQ2xpY2s9e3RoaXMubG9nb3V0fT5ZZXMsIHNpZ24gb3V0PC9idXR0b24+XG4gICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgKTtcbiAgICB9XG59XG5cbmNsYXNzIEF1dGhSb3V0ZXIgZXh0ZW5kcyBSZWFjdC5Db21wb25lbnQge1xuXG4gICAgY29uc3RydWN0b3IocHJvcHMpIHtcbiAgICAgICAgc3VwZXIocHJvcHMpO1xuXG4gICAgICAgIGlmIChwcm9wcy5sb2dnZWRVc2VyKSBmYWtlQXV0aC5hdXRoZW50aWNhdGUoKCk9Pnt9KTtcblxuICAgICAgICB0aGlzLnN0YXRlID0ge1xuICAgICAgICB9O1xuICAgIH1cblxuICAgIGNvbXBvbmVudFdpbGxNb3VudCgpIHtcbiAgICAgICAgdGhpcy5wcm9wcy5sb2FkVXNlckRhdGEoKTtcbiAgICAgICAgdGhpcy5wcm9wcy5zZXRMYW5ndWFnZShcImVuXCIpO1xuICAgIH1cblxuICAgIHJlbmRlcigpIHtcblxuICAgICAgICBjb25zdCB7dXNlcn0gPSB0aGlzLnByb3BzO1xuXG4gICAgICAgIHJldHVybiAoXG4gICAgICAgICAgICA8Um91dGVyPlxuICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwibWFuYWdlci1jb250YWluZXJcIj5cblxuICAgICAgICAgICAgICAgICAgICA8Um91dGUgcGF0aD1cIi9sYW5kaW5nXCIgY29tcG9uZW50PXtMb2dpbn0gLz5cbiAgICAgICAgICAgICAgICAgICAgPFJvdXRlIHBhdGg9XCIvbG9nb3V0XCIgY29tcG9uZW50PXtMb2dvdXR9IC8+XG5cbiAgICAgICAgICAgICAgICAgICAge3JvdXRlcy5tYXAoKHJvdXRlLCBpbmRleCkgPT4gKFxuICAgICAgICAgICAgICAgICAgICAgICAgPFB1YmxpY1JvdXRlXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAga2V5PXtpbmRleH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBwYXRoPXtyb3V0ZS5wYXRofVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGV4YWN0PXtyb3V0ZS5leGFjdH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb21wb25lbnQ9e3JvdXRlLmhlYWRlcn1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBwcm9maWxlPXt1c2VyLnByb2ZpbGV9XG4gICAgICAgICAgICAgICAgICAgICAgICAvPlxuICAgICAgICAgICAgICAgICAgICApKX1cblxuICAgICAgICAgICAgICAgICAgICB7cm91dGVzLm1hcCgocm91dGUsIGluZGV4KSA9PiAoXG4gICAgICAgICAgICAgICAgICAgICAgICA8UHJpdmF0ZVJvdXRlXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAga2V5PXtpbmRleH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBwYXRoPXtyb3V0ZS5wYXRofVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGV4YWN0PXtyb3V0ZS5leGFjdH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB1cGRhdGVCeVBhdGg9e3JvdXRlLnVwZGF0ZUJ5UGF0aH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb21wb25lbnQ9e3JvdXRlLm1haW59XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgey4uLnRoaXMucHJvcHN9XG4gICAgICAgICAgICAgICAgICAgICAgICAvPlxuICAgICAgICAgICAgICAgICAgICApKX1cblxuXG4gICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICA8L1JvdXRlcj5cbiAgICAgICAgKTtcbiAgICB9XG59XG5cbkF1dGhSb3V0ZXIuY29udGV4dFR5cGVzID0ge1xuICAgIHQ6IFByb3BUeXBlcy5mdW5jLmlzUmVxdWlyZWRcbn07XG5cbmNvbnN0IG1hcFN0YXRlVG9Qcm9wcyA9IHN0YXRlID0+IHtcbiAgICByZXR1cm4gc3RhdGVcbn07XG5cbmNvbnN0IG1hcERpc3BhdGNoVG9Qcm9wcyA9IGRpc3BhdGNoID0+IHtcbiAgICByZXR1cm4ge1xuICAgICAgICBsb2dpbjogKGVtYWlsKSA9PiBkaXNwYXRjaCh7XG4gICAgICAgICAgICB0eXBlIDogJ0xPR0lOJyxcbiAgICAgICAgICAgIGVtYWlsOiBlbWFpbFxuICAgICAgICB9KSxcbiAgICAgICAgdXBkYXRlUHJvZmlsZSA6IHByb2ZpbGUgPT5kaXNwYXRjaCh1cGRhdGVQcm9maWxlKHByb2ZpbGUpKSxcbiAgICAgICAgbG9hZFVzZXJEYXRhIDogKCkgPT4gZGlzcGF0Y2gobG9hZFVzZXJEYXRhKCkpLFxuICAgICAgICBzZXRMYW5ndWFnZTogbGFuZyA9PiBkaXNwYXRjaChzZXRMYW5ndWFnZShsYW5nKSlcbiAgICB9XG59O1xuXG5leHBvcnQgZGVmYXVsdCBjb25uZWN0KFxuICAgIG1hcFN0YXRlVG9Qcm9wcyxcbiAgICBtYXBEaXNwYXRjaFRvUHJvcHNcbikoQXV0aFJvdXRlcilcblxuXG4vLyBXRUJQQUNLIEZPT1RFUiAvL1xuLy8gLi9zcmMvQXBwQnVuZGxlL1Jlc291cmNlcy9wdWJsaWMvamF2YXNjcmlwdC9tYWluL3JvdXRlci5qcyIsImltcG9ydCBXYXRjaGxpc3QgZnJvbSBcIi4uL21hbmFnZS9jb250YWluZXJzL1dhdGNobGlzdFwiO1xuaW1wb3J0IENsb3NlZERlYWxzIGZyb20gXCIuLi9tYW5hZ2UvY29udGFpbmVycy9DbG9zZWREZWFsc1wiO1xuaW1wb3J0IFBlbmRpbmdEZWFscyBmcm9tIFwiLi4vbWFuYWdlL2NvbnRhaW5lcnMvUGVuZGluZ0RlYWxzXCI7XG5pbXBvcnQgQ29tbWVyY2lhbEFjdGl2aXR5IGZyb20gXCIuLi9tYW5hZ2UvY29udGFpbmVycy9Db21tZXJjaWFsQWN0aXZpdHlcIjtcbmltcG9ydCBNZXNzYWdlcyBmcm9tIFwiLi4vbWFuYWdlL2NvbnRhaW5lcnMvTWVzc2FnZXNcIjtcbmltcG9ydCBTZXR0aW5ncyBmcm9tIFwiLi4vbWFuYWdlL2NvbnRhaW5lcnMvU2V0dGluZ3NcIjtcbmltcG9ydCBNYW5hZ2VMaXN0aW5ncyBmcm9tIFwiLi4vbWFuYWdlL2NvbnRhaW5lcnMvTWFuYWdlTGlzdGluZ3NcIjtcbmltcG9ydCBIZWFkZXJCYXIgZnJvbSBcIi4vY29tcG9uZW50cy9IZWFkZXJCYXJcIjtcbmltcG9ydCBNYXJrZXRwbGFjZSBmcm9tIFwiLi4vYnV5L2NvbnRhaW5lcnMvTWFya2V0cGxhY2VcIjtcbmltcG9ydCBTZWxsRm9ybSBmcm9tIFwiLi4vc2VsbC9jb21wb25lbnRzL1NlbGxGb3JtXCI7XG5pbXBvcnQgVGVzdFBhZ2UgZnJvbSBcIi4vY29udGFpbmVycy9UZXN0UGFnZVwiO1xuXG5leHBvcnQgY29uc3Qgcm91dGVzID0gW1xuICAgIHtcbiAgICAgICAgcGF0aDogXCIvXCIsXG4gICAgICAgIGV4YWN0OiB0cnVlLFxuICAgICAgICBtYWluOiBNYXJrZXRwbGFjZVxuICAgIH0sXG4gICAge1xuICAgICAgICBwYXRoOiBcIi9tYXJrZXRwbGFjZVwiLFxuICAgICAgICBleGFjdDogdHJ1ZSxcbiAgICAgICAgaGVhZGVyOiBIZWFkZXJCYXIsXG4gICAgICAgIG1haW46IE1hcmtldHBsYWNlXG4gICAgfSxcbiAgICB7XG4gICAgICAgIHBhdGg6IFwiL3Rlc3RcIixcbiAgICAgICAgZXhhY3Q6IHRydWUsXG4gICAgICAgIGhlYWRlcjogSGVhZGVyQmFyLFxuICAgICAgICBtYWluOiBUZXN0UGFnZVxuICAgIH0sXG4gICAge1xuICAgICAgICBwYXRoOiBcIi9tYXJrZXRwbGFjZS9maWx0ZXIvOmZpbHRlck5hbWUvOmZpbHRlclZhbHVlP1wiLFxuICAgICAgICBoZWFkZXI6IEhlYWRlckJhcixcbiAgICAgICAgbWFpbjogTWFya2V0cGxhY2VcbiAgICB9LFxuICAgIHtcbiAgICAgICAgcGF0aDogXCIvY29udGVudGxpc3RpbmcvOmN1c3RvbUlkPy86c3RlcD9cIixcbiAgICAgICAgaGVhZGVyOiBIZWFkZXJCYXIsXG4gICAgICAgIG1haW46IFNlbGxGb3JtLFxuICAgICAgICB1cGRhdGVCeVBhdGggOiB0cnVlXG4gICAgfSxcbiAgICB7XG4gICAgICAgIHBhdGg6IFwiL2NvbW1lcmNpYWxhY3Rpdml0eVwiLFxuICAgICAgICBoZWFkZXI6IEhlYWRlckJhcixcbiAgICAgICAgZXhhY3Q6IHRydWUsXG4gICAgICAgIG1haW46IENvbW1lcmNpYWxBY3Rpdml0eVxuICAgIH0sXG4gICAge1xuICAgICAgICBwYXRoOiBcIi9jb21tZXJjaWFsYWN0aXZpdHkvZmlsdGVyLzpmaWx0ZXJOYW1lLzpmaWx0ZXJWYWx1ZT9cIixcbiAgICAgICAgaGVhZGVyOiBIZWFkZXJCYXIsXG4gICAgICAgIG1haW46IENvbW1lcmNpYWxBY3Rpdml0eSxcbiAgICAgICAgdXBkYXRlQnlQYXRoIDogdHJ1ZVxuICAgIH0sXG4gICAge1xuICAgICAgICBwYXRoOiBcIi9saXN0aW5nLzpjdXN0b21JZC86dGFiPy86YnVuZGxlP1wiLFxuICAgICAgICBoZWFkZXI6IEhlYWRlckJhcixcbiAgICAgICAgbWFpbjogTWFya2V0cGxhY2VcbiAgICB9LFxuICAgIHtcbiAgICAgICAgcGF0aDogXCIvd2F0Y2hsaXN0XCIsXG4gICAgICAgIGhlYWRlcjogSGVhZGVyQmFyLFxuICAgICAgICBtYWluOiBXYXRjaGxpc3RcbiAgICB9LFxuICAgIHtcbiAgICAgICAgcGF0aDogXCIvY2xvc2VkZGVhbHNcIixcbiAgICAgICAgaGVhZGVyOiBIZWFkZXJCYXIsXG4gICAgICAgIG1haW46IENsb3NlZERlYWxzXG4gICAgfSxcbiAgICB7XG4gICAgICAgIHBhdGg6IFwiL3NldHRpbmdzLzpmaWx0ZXI/XCIsXG4gICAgICAgIGhlYWRlcjogSGVhZGVyQmFyLFxuICAgICAgICBtYWluOiBTZXR0aW5ncyxcbiAgICAgICAgdXBkYXRlQnlQYXRoIDogdHJ1ZVxuICAgIH0sXG4gICAge1xuICAgICAgICBwYXRoOiBcIi9tZXNzYWdlcy86Y3VzdG9tSWQ/XCIsXG4gICAgICAgIGhlYWRlcjogSGVhZGVyQmFyLFxuICAgICAgICBtYWluOiBNZXNzYWdlcyxcbiAgICAgICAgdXBkYXRlQnlQYXRoIDogdHJ1ZVxuICAgIH0sXG4gICAge1xuICAgICAgICBwYXRoOiBcIi9tYW5hZ2VsaXN0aW5nc1wiLFxuICAgICAgICBoZWFkZXI6IEhlYWRlckJhcixcbiAgICAgICAgbWFpbjogTWFuYWdlTGlzdGluZ3NcbiAgICB9LFxuICAgIHtcbiAgICAgICAgcGF0aDogXCIvYmlkcy86dGFiP1wiLFxuICAgICAgICBoZWFkZXI6IEhlYWRlckJhcixcbiAgICAgICAgbWFpbjogUGVuZGluZ0RlYWxzLFxuICAgICAgICB1cGRhdGVCeVBhdGggOiB0cnVlXG4gICAgfVxuXTtcblxuXG4vLyBXRUJQQUNLIEZPT1RFUiAvL1xuLy8gLi9zcmMvQXBwQnVuZGxlL1Jlc291cmNlcy9wdWJsaWMvamF2YXNjcmlwdC9tYWluL3JvdXRlcy5qcyIsIi8qKlxuICogQ3JlYXRlZCBieSBKdWFuQ3J1eiBvbiA0LzEvMjAxOC5cbiAqL1xuXG5pbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xuaW1wb3J0IHsgY3JlYXRlU3RvcmUgfSBmcm9tICdyZWR1eCc7XG5pbXBvcnQge2NvbWJpbmVSZWR1Y2Vyc30gZnJvbSAncmVkdXgnXG5pbXBvcnQge2kxOG5TdGF0ZX0gZnJvbSBcInJlZHV4LWkxOG5cIjtcblxuaW1wb3J0IHtjb250ZW50fSBmcm9tIFwiLi4vc2VsbC9yZWR1Y2Vycy9jb250ZW50XCI7XG5pbXBvcnQge3NlbGVjdG9yfSBmcm9tIFwiLi4vc2VsbC9yZWR1Y2Vycy9zZWxlY3RvclwiO1xuaW1wb3J0IHtmaWx0ZXJ9IGZyb20gXCIuLi9idXkvcmVkdWNlcnMvZmlsdGVyXCI7XG5pbXBvcnQge21hcmtldHBsYWNlfSBmcm9tIFwiLi4vYnV5L3JlZHVjZXJzL21hcmtldHBsYWNlXCI7XG5pbXBvcnQge21hbmFnZX0gZnJvbSBcIi4uL21hbmFnZS9yZWR1Y2Vycy9tYW5hZ2VcIjtcbmltcG9ydCB7dXNlcn0gZnJvbSBcIi4vcmVkdWNlcnMvdXNlclwiO1xuXG5cbmNvbnN0IHJlZHVjZXJzID0gY29tYmluZVJlZHVjZXJzKHtcbiAgICBjb250ZW50LFxuICAgIHNlbGVjdG9yLFxuICAgIG1hcmtldHBsYWNlLFxuICAgIGZpbHRlcixcbiAgICBtYW5hZ2UsXG4gICAgdXNlcixcbiAgICBpMThuU3RhdGVcbn0pO1xuXG5leHBvcnQgZGVmYXVsdCBjcmVhdGVTdG9yZShyZWR1Y2Vycyk7XG5cblxuLy8gV0VCUEFDSyBGT09URVIgLy9cbi8vIC4vc3JjL0FwcEJ1bmRsZS9SZXNvdXJjZXMvcHVibGljL2phdmFzY3JpcHQvbWFpbi9zdG9yZS5qcyIsImV4cG9ydCBjb25zdCBjdXN0b21TdHlsZXMgPSB7XG4gICAgY29udGVudCA6IHtcbiAgICAgICAgdG9wICAgICAgICAgICAgICAgICAgIDogJzUwJScsXG4gICAgICAgIGxlZnQgICAgICAgICAgICAgICAgICA6ICc1MCUnLFxuICAgICAgICByaWdodCAgICAgICAgICAgICAgICAgOiAnYXV0bycsXG4gICAgICAgIGJvdHRvbSAgICAgICAgICAgICAgICA6ICdhdXRvJyxcbiAgICAgICAgbWFyZ2luUmlnaHQgICAgICAgICAgIDogJy01MCUnLFxuICAgICAgICB0cmFuc2Zvcm0gICAgICAgICAgICAgOiAndHJhbnNsYXRlKC01MCUsIC01MCUpJyxcbiAgICAgICAgYmFja2dyb3VuZENvbG9yICAgICAgIDogJyNGNEY2RjknLFxuICAgICAgICBib3JkZXIgICAgICAgICAgICAgICAgOiAnbm9uZScsXG4gICAgICAgIGJvcmRlclJhZGl1cyAgICAgICAgICA6IDAsXG4gICAgICAgIGJvcmRlckJvdHRvbSAgICAgICAgICA6ICc0cHggc29saWQgIzJBQUFFQycsXG4gICAgfSxcbiAgICBvdmVybGF5IDoge1xuICAgICAgICB6SW5kZXggICAgICAgICAgICAgICAgOiAxMDBcbiAgICB9XG59O1xuXG5leHBvcnQgY29uc3QgU2VsZWN0b3JNb2RhbFN0eWxlID0ge1xuICAgIGNvbnRlbnQgOiB7XG4gICAgICAgIHRvcCAgICAgICAgICAgICAgICAgICA6ICc1MCUnLFxuICAgICAgICBsZWZ0ICAgICAgICAgICAgICAgICAgOiAnNTAlJyxcbiAgICAgICAgcmlnaHQgICAgICAgICAgICAgICAgIDogJ2F1dG8nLFxuICAgICAgICBib3R0b20gICAgICAgICAgICAgICAgOiAnYXV0bycsXG4gICAgICAgIG1hcmdpblJpZ2h0ICAgICAgICAgICA6ICctNTAlJyxcbiAgICAgICAgdHJhbnNmb3JtICAgICAgICAgICAgIDogJ3RyYW5zbGF0ZSgtNTAlLCAtNTAlKScsXG4gICAgICAgIGJhY2tncm91bmRDb2xvciAgICAgICA6ICcjRjRGNkY5JyxcbiAgICAgICAgYm9yZGVyICAgICAgICAgICAgICAgIDogJ25vbmUnLFxuICAgICAgICBib3JkZXJSYWRpdXMgICAgICAgICAgOiAwLFxuICAgICAgICBib3JkZXJCb3R0b20gICAgICAgICAgOiAnNHB4IHNvbGlkICMyQUFBRUMnLFxuICAgICAgICBwYWRkaW5nICAgICAgICAgICAgICAgOiBcIjIwcHhcIlxuICAgIH0sXG4gICAgb3ZlcmxheSA6IHtcbiAgICAgICAgekluZGV4ICAgICAgICAgICAgICAgIDogMTAwXG4gICAgfVxufTtcblxuZXhwb3J0IGNvbnN0IEdlbmVyaWNNb2RhbFN0eWxlID0ge1xuICAgIGNvbnRlbnQgOiB7XG4gICAgICAgIHRvcCAgICAgICAgICAgICAgICAgICA6ICc1MCUnLFxuICAgICAgICBsZWZ0ICAgICAgICAgICAgICAgICAgOiAnNTAlJyxcbiAgICAgICAgcmlnaHQgICAgICAgICAgICAgICAgIDogJ2F1dG8nLFxuICAgICAgICBib3R0b20gICAgICAgICAgICAgICAgOiAnYXV0bycsXG4gICAgICAgIG1hcmdpblJpZ2h0ICAgICAgICAgICA6ICctNTAlJyxcbiAgICAgICAgdHJhbnNmb3JtICAgICAgICAgICAgIDogJ3RyYW5zbGF0ZSgtNTAlLCAtNTAlKScsXG4gICAgICAgIGJhY2tncm91bmRDb2xvciAgICAgICA6ICcjRkZGRkZGJyxcbiAgICAgICAgYm9yZGVyICAgICAgICAgICAgICAgIDogJ25vbmUnLFxuICAgICAgICBib3JkZXJSYWRpdXMgICAgICAgICAgOiAwLFxuICAgICAgICBwYWRkaW5nICAgICAgICAgICAgICAgOiBcIjIwcHhcIlxuICAgIH0sXG4gICAgb3ZlcmxheSA6IHtcbiAgICAgICAgekluZGV4ICAgICAgICAgICAgICAgIDogMTAwLFxuICAgICAgICBiYWNrZ3JvdW5kQ29sb3IgICAgICAgOiAncmdiYSgwLCAwLCAwLCAwLjYpJ1xuICAgIH1cbn07XG5cblxuLy8gV0VCUEFDSyBGT09URVIgLy9cbi8vIC4vc3JjL0FwcEJ1bmRsZS9SZXNvdXJjZXMvcHVibGljL2phdmFzY3JpcHQvbWFpbi9zdHlsZXMvY3VzdG9tLmpzIiwiaW1wb3J0IFJlYWN0LCB7IENvbXBvbmVudCB9IGZyb20gJ3JlYWN0JztcbmltcG9ydCBNb21lbnQgZnJvbSBcIm1vbWVudC9tb21lbnRcIjtcbmltcG9ydCBDb250ZW50TGlzdGluZ0V2ZW50RGV0YWlscyBmcm9tIFwiLi4vLi4vYnV5L2NvbXBvbmVudHMvQ29udGVudExpc3RpbmdFdmVudERldGFpbHNcIjtcbmltcG9ydCB7Z29UbywgbGltaXRUZXh0fSBmcm9tIFwiLi4vLi4vbWFpbi9hY3Rpb25zL3V0aWxzXCI7XG5pbXBvcnQge1xuICAgIGJsdWVDaGVja0ljb24sIGNsb2NrUm91bmRJY29uLCBleGNsYW1hdGlvblJvdW5kSWNvbiwgZXhwaXJlZEljb24sIHBsYXlJY29uLCBzb2xkSWNvbixcbiAgICB5ZWxsb3dDaGVja0ljb25cbn0gZnJvbSBcIi4uLy4uL21haW4vY29tcG9uZW50cy9JY29uc1wiO1xuaW1wb3J0IHtTdXBlclJpZ2h0Qm9hcmRMYWJlbHN9IGZyb20gXCIuLi8uLi9zZWxsL2NvbXBvbmVudHMvU3VwZXJSaWdodERlZmluaXRpb25zXCI7XG5pbXBvcnQge1Byb3BUeXBlc30gZnJvbSBcInByb3AtdHlwZXNcIjtcblxuY2xhc3MgQm9hcmRMaXN0aW5nIGV4dGVuZHMgUmVhY3QuQ29tcG9uZW50e1xuICAgIGNvbnN0cnVjdG9yKHByb3BzKXtcbiAgICAgICAgc3VwZXIocHJvcHMpO1xuXG4gICAgICAgIHRoaXMuc3RhdGUgPSB7XG4gICAgICAgICAgICBzaG93T3B0aW9uczogZmFsc2UsXG4gICAgICAgICAgICBzaG93UmVtb3ZlQ29uZmlybSA6IGZhbHNlLFxuICAgICAgICAgICAgc2hvd0FyY2hpdmVDb25maXJtIDogZmFsc2UsXG4gICAgICAgICAgICBzaG93RGVhY3RpdmF0ZUNvbmZpcm0gOiBmYWxzZVxuICAgICAgICB9O1xuICAgICAgICB0aGlzLmNsb2NrSWNvbiA9IGFzc2V0c0Jhc2VEaXIgKyBcImFwcC9pbWFnZXMvY2xvY2sucG5nXCI7XG4gICAgICAgIHRoaXMuZXhjbGFtYXRpb25JY29uID0gYXNzZXRzQmFzZURpciArIFwiYXBwL2ltYWdlcy9leGNsYW1hdGlvbl9yb3VuZC5wbmdcIjtcbiAgICAgICAgdGhpcy5wbGF5SWNvbiA9IGFzc2V0c0Jhc2VEaXIgKyBcImFwcC9pbWFnZXMvcGxheS5wbmdcIjtcbiAgICAgICAgdGhpcy5idWNrZXRJY29uID0gYXNzZXRzQmFzZURpciArIFwiYXBwL2ltYWdlcy9idWNrZXRfYmx1ZS5wbmdcIjtcbiAgICAgICAgdGhpcy5lZGl0SWNvbiA9IGFzc2V0c0Jhc2VEaXIgKyBcImFwcC9pbWFnZXMvZWRpdC5wbmdcIjtcbiAgICAgICAgdGhpcy5kdXBsaWNhdGVJY29uID0gYXNzZXRzQmFzZURpciArIFwiYXBwL2ltYWdlcy9kdXBsaWNhdGUucG5nXCI7XG4gICAgICAgIHRoaXMudmlld0ljb24gPSBhc3NldHNCYXNlRGlyICsgXCJhcHAvaW1hZ2VzL3NlYXJjaC5wbmdcIjtcbiAgICAgICAgdGhpcy5zdWJtaXRJY29uID0gYXNzZXRzQmFzZURpciArIFwiYXBwL2ltYWdlcy9zdWJtaXQucG5nXCI7XG4gICAgICAgIHRoaXMuZG90c0ljb24gPSBhc3NldHNCYXNlRGlyICsgXCJhcHAvaW1hZ2VzL2RvdHMucG5nXCI7XG4gICAgICAgIHRoaXMuZGVhY3RpdmF0ZUljb24gPSBhc3NldHNCYXNlRGlyICsgXCJhcHAvaW1hZ2VzL2Nsb3NlX3JlZC5wbmdcIjtcbiAgICB9XG5cbiAgICBvblNlbGVjdCA9ICgpID0+IHtcbiAgICAgIGNvbnN0IHtvblNlbGVjdCwgY3VzdG9tSWR9ID0gdGhpcy5wcm9wcztcblxuICAgICAgaWYgKCBvblNlbGVjdCApIG9uU2VsZWN0KGN1c3RvbUlkKTtcblxuXG4gICAgfTtcblxuICAgIHRvZ2dsZU9wdGlvbnMgPSAoZSkgPT4ge1xuICAgICAgICB0aGlzLnNldFN0YXRlKHtzaG93T3B0aW9uczogIXRoaXMuc3RhdGUuc2hvd09wdGlvbnN9KTtcbiAgICAgICAgZS5zdG9wUHJvcGFnYXRpb24oKTtcbiAgICB9O1xuXG4gICAgZWRpdCA9ICgpID0+IHtcbiAgICAgICAgY29uc3QgeyBjdXN0b21JZCwgc3RlcCB9ID0gdGhpcy5wcm9wcztcbiAgICAgICAgY29uc3Qgc3RlcFRvU2hvdyA9IHN0ZXAgKyAxO1xuICAgICAgICBnb1RvKGBjb250ZW50bGlzdGluZy8ke2N1c3RvbUlkfS8ke3N0ZXAgPiA0ID8gJ3NpZ24nIDogc3RlcFRvU2hvd31gKTtcbiAgICB9O1xuXG4gICAgc3VibWl0ID0gKCkgPT4ge1xuICAgICAgICBjb25zdCB7IGN1c3RvbUlkIH0gPSB0aGlzLnByb3BzO1xuICAgICAgICBnb1RvKFwiY29udGVudGxpc3RpbmcvXCIgKyBjdXN0b21JZCArIFwiL3NpZ25cIilcbiAgICB9O1xuXG4gICAgdmlldyA9ICgpID0+IHtcbiAgICAgICAgY29uc3QgeyBjdXN0b21JZCB9ID0gdGhpcy5wcm9wcztcbiAgICAgICAgZ29UbyhcImxpc3RpbmcvXCIgKyBjdXN0b21JZCwgdHJ1ZSk7XG4gICAgfTtcblxuICAgIGhpZGVPcHRpb25zID0gKGUpID0+IHtcbiAgICAgICAgY29uc3Qge2RlZmF1bHRBY3Rpb259ID0gdGhpcy5wcm9wcztcbiAgICAgICAgY29uc3Qge3Nob3dPcHRpb25zfSA9IHRoaXMuc3RhdGU7XG4gICAgICAgIHRoaXMuc2V0U3RhdGUoe3Nob3dPcHRpb25zOiBmYWxzZX0pO1xuICAgICAgICBpZiAoIGRlZmF1bHRBY3Rpb24gJiYgIXNob3dPcHRpb25zICl7XG4gICAgICAgICAgICBpZiAoIGRlZmF1bHRBY3Rpb24gPT09IFwiRURJVFwiKXtcbiAgICAgICAgICAgICAgICB0aGlzLmVkaXQoKVxuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICBpZiAoIGRlZmF1bHRBY3Rpb24gPT09IFwiVklFV1wiKXtcbiAgICAgICAgICAgICAgICB0aGlzLnZpZXcoKVxuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICBpZiAoIGRlZmF1bHRBY3Rpb24gPT09IFwiU1VCTUlUXCIpe1xuICAgICAgICAgICAgICAgIHRoaXMuc3VibWl0KClcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuXG4gICAgICAgIGUuc3RvcFByb3BhZ2F0aW9uKCk7XG4gICAgfTtcblxuICAgIHJlbmRlcigpe1xuICAgICAgICBjb25zdCB7XG4gICAgICAgICAgICBQUk9HUkFNX05BTUUsXG4gICAgICAgICAgICBuYW1lLFxuICAgICAgICAgICAgY3VzdG9tSWQsXG4gICAgICAgICAgICBleHBpcmVzQXQsXG4gICAgICAgICAgICBzYWxlc1BhY2thZ2VzLFxuICAgICAgICAgICAgcmlnaHRzUGFja2FnZSxcbiAgICAgICAgICAgIHRvdXJuYW1lbnQsXG4gICAgICAgICAgICBzZWFzb25zLFxuICAgICAgICAgICAgY2xhc3NOYW1lLFxuICAgICAgICAgICAgc2hvd0VkaXQsXG4gICAgICAgICAgICBzaG93UmVtb3ZlLFxuICAgICAgICAgICAgc2hvd0FyY2hpdmUsXG4gICAgICAgICAgICBzaG93U3VibWl0LFxuICAgICAgICAgICAgc2hvd0R1cGxpY2F0ZSxcbiAgICAgICAgICAgIHNob3dEZWFjdGl2YXRlLFxuICAgICAgICAgICAgc2hvd1ZpZXcsXG4gICAgICAgICAgICBvblJlbW92ZSxcbiAgICAgICAgICAgIG9uQXJjaGl2ZSxcbiAgICAgICAgICAgIG9uRHVwbGljYXRlLFxuICAgICAgICAgICAgb25EZWFjdGl2YXRlLFxuICAgICAgICAgICAgbGFzdEFjdGlvbixcbiAgICAgICAgICAgIGxhc3RBY3Rpb25EYXRlLFxuICAgICAgICAgICAgbGFzdEFjdGlvblVzZXIsXG4gICAgICAgICAgICBvd25lcixcbiAgICAgICAgICAgIHN0YXR1cyxcbiAgICAgICAgICAgIGhhc0FjdGl2aXR5LFxuICAgICAgICAgICAgaGFzUGVuZGluZ0JpZHMsXG4gICAgICAgICAgICBvblN1Ym1pdCxcbiAgICAgICAgICAgIHN0eWxlXG4gICAgICAgIH0gPSB0aGlzLnByb3BzO1xuXG4gICAgICAgIGNvbnN0IHtzaG93T3B0aW9ucywgc2hvd1JlbW92ZUNvbmZpcm0sIHNob3dEZWFjdGl2YXRlQ29uZmlybSwgc2hvd0FyY2hpdmVDb25maXJtLCBzaG93U3RhdHVzSW5mb30gPSB0aGlzLnN0YXRlO1xuXG4gICAgICAgIHJldHVybiAoXG4gICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT17Y2xhc3NOYW1lfSBzdHlsZT17c3R5bGV9IG9uQ2xpY2s9e3RoaXMuaGlkZU9wdGlvbnN9PlxuICAgICAgICAgICAgICAgIHtzaG93T3B0aW9ucyAmJiA8ZGl2IGNsYXNzTmFtZT1cIm9wdGlvbnMtdG9vbHRpcFwiPlxuICAgICAgICAgICAgICAgICAgICB7c2hvd1N1Ym1pdCAmJiA8ZGl2IGNsYXNzTmFtZT17XCJvcHRpb25cIn0gb25DbGljaz17dGhpcy5zdWJtaXR9PlxuICAgICAgICAgICAgICAgICAgICAgICAgPGltZyBzcmM9e3RoaXMuc3VibWl0SWNvbn0gLz4ge3RoaXMuY29udGV4dC50KFwiU3VibWl0XCIpfVxuICAgICAgICAgICAgICAgICAgICA8L2Rpdj59XG4gICAgICAgICAgICAgICAgICAgIHtzaG93RWRpdCAmJiA8ZGl2IGNsYXNzTmFtZT17XCJvcHRpb25cIn0gb25DbGljaz17dGhpcy5lZGl0fT5cbiAgICAgICAgICAgICAgICAgICAgICAgIDxpbWcgc3JjPXt0aGlzLmVkaXRJY29ufSAvPiB7dGhpcy5jb250ZXh0LnQoXCJFZGl0XCIpfVxuICAgICAgICAgICAgICAgICAgICA8L2Rpdj59XG4gICAgICAgICAgICAgICAgICAgIHtzaG93RHVwbGljYXRlICYmIDxkaXYgY2xhc3NOYW1lPXtcIm9wdGlvblwifSBvbkNsaWNrPXsoKT0+e1xuICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5zZXRTdGF0ZSh7c2hvd09wdGlvbnM6IGZhbHNlfSk7XG4gICAgICAgICAgICAgICAgICAgICAgICBvbkR1cGxpY2F0ZShjdXN0b21JZCk7XG4gICAgICAgICAgICAgICAgICAgIH19PlxuICAgICAgICAgICAgICAgICAgICAgICAgPGltZyBzcmM9e3RoaXMuZHVwbGljYXRlSWNvbn0gLz5cbiAgICAgICAgICAgICAgICAgICAgICAgIHt0aGlzLmNvbnRleHQudChcIkR1cGxpY2F0ZVwiKX1cbiAgICAgICAgICAgICAgICAgICAgPC9kaXY+fVxuICAgICAgICAgICAgICAgICAgICB7c2hvd1ZpZXcgJiYgPGRpdiBjbGFzc05hbWU9e1wib3B0aW9uXCJ9IG9uQ2xpY2s9e3RoaXMudmlld30+XG4gICAgICAgICAgICAgICAgICAgICAgICA8aW1nIHNyYz17dGhpcy52aWV3SWNvbn0gLz5cbiAgICAgICAgICAgICAgICAgICAgICAgIHt0aGlzLmNvbnRleHQudChcIlZpZXdcIil9XG4gICAgICAgICAgICAgICAgICAgIDwvZGl2Pn1cbiAgICAgICAgICAgICAgICAgICAge3Nob3dSZW1vdmUgJiYgPGRpdiBjbGFzc05hbWU9e1wib3B0aW9uXCJ9IG9uQ2xpY2s9eygpPT57XG4gICAgICAgICAgICAgICAgICAgICAgICB0aGlzLnNldFN0YXRlKHtzaG93UmVtb3ZlQ29uZmlybTogdHJ1ZX0pO1xuICAgICAgICAgICAgICAgICAgICB9fT5cbiAgICAgICAgICAgICAgICAgICAgICAgIDxpbWcgc3JjPXt0aGlzLmJ1Y2tldEljb259IC8+XG4gICAgICAgICAgICAgICAgICAgICAgICB7dGhpcy5jb250ZXh0LnQoXCJNQU5BR0VfTElTVElOR1NfUkVNT1ZFX0JVVFRPTl9DT05GSVJNXCIpfVxuICAgICAgICAgICAgICAgICAgICA8L2Rpdj59XG4gICAgICAgICAgICAgICAgICAgIHtzaG93QXJjaGl2ZSAmJiA8ZGl2IGNsYXNzTmFtZT17XCJvcHRpb25cIn0gb25DbGljaz17KCk9PntcbiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuc2V0U3RhdGUoe3Nob3dBcmNoaXZlQ29uZmlybTogdHJ1ZX0pO1xuICAgICAgICAgICAgICAgICAgICB9fT5cbiAgICAgICAgICAgICAgICAgICAgICAgIDxpbWcgc3JjPXt0aGlzLmJ1Y2tldEljb259IC8+XG4gICAgICAgICAgICAgICAgICAgICAgICB7dGhpcy5jb250ZXh0LnQoXCJNQU5BR0VfTElTVElOR1NfQVJDSElWRV9CVVRUT05fQ09ORklSTVwiKX1cbiAgICAgICAgICAgICAgICAgICAgPC9kaXY+fVxuICAgICAgICAgICAgICAgICAgICB7c2hvd0RlYWN0aXZhdGUgJiYgPGRpdiBjbGFzc05hbWU9e1wib3B0aW9uXCJ9IG9uQ2xpY2s9eygpPT57XG4gICAgICAgICAgICAgICAgICAgICAgICB0aGlzLnNldFN0YXRlKHtzaG93RGVhY3RpdmF0ZUNvbmZpcm06IHRydWV9KTtcbiAgICAgICAgICAgICAgICAgICAgfX0+XG4gICAgICAgICAgICAgICAgICAgICAgICA8aW1nIHNyYz17dGhpcy5kZWFjdGl2YXRlSWNvbn0gc3R5bGU9e3t3aWR0aDogMTZ9fSAvPlxuICAgICAgICAgICAgICAgICAgICAgICAge3RoaXMuY29udGV4dC50KFwiTUFOQUdFX0xJU1RJTkdTX0RFQUNUSVZBVEVfQlVUVE9OX0NPTkZJUk1cIil9XG4gICAgICAgICAgICAgICAgICAgIDwvZGl2Pn1cblxuICAgICAgICAgICAgICAgICAgICB7bGFzdEFjdGlvbiAmJiA8ZGl2IGNsYXNzTmFtZT1cImxhc3QtYWN0aW9uXCI+XG4gICAgICAgICAgICAgICAgICAgICAgICB7dGhpcy5jb250ZXh0LnQoXCJNQU5BR0VfTElTVElOR1NfTEFTVF9BQ1RJT05cIil9e2xhc3RBY3Rpb24uZGVzY3JpcHRpb259IHtsYXN0QWN0aW9uVXNlciAmJiBcImJ5IFwiICsgbGFzdEFjdGlvblVzZXIuZmlyc3ROYW1lICsgXCIgXCIgKyBsYXN0QWN0aW9uVXNlci5sYXN0TmFtZSB9IHtsYXN0QWN0aW9uRGF0ZSAmJiBcIm9uIFwiICsgTW9tZW50KGxhc3RBY3Rpb25EYXRlKS5mb3JtYXQoJ0hIOm1tIEREL01NL1lZWVknKX1cbiAgICAgICAgICAgICAgICAgICAgPC9kaXY+fVxuXG4gICAgICAgICAgICAgICAgICAgIHtvd25lciAmJiA8ZGl2IGNsYXNzTmFtZT1cImxhc3QtYWN0aW9uXCI+XG4gICAgICAgICAgICAgICAgICAgICAgICB7dGhpcy5jb250ZXh0LnQoXCJNQU5BR0VfTElTVElOR1NfTElTVElOR19PV05FUlwiKX17b3duZXIuZmlyc3ROYW1lICsgXCIgXCIgKyBvd25lci5sYXN0TmFtZSB9XG4gICAgICAgICAgICAgICAgICAgIDwvZGl2Pn1cbiAgICAgICAgICAgICAgICA8L2Rpdj59XG5cbiAgICAgICAgICAgICAgICB7LypDT05GSVJNIERFQUNUSVZBVEUqL31cbiAgICAgICAgICAgICAgICB7c2hvd0RlYWN0aXZhdGVDb25maXJtICYmIDxkaXYgY2xhc3NOYW1lPVwiY29uZmlybWF0aW9uLXRvb2x0aXBcIj5cbiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9e1wiY29uZmlybWF0aW9uLXRleHRcIn0+XG4gICAgICAgICAgICAgICAgICAgICAgICB7dGhpcy5jb250ZXh0LnQoXCJNQU5BR0VfTElTVElOR1NfREVBQ1RJVkFURV9DT05GSVJNQVRJT05cIil9XG4gICAgICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICAgICAgICA8YnV0dG9uIGNsYXNzTmFtZT17XCJidXR0b24gYnV0dG9uLWNvbmZpcm1cIn0gb25DbGljaz17KGUpPT57XG4gICAgICAgICAgICAgICAgICAgICAgICB0aGlzLnNldFN0YXRlKHtzaG93RGVhY3RpdmF0ZUNvbmZpcm06IGZhbHNlfSk7XG4gICAgICAgICAgICAgICAgICAgICAgICBvbkRlYWN0aXZhdGUoKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIGUuc3RvcFByb3BhZ2F0aW9uKCk7XG4gICAgICAgICAgICAgICAgICAgIH19PlxuICAgICAgICAgICAgICAgICAgICAgICAge3RoaXMuY29udGV4dC50KFwiTUFOQUdFX0xJU1RJTkdTX0RFQUNUSVZBVEVfQlVUVE9OX0NPTkZJUk1cIil9XG4gICAgICAgICAgICAgICAgICAgIDwvYnV0dG9uPlxuICAgICAgICAgICAgICAgICAgICA8YnV0dG9uIGNsYXNzTmFtZT17XCJidXR0b25cIn0gb25DbGljaz17KGUpPT57XG4gICAgICAgICAgICAgICAgICAgICAgICB0aGlzLnNldFN0YXRlKHtzaG93RGVhY3RpdmF0ZUNvbmZpcm06IGZhbHNlfSk7XG4gICAgICAgICAgICAgICAgICAgICAgICBlLnN0b3BQcm9wYWdhdGlvbigpO1xuICAgICAgICAgICAgICAgICAgICB9fT5cbiAgICAgICAgICAgICAgICAgICAgICAgIHt0aGlzLmNvbnRleHQudChcIk1BTkFHRV9MSVNUSU5HU19ERUFDVElWQVRFX0JVVFRPTl9DQU5DRUxcIil9XG4gICAgICAgICAgICAgICAgICAgIDwvYnV0dG9uPlxuICAgICAgICAgICAgICAgIDwvZGl2Pn1cblxuICAgICAgICAgICAgICAgIHsvKkNPTkZJUk0gUkVNT1ZFKi99XG4gICAgICAgICAgICAgICAge3Nob3dSZW1vdmVDb25maXJtICYmIDxkaXYgY2xhc3NOYW1lPVwiY29uZmlybWF0aW9uLXRvb2x0aXBcIj5cbiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9e1wiY29uZmlybWF0aW9uLXRleHRcIn0+XG4gICAgICAgICAgICAgICAgICAgICAgICB7dGhpcy5jb250ZXh0LnQoXCJNQU5BR0VfTElTVElOR1NfUkVNT1ZFX0NPTkZJUk1BVElPTlwiKX1cbiAgICAgICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgICAgICAgIDxidXR0b24gY2xhc3NOYW1lPXtcImJ1dHRvbiBidXR0b24tY29uZmlybVwifSBvbkNsaWNrPXsoZSk9PntcbiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuc2V0U3RhdGUoe3Nob3dSZW1vdmVDb25maXJtOiBmYWxzZX0pO1xuICAgICAgICAgICAgICAgICAgICAgICAgb25SZW1vdmUoKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIGUuc3RvcFByb3BhZ2F0aW9uKCk7XG4gICAgICAgICAgICAgICAgICAgIH19PlxuICAgICAgICAgICAgICAgICAgICAgICAge3RoaXMuY29udGV4dC50KFwiTUFOQUdFX0xJU1RJTkdTX1JFTU9WRV9CVVRUT05fQ09ORklSTVwiKX1cbiAgICAgICAgICAgICAgICAgICAgPC9idXR0b24+XG4gICAgICAgICAgICAgICAgICAgIDxidXR0b24gY2xhc3NOYW1lPXtcImJ1dHRvblwifSBvbkNsaWNrPXsoZSk9PntcbiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuc2V0U3RhdGUoe3Nob3dSZW1vdmVDb25maXJtOiBmYWxzZX0pO1xuICAgICAgICAgICAgICAgICAgICAgICAgZS5zdG9wUHJvcGFnYXRpb24oKTtcbiAgICAgICAgICAgICAgICAgICAgfX0+XG4gICAgICAgICAgICAgICAgICAgICAgICB7dGhpcy5jb250ZXh0LnQoXCJNQU5BR0VfTElTVElOR1NfUkVNT1ZFX0JVVFRPTl9DQU5DRUxcIil9XG4gICAgICAgICAgICAgICAgICAgIDwvYnV0dG9uPlxuICAgICAgICAgICAgICAgIDwvZGl2Pn1cblxuICAgICAgICAgICAgICAgIHsvKkNPTkZJUk0gQVJDSElWRSovfVxuICAgICAgICAgICAgICAgIHtzaG93QXJjaGl2ZUNvbmZpcm0gJiYgPGRpdiBjbGFzc05hbWU9XCJjb25maXJtYXRpb24tdG9vbHRpcFwiPlxuICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT17XCJjb25maXJtYXRpb24tdGV4dFwifT5cbiAgICAgICAgICAgICAgICAgICAgICAgIHt0aGlzLmNvbnRleHQudChcIk1BTkFHRV9MSVNUSU5HU19BUkNISVZFX0NPTkZJUk1BVElPTlwiKX1cbiAgICAgICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgICAgICAgIDxidXR0b24gY2xhc3NOYW1lPXtcImJ1dHRvbiBidXR0b24tY29uZmlybVwifSBvbkNsaWNrPXsoZSk9PntcbiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuc2V0U3RhdGUoe3Nob3dBcmNoaXZlQ29uZmlybTogZmFsc2V9KTtcbiAgICAgICAgICAgICAgICAgICAgICAgIG9uQXJjaGl2ZSgpO1xuICAgICAgICAgICAgICAgICAgICAgICAgZS5zdG9wUHJvcGFnYXRpb24oKTtcbiAgICAgICAgICAgICAgICAgICAgfX0+XG4gICAgICAgICAgICAgICAgICAgICAgICB7dGhpcy5jb250ZXh0LnQoXCJNQU5BR0VfTElTVElOR1NfQVJDSElWRV9CVVRUT05fQ09ORklSTVwiKX1cbiAgICAgICAgICAgICAgICAgICAgPC9idXR0b24+XG4gICAgICAgICAgICAgICAgICAgIDxidXR0b24gY2xhc3NOYW1lPXtcImJ1dHRvblwifSBvbkNsaWNrPXsoZSk9PntcbiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuc2V0U3RhdGUoe3Nob3dBcmNoaXZlQ29uZmlybTogZmFsc2V9KTtcbiAgICAgICAgICAgICAgICAgICAgICAgIGUuc3RvcFByb3BhZ2F0aW9uKCk7XG4gICAgICAgICAgICAgICAgICAgIH19PlxuICAgICAgICAgICAgICAgICAgICAgICAge3RoaXMuY29udGV4dC50KFwiTUFOQUdFX0xJU1RJTkdTX0FSQ0hJVkVfQlVUVE9OX0NBTkNFTFwiKX1cbiAgICAgICAgICAgICAgICAgICAgPC9idXR0b24+XG4gICAgICAgICAgICAgICAgPC9kaXY+fVxuXG4gICAgICAgICAgICAgICAgey8qU1RBVFVTIElORk8qL31cbiAgICAgICAgICAgICAgICB7c2hvd1N0YXR1c0luZm8gJiYgPGRpdiBjbGFzc05hbWU9XCJzdGF0dXMtdG9vbHRpcFwiPlxuICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT17XCJvcHRpb25cIn0+XG4gICAgICAgICAgICAgICAgICAgICAgICB7c3RhdHVzLm5hbWUgPT09ICdQRU5ESU5HJyAmJiBcIkxpc3RpbmcgdW5kZXIgcmV2aWV3LiBOb3QgdmlzaWJsZSBpbiB0aGUgbWFya2V0cGxhY2UgeWV0LlwifVxuICAgICAgICAgICAgICAgICAgICAgICAge3N0YXR1cy5uYW1lID09PSAnSU5BQ1RJVkUnICYmIFwiTGlzdGluZyBpcyBkZWFjdGl2YXRlZC5cIn1cbiAgICAgICAgICAgICAgICAgICAgICAgIHtzdGF0dXMubmFtZSA9PT0gJ1JFSkVDVEVEJyAmJiBcIkxpc3RpbmcgcmVqZWN0ZWQuIFBsZWFzZSBlZGl0IG9yIGNvbnRhY3Qgc3VwcG9ydC5cIn1cbiAgICAgICAgICAgICAgICAgICAgICAgIHtzdGF0dXMubmFtZSA9PT0gJ0VYUElSRUQnICYmIFwiVGhpcyBsaXN0aW5nIGhhcyBleHBpcmVkLlwifVxuICAgICAgICAgICAgICAgICAgICAgICAge3N0YXR1cy5uYW1lID09PSAnU09MRF9PVVQnICYmIFwiQWxsIHNhbGVzIGJ1bmRsZSBvZiB0aGlzIGxpc3Rpbmcgd2VyZSBzb2xkLlwifVxuICAgICAgICAgICAgICAgICAgICAgICAge2hhc1BlbmRpbmdCaWRzICYmIFwiVGhlcmUgYXJlIG9wZW4gYmlkcyBvbiB0aGlzIGxpc3RpbmcuIFlvdSBjYW4gdmlldyB0aGUgYmlkIHZpYSB0aGUgQ29tbWVyY2lhbCBBY3Rpdml0eSB0YWIuIFVudGlsIHRoZSBiaWQgaXMgcHJvY2Vzc2VkLCB0aGUgZWRpdCwgZGVjbGluZSBhbmQgcmVtb3ZlIGZ1bmN0aW9uYWxpdHkgd2lsbCBiZSB1bmF2YWlsYWJsZVwifVxuICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgICA8L2Rpdj59XG5cbiAgICAgICAgICAgICAgICB7ICgoc3RhdHVzLm5hbWUgIT09ICdEUkFGVCcgJiYgc3RhdHVzLm5hbWUgIT09ICdFRElURUQnICkgfHwgaGFzUGVuZGluZ0JpZHMpICYmXG4gICAgICAgICAgICAgICAgPGRpdlxuICAgICAgICAgICAgICAgICAgICBjbGFzc05hbWU9e1wic3RhdHVzLWljb25cIn1cbiAgICAgICAgICAgICAgICAgICAgb25Nb3VzZU92ZXI9eygpID0+IHt0aGlzLnNldFN0YXRlKHtzaG93U3RhdHVzSW5mbyA6IHRydWV9KX19XG4gICAgICAgICAgICAgICAgICAgIG9uTW91c2VMZWF2ZT17KCkgPT4ge3RoaXMuc2V0U3RhdGUoe3Nob3dTdGF0dXNJbmZvIDogZmFsc2V9KX19PlxuICAgICAgICAgICAgICAgICAgICB7c3RhdHVzLm5hbWUgPT09ICdQRU5ESU5HJyAmJiA8aW1nIHNyYz17Y2xvY2tSb3VuZEljb259IC8+fVxuICAgICAgICAgICAgICAgICAgICB7c3RhdHVzLm5hbWUgPT09ICdJTkFDVElWRScgJiY8aW1nIHNyYz17cGxheUljb259IC8+fVxuICAgICAgICAgICAgICAgICAgICB7c3RhdHVzLm5hbWUgPT09ICdSRUpFQ1RFRCcgJiYgPGltZyBzcmM9e2V4Y2xhbWF0aW9uUm91bmRJY29ufSAvPn1cbiAgICAgICAgICAgICAgICAgICAge3N0YXR1cy5uYW1lID09PSAnRVhQSVJFRCcgJiYgPGltZyBzcmM9e2V4cGlyZWRJY29ufSAvPn1cbiAgICAgICAgICAgICAgICAgICAge3N0YXR1cy5uYW1lID09PSAnU09MRF9PVVQnICYmIDxpbWcgc3JjPXtzb2xkSWNvbn0gLz59XG4gICAgICAgICAgICAgICAgICAgIHtoYXNQZW5kaW5nQmlkcyAmJiAgPGltZyBzcmM9e2V4Y2xhbWF0aW9uUm91bmRJY29ufSAvPn1cbiAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2Pn1cblxuICAgICAgICAgICAgICAgIDxkaXYgIGNsYXNzTmFtZT1cIm1lbnUtaWNvblwiIG9uQ2xpY2s9e3RoaXMudG9nZ2xlT3B0aW9uc30+XG4gICAgICAgICAgICAgICAgICAgIDxpbWcgc3JjPXt0aGlzLmRvdHNJY29ufSAvPlxuICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPXtcIm5hbWVcIn0gdGl0bGU9e25hbWV9PlxuICAgICAgICAgICAgICAgICAgICB7IG5hbWUgfVxuICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPXtcInRvdXJuYW1lbnRcIn0+XG4gICAgICAgICAgICAgICAgICAgIHt0b3VybmFtZW50ICYmIHRvdXJuYW1lbnQubGVuZ3RoID09PSAxICYmIDxkaXYgY2xhc3NOYW1lPVwiaXRlbVwiPnt0b3VybmFtZW50WzBdLm5hbWV9PC9kaXY+fVxuICAgICAgICAgICAgICAgICAgICB7dG91cm5hbWVudCAmJiB0b3VybmFtZW50Lmxlbmd0aCA9PT0gMCAmJiA8ZGl2IGNsYXNzTmFtZT1cIml0ZW1cIj5cbiAgICAgICAgICAgICAgICAgICAgICAgIHt0aGlzLmNvbnRleHQudChcIkxJU1RJTkdfREVUQUlMU19HRU5FUkFMX0NPTlRFTlRcIil9XG4gICAgICAgICAgICAgICAgICAgIDwvZGl2Pn1cbiAgICAgICAgICAgICAgICAgICAge3NlYXNvbnMgJiYgc2Vhc29ucy5sZW5ndGggPiAxICYmIDxkaXYgY2xhc3NOYW1lPVwiaXRlbVwiPlxuICAgICAgICAgICAgICAgICAgICAgICAge3RoaXMuY29udGV4dC50KFwiTUFOQUdFX0xJU1RJTkdTX01VTFRJUExFX1NFQVNPTlNcIil9XG4gICAgICAgICAgICAgICAgICAgIDwvZGl2Pn1cbiAgICAgICAgICAgICAgICAgICAge3NlYXNvbnMgJiYgc2Vhc29ucy5sZW5ndGggPT09IDEgJiYgPGRpdiBjbGFzc05hbWU9XCJpdGVtXCI+XG4gICAgICAgICAgICAgICAgICAgICAgICB7dGhpcy5jb250ZXh0LnQoXCJNQU5BR0VfTElTVElOR1NfU0VBU09OXCIpfXtzZWFzb25zWzBdLnllYXJ9XG4gICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj59XG4gICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9e1wicmlnaHRzXCJ9PlxuICAgICAgICAgICAgICAgICAgICB7cmlnaHRzUGFja2FnZSAmJiByaWdodHNQYWNrYWdlLm1hcCgocnAsaSxsKSA9PiB7XG4gICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gPHNwYW4ga2V5PXtcInJwLVwiK2l9PlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHshcnAuZXhjbHVzaXZlICYmXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPGltZyBzcmM9e2JsdWVDaGVja0ljb259Lz59XG5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB7cnAuZXhjbHVzaXZlICYmXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPGltZyBzcmM9e3llbGxvd0NoZWNrSWNvbn0vPn1cblxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHtTdXBlclJpZ2h0Qm9hcmRMYWJlbHNbcnAuc2hvcnRMYWJlbF19XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgeyBycC5zaG9ydExhYmVsID09PSBcIlBSXCIgJiYgUFJPR1JBTV9OQU1FICYmXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5jb250ZXh0LnQoXCJQcm9ncmFtOiBcIikgKyBQUk9HUkFNX05BTUVcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICA8L3NwYW4+XG4gICAgICAgICAgICAgICAgICAgIH0pfVxuICAgICAgICAgICAgICAgIDwvZGl2PlxuXG4gICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9e1wiZXhwaXJ5XCJ9PlxuICAgICAgICAgICAgICAgICAgICA8ZGl2Pnsgc2FsZXNQYWNrYWdlcy5sZW5ndGggfSBzYWxlcyBidW5kbGV7IHNhbGVzUGFja2FnZXMubGVuZ3RoID4gMSAmJiBcInNcIn08L2Rpdj5cbiAgICAgICAgICAgICAgICAgICAgPGRpdj57dGhpcy5jb250ZXh0LnQoXCJFeHBpcnk6XCIpfSB7ZXhwaXJlc0F0ID8gTW9tZW50KGV4cGlyZXNBdCkuZm9ybWF0KCdERC9NTS9ZWVlZJykgOiAnTm90IHNldCd9PC9kaXY+XG4gICAgICAgICAgICAgICAgPC9kaXY+XG5cbiAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICApXG4gICAgfVxufVxuQm9hcmRMaXN0aW5nLmNvbnRleHRUeXBlcyA9IHtcbiAgICB0OiBQcm9wVHlwZXMuZnVuYy5pc1JlcXVpcmVkXG59O1xuZXhwb3J0IGRlZmF1bHQgQm9hcmRMaXN0aW5nO1xuXG5cblxuLy8gV0VCUEFDSyBGT09URVIgLy9cbi8vIC4vc3JjL0FwcEJ1bmRsZS9SZXNvdXJjZXMvcHVibGljL2phdmFzY3JpcHQvbWFuYWdlL2NvbXBvbmVudHMvQm9hcmRMaXN0aW5nLmpzIiwiaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCB7IGNvbm5lY3QgfSBmcm9tIFwicmVhY3QtcmVkdXhcIjtcbmltcG9ydCBSZWFjdFRhYmxlIGZyb20gXCJyZWFjdC10YWJsZVwiO1xuaW1wb3J0IENvbnRlbnRMaXN0aW5nIGZyb20gJy4uLy4uL21haW4vY29tcG9uZW50cy9Db250ZW50TGlzdGluZyc7XG5pbXBvcnQgU2VuZE1lc3NhZ2UgZnJvbSBcIi4uLy4uL21haW4vY29tcG9uZW50cy9TZW5kTWVzc2FnZVwiO1xuaW1wb3J0IHtnZXRDdXJyZW5jeVN5bWJvbCwgZ29UbywgbGltaXRUZXh0LCB2aWV3TGljZW5zZUJpZH0gZnJvbSBcIi4uLy4uL21haW4vYWN0aW9ucy91dGlsc1wiO1xuaW1wb3J0IE1vbWVudCBmcm9tIFwibW9tZW50L21vbWVudFwiO1xuaW1wb3J0IFJlYWN0VG9vbHRpcCBmcm9tICdyZWFjdC10b29sdGlwJztcbmltcG9ydCB7UHJvcFR5cGVzfSBmcm9tIFwicHJvcC10eXBlc1wiO1xuXG5jb25zdCByaWdodEltYWdlU3R5bGUgPSB7XG4gICAgd2lkdGg6IDE3LFxuICAgIGhlaWdodDogMTdcbn07XG5cbmNsYXNzIENsb3NlZERlYWxzIGV4dGVuZHMgUmVhY3QuQ29tcG9uZW50IHtcbiAgICBjb25zdHJ1Y3Rvcihwcm9wcykge1xuICAgICAgICBzdXBlcihwcm9wcyk7XG4gICAgICAgIHRoaXMuc3RhdGUgPSB7XG4gICAgICAgICAgICBsb2FkaW5nIDogZmFsc2UsXG4gICAgICAgICAgICBiaWRzIDogW10sXG4gICAgICAgIH07XG4gICAgICAgIHRoaXMuY2FuY2VsSWNvbiA9IGFzc2V0c0Jhc2VEaXIgKyBcImFwcC9pbWFnZXMvY2FuY2VsLnBuZ1wiO1xuICAgICAgICB0aGlzLmNoZWNrSWNvbiA9IGFzc2V0c0Jhc2VEaXIgKyBcImFwcC9pbWFnZXMvYmx1ZV9jaGVjay5wbmdcIjtcbiAgICAgICAgdGhpcy5kb2NJY29uID0gYXNzZXRzQmFzZURpciArIFwiYXBwL2ltYWdlcy9kb2MucG5nXCI7XG4gICAgICAgIHRoaXMuYmx1ZUVudmVsb3BlSWNvbiA9IGFzc2V0c0Jhc2VEaXIgKyBcImFwcC9pbWFnZXMvZW52ZWxvcGVfMi5wbmdcIjtcbiAgICB9XG5cbiAgICBjb21wb25lbnREaWRNb3VudCAoKSB7XG4gICAgICAgIGxldCBfdGhpcyA9IHRoaXM7XG4gICAgICAgIHRoaXMuc2V0U3RhdGUoe2xvYWRpbmc6dHJ1ZX0pO1xuICAgICAgICBDb250ZW50QXJlbmEuQ29udGVudEFwaS5nZXRDbG9zZWREZWFscygpLmRvbmUoKGJpZHMpID0+IHtcbiAgICAgICAgICAgIF90aGlzLnNldFN0YXRlKHtiaWRzOiBiaWRzLCBsb2FkaW5nIDogZmFsc2V9KTtcbiAgICAgICAgfSk7XG5cbiAgICB9XG5cbiAgICBzZWxlY3RMaXN0aW5nID0gKGlkKSA9PiB7XG4gICAgICAgIGdvVG8oXCJsaXN0aW5nL1wiICsgaWQpO1xuICAgIH07XG5cbiAgICByZW5kZXIgKCkge1xuICAgICAgICBjb25zdCB7IGxvYWRpbmcsIGJpZHMgfSA9IHRoaXMuc3RhdGU7XG5cbiAgICAgICAgcmV0dXJuIChcbiAgICAgICAgICAgIDxkaXYgc3R5bGU9e3tcbiAgICAgICAgICAgICAgICBkaXNwbGF5OiAnZmxleCcsXG4gICAgICAgICAgICAgICAgZmxleERpcmVjdGlvbjogJ2NvbHVtbicsXG4gICAgICAgICAgICAgICAgZmxleDogMVxuICAgICAgICAgICAgfX0+XG4gICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICBiaWRzLmxlbmd0aCA+IDAgJiYgYmlkcy5tYXAoKGIsaSkgPT4ge1xuICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIDxTZW5kTWVzc2FnZSBrZXk9e2l9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJlZj17XCJtZXNzYWdlUG9wdXBcIiArIGIuaWQgfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBsaXN0aW5nSWQ9e2IuY29udGVudC5pZH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmVjaXBpZW50PXtiLmNvbnRlbnQuY29tcGFueX0vPlxuICAgICAgICAgICAgICAgICAgICB9KVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICBiaWRzLmxlbmd0aCA+IDAgJiZcbiAgICAgICAgICAgICAgICAgICAgPGRpdj5cbiAgICAgICAgICAgICAgICAgICAgICAgIDxSZWFjdFRhYmxlXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgY2xhc3NOYW1lPXtcImNhLXRhYmxlXCJ9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgZGVmYXVsdFBhZ2VTaXplPXszMH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBzaG93UGFnZVNpemVPcHRpb25zPXtmYWxzZX1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBzaG93UGFnaW5hdGlvbj17ZmFsc2V9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgb25QYWdlQ2hhbmdlPXt0aGlzLm9uUGFnZUNoYW5nZX1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBtaW5Sb3dzPXswfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJlc2l6YWJsZT17ZmFsc2V9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgZGF0YT17Ymlkc31cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBzZWxlY3Q9e3RoaXMucHJvcHMuc2VsZWN0fVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbHVtbnM9e1t7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIEhlYWRlcjogJ0RlYWwgSUQnLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBoZWFkZXJDbGFzc05hbWUgOiAndGFibGUtaGVhZGVyJyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY2xhc3NOYW1lIDogJ3RhYmxlLWhlYWRlciB0YWJsZS1oZWFkZXItbGVmdCcsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGFjY2Vzc29yOiAnY3VzdG9tSWQnLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBDZWxsOiBwcm9wcyA9PiA8ZGl2PlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAge1wiI1wiK3Byb3BzLnZhbHVlfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9LCB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIEhlYWRlcjogKCkgPT4gKFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHt0aGlzLmNvbnRleHQudChcIkxpc3RpbmcgbmFtZVwiKX0gPGkgY2xhc3NOYW1lPVwiZmEgZmEtc29ydFwiIC8+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3NwYW4+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICksXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGhlYWRlckNsYXNzTmFtZSA6ICd0YWJsZS1oZWFkZXItYmlnJyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY2xhc3NOYW1lIDogJ3RhYmxlLWhlYWRlci1iaWcgc29ydGluZycsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlkOiAnbmFtZScsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGFjY2Vzc29yOiBkID0+IHtyZXR1cm57XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBuYW1lIDogZC5jb250ZW50Lm5hbWUsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjdXN0b21JZCA6IGQuY29udGVudC5jdXN0b21JZCxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfX0sXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIENlbGw6IHByb3BzID0+IDxkaXY+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YSBocmVmPXtcImxpc3RpbmcvXCIgKyBwcm9wcy52YWx1ZS5jdXN0b21JZH0+e2xpbWl0VGV4dChwcm9wcy52YWx1ZS5uYW1lKX08L2E+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0sIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYWNjZXNzb3I6ICdjb250ZW50LmNvbXBhbnkubGVnYWxOYW1lJywgLy8gUmVxdWlyZWQgYmVjYXVzZSBvdXIgYWNjZXNzb3IgaXMgbm90IGEgc3RyaW5nXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIEhlYWRlcjogKCkgPT4gKFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAge3RoaXMuY29udGV4dC50KFwiU2VsbGVyXCIpfSA8aSBjbGFzc05hbWU9XCJmYSBmYS1zb3J0XCIgLz5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvc3Bhbj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgKSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaGVhZGVyQ2xhc3NOYW1lIDogJ3RhYmxlLWhlYWRlci1iaWcnLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjbGFzc05hbWUgOiAndGFibGUtaGVhZGVyLWJpZycsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfSwge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBIZWFkZXI6ICgpID0+IChcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGRhdGEtdGlwPVwiTGl2ZSB0cmFuc21pc3Npb25cIj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBMVFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9zcGFuPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICApLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAvL2FjY2Vzc29yOiAnc29sZExpc3RpbmcucmlnaHRzUGFja2FnZScsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGFjY2Vzc29yOiBkID0+IGQuc29sZExpc3RpbmcgPyBkLnNvbGRMaXN0aW5nLnJpZ2h0c1BhY2thZ2UgOiBkLmNvbnRlbnQucmlnaHRzUGFja2FnZSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaWQ6ICdMVCcsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGhlYWRlckNsYXNzTmFtZSA6ICd0YWJsZS1oZWFkZXItc21hbGwnLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjbGFzc05hbWUgOiAndGFibGUtaGVhZGVyLXNtYWxsJyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgQ2VsbDogcHJvcHMgPT4gPGRpdlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY2xhc3NOYW1lPXtcImJsdWVcIn0+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB7cHJvcHMudmFsdWUubWFwKHI9PnIuc2hvcnRMYWJlbCkuaW5kZXhPZihcIkxUXCIpICE9PSAtMSAmJlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGltZyBzdHlsZT17cmlnaHRJbWFnZVN0eWxlfSBzcmM9e3RoaXMuY2hlY2tJY29ufS8+fVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9LHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgSGVhZGVyOiAoKSA9PiAoXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBkYXRhLXRpcD1cIkxpdmUgYmV0dGluZ1wiPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIExCXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3NwYW4+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICksXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGFjY2Vzc29yOiBkID0+IGQuc29sZExpc3RpbmcgPyBkLnNvbGRMaXN0aW5nLnJpZ2h0c1BhY2thZ2UgOiBkLmNvbnRlbnQucmlnaHRzUGFja2FnZSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaWQ6ICdMQicsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGhlYWRlckNsYXNzTmFtZSA6ICd0YWJsZS1oZWFkZXItc21hbGwnLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjbGFzc05hbWUgOiAndGFibGUtaGVhZGVyLXNtYWxsJyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgQ2VsbDogcHJvcHMgPT4gPGRpdlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY2xhc3NOYW1lPXtcImJsdWVcIn0+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB7cHJvcHMudmFsdWUubWFwKHI9PnIuc2hvcnRMYWJlbCkuaW5kZXhPZihcIkxCXCIpICE9PSAtMSAmJlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGltZyBzdHlsZT17cmlnaHRJbWFnZVN0eWxlfSBzcmM9e3RoaXMuY2hlY2tJY29ufS8+fVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9LHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgSGVhZGVyOiAoKSA9PiAoXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBkYXRhLXRpcD1cIkRlbGF5ZWQgJiBBcmNoaXZlXCI+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgRFRcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvc3Bhbj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgKSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYWNjZXNzb3I6IGQgPT4gZC5zb2xkTGlzdGluZyA/IGQuc29sZExpc3RpbmcucmlnaHRzUGFja2FnZSA6IGQuY29udGVudC5yaWdodHNQYWNrYWdlLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZDogJ0RUJyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaGVhZGVyQ2xhc3NOYW1lIDogJ3RhYmxlLWhlYWRlci1zbWFsbCcsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNsYXNzTmFtZSA6ICd0YWJsZS1oZWFkZXItc21hbGwnLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBDZWxsOiBwcm9wcyA9PiA8ZGl2XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjbGFzc05hbWU9e1wiYmx1ZVwifT5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHtwcm9wcy52YWx1ZS5tYXAocj0+ci5zaG9ydExhYmVsKS5pbmRleE9mKFwiRFRcIikgIT09IC0xICYmXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aW1nIHN0eWxlPXtyaWdodEltYWdlU3R5bGV9IHNyYz17dGhpcy5jaGVja0ljb259Lz59XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0se1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBIZWFkZXI6ICgpID0+IChcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGRhdGEtdGlwPVwiSGlnaGxpZ2h0c1wiPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIEhMXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3NwYW4+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICksXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGFjY2Vzc29yOiBkID0+IGQuc29sZExpc3RpbmcgPyBkLnNvbGRMaXN0aW5nLnJpZ2h0c1BhY2thZ2UgOiBkLmNvbnRlbnQucmlnaHRzUGFja2FnZSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaWQ6ICdITCcsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGhlYWRlckNsYXNzTmFtZSA6ICd0YWJsZS1oZWFkZXItc21hbGwnLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjbGFzc05hbWUgOiAndGFibGUtaGVhZGVyLXNtYWxsJyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgQ2VsbDogcHJvcHMgPT4gPGRpdlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY2xhc3NOYW1lPXtcImJsdWVcIn0+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB7cHJvcHMudmFsdWUubWFwKHI9PnIuc2hvcnRMYWJlbCkuaW5kZXhPZihcIkhMXCIpICE9PSAtMSAmJlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGltZyBzdHlsZT17cmlnaHRJbWFnZVN0eWxlfSBzcmM9e3RoaXMuY2hlY2tJY29ufS8+fVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9LHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgSGVhZGVyOiAoKSA9PiAoXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBkYXRhLXRpcD1cIk5ld3MgYWNjZXNzXCI+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgTkFcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvc3Bhbj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgKSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYWNjZXNzb3I6IGQgPT4gZC5zb2xkTGlzdGluZyA/IGQuc29sZExpc3RpbmcucmlnaHRzUGFja2FnZSA6IGQuY29udGVudC5yaWdodHNQYWNrYWdlLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZDogJ05BJyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaGVhZGVyQ2xhc3NOYW1lIDogJ3RhYmxlLWhlYWRlci1zbWFsbCcsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNsYXNzTmFtZSA6ICd0YWJsZS1oZWFkZXItc21hbGwnLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBDZWxsOiBwcm9wcyA9PiA8ZGl2XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjbGFzc05hbWU9e1wiYmx1ZVwifT5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHtwcm9wcy52YWx1ZS5tYXAocj0+ci5zaG9ydExhYmVsKS5pbmRleE9mKFwiTkFcIikgIT09IC0xICYmXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aW1nIHN0eWxlPXtyaWdodEltYWdlU3R5bGV9IHNyYz17dGhpcy5jaGVja0ljb259Lz59XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0se1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBIZWFkZXI6ICgpID0+IChcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGRhdGEtdGlwPVwiUHJvZ3JhbVwiPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFBSXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3NwYW4+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICksXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGFjY2Vzc29yOiBkID0+IGQuc29sZExpc3RpbmcgPyBkLnNvbGRMaXN0aW5nLnJpZ2h0c1BhY2thZ2UgOiBkLmNvbnRlbnQucmlnaHRzUGFja2FnZSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaWQ6ICdQUicsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGhlYWRlckNsYXNzTmFtZSA6ICd0YWJsZS1oZWFkZXItc21hbGwnLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjbGFzc05hbWUgOiAndGFibGUtaGVhZGVyLXNtYWxsJyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgQ2VsbDogcHJvcHMgPT4gPGRpdlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY2xhc3NOYW1lPXtcImJsdWVcIn0+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB7cHJvcHMudmFsdWUubWFwKHI9PnIuc2hvcnRMYWJlbCkuaW5kZXhPZihcIlBSXCIpICE9PSAtMSAmJlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGltZyBzdHlsZT17cmlnaHRJbWFnZVN0eWxlfSBzcmM9e3RoaXMuY2hlY2tJY29ufS8+fVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9LCB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIEhlYWRlcjogKCkgPT4gKFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAge3RoaXMuY29udGV4dC50KFwiVGVycml0b3JpZXNcIil9IDxpIGNsYXNzTmFtZT1cImZhIGZhLXNvcnRcIiAvPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9zcGFuPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICApLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBoZWFkZXJDbGFzc05hbWUgOiAndGFibGUtaGVhZGVyJyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY2xhc3NOYW1lIDogJ3RhYmxlLWhlYWRlcicsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlkOiBcInRlcnJpdG9yaWVzXCIsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGFjY2Vzc29yOiBkID0+IHtyZXR1cm57XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzaXplIDogZC5zYWxlc1BhY2thZ2UudGVycml0b3JpZXMubGVuZ3RoLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdGVycml0b3JpZXMgOiBkLnNhbGVzUGFja2FnZS50ZXJyaXRvcmllcyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGV4Y2x1ZGVkQ291bnRyaWVzIDogZC5zYWxlc1BhY2thZ2UuZXhjbHVkZWRDb3VudHJpZXMsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB3b3JsZHdpZGUgOiBkLnNhbGVzUGFja2FnZS50ZXJyaXRvcmllc01ldGhvZCA9PT0gXCJXT1JMRFdJREVcIiAmJiBkLnNhbGVzUGFja2FnZS5idW5kbGVNZXRob2QgPT09IFwiU0VMTF9BU19CVU5ETEVcIixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGV4Y2x1ZGluZyA6IGQuc2FsZXNQYWNrYWdlLnRlcnJpdG9yaWVzTWV0aG9kID09PSBcIldPUkxEV0lERV9FWENMVURJTkdcIiAmJiBkLnNhbGVzUGFja2FnZS5idW5kbGVNZXRob2QgPT09IFwiU0VMTF9BU19CVU5ETEVcIiAmJiBkLnNhbGVzUGFja2FnZS5leGNsdWRlZENvdW50cmllcy5sZW5ndGggPT09IDEsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH19LFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBDZWxsOiBwcm9wcyA9PiB7XG5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbnN0IHsgc2l6ZSwgdGVycml0b3JpZXMsIHdvcmxkd2lkZSwgZXhjbHVkaW5nLCBleGNsdWRlZENvdW50cmllc30gPSBwcm9wcy52YWx1ZTtcblxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIDxkaXYgY2xhc3NOYW1lPXtcImJsdWVcIn0+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB7IXdvcmxkd2lkZSAmJiAhZXhjbHVkaW5nICYmIHNpemUgPiAxICYmIHNpemUgKyBcIiB0ZXJyaXRvcmllc1wiIH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHshd29ybGR3aWRlICYmICFleGNsdWRpbmcgJiYgc2l6ZSA9PT0gMSAmJiB0ZXJyaXRvcmllc1swXS5uYW1lfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAge2V4Y2x1ZGluZyAmJiBcIldvcmxkd2lkZSBleGNsdWRpbmcgXCIgKyBleGNsdWRlZENvdW50cmllc1swXS5uYW1lIH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHt3b3JsZHdpZGUgJiYgdGhpcy5jb250ZXh0LnQoXCJXb3JsZHdpZGVcIikgfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj59XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfSwge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBIZWFkZXI6ICgpID0+IChcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHt0aGlzLmNvbnRleHQudChcIlByaWNlXCIpfSA8aSBjbGFzc05hbWU9XCJmYSBmYS1zb3J0XCIgLz5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvc3Bhbj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgKSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaGVhZGVyQ2xhc3NOYW1lIDogJ3RhYmxlLWhlYWRlcicsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNsYXNzTmFtZSA6ICd0YWJsZS1oZWFkZXInLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZDogXCJwcmljZVwiLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBhY2Nlc3NvcjogZCA9PiB7cmV0dXJuIHtmZWU6IGQudG90YWxGZWUsIGN1cnJlbmN5OiBkLnNhbGVzUGFja2FnZS5jdXJyZW5jeS5jb2RlfX0sXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIENlbGw6IHByb3BzID0+IDxkaXYgY2xhc3NOYW1lPXtcImJsdWVcIn0+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB7cGFyc2VGbG9hdChwcm9wcy52YWx1ZS5mZWUpLnRvTG9jYWxlU3RyaW5nKCkgKyBcIiBcIiArIGdldEN1cnJlbmN5U3ltYm9sKHByb3BzLnZhbHVlLmN1cnJlbmN5KX1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfSwge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBIZWFkZXI6ICgpID0+IChcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHt0aGlzLmNvbnRleHQudChcIkRhdGUgb2Ygc2FsZVwiKX0gPGkgY2xhc3NOYW1lPVwiZmEgZmEtc29ydFwiIC8+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3NwYW4+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICksXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGhlYWRlckNsYXNzTmFtZSA6ICd0YWJsZS1oZWFkZXInLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjbGFzc05hbWUgOiAndGFibGUtaGVhZGVyJyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYWNjZXNzb3I6ICdjcmVhdGVkQXQnLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBDZWxsOiBwcm9wcyA9PiA8ZGl2PlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAge01vbWVudChwcm9wcy52YWx1ZSkuZm9ybWF0KCdERC9NTS9ZWVlZJyl9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxuXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfSwge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBIZWFkZXI6ICgpID0+IChcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHt0aGlzLmNvbnRleHQudChcIkJ1eWVyIG5hbWVcIil9IDxpIGNsYXNzTmFtZT1cImZhIGZhLXNvcnRcIiAvPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9zcGFuPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICApLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBoZWFkZXJDbGFzc05hbWUgOiAndGFibGUtaGVhZGVyLWJpZycsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNsYXNzTmFtZSA6ICd0YWJsZS1oZWFkZXItYmlnJyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYWNjZXNzb3I6ICdidXllclVzZXInLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBDZWxsOiBwcm9wcyA9PiA8ZGl2PlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAge3Byb3BzLnZhbHVlLmZpcnN0TmFtZSArIFwiIFwiICsgcHJvcHMudmFsdWUubGFzdE5hbWV9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxuXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfSx7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGhlYWRlckNsYXNzTmFtZSA6ICd0YWJsZS1oZWFkZXInLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjbGFzc05hbWUgOiAndGFibGUtaGVhZGVyJyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgSGVhZGVyOiB0aGlzLmNvbnRleHQudChcIkFjdGlvbnNcIiksIC8vIEN1c3RvbSBoZWFkZXIgY29tcG9uZW50cyFcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaWQ6ICdoZWFkZXInLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBhY2Nlc3NvcjogZCA9PiB7cmV0dXJue1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaWQgOiBkLmlkLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY3VzdG9tSWQgOiBkLmN1c3RvbUlkXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH19LFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBDZWxsOiBwcm9wcyA9PiA8ZGl2IGNsYXNzTmFtZT17XCJcIn0+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aW1nIHN0eWxlPXt7bWFyZ2luOicwIDEwcHgnLCBjdXJzb3I6ICdwb2ludGVyJ319IG9uQ2xpY2s9eygpPT57XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdmlld0xpY2Vuc2VCaWQocHJvcHMudmFsdWUuY3VzdG9tSWQpXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9fSBzcmM9e3RoaXMuZG9jSWNvbn0vPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGltZyBzdHlsZT17e21hcmdpbjonMCAxMHB4JywgY3Vyc29yOiAncG9pbnRlcid9fSBvbkNsaWNrPXsoKT0+e1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHdpbmRvdy5sb2NhdGlvbi5ocmVmID0gYC9yZWRpcmVjdC1pbnRlZ3JhdGlvbi9tZXNzYWdlcy1ieS1iaWQvJHtwcm9wcy52YWx1ZS5pZH1gO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfX0gc3JjPXt0aGlzLmJsdWVFbnZlbG9wZUljb259Lz5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgXX1cbiAgICAgICAgICAgICAgICAgICAgICAgIC8+XG4gICAgICAgICAgICAgICAgICAgICAgICA8UmVhY3RUb29sdGlwIHBsYWNlPVwidG9wXCIgdHlwZT1cImRhcmtcIiBlZmZlY3Q9XCJzb2xpZFwiLz5cbiAgICAgICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICBiaWRzLmxlbmd0aCA9PT0gMCAmJlxuICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cIm1hbmFnZXItY29udGVudC1tZXNzYWdlXCI+XG4gICAgICAgICAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgbG9hZGluZyAmJiA8ZGl2IGNsYXNzTmFtZT1cImJpZy1zcGlubmVyXCI+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpIGNsYXNzTmFtZT1cImZhIGZhLWNvZyBmYS1zcGluXCIvPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgIWxvYWRpbmcgJiYgPGRpdiBjbGFzc05hbWU9XCJiaWctc3Bpbm5lclwiIHN0eWxlPXt7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGZvbnRTaXplOiAzMFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH19PlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB7dGhpcy5jb250ZXh0LnQoXCJDTE9TRURfREVBTFNfRU1QVFlfTUVTU0FHRVwiKX1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgKVxuICAgIH1cbn1cblxuQ2xvc2VkRGVhbHMuY29udGV4dFR5cGVzID0ge1xuICAgIHQ6IFByb3BUeXBlcy5mdW5jLmlzUmVxdWlyZWRcbn07XG5cbmNvbnN0IG1hcFN0YXRlVG9Qcm9wcyA9ICggc3RhdGUsIG93blByb3BzKSA9PiB7XG4gICAgcmV0dXJuIHN0YXRlO1xufTtcblxuY29uc3QgbWFwRGlzcGF0Y2hUb1Byb3BzID0gZGlzcGF0Y2ggPT4ge1xuICAgIHJldHVybiB7XG4gICAgfVxufTtcblxuXG5leHBvcnQgZGVmYXVsdCBjb25uZWN0KFxuICAgIG1hcFN0YXRlVG9Qcm9wcyxcbiAgICBtYXBEaXNwYXRjaFRvUHJvcHNcbikoQ2xvc2VkRGVhbHMpXG5cblxuLy8gV0VCUEFDSyBGT09URVIgLy9cbi8vIC4vc3JjL0FwcEJ1bmRsZS9SZXNvdXJjZXMvcHVibGljL2phdmFzY3JpcHQvbWFuYWdlL2NvbnRhaW5lcnMvQ2xvc2VkRGVhbHMuanMiLCJpbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xuaW1wb3J0IHsgY29ubmVjdCB9IGZyb20gXCJyZWFjdC1yZWR1eFwiO1xuaW1wb3J0IFNlbGVjdCBmcm9tICdyZWFjdC1zZWxlY3QnO1xuaW1wb3J0IENvbnRlbnRMaXN0aW5nQ29tbWVyY2lhbEFjdGl2aXR5IGZyb20gJy4uLy4uL21haW4vY29tcG9uZW50cy9Db250ZW50TGlzdGluZ0NvbW1lcmNpYWxBY3Rpdml0eSc7XG5pbXBvcnQge2dvVG9MaXN0aW5nfSBmcm9tIFwiLi4vLi4vbWFpbi9hY3Rpb25zL3V0aWxzXCI7XG5pbXBvcnQge1Byb3BUeXBlc30gZnJvbSBcInByb3AtdHlwZXNcIjtcblxuY2xhc3MgQ29tbWVyY2lhbEFjdGl2aXR5IGV4dGVuZHMgUmVhY3QuQ29tcG9uZW50IHtcbiAgICBjb25zdHJ1Y3Rvcihwcm9wcykge1xuICAgICAgICBzdXBlcihwcm9wcyk7XG4gICAgICAgIHRoaXMuc3RhdGUgPSB7XG4gICAgICAgICAgICBsb2FkaW5nIDogZmFsc2UsXG4gICAgICAgICAgICBsaXN0aW5ncyA6IFtdLFxuICAgICAgICAgICAgc2VsZWN0ZWRMaXN0aW5nczogW10sXG4gICAgICAgICAgICBmaWx0ZXI6ICdBTEwnLFxuICAgICAgICAgICAgYnVuZGxlc09wZW46IGZhbHNlLFxuICAgICAgICAgICAgYmlkc09wZW4gOiBmYWxzZVxuXG4gICAgICAgIH07XG4gICAgICAgIHRoaXMuYnVsbGV0SWNvbiA9IGFzc2V0c0Jhc2VEaXIgKyBcImFwcC9pbWFnZXMvYnVsbGV0LnBuZ1wiO1xuICAgICAgICB0aGlzLmFjdGl2ZUJ1bGxldEljb24gPSBhc3NldHNCYXNlRGlyICsgXCJhcHAvaW1hZ2VzL2FjdGl2ZV9idWxsZXQucG5nXCI7XG5cblxuICAgIH1cblxuICAgIGNvbXBvbmVudERpZE1vdW50ICgpIHtcblxuICAgICAgICBjb25zdCB7bWF0Y2h9ID0gdGhpcy5wcm9wcztcblxuICAgICAgICBsZXQgcGFyYW1zLCBmaWx0ZXIsIGxpc3RpbmdzID0gW107XG5cbiAgICAgICAgaWYgKCBtYXRjaCAmJiBtYXRjaC5wYXJhbXMgJiYgbWF0Y2gucGFyYW1zLmZpbHRlck5hbWUpe1xuXG4gICAgICAgICAgICBwYXJhbXMgPSBtYXRjaC5wYXJhbXMuZmlsdGVyTmFtZS5zcGxpdChcIiZcIik7XG5cbiAgICAgICAgICAgIGlmICggcGFyYW1zLmxlbmd0aCA+IDEgKSB7XG4gICAgICAgICAgICAgICAgbGlzdGluZ3MucHVzaChwYXJhbXNbMF0pO1xuICAgICAgICAgICAgICAgIGZpbHRlciA9IHBhcmFtc1sxXTtcbiAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgaWYgKCBwYXJhbXNbMF0ubGVuZ3RoID09PSA1KXtcbiAgICAgICAgICAgICAgICAgICAgbGlzdGluZ3MucHVzaChwYXJhbXNbMF0pO1xuICAgICAgICAgICAgICAgICAgICBmaWx0ZXIgPSBcIkFMTFwiO1xuICAgICAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgIGZpbHRlciA9IHBhcmFtc1swXVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgdGhpcy5zZXRTdGF0ZSh7XG4gICAgICAgICAgICAgICAgZmlsdGVyIDogZmlsdGVyLFxuICAgICAgICAgICAgICAgIHNlbGVjdGVkTGlzdGluZ3MgOiBsaXN0aW5nc1xuICAgICAgICAgICAgfSk7XG4gICAgICAgIH1cblxuICAgICAgICB0aGlzLnVwZGF0ZSgpO1xuICAgIH1cblxuICAgIGRlbGV0ZUJpZCA9IChpZCkgPT4ge1xuICAgICAgICBDb250ZW50QXJlbmEuQ29udGVudEFwaS5yZW1vdmVCaWQoe2lkOmlkfSkuZG9uZSgocik9PntcbiAgICAgICAgICAgIHRoaXMudXBkYXRlKCk7XG4gICAgICAgIH0pO1xuICAgIH07XG5cbiAgICB1cGRhdGUgPSAoKT0+IHtcbiAgICAgICAgbGV0IF90aGlzID0gdGhpcztcbiAgICAgICAgdGhpcy5zZXRTdGF0ZSh7bG9hZGluZzp0cnVlfSk7XG5cbiAgICAgICAgQ29udGVudEFyZW5hLkNvbnRlbnRBcGkuZ2V0QWxsRGVhbHMoKS5kb25lKChsaXN0aW5ncykgPT4ge1xuICAgICAgICAgICAgbGlzdGluZ3MuZm9yRWFjaChsPT5Db250ZW50QXJlbmEuVXRpbHMuY29udGVudFBhcnNlckZyb21TZXJ2ZXIobCkpO1xuICAgICAgICAgICAgX3RoaXMuc2V0U3RhdGUoe2xpc3RpbmdzOiBsaXN0aW5ncywgbG9hZGluZyA6IGZhbHNlfSk7XG4gICAgICAgIH0pO1xuICAgIH07XG5cbiAgICBmaWx0ZXJlZCA9ICgpID0+IHtcbiAgICAgICAgY29uc3QgeyBmaWx0ZXIgLCBzZWxlY3RlZExpc3RpbmdzfSA9IHRoaXMuc3RhdGU7XG5cbiAgICAgICAgbGV0IGxpc3RpbmdzID0gdGhpcy5zdGF0ZS5saXN0aW5ncyB8fCBbXTtcblxuICAgICAgICBpZiAoIHNlbGVjdGVkTGlzdGluZ3MubGVuZ3RoID4gMCApe1xuICAgICAgICAgICAgcmV0dXJuIHRoaXMuc3RhdGUubGlzdGluZ3MuZmlsdGVyKGIgPT4gc2VsZWN0ZWRMaXN0aW5ncy5pbmRleE9mKGIuY3VzdG9tSWQpICE9PSAtMSk7XG4gICAgICAgIH1cblxuICAgICAgICBzd2l0Y2ggKGZpbHRlcikge1xuICAgICAgICAgICAgY2FzZSBcImNsb3NlZGRlYWxzXCIgOlxuICAgICAgICAgICAgICAgIHJldHVybiBsaXN0aW5ncy5maWx0ZXIoYiA9PiB7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiBiLnNhbGVzUGFja2FnZXMuZmlsdGVyKChzcCk9PntcbiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBzcC5iaWRzLmZpbHRlcihiPT5iLnN0YXR1cy5uYW1lID09PSBcIkFQUFJPVkVEXCIpLmxlbmd0aCA+IDBcbiAgICAgICAgICAgICAgICAgICAgICAgIH0pLmxlbmd0aCA+IDBcbiAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICBjYXNlIFwib3BlbmJpZHNcIiA6XG4gICAgICAgICAgICAgICAgcmV0dXJuIGxpc3RpbmdzLmZpbHRlcihiID0+IHtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGIuc2FsZXNQYWNrYWdlcy5maWx0ZXIoKHNwKT0+e1xuICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHNwLmJpZHMuZmlsdGVyKGI9PmIuc3RhdHVzLm5hbWUgPT09IFwiUEVORElOR1wiKS5sZW5ndGggPiAwXG4gICAgICAgICAgICAgICAgICAgIH0pLmxlbmd0aCA+IDBcbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIGNhc2UgXCJ3aXRoYWN0aXZpdHlcIiA6XG4gICAgICAgICAgICAgICAgcmV0dXJuIGxpc3RpbmdzLmZpbHRlcihiID0+IHtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGIuc2FsZXNQYWNrYWdlcy5maWx0ZXIoKHNwKT0+e1xuICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHNwLmJpZHMubGVuZ3RoID4gMFxuICAgICAgICAgICAgICAgICAgICB9KS5sZW5ndGggPiAwXG4gICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICBjYXNlIFwiQUxMXCIgOlxuICAgICAgICAgICAgICAgIHJldHVybiBsaXN0aW5ncztcbiAgICAgICAgICAgIGRlZmF1bHQgOlxuICAgICAgICAgICAgICAgIHJldHVybiBsaXN0aW5ncztcblxuICAgICAgICB9XG5cbiAgICB9O1xuXG4gICAgcmVtb3ZlID0gKCBjdXN0b21JZCkgPT4ge1xuICAgICAgICB0aGlzLnNldFN0YXRlKHtcbiAgICAgICAgICAgIGxpc3RpbmdzIDogdGhpcy5zdGF0ZS5saXN0aW5ncy5maWx0ZXIobCA9PiBsLmN1c3RvbUlkICE9PSBjdXN0b21JZClcbiAgICAgICAgfSk7XG4gICAgfTtcblxuICAgIHJlbmRlciAoKSB7XG4gICAgICAgIGNvbnN0IHsgbG9hZGluZywgZmlsdGVyLCBzZWxlY3RlZExpc3RpbmdzIH0gPSB0aGlzLnN0YXRlO1xuICAgICAgICBjb25zdCB7aGlzdG9yeSB9ID0gdGhpcy5wcm9wcztcbiAgICAgICAgbGV0IGxpc3RpbmdzID0gdGhpcy5maWx0ZXJlZCgpO1xuICAgICAgICBjb25zdCBhbGxMaXN0aW5ncyA9IHRoaXMuc3RhdGUubGlzdGluZ3M7XG4gICAgICAgIHJldHVybiAoXG4gICAgICAgICAgICA8ZGl2IHN0eWxlPXt7aGVpZ2h0IDogJzEwMCUnfX0+XG5cbiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT17XCJtYW5hZ2VyLWZpbHRlci1jb250YWluZXJcIn0+XG4gICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPXtcImxpc3RpbmctZmlsdGVyXCJ9PlxuICAgICAgICAgICAgICAgICAgICAgICAgPFNlbGVjdFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIG5hbWU9XCJmb3JtLWZpZWxkLW5hbWVcIlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHBsYWNlaG9sZGVyPVwiQWxsIGxpc3RpbmdzXCJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpc0NsZWFyYWJsZT17dHJ1ZX1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBvbkNoYW5nZT17KHNlbGVjdGVkKT0+e1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBsZXQgZmlsdGVyU3RyaW5nID0gKGZpbHRlciE9PVwiQUxMXCIpID8gKHNlbGVjdGVkKSA/IFwiJlwiICtmaWx0ZXIgOiBmaWx0ZXIgOiBcIlwiIDtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbGV0IGlkU3RyaW5nID0gc2VsZWN0ZWQgPyBzZWxlY3RlZC52YWx1ZSA6IFwiXCI7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGxldCBwcmVmaXggPSAoICFzZWxlY3RlZCAmJiBmaWx0ZXIgPT09IFwiQUxMXCIpID8gXCJcIiA6IFwiL2ZpbHRlci9cIjtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaGlzdG9yeS5wdXNoKFwiL2NvbW1lcmNpYWxhY3Rpdml0eVwiKyBwcmVmaXggKyBpZFN0cmluZyArIGZpbHRlclN0cmluZylcblxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH19XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgbXVsdGk9e2ZhbHNlfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhbHVlPXtzZWxlY3RlZExpc3RpbmdzWzBdfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIG9wdGlvbnM9e2FsbExpc3RpbmdzLm1hcCgoYik9Pih7dmFsdWUgOiBiLmN1c3RvbUlkICwgbGFiZWwgOiBiLm5hbWUgfSkpfVxuICAgICAgICAgICAgICAgICAgICAgICAgLz5cbiAgICAgICAgICAgICAgICAgICAgPC9kaXY+XG5cbiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9e1wic3RhdHVzLWZpbHRlclwifT5cbiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPXtcInN0YXR1cy1maWx0ZXItaXRlbVwifVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICBvbkNsaWNrPXsoKT0+e1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbGV0IGZpbHRlclN0cmluZyA9IChzZWxlY3RlZExpc3RpbmdzLmxlbmd0aCA+IDApID8gXCIvZmlsdGVyL1wiICsgc2VsZWN0ZWRMaXN0aW5nc1swXSAgOiBcIlwiIDtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGhpc3RvcnkucHVzaChcIi9jb21tZXJjaWFsYWN0aXZpdHlcIitmaWx0ZXJTdHJpbmcpXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgIH19PlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHtmaWx0ZXI9PT1cIkFMTFwiICYmIDxpbWcgc3JjPXt0aGlzLmFjdGl2ZUJ1bGxldEljb259IC8+fVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHtmaWx0ZXIhPT1cIkFMTFwiICYmIDxpbWcgc3JjPXt0aGlzLmJ1bGxldEljb259IC8+fVxuXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAge3RoaXMuY29udGV4dC50KFwiQ09NTUVSQ0lBTF9BQ1RJVklUWV9GSUxURVJfQUxMXCIpfVxuICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT17XCJzdGF0dXMtZmlsdGVyLWl0ZW1cIn1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgb25DbGljaz17KCk9PntcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGxldCBmaWx0ZXJTdHJpbmcgPSAoc2VsZWN0ZWRMaXN0aW5ncy5sZW5ndGggPiAwKSA/IHNlbGVjdGVkTGlzdGluZ3NbMF0gKyBcIiZcIiA6IFwiXCIgO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaGlzdG9yeS5wdXNoKFwiL2NvbW1lcmNpYWxhY3Rpdml0eS9maWx0ZXIvXCIrZmlsdGVyU3RyaW5nK1wid2l0aGFjdGl2aXR5XCIpXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgIH19PlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHtmaWx0ZXI9PT1cIndpdGhhY3Rpdml0eVwiICYmIDxpbWcgc3JjPXt0aGlzLmFjdGl2ZUJ1bGxldEljb259IC8+fVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHtmaWx0ZXIhPT1cIndpdGhhY3Rpdml0eVwiICYmIDxpbWcgc3JjPXt0aGlzLmJ1bGxldEljb259IC8+fVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHt0aGlzLmNvbnRleHQudChcIkNPTU1FUkNJQUxfQUNUSVZJVFlfRklMVEVSX1dJVEhfQUNUSVZJVFlcIil9XG4gICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPXtcInN0YXR1cy1maWx0ZXItaXRlbVwifVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICBvbkNsaWNrPXsoKT0+e1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbGV0IGZpbHRlclN0cmluZyA9IChzZWxlY3RlZExpc3RpbmdzLmxlbmd0aCA+IDApID8gc2VsZWN0ZWRMaXN0aW5nc1swXSArIFwiJlwiIDogXCJcIiA7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBoaXN0b3J5LnB1c2goXCIvY29tbWVyY2lhbGFjdGl2aXR5L2ZpbHRlci9cIitmaWx0ZXJTdHJpbmcrXCJvcGVuYmlkc1wiKVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9fT5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB7ZmlsdGVyPT09XCJvcGVuYmlkc1wiICYmIDxpbWcgc3JjPXt0aGlzLmFjdGl2ZUJ1bGxldEljb259IC8+fVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHtmaWx0ZXIhPT1cIm9wZW5iaWRzXCIgJiYgPGltZyBzcmM9e3RoaXMuYnVsbGV0SWNvbn0gLz59XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAge3RoaXMuY29udGV4dC50KFwiQ09NTUVSQ0lBTF9BQ1RJVklUWV9GSUxURVJfT1BFTl9CSURTXCIpfVxuICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT17XCJzdGF0dXMtZmlsdGVyLWl0ZW1cIn1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgb25DbGljaz17KCk9PntcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGxldCBmaWx0ZXJTdHJpbmcgPSAoc2VsZWN0ZWRMaXN0aW5ncy5sZW5ndGggPiAwKSA/IHNlbGVjdGVkTGlzdGluZ3NbMF0gKyBcIiZcIiA6IFwiXCIgO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaGlzdG9yeS5wdXNoKFwiL2NvbW1lcmNpYWxhY3Rpdml0eS9maWx0ZXIvXCIrZmlsdGVyU3RyaW5nK1wiY2xvc2VkZGVhbHNcIilcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfX0+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAge2ZpbHRlcj09PVwiY2xvc2VkZGVhbHNcIiAmJiA8aW1nIHNyYz17dGhpcy5hY3RpdmVCdWxsZXRJY29ufSAvPn1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB7ZmlsdGVyIT09XCJjbG9zZWRkZWFsc1wiICYmIDxpbWcgc3JjPXt0aGlzLmJ1bGxldEljb259IC8+fVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHt0aGlzLmNvbnRleHQudChcIkNPTU1FUkNJQUxfQUNUSVZJVFlfRklMVEVSX0NMT1NFRF9ERUFMU1wiKX1cbiAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgICA8L2Rpdj5cblxuICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgbGlzdGluZ3MubGVuZ3RoID4gMCAmJiBsaXN0aW5ncy5tYXAoKGxpc3RpbmcsIGksIGxpc3QpID0+IHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiA8Q29udGVudExpc3RpbmdDb21tZXJjaWFsQWN0aXZpdHlcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBvblVwZGF0ZT17dGhpcy51cGRhdGV9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgb25EZWxldGU9e3RoaXMuZGVsZXRlQmlkfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGJpZHNPcGVuPXtsaXN0Lmxlbmd0aCA9PT0gMSB8fCB0aGlzLnN0YXRlLmZpbHRlciAhPT0gXCJBTExcIn1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBidW5kbGVzT3Blbj17bGlzdC5sZW5ndGggPT09IDEgfHwgdGhpcy5zdGF0ZS5maWx0ZXIgIT09IFwiQUxMXCJ9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaGlkZVdpdGhvdXRCaWRzPXt0aGlzLnN0YXRlLmZpbHRlciA9PT0gXCJ3aXRoYWN0aXZpdHlcIn1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBmaWx0ZXJCeU9wZW5CaWRzPXt0aGlzLnN0YXRlLmZpbHRlciA9PT0gXCJvcGVuYmlkc1wifVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGZpbHRlckJ5Q2xvc2VkRGVhbHM9e3RoaXMuc3RhdGUuZmlsdGVyID09PSBcImNsb3NlZGRlYWxzXCJ9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgb25TZWxlY3Q9e2lkID0+IGdvVG9MaXN0aW5nKGlkLCB0cnVlKX1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBrZXk9e2kgKyBcIi1cIiArIGxpc3RpbmcuY3VzdG9tSWR9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgey4uLmxpc3Rpbmd9XG4gICAgICAgICAgICAgICAgICAgICAgICAvPlxuICAgICAgICAgICAgICAgICAgICB9KVxuICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgbGlzdGluZ3MubGVuZ3RoID09PSAwICYmXG4gICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwibWFuYWdlci1jb250ZW50LW1lc3NhZ2VcIj5cbiAgICAgICAgICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBsb2FkaW5nICYmIDxkaXYgY2xhc3NOYW1lPVwiYmlnLXNwaW5uZXJcIj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGkgY2xhc3NOYW1lPVwiZmEgZmEtY29nIGZhLXNwaW5cIi8+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAhbG9hZGluZyAmJiA8ZGl2IGNsYXNzTmFtZT1cImJpZy1zcGlubmVyXCIgc3R5bGU9e3tcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZm9udFNpemU6IDMwXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfX0+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHt0aGlzLmNvbnRleHQudChcIkNPTU1FUkNJQUxfQUNUSVZJVFlfRU1QVFlfTUVTU0FHRVwiKX1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgIClcbiAgICB9XG59XG5cbkNvbW1lcmNpYWxBY3Rpdml0eS5jb250ZXh0VHlwZXMgPSB7XG4gICAgdDogUHJvcFR5cGVzLmZ1bmMuaXNSZXF1aXJlZFxufTtcblxuY29uc3QgbWFwU3RhdGVUb1Byb3BzID0gKCBzdGF0ZSwgb3duUHJvcHMpID0+IHtcbiAgICByZXR1cm4gc3RhdGU7XG59O1xuXG5jb25zdCBtYXBEaXNwYXRjaFRvUHJvcHMgPSBkaXNwYXRjaCA9PiB7XG4gICAgcmV0dXJuIHtcbiAgICB9XG59O1xuXG5cbmV4cG9ydCBkZWZhdWx0IGNvbm5lY3QoXG4gICAgbWFwU3RhdGVUb1Byb3BzLFxuICAgIG1hcERpc3BhdGNoVG9Qcm9wc1xuKShDb21tZXJjaWFsQWN0aXZpdHkpXG5cblxuLy8gV0VCUEFDSyBGT09URVIgLy9cbi8vIC4vc3JjL0FwcEJ1bmRsZS9SZXNvdXJjZXMvcHVibGljL2phdmFzY3JpcHQvbWFuYWdlL2NvbnRhaW5lcnMvQ29tbWVyY2lhbEFjdGl2aXR5LmpzIiwiaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCB7IGNvbm5lY3QgfSBmcm9tIFwicmVhY3QtcmVkdXhcIjtcbmltcG9ydCB7Z29Ub30gZnJvbSBcIi4uLy4uL21haW4vYWN0aW9ucy91dGlsc1wiO1xuaW1wb3J0IEJvYXJkTGlzdGluZyBmcm9tICcuLi9jb21wb25lbnRzL0JvYXJkTGlzdGluZyc7XG5pbXBvcnQge3VwZGF0ZVByb2ZpbGV9IGZyb20gXCIuLi8uLi9tYWluL2FjdGlvbnMvdXNlckFjdGlvbnNcIjtcbmltcG9ydCB7UHJvcFR5cGVzfSBmcm9tIFwicHJvcC10eXBlc1wiO1xuXG5jbGFzcyBNYW5hZ2VMaXN0aW5ncyBleHRlbmRzIFJlYWN0LkNvbXBvbmVudCB7XG4gICAgY29uc3RydWN0b3IocHJvcHMpIHtcbiAgICAgICAgc3VwZXIocHJvcHMpO1xuICAgICAgICB0aGlzLnN0YXRlID0ge1xuICAgICAgICAgICAgbG9hZGluZyA6IGZhbHNlLFxuICAgICAgICAgICAgbG9hZGluZ0RyYWZ0OmZhbHNlLFxuICAgICAgICAgICAgbG9hZGluZ0luYWN0aXZlOiBmYWxzZSxcbiAgICAgICAgICAgIGxvYWRpbmdBY3RpdmU6IGZhbHNlLFxuICAgICAgICAgICAgbG9hZGluZ0V4cGlyZWQ6IGZhbHNlLFxuICAgICAgICAgICAgZHJhZnQgOiBbXSxcbiAgICAgICAgICAgIGFjdGl2ZSA6IFtdLFxuICAgICAgICAgICAgaW5hY3RpdmUgOiBbXSxcbiAgICAgICAgICAgIGV4cGlyZWQgOiBbXSxcbiAgICAgICAgfTtcbiAgICB9XG5cbiAgICBjb21wb25lbnREaWRNb3VudCAoKSB7XG4gICAgICAgIGxldCBfdGhpcyA9IHRoaXM7XG4gICAgICAgIHRoaXMuc2V0U3RhdGUoe1xuICAgICAgICAgICAgbG9hZGluZ0RyYWZ0OnRydWUsXG4gICAgICAgICAgICBsb2FkaW5nSW5hY3RpdmU6IHRydWUsXG4gICAgICAgICAgICBsb2FkaW5nQWN0aXZlOiB0cnVlLFxuICAgICAgICAgICAgbG9hZGluZ0V4cGlyZWQ6IHRydWVcbiAgICAgICAgfSk7XG5cbiAgICAgICAgQ29udGVudEFyZW5hLkNvbnRlbnRBcGkuZ2V0RHJhZnRMaXN0aW5ncygpLmRvbmUoKGxpc3RpbmdzKSA9PiB7XG4gICAgICAgICAgICBsaXN0aW5ncyA9IGxpc3RpbmdzLm1hcCggbGlzdGluZyA9PiBDb250ZW50QXJlbmEuVXRpbHMuY29udGVudFBhcnNlckZyb21TZXJ2ZXIobGlzdGluZykgKTtcbiAgICAgICAgICAgIF90aGlzLnNldFN0YXRlKHtkcmFmdDogbGlzdGluZ3MsIGxvYWRpbmdEcmFmdCA6IGZhbHNlfSk7XG4gICAgICAgIH0pO1xuXG4gICAgICAgIENvbnRlbnRBcmVuYS5Db250ZW50QXBpLmdldEluYWN0aXZlTGlzdGluZ3MoKS5kb25lKChsaXN0aW5ncykgPT4ge1xuICAgICAgICAgICAgbGlzdGluZ3MgPSBsaXN0aW5ncy5tYXAoIGxpc3RpbmcgPT4gQ29udGVudEFyZW5hLlV0aWxzLmNvbnRlbnRQYXJzZXJGcm9tU2VydmVyKGxpc3RpbmcpICk7XG4gICAgICAgICAgICBfdGhpcy5zZXRTdGF0ZSh7aW5hY3RpdmU6IGxpc3RpbmdzLCBsb2FkaW5nSW5hY3RpdmUgOiBmYWxzZX0pO1xuICAgICAgICB9KTtcblxuICAgICAgICBDb250ZW50QXJlbmEuQ29udGVudEFwaS5nZXRBY3RpdmVMaXN0aW5ncygpLmRvbmUoKGxpc3RpbmdzKSA9PiB7XG4gICAgICAgICAgICBsaXN0aW5ncyA9IGxpc3RpbmdzLm1hcCggbGlzdGluZyA9PiBDb250ZW50QXJlbmEuVXRpbHMuY29udGVudFBhcnNlckZyb21TZXJ2ZXIobGlzdGluZykgKTtcbiAgICAgICAgICAgIF90aGlzLnNldFN0YXRlKHthY3RpdmU6IGxpc3RpbmdzLCBsb2FkaW5nQWN0aXZlIDogZmFsc2V9KTtcbiAgICAgICAgfSk7XG5cbiAgICAgICAgQ29udGVudEFyZW5hLkNvbnRlbnRBcGkuZ2V0RXhwaXJlZExpc3RpbmdzKCkuZG9uZSgobGlzdGluZ3MpID0+IHtcbiAgICAgICAgICAgIGxpc3RpbmdzID0gbGlzdGluZ3MubWFwKCBsaXN0aW5nID0+IENvbnRlbnRBcmVuYS5VdGlscy5jb250ZW50UGFyc2VyRnJvbVNlcnZlcihsaXN0aW5nKSApO1xuICAgICAgICAgICAgX3RoaXMuc2V0U3RhdGUoe2V4cGlyZWQ6IGxpc3RpbmdzLCBsb2FkaW5nRXhwaXJlZCA6IGZhbHNlfSk7XG4gICAgICAgIH0pO1xuXG4gICAgICAgIHRoaXMucHJvcHMudXBkYXRlUHJvZmlsZShcIlNFTExFUlwiKTtcbiAgICB9XG5cbiAgICBzZWxlY3RMaXN0aW5nID0gKGlkKSA9PiB7XG4gICAgICAgIGdvVG8oXCJsaXN0aW5nL1wiICsgaWQpO1xuICAgIH07XG5cbiAgICBkdXBsaWNhdGUgPSAoY3VzdG9tSWQpID0+IHtcbiAgICAgICAgbGV0IGRyYWZ0ID0gdGhpcy5zdGF0ZS5kcmFmdDtcbiAgICAgICAgdGhpcy5zZXRTdGF0ZSh7bG9hZGluZ0RyYWZ0IDogdHJ1ZX0pO1xuICAgICAgICBDb250ZW50QXJlbmEuQ29udGVudEFwaS5kdXBsaWNhdGVMaXN0aW5nKGN1c3RvbUlkKS5kb25lKHJlc3BvbnNlID0+IHtcbiAgICAgICAgICAgIGlmICggcmVzcG9uc2Uuc3VjY2VzcyApIHtcbiAgICAgICAgICAgICAgICBkcmFmdC51bnNoaWZ0KHJlc3BvbnNlLmxpc3RpbmcpO1xuICAgICAgICAgICAgICAgIHRoaXMuc2V0U3RhdGUoe2RyYWZ0IDogZHJhZnQsIGxvYWRpbmdEcmFmdCA6IGZhbHNlfSk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0pO1xuICAgIH07XG5cbiAgICBkZWFjdGl2YXRlID0gKGN1c3RvbUlkKSA9PiB7XG4gICAgICAgIGxldCBpbmFjdGl2ZSA9IHRoaXMuc3RhdGUuaW5hY3RpdmU7XG4gICAgICAgIHRoaXMuc2V0U3RhdGUoe2xvYWRpbmdJbmFjdGl2ZSA6IHRydWV9KTtcbiAgICAgICAgQ29udGVudEFyZW5hLkNvbnRlbnRBcGkuZGVhY3RpdmF0ZUxpc3RpbmcoY3VzdG9tSWQpLmRvbmUocmVzcG9uc2UgPT4ge1xuICAgICAgICAgICAgaWYgKCByZXNwb25zZS5zdWNjZXNzICkge1xuICAgICAgICAgICAgICAgIC8vaW5hY3RpdmUudW5zaGlmdChDb250ZW50QXJlbmEuVXRpbHMuY29udGVudFBhcnNlckZyb21TZXJ2ZXIocmVzcG9uc2UubGlzdGluZykpO1xuICAgICAgICAgICAgICAgIGluYWN0aXZlLnVuc2hpZnQocmVzcG9uc2UubGlzdGluZyk7XG4gICAgICAgICAgICAgICAgdGhpcy5zZXRTdGF0ZSh7aW5hY3RpdmUgOiBpbmFjdGl2ZSwgbG9hZGluZ0luYWN0aXZlIDogZmFsc2V9KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSk7XG4gICAgfTtcblxuICAgIHJlbmRlciAoKSB7XG4gICAgICAgIGNvbnN0IHtcbiAgICAgICAgICAgIGxvYWRpbmdEcmFmdCxcbiAgICAgICAgICAgIGxvYWRpbmdBY3RpdmUsXG4gICAgICAgICAgICBsb2FkaW5nRXhwaXJlZCxcbiAgICAgICAgICAgIGxvYWRpbmdJbmFjdGl2ZSxcbiAgICAgICAgICAgIGRyYWZ0LCBhY3RpdmUsIGluYWN0aXZlLCBleHBpcmVkIH0gPSB0aGlzLnN0YXRlO1xuICAgICAgICByZXR1cm4gKFxuICAgICAgICAgICAgPGRpdiBzdHlsZT17e1xuICAgICAgICAgICAgICAgIGRpc3BsYXk6ICdmbGV4JyxcbiAgICAgICAgICAgICAgICBmbGV4RGlyZWN0aW9uOiAnY29sdW1uJyxcbiAgICAgICAgICAgICAgICBmbGV4OiAxXG4gICAgICAgICAgICB9fT5cbiAgICAgICAgICAgICAgICA8ZGl2IHN0eWxlPXt7XG4gICAgICAgICAgICAgICAgICAgIGRpc3BsYXk6ICdmbGV4JyxcbiAgICAgICAgICAgICAgICAgICAgZmxleERpcmVjdGlvbjogJ3JvdycsXG4gICAgICAgICAgICAgICAgICAgIHBhZGRpbmc6ICcwIDAgNXB4JyxcbiAgICAgICAgICAgICAgICAgICAgY29sb3I6ICcjNEY0RjRGJyxcbiAgICAgICAgICAgICAgICAgICAgZm9udFNpemU6IDE2LFxuICAgICAgICAgICAgICAgICAgICBmb250V2VpZ2h0OiA2MDAsXG4gICAgICAgICAgICAgICAgICAgIGFsaWduSXRlbXM6ICdjZW50ZXInLFxuICAgICAgICAgICAgICAgICAgICBtYXJnaW5Ub3AgOiAnLTE1cHgnXG5cbiAgICAgICAgICAgICAgICB9fT5cbiAgICAgICAgICAgICAgICAgICAgPGRpdiBzdHlsZT17e21hcmdpbjonMCAyMHB4JyAsIGZsZXg6IDEsZGlzcGxheTogJ2ZsZXgnLCBhbGlnbkl0ZW1zOiAnY2VudGVyJ319PlxuICAgICAgICAgICAgICAgICAgICAgICAge3RoaXMuY29udGV4dC50KFwiTUFOQUdFX0xJU1RJTkdTX1RJVExFX0RSQUZUXCIpfSh7ZHJhZnQubGVuZ3RofSlcbiAgICAgICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgICAgICAgIDxkaXYgc3R5bGU9e3ttYXJnaW46JzAgMjBweCcsIGZsZXg6IDF9fT5cbiAgICAgICAgICAgICAgICAgICAgICAgIHt0aGlzLmNvbnRleHQudChcIk1BTkFHRV9MSVNUSU5HU19USVRMRV9JTkFDVElWRVwiKX0oe2luYWN0aXZlLmxlbmd0aH0pXG4gICAgICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICAgICAgICA8ZGl2IHN0eWxlPXt7bWFyZ2luOicwIDIwcHgnLCBmbGV4OiAxfX0+XG4gICAgICAgICAgICAgICAgICAgICAgICB7dGhpcy5jb250ZXh0LnQoXCJNQU5BR0VfTElTVElOR1NfVElUTEVfQUNUSVZFXCIpfSh7YWN0aXZlLmxlbmd0aH0pXG4gICAgICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICAgICAgICA8ZGl2IHN0eWxlPXt7bWFyZ2luOicwIDIwcHgnLCBmbGV4OiAxfX0+XG4gICAgICAgICAgICAgICAgICAgICAgICB7dGhpcy5jb250ZXh0LnQoXCJNQU5BR0VfTElTVElOR1NfVElUTEVfRVhQSVJFRFwiKX0gKHtleHBpcmVkLmxlbmd0aH0pXG4gICAgICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICAgIDwvZGl2PlxuXG4gICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9e1wiYm9hcmRcIn0+XG4gICAgICAgICAgICAgICAgICAgIHsvKkRSQUZUKi99XG4gICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPXtcImNvbHVtblwifT5cbiAgICAgICAgICAgICAgICAgICAgICAgIHtsb2FkaW5nRHJhZnQgJiZcbiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwibWVkaXVtLXNwaW5uZXJcIj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aSBjbGFzc05hbWU9XCJmYSBmYS1jb2cgZmEtc3BpblwiLz5cbiAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2Pn1cbiAgICAgICAgICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBkcmFmdC5sZW5ndGggPiAwICYmIGRyYWZ0Lm1hcCgobGlzdGluZywgaSwgbGlzdCkgPT4ge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gPEJvYXJkTGlzdGluZ1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAga2V5PXtcImRyYWZ0LVwiICsgaX1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNsYXNzTmFtZT1cImxpc3RpbmdcIlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc3R5bGU9e3tcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB6SW5kZXggOiBsaXN0Lmxlbmd0aCAtIGlcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH19XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBkZWZhdWx0QWN0aW9uPXtcIkVESVRcIn1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNob3dFZGl0PXt0cnVlfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc2hvd1JlbW92ZT17dHJ1ZX1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNob3dEdXBsaWNhdGU9e3RydWV9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzaG93Vmlldz17ZmFsc2V9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBvblJlbW92ZT17KCk9PntcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBsaXN0LnNwbGljZShpLDEpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuc2V0U3RhdGUoe2RyYWZ0OiBsaXN0fSk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgQ29udGVudEFyZW5hLkNvbnRlbnRBcGkucmVtb3ZlTGlzdGluZyhsaXN0aW5nLmN1c3RvbUlkKVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfX1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG9uRHVwbGljYXRlPXt0aGlzLmR1cGxpY2F0ZX1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHsuLi5saXN0aW5nfS8+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfSlcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgICAgICAgIHsvKklOQUNUSVZFKi99XG4gICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPXtcImNvbHVtblwifT5cbiAgICAgICAgICAgICAgICAgICAgICAgIHtsb2FkaW5nSW5hY3RpdmUgJiZcbiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwibWVkaXVtLXNwaW5uZXJcIj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aSBjbGFzc05hbWU9XCJmYSBmYS1jb2cgZmEtc3BpblwiLz5cbiAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2Pn1cbiAgICAgICAgICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpbmFjdGl2ZS5sZW5ndGggPiAwICYmIGluYWN0aXZlLm1hcCgobGlzdGluZywgaSwgbGlzdCkgPT4ge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gPEJvYXJkTGlzdGluZ1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAga2V5PXtcImluYWN0aXZlLVwiICsgaX1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNsYXNzTmFtZT1cImxpc3RpbmdcIlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc3R5bGU9e3tcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB6SW5kZXggOiBsaXN0Lmxlbmd0aCAtIGlcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH19XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBkZWZhdWx0QWN0aW9uPXtcIlNVQk1JVFwifVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc2hvd0VkaXQ9e3RydWV9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzaG93UmVtb3ZlPXt0cnVlfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc2hvd0R1cGxpY2F0ZT17dHJ1ZX1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNob3dTdWJtaXQ9e3RydWV9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzaG93Vmlldz17dHJ1ZX1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG9uUmVtb3ZlPXsoKT0+e1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGxpc3Quc3BsaWNlKGksMSk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5zZXRTdGF0ZSh7aW5hY3RpdmU6IGxpc3R9KTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBDb250ZW50QXJlbmEuQ29udGVudEFwaS5yZW1vdmVMaXN0aW5nKGxpc3RpbmcuY3VzdG9tSWQpXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9fVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgb25EdXBsaWNhdGU9e3RoaXMuZHVwbGljYXRlfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgey4uLmxpc3Rpbmd9Lz5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9KVxuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgICAgICAgey8qQUNUSVZFKi99XG4gICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPXtcImNvbHVtblwifT5cbiAgICAgICAgICAgICAgICAgICAgICAgIHthY3RpdmUubGVuZ3RoID09PSAwICYmIGxvYWRpbmdBY3RpdmUgJiZcbiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwibWVkaXVtLXNwaW5uZXJcIj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aSBjbGFzc05hbWU9XCJmYSBmYS1jb2cgZmEtc3BpblwiLz5cbiAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2Pn1cbiAgICAgICAgICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBhY3RpdmUubGVuZ3RoID4gMCAmJiBhY3RpdmUubWFwKChsaXN0aW5nLCBpLCBsaXN0KSA9PiB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiA8Qm9hcmRMaXN0aW5nXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBrZXk9e1wiYWN0aXZlLVwiICsgaX1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNsYXNzTmFtZT1cImxpc3RpbmdcIlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc3R5bGU9e3tcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB6SW5kZXggOiBsaXN0Lmxlbmd0aCAtIGlcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH19XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzaG93RWRpdD17IWxpc3RpbmcuaGFzUGVuZGluZ0JpZHN9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzaG93UmVtb3ZlPXshbGlzdGluZy5oYXNBY3Rpdml0eX1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNob3dEZWFjdGl2YXRlPXshbGlzdGluZy5oYXNQZW5kaW5nQmlkc31cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNob3dEdXBsaWNhdGU9e3RydWV9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzaG93QXJjaGl2ZT17IWxpc3RpbmcuaGFzUGVuZGluZ0JpZHMgJiYgbGlzdGluZy5oYXNBY3Rpdml0eX1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNob3dWaWV3PXt0cnVlfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZGVmYXVsdEFjdGlvbj17XCJWSUVXXCJ9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBvbkRlYWN0aXZhdGU9eygpPT57XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbGlzdC5zcGxpY2UoaSwxKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0aGlzLnNldFN0YXRlKHthY3RpdmU6IGxpc3R9KTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0aGlzLmRlYWN0aXZhdGUobGlzdGluZy5jdXN0b21JZCk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9fVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgb25SZW1vdmU9eygpPT57XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbGlzdC5zcGxpY2UoaSwxKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0aGlzLnNldFN0YXRlKHthY3RpdmU6IGxpc3R9KTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBDb250ZW50QXJlbmEuQ29udGVudEFwaS5yZW1vdmVMaXN0aW5nKGxpc3RpbmcuY3VzdG9tSWQpXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9fVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgb25BcmNoaXZlPXsoKT0+e1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGxpc3Quc3BsaWNlKGksMSk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5zZXRTdGF0ZSh7YWN0aXZlOiBsaXN0fSk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgQ29udGVudEFyZW5hLkNvbnRlbnRBcGkuYXJjaGl2ZUxpc3RpbmcobGlzdGluZy5jdXN0b21JZClcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH19XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBvbkR1cGxpY2F0ZT17dGhpcy5kdXBsaWNhdGV9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB7Li4ubGlzdGluZ30vPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0pXG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICAgICAgICB7LypFWFBJUkVEKi99XG4gICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPXtcImNvbHVtblwifT5cbiAgICAgICAgICAgICAgICAgICAgICAgIHtleHBpcmVkLmxlbmd0aCA9PT0gMCAmJiBsb2FkaW5nRXhwaXJlZCAmJlxuICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJtZWRpdW0tc3Bpbm5lclwiPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpIGNsYXNzTmFtZT1cImZhIGZhLWNvZyBmYS1zcGluXCIvPlxuICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+fVxuICAgICAgICAgICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGV4cGlyZWQubGVuZ3RoID4gMCAmJiBleHBpcmVkLm1hcCgobGlzdGluZywgaSwgbGlzdCkgPT4ge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gPEJvYXJkTGlzdGluZ1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAga2V5PXtcImV4cGlyZWQtXCIgKyBpfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY2xhc3NOYW1lPVwibGlzdGluZ1wiXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzdHlsZT17e1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHpJbmRleCA6IGxpc3QubGVuZ3RoIC0gaVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfX1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNob3dSZW1vdmU9eyFsaXN0aW5nLmhhc0FjdGl2aXR5fVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc2hvd0R1cGxpY2F0ZT17dHJ1ZX1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNob3dBcmNoaXZlPXtsaXN0aW5nLmhhc0FjdGl2aXR5fVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc2hvd1ZpZXc9e3RydWV9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBvblJlbW92ZT17KCk9PntcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBsaXN0LnNwbGljZShpLDEpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuc2V0U3RhdGUoe2V4cGlyZWQ6IGxpc3R9KTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBDb250ZW50QXJlbmEuQ29udGVudEFwaS5yZW1vdmVMaXN0aW5nKGxpc3RpbmcuY3VzdG9tSWQpXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9fVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgb25BcmNoaXZlPXsoKT0+e1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGxpc3Quc3BsaWNlKGksMSk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5zZXRTdGF0ZSh7ZXhwaXJlZDogbGlzdH0pO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIENvbnRlbnRBcmVuYS5Db250ZW50QXBpLmFyY2hpdmVMaXN0aW5nKGxpc3RpbmcuY3VzdG9tSWQpXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9fVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgb25EdXBsaWNhdGU9e3RoaXMuZHVwbGljYXRlfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgey4uLmxpc3Rpbmd9Lz5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9KVxuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgICA8L2Rpdj5cblxuICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgIClcbiAgICB9XG59XG5cbk1hbmFnZUxpc3RpbmdzLmNvbnRleHRUeXBlcyA9IHtcbiAgICB0OiBQcm9wVHlwZXMuZnVuYy5pc1JlcXVpcmVkXG59O1xuXG5jb25zdCBtYXBTdGF0ZVRvUHJvcHMgPSAoIHN0YXRlLCBvd25Qcm9wcykgPT4ge1xuICAgIHJldHVybiBzdGF0ZTtcbn07XG5cbmNvbnN0IG1hcERpc3BhdGNoVG9Qcm9wcyA9IGRpc3BhdGNoID0+IHtcbiAgICByZXR1cm4ge1xuICAgICAgICB1cGRhdGVQcm9maWxlIDogcHJvZmlsZSA9PmRpc3BhdGNoKHVwZGF0ZVByb2ZpbGUocHJvZmlsZSkpLFxuICAgIH1cbn07XG5cblxuZXhwb3J0IGRlZmF1bHQgY29ubmVjdChcbiAgICBtYXBTdGF0ZVRvUHJvcHMsXG4gICAgbWFwRGlzcGF0Y2hUb1Byb3BzXG4pKE1hbmFnZUxpc3RpbmdzKVxuXG5cbi8vIFdFQlBBQ0sgRk9PVEVSIC8vXG4vLyAuL3NyYy9BcHBCdW5kbGUvUmVzb3VyY2VzL3B1YmxpYy9qYXZhc2NyaXB0L21hbmFnZS9jb250YWluZXJzL01hbmFnZUxpc3RpbmdzLmpzIiwiaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCB7IGNvbm5lY3QgfSBmcm9tIFwicmVhY3QtcmVkdXhcIjtcbmltcG9ydCB7Z2V0RnVsbE5hbWUsIGdvVG9MaXN0aW5nLCBsaW1pdFRleHR9IGZyb20gXCIuLi8uLi9tYWluL2FjdGlvbnMvdXRpbHNcIjtcbmltcG9ydCBNb21lbnQgZnJvbSBcIm1vbWVudC9tb21lbnRcIjtcbmltcG9ydCB7UHJvcFR5cGVzfSBmcm9tIFwicHJvcC10eXBlc1wiO1xuaW1wb3J0IGNuIGZyb20gXCJjbGFzc25hbWVzXCI7XG5cbmNsYXNzIE1lc3NhZ2VzIGV4dGVuZHMgUmVhY3QuQ29tcG9uZW50IHtcbiAgICBjb25zdHJ1Y3Rvcihwcm9wcykge1xuICAgICAgICBzdXBlcihwcm9wcyk7XG4gICAgICAgIHRoaXMuc3RhdGUgPSB7XG4gICAgICAgICAgICB0aHJlYWRzIDogW10sXG4gICAgICAgICAgICBsb2FkaW5nVGhyZWFkcyA6IGZhbHNlLFxuICAgICAgICAgICAgbG9hZGluZ01lc3NhZ2VzIDogZmFsc2UsXG4gICAgICAgICAgICBzZWxlY3RlZFRocmVhZCA6IG51bGwsXG4gICAgICAgICAgICBpbnB1dE1lc3NhZ2UgOiBudWxsLFxuICAgICAgICAgICAgbWVzc2FnZXMgOiBbXVxuICAgICAgICB9O1xuICAgIH1cblxuICAgIGNvbXBvbmVudERpZE1vdW50ICgpIHtcblxuICAgICAgICB0aGlzLnNldFN0YXRlKHtcbiAgICAgICAgICAgIGxvYWRpbmdUaHJlYWRzIDp0cnVlXG4gICAgICAgIH0pO1xuXG5cbiAgICAgICAgQ29udGVudEFyZW5hLkNvbnRlbnRBcGkuZ2V0VGhyZWFkcygpLmRvbmUocj0+e1xuXG4gICAgICAgICAgICBsZXQgc2VsZWN0ZWRUaHJlYWQ7XG5cbiAgICAgICAgICAgIHIuc29ydCgoYSwgYikgPT4ge1xuICAgICAgICAgICAgICAgIGxldCBhRGF0ZSA9IE1vbWVudChhLmxhc3RNZXNzYWdlRGF0ZSk7XG4gICAgICAgICAgICAgICAgbGV0IGJEYXRlID0gTW9tZW50KGIubGFzdE1lc3NhZ2VEYXRlKTtcbiAgICAgICAgICAgICAgICByZXR1cm4gKGFEYXRlID4gYkRhdGUpID8gMSA6ICgoYkRhdGUgPiBhLmJEYXRlKSA/IC0xIDogMClcbiAgICAgICAgICAgIH0pLnJldmVyc2UoKTtcblxuICAgICAgICAgICAgaWYgKHRoaXMucHJvcHMubWF0Y2gucGFyYW1zLmN1c3RvbUlkKXtcbiAgICAgICAgICAgICAgICBzZWxlY3RlZFRocmVhZCA9IHIuZmlsdGVyKHQ9PnQuY3VzdG9tSWQgPT09IHRoaXMucHJvcHMubWF0Y2gucGFyYW1zLmN1c3RvbUlkKVswXTtcbiAgICAgICAgICAgIH0gZWxzZSBpZiAoci5sZW5ndGggPiAwKSB7XG4gICAgICAgICAgICAgICAgc2VsZWN0ZWRUaHJlYWQgPSAgclswXSA7XG4gICAgICAgICAgICB9XG5cblxuICAgICAgICAgICAgdGhpcy5zZXRTdGF0ZSh7XG4gICAgICAgICAgICAgICAgdGhyZWFkcyA6IHIsXG4gICAgICAgICAgICAgICAgc2VsZWN0ZWRUaHJlYWQgOiBzZWxlY3RlZFRocmVhZCxcbiAgICAgICAgICAgICAgICBsb2FkaW5nVGhyZWFkcyA6ZmFsc2VcbiAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgdGhpcy51cGRhdGVNZXNzYWdlcygpO1xuICAgICAgICB9KTtcbiAgICB9XG5cbiAgICBzZWxlY3RUaHJlYWQgPSAoc2VsZWN0ZWRUaHJlYWQpID0+IHtcbiAgICAgICAgY29uc3Qge2hpc3Rvcnl9ID0gdGhpcy5wcm9wcztcblxuICAgICAgICBoaXN0b3J5LnB1c2goXCIvbWVzc2FnZXMvXCIgKyBzZWxlY3RlZFRocmVhZC5jdXN0b21JZCk7XG5cbiAgICB9O1xuXG4gICAgdXBkYXRlTWVzc2FnZXMgPSAodGhyZWFkKSA9PiB7XG4gICAgICAgIGxldCBzZWxlY3RlZFRocmVhZCA9IHRocmVhZCB8fCB0aGlzLnN0YXRlLnNlbGVjdGVkVGhyZWFkO1xuXG4gICAgICAgIGlmICghc2VsZWN0ZWRUaHJlYWQpIHJldHVybjtcblxuICAgICAgICB0aGlzLnNldFN0YXRlKHtcbiAgICAgICAgICAgIGxvYWRpbmdNZXNzYWdlcyA6dHJ1ZSxcbiAgICAgICAgICAgIG1lc3NhZ2VzOiBbXVxuICAgICAgICB9KTtcblxuICAgICAgICBDb250ZW50QXJlbmEuQ29udGVudEFwaS5nZXRUaHJlYWQoc2VsZWN0ZWRUaHJlYWQuY3VzdG9tSWQpLmRvbmUocj0+e1xuICAgICAgICAgICAgdGhpcy5zZXRTdGF0ZSh7XG4gICAgICAgICAgICAgICAgbG9hZGluZ01lc3NhZ2VzIDpmYWxzZSxcbiAgICAgICAgICAgICAgICBtZXNzYWdlcyA6IHJcbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9KTtcbiAgICB9O1xuXG4gICAgc2VuZCA9ICgpID0+IHtcblxuICAgICAgICBjb25zdCB7XG4gICAgICAgICAgICBzZWxlY3RlZFRocmVhZCxcbiAgICAgICAgICAgIGlucHV0TWVzc2FnZSxcbiAgICAgICAgICAgIG1lc3NhZ2VzXG4gICAgICAgIH0gPSB0aGlzLnN0YXRlO1xuXG4gICAgICAgIGxldCBtZXNzYWdlID0ge1xuICAgICAgICAgICAgY29udGVudCA6IGlucHV0TWVzc2FnZSxcbiAgICAgICAgICAgIHRocmVhZCA6IHNlbGVjdGVkVGhyZWFkLmlkLFxuICAgICAgICAgICAgbGlzdGluZyA6IHNlbGVjdGVkVGhyZWFkLmxpc3RpbmcuaWRcbiAgICAgICAgfTtcblxuICAgICAgICB0aGlzLnNldFN0YXRlKHtpbnB1dE1lc3NhZ2UgOiBcIlwiLCBzYXZpbmcgOiB0cnVlfSk7XG5cbiAgICAgICAgQ29udGVudEFyZW5hLkNvbnRlbnRBcGkuc2VuZE1lc3NhZ2UobWVzc2FnZSkuZG9uZShyPT57XG4gICAgICAgICAgICB0aGlzLnNldFN0YXRlKHtzYXZpbmcgOiBmYWxzZSwgc2hvd1N1Y2Nlc3MgOiB0cnVlLCAgbWVzc2FnZXM6IFsuLi5tZXNzYWdlcywgcl19KVxuICAgICAgICB9KTtcbiAgICB9O1xuXG4gICAgcmVuZGVyICgpIHtcbiAgICAgICAgY29uc3Qge1xuICAgICAgICAgICAgbG9hZGluZ1RocmVhZHMsXG4gICAgICAgICAgICBsb2FkaW5nTWVzc2FnZXMsXG4gICAgICAgICAgICBzZWxlY3RlZFRocmVhZCxcbiAgICAgICAgICAgIHRocmVhZHMsXG4gICAgICAgICAgICBpbnB1dE1lc3NhZ2UsXG4gICAgICAgICAgICBtZXNzYWdlcyxcbiAgICAgICAgICAgIHNhdmluZ1xuICAgICAgICB9ID0gdGhpcy5zdGF0ZTtcblxuICAgICAgICBjb25zdCB7IHVzZXIgfSA9IHRoaXMucHJvcHM7XG5cbiAgICAgICAgcmV0dXJuIChcbiAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPXtcIm1lc3NhZ2VzLWNvbnRhaW5lclwifT5cbiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT17XCJ0aHJlYWRzXCJ9PlxuICAgICAgICAgICAgICAgICAgICB7bG9hZGluZ1RocmVhZHMgJiYgdGhyZWFkcy5sZW5ndGggPT09MCAmJiA8aSBjbGFzc05hbWU9XCJmYSBmYS1jb2cgZmEtc3BpblwiIC8+IH1cbiAgICAgICAgICAgICAgICAgICAgeyFsb2FkaW5nVGhyZWFkcyAmJiB0aHJlYWRzLmxlbmd0aCA9PT0wICYmIDxkaXY+XG4gICAgICAgICAgICAgICAgICAgICAgICB7dGhpcy5jb250ZXh0LnQoXCJNRVNTQUdFU19OT19USFJFQURTX1lFVFwiKX1cbiAgICAgICAgICAgICAgICAgICAgPC9kaXY+IH1cbiAgICAgICAgICAgICAgICAgICAgeyFsb2FkaW5nVGhyZWFkcyAmJiB0aHJlYWRzLm1hcCgodCxpKT0+e1xuICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIDxkaXYgY2xhc3NOYW1lPXsoc2VsZWN0ZWRUaHJlYWQgJiYgc2VsZWN0ZWRUaHJlYWQuaWQgPT09IHQuaWQpID8gXCJ0aHJlYWQgdGhyZWFkLXNlbGVjdGVkXCIgOiBcInRocmVhZFwifVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAga2V5PXtcInRocmVhZC1cIiArIGl9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBvbkNsaWNrPXsoKT0+e3RoaXMuc2VsZWN0VGhyZWFkKHQpfX0+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9e1wiZGF0ZVwifT5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAge3QubGFzdE1lc3NhZ2VEYXRlICYmIE1vbWVudCh0Lmxhc3RNZXNzYWdlRGF0ZSkuZm9ybWF0KCdZWVlZL01NL0REJyl9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9e1wibGlzdGluZy1uYW1lXCJ9PlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB7dC5saXN0aW5nLm5hbWV9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9e1wiY29tcGFueVwifT5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAge3Qub3Bwb3NpdGVQYXJ0eS5sZWdhbE5hbWV9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9e1widXNlclwifT5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAge3QubGFzdE1lc3NhZ2VVc2VyID8gZ2V0RnVsbE5hbWUodC5sYXN0TWVzc2FnZVVzZXIpIDogJycgfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPXtcImxhc3QtbWVzc2FnZVwifT5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAge3QubGFzdE1lc3NhZ2VDb250ZW50ICYmIGxpbWl0VGV4dCh0Lmxhc3RNZXNzYWdlQ29udGVudCl9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgICAgICAgfSl9XG4gICAgICAgICAgICAgICAgPC9kaXY+XG5cbiAgICAgICAgICAgICAgICB7c2VsZWN0ZWRUaHJlYWQgJiYgPGRpdiBjbGFzc05hbWU9XCJ0aHJlYWQtY29udGVudFwiPlxuICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT17XCJ0aHJlYWQtdGl0bGVcIn0+XG4gICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT17XCJsaXN0aW5nLW5hbWVcIn0gb25DbGljaz17KCk9Pntnb1RvTGlzdGluZyhzZWxlY3RlZFRocmVhZC5saXN0aW5nLmN1c3RvbUlkLCB0cnVlKX19PlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHtzZWxlY3RlZFRocmVhZC5saXN0aW5nLm5hbWV9XG4gICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiY29tcGFueS1uYW1lXCI+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAge3NlbGVjdGVkVGhyZWFkLm9wcG9zaXRlUGFydHkubGVnYWxOYW1lfVxuICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT17XCJtZXNzYWdlc1wifT5cbiAgICAgICAgICAgICAgICAgICAgICAgIHtsb2FkaW5nTWVzc2FnZXMgJiYgbWVzc2FnZXMubGVuZ3RoID09PTAgJiYgPGRpdj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aSBjbGFzc05hbWU9XCJmYSBmYS1jb2cgZmEtc3BpblwiIC8+XG4gICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4gfVxuICAgICAgICAgICAgICAgICAgICAgICAgeyFsb2FkaW5nTWVzc2FnZXMgJiYgbWVzc2FnZXMubWFwKChtLCBpKT0+e1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbnN0IG93bkNvbXBhbnlNZXNzYWdlID0gdXNlci5jb21wYW55LmlkID09PSBtLnNlbmRlci5jb21wYW55LmlkO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbnN0IG93bk1lc3NhZ2UgPSB1c2VyLmlkID09PSBtLnNlbmRlci5pZDtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gPGRpdiBrZXk9e2l9IGNsYXNzTmFtZT17Y24oXCJtZXNzYWdlXCIsIHsgXCJvd24tbWVzc2FnZVwiOiBvd25NZXNzYWdlLCAnb3duLWNvbXBhbnknOiBvd25Db21wYW55TWVzc2FnZSB9KX0+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPXtcIm1lc3NhZ2Utc2VuZGVyXCJ9PlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAge2dldEZ1bGxOYW1lKG0uc2VuZGVyKX1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPXtcIm1lc3NhZ2UtY29udGVudFwifT5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHttLmNvbnRlbnR9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT17XCJtZXNzYWdlLWRhdGVcIn0+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB7TW9tZW50KG0uY3JlYXRlZEF0KS5mb3JtYXQoJ1lZWVkvTU0vREQgSEg6bW0nKX1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgICAgICAgICAgICB9KX1cblxuICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9e1wibWVzc2FnZS1pbnB1dFwifT5cbiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPXtcIm1lc3NhZ2UtaW5wdXQtdGl0bGVcIn0+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAge3RoaXMuY29udGV4dC50KFwiTUVTU0FHRVNfVElUTEVcIil9XG4gICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgICAgICAgICAgIDx0ZXh0YXJlYVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhbHVlPXtpbnB1dE1lc3NhZ2V9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgb25DaGFuZ2U9eyhlKT0+e3RoaXMuc2V0U3RhdGUoe2lucHV0TWVzc2FnZSA6IGUudGFyZ2V0LnZhbHVlfSl9fVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNsYXNzTmFtZT17XCJtZXNzYWdlLWNvbnRlbnRcIn1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBwbGFjZWhvbGRlcj17dGhpcy5jb250ZXh0LnQoXCJNRVNTQUdFU19QTEFDRUhPTERFUl9XUklURVwiKX0vPlxuICAgICAgICAgICAgICAgICAgICAgICAgPGJ1dHRvbiBjbGFzc05hbWU9e1wic3RhbmRhcmQtYnV0dG9uXCJ9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG9uQ2xpY2s9e3RoaXMuc2VuZH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZGlzYWJsZWQ9eyFpbnB1dE1lc3NhZ2V8fCBpbnB1dE1lc3NhZ2UgPT09IFwiXCIgfHwgc2F2aW5nfT5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB7IXNhdmluZyAmJiB0aGlzLmNvbnRleHQudChcIk1FU1NBR0VTX1NFTkRfQlVUVE9OXCIpfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHtzYXZpbmcgJiYgPGkgY2xhc3NOYW1lPVwiZmEgZmEtY29nIGZhLXNwaW5cIi8+fVxuICAgICAgICAgICAgICAgICAgICAgICAgPC9idXR0b24+XG4gICAgICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICAgIDwvZGl2Pn1cblxuICAgICAgICAgICAgICAgIHshc2VsZWN0ZWRUaHJlYWQgJiYgPGRpdj5cbiAgICAgICAgICAgICAgICAgICAge3RoaXMuY29udGV4dC50KFwiTUVTU0FHRVNfTk9fVEhSRUFEX1NFTEVDVEVEXCIpfVxuICAgICAgICAgICAgICAgIDwvZGl2PiB9XG4gICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgKVxuICAgIH1cbn1cblxuTWVzc2FnZXMuY29udGV4dFR5cGVzID0ge1xuICAgIHQ6IFByb3BUeXBlcy5mdW5jLmlzUmVxdWlyZWRcbn07XG5cbmNvbnN0IG1hcFN0YXRlVG9Qcm9wcyA9ICggc3RhdGUsIG93blByb3BzKSA9PiB7XG4gICAgcmV0dXJuIHN0YXRlO1xufTtcblxuY29uc3QgbWFwRGlzcGF0Y2hUb1Byb3BzID0gZGlzcGF0Y2ggPT4ge1xuICAgIHJldHVybiB7XG4gICAgfVxufTtcblxuXG5leHBvcnQgZGVmYXVsdCBjb25uZWN0KFxuICAgIG1hcFN0YXRlVG9Qcm9wcyxcbiAgICBtYXBEaXNwYXRjaFRvUHJvcHNcbikoTWVzc2FnZXMpXG5cblxuLy8gV0VCUEFDSyBGT09URVIgLy9cbi8vIC4vc3JjL0FwcEJ1bmRsZS9SZXNvdXJjZXMvcHVibGljL2phdmFzY3JpcHQvbWFuYWdlL2NvbnRhaW5lcnMvTWVzc2FnZXMuanMiLCJpbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xuaW1wb3J0IHsgY29ubmVjdCB9IGZyb20gXCJyZWFjdC1yZWR1eFwiO1xuaW1wb3J0IENvbnRlbnRMaXN0aW5nUGVuZGluZ0JpZCBmcm9tICcuLi8uLi9tYWluL2NvbXBvbmVudHMvQ29udGVudExpc3RpbmdQZW5kaW5nQmlkJztcbmltcG9ydCB7Z29Ub30gZnJvbSBcIi4uLy4uL21haW4vYWN0aW9ucy91dGlsc1wiO1xuaW1wb3J0IHtQcm9wVHlwZXN9IGZyb20gXCJwcm9wLXR5cGVzXCI7XG5pbXBvcnQgQ29udGVudExpc3RpbmcgZnJvbSBcIi4uLy4uL21haW4vY29tcG9uZW50cy9Db250ZW50TGlzdGluZ1wiO1xuXG5jbGFzcyBQZW5kaW5nRGVhbHMgZXh0ZW5kcyBSZWFjdC5Db21wb25lbnQge1xuICAgIGNvbnN0cnVjdG9yKHByb3BzKSB7XG4gICAgICAgIHN1cGVyKHByb3BzKTtcbiAgICAgICAgdGhpcy5zdGF0ZSA9IHtcbiAgICAgICAgICAgIGxvYWRpbmcgOiBmYWxzZSxcbiAgICAgICAgICAgIGxvYWRpbmdEZWNsaW5lZCA6IGZhbHNlLFxuICAgICAgICAgICAgYmlkcyA6IFtdLFxuICAgICAgICAgICAgZGVjbGluZWRCaWRzOiBbXSxcbiAgICAgICAgICAgIHRhYiA6IHByb3BzLm1hdGNoLnBhcmFtcy50YWIgfHwgXCJhY3RpdmViaWRzXCJcblxuICAgICAgICB9O1xuICAgICAgICB0aGlzLmJ1bGxldEljb24gPSBhc3NldHNCYXNlRGlyICsgXCJhcHAvaW1hZ2VzL2J1bGxldC5wbmdcIjtcbiAgICAgICAgdGhpcy5hY3RpdmVCdWxsZXRJY29uID0gYXNzZXRzQmFzZURpciArIFwiYXBwL2ltYWdlcy9hY3RpdmVfYnVsbGV0LnBuZ1wiO1xuICAgIH1cblxuICAgIGNvbXBvbmVudERpZE1vdW50ICgpIHtcbiAgICAgICAgdGhpcy51cGRhdGUoKTtcbiAgICB9XG5cbiAgICBzZWxlY3RMaXN0aW5nID0gKGlkKSA9PiB7XG4gICAgICAgIGdvVG8oXCJsaXN0aW5nL1wiICsgaWQsIHRydWUpO1xuICAgIH07XG5cbiAgICB1cGRhdGUgPSAoKSA9PiB7XG4gICAgICAgIGxldCBfdGhpcyA9IHRoaXM7XG4gICAgICAgIHRoaXMuc2V0U3RhdGUoe2xvYWRpbmc6dHJ1ZSwgbG9hZGluZ0RlY2xpbmVkIDogdHJ1ZX0pO1xuICAgICAgICBDb250ZW50QXJlbmEuQ29udGVudEFwaS5nZXRQZW5kaW5nRGVhbHMoKS5kb25lKChiaWRzKSA9PiB7XG4gICAgICAgICAgICBfdGhpcy5zZXRTdGF0ZSh7YmlkczogYmlkcywgbG9hZGluZyA6IGZhbHNlfSk7XG4gICAgICAgIH0pO1xuXG4gICAgICAgIENvbnRlbnRBcmVuYS5Db250ZW50QXBpLmdldFJlamVjdGVkRGVhbHMoKS5kb25lKChkZWNsaW5lZEJpZHMpID0+IHtcbiAgICAgICAgICAgIF90aGlzLnNldFN0YXRlKHtkZWNsaW5lZEJpZHM6IGRlY2xpbmVkQmlkcywgbG9hZGluZ0RlY2xpbmVkIDogZmFsc2V9KTtcbiAgICAgICAgfSk7XG4gICAgfTtcblxuICAgIGRlbGV0ZUJpZCA9IChpZCkgPT4ge1xuICAgICAgICBDb250ZW50QXJlbmEuQ29udGVudEFwaS5yZW1vdmVCaWQoe2lkOmlkfSkuZG9uZSgocik9PntcbiAgICAgICAgICAgIHRoaXMudXBkYXRlKCk7XG4gICAgICAgIH0pO1xuICAgIH07XG5cbiAgICByZW1vdmUgPSAoIGN1c3RvbUlkKSA9PiB7XG4gICAgICAgIHRoaXMuc2V0U3RhdGUoe1xuICAgICAgICAgICAgYmlkcyA6IHRoaXMuc3RhdGUuYmlkcy5maWx0ZXIobCA9PiBsLmN1c3RvbUlkICE9PSBjdXN0b21JZClcbiAgICAgICAgfSk7XG4gICAgfTtcblxuICAgIHJlbmRlciAoKSB7XG4gICAgICAgIGNvbnN0IHsgbG9hZGluZywgYmlkcywgdGFiLCBkZWNsaW5lZEJpZHMsIGxvYWRpbmdEZWNsaW5lZCB9ID0gdGhpcy5zdGF0ZTtcbiAgICAgICAgY29uc3QgeyBoaXN0b3J5IH0gPSB0aGlzLnByb3BzO1xuICAgICAgICBjb25zdCBkZWZhdWx0UmlnaHRzUGFja2FnZSA9IEpTT04ucGFyc2UodGhpcy5wcm9wcy5yaWdodHMpXG5cbiAgICAgICAgcmV0dXJuIChcbiAgICAgICAgICAgIDxkaXYgc3R5bGU9e3tcbiAgICAgICAgICAgICAgICBkaXNwbGF5OiAnZmxleCcsXG4gICAgICAgICAgICAgICAgZmxleERpcmVjdGlvbjogJ2NvbHVtbicsXG4gICAgICAgICAgICAgICAgZmxleDogMVxuICAgICAgICAgICAgfX0+XG4gICAgICAgICAgICAgICAgPGRpdiBzdHlsZT17e1xuICAgICAgICAgICAgICAgICAgICBkaXNwbGF5OiAnZmxleCcsXG4gICAgICAgICAgICAgICAgICAgIHBhZGRpbmc6ICcwIDAgMjBweCcsXG4gICAgICAgICAgICAgICAgICAgIGNvbG9yOiAnIzRGNEY0RicsXG4gICAgICAgICAgICAgICAgICAgIGZvbnRTaXplOiAxOCxcbiAgICAgICAgICAgICAgICAgICAgZm9udFdlaWdodDogNjAwXG4gICAgICAgICAgICAgICAgfX0+XG4gICAgICAgICAgICAgICAgICAgIDxkaXYgc3R5bGU9e3ttYXJnaW46JzAgMjBweCd9fT5CaWRzPC9kaXY+XG4gICAgICAgICAgICAgICAgICAgIDxkaXYgc3R5bGU9e3ttYXJnaW46JzAgMjBweCcgLCBjdXJzb3I6ICdwb2ludGVyJ319XG4gICAgICAgICAgICAgICAgICAgICAgICAgb25DbGljaz17KCk9PntcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaGlzdG9yeS5wdXNoKCcvYmlkcy9hY3RpdmViaWRzJylcbiAgICAgICAgICAgICAgICAgICAgICAgICB9fT5cbiAgICAgICAgICAgICAgICAgICAgICAgIHt0YWIgPT09IFwiYWN0aXZlYmlkc1wiICYmIDxpbWcgIHN0eWxlPXt7bWFyZ2luOicwcHggMTBweCAzcHgnfX0gc3JjPXt0aGlzLmFjdGl2ZUJ1bGxldEljb259IC8+fVxuICAgICAgICAgICAgICAgICAgICAgICAge3RhYiAhPT0gXCJhY3RpdmViaWRzXCIgJiYgPGltZyAgc3R5bGU9e3ttYXJnaW46JzBweCAxMHB4IDNweCd9fSBzcmM9e3RoaXMuYnVsbGV0SWNvbn0gLz59XG4gICAgICAgICAgICAgICAgICAgICAgICB7dGhpcy5jb250ZXh0LnQoXCJQRU5ESU5HX0JJRFNfRklMVEVSX0FDVElWRVwiKX1cbiAgICAgICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgICAgICAgIDxkaXYgc3R5bGU9e3ttYXJnaW46JzAgMjBweCcsIGN1cnNvcjogJ3BvaW50ZXInfX1cbiAgICAgICAgICAgICAgICAgICAgICAgICBvbkNsaWNrPXsoKT0+e1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICBoaXN0b3J5LnB1c2goJy9iaWRzL2RlY2xpbmVkYmlkcycpXG4gICAgICAgICAgICAgICAgICAgICAgICAgfX0+XG4gICAgICAgICAgICAgICAgICAgICAgICB7dGFiID09PSBcImRlY2xpbmVkYmlkc1wiICYmIDxpbWcgIHN0eWxlPXt7bWFyZ2luOicwcHggMTBweCAzcHgnfX0gc3JjPXt0aGlzLmFjdGl2ZUJ1bGxldEljb259IC8+fVxuICAgICAgICAgICAgICAgICAgICAgICAge3RhYiAhPT0gXCJkZWNsaW5lZGJpZHNcIiAmJiA8aW1nICBzdHlsZT17e21hcmdpbjonMHB4IDEwcHggM3B4J319IHNyYz17dGhpcy5idWxsZXRJY29ufSAvPn1cbiAgICAgICAgICAgICAgICAgICAgICAgIHt0aGlzLmNvbnRleHQudChcIlBFTkRJTkdfQklEU19GSUxURVJfREVDTElORURcIil9XG4gICAgICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICAgIDwvZGl2PlxuXG4gICAgICAgICAgICAgICAge3RhYiA9PT0gXCJhY3RpdmViaWRzXCIgJiYgKFxuICAgICAgICAgICAgICAgICAgICBiaWRzLmxlbmd0aCA+IDAgPyAoXG4gICAgICAgICAgICAgICAgICAgICAgICBiaWRzLm1hcCgoYmlkLCBpKSA9PiB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIChcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPENvbnRlbnRMaXN0aW5nXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBvblNlbGVjdD17dGhpcy5zZWxlY3RMaXN0aW5nfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgb25EZWxldGU9e3RoaXMuZGVsZXRlQmlkfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAga2V5PXtpICsgXCItXCIgKyBiaWQuY29udGVudC5jdXN0b21JZH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGJpZD17YmlkfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZGVmYXVsdFJpZ2h0c1BhY2thZ2U9e2RlZmF1bHRSaWdodHNQYWNrYWdlfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgey4uLmJpZC5jb250ZW50fVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAvPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIClcbiAgICAgICAgICAgICAgICAgICAgICAgIH0pXG4gICAgICAgICAgICAgICAgICAgICkgOiAoXG4gICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cIm1hbmFnZXItY29udGVudC1tZXNzYWdlXCI+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAge2xvYWRpbmcgJiYgPGRpdiBjbGFzc05hbWU9XCJiaWctc3Bpbm5lclwiPjxpIGNsYXNzTmFtZT1cImZhIGZhLWNvZyBmYS1zcGluXCIvPjwvZGl2Pn1cblxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHshbG9hZGluZyAmJiAoXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiYmlnLXNwaW5uZXJcIiBzdHlsZT17e2ZvbnRTaXplOiAzMH19PlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAge3RoaXMuY29udGV4dC50KFwiUEVORElOR19CSURTX01BREVfRU1QVFlfTUVTU0FHRVwiKX1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgKX1cbiAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICAgICAgICApXG4gICAgICAgICAgICAgICAgKX1cblxuICAgICAgICAgICAgICAgIHt0YWIgPT09IFwiZGVjbGluZWRiaWRzXCIgJiYgKFxuICAgICAgICAgICAgICAgICAgICBkZWNsaW5lZEJpZHMubGVuZ3RoID4gMCA/IChcbiAgICAgICAgICAgICAgICAgICAgICAgIGRlY2xpbmVkQmlkcy5tYXAoKGJpZCwgaSkgPT4ge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiAoXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxDb250ZW50TGlzdGluZ1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgb25TZWxlY3Q9e3RoaXMuc2VsZWN0TGlzdGluZ31cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG9uRGVsZXRlPXt0aGlzLmRlbGV0ZUJpZH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGtleT17aSArIFwiLVwiICsgYmlkLmNvbnRlbnQuY3VzdG9tSWR9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBiaWQ9e2JpZH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRlY2xpbmVkPXt0cnVlfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZGVmYXVsdFJpZ2h0c1BhY2thZ2U9e2RlZmF1bHRSaWdodHNQYWNrYWdlfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgey4uLmJpZC5jb250ZW50fVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAvPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIClcbiAgICAgICAgICAgICAgICAgICAgICAgIH0pXG4gICAgICAgICAgICAgICAgICAgICkgOiAoXG4gICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cIm1hbmFnZXItY29udGVudC1tZXNzYWdlXCI+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAge2xvYWRpbmdEZWNsaW5lZCAmJiA8ZGl2IGNsYXNzTmFtZT1cImJpZy1zcGlubmVyXCI+PGkgY2xhc3NOYW1lPVwiZmEgZmEtY29nIGZhLXNwaW5cIi8+PC9kaXY+fVxuXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgeyFsb2FkaW5nRGVjbGluZWQgJiYgKFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImJpZy1zcGlubmVyXCIgc3R5bGU9e3tmb250U2l6ZTogMzB9fT5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHt0aGlzLmNvbnRleHQudChcIlBFTkRJTkdfQklEU19NQURFX0RFQ0xJTkVEX0VNUFRZX01FU1NBR0VcIil9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICl9XG4gICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgICAgICAgKVxuICAgICAgICAgICAgICAgICl9XG5cbiAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICApXG4gICAgfVxufVxuXG5QZW5kaW5nRGVhbHMuY29udGV4dFR5cGVzID0ge1xuICAgIHQ6IFByb3BUeXBlcy5mdW5jLmlzUmVxdWlyZWRcbn07XG5cbmNvbnN0IG1hcFN0YXRlVG9Qcm9wcyA9ICggc3RhdGUsIG93blByb3BzKSA9PiB7XG4gICAgcmV0dXJuIHN0YXRlO1xufTtcblxuY29uc3QgbWFwRGlzcGF0Y2hUb1Byb3BzID0gZGlzcGF0Y2ggPT4ge1xuICAgIHJldHVybiB7XG4gICAgfVxufTtcblxuXG5leHBvcnQgZGVmYXVsdCBjb25uZWN0KFxuICAgIG1hcFN0YXRlVG9Qcm9wcyxcbiAgICBtYXBEaXNwYXRjaFRvUHJvcHNcbikoUGVuZGluZ0RlYWxzKVxuXG5cbi8vIFdFQlBBQ0sgRk9PVEVSIC8vXG4vLyAuL3NyYy9BcHBCdW5kbGUvUmVzb3VyY2VzL3B1YmxpYy9qYXZhc2NyaXB0L21hbmFnZS9jb250YWluZXJzL1BlbmRpbmdEZWFscy5qcyIsImltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgeyBjb25uZWN0IH0gZnJvbSBcInJlYWN0LXJlZHV4XCI7XG5pbXBvcnQgUmVhY3RUYWJsZSBmcm9tIFwicmVhY3QtdGFibGVcIjtcbmltcG9ydCB7Z2V0Q3VycmVuY3lTeW1ib2wsIGdldEZ1bGxOYW1lLCBnb1RvLCBsaW1pdFRleHR9IGZyb20gXCIuLi8uLi9tYWluL2FjdGlvbnMvdXRpbHNcIjtcbmltcG9ydCBDb3VudHJ5U2VsZWN0b3IgZnJvbSAnLi4vLi4vbWFpbi9jb21wb25lbnRzL0NvdW50cnlTZWxlY3RvcidcbmltcG9ydCBNb21lbnQgZnJvbSBcIm1vbWVudC9tb21lbnRcIjtcbmltcG9ydCB7Ymx1ZUNoZWNrSWNvbiwgY2FuY2VsSWNvbiwgZWRpdEljb24sIFNwaW5uZXJ9IGZyb20gXCIuLi8uLi9tYWluL2NvbXBvbmVudHMvSWNvbnNcIjtcbmltcG9ydCB7UHJvcFR5cGVzfSBmcm9tIFwicHJvcC10eXBlc1wiO1xuXG5jbGFzcyBTZXR0aW5ncyBleHRlbmRzIFJlYWN0LkNvbXBvbmVudCB7XG4gICAgY29uc3RydWN0b3IocHJvcHMpIHtcbiAgICAgICAgc3VwZXIocHJvcHMpO1xuICAgICAgICB0aGlzLnN0YXRlID0ge1xuICAgICAgICAgICAgbG9hZGluZyA6IGZhbHNlLFxuICAgICAgICAgICAgdXBkYXRpbmdDb21wYW55IDogZmFsc2UsXG4gICAgICAgICAgICB1cGRhdGluZ1VzZXIgOiBmYWxzZSxcbiAgICAgICAgICAgIHVwZGF0aW5nUGFzc3dvcmQgOiBmYWxzZSxcbiAgICAgICAgICAgIGxvYWRpbmdDb21wYW55VXNlcnMgOiBmYWxzZSxcbiAgICAgICAgICAgIGVkaXRQZXJzb25hbEluZm86IHByb3BzLm1hdGNoLnBhcmFtcy5maWx0ZXIgPT09IFwiZWRpdHBlcnNvbmFsXCIsXG4gICAgICAgICAgICBlZGl0Q29tcGFueUluZm8gOiBwcm9wcy5tYXRjaC5wYXJhbXMuZmlsdGVyID09PSBcImVkaXRjb21wYW55XCIsXG4gICAgICAgICAgICBjb21wYW55VXNlcnMgOiBbXSxcbiAgICAgICAgICAgIHVzZXIgOiB7fVxuICAgICAgICB9O1xuICAgIH1cblxuICAgIGNvbXBvbmVudERpZE1vdW50ICgpIHtcbiAgICAgICAgdGhpcy5zZXRTdGF0ZSh7bG9hZGluZzp0cnVlLCBsb2FkaW5nQ29tcGFueVVzZXJzOiB0cnVlfSk7XG5cbiAgICAgICAgQ29udGVudEFyZW5hLkNvbnRlbnRBcGkuZ2V0VXNlckluZm8oKS5kb25lKHVzZXI9PntcbiAgICAgICAgICAgIHRoaXMuc2V0U3RhdGUoe2xvYWRpbmc6ZmFsc2UsIHVzZXIgOiB1c2VyfSk7XG4gICAgICAgIH0pO1xuXG4gICAgICAgIENvbnRlbnRBcmVuYS5Db250ZW50QXBpLmdldENvbXBhbnlVc2VycygpLmRvbmUoY29tcGFueVVzZXJzPT57XG4gICAgICAgICAgICB0aGlzLnNldFN0YXRlKHtsb2FkaW5nQ29tcGFueVVzZXJzOmZhbHNlLCBjb21wYW55VXNlcnMgOiBjb21wYW55VXNlcnN9KTtcbiAgICAgICAgfSk7XG4gICAgfVxuXG4gICAgdXBkYXRlQ29tcGFueSA9ICgpID0+IHtcbiAgICAgICAgY29uc3Qge2hpc3Rvcnl9ID0gdGhpcy5wcm9wcztcbiAgICAgICAgdGhpcy5zZXRTdGF0ZSh7dXBkYXRpbmdDb21wYW55OnRydWUsIGVkaXRDb21wYW55SW5mbzogZmFsc2V9KTtcbiAgICAgICAgQ29udGVudEFyZW5hLkNvbnRlbnRBcGkudXBkYXRlQ29tcGFueSh0aGlzLnN0YXRlLnVzZXIuY29tcGFueSkuZG9uZSgoKT0+e1xuICAgICAgICAgICAgaGlzdG9yeS5wdXNoKFwiL3NldHRpbmdzXCIpO1xuICAgICAgICB9KVxuICAgIH07XG5cbiAgICB1cGRhdGVVc2VyID0gKCkgPT4ge1xuICAgICAgICBjb25zdCB7aGlzdG9yeX0gPSB0aGlzLnByb3BzO1xuICAgICAgICB0aGlzLnNldFN0YXRlKHt1cGRhdGluZ1VzZXI6dHJ1ZSwgZWRpdFBlcnNvbmFsSW5mbzogZmFsc2V9KTtcbiAgICAgICAgQ29udGVudEFyZW5hLkNvbnRlbnRBcGkudXBkYXRlVXNlcih0aGlzLnN0YXRlLnVzZXIpLmRvbmUoKCk9PntcbiAgICAgICAgICAgIGhpc3RvcnkucHVzaChcIi9zZXR0aW5nc1wiKTtcbiAgICAgICAgfSlcbiAgICB9O1xuXG4gICAgdXBkYXRlUGFzc3dvcmQgPSAoKSA9PiB7XG4gICAgICAgIHRoaXMuc2V0U3RhdGUoe3VwZGF0aW5nUGFzc3dvcmQ6dHJ1ZX0pO1xuICAgICAgICBDb250ZW50QXJlbmEuQ29udGVudEFwaS51cGRhdGVQYXNzd29yZCh7XG4gICAgICAgICAgICBpZCA6IHRoaXMuc3RhdGUudXNlci5pZCxcbiAgICAgICAgICAgIHBhc3N3b3JkIDogdGhpcy5zdGF0ZS5wYXNzd29yZFxuICAgICAgICB9KS5kb25lKCgpPT57XG4gICAgICAgICAgICB0aGlzLnNldFN0YXRlKHtcbiAgICAgICAgICAgICAgICB1cGRhdGluZ1Bhc3N3b3JkOmZhbHNlLFxuICAgICAgICAgICAgICAgIHBhc3N3b3JkIDpudWxsLFxuICAgICAgICAgICAgICAgIHBhc3N3b3JkQ2hlY2sgOiBudWxsLFxuICAgICAgICAgICAgICAgIHBhc3N3b3JkVXBkYXRlZCA6IHRydWVcbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9KVxuICAgIH07XG5cbiAgICB2YWxpZGF0ZSA9IChwYXNzKSA9PiB7XG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICBsZW5ndGggOiAoIHBhc3MubGVuZ3RoID49IDggKSxcbiAgICAgICAgICAgIGRpZ2l0IDogL1xcZC8udGVzdChwYXNzKSxcbiAgICAgICAgICAgIHVwcGVyIDogL1tBLVpdLy50ZXN0KHBhc3MpLFxuICAgICAgICAgICAgc3BlY2lhbCA6IC9bIUAjJCVeJiooKV8rXFwtPVxcW1xcXXt9Oyc6XCJcXFxcfCwuPD5cXC8/XS8udGVzdChwYXNzKSxcbiAgICAgICAgfTtcbiAgICB9O1xuXG4gICAgaW52YWxpZFBhc3N3b3JkID0gKCkgPT4ge1xuICAgICAgICBjb25zdCB7IG9sZFBhc3N3b3JkLCBwYXNzd29yZCwgcGFzc3dvcmRDaGVjayB9ID0gdGhpcy5zdGF0ZTtcblxuICAgICAgICBpZiAoIW9sZFBhc3N3b3JkIHx8ICFwYXNzd29yZCB8fCAgIXBhc3N3b3JkQ2hlY2sgKSByZXR1cm4gdHJ1ZTtcblxuICAgICAgICBsZXQgdmFsaWQgPSB0aGlzLnZhbGlkYXRlKHBhc3N3b3JkKTtcblxuICAgICAgICByZXR1cm4gIHBhc3N3b3JkICE9PSBwYXNzd29yZENoZWNrIHx8XG4gICAgICAgICAgICAgICAgIXZhbGlkLmxlbmd0aCB8fFxuICAgICAgICAgICAgICAgICF2YWxpZC5kaWdpdCB8fFxuICAgICAgICAgICAgICAgICF2YWxpZC51cHBlciB8fFxuICAgICAgICAgICAgICAgICF2YWxpZC5zcGVjaWFsO1xuXG5cbiAgICB9O1xuXG4gICAgcmVuZGVyICgpIHtcblxuICAgICAgICBjb25zdCB7aGlzdG9yeX0gPSB0aGlzLnByb3BzO1xuXG4gICAgICAgIGNvbnN0IHsgbG9hZGluZywgZWRpdFBlcnNvbmFsSW5mbywgZWRpdENvbXBhbnlJbmZvLCBsb2FkaW5nQ29tcGFueVVzZXJzLCBjb21wYW55VXNlcnMsXG4gICAgICAgICAgICB1cGRhdGluZ0NvbXBhbnksIHVwZGF0aW5nVXNlciwgdXBkYXRpbmdQYXNzd29yZCwgcGFzc3dvcmQsIHBhc3N3b3JkQ2hlY2ssIHBhc3N3b3JkVXBkYXRlZCB9ID0gdGhpcy5zdGF0ZTtcbiAgICAgICAgbGV0IHVzZXIgPSB0aGlzLnN0YXRlLnVzZXI7XG5cbiAgICAgICAgbGV0IGNvdW50cnkgPSAodXNlciAmJiB1c2VyLmNvbXBhbnkgJiYgdXNlci5jb21wYW55LmNvdW50cnkpID8ge2xhYmVsOiB1c2VyLmNvbXBhbnkuY291bnRyeS5uYW1lLCB2YWx1ZTogdXNlci5jb21wYW55LmNvdW50cnkubmFtZX0gOiBudWxsO1xuXG4gICAgICAgIHJldHVybiAoXG4gICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT17XCJzZXR0aW5ncy1jb250YWluZXJcIn0+XG4gICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9e1widGl0bGVcIn0+XG4gICAgICAgICAgICAgICAgICAgIHt0aGlzLmNvbnRleHQudChcIlNFVFRJTkdTX1RJVExFX0NPTVBBTllcIil9XG4gICAgICAgICAgICAgICAgICAgIHshZWRpdENvbXBhbnlJbmZvICYmICF1cGRhdGluZ0NvbXBhbnkgJiZcbiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9e1wiZWRpdC1idXR0b25cIn0gb25DbGljaz17ZT0+e1xuICAgICAgICAgICAgICAgICAgICAgICAgaGlzdG9yeS5wdXNoKFwiL3NldHRpbmdzL2VkaXRjb21wYW55XCIpO1xuICAgICAgICAgICAgICAgICAgICB9fT5cbiAgICAgICAgICAgICAgICAgICAgICAgIDxpbWcgc3JjPXtlZGl0SWNvbn0vPlxuICAgICAgICAgICAgICAgICAgICAgICAge3RoaXMuY29udGV4dC50KFwiU0VUVElOR1NfQlVUVE9OX0VESVRcIil9XG4gICAgICAgICAgICAgICAgICAgIDwvZGl2Pn1cbiAgICAgICAgICAgICAgICAgICAge2VkaXRDb21wYW55SW5mbyAmJiAhdXBkYXRpbmdDb21wYW55ICYmIDxkaXYgY2xhc3NOYW1lPXtcImVkaXQtYnV0dG9uXCJ9IG9uQ2xpY2s9e3RoaXMudXBkYXRlQ29tcGFueX0+XG4gICAgICAgICAgICAgICAgICAgICAgICA8aW1nIHNyYz17ZWRpdEljb259Lz5cbiAgICAgICAgICAgICAgICAgICAgICAgIHt0aGlzLmNvbnRleHQudChcIlNFVFRJTkdTX0JVVFRPTl9TQVZFXCIpfVxuICAgICAgICAgICAgICAgICAgICA8L2Rpdj59XG4gICAgICAgICAgICAgICAgICAgIHt1cGRhdGluZ0NvbXBhbnkgJiYgPFNwaW5uZXIvPn1cbiAgICAgICAgICAgICAgICA8L2Rpdj5cblxuICAgICAgICAgICAgICAgIHt1c2VyLmNvbXBhbnkgJiYgPGRpdiBjbGFzc05hbWU9e1wic2V0dGluZ1wifT5cbiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9e1wicm93XCJ9PlxuICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9e1wiaXRlbVwifT5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGFiZWw+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHt0aGlzLmNvbnRleHQudChcIlNFVFRJTkdTX0xBQkVMX0NPTVBBTllfTkFNRVwiKX1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2xhYmVsPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpbnB1dCB2YWx1ZT17dXNlci5jb21wYW55LmxlZ2FsTmFtZX0gZGlzYWJsZWQ9eyFlZGl0Q29tcGFueUluZm99IG9uQ2hhbmdlPXsoZSk9PntcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdXNlci5jb21wYW55LmxlZ2FsTmFtZSA9IGUudGFyZ2V0LnZhbHVlO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0aGlzLnNldFN0YXRlKHt1c2VyfSk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfX0vPlxuICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT17XCJpdGVtXCJ9PlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsYWJlbD5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAge3RoaXMuY29udGV4dC50KFwiU0VUVElOR1NfTEFCRUxfQ09NUEFOWV9SRUdJU1RSQVRJT05fTlVNQkVSXCIpfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvbGFiZWw+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPGlucHV0IHZhbHVlPXt1c2VyLmNvbXBhbnkucmVnaXN0cmF0aW9uTnVtYmVyfSBkaXNhYmxlZD17IWVkaXRDb21wYW55SW5mb30gb25DaGFuZ2U9eyhlKT0+e1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB1c2VyLmNvbXBhbnkucmVnaXN0cmF0aW9uTnVtYmVyID0gZS50YXJnZXQudmFsdWU7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuc2V0U3RhdGUoe3VzZXJ9KTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9fS8+XG4gICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPXtcIml0ZW1cIn0+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxhYmVsPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB7dGhpcy5jb250ZXh0LnQoXCJTRVRUSU5HU19MQUJFTF9DT01QQU5ZX1ZBVFwiKX1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2xhYmVsPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpbnB1dCB2YWx1ZT17dXNlci5jb21wYW55LnZhdH0gZGlzYWJsZWQ9eyFlZGl0Q29tcGFueUluZm99IG9uQ2hhbmdlPXsoZSk9PntcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdXNlci5jb21wYW55LnZhdCA9IGUudGFyZ2V0LnZhbHVlO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0aGlzLnNldFN0YXRlKHt1c2VyfSk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfX0vPlxuICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT17XCJyb3dcIn0+XG4gICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT17XCJpdGVtXCJ9PlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsYWJlbD5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAge3RoaXMuY29udGV4dC50KFwiU0VUVElOR1NfTEFCRUxfQ09NUEFOWV9BRERSRVNTXCIpfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvbGFiZWw+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPGlucHV0IHZhbHVlPXt1c2VyLmNvbXBhbnkuYWRkcmVzc30gZGlzYWJsZWQ9eyFlZGl0Q29tcGFueUluZm99IG9uQ2hhbmdlPXsoZSk9PntcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdXNlci5jb21wYW55LmFkZHJlc3MgPSBlLnRhcmdldC52YWx1ZTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5zZXRTdGF0ZSh7dXNlcn0pO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH19Lz5cbiAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9e1wiaXRlbVwifT5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGFiZWw+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHt0aGlzLmNvbnRleHQudChcIlNFVFRJTkdTX0xBQkVMX0NPTVBBTllfQ0lUWVwiKX1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2xhYmVsPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpbnB1dCB2YWx1ZT17dXNlci5jb21wYW55LmNpdHl9IGRpc2FibGVkPXshZWRpdENvbXBhbnlJbmZvfSBvbkNoYW5nZT17KGUpPT57XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHVzZXIuY29tcGFueS5jaXR5ID0gZS50YXJnZXQudmFsdWU7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuc2V0U3RhdGUoe3VzZXJ9KTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9fS8+XG4gICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPXtcIml0ZW1cIn0+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxhYmVsPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB7dGhpcy5jb250ZXh0LnQoXCJTRVRUSU5HU19MQUJFTF9DT01QQU5ZX1pJUFwiKX1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2xhYmVsPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpbnB1dCB2YWx1ZT17dXNlci5jb21wYW55LnppcH0gZGlzYWJsZWQ9eyFlZGl0Q29tcGFueUluZm99IG9uQ2hhbmdlPXsoZSk9PntcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdXNlci5jb21wYW55LnppcCA9IGUudGFyZ2V0LnZhbHVlO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0aGlzLnNldFN0YXRlKHt1c2VyfSk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfX0vPlxuICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT17XCJpdGVtXCJ9PlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsYWJlbD5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAge3RoaXMuY29udGV4dC50KFwiU0VUVElOR1NfTEFCRUxfQ09NUEFOWV9DT1VOVFJZXCIpfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvbGFiZWw+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPENvdW50cnlTZWxlY3RvciBtdWx0aT17ZmFsc2V9IHZhbHVlPXtjb3VudHJ5fSBkaXNhYmxlZD17IWVkaXRDb21wYW55SW5mb30gb25DaGFuZ2U9eyhlKT0+e1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB1c2VyLmNvbXBhbnkuY291bnRyeS5uYW1lID0gZS52YWx1ZTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5zZXRTdGF0ZSh7dXNlcn0pO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH19Lz5cbiAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgICAgICAgPGRpdj5cbiAgICAgICAgICAgICAgICAgICAgICAgIDxsYWJlbD5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB7dGhpcy5jb250ZXh0LnQoXCJTRVRUSU5HU19MQUJFTF9DT01QQU5ZX0RFU0NSSVBUSU9OXCIpfVxuICAgICAgICAgICAgICAgICAgICAgICAgPC9sYWJlbD5cbiAgICAgICAgICAgICAgICAgICAgICAgIDx0ZXh0YXJlYSB2YWx1ZT17dXNlci5jb21wYW55LmRlc2NyaXB0aW9ufSBkaXNhYmxlZD17IWVkaXRDb21wYW55SW5mb30gb25DaGFuZ2U9eyhlKT0+e1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHVzZXIuY29tcGFueS5kZXNjcmlwdGlvbiA9IGUudGFyZ2V0LnZhbHVlO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuc2V0U3RhdGUoe3VzZXJ9KTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH19Lz5cbiAgICAgICAgICAgICAgICAgICAgPC9kaXY+XG5cbiAgICAgICAgICAgICAgICAgICAgey8qQUNUSVZFIFVTRVJTKi99XG4gICAgICAgICAgICAgICAgICAgIDxkaXYgc3R5bGU9e3ttYXJnaW46ICcyMHB4IDAnfX0+XG4gICAgICAgICAgICAgICAgICAgICAgICA8bGFiZWw+QWN0aXZlIFVzZXJzPC9sYWJlbD5cbiAgICAgICAgICAgICAgICAgICAgICAgIHtsb2FkaW5nQ29tcGFueVVzZXJzICYmIGNvbXBhbnlVc2Vycy5sZW5ndGggPT09IDAgJiYgPFNwaW5uZXIvPn1cbiAgICAgICAgICAgICAgICAgICAgICAgIHshbG9hZGluZ0NvbXBhbnlVc2VycyAmJiBjb21wYW55VXNlcnMubGVuZ3RoID4gMCAmJiA8ZGl2PlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxSZWFjdFRhYmxlXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNsYXNzTmFtZT17XCJjbG9zZWQtZGVhbHMtdGFibGVcIn1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZGVmYXVsdFBhZ2VTaXplPXszMH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc2hvd1BhZ2VTaXplT3B0aW9ucz17ZmFsc2V9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNob3dQYWdpbmF0aW9uPXtmYWxzZX1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbWluUm93cz17MH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmVzaXphYmxlPXtmYWxzZX1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZGF0YT17Y29tcGFueVVzZXJzfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb2x1bW5zPXtbe1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgSGVhZGVyOiB0aGlzLmNvbnRleHQudChcIlNFVFRJTkdTX0xBQkVMX1VTRVJfRkFNSUxZX05BTUVcIiksXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBoZWFkZXJDbGFzc05hbWUgOiAndGFibGUtaGVhZGVyJyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNsYXNzTmFtZSA6ICd0YWJsZS1oZWFkZXInLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYWNjZXNzb3I6ICdsYXN0TmFtZScsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0sIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGFjY2Vzc29yOiAnZmlyc3ROYW1lJywgLy8gUmVxdWlyZWQgYmVjYXVzZSBvdXIgYWNjZXNzb3IgaXMgbm90IGEgc3RyaW5nXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBIZWFkZXI6IHRoaXMuY29udGV4dC50KFwiU0VUVElOR1NfTEFCRUxfVVNFUl9GSVJTVF9OQU1FXCIpLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaGVhZGVyQ2xhc3NOYW1lIDogJ3RhYmxlLWhlYWRlcicsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjbGFzc05hbWUgOiAndGFibGUtaGVhZGVyJyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSwge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgSGVhZGVyOiB0aGlzLmNvbnRleHQudChcIlNFVFRJTkdTX0xBQkVMX1VTRVJfRU1BSUxcIiksXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBhY2Nlc3NvcjogJ2VtYWlsJyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGhlYWRlckNsYXNzTmFtZSA6ICd0YWJsZS1oZWFkZXInLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY2xhc3NOYW1lIDogJ3RhYmxlLWhlYWRlcicsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0se1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgSGVhZGVyOiB0aGlzLmNvbnRleHQudChcIlNFVFRJTkdTX0xBQkVMX1VTRVJfUEhPTkVfTlVNQkVSXCIpLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYWNjZXNzb3I6ICdwaG9uZScsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBoZWFkZXJDbGFzc05hbWUgOiAndGFibGUtaGVhZGVyJyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNsYXNzTmFtZSA6ICd0YWJsZS1oZWFkZXInLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9LHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIEhlYWRlcjogdGhpcy5jb250ZXh0LnQoXCJTRVRUSU5HU19MQUJFTF9VU0VSX0NPTVBBTllfUE9TSVRJT05cIiksXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBhY2Nlc3NvcjogJ3RpdGxlJyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGhlYWRlckNsYXNzTmFtZSA6ICd0YWJsZS1oZWFkZXInLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY2xhc3NOYW1lIDogJ3RhYmxlLWhlYWRlcicsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBdfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8+XG4gICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj59XG4gICAgICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICAgIDwvZGl2Pn1cbiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT17XCJ0aXRsZVwifT5cbiAgICAgICAgICAgICAgICAgICAge3RoaXMuY29udGV4dC50KFwiU0VUVElOR1NfTEFCRUxfVVNFUl9USVRMRV9JTkZPXCIpfVxuICAgICAgICAgICAgICAgICAgICB7IWVkaXRQZXJzb25hbEluZm8gJiYgIXVwZGF0aW5nVXNlciAmJlxuICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT17XCJlZGl0LWJ1dHRvblwifSBvbkNsaWNrPXtlPT57XG4gICAgICAgICAgICAgICAgICAgICAgICBoaXN0b3J5LnB1c2goXCIvc2V0dGluZ3MvZWRpdHBlcnNvbmFsXCIpO1xuICAgICAgICAgICAgICAgICAgICB9fT5cbiAgICAgICAgICAgICAgICAgICAgICAgIDxpbWcgc3JjPXtlZGl0SWNvbn0vPlxuXG4gICAgICAgICAgICAgICAgICAgICAgICB7dGhpcy5jb250ZXh0LnQoXCJFZGl0XCIpfVxuICAgICAgICAgICAgICAgICAgICA8L2Rpdj59XG4gICAgICAgICAgICAgICAgICAgIHtlZGl0UGVyc29uYWxJbmZvICYmICF1cGRhdGluZ1VzZXIgJiYgPGRpdiBjbGFzc05hbWU9e1wiZWRpdC1idXR0b25cIn0gb25DbGljaz17dGhpcy51cGRhdGVVc2VyfT5cbiAgICAgICAgICAgICAgICAgICAgICAgIDxpbWcgc3JjPXtlZGl0SWNvbn0vPlxuXG4gICAgICAgICAgICAgICAgICAgICAgICB7dGhpcy5jb250ZXh0LnQoXCJTYXZlXCIpfVxuICAgICAgICAgICAgICAgICAgICA8L2Rpdj59XG4gICAgICAgICAgICAgICAgICAgIHt1cGRhdGluZ1VzZXIgJiYgPFNwaW5uZXIvPn1cbiAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT17XCJzZXR0aW5nXCJ9PlxuICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT17XCJyb3dcIn0+XG4gICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT17XCJpdGVtXCJ9PlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsYWJlbD5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAge3RoaXMuY29udGV4dC50KFwiU0VUVElOR1NfTEFCRUxfVVNFUl9GSVJTVF9OQU1FXCIpfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvbGFiZWw+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPGlucHV0IHZhbHVlPXt1c2VyLmZpcnN0TmFtZX0gZGlzYWJsZWQ9eyFlZGl0UGVyc29uYWxJbmZvfSBvbkNoYW5nZT17KGUpPT57XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHVzZXIuZmlyc3ROYW1lID0gZS50YXJnZXQudmFsdWU7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuc2V0U3RhdGUoe3VzZXJ9KTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9fS8+XG4gICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPXtcIml0ZW1cIn0+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxhYmVsPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB7dGhpcy5jb250ZXh0LnQoXCJTRVRUSU5HU19MQUJFTF9VU0VSX0ZBTUlMWV9OQU1FXCIpfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvbGFiZWw+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPGlucHV0IHZhbHVlPXt1c2VyLmxhc3ROYW1lfSBkaXNhYmxlZD17IWVkaXRQZXJzb25hbEluZm99IG9uQ2hhbmdlPXsoZSk9PntcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdXNlci5sYXN0TmFtZSA9IGUudGFyZ2V0LnZhbHVlO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0aGlzLnNldFN0YXRlKHt1c2VyfSk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfX0vPlxuICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT17XCJpdGVtXCJ9PlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsYWJlbD5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAge3RoaXMuY29udGV4dC50KFwiU0VUVElOR1NfTEFCRUxfVVNFUl9USVRMRVwiKX1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2xhYmVsPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpbnB1dCB2YWx1ZT17dXNlci50aXRsZX0gZGlzYWJsZWQ9eyFlZGl0UGVyc29uYWxJbmZvfSBvbkNoYW5nZT17KGUpPT57XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHVzZXIudGl0bGUgPSBlLnRhcmdldC52YWx1ZTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5zZXRTdGF0ZSh7dXNlcn0pO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH19Lz5cbiAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9e1wicm93XCJ9PlxuICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9e1wiaXRlbVwifT5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGFiZWw+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHt0aGlzLmNvbnRleHQudChcIlNFVFRJTkdTX0xBQkVMX1VTRVJfRU1BSUxcIil9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9sYWJlbD5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aW5wdXQgdmFsdWU9e3VzZXIuZW1haWx9IGRpc2FibGVkPXshZWRpdFBlcnNvbmFsSW5mb30gb25DaGFuZ2U9eyhlKT0+e1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB1c2VyLmVtYWlsID0gZS50YXJnZXQudmFsdWU7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuc2V0U3RhdGUoe3VzZXJ9KTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9fS8+XG4gICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPXtcIml0ZW1cIn0+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxhYmVsPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB7dGhpcy5jb250ZXh0LnQoXCJTRVRUSU5HU19MQUJFTF9VU0VSX1BIT05FX05VTUJFUlwiKX1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2xhYmVsPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpbnB1dCB2YWx1ZT17dXNlci5waG9uZX0gZGlzYWJsZWQ9eyFlZGl0UGVyc29uYWxJbmZvfSBvbkNoYW5nZT17KGUpPT57XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHVzZXIucGhvbmUgPSBlLnRhcmdldC52YWx1ZTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5zZXRTdGF0ZSh7dXNlcn0pO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH19Lz5cbiAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cblxuICAgICAgICAgICAgICAgIDwvZGl2PlxuXG5cbiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT17XCJ0aXRsZVwifT5cbiAgICAgICAgICAgICAgICAgICAge3RoaXMuY29udGV4dC50KFwiU0VUVElOR1NfTEFCRUxfQ0hBTkdFX1BBU1NXT1JEXCIpfVxuICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPXtcInN1YnRpdGxlXCJ9PlxuICAgICAgICAgICAgICAgICAgICB7dGhpcy5jb250ZXh0LnQoXCJTRVRUSU5HU19MQUJFTF9DSEFOR0VfUEFTU1dPUkRfMlwiKX1cbiAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT17XCJzZXR0aW5nXCJ9IHN0eWxlPXt7ZGlzcGxheTogJ2ZsZXgnfX0+XG4gICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPXtcInBhc3N3b3JkXCJ9PlxuICAgICAgICAgICAgICAgICAgICAgICAgPGxhYmVsPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHt0aGlzLmNvbnRleHQudChcIlNFVFRJTkdTX0xBQkVMX1RZUEVfQ1VSUkVOVF9QQVNTV09SRFwiKX1cbiAgICAgICAgICAgICAgICAgICAgICAgIDwvbGFiZWw+XG4gICAgICAgICAgICAgICAgICAgICAgICA8aW5wdXQgdHlwZT17XCJwYXNzd29yZFwifSBvbkNoYW5nZT17KGUpPT57XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5zZXRTdGF0ZSh7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG9sZFBhc3N3b3JkIDogZS50YXJnZXQudmFsdWVcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9KVxuICAgICAgICAgICAgICAgICAgICAgICAgfX0vPlxuXG4gICAgICAgICAgICAgICAgICAgICAgICA8bGFiZWw+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAge3RoaXMuY29udGV4dC50KFwiU0VUVElOR1NfTEFCRUxfVFlQRV9ORVdfUEFTU1dPUkRcIil9XG4gICAgICAgICAgICAgICAgICAgICAgICA8L2xhYmVsPlxuICAgICAgICAgICAgICAgICAgICAgICAgPGlucHV0IHR5cGU9e1wicGFzc3dvcmRcIn0gb25DaGFuZ2U9eyhlKT0+e1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuc2V0U3RhdGUoe1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBwYXNzd29yZCA6IGUudGFyZ2V0LnZhbHVlXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfSlcbiAgICAgICAgICAgICAgICAgICAgICAgIH19Lz5cblxuICAgICAgICAgICAgICAgICAgICAgICAgPGxhYmVsPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHt0aGlzLmNvbnRleHQudChcIlNFVFRJTkdTX0xBQkVMX1JFVFlQRV9ORVdfUEFTU1dPUkRcIil9XG4gICAgICAgICAgICAgICAgICAgICAgICA8L2xhYmVsPlxuICAgICAgICAgICAgICAgICAgICAgICAgPGlucHV0IHR5cGU9e1wicGFzc3dvcmRcIn0gb25DaGFuZ2U9eyhlKT0+e1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuc2V0U3RhdGUoe1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBwYXNzd29yZENoZWNrIDogZS50YXJnZXQudmFsdWVcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9KVxuICAgICAgICAgICAgICAgICAgICAgICAgfX0vPlxuXG4gICAgICAgICAgICAgICAgICAgICAgICB7IXVwZGF0aW5nUGFzc3dvcmQgJiYgIXBhc3N3b3JkVXBkYXRlZCAmJlxuICAgICAgICAgICAgICAgICAgICAgICAgPGJ1dHRvbiBvbkNsaWNrPXt0aGlzLnVwZGF0ZVBhc3N3b3JkfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBkaXNhYmxlZD17dGhpcy5pbnZhbGlkUGFzc3dvcmQoKX1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY2xhc3NOYW1lPXtcInN0YW5kYXJkLWJ1dHRvblwifT5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB7dGhpcy5jb250ZXh0LnQoXCJTRVRUSU5HU19CVVRUT05fU0FWRV9QQVNTV09SRFwiKX1cbiAgICAgICAgICAgICAgICAgICAgICAgIDwvYnV0dG9uPn1cbiAgICAgICAgICAgICAgICAgICAgICAgIHt1cGRhdGluZ1Bhc3N3b3JkICYmIDxTcGlubmVyLz59XG4gICAgICAgICAgICAgICAgICAgICAgICB7cGFzc3dvcmRVcGRhdGVkICYmIDxkaXY+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAge3RoaXMuY29udGV4dC50KFwiU0VUVElOR1NfTEFCRUxfUEFTU1dPUkRfVVBEQVRFRFwiKX1cbiAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2Pn1cbiAgICAgICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgICAgICAgIHtwYXNzd29yZCAmJiA8ZGl2IGNsYXNzTmFtZT17XCJwYXNzd29yZC12YWxpZGF0aW9uXCJ9PlxuICAgICAgICAgICAgICAgICAgICAgICAgPGRpdj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB7dGhpcy52YWxpZGF0ZShwYXNzd29yZCkubGVuZ3RoICYmIDxpbWcgc3JjPXtibHVlQ2hlY2tJY29ufS8+fVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHshdGhpcy52YWxpZGF0ZShwYXNzd29yZCkubGVuZ3RoJiYgPGltZyBzcmM9e2NhbmNlbEljb259Lz59XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAge3RoaXMuY29udGV4dC50KFwiU0VUVElOR1NfTEFCRUxfUEFTU1dPUkRfVkFMSURBVEVfMVwiKX1cbiAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICAgICAgICAgICAgPGRpdj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB7dGhpcy52YWxpZGF0ZShwYXNzd29yZCkudXBwZXIgJiYgPGltZyBzcmM9e2JsdWVDaGVja0ljb259Lz59XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgeyF0aGlzLnZhbGlkYXRlKHBhc3N3b3JkKS51cHBlciYmIDxpbWcgc3JjPXtjYW5jZWxJY29ufS8+fVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHt0aGlzLmNvbnRleHQudChcIlNFVFRJTkdTX0xBQkVMX1BBU1NXT1JEX1ZBTElEQVRFXzJcIil9XG4gICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXY+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAge3RoaXMudmFsaWRhdGUocGFzc3dvcmQpLmRpZ2l0ICYmIDxpbWcgc3JjPXtibHVlQ2hlY2tJY29ufS8+fVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHshdGhpcy52YWxpZGF0ZShwYXNzd29yZCkuZGlnaXQmJiA8aW1nIHNyYz17Y2FuY2VsSWNvbn0vPn1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB7dGhpcy5jb250ZXh0LnQoXCJTRVRUSU5HU19MQUJFTF9QQVNTV09SRF9WQUxJREFURV8zXCIpfVxuICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgICAgICAgICAgICA8ZGl2PlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHt0aGlzLnZhbGlkYXRlKHBhc3N3b3JkKS5zcGVjaWFsICYmIDxpbWcgc3JjPXtibHVlQ2hlY2tJY29ufS8+fVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHshdGhpcy52YWxpZGF0ZShwYXNzd29yZCkuc3BlY2lhbCYmIDxpbWcgc3JjPXtjYW5jZWxJY29ufS8+fVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHt0aGlzLmNvbnRleHQudChcIlNFVFRJTkdTX0xBQkVMX1BBU1NXT1JEX1ZBTElEQVRFXzRcIil9XG4gICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgICAgICAgICAgIHtwYXNzd29yZENoZWNrICYmIDxkaXY+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAge3Bhc3N3b3JkQ2hlY2sgPT09IHBhc3N3b3JkICYmIDxpbWcgc3JjPXtibHVlQ2hlY2tJY29ufS8+fVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHtwYXNzd29yZENoZWNrICE9PSBwYXNzd29yZCAmJiA8aW1nIHNyYz17Y2FuY2VsSWNvbn0vPn1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB7dGhpcy5jb250ZXh0LnQoXCJTRVRUSU5HU19MQUJFTF9QQVNTV09SRF9WQUxJREFURV81XCIpfVxuICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+fVxuICAgICAgICAgICAgICAgICAgICA8L2Rpdj59XG5cbiAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICApXG4gICAgfVxufVxuXG5TZXR0aW5ncy5jb250ZXh0VHlwZXMgPSB7XG4gICAgdDogUHJvcFR5cGVzLmZ1bmMuaXNSZXF1aXJlZFxufTtcblxuY29uc3QgbWFwU3RhdGVUb1Byb3BzID0gKCBzdGF0ZSwgb3duUHJvcHMpID0+IHtcbiAgICByZXR1cm4gc3RhdGU7XG59O1xuXG5jb25zdCBtYXBEaXNwYXRjaFRvUHJvcHMgPSBkaXNwYXRjaCA9PiB7XG4gICAgcmV0dXJuIHtcbiAgICB9XG59O1xuXG5cbmV4cG9ydCBkZWZhdWx0IGNvbm5lY3QoXG4gICAgbWFwU3RhdGVUb1Byb3BzLFxuICAgIG1hcERpc3BhdGNoVG9Qcm9wc1xuKShTZXR0aW5ncylcblxuXG4vLyBXRUJQQUNLIEZPT1RFUiAvL1xuLy8gLi9zcmMvQXBwQnVuZGxlL1Jlc291cmNlcy9wdWJsaWMvamF2YXNjcmlwdC9tYW5hZ2UvY29udGFpbmVycy9TZXR0aW5ncy5qcyIsImltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgeyBjb25uZWN0IH0gZnJvbSBcInJlYWN0LXJlZHV4XCI7XG5pbXBvcnQgQ29udGVudExpc3RpbmcgZnJvbSAnLi4vLi4vbWFpbi9jb21wb25lbnRzL0NvbnRlbnRMaXN0aW5nJztcbmltcG9ydCB7Z29Ub30gZnJvbSBcIi4uLy4uL21haW4vYWN0aW9ucy91dGlsc1wiO1xuaW1wb3J0IHtQcm9wVHlwZXN9IGZyb20gXCJwcm9wLXR5cGVzXCI7XG5cbmNsYXNzIFdhdGNobGlzdCBleHRlbmRzIFJlYWN0LkNvbXBvbmVudCB7XG4gICAgY29uc3RydWN0b3IocHJvcHMpIHtcbiAgICAgICAgc3VwZXIocHJvcHMpO1xuICAgICAgICB0aGlzLnN0YXRlID0ge1xuICAgICAgICAgICAgbG9hZGluZyA6IGZhbHNlLFxuICAgICAgICAgICAgbGlzdGluZ3MgOiBbXSxcbiAgICAgICAgfTtcbiAgICB9XG5cbiAgICBjb21wb25lbnREaWRNb3VudCAoKSB7XG4gICAgICAgIGxldCBfdGhpcyA9IHRoaXM7XG4gICAgICAgIHRoaXMuc2V0U3RhdGUoe2xvYWRpbmc6dHJ1ZX0pO1xuICAgICAgICBDb250ZW50QXJlbmEuQ29udGVudEFwaS5nZXRXYXRjaGxpc3RMaXN0aW5ncygpLmRvbmUoKGxpc3RpbmdzKSA9PiB7XG4gICAgICAgICAgICBpZiAoIUFycmF5LmlzQXJyYXkobGlzdGluZ3MpKSB7XG4gICAgICAgICAgICAgICAgbGlzdGluZ3MgPSBPYmplY3QudmFsdWVzKGxpc3RpbmdzKVxuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICBsaXN0aW5ncyA9IGxpc3RpbmdzLm1hcCggbGlzdGluZyA9PiBDb250ZW50QXJlbmEuVXRpbHMuY29udGVudFBhcnNlckZyb21TZXJ2ZXIobGlzdGluZykgKTtcbiAgICAgICAgICAgIF90aGlzLnNldFN0YXRlKHtsaXN0aW5nczogbGlzdGluZ3MsIGxvYWRpbmcgOiBmYWxzZX0pO1xuICAgICAgICB9KTtcblxuICAgIH1cblxuICAgIHNlbGVjdExpc3RpbmcgPSAoaWQpID0+IHtcbiAgICAgICAgZ29UbyhcImxpc3RpbmcvXCIgKyBpZCk7XG5cbiAgICB9O1xuXG4gICAgcmVtb3ZlID0gKCBjdXN0b21JZCkgPT4ge1xuICAgICAgICB0aGlzLnNldFN0YXRlKHtcbiAgICAgICAgICAgIGxpc3RpbmdzIDogdGhpcy5zdGF0ZS5saXN0aW5ncy5maWx0ZXIobCA9PiBsLmN1c3RvbUlkICE9PSBjdXN0b21JZClcbiAgICAgICAgfSk7XG4gICAgfTtcblxuICAgIHJlbmRlciAoKSB7XG4gICAgICAgIGNvbnN0IHsgbG9hZGluZywgbGlzdGluZ3MgfSA9IHRoaXMuc3RhdGU7XG4gICAgICAgIHJldHVybiAoXG4gICAgICAgICAgICA8ZGl2IHN0eWxlPXt7XG4gICAgICAgICAgICAgICAgZGlzcGxheTogJ2ZsZXgnLFxuICAgICAgICAgICAgICAgIGZsZXhEaXJlY3Rpb246ICdjb2x1bW4nLFxuICAgICAgICAgICAgICAgIGZsZXg6IDFcbiAgICAgICAgICAgIH19PlxuXG4gICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICBsaXN0aW5ncy5sZW5ndGggPiAwICYmIGxpc3RpbmdzLm1hcCgobGlzdGluZykgPT4ge1xuICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIDxDb250ZW50TGlzdGluZ1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIG9uU2VsZWN0PXt0aGlzLnNlbGVjdExpc3Rpbmd9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAga2V5PXtsaXN0aW5nLmN1c3RvbUlkfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHsuLi5saXN0aW5nfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHdhdGNobGlzdFJlbW92ZT17dHJ1ZX1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBvbldhdGNobGlzdFJlbW92ZT17dGhpcy5yZW1vdmV9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgZGVmYXVsdFJpZ2h0c1BhY2thZ2U9e0pTT04ucGFyc2UodGhpcy5wcm9wcy5yaWdodHMpfVxuICAgICAgICAgICAgICAgICAgICAgICAgLz5cbiAgICAgICAgICAgICAgICAgICAgfSlcbiAgICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgIGxpc3RpbmdzLmxlbmd0aCA9PT0gMCAmJlxuICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cIm1hbmFnZXItY29udGVudC1tZXNzYWdlXCI+XG4gICAgICAgICAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgbG9hZGluZyAmJiA8ZGl2IGNsYXNzTmFtZT1cImJpZy1zcGlubmVyXCI+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpIGNsYXNzTmFtZT1cImZhIGZhLWNvZyBmYS1zcGluXCIvPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgIWxvYWRpbmcgJiYgPGRpdiBjbGFzc05hbWU9XCJiaWctc3Bpbm5lclwiIHN0eWxlPXt7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGZvbnRTaXplOiAzMFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH19PlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB7dGhpcy5jb250ZXh0LnQoXCJXQVRDSExJU1RfRU1QVFlfTUVTU0FHRVwiKX1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgKVxuICAgIH1cbn1cblxuV2F0Y2hsaXN0LmNvbnRleHRUeXBlcyA9IHtcbiAgICB0OiBQcm9wVHlwZXMuZnVuYy5pc1JlcXVpcmVkXG59O1xuXG5jb25zdCBtYXBTdGF0ZVRvUHJvcHMgPSAoIHN0YXRlLCBvd25Qcm9wcykgPT4ge1xuICAgIHJldHVybiBzdGF0ZTtcbn07XG5cbmNvbnN0IG1hcERpc3BhdGNoVG9Qcm9wcyA9IGRpc3BhdGNoID0+IHtcbiAgICByZXR1cm4ge1xuICAgIH1cbn07XG5cblxuZXhwb3J0IGRlZmF1bHQgY29ubmVjdChcbiAgICBtYXBTdGF0ZVRvUHJvcHMsXG4gICAgbWFwRGlzcGF0Y2hUb1Byb3BzXG4pKFdhdGNobGlzdClcblxuXG4vLyBXRUJQQUNLIEZPT1RFUiAvL1xuLy8gLi9zcmMvQXBwQnVuZGxlL1Jlc291cmNlcy9wdWJsaWMvamF2YXNjcmlwdC9tYW5hZ2UvY29udGFpbmVycy9XYXRjaGxpc3QuanMiLCJcbmV4cG9ydCBjb25zdCBtYW5hZ2VUeXBlcz0ge1xuICAgIFRFU1Q6J1RFU1QnLFxufTtcblxuZXhwb3J0IGNvbnN0IG1hbmFnZSA9IChzdGF0ZSA9IHtcbiAgICB0ZXN0SXRlbTogXCJtYW5hZ2VSZWR1Y2VyXCJcblxufSwgYWN0aW9uKSA9PiB7XG5cbiAgICBzd2l0Y2ggKGFjdGlvbi50eXBlKSB7XG4gICAgICAgIGNhc2UgbWFuYWdlVHlwZXMuVEVTVDpcbiAgICAgICAgICAgIHJldHVybiBPYmplY3QuYXNzaWduKHt9LCBzdGF0ZSwge1xuICAgICAgICAgICAgICAgIHRlc3Q6IGFjdGlvbi50ZXh0LFxuICAgICAgICAgICAgICAgIGlkIDogYWN0aW9uLmlkXG4gICAgICAgICAgICB9KTtcbiAgICAgICAgZGVmYXVsdDpcbiAgICAgICAgICAgIHJldHVybiBzdGF0ZTtcbiAgICB9XG59O1xuXG5cbi8vIFdFQlBBQ0sgRk9PVEVSIC8vXG4vLyAuL3NyYy9BcHBCdW5kbGUvUmVzb3VyY2VzL3B1YmxpYy9qYXZhc2NyaXB0L21hbmFnZS9yZWR1Y2Vycy9tYW5hZ2UuanMiLCJpbXBvcnQge2NvbnRlbnRUeXBlfSBmcm9tIFwiLi4vcmVkdWNlcnMvY29udGVudFwiO1xuXG5leHBvcnQgY29uc3Qgc2Nyb2xsVG9wTWFpbkNvbnRlbnQgPSAoKSA9PiB7XG4gICAgY29uc3QgbWFpbkNvbnRlbnQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKCdib2R5ID4gLm1haW4tY29udGVudCcpWzBdO1xuXG4gICAgaWYgKG1haW5Db250ZW50KSB7XG4gICAgICAgIG1haW5Db250ZW50LnNjcm9sbEludG9WaWV3KCk7XG4gICAgfVxufTtcblxuZXhwb3J0IGNvbnN0IGdvVG9QcmV2aW91c1N0ZXAgPSAoKSA9PntcbiAgICBzY3JvbGxUb3BNYWluQ29udGVudCgpO1xuXG4gICAgcmV0dXJue1xuICAgICAgICB0eXBlOiBjb250ZW50VHlwZS5HT19UT19QUkVWSU9VU19TVEVQLFxuICAgIH1cbn07XG5cbmV4cG9ydCBjb25zdCBnb1RvTmV4dFN0ZXAgPSAoKSA9PntcbiAgICBzY3JvbGxUb3BNYWluQ29udGVudCgpO1xuXG4gICAgcmV0dXJue1xuICAgICAgICB0eXBlOiBjb250ZW50VHlwZS5HT19UT19ORVhUX1NURVAsXG4gICAgfVxufTtcblxuZXhwb3J0IGNvbnN0IGdvVG9TdGVwID0gKCBzdGVwKSA9PntcbiAgICBzY3JvbGxUb3BNYWluQ29udGVudCgpO1xuICAgIFxuICAgIHJldHVybntcbiAgICAgICAgdHlwZTogY29udGVudFR5cGUuR09fVE9fU1RFUCxcbiAgICAgICAgc3RlcFxuICAgIH1cbn07XG5cbmV4cG9ydCBjb25zdCBzdGVwQ2hhbmdlUmVzZXQgPSAoKSA9PntcbiAgICByZXR1cm57XG4gICAgICAgIHR5cGU6IGNvbnRlbnRUeXBlLlNURVBfQ0hBTkdFX1JFU0VULFxuICAgIH1cbn07XG5cbmV4cG9ydCBjb25zdCB1cGRhdGVDb250ZW50VmFsdWUgPSAoa2V5LCB2YWx1ZSkgPT4ge1xuICAgIHJldHVybntcbiAgICAgICAgdHlwZTogJ1VQREFURV9DT05URU5UX1ZBTFVFJyxcbiAgICAgICAga2V5OiBrZXksXG4gICAgICAgIHZhbHVlIDogdmFsdWVcbiAgICB9XG59O1xuXG5cblxuLy8gV0VCUEFDSyBGT09URVIgLy9cbi8vIC4vc3JjL0FwcEJ1bmRsZS9SZXNvdXJjZXMvcHVibGljL2phdmFzY3JpcHQvc2VsbC9hY3Rpb25zL2NvbnRlbnRBY3Rpb25zLmpzIiwiZXhwb3J0IGNvbnN0IGNvbXBhbnlJc1ZhbGlkID0gKCBjb21wYW55ICkgPT57XG4gICAgcmV0dXJuIGNvbXBhbnkubGVnYWxOYW1lICE9PSB1bmRlZmluZWRcbiAgICAgICAgJiYgY29tcGFueS5sZWdhbE5hbWUgIT09IFwiXCJcbiAgICAgICAgJiYgY29tcGFueS52YXQgIT09IHVuZGVmaW5lZFxuICAgICAgICAmJiBjb21wYW55LnZhdCAhPT0gXCJcIlxuICAgICAgICAmJiBjb21wYW55LnppcCAhPT0gdW5kZWZpbmVkXG4gICAgICAgICYmIGNvbXBhbnkuemlwICE9PSBcIlwiXG4gICAgICAgICYmIGNvbXBhbnkuYWRkcmVzcyAhPT0gdW5kZWZpbmVkXG4gICAgICAgICYmIGNvbXBhbnkuYWRkcmVzcyAhPT0gXCJcIlxuICAgICAgICAmJiBjb21wYW55LmNpdHkgIT09IHVuZGVmaW5lZFxuICAgICAgICAmJiBjb21wYW55LmNpdHkgIT09IFwiXCJcbiAgICAgICAgJiYgY29tcGFueS5jb3VudHJ5ICE9PSB1bmRlZmluZWQ7XG59O1xuXG5cblxuLy8gV0VCUEFDSyBGT09URVIgLy9cbi8vIC4vc3JjL0FwcEJ1bmRsZS9SZXNvdXJjZXMvcHVibGljL2phdmFzY3JpcHQvc2VsbC9hY3Rpb25zL3ZhbGlkYXRpb25BY3Rpb25zLmpzIiwiaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCB7Y29ubmVjdH0gZnJvbSBcInJlYWN0LXJlZHV4XCI7XG5pbXBvcnQge1Byb3BUeXBlc30gZnJvbSBcInByb3AtdHlwZXNcIjtcbmltcG9ydCBMYW5ndWFnZVNlbGVjdG9yRXh0ZW5kZWQgZnJvbSBcIi4uLy4uL21haW4vY29tcG9uZW50cy9MYW5ndWFnZVNlbGVjdG9yRXh0ZW5kZWRcIjtcblxuY2xhc3MgQXBwbGljYWJsZUxhdyBleHRlbmRzIFJlYWN0LkNvbXBvbmVudCB7XG4gICAgY29uc3RydWN0b3IocHJvcHMpIHtcbiAgICAgICAgc3VwZXIocHJvcHMpO1xuICAgICAgICB0aGlzLnN0YXRlID0ge1xuICAgICAgICB9O1xuICAgIH1cblxuICAgIHNlbGVjdCA9ICh2YWx1ZSkgPT4ge1xuICAgICAgICB0aGlzLnByb3BzLnVwZGF0ZUNvbnRlbnRWYWx1ZShcImxhd1wiLCB2YWx1ZSk7XG4gICAgfTtcblxuICAgIHJlbmRlcigpe1xuICAgICAgICBjb25zdCB7IGxhdyB9ID0gdGhpcy5wcm9wcztcbiAgICAgICAgcmV0dXJuIChcbiAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiYmFzZS1pbnB1dFwiPlxuICAgICAgICAgICAgICAgIDxsYWJlbD5cbiAgICAgICAgICAgICAgICAgICAge3RoaXMuY29udGV4dC50KFwiQ0xfU1RFUDRfTEFCRUxfQVBQTElDQUJMRV9MQVdcIil9XG4gICAgICAgICAgICAgICAgPC9sYWJlbD5cbiAgICAgICAgICAgICAgICA8TGFuZ3VhZ2VTZWxlY3RvckV4dGVuZGVkXG4gICAgICAgICAgICAgICAgICAgIHZhbHVlPXtsYXd9XG4gICAgICAgICAgICAgICAgICAgIG11bHRpPXtmYWxzZX1cbiAgICAgICAgICAgICAgICAgICAgcGxhY2Vob2xkZXI9e3RoaXMuY29udGV4dC50KFwiQ0xfU1RFUDRfUExBQ0VIT0xERVJfQVBQTElDQUJMRV9MQVdcIil9XG4gICAgICAgICAgICAgICAgICAgIG9uQ2hhbmdlPXt0aGlzLnNlbGVjdH0vPlxuICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgIClcbiAgICB9XG59XG5cbkFwcGxpY2FibGVMYXcuY29udGV4dFR5cGVzID0ge1xuICAgIHQ6IFByb3BUeXBlcy5mdW5jLmlzUmVxdWlyZWRcbn07XG5cbmNvbnN0IG1hcFN0YXRlVG9Qcm9wcyA9IHN0YXRlID0+IHtcbiAgICByZXR1cm4gc3RhdGUuY29udGVudFxufTtcblxuY29uc3QgbWFwRGlzcGF0Y2hUb1Byb3BzID0gZGlzcGF0Y2ggPT4ge1xuICAgIHJldHVybiB7XG4gICAgICAgIHVwZGF0ZUNvbnRlbnRWYWx1ZSA6IChrZXksIHZhbHVlKSA9PiBkaXNwYXRjaCh7XG4gICAgICAgICAgICB0eXBlOiAnVVBEQVRFX0NPTlRFTlRfVkFMVUUnLFxuICAgICAgICAgICAga2V5OiBrZXksXG4gICAgICAgICAgICB2YWx1ZSA6IHZhbHVlXG4gICAgICAgIH0pXG4gICAgfVxufTtcblxuZXhwb3J0IGRlZmF1bHQgY29ubmVjdChcbiAgICBtYXBTdGF0ZVRvUHJvcHMsXG4gICAgbWFwRGlzcGF0Y2hUb1Byb3BzXG4pKEFwcGxpY2FibGVMYXcpXG5cblxuLy8gV0VCUEFDSyBGT09URVIgLy9cbi8vIC4vc3JjL0FwcEJ1bmRsZS9SZXNvdXJjZXMvcHVibGljL2phdmFzY3JpcHQvc2VsbC9jb21wb25lbnRzL0FwcGxpY2FibGVMYXcuanMiLCJpbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xuaW1wb3J0IHtjb25uZWN0fSBmcm9tIFwicmVhY3QtcmVkdXhcIjtcbmltcG9ydCBNb2RhbCBmcm9tICdyZWFjdC1tb2RhbCc7XG5pbXBvcnQge2N1c3RvbVN0eWxlc30gZnJvbSBcIi4uLy4uL21haW4vc3R5bGVzL2N1c3RvbVwiO1xuaW1wb3J0IHtQcm9wVHlwZXN9IGZyb20gXCJwcm9wLXR5cGVzXCI7XG5cbmNsYXNzIENvbW1lbnRzIGV4dGVuZHMgUmVhY3QuQ29tcG9uZW50IHtcbiAgICBjb25zdHJ1Y3Rvcihwcm9wcykge1xuICAgICAgICBzdXBlcihwcm9wcyk7XG4gICAgICAgIHRoaXMuc3RhdGUgPSB7XG4gICAgICAgICAgICBpc09wZW4gOiBmYWxzZSxcbiAgICAgICAgfTtcbiAgICB9XG5cbiAgICBjbG9zZU1vZGFsID0gKCkgPT4ge1xuICAgICAgICB0aGlzLnNldFN0YXRlKHsgaXNPcGVuOiBmYWxzZX0pO1xuICAgIH07XG5cbiAgICB1cGRhdGVDb250ZW50ID0gKGUpID0+IHtcblxuICAgICAgICBjb25zdCB7cHJvcE5hbWV9ID0gdGhpcy5wcm9wcztcblxuICAgICAgICB0aGlzLnByb3BzLnVwZGF0ZUNvbnRlbnRWYWx1ZShwcm9wTmFtZSwgZS50YXJnZXQudmFsdWUpO1xuICAgIH07XG5cbiAgICBhZGRDb21tZW50cyA9ICgpID0+e1xuICAgICAgICB0aGlzLnNldFN0YXRlKHtpc09wZW46dHJ1ZX0pO1xuICAgIH07XG5cbiAgICByZW5kZXJNb2RhbCA9ICgpID0+IHtcblxuICAgICAgICBjb25zdCB7IGNvbW1lbnRzIH0gPSB0aGlzLnByb3BzO1xuXG4gICAgICAgIHJldHVybiA8TW9kYWxcbiAgICAgICAgICAgIGlzT3Blbj17dGhpcy5zdGF0ZS5pc09wZW59XG4gICAgICAgICAgICBvblJlcXVlc3RDbG9zZT17dGhpcy5jbG9zZU1vZGFsfVxuICAgICAgICAgICAgYm9keU9wZW5DbGFzc05hbWU9e1wic2VsZWN0b3JcIn1cbiAgICAgICAgICAgIHN0eWxlPXtjdXN0b21TdHlsZXN9XG4gICAgICAgID5cblxuICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJtb2RhbC10aXRsZVwiPlxuICAgICAgICAgICAgICAgIDxkaXYgc3R5bGU9e3sgd2lkdGg6IFwiNDcwcHhcIn19PlxuICAgICAgICAgICAgICAgICAgICB7dGhpcy5jb250ZXh0LnQoXCJDTF9TVEVQM19BTUVORE1FTlRcIil9XG4gICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgICAgPGkgY2xhc3NOYW1lPVwiZmEgZmEtdGltZXMgY2xvc2UtaWNvblwiIG9uQ2xpY2s9e3RoaXMuY2xvc2VNb2RhbH0vPlxuICAgICAgICAgICAgPC9kaXY+XG5cbiAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwic3RlcC1jb250ZW50XCIgc3R5bGU9e3sgcGFkZGluZzogXCIwIDE1cHggNXB4XCJ9fT5cbiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cInN0ZXAtY29udGVudC1jb250YWluZXJcIj5cblxuICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImJhc2UtZnVsbC1pbnB1dFwiPlxuICAgICAgICAgICAgICAgICAgICAgICAgPHRleHRhcmVhXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgY2xhc3NOYW1lPXtcImJpZy10ZXh0YXJlYVwifVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIG9uQ2hhbmdlPXt0aGlzLnVwZGF0ZUNvbnRlbnR9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdmFsdWU9e2NvbW1lbnRzfS8+XG4gICAgICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgPC9kaXY+XG5cbiAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPXtcImJ1dHRvbnMgcG9wdXAtYnV0dG9uc1wifT5cbiAgICAgICAgICAgICAgICA8YnV0dG9uXG4gICAgICAgICAgICAgICAgICAgIGNsYXNzTmFtZT17XCJzdGFuZGFyZC1idXR0b25cIn1cbiAgICAgICAgICAgICAgICAgICAgb25DbGljaz17dGhpcy5jbG9zZU1vZGFsfT5cbiAgICAgICAgICAgICAgICAgICAge3RoaXMuY29udGV4dC50KFwiQWNjZXB0XCIpfVxuICAgICAgICAgICAgICAgIDwvYnV0dG9uPlxuICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgIDwvTW9kYWw+XG4gICAgfTtcblxuICAgIHJlbmRlcigpe1xuICAgICAgICByZXR1cm4gKFxuICAgICAgICAgICAgPGRpdiBzdHlsZT17e21hcmdpbkJvdHRvbTogMjB9fT5cbiAgICAgICAgICAgICAgICB7IHRoaXMucmVuZGVyTW9kYWwoKSB9XG4gICAgICAgICAgICAgICAgPGJ1dHRvbiBjbGFzc05hbWU9e1wibGluay1idXR0b25cIn0gb25DbGljaz17dGhpcy5hZGRDb21tZW50c30+XG4gICAgICAgICAgICAgICAgICAgIHt0aGlzLmNvbnRleHQudChcIkNMX1NURVAzX0FNRU5ETUVOVFwiKX1cbiAgICAgICAgICAgICAgICA8L2J1dHRvbj5cbiAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICApXG4gICAgfVxufVxuXG5Db21tZW50cy5jb250ZXh0VHlwZXMgPSB7XG4gICAgdDogUHJvcFR5cGVzLmZ1bmMuaXNSZXF1aXJlZFxufTtcblxuY29uc3QgbWFwU3RhdGVUb1Byb3BzID0gc3RhdGUgPT4ge1xuICAgIHJldHVybiBzdGF0ZS5jb250ZW50XG59O1xuXG5jb25zdCBtYXBEaXNwYXRjaFRvUHJvcHMgPSBkaXNwYXRjaCA9PiB7XG4gICAgcmV0dXJuIHtcbiAgICAgICAgdXBkYXRlQ29udGVudFZhbHVlIDogKGtleSwgdmFsdWUpID0+IGRpc3BhdGNoKHtcbiAgICAgICAgICAgIHR5cGU6ICdVUERBVEVfQ09OVEVOVF9WQUxVRScsXG4gICAgICAgICAgICBrZXk6IGtleSxcbiAgICAgICAgICAgIHZhbHVlIDogdmFsdWVcbiAgICAgICAgfSlcbiAgICB9XG59O1xuXG5leHBvcnQgZGVmYXVsdCBjb25uZWN0KFxuICAgIG1hcFN0YXRlVG9Qcm9wcyxcbiAgICBtYXBEaXNwYXRjaFRvUHJvcHNcbikoQ29tbWVudHMpXG5cblxuLy8gV0VCUEFDSyBGT09URVIgLy9cbi8vIC4vc3JjL0FwcEJ1bmRsZS9SZXNvdXJjZXMvcHVibGljL2phdmFzY3JpcHQvc2VsbC9jb21wb25lbnRzL0NvbW1lbnRzLmpzIiwiaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCB7Y29ubmVjdH0gZnJvbSBcInJlYWN0LXJlZHV4XCI7XG5pbXBvcnQge2N1c3RvbVN0eWxlc30gZnJvbSBcIi4uLy4uL21haW4vc3R5bGVzL2N1c3RvbVwiO1xuaW1wb3J0IE1vZGFsIGZyb20gJ3JlYWN0LW1vZGFsJztcbmltcG9ydCBDb3VudHJ5U2VsZWN0b3IgZnJvbSBcIi4uLy4uL21haW4vY29tcG9uZW50cy9Db3VudHJ5U2VsZWN0b3JcIjtcbmltcG9ydCB7Y29tcGFueUlzVmFsaWR9IGZyb20gXCIuLi9hY3Rpb25zL3ZhbGlkYXRpb25BY3Rpb25zXCI7XG5pbXBvcnQge1Byb3BUeXBlc30gZnJvbSBcInByb3AtdHlwZXNcIjtcblxuY29uc3QgbGFiZWxTdHlsZSA9IHsgaGVpZ2h0OiBcIjMwcHhcIiwgZm9udFNpemU6IFwiMTJweFwiLCB3aWR0aDogJzQwMHB4J307XG5jb25zdCBpbnB1dFN0eWxlID0geyB3aWR0aDogJzM4MHB4JywgbWFyZ2luOiAwLCBoZWlnaHQ6IFwiMzBweFwifTtcblxuY2xhc3MgQ29tcGFueUluZm9ybWF0aW9uIGV4dGVuZHMgUmVhY3QuQ29tcG9uZW50IHtcbiAgICBjb25zdHJ1Y3Rvcihwcm9wcykge1xuICAgICAgICBzdXBlcihwcm9wcyk7XG4gICAgICAgIHRoaXMuc3RhdGUgPSB7XG4gICAgICAgICAgICBpc09wZW4gOiBmYWxzZSxcbiAgICAgICAgICAgIGNvbXBhbnkgOiBwcm9wcy5jb21wYW55XG4gICAgICAgIH07XG4gICAgfVxuXG4gICAgY29tcG9uZW50V2lsbFJlY2VpdmVQcm9wcyhuZXh0UHJvcHMpIHtcbiAgICAgICAgdGhpcy5zZXRTdGF0ZSh7Y29tcGFueSA6IG5leHRQcm9wcy5jb21wYW55fSk7XG4gICAgfVxuXG4gICAgY2xvc2VNb2RhbCA9ICgpID0+IHtcbiAgICAgICAgdGhpcy5zZXRTdGF0ZSh7XG4gICAgICAgICAgICBpc09wZW46IGZhbHNlLFxuICAgICAgICAgICAgY29tcGFueTogdGhpcy5wcm9wcy5jb21wYW55XG4gICAgICAgIH0pO1xuICAgIH07XG5cbiAgICB1cGRhdGVDb21wYW55Q29udGVudCA9IChlLCBuYW1lKSA9PiB7XG4gICAgICAgIGNvbnN0IGNvbXBhbnkgPSB7Li4udGhpcy5zdGF0ZS5jb21wYW55fTtcblxuICAgICAgICBjb21wYW55W25hbWVdID0gZS50YXJnZXQudmFsdWU7XG4gICAgICAgIHRoaXMub25EYXRhQ2hhbmdlKFwiY29tcGFueVwiLCBjb21wYW55KVxuICAgIH07XG5cbiAgICB1cGRhdGVDb3VudHJ5ID0gKHZhbHVlKSA9PiB7XG4gICAgICAgIGNvbnN0IGNvbXBhbnkgPSB7Li4udGhpcy5zdGF0ZS5jb21wYW55fTtcblxuICAgICAgICBjb21wYW55LmNvdW50cnkubmFtZSA9IHZhbHVlLmxhYmVsO1xuICAgICAgICB0aGlzLm9uRGF0YUNoYW5nZShcImNvbXBhbnlcIiwgY29tcGFueSlcbiAgICB9O1xuXG4gICAgcmVuZGVyTW9kYWwgPSAoKSA9PiB7XG4gICAgICAgIGNvbnN0IHsgY29tcGFueSB9ID0gdGhpcy5zdGF0ZTtcblxuICAgICAgICByZXR1cm4gPE1vZGFsXG4gICAgICAgICAgICBpc09wZW49e3RoaXMuc3RhdGUuaXNPcGVufVxuICAgICAgICAgICAgb25SZXF1ZXN0Q2xvc2U9e3RoaXMuY2xvc2VNb2RhbH1cbiAgICAgICAgICAgIGJvZHlPcGVuQ2xhc3NOYW1lPXtcInNlbGVjdG9yXCJ9XG4gICAgICAgICAgICBzdHlsZT17Y3VzdG9tU3R5bGVzfVxuICAgICAgICAgICAgY29udGVudExhYmVsPVwiRXhhbXBsZSBNb2RhbFwiXG4gICAgICAgID5cblxuICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJtb2RhbC10aXRsZVwiPlxuICAgICAgICAgICAgICAgIHt0aGlzLmNvbnRleHQudChcIkNvbXBhbnkgSW5mb3JtYXRpb25cIil9XG4gICAgICAgICAgICAgICAgPGkgY2xhc3NOYW1lPVwiZmEgZmEtdGltZXMtY2lyY2xlLW8gY2xvc2UtaWNvblwiIG9uQ2xpY2s9e3RoaXMuY2xvc2VNb2RhbH0vPlxuICAgICAgICAgICAgPC9kaXY+XG5cbiAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwic3RlcC1jb250ZW50IGN1c3RvbVwiPlxuICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwic3RlcC1jb250ZW50LWNvbnRhaW5lclwiPlxuXG4gICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiYmFzZS1mdWxsLWlucHV0XCI+XG4gICAgICAgICAgICAgICAgICAgICAgICA8bGFiZWwgc3R5bGU9e2xhYmVsU3R5bGV9ID5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB7dGhpcy5jb250ZXh0LnQoXCJMZWdhbCBuYW1lXCIpfVxuICAgICAgICAgICAgICAgICAgICAgICAgPC9sYWJlbD5cbiAgICAgICAgICAgICAgICAgICAgICAgIDxpbnB1dFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHR5cGU9e1widGV4dFwifVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHN0eWxlPXtpbnB1dFN0eWxlfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIG9uQ2hhbmdlPXsoZSkgPT4geyB0aGlzLnVwZGF0ZUNvbXBhbnlDb250ZW50KGUsIFwibGVnYWxOYW1lXCIpfX1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YWx1ZT17Y29tcGFueS5sZWdhbE5hbWV9Lz5cbiAgICAgICAgICAgICAgICAgICAgPC9kaXY+XG5cbiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJiYXNlLWZ1bGwtaW5wdXRcIj5cbiAgICAgICAgICAgICAgICAgICAgICAgIDxsYWJlbCBzdHlsZT17bGFiZWxTdHlsZX0gPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHt0aGlzLmNvbnRleHQudChcIlJlZ2lzdHJhdGlvbiBudW1iZXJcIil9XG4gICAgICAgICAgICAgICAgICAgICAgICA8L2xhYmVsPlxuICAgICAgICAgICAgICAgICAgICAgICAgPGlucHV0XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgc3R5bGU9e2lucHV0U3R5bGV9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdHlwZT17XCJ0ZXh0XCJ9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgb25DaGFuZ2U9eyhlKSA9PiB7IHRoaXMudXBkYXRlQ29tcGFueUNvbnRlbnQoZSwgXCJyZWdpc3RyYXRpb25OdW1iZXJcIil9fVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhbHVlPXtjb21wYW55LnJlZ2lzdHJhdGlvbk51bWJlcn0vPlxuICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cblxuICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImJhc2UtZnVsbC1pbnB1dFwiPlxuICAgICAgICAgICAgICAgICAgICAgICAgPGxhYmVsIHN0eWxlPXtsYWJlbFN0eWxlfSA+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAge3RoaXMuY29udGV4dC50KFwiVkFUIElEIG51bWJlclwiKX1cbiAgICAgICAgICAgICAgICAgICAgICAgIDwvbGFiZWw+XG4gICAgICAgICAgICAgICAgICAgICAgICA8aW5wdXRcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBzdHlsZT17aW5wdXRTdHlsZX1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB0eXBlPXtcInRleHRcIn1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBvbkNoYW5nZT17KGUpID0+IHsgdGhpcy51cGRhdGVDb21wYW55Q29udGVudChlLCBcInZhdFwiKX19XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdmFsdWU9e2NvbXBhbnkudmF0fS8+XG4gICAgICAgICAgICAgICAgICAgIDwvZGl2PlxuXG4gICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiYmFzZS1mdWxsLWlucHV0XCI+XG4gICAgICAgICAgICAgICAgICAgICAgICA8bGFiZWwgc3R5bGU9e2xhYmVsU3R5bGV9ID5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB7dGhpcy5jb250ZXh0LnQoXCJTdHJlZXQgTmFtZSAvIE51bWJlclwiKX1cbiAgICAgICAgICAgICAgICAgICAgICAgIDwvbGFiZWw+XG4gICAgICAgICAgICAgICAgICAgICAgICA8aW5wdXRcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBzdHlsZT17aW5wdXRTdHlsZX1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB0eXBlPXtcInRleHRcIn1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBvbkNoYW5nZT17KGUpID0+IHsgdGhpcy51cGRhdGVDb21wYW55Q29udGVudChlLCBcImFkZHJlc3NcIil9fVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRlZmF1bHRWYWx1ZT17Y29tcGFueS5hZGRyZXNzfS8+XG4gICAgICAgICAgICAgICAgICAgIDwvZGl2PlxuXG4gICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiYmFzZS1mdWxsLWlucHV0XCI+XG4gICAgICAgICAgICAgICAgICAgICAgICA8bGFiZWwgc3R5bGU9e2xhYmVsU3R5bGV9ID5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB7dGhpcy5jb250ZXh0LnQoXCJDaXR5XCIpfVxuICAgICAgICAgICAgICAgICAgICAgICAgPC9sYWJlbD5cbiAgICAgICAgICAgICAgICAgICAgICAgIDxpbnB1dFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHN0eWxlPXtpbnB1dFN0eWxlfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHR5cGU9e1widGV4dFwifVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIG9uQ2hhbmdlPXsoZSkgPT4geyB0aGlzLnVwZGF0ZUNvbXBhbnlDb250ZW50KGUsIFwiY2l0eVwiKX19XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdmFsdWU9e2NvbXBhbnkuY2l0eX0vPlxuICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cblxuICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImJhc2UtZnVsbC1pbnB1dFwiPlxuICAgICAgICAgICAgICAgICAgICAgICAgPGxhYmVsIHN0eWxlPXtsYWJlbFN0eWxlfSA+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAge3RoaXMuY29udGV4dC50KFwiWklQIGNvZGVcIil9XG4gICAgICAgICAgICAgICAgICAgICAgICA8L2xhYmVsPlxuICAgICAgICAgICAgICAgICAgICAgICAgPGlucHV0XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgc3R5bGU9e2lucHV0U3R5bGV9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdHlwZT17XCJ0ZXh0XCJ9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgb25DaGFuZ2U9eyhlKSA9PiB7IHRoaXMudXBkYXRlQ29tcGFueUNvbnRlbnQoZSwgXCJ6aXBcIil9fVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhbHVlPXtjb21wYW55LnppcH0vPlxuICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cblxuICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImJhc2UtZnVsbC1pbnB1dFwiPlxuICAgICAgICAgICAgICAgICAgICAgICAgPGxhYmVsIHN0eWxlPXtsYWJlbFN0eWxlfSA+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAge3RoaXMuY29udGV4dC50KFwiQ291bnRyeVwiKX1cbiAgICAgICAgICAgICAgICAgICAgICAgIDwvbGFiZWw+XG4gICAgICAgICAgICAgICAgICAgICAgICA8Q291bnRyeVNlbGVjdG9yXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgbXVsdGk9e2ZhbHNlfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIG9uQ2hhbmdlPXsodmFsKSA9PiB7IHRoaXMudXBkYXRlQ29tcGFueUNvbnRlbnQodmFsKX19XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdmFsdWU9e3t2YWx1ZTogY29tcGFueS5jb3VudHJ5Lm5hbWUsIGxhYmVsOiBjb21wYW55LmNvdW50cnkubmFtZX19Lz5cbiAgICAgICAgICAgICAgICAgICAgPC9kaXY+XG5cblxuICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgPC9kaXY+XG5cbiAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPXtcImJ1dHRvbnNcIn0+XG4gICAgICAgICAgICAgICAgeyBjb21wYW55SXNWYWxpZChjb21wYW55KSAmJjxidXR0b25cbiAgICAgICAgICAgICAgICAgICAgY2xhc3NOYW1lPXtcInN0YW5kYXJkLWJ1dHRvblwifVxuICAgICAgICAgICAgICAgICAgICBvbkNsaWNrPXt0aGlzLm9uT0tDbGlja30+XG4gICAgICAgICAgICAgICAgICAgIHt0aGlzLmNvbnRleHQudChcIk9rXCIpfVxuICAgICAgICAgICAgICAgIDwvYnV0dG9uPn1cblxuICAgICAgICAgICAgICAgIHsgIWNvbXBhbnlJc1ZhbGlkKGNvbXBhbnkpICYmPGJ1dHRvblxuICAgICAgICAgICAgICAgICAgICBjbGFzc05hbWU9e1wic3RhbmRhcmQtYnV0dG9uXCJ9XG4gICAgICAgICAgICAgICAgICAgIGRpc2FibGVkXG4gICAgICAgICAgICAgICAgICAgID5cbiAgICAgICAgICAgICAgICAgICAge3RoaXMuY29udGV4dC50KFwiT2tcIil9XG4gICAgICAgICAgICAgICAgPC9idXR0b24+fVxuICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgIDwvTW9kYWw+XG4gICAgfTtcblxuICAgIHJlbmRlcigpe1xuICAgICAgICBjb25zdCB7IGNvbXBhbnkgfSA9IHRoaXMucHJvcHM7XG4gICAgICAgIHJldHVybiAoXG4gICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImJhc2UtaW5wdXRcIj5cbiAgICAgICAgICAgICAgICB7IHRoaXMucmVuZGVyTW9kYWwoKSB9XG4gICAgICAgICAgICAgICAgPGxhYmVsPlxuICAgICAgICAgICAgICAgICAgICB7dGhpcy5jb250ZXh0LnQoXCJDb21wYW55IGFkZHJlc3NcIil9XG4gICAgICAgICAgICAgICAgPC9sYWJlbD5cbiAgICAgICAgICAgICAgICA8aW5wdXRcbiAgICAgICAgICAgICAgICAgICAgdHlwZT1cInRleHRcIlxuICAgICAgICAgICAgICAgICAgICB2YWx1ZT17Y29tcGFueS5sZWdhbE5hbWUgKyBcIiwgXCIgKyBjb21wYW55LmFkZHJlc3N9XG4gICAgICAgICAgICAgICAgICAgIG9uQ2xpY2s9eygpPT57dGhpcy5zZXRTdGF0ZSh7aXNPcGVuOnRydWV9KX19XG4gICAgICAgICAgICAgICAgICAgIHBsYWNlaG9sZGVyPVwiXCIvPlxuICAgICAgICAgICAgICAgIDxpIGNsYXNzTmFtZT1cImZhIGZhLWVkaXRcIiBvbkNsaWNrPXsoKT0+e3RoaXMuc2V0U3RhdGUoe2lzT3Blbjp0cnVlfSl9fS8+XG4gICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgKVxuICAgIH1cblxuICAgIG9uT0tDbGljayA9ICgpID0+IHtcbiAgICAgICAgY29uc3QgeyB1cGRhdGVDb250ZW50VmFsdWUsIGNvdW50ZXIgfSA9IHRoaXMucHJvcHM7XG4gICAgICAgIGNvbnN0IHsgY29tcGFueSB9ID0gdGhpcy5zdGF0ZTtcblxuICAgICAgICB1cGRhdGVDb250ZW50VmFsdWUoXCJjb21wYW55XCIsIGNvbXBhbnkpO1xuICAgICAgICB1cGRhdGVDb250ZW50VmFsdWUoXCJjb3VudGVyXCIsIGNvdW50ZXIgKyAxKTtcblxuICAgICAgICB0aGlzLmNsb3NlTW9kYWwoKTtcbiAgICB9O1xuXG4gICAgb25EYXRhQ2hhbmdlKG5hbWUsIHZhbHVlKSB7XG4gICAgICAgIHRoaXMuc2V0U3RhdGUoe1xuICAgICAgICAgICAgW25hbWVdOiB2YWx1ZVxuICAgICAgICB9KTtcbiAgICB9XG59XG5cbkNvbXBhbnlJbmZvcm1hdGlvbi5jb250ZXh0VHlwZXMgPSB7XG4gICAgdDogUHJvcFR5cGVzLmZ1bmMuaXNSZXF1aXJlZFxufTtcblxuY29uc3QgbWFwU3RhdGVUb1Byb3BzID0gc3RhdGUgPT4ge1xuICAgIHJldHVybiBzdGF0ZS5jb250ZW50XG59O1xuXG5jb25zdCBtYXBEaXNwYXRjaFRvUHJvcHMgPSBkaXNwYXRjaCA9PiB7XG4gICAgcmV0dXJuIHtcbiAgICAgICAgdXBkYXRlQ29udGVudFZhbHVlIDogKGtleSwgdmFsdWUpID0+IGRpc3BhdGNoKHtcbiAgICAgICAgICAgIHR5cGU6ICdVUERBVEVfQ09OVEVOVF9WQUxVRScsXG4gICAgICAgICAgICBrZXk6IGtleSxcbiAgICAgICAgICAgIHZhbHVlIDogdmFsdWVcbiAgICAgICAgfSlcbiAgICB9XG59O1xuXG5leHBvcnQgZGVmYXVsdCBjb25uZWN0KFxuICAgIG1hcFN0YXRlVG9Qcm9wcyxcbiAgICBtYXBEaXNwYXRjaFRvUHJvcHNcbikoQ29tcGFueUluZm9ybWF0aW9uKVxuXG5cbi8vIFdFQlBBQ0sgRk9PVEVSIC8vXG4vLyAuL3NyYy9BcHBCdW5kbGUvUmVzb3VyY2VzL3B1YmxpYy9qYXZhc2NyaXB0L3NlbGwvY29tcG9uZW50cy9Db21wYW55SW5mb3JtYXRpb24uanMiLCJpbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xuaW1wb3J0IGNuIGZyb20gJ2NsYXNzbmFtZXMnO1xuaW1wb3J0IHtQcm9wVHlwZXN9IGZyb20gXCJwcm9wLXR5cGVzXCI7XG5cbmNvbnN0IENVUlJFTkNJRVMgPSBbJ1VTRCcsICdFVVInXTtcblxuY2xhc3MgQ3VycmVuY3lTZWxlY3RvciBleHRlbmRzIFJlYWN0LkNvbXBvbmVudCB7XG4gICAgY29uc3RydWN0b3IocHJvcHMpIHtcbiAgICAgICAgc3VwZXIocHJvcHMpO1xuICAgICAgICB0aGlzLnN0YXRlID0ge1xuXG4gICAgICAgIH07XG4gICAgfVxuXG4gICAgcmVuZGVyKCl7XG4gICAgICAgIGNvbnN0IHsgb25DbGljaywgc2VsZWN0ZWQgfSA9IHRoaXMucHJvcHM7XG5cbiAgICAgICAgcmV0dXJuIChcbiAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPSdzZWxlY3QtY3VycmVuY3knPlxuICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPSdzZWxlY3QtdGV4dCc+XG4gICAgICAgICAgICAgICAgICAgIHt0aGlzLmNvbnRleHQudChcIkN1cnJlbmN5XCIpfVxuICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPSdjdXJyZW5jeS1zZWxlY3Rvcic+XG4gICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPSdjdXJyZW50Jz57c2VsZWN0ZWR9PC9kaXY+XG4gICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPSdkcm9wZG93bic+XG4gICAgICAgICAgICAgICAgICAgICAgICB7Q1VSUkVOQ0lFUy5maWx0ZXIoY3VycmVuY3kgPT4gY3VycmVuY3kgIT09IHNlbGVjdGVkKS5tYXAoKGN1cnJlbmN5KSA9PiB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIChcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9e2NuKCdjdXJyZW5jeS1pdGVtJyl9IG9uQ2xpY2s9eygpID0+IG9uQ2xpY2soY3VycmVuY3kpfT5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHtjdXJyZW5jeX1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH0pfVxuICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICApO1xuICAgIH1cbn1cblxuQ3VycmVuY3lTZWxlY3Rvci5jb250ZXh0VHlwZXMgPSB7XG4gICAgdDogUHJvcFR5cGVzLmZ1bmMuaXNSZXF1aXJlZFxufTtcblxuZXhwb3J0IGRlZmF1bHQgQ3VycmVuY3lTZWxlY3RvcjtcblxuXG4vLyBXRUJQQUNLIEZPT1RFUiAvL1xuLy8gLi9zcmMvQXBwQnVuZGxlL1Jlc291cmNlcy9wdWJsaWMvamF2YXNjcmlwdC9zZWxsL2NvbXBvbmVudHMvQ3VycmVuY3lTZWxlY3Rvci5qcyIsImltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgRGF0ZVBpY2tlciBmcm9tICdyZWFjdC1kYXRlcGlja2VyJztcbmltcG9ydCBtb21lbnQgZnJvbSAnbW9tZW50JztcbmltcG9ydCB7Y29ubmVjdH0gZnJvbSBcInJlYWN0LXJlZHV4XCI7XG5pbXBvcnQge1Byb3BUeXBlc30gZnJvbSBcInByb3AtdHlwZXNcIjtcblxuY2xhc3MgRXhwaXJhdGlvbkRhdGVTZWxlY3RvciBleHRlbmRzIFJlYWN0LkNvbXBvbmVudCB7XG4gICAgY29uc3RydWN0b3IocHJvcHMpIHtcbiAgICAgICAgc3VwZXIocHJvcHMpO1xuICAgICAgICB0aGlzLnN0YXRlID0ge1xuICAgICAgICB9O1xuICAgIH1cblxuICAgIGhhbmRsZVN0YXJ0RGF0ZSA9IChkYXRlKSA9PiB7XG4gICAgICAgIHRoaXMucHJvcHMudXBkYXRlQ29udGVudFZhbHVlKFwiZXhwaXJlc0F0XCIsIGRhdGUpO1xuICAgIH07XG5cbiAgICByZW5kZXIoKXtcbiAgICAgICAgY29uc3QgeyBleHBpcmVzQXQgfSA9IHRoaXMucHJvcHM7XG5cbiAgICAgICAgcmV0dXJuIChcbiAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiYmFzZS1pbnB1dFwiPlxuICAgICAgICAgICAgICAgIDxsYWJlbD5cbiAgICAgICAgICAgICAgICAgICAge3RoaXMuY29udGV4dC50KFwiQ0xfU1RFUDRfVElUTEVfRVhQSVJZXCIpfVxuICAgICAgICAgICAgICAgIDwvbGFiZWw+XG4gICAgICAgICAgICAgICAgPERhdGVQaWNrZXJcbiAgICAgICAgICAgICAgICAgICAgY2xhc3NOYW1lPXtcImRhdGUtcGlja2VyXCJ9XG4gICAgICAgICAgICAgICAgICAgIHNlbGVjdGVkPXsoZXhwaXJlc0F0KT8gbW9tZW50KGV4cGlyZXNBdCk6IHVuZGVmaW5lZH1cbiAgICAgICAgICAgICAgICAgICAgb25DaGFuZ2U9e3RoaXMuaGFuZGxlU3RhcnREYXRlfVxuICAgICAgICAgICAgICAgICAgICBtaW5EYXRlPXttb21lbnQoKX1cbiAgICAgICAgICAgICAgICAgICAgZml4ZWRIZWlnaHQ9e3RydWV9XG4gICAgICAgICAgICAgICAgICAgIHBsYWNlaG9sZGVyVGV4dD17XCJkZC9tbS95eXl5XCJ9XG4gICAgICAgICAgICAgICAgLz5cbiAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICApXG4gICAgfVxufVxuXG5FeHBpcmF0aW9uRGF0ZVNlbGVjdG9yLmNvbnRleHRUeXBlcyA9IHtcbiAgICB0OiBQcm9wVHlwZXMuZnVuYy5pc1JlcXVpcmVkXG59O1xuXG5jb25zdCBtYXBTdGF0ZVRvUHJvcHMgPSBzdGF0ZSA9PiB7XG4gICAgcmV0dXJuIHN0YXRlLmNvbnRlbnRcbn07XG5cbmNvbnN0IG1hcERpc3BhdGNoVG9Qcm9wcyA9IGRpc3BhdGNoID0+IHtcbiAgICByZXR1cm4ge1xuICAgICAgICB1cGRhdGVDb250ZW50VmFsdWUgOiAoa2V5LCB2YWx1ZSkgPT4gZGlzcGF0Y2goe1xuICAgICAgICAgICAgdHlwZTogJ1VQREFURV9DT05URU5UX1ZBTFVFJyxcbiAgICAgICAgICAgIGtleToga2V5LFxuICAgICAgICAgICAgdmFsdWUgOiB2YWx1ZVxuICAgICAgICB9KVxuICAgIH1cbn07XG5cbmV4cG9ydCBkZWZhdWx0IGNvbm5lY3QoXG4gICAgbWFwU3RhdGVUb1Byb3BzLFxuICAgIG1hcERpc3BhdGNoVG9Qcm9wc1xuKShFeHBpcmF0aW9uRGF0ZVNlbGVjdG9yKVxuXG5cbi8vIFdFQlBBQ0sgRk9PVEVSIC8vXG4vLyAuL3NyYy9BcHBCdW5kbGUvUmVzb3VyY2VzL3B1YmxpYy9qYXZhc2NyaXB0L3NlbGwvY29tcG9uZW50cy9FeHBpcmF0aW9uRGF0ZVNlbGVjdG9yLmpzIiwiaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCB7Y29ubmVjdH0gZnJvbSBcInJlYWN0LXJlZHV4XCI7XG5pbXBvcnQgQ291bnRyeVNlbGVjdG9yIGZyb20gXCIuLi8uLi9tYWluL2NvbXBvbmVudHMvQ291bnRyeVNlbGVjdG9yXCI7XG5pbXBvcnQge1Byb3BUeXBlc30gZnJvbSBcInByb3AtdHlwZXNcIjtcblxuY2xhc3MgSnVyaXNkaWN0aW9uU2VsZWN0b3IgZXh0ZW5kcyBSZWFjdC5Db21wb25lbnQge1xuICAgIGNvbnN0cnVjdG9yKHByb3BzKSB7XG4gICAgICAgIHN1cGVyKHByb3BzKTtcbiAgICAgICAgdGhpcy5zdGF0ZSA9IHtcbiAgICAgICAgfTtcbiAgICB9XG5cbiAgICBzZWxlY3RUZXJyaXRvcnkgPSAodmFsdWUpID0+IHtcbiAgICAgICAgdGhpcy5wcm9wcy51cGRhdGVDb250ZW50VmFsdWUoXCJqdXJpc2RpY3Rpb25cIiwgdmFsdWUpO1xuICAgIH07XG5cbiAgICByZW5kZXIoKXtcbiAgICAgICAgY29uc3QgeyBqdXJpc2RpY3Rpb24gfSA9IHRoaXMucHJvcHM7XG4gICAgICAgIHJldHVybiAoXG4gICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImJhc2UtaW5wdXRcIj5cbiAgICAgICAgICAgICAgICA8bGFiZWw+XG4gICAgICAgICAgICAgICAgICAgIHt0aGlzLmNvbnRleHQudChcIkNMX1NURVA0X0xBQkVMX0pVUklTRElDVElPTlwiKX1cbiAgICAgICAgICAgICAgICA8L2xhYmVsPlxuICAgICAgICAgICAgICAgIDxDb3VudHJ5U2VsZWN0b3JcbiAgICAgICAgICAgICAgICAgICAgY2xhc3NOYW1lPXtcImJhc2UtaW5wdXQtc2VsZWN0XCJ9IG11bHRpPXtmYWxzZX0gdmFsdWU9e2p1cmlzZGljdGlvbn1cbiAgICAgICAgICAgICAgICAgICAgb25DaGFuZ2U9e3RoaXMuc2VsZWN0VGVycml0b3J5fSAvPlxuICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgIClcbiAgICB9XG59XG5cbkp1cmlzZGljdGlvblNlbGVjdG9yLmNvbnRleHRUeXBlcyA9IHtcbiAgICB0OiBQcm9wVHlwZXMuZnVuYy5pc1JlcXVpcmVkXG59O1xuXG5jb25zdCBtYXBTdGF0ZVRvUHJvcHMgPSBzdGF0ZSA9PiB7XG4gICAgcmV0dXJuIHN0YXRlLmNvbnRlbnRcbn07XG5cbmNvbnN0IG1hcERpc3BhdGNoVG9Qcm9wcyA9IGRpc3BhdGNoID0+IHtcbiAgICByZXR1cm4ge1xuICAgICAgICB1cGRhdGVDb250ZW50VmFsdWUgOiAoa2V5LCB2YWx1ZSkgPT4gZGlzcGF0Y2goe1xuICAgICAgICAgICAgdHlwZTogJ1VQREFURV9DT05URU5UX1ZBTFVFJyxcbiAgICAgICAgICAgIGtleToga2V5LFxuICAgICAgICAgICAgdmFsdWUgOiB2YWx1ZVxuICAgICAgICB9KVxuICAgIH1cbn07XG5cbmV4cG9ydCBkZWZhdWx0IGNvbm5lY3QoXG4gICAgbWFwU3RhdGVUb1Byb3BzLFxuICAgIG1hcERpc3BhdGNoVG9Qcm9wc1xuKShKdXJpc2RpY3Rpb25TZWxlY3RvcilcblxuXG4vLyBXRUJQQUNLIEZPT1RFUiAvL1xuLy8gLi9zcmMvQXBwQnVuZGxlL1Jlc291cmNlcy9wdWJsaWMvamF2YXNjcmlwdC9zZWxsL2NvbXBvbmVudHMvSnVyaXNkaWN0aW9uU2VsZWN0b3IuanMiLCJpbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xuaW1wb3J0IERhdGVQaWNrZXIgZnJvbSAncmVhY3QtZGF0ZXBpY2tlcic7XG5pbXBvcnQgbW9tZW50IGZyb20gJ21vbWVudCc7XG5pbXBvcnQgTW9kYWwgZnJvbSAncmVhY3QtbW9kYWwnO1xuaW1wb3J0IHtjdXN0b21TdHlsZXN9IGZyb20gXCIuLi8uLi9tYWluL3N0eWxlcy9jdXN0b21cIjtcbmltcG9ydCB7UHJvcFR5cGVzfSBmcm9tIFwicHJvcC10eXBlc1wiO1xuXG5jbGFzcyBMaWNlbnNlRGF0ZVNlbGVjdG9yIGV4dGVuZHMgUmVhY3QuQ29tcG9uZW50IHtcbiAgICBjb25zdHJ1Y3Rvcihwcm9wcykge1xuICAgICAgICBzdXBlcihwcm9wcyk7XG4gICAgICAgIHRoaXMuc3RhdGUgPSB7XG4gICAgICAgICAgICBpc09wZW4gOiBwcm9wcy5pc09wZW4sXG4gICAgICAgICAgICBzdGFydERhdGUgOiBwcm9wcy5zdGFydERhdGUsXG4gICAgICAgICAgICBlbmREYXRlIDogcHJvcHMuZW5kRGF0ZSxcbiAgICAgICAgICAgIGVuZERhdGVMaW1pdCA6IHByb3BzLmVuZERhdGVMaW1pdCxcbiAgICAgICAgICAgIHN0YXJ0RGF0ZU1vZGUgOiBwcm9wcy5zdGFydERhdGVNb2RlLFxuICAgICAgICAgICAgZW5kRGF0ZU1vZGUgOiBwcm9wcy5lbmREYXRlTW9kZVxuICAgICAgICB9O1xuICAgIH1cblxuICAgIGNvbXBvbmVudFdpbGxSZWNlaXZlUHJvcHMobmV4dFByb3BzKSB7XG4gICAgICAgIHRoaXMuc2V0U3RhdGUoe1xuICAgICAgICAgICAgaXNPcGVuOiBuZXh0UHJvcHMuaXNPcGVuLFxuICAgICAgICAgICAgc3RhcnREYXRlIDogbmV4dFByb3BzLnN0YXJ0RGF0ZSxcbiAgICAgICAgICAgIGVuZERhdGUgOiBuZXh0UHJvcHMuZW5kRGF0ZSxcbiAgICAgICAgICAgIGVuZERhdGVMaW1pdCA6IG5leHRQcm9wcy5lbmREYXRlTGltaXQsXG4gICAgICAgICAgICBzdGFydERhdGVNb2RlIDogbmV4dFByb3BzLnN0YXJ0RGF0ZU1vZGUsXG4gICAgICAgICAgICBlbmREYXRlTW9kZSA6IG5leHRQcm9wcy5lbmREYXRlTW9kZVxuICAgICAgICB9KTtcbiAgICB9XG5cbiAgICBoYW5kbGVTdGFydERhdGUgPSAoZGF0ZSkgPT4ge1xuICAgICAgICB0aGlzLm9uRGF0YUNoYW5nZShcInN0YXJ0RGF0ZVwiLCBkYXRlKTtcbiAgICAgICAgdGhpcy5vbkRhdGFDaGFuZ2UoXCJlbmREYXRlXCIsIG51bGwpO1xuICAgIH07XG5cbiAgICBoYW5kbGVFbmREYXRlID0gKGRhdGUpID0+IHtcbiAgICAgICAgdGhpcy5vbkRhdGFDaGFuZ2UoXCJlbmREYXRlXCIsIGRhdGUpO1xuICAgIH07XG5cbiAgICBoYW5kbGVFbmREYXRlTGltaXQgPSAoZSkgPT4ge1xuICAgICAgICB0aGlzLm9uRGF0YUNoYW5nZShcImVuZERhdGVMaW1pdFwiLCBlLnRhcmdldC52YWx1ZSk7XG4gICAgfTtcblxuICAgIHJlbmRlcigpe1xuICAgICAgICBjb25zdCB7IG9uQ2xvc2UgfSA9IHRoaXMucHJvcHM7XG4gICAgICAgIGNvbnN0IHsgc3RhcnREYXRlLCBlbmREYXRlLCBlbmREYXRlTGltaXQsIHN0YXJ0RGF0ZU1vZGUsIGVuZERhdGVNb2RlIH0gPSB0aGlzLnN0YXRlO1xuICAgICAgICBjb25zdCBzYXZlQnV0dG9uVG9vbHRpcCA9IHRoaXMuY29udGV4dC50KHRoaXMuZ2V0U2F2ZUJ1dHRvblRvb2x0aXAoKSk7XG5cbiAgICAgICAgcmV0dXJuIChcbiAgICAgICAgICAgIDxNb2RhbFxuICAgICAgICAgICAgICAgIGlzT3Blbj17dGhpcy5zdGF0ZS5pc09wZW59XG4gICAgICAgICAgICAgICAgYm9keU9wZW5DbGFzc05hbWU9e1wic2VsZWN0b3JcIn1cbiAgICAgICAgICAgICAgICBzdHlsZT17Y3VzdG9tU3R5bGVzfVxuICAgICAgICAgICAgPlxuXG4gICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJtb2RhbC10aXRsZVwiPlxuICAgICAgICAgICAgICAgICAgICA8aSBjbGFzc05hbWU9XCJmYSBmYS1lZGl0XCIvPlxuICAgICAgICAgICAgICAgICAgICB7dGhpcy5jb250ZXh0LnQoXCJsaWNlbnNlIHBlcmlvZFwiKX1cbiAgICAgICAgICAgICAgICAgICAgPGkgY2xhc3NOYW1lPVwiZmEgZmEtdGltZXMgY2xvc2UtaWNvblwiIG9uQ2xpY2s9e29uQ2xvc2V9Lz5cbiAgICAgICAgICAgICAgICA8L2Rpdj5cblxuICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwic3RlcC1jb250ZW50IHN0ZXAtY29udGVudC1jdXN0b21cIj5cbiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJzdGVwLWNvbnRlbnQtY29udGFpbmVyXCI+XG4gICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cIm1vZGFsLWlucHV0XCI+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxhYmVsPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB7dGhpcy5jb250ZXh0LnQoXCJDTF9TVEVQM19MSUNFTlNFX1BPUFVQX1NUQVJUXCIpfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvbGFiZWw+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJyb3dcIj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJjb2x1bW5cIj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpbnB1dCB0eXBlPVwicmFkaW9cIlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNoZWNrZWQ9e3N0YXJ0RGF0ZU1vZGUgPT09IFwiTElDRU5TRVwifVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG9uQ2hhbmdlPXsgKGUpID0+IHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5vbkRhdGFDaGFuZ2UoXCJzdGFydERhdGVNb2RlXCIsIFwiTElDRU5TRVwiKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9fVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlkPXtcImxpY2Vuc2Utc3RhcnQtY29udHJhY3RcIn1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjbGFzc05hbWU9XCJjYS1yYWRpbyBwYWNrYWdlLXNlbGVjdG9yXCJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB7dGhpcy5jb250ZXh0LnQoXCJDTF9TVEVQM19MSUNFTlNFX1BPUFVQX1NUQVJUX0NPTkNMVVNJT05cIil9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImNvbHVtblwiPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGlucHV0IHR5cGU9XCJyYWRpb1wiXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY2hlY2tlZD17c3RhcnREYXRlTW9kZSA9PT0gXCJEQVRFXCJ9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgb25DaGFuZ2U9eyAoZSkgPT57XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMub25EYXRhQ2hhbmdlKFwic3RhcnREYXRlTW9kZVwiLCBcIkRBVEVcIik7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfX1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZD17XCJsaWNlbnNlLXN0YXJ0XCJ9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY2xhc3NOYW1lPVwiY2EtcmFkaW8gcGFja2FnZS1zZWxlY3RvclwiXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAvPlxuXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8RGF0ZVBpY2tlclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNsYXNzTmFtZT17XCJkYXRlLXBpY2tlclwifVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNlbGVjdGVkPXsoc3RhcnREYXRlKT8gbW9tZW50KHN0YXJ0RGF0ZSk6IHVuZGVmaW5lZH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBkaXNhYmxlZD17c3RhcnREYXRlTW9kZSE9PVwiREFURVwifVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG9uQ2hhbmdlPXt0aGlzLmhhbmRsZVN0YXJ0RGF0ZX1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBwbGFjZWhvbGRlclRleHQ9e1wiZGQvbW0veXl5eVwifVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgLz5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwibW9kYWwtaW5wdXRcIj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGFiZWw+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHt0aGlzLmNvbnRleHQudChcIkNMX1NURVAzX0xJQ0VOU0VfUE9QVVBfRU5EXCIpfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvbGFiZWw+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJyb3dcIj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJjb2x1bW5cIj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpbnB1dCB0eXBlPVwicmFkaW9cIlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNoZWNrZWQ9e2VuZERhdGVNb2RlPT09XCJMSU1JVEVEXCJ9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgb25DaGFuZ2U9eyAoZSkgPT57XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMub25EYXRhQ2hhbmdlKFwiZW5kRGF0ZU1vZGVcIiwgXCJMSU1JVEVEXCIpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH19XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaWQ9e1wibGljZW5zZS1lbmQtaW5wdXRcIn1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjbGFzc05hbWU9XCJjYS1yYWRpbyBwYWNrYWdlLXNlbGVjdG9yXCJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aW5wdXRcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0eXBlPXtcIm51bWJlclwifVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRpc2FibGVkPXtlbmREYXRlTW9kZSE9PVwiTElNSVRFRFwifVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhbHVlPXtlbmREYXRlTGltaXR9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgb25DaGFuZ2U9e3RoaXMuaGFuZGxlRW5kRGF0ZUxpbWl0fVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHBsYWNlaG9sZGVyPXtcIkVudGVyIG51bWJlclwifS8+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzc05hbWU9e1wic21hbGwtbGFiZWxcIn0+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAge3RoaXMuY29udGV4dC50KFwiTElTVElOR19ERVRBSUxTX0xJQ0VOU0VfRU5EX0RBWVNcIil9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3NwYW4+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImNvbHVtblwiPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGlucHV0IHR5cGU9XCJyYWRpb1wiXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY2hlY2tlZD17ZW5kRGF0ZU1vZGU9PT1cIkRBVEVcIn1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBvbkNoYW5nZT17IChlKSA9PntcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5vbkRhdGFDaGFuZ2UoXCJlbmREYXRlTW9kZVwiLCBcIkRBVEVcIik7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfX1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZD17XCJsaWNlbnNlLWVuZFwifVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNsYXNzTmFtZT1cImNhLXJhZGlvIHBhY2thZ2Utc2VsZWN0b3JcIlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgLz5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxEYXRlUGlja2VyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY2xhc3NOYW1lPXtcImRhdGUtcGlja2VyXCJ9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbWluRGF0ZT17c3RhcnREYXRlTW9kZSE9PVwiREFURVwiID8gbW9tZW50KCkgOiBtb21lbnQoc3RhcnREYXRlKX1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzZWxlY3RlZD17KGVuZERhdGUpPyBtb21lbnQoZW5kRGF0ZSk6IHVuZGVmaW5lZH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBkaXNhYmxlZD17ZW5kRGF0ZU1vZGUhPT1cIkRBVEVcIn1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBvbkNoYW5nZT17dGhpcy5oYW5kbGVFbmREYXRlfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHBsYWNlaG9sZGVyVGV4dD17XCJkZC9tbS95eXl5XCJ9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAvPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJjb2x1bW5cIj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpbnB1dCB0eXBlPVwicmFkaW9cIlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNoZWNrZWQ9e2VuZERhdGVNb2RlPT09XCJVTkxJTUlURURcIn1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBvbkNoYW5nZT17IChlKSA9PntcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5vbkRhdGFDaGFuZ2UoXCJlbmREYXRlTW9kZVwiLCBcIlVOTElNSVRFRFwiKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9fVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlkPXtcImxpY2Vuc2UtZW5kLXVubGltaXRlZFwifVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNsYXNzTmFtZT1cImNhLXJhZGlvIHBhY2thZ2Utc2VsZWN0b3JcIlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgLz5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIHN0eWxlPXt7cGFkZGluZzogJzEycHggMCd9fT5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB7dGhpcy5jb250ZXh0LnQoXCJVbmxpbWl0ZWRcIil9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3NwYW4+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICAgIDwvZGl2PlxuXG4gICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9e1wiYnV0dG9ucyBwb3B1cC1idXR0b25zXCJ9PlxuICAgICAgICAgICAgICAgICAgICA8YnV0dG9uXG4gICAgICAgICAgICAgICAgICAgICAgICB0aXRsZT17c2F2ZUJ1dHRvblRvb2x0aXB9XG4gICAgICAgICAgICAgICAgICAgICAgICBkaXNhYmxlZD17ISFzYXZlQnV0dG9uVG9vbHRpcH1cbiAgICAgICAgICAgICAgICAgICAgICAgIGNsYXNzTmFtZT17XCJzdGFuZGFyZC1idXR0b25cIn1cbiAgICAgICAgICAgICAgICAgICAgICAgIG9uQ2xpY2s9e3RoaXMub25PS0NsaWNrfT5cbiAgICAgICAgICAgICAgICAgICAgICAgIHt0aGlzLmNvbnRleHQudChcIkFjY2VwdFwiKX1cbiAgICAgICAgICAgICAgICAgICAgPC9idXR0b24+XG4gICAgICAgICAgICAgICAgPC9kaXY+XG5cbiAgICAgICAgICAgIDwvTW9kYWw+XG4gICAgICAgIClcbiAgICB9XG5cbiAgICBnZXRTYXZlQnV0dG9uVG9vbHRpcCgpIHtcbiAgICAgICAgY29uc3QgeyBzdGFydERhdGUsIGVuZERhdGUsIGVuZERhdGVMaW1pdCwgc3RhcnREYXRlTW9kZSwgZW5kRGF0ZU1vZGUgfSA9IHRoaXMuc3RhdGU7XG5cbiAgICAgICAgaWYgKHN0YXJ0RGF0ZU1vZGUgPT09ICdEQVRFJyAmJiAoIXN0YXJ0RGF0ZSB8fCAhbW9tZW50KHN0YXJ0RGF0ZSkuaXNWYWxpZCgpKSkge1xuICAgICAgICAgICAgcmV0dXJuICdQbGVhc2Ugc3BlY2lmeSBjb3JyZWN0IGRhdGUgZm9yIFN0YXJ0IG9mIGxpY2Vuc2UgcGVyaW9kJztcbiAgICAgICAgfVxuXG4gICAgICAgIGlmIChlbmREYXRlTW9kZSA9PT0gJ0RBVEUnICYmICgoIWVuZERhdGUgfHwgIW1vbWVudChlbmREYXRlKS5pc1ZhbGlkKCkpIHx8IGVuZERhdGUuaXNCZWZvcmUoc3RhcnREYXRlKSkgKSB7XG4gICAgICAgICAgICByZXR1cm4gJ1BsZWFzZSBzcGVjaWZ5IGNvcnJlY3QgZGF0ZSBmb3IgRW5kIG9mIGxpY2Vuc2UgcGVyaW9kJztcbiAgICAgICAgfVxuXG4gICAgICAgIGlmIChlbmREYXRlTW9kZSA9PT0gJ0xJTUlURUQnICYmICghZW5kRGF0ZUxpbWl0IHx8IGlzTmFOKGVuZERhdGVMaW1pdCkgfHwgZW5kRGF0ZUxpbWl0IDwgMSkgKSB7XG4gICAgICAgICAgICByZXR1cm4gJ1BsZWFzZSBzcGVjaWZ5IGNvcnJlY3QgZGF5cyBsaW1pdCBmb3IgRW5kIG9mIGxpY2Vuc2UgcGVyaW9kJztcbiAgICAgICAgfVxuXG4gICAgICAgIGlmICghZW5kRGF0ZU1vZGUpIHtcbiAgICAgICAgICAgIHJldHVybiAnUGxlYXNlIHNwZWNpZnkgRW5kIG9mIGxpY2Vuc2UgcGVyaW9kJztcbiAgICAgICAgfVxuICAgIH1cblxuICAgIG9uT0tDbGljayA9ICgpID0+IHtcbiAgICAgICAgY29uc3QgeyBvbkNsb3NlLCBvblVwZGF0ZSB9ID0gdGhpcy5wcm9wcztcbiAgICAgICAgY29uc3QgeyBzdGFydERhdGUsIGVuZERhdGUsIGVuZERhdGVMaW1pdCwgc3RhcnREYXRlTW9kZSwgZW5kRGF0ZU1vZGUgfSA9IHRoaXMuc3RhdGU7XG5cbiAgICAgICAgb25VcGRhdGUoXCJzdGFydERhdGVcIiwgc3RhcnREYXRlKTtcbiAgICAgICAgb25VcGRhdGUoXCJlbmREYXRlXCIsIGVuZERhdGUpO1xuICAgICAgICBvblVwZGF0ZShcImVuZERhdGVMaW1pdFwiLCBlbmREYXRlTGltaXQpO1xuICAgICAgICBvblVwZGF0ZShcInN0YXJ0RGF0ZU1vZGVcIiwgc3RhcnREYXRlTW9kZSk7XG4gICAgICAgIG9uVXBkYXRlKFwiZW5kRGF0ZU1vZGVcIiwgZW5kRGF0ZU1vZGUpO1xuXG4gICAgICAgIG9uQ2xvc2UoKTtcbiAgICB9O1xuXG4gICAgb25EYXRhQ2hhbmdlKG5hbWUsIHZhbHVlKSB7XG4gICAgICAgIHRoaXMuc2V0U3RhdGUoe1xuICAgICAgICAgICAgW25hbWVdOiB2YWx1ZVxuICAgICAgICB9KTtcbiAgICB9XG59XG5cbkxpY2Vuc2VEYXRlU2VsZWN0b3IuY29udGV4dFR5cGVzID0ge1xuICAgIHQ6IFByb3BUeXBlcy5mdW5jLmlzUmVxdWlyZWRcbn07XG5cbmV4cG9ydCBkZWZhdWx0IExpY2Vuc2VEYXRlU2VsZWN0b3I7XG5cblxuLy8gV0VCUEFDSyBGT09URVIgLy9cbi8vIC4vc3JjL0FwcEJ1bmRsZS9SZXNvdXJjZXMvcHVibGljL2phdmFzY3JpcHQvc2VsbC9jb21wb25lbnRzL0xpY2Vuc2VEYXRlU2VsZWN0b3IuanMiLCJpbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xuaW1wb3J0IHsgY29ubmVjdCB9IGZyb20gXCJyZWFjdC1yZWR1eFwiO1xuaW1wb3J0IHtQcm9wVHlwZXN9IGZyb20gXCJwcm9wLXR5cGVzXCI7XG5cbmNsYXNzIExpc3RpbmdOYW1lIGV4dGVuZHMgUmVhY3QuQ29tcG9uZW50IHtcblxuICAgIGNvbnN0cnVjdG9yKHByb3BzKSB7XG4gICAgICAgIHN1cGVyKHByb3BzKTtcbiAgICAgICAgdGhpcy5zdGF0ZSA9IHtcbiAgICAgICAgfTtcbiAgICB9XG5cbiAgICBjb21wb25lbnREaWRNb3VudCgpIHtcbiAgICAgICAgY29uc3QgZWxlbWVudCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoJy5zdGVwLWNvbnRlbnQuc3RlcC00IC5saXN0aW5nLXN1bW1hcnknKTtcblxuICAgICAgICBpZiAoZWxlbWVudCkge1xuICAgICAgICAgICAgY29uc3Qgbm9kZSA9IGVsZW1lbnRbMF07XG4gICAgICAgICAgICB0aGlzLnNldFN0YXRlKHtcbiAgICAgICAgICAgICAgICBuYW1lOiBub2RlLnRleHRDb250ZW50XG4gICAgICAgICAgICB9KVxuICAgICAgICB9XG4gICAgfVxuXG4gICAgdXBkYXRlTmFtZSA9ICggZSApID0+IHtcbiAgICAgICAgdGhpcy5wcm9wcy51cGRhdGVDb250ZW50VmFsdWUoXCJuYW1lXCIsIGUudGFyZ2V0LnZhbHVlKTtcbiAgICB9O1xuXG4gICAgcmVuZGVyKCkge1xuICAgICAgICBjb25zdCB7bmFtZX0gPSB0aGlzLnByb3BzO1xuICAgICAgICByZXR1cm4gKFxuICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJiYXNlLWlucHV0XCI+XG4gICAgICAgICAgICAgICAgPGxhYmVsPlxuICAgICAgICAgICAgICAgICAgICB7dGhpcy5jb250ZXh0LnQoXCJMaXN0aW5nIG5hbWVcIil9XG4gICAgICAgICAgICAgICAgPC9sYWJlbD5cbiAgICAgICAgICAgICAgICA8aW5wdXRcbiAgICAgICAgICAgICAgICAgICAgdHlwZT1cInRleHRcIlxuICAgICAgICAgICAgICAgICAgICB2YWx1ZT17bmFtZSB8fCB0aGlzLnN0YXRlLm5hbWV9XG4gICAgICAgICAgICAgICAgICAgIG9uQ2hhbmdlPXt0aGlzLnVwZGF0ZU5hbWV9XG4gICAgICAgICAgICAgICAgICAgIHBsYWNlaG9sZGVyPVwiXCJcbiAgICAgICAgICAgICAgICAgICAgbWF4TGVuZ3RoPXs3MH1cbiAgICAgICAgICAgICAgICAvPlxuICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICk7XG4gICAgfVxufVxuXG5MaXN0aW5nTmFtZS5jb250ZXh0VHlwZXMgPSB7XG4gICAgdDogUHJvcFR5cGVzLmZ1bmMuaXNSZXF1aXJlZFxufTtcblxuY29uc3QgbWFwU3RhdGVUb1Byb3BzID0gc3RhdGUgPT4ge1xuICAgIHJldHVybiBzdGF0ZS5jb250ZW50XG59O1xuXG5jb25zdCBtYXBEaXNwYXRjaFRvUHJvcHMgPSBkaXNwYXRjaCA9PiB7XG4gICAgcmV0dXJuIHtcbiAgICAgICAgdXBkYXRlQ29udGVudFZhbHVlIDogKGtleSwgdmFsdWUpID0+IGRpc3BhdGNoKHtcbiAgICAgICAgICAgIHR5cGU6ICdVUERBVEVfQ09OVEVOVF9WQUxVRScsXG4gICAgICAgICAgICBrZXk6IGtleSxcbiAgICAgICAgICAgIHZhbHVlIDogdmFsdWVcbiAgICAgICAgfSlcbiAgICB9XG59O1xuXG5leHBvcnQgZGVmYXVsdCBjb25uZWN0KFxuICAgIG1hcFN0YXRlVG9Qcm9wcyxcbiAgICBtYXBEaXNwYXRjaFRvUHJvcHNcbikoTGlzdGluZ05hbWUpXG5cblxuLy8gV0VCUEFDSyBGT09URVIgLy9cbi8vIC4vc3JjL0FwcEJ1bmRsZS9SZXNvdXJjZXMvcHVibGljL2phdmFzY3JpcHQvc2VsbC9jb21wb25lbnRzL0xpc3RpbmdOYW1lLmpzIiwiaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcblxuY2xhc3MgTWF0Y2ggZXh0ZW5kcyBSZWFjdC5Db21wb25lbnQge1xuICAgIGNvbnN0cnVjdG9yKHByb3BzKSB7XG4gICAgICAgIHN1cGVyKHByb3BzKTtcbiAgICAgICAgdGhpcy5zdGF0ZSA9IHtcbiAgICAgICAgICAgIG1hdGNoIDogcHJvcHMubWF0Y2gsXG4gICAgICAgICAgICBzZWxlY3RlZCA6IHByb3BzLnNlbGVjdGVkIHx8IGZhbHNlXG4gICAgICAgIH07XG4gICAgfVxuXG4gICAgdG9nZ2xlID0gKGUpID0+IHtcbiAgICAgICAgdGhpcy5zZXRTdGF0ZSgocHJldlN0YXRlKSA9PiAoe1xuICAgICAgICAgICAgc2VsZWN0ZWQ6ICFwcmV2U3RhdGUuc2VsZWN0ZWRcbiAgICAgICAgfSkpO1xuXG4gICAgICAgIHRoaXMucHJvcHMub25VcGRhdGUoIXRoaXMuc3RhdGUuc2VsZWN0ZWQpO1xuXG4gICAgICAgIGUuc3RvcFByb3BhZ2F0aW9uKCk7XG5cbiAgICB9O1xuXG4gICAgdXBkYXRlID0gKHNlbGVjdGVkKSA9PiB7XG4gICAgICAgIHRoaXMuc2V0U3RhdGUoe3NlbGVjdGVkOiBzZWxlY3RlZH0pO1xuICAgIH07XG5cbiAgICByZW5kZXIoKXtcbiAgICAgICAgY29uc3QgY29tcGV0aXRvcnNMZW4gPSB0aGlzLnByb3BzLm1hdGNoLmNvbXBldGl0b3JzLmxlbmd0aDtcbiAgICAgICAgcmV0dXJuIChcbiAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPXtcIm1hdGNoIFwiIH0gb25DbGljaz17KCkgPT4geyB0aGlzLnByb3BzLm9uU2VsZWN0KHRoaXMucHJvcHMubWF0Y2guZXh0ZXJuYWxJZCkgfSB9PlxuICAgICAgICAgICAgICAgIHt0aGlzLnByb3BzLm1hdGNoLnNlbGVjdGVkICYmIDxpIGNsYXNzTmFtZT1cImZhIGZhLWNpcmNsZVwiLz59XG4gICAgICAgICAgICAgICAgeyF0aGlzLnByb3BzLm1hdGNoLnNlbGVjdGVkICYmIDxpIGNsYXNzTmFtZT1cImZhIGZhLWNpcmNsZS1vXCIvPn1cbiAgICAgICAgICAgICAgICB7dGhpcy5wcm9wcy5tYXRjaC5jb21wZXRpdG9ycy5tYXAoKCBjb21wZXRpdG9yLCBpKT0+e1xuICAgICAgICAgICAgICAgICAgICByZXR1cm4gPHNwYW4ga2V5PXtpfT57Y29tcGV0aXRvci5uYW1lfSB7KGNvbXBldGl0b3JzTGVuICE9PSBpICsgMSkgJiYgXCIgdnMgXCIgfTwvc3Bhbj5cbiAgICAgICAgICAgICAgICB9KX1cblxuICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgIClcbiAgICB9XG59XG5cbmV4cG9ydCBkZWZhdWx0IE1hdGNoO1xuXG5cbi8vIFdFQlBBQ0sgRk9PVEVSIC8vXG4vLyAuL3NyYy9BcHBCdW5kbGUvUmVzb3VyY2VzL3B1YmxpYy9qYXZhc2NyaXB0L3NlbGwvY29tcG9uZW50cy9NYXRjaC5qcyIsImltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgTW9kYWwgZnJvbSAncmVhY3QtbW9kYWwnO1xuaW1wb3J0IGNsb25lRGVlcCBmcm9tICdsb2Rhc2gvY2xvbmVEZWVwJztcbmltcG9ydCB0b051bWJlciBmcm9tICdsb2Rhc2gvdG9OdW1iZXInO1xuaW1wb3J0IGlzRmluaXRlIGZyb20gJ2xvZGFzaC9pc0Zpbml0ZSc7XG5pbXBvcnQgaXNFcXVhbCBmcm9tICdsb2Rhc2gvaXNFcXVhbCc7XG5pbXBvcnQge2N1c3RvbVN0eWxlc30gZnJvbSBcIi4uLy4uL21haW4vc3R5bGVzL2N1c3RvbVwiO1xuaW1wb3J0IHtSaWdodEl0ZW1zRGVmaW5pdGlvbnN9IGZyb20gXCIuL1JpZ2h0SXRlbXNEZWZpbml0aW9uc1wiO1xuaW1wb3J0IHtMYW5ndWFnZVNlbGVjdG9yfSBmcm9tIFwiLi4vLi4vbWFpbi9jb21wb25lbnRzL0xhbmd1YWdlU2VsZWN0b3JcIjtcbmltcG9ydCB7U3VwZXJSaWdodFByb2R1Y3Rpb25EZXRhaWxzTGFiZWxzfSBmcm9tIFwiLi9TdXBlclJpZ2h0RGVmaW5pdGlvbnNcIjtcblxuY29uc3QgbnVtYmVyRmllbGRTdHlsZSA9IHsgd2lkdGg6ICczMHB4JywgcGFkZGluZ0xlZnQ6ICcxMHB4J307XG5cbmNvbnN0IGdldExhbmd1YWdlc1N0cmluZyA9IChsYW5ndWFnZXMpID0+IHtcbiAgICByZXR1cm4gbGFuZ3VhZ2VzLm1hcChpdGVtID0+IGl0ZW0ubGFiZWwpLmpvaW4oJywgJyk7XG59O1xuXG5jb25zdCBnZXRDdXN0b21WYWx1ZVN0cmluZyA9IChmaXJzdFBhY2thZ2UsIGN1cnJlbnRSaWdodHMsIHJpZ2h0SXRlbXNEZWZpbml0aW9ucywgaXRlbSwgcHJlZGljYXRlKSA9PiB7XG4gICAgY29uc3QgcmlnaHRMYWJlbCA9IG5hbWVUb0N1c3RvbVZhbHVlQ29uZmlnW2l0ZW1dLmtleTtcbiAgICBjb25zdCByaWdodExhYmVsQ3VzdG9tID0gbmFtZVRvQ3VzdG9tVmFsdWVDb25maWdbaXRlbV0udmFsdWU7XG4gICAgXG4gICAgaWYgKCBjdXJyZW50UmlnaHRzID09PSByaWdodExhYmVsKXtcbiAgICAgICAgcmV0dXJuIHByZWRpY2F0ZShmaXJzdFBhY2thZ2Uuc2VsZWN0ZWRSaWdodHNbcmlnaHRMYWJlbEN1c3RvbV0pO1xuICAgIH0gZWxzZSB7XG4gICAgICAgIHJldHVybiByaWdodEl0ZW1zRGVmaW5pdGlvbnNbY3VycmVudFJpZ2h0c10ubGFiZWw7XG4gICAgfVxufTtcblxuY29uc3QgbmFtZVRvQ3VzdG9tVmFsdWVDb25maWcgPSB7XG4gICAgQ0FNRVJBOiB7XG4gICAgICAgIGtleTogJ0NBTUVSQV9NSU5JTVVNJyxcbiAgICAgICAgdmFsdWU6ICdDQU1FUkFTJ1xuICAgIH0sXG4gICAgUlVOUzoge1xuICAgICAgICBrZXk6ICdSVU5TX0xJTUlURUQnLFxuICAgICAgICB2YWx1ZTogJ1JVTlNfTlVNQkVSJ1xuICAgIH0sXG4gICAgQVNQRUNUX1JBVElPOiB7XG4gICAgICAgIGtleTogJ0FTUEVDVF9SQVRJT19DVVNUT00nLFxuICAgICAgICB2YWx1ZTogJ0FTUEVDVF9SQVRJT19URVhUJ1xuICAgIH0sXG4gICAgQ09NTUVOVEFSWToge1xuICAgICAgICBrZXk6ICdDT01NRU5UQVJZX1lFUycsXG4gICAgICAgIHZhbHVlOiAnQ09NTUVOVEFSWV9MQU5HVUFHRVMnXG4gICAgfSxcbiAgICBHUkFQSElDUzoge1xuICAgICAgICBrZXk6ICdHUkFQSElDU19ZRVMnLFxuICAgICAgICB2YWx1ZTogJ0dSQVBISUNTX0xBTkdVQUdFUydcbiAgICB9XG59O1xuXG5cbmNsYXNzIFBvcHVwUmlnaHQgZXh0ZW5kcyBSZWFjdC5Db21wb25lbnQge1xuICAgIGNvbnN0cnVjdG9yKHByb3BzKSB7XG4gICAgICAgIHN1cGVyKHByb3BzKTtcblxuICAgICAgICB0aGlzLnN0YXRlID0ge1xuICAgICAgICAgICAgcmlnaHRzUGFja2FnZSA6IG5ldyBNYXAocHJvcHMucmlnaHRzUGFja2FnZS5tYXAoKGkpID0+IFtpLmlkLCBpXSkpLFxuICAgICAgICAgICAgaXNPcGVuIDogZmFsc2UsXG4gICAgICAgICAgICBzZWxlY3RlZCA6IHByb3BzLnNlbGVjdGVkLFxuICAgICAgICAgICAgY3VzdG9tIDogZmFsc2UsXG4gICAgICAgICAgICBwcm9kdWN0aW9uTGFiZWxzIDogU3VwZXJSaWdodFByb2R1Y3Rpb25EZXRhaWxzTGFiZWxzXG4gICAgICAgIH07XG4gICAgfVxuXG4gICAgY29tcG9uZW50V2lsbFJlY2VpdmVQcm9wcyhwcm9wcyl7XG4gICAgICAgIC8vY29uc29sZS5sb2coXCJQb3B1cFJpZ2h0IC0gcHJvcHNcIixwcm9wcyk7XG4gICAgICAgIHRoaXMuc2V0U3RhdGUoe1xuICAgICAgICAgICAgcmlnaHRzUGFja2FnZSA6IG5ldyBNYXAocHJvcHMucmlnaHRzUGFja2FnZS5tYXAoKGkpID0+IFtpLmlkLCBpXSkpXG4gICAgICAgIH0pO1xuICAgIH1cblxuICAgIHRvZ2dsZUFsbCA9IChyaWdodEl0ZW0pID0+IHtcbiAgICAgICAgbGV0IHNlbGVjdGlvbiA9IHRoaXMuc3RhdGUuc2VsZWN0aW9uO1xuXG4gICAgICAgIGlmIChzZWxlY3Rpb24uZ2V0KHJpZ2h0SXRlbSkuaGFzKDApKXtcbiAgICAgICAgICAgIHNlbGVjdGlvbi5nZXQocmlnaHRJdGVtKS5jbGVhcigpO1xuICAgICAgICB9ICBlbHNlIHtcbiAgICAgICAgICAgIHRoaXMuc3RhdGUuYWN0aXZlUGFja2FnZXMuZm9yRWFjaCgocmlnaHRQYWNrYWdlKT0+e1xuICAgICAgICAgICAgICAgIHNlbGVjdGlvbi5nZXQocmlnaHRJdGVtKS5zZXQocmlnaHRQYWNrYWdlLmlkLCB0cnVlKTtcbiAgICAgICAgICAgIH0pO1xuXG4gICAgICAgICAgICBzZWxlY3Rpb24uZ2V0KHJpZ2h0SXRlbSkuc2V0KDAsIHRydWUpO1xuICAgICAgICB9XG5cbiAgICAgICAgdGhpcy5zZXRTdGF0ZSh7c2VsZWN0aW9uOiBzZWxlY3Rpb259KTtcbiAgICB9O1xuXG4gICAgc2VsZWN0ID0gKHJpZ2h0SXRlbSwgcmlnaHRQYWNrYWdlKSA9PiB7XG4gICAgICAgIGxldCBzZWxlY3Rpb24gPSB0aGlzLnN0YXRlLnNlbGVjdGlvbjtcblxuICAgICAgICBpZiAoICF0aGlzLnN0YXRlLmFjdGl2ZVBhY2thZ2VzLmhhcyhyaWdodFBhY2thZ2UpKSByZXR1cm4gZmFsc2U7XG5cbiAgICAgICAgaWYgKCAhdGhpcy5wcm9wcy5kYXRhLm11bHRpcGxlICkge1xuXG4gICAgICAgICAgICBzZWxlY3Rpb24uZm9yRWFjaCgoaXRlbSwga2V5KSA9PiB7XG4gICAgICAgICAgICAgICAgaWYgKCBrZXkgIT09IHJpZ2h0SXRlbSApIGl0ZW0uY2xlYXIoKVxuICAgICAgICAgICAgfSlcbiAgICAgICAgfVxuICAgICAgICBzZWxlY3Rpb24uZ2V0KHJpZ2h0SXRlbSkuc2V0KHJpZ2h0UGFja2FnZSwgdHJ1ZSk7XG4gICAgICAgIHRoaXMuc2V0U3RhdGUoe3NlbGVjdGlvbn0pO1xuICAgIH07XG5cbiAgICB1bnNlbGVjdCA9IChyaWdodEl0ZW0sIHJpZ2h0UGFja2FnZSkgPT57XG4gICAgICAgIGxldCBzZWxlY3Rpb24gPSB0aGlzLnN0YXRlLnNlbGVjdGlvbjtcbiAgICAgICAgc2VsZWN0aW9uLmdldChyaWdodEl0ZW0pLmRlbGV0ZShyaWdodFBhY2thZ2UpO1xuICAgICAgICBzZWxlY3Rpb24uZ2V0KHJpZ2h0SXRlbSkuZGVsZXRlKDApO1xuICAgICAgICB0aGlzLnNldFN0YXRlKHtzZWxlY3Rpb246c2VsZWN0aW9ufSk7XG4gICAgfTtcblxuICAgIHRvZ2dsZSA9IChyaWdodEl0ZW0sIHJpZ2h0UGFja2FnZSkgPT57XG4gICAgICAgIGxldCBzZWxlY3Rpb24gPSB0aGlzLnN0YXRlLnNlbGVjdGlvbjtcbiAgICAgICAgaWYgKCBzZWxlY3Rpb24uZ2V0KHJpZ2h0SXRlbSkuaGFzKHJpZ2h0UGFja2FnZSkgKSB7XG4gICAgICAgICAgICB0aGlzLnVuc2VsZWN0KHJpZ2h0SXRlbSxyaWdodFBhY2thZ2UpO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgdGhpcy5zZWxlY3QocmlnaHRJdGVtLHJpZ2h0UGFja2FnZSk7XG4gICAgICAgIH1cbiAgICB9O1xuXG4gICAgaXNTZWxlY3RlZCA9IChyaWdodEl0ZW0sIHJpZ2h0UGFja2FnZSkgPT4ge1xuICAgICAgICBsZXQgc2VsZWN0aW9uID0gdGhpcy5zdGF0ZS5zZWxlY3Rpb247XG4gICAgICAgIHJldHVybiBzZWxlY3Rpb24uZ2V0KHJpZ2h0SXRlbSkuaGFzKHJpZ2h0UGFja2FnZSk7XG4gICAgfTtcblxuXG4gICAgcGFja2FnZUlzQWN0aXZlID0gKCBpZCApID0+IHtcbiAgICAgICAgcmV0dXJuIHRoaXMuc3RhdGUuYWN0aXZlUGFja2FnZXMuaGFzKCBpZCApICYmIHRoaXMuc3RhdGUuYXZhaWxhYmxlUGFja2FnZXMuaGFzKCBpZCApO1xuICAgIH07XG5cbiAgICBzZXREYXRlID0gKGRhdGUsIHJpZ2h0SXRlbSwgcmlnaHRQYWNrYWdlKSA9PiB7XG4gICAgICAgIGxldCBzZWxlY3Rpb24gPSB0aGlzLnN0YXRlLnNlbGVjdGlvbjtcblxuICAgICAgICBpZiAoICF0aGlzLnN0YXRlLmFjdGl2ZVBhY2thZ2VzLmhhcyhyaWdodFBhY2thZ2UpKSByZXR1cm4gZmFsc2U7XG5cbiAgICAgICAgc2VsZWN0aW9uLmdldChyaWdodEl0ZW0pLnNldChyaWdodFBhY2thZ2UsIGRhdGUpO1xuICAgICAgICB0aGlzLnNldFN0YXRlKHtzZWxlY3Rpb259KTtcbiAgICB9O1xuXG4gICAgdG9nZ2xlUG9wdXAgPSAoKSA9PiB7XG4gICAgICAgIGNvbnN0IHtvblByb2dyYW0sIGlkLCBvblVwZGF0ZX0gPSB0aGlzLnByb3BzO1xuXG4gICAgICAgIGlmICggaWQgPT09IFwiUFJPR1JBTVwiKSB7XG4gICAgICAgICAgICBvblByb2dyYW0oKTtcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuICAgICAgICBcbiAgICAgICAgdGhpcy5zZXRTdGF0ZSgoe2lzT3BlbiwgcmlnaHRzUGFja2FnZX0pID0+IHtcbiAgICAgICAgICAgIGlmICghaXNPcGVuKSB7XG4gICAgICAgICAgICAgICAgdGhpcy5wcmV2UmlnaHRzUGFja2FnZSA9IG5ldyBNYXAoKTtcbiAgICAgICAgICAgICAgICByaWdodHNQYWNrYWdlLmZvckVhY2goKGl0ZW0pID0+IHtcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5wcmV2UmlnaHRzUGFja2FnZS5zZXQoaXRlbS5pZCwgY2xvbmVEZWVwKGl0ZW0pKTtcbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgICAgICBpc09wZW46ICFpc09wZW5cbiAgICAgICAgICAgIH1cbiAgICAgICAgfSk7XG4gICAgfTtcblxuICAgIGNsb3NlUG9wdXBBbmRSZXN0b3JlRGF0YSA9ICgpID0+IHtcbiAgICAgICAgY29uc3QgeyBvblVwZGF0ZSB9ID0gdGhpcy5wcm9wcztcblxuICAgICAgICBvblVwZGF0ZSh0aGlzLnByZXZSaWdodHNQYWNrYWdlKTtcbiAgICAgICAgdGhpcy5wcmV2UmlnaHRzUGFja2FnZSA9IG51bGw7XG4gICAgICAgIHRoaXMudG9nZ2xlUG9wdXAoKTtcbiAgICB9O1xuXG4gICAgb25PS0NsaWNrZWQgPSAoKSA9PiB7XG4gICAgICAgIHRoaXMudG9nZ2xlUG9wdXAoKTtcbiAgICB9O1xuXG4gICAgdXBkYXRlU2VsZWN0aW9uID0gKHZhbCwgaWQscmlnaHRQYWNrYWdlKSA9PiB7XG4gICAgICAgIGNvbnN0IHJpZ2h0c1BhY2thZ2UgPSB0aGlzLnN0YXRlLnJpZ2h0c1BhY2thZ2U7XG4gICAgICAgIHJpZ2h0UGFja2FnZS5zZWxlY3RlZFJpZ2h0c1tpZF0gPSB2YWw7XG4gICAgICAgIHJpZ2h0c1BhY2thZ2Uuc2V0KHJpZ2h0UGFja2FnZS5pZCwgcmlnaHRQYWNrYWdlKTtcblxuICAgICAgICB0aGlzLnByb3BzLm9uVXBkYXRlKHJpZ2h0c1BhY2thZ2UpO1xuXG4gICAgfTtcblxuICAgIHVwZGF0ZU11bHRpcGxlU2VsZWN0aW9uID0gKHZhbCwgaWQscmlnaHRQYWNrYWdlKSA9PiB7XG5cbiAgICAgICAgY29uc3QgcmlnaHRzUGFja2FnZSA9IHRoaXMuc3RhdGUucmlnaHRzUGFja2FnZTtcbiAgICAgICAgbGV0IGluZGV4ID0gcmlnaHRQYWNrYWdlLnNlbGVjdGVkUmlnaHRzW2lkXS5pbmRleE9mKHZhbCk7XG4gICAgICAgIGxldCBhbGwgPSBSaWdodEl0ZW1zRGVmaW5pdGlvbnNbdmFsXS5hbGw7XG4gICAgICAgIGxldCBhbGxzID0gUmlnaHRJdGVtc0RlZmluaXRpb25zXG5cbiAgICAgICAgaWYgKCBpbmRleCA9PT0gLTEgKXtcblxuICAgICAgICAgICAgaWYgKCBhbGwgKXtcbiAgICAgICAgICAgICAgICByaWdodFBhY2thZ2Uuc2VsZWN0ZWRSaWdodHNbaWRdID0gW3ZhbF07XG4gICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgIHJpZ2h0UGFja2FnZS5zZWxlY3RlZFJpZ2h0c1tpZF0gPSBbLi4ucmlnaHRQYWNrYWdlLnNlbGVjdGVkUmlnaHRzW2lkXSwgdmFsXTtcblxuICAgICAgICAgICAgICAgIHJpZ2h0UGFja2FnZS5zZWxlY3RlZFJpZ2h0c1tpZF0uZm9yRWFjaChmdW5jdGlvbihpdGVtLCBpbmRleCwgb2JqZWN0KSB7XG4gICAgICAgICAgICAgICAgICAgIGxldCBtID0gaXRlbS5tYXRjaCgvX0FMTC9nKTtcbiAgICAgICAgICAgICAgICAgICAgaWYgKG0pIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIG9iamVjdC5zcGxpY2UoaW5kZXgsIDEpO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfSk7XG5cbiAgICAgICAgICAgIH1cblxuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgaWYgKHJpZ2h0UGFja2FnZS5zZWxlY3RlZFJpZ2h0c1tpZF0ubGVuZ3RoID4gMSkgcmlnaHRQYWNrYWdlLnNlbGVjdGVkUmlnaHRzW2lkXS5zcGxpY2UoaW5kZXgsIDEpO1xuICAgICAgICB9XG5cbiAgICAgICAgcmlnaHRzUGFja2FnZS5zZXQocmlnaHRQYWNrYWdlLmlkLCByaWdodFBhY2thZ2UpO1xuXG4gICAgICAgIHRoaXMucHJvcHMub25VcGRhdGUocmlnaHRzUGFja2FnZSk7XG5cbiAgICB9O1xuXG4gICAgdXBkYXRlU2VsZWN0aW9uSW5BbGxQYWNrYWdlcyA9ICh2YWwsIGlkKSA9PiB7XG5cbiAgICAgICAgY29uc3QgcmlnaHRzUGFja2FnZSA9IHRoaXMuc3RhdGUucmlnaHRzUGFja2FnZTtcbiAgICAgICAgcmlnaHRzUGFja2FnZS5mb3JFYWNoKChyaWdodFBhY2thZ2UgKT0+e1xuICAgICAgICAgICAgcmlnaHRQYWNrYWdlLnNlbGVjdGVkUmlnaHRzW2lkXSA9IHZhbDtcbiAgICAgICAgfSk7XG4gICAgICAgIHRoaXMucHJvcHMub25VcGRhdGUocmlnaHRzUGFja2FnZSk7XG5cbiAgICB9O1xuXG4gICAgZmlsdGVyUmlnaHRzUGFja2FnZShpZCwgcmlnaHRzUGFja2FnZXMpIHtcbiAgICAgICAgY29uc3Qge2NoZWNrQ29udGVudERlbGl2ZXJ5LCBzdXBlclJpZ2h0c30gPSB0aGlzLnByb3BzO1xuXG4gICAgICAgIHJldHVybiByaWdodHNQYWNrYWdlcy5maWx0ZXIoKHJpZ2h0c1BhY2thZ2UpID0+IHtcbiAgICAgICAgICAgIGlmIChzdXBlclJpZ2h0cy5sZW5ndGggPiAwICYmIHN1cGVyUmlnaHRzLmluZGV4T2YocmlnaHRzUGFja2FnZS5zaG9ydExhYmVsKSA9PT0gLTEpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIGlmIChjaGVja0NvbnRlbnREZWxpdmVyeSAmJiBpZCAhPT0gXCJDT05URU5UX0RFTElWRVJZXCIgJiZcbiAgICAgICAgICAgICAgICAocmlnaHRzUGFja2FnZS5zZWxlY3RlZFJpZ2h0cy5DT05URU5UX0RFTElWRVJZID09PSBcIkNPTlRFTlRfREVMSVZFUllfTk9OX0RFRElDQVRFRFwiIHx8XG4gICAgICAgICAgICAgICAgICAgIHJpZ2h0c1BhY2thZ2Uuc2VsZWN0ZWRSaWdodHMuQ09OVEVOVF9ERUxJVkVSWSA9PT0gXCJDT05URU5UX0RFTElWRVJZX0xJVkVcIiApXG4gICAgICAgICAgICApIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIHJldHVybiB0cnVlO1xuICAgICAgICB9KTtcbiAgICB9XG5cbiAgICBpc011bHRpcGxlVmFsdWVzU2VsZWN0ZWQgPSAoaWQsICByaWdodHNQYWNrYWdlcykgPT4ge1xuICAgICAgICBsZXQgY3VzdG9tID0gZmFsc2U7XG4gICAgICAgIGxldCBzZWxlY3RlZDtcblxuICAgICAgICByaWdodHNQYWNrYWdlcy5mb3JFYWNoKCAoIHJpZ2h0c1BhY2thZ2UgKSA9PiB7XG4gICAgICAgICAgICBpZiAoICFyaWdodHNQYWNrYWdlLnNlbGVjdGVkUmlnaHRzKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICBsZXQgY3VycmVudCA9IHJpZ2h0c1BhY2thZ2Uuc2VsZWN0ZWRSaWdodHNbaWRdO1xuXG4gICAgICAgICAgICBzd2l0Y2ggKGlkKSB7XG4gICAgICAgICAgICAgICAgY2FzZSAnUlVOUyc6XG4gICAgICAgICAgICAgICAgICAgIGNvbnN0IHJpZ2h0TGFiZWwgPSBuYW1lVG9DdXN0b21WYWx1ZUNvbmZpZ1tpZF0ua2V5O1xuICAgICAgICAgICAgICAgICAgICBjb25zdCByaWdodExhYmVsQ3VzdG9tID0gbmFtZVRvQ3VzdG9tVmFsdWVDb25maWdbaWRdLnZhbHVlO1xuXG4gICAgICAgICAgICAgICAgICAgIGlmIChjdXJyZW50ID09PSByaWdodExhYmVsKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBjdXJyZW50ID0gcmlnaHRzUGFja2FnZS5zZWxlY3RlZFJpZ2h0c1tyaWdodExhYmVsQ3VzdG9tXTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgICAgICBkZWZhdWx0OlxuICAgICAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgIH1cblxuXG5cblxuICAgICAgICAgICAgaWYgKCBzZWxlY3RlZCA9PT0gdW5kZWZpbmVkICl7XG4gICAgICAgICAgICAgICAgc2VsZWN0ZWQgPSBjdXJyZW50O1xuICAgICAgICAgICAgICAgIHJldHVybiBmYWxzZTtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgaWYgKEFycmF5LmlzQXJyYXkoY3VycmVudCkgJiYgQXJyYXkuaXNBcnJheShzZWxlY3RlZCkpIHtcbiAgICAgICAgICAgICAgICBjdXJyZW50ID0gWy4uLmN1cnJlbnRdO1xuICAgICAgICAgICAgICAgIGN1cnJlbnQuc29ydCgpO1xuICAgICAgICAgICAgICAgIHNlbGVjdGVkLnNvcnQoKTtcblxuICAgICAgICAgICAgICAgIGlmICghaXNFcXVhbChjdXJyZW50LCBzZWxlY3RlZCkpe1xuICAgICAgICAgICAgICAgICAgICBjdXN0b20gPSB0cnVlO1xuICAgICAgICAgICAgICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9IGVsc2UgaWYgKGN1cnJlbnQgIT0gc2VsZWN0ZWQpe1xuICAgICAgICAgICAgICAgIGN1c3RvbSA9IHRydWU7XG4gICAgICAgICAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgfSk7XG4gICAgICAgIFxuICAgICAgICByZXR1cm4gY3VzdG9tO1xuXG4gICAgfTtcblxuICAgIGhhc1NlbGVjdGlvbiA9IChpZCwgdmFsdWUsIHN1cGVyUmlnaHRzKSA9PntcbiAgICAgICAgY29uc3Qge2NoZWNrQ29udGVudERlbGl2ZXJ5fSA9IHRoaXMucHJvcHM7XG5cbiAgICAgICAgbGV0IGhhcyA9IGZhbHNlO1xuXG4gICAgICAgIHN1cGVyUmlnaHRzLmZvckVhY2goICggc3VwZXJSaWdodCApID0+IHtcblxuICAgICAgICAgICAgaWYgKGNoZWNrQ29udGVudERlbGl2ZXJ5ICYmXG4gICAgICAgICAgICAgICAgc3VwZXJSaWdodC5zZWxlY3RlZFJpZ2h0cy5DT05URU5UX0RFTElWRVJZID09PSBcIkNPTlRFTlRfREVMSVZFUllfTk9OX0RFRElDQVRFRFwiIClcbiAgICAgICAgICAgICAgICByZXR1cm4gZmFsc2U7XG5cbiAgICAgICAgICAgIGxldCBzZWxlY3RlZCA9IHN1cGVyUmlnaHQuc2VsZWN0ZWRSaWdodHNbaWRdO1xuICAgICAgICAgICAgaWYgKEFycmF5LmlzQXJyYXkoc2VsZWN0ZWQpKXtcbiAgICAgICAgICAgICAgICBpZiAoIHNlbGVjdGVkLmluZGV4T2YodmFsdWUpICE9PSAtMSApIGhhcyA9IHRydWVcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGVsc2UgaWYgKCBzZWxlY3RlZCA9PT0gdmFsdWUgKSBoYXMgPSB0cnVlO1xuICAgICAgICB9KTtcblxuICAgICAgICByZXR1cm4gaGFzO1xuXG4gICAgfTtcblxuICAgIHJlbmRlck1vZGFsUm93ID0gKHJpZ2h0UGFja2FnZSkgPT4ge1xuICAgICAgICBjb25zdCB7XG4gICAgICAgICAgICBtdWx0aXBsZSxcbiAgICAgICAgICAgIG9wdGlvbnMsXG4gICAgICAgICAgICBpZCxcbiAgICAgICAgICAgIHByb2R1Y3Rpb25MYWJlbCxcbiAgICAgICAgICAgIHJpZ2h0c1BhY2thZ2VcbiAgICAgICAgfSA9IHRoaXMucHJvcHM7XG4gICAgICAgIGNvbnN0IHsgcHJvZHVjdGlvbkxhYmVscyB9ID0gdGhpcy5zdGF0ZTtcbiAgICAgICAgbGV0IHBhY2thZ2VzQXZhaWxhYmxlID0gcmlnaHRzUGFja2FnZS5tYXAocnAgPT5ycC5zaG9ydExhYmVsKTtcbiAgICAgICAgcmV0dXJuIDxkaXYgY2xhc3NOYW1lPVwicm93XCI+XG4gICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImNvbHVtblwiIHN0eWxlPXt7anVzdGlmeUNvbnRlbnQ6XCJmbGV4LXN0YXJ0XCIsIGZsZXg6IDN9fT5cbiAgICAgICAgICAgICAgICB7IXByb2R1Y3Rpb25MYWJlbCAmJiByaWdodFBhY2thZ2UubmFtZX1cbiAgICAgICAgICAgICAgICB7cHJvZHVjdGlvbkxhYmVsICYmIHByb2R1Y3Rpb25MYWJlbHNbcmlnaHRQYWNrYWdlLnNob3J0TGFiZWxdfVxuICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICB7b3B0aW9ucy5tYXAoKG9wdGlvbiwgaSAsbGlzdCk9PiB7XG5cbiAgICAgICAgICAgICAgICBsZXQgZmxleCA9IChsaXN0Lmxlbmd0aCA+IDIgKSA/IDIgOiAzO1xuICAgICAgICAgICAgICAgIGxldCBkaXNhYmxlZCA9IGZhbHNlO1xuICAgICAgICAgICAgICAgIGxldCBkZWZpbml0aW9uID0gUmlnaHRJdGVtc0RlZmluaXRpb25zW29wdGlvbl07XG4gICAgICAgICAgICAgICAgaWYgKFJpZ2h0SXRlbXNEZWZpbml0aW9uc1tvcHRpb25dLmxhbmd1YWdlKSBmbGV4ID0gZmxleCsgMjtcbiAgICAgICAgICAgICAgICBpZiAoZGVmaW5pdGlvbi5oaWRlSWYgJiYgZGVmaW5pdGlvbi5oaWRlSWYuZmlsdGVyKHNsPT57cmV0dXJuIHBhY2thZ2VzQXZhaWxhYmxlLmluZGV4T2Yoc2wpICE9PSAtMX0pLmxlbmd0aCA+IDApIHJldHVybiBudWxsO1xuICAgICAgICAgICAgICAgIGlmIChkZWZpbml0aW9uLmRpc2FibGVkSWYgJiYgZGVmaW5pdGlvbi5kaXNhYmxlZElmLmluZGV4T2YocmlnaHRQYWNrYWdlLnNob3J0TGFiZWwpICE9PSAtMSApIGRpc2FibGVkID0gdHJ1ZTtcbiAgICAgICAgICAgICAgICByZXR1cm4gPGRpdiBjbGFzc05hbWU9XCJjb2x1bW5cIiBzdHlsZT17eyBmbGV4OiBmbGV4IH19PlxuICAgICAgICAgICAgICAgICAgICB7bXVsdGlwbGUgJiZcbiAgICAgICAgICAgICAgICAgICAgPGlucHV0IGNoZWNrZWQ9e3JpZ2h0UGFja2FnZS5zZWxlY3RlZFJpZ2h0c1tpZF0uaW5kZXhPZihvcHRpb24pICE9PSAtMSB9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICBvbkNoYW5nZT17KGUpID0+IHsgdGhpcy51cGRhdGVNdWx0aXBsZVNlbGVjdGlvbihvcHRpb24sIGlkLHJpZ2h0UGFja2FnZSl9IH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgIHR5cGU9XCJjaGVja2JveFwiXG4gICAgICAgICAgICAgICAgICAgICAgICAgICBpZD17cmlnaHRQYWNrYWdlLnNob3J0TGFiZWwgKyBcIl9cIiArIG9wdGlvbn0vPn1cbiAgICAgICAgICAgICAgICAgICAge211bHRpcGxlICYmXG4gICAgICAgICAgICAgICAgICAgIDxsYWJlbCBodG1sRm9yPXtyaWdodFBhY2thZ2Uuc2hvcnRMYWJlbCArIFwiX1wiICsgb3B0aW9ufS8+fVxuICAgICAgICAgICAgICAgICAgICB7IW11bHRpcGxlICYmXG4gICAgICAgICAgICAgICAgICAgIDxpbnB1dFxuICAgICAgICAgICAgICAgICAgICAgICAgY2hlY2tlZD17cmlnaHRQYWNrYWdlLnNlbGVjdGVkUmlnaHRzW2lkXSA9PT0gb3B0aW9ufVxuICAgICAgICAgICAgICAgICAgICAgICAgdHlwZT1cInJhZGlvXCJcbiAgICAgICAgICAgICAgICAgICAgICAgIGNsYXNzTmFtZT1cImNhLXJhZGlvXCJcbiAgICAgICAgICAgICAgICAgICAgICAgIGRpc2FibGVkPXtkaXNhYmxlZH1cbiAgICAgICAgICAgICAgICAgICAgICAgIG9uQ2hhbmdlPXsoZSkgPT4geyB0aGlzLnVwZGF0ZVNlbGVjdGlvbihlLnRhcmdldC52YWx1ZSwgaWQscmlnaHRQYWNrYWdlKX0gfVxuICAgICAgICAgICAgICAgICAgICAgICAgbmFtZT17cmlnaHRQYWNrYWdlLnNob3J0TGFiZWwgKyBcIl9cIiArIGlkfSB2YWx1ZT17b3B0aW9ufS8+fVxuXG4gICAgICAgICAgICAgICAgICAgIHtSaWdodEl0ZW1zRGVmaW5pdGlvbnNbb3B0aW9uXS5sYW5ndWFnZSAmJlxuICAgICAgICAgICAgICAgICAgICA8TGFuZ3VhZ2VTZWxlY3RvclxuICAgICAgICAgICAgICAgICAgICAgICAgb25DaGFuZ2U9eyh2YWx1ZSkgPT4ge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMudXBkYXRlU2VsZWN0aW9uKHZhbHVlLCBpZCsgXCJfTEFOR1VBR0VTXCIscmlnaHRQYWNrYWdlKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB0aGlzLnVwZGF0ZVNlbGVjdGlvbihvcHRpb24sIGlkLCByaWdodFBhY2thZ2UpO1xuICAgICAgICAgICAgICAgICAgICAgICAgfX1cbiAgICAgICAgICAgICAgICAgICAgICAgIHZhbHVlPXtyaWdodFBhY2thZ2Uuc2VsZWN0ZWRSaWdodHNbaWQrIFwiX0xBTkdVQUdFU1wiXX0vPn1cbiAgICAgICAgICAgICAgICAgICAge1JpZ2h0SXRlbXNEZWZpbml0aW9uc1tvcHRpb25dLnRleHRGaWVsZCAmJlxuICAgICAgICAgICAgICAgICAgICA8aW5wdXRcbiAgICAgICAgICAgICAgICAgICAgICAgIG9uQ2hhbmdlPXsoZSkgPT4geyB0aGlzLnVwZGF0ZVNlbGVjdGlvbihlLnRhcmdldC52YWx1ZSwgaWQrIFwiX1RFWFRcIixyaWdodFBhY2thZ2UpfX1cbiAgICAgICAgICAgICAgICAgICAgICAgIHZhbHVlPXtyaWdodFBhY2thZ2Uuc2VsZWN0ZWRSaWdodHNbaWQrIFwiX1RFWFRcIl19XG4gICAgICAgICAgICAgICAgICAgICAgICBjbGFzc05hbWU9XCJ0ZXh0LWZpZWxkXCJcbiAgICAgICAgICAgICAgICAgICAgICAgIHR5cGU9XCJ0ZXh0XCIvPlxuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIFJpZ2h0SXRlbXNEZWZpbml0aW9uc1tvcHRpb25dLm51bWJlckZpZWxkICYmXG4gICAgICAgICAgICAgICAgICAgICAgICA8aW5wdXRcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjbGFzc05hbWU9XCJ0ZXh0LWZpZWxkXCJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBzdHlsZT17bnVtYmVyRmllbGRTdHlsZX1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB0eXBlPVwibnVtYmVyXCJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBvbkNoYW5nZT17KGUpID0+IHsgdGhpcy51cGRhdGVTZWxlY3Rpb24oZS50YXJnZXQudmFsdWUsIHRoaXMuZ2V0TnVtYmVyRmllbGRLZXkoUmlnaHRJdGVtc0RlZmluaXRpb25zW29wdGlvbl0sIGlkKSxyaWdodFBhY2thZ2UpfX1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YWx1ZT17cmlnaHRQYWNrYWdlLnNlbGVjdGVkUmlnaHRzW3RoaXMuZ2V0TnVtYmVyRmllbGRLZXkoUmlnaHRJdGVtc0RlZmluaXRpb25zW29wdGlvbl0sIGlkKV19XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgbWluPXswfS8+XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAge1JpZ2h0SXRlbXNEZWZpbml0aW9uc1tvcHRpb25dLmJpZ1RleHRGaWVsZCAmJiA8dGV4dGFyZWEgc3R5bGU9e3ttaW5IZWlnaHQ6IFwiNTBweFwiLCBtYXJnaW46IFwiNXB4IDBweFwifX0vPn1cbiAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgIH0pfVxuICAgICAgICA8L2Rpdj5cbiAgICB9O1xuXG4gICAgZ2V0TnVtYmVyRmllbGRLZXkocmlnaHRJdGVtRGVmaW5pdGlvbiwgaWQpIHtcbiAgICAgICAgcmV0dXJuIHJpZ2h0SXRlbURlZmluaXRpb24ubnVtYmVyRmllbGRWYWx1ZSB8fCAoaWQgKyBcIl9OVU1CRVJcIik7XG4gICAgfVxuXG4gICAgcmVuZGVyTW9kYWwgPSAoKSA9PiB7XG4gICAgICAgIGNvbnN0IHtcbiAgICAgICAgICAgIG5hbWUsXG4gICAgICAgICAgICBkZXNjcmlwdGlvbixcbiAgICAgICAgICAgIG9wdGlvbnMsIGlkLCAgc3VwZXJSaWdodHMsIHNob3dUZXh0QXJlYSwgcmlnaHRzUGFja2FnZSwgdGVjaG5pY2FsRmVlLFxuICAgICAgICAgICAgY2hlY2tDb250ZW50RGVsaXZlcnksXG4gICAgICAgICAgICBnbG9iYWwsXG4gICAgICAgICAgICBsYW5ndWFnZSxcbiAgICAgICAgICAgIGxhbmd1YWdlcyxcbiAgICAgICAgICAgIG9uVXBkYXRlTGlzdGluZ1xuICAgICAgICB9ID0gdGhpcy5wcm9wcztcblxuICAgICAgICBsZXQgcGFja2FnZXNBdmFpbGFibGUgPSByaWdodHNQYWNrYWdlLm1hcChycCA9PnJwLnNob3J0TGFiZWwpO1xuICAgICAgICBsZXQgZGVsaXZlcnlWaWFMaXZlRmVlZCA9IHJpZ2h0c1BhY2thZ2UuZmlsdGVyKHJwID0+cnAuc2VsZWN0ZWRSaWdodHMuQ09OVEVOVF9ERUxJVkVSWSA9PT0gXCJDT05URU5UX0RFTElWRVJZX0xJVkVcIik7XG5cbiAgICAgICAgcmV0dXJuIDxNb2RhbFxuICAgICAgICAgICAgaXNPcGVuPXt0aGlzLnN0YXRlLmlzT3Blbn1cbiAgICAgICAgICAgIGJvZHlPcGVuQ2xhc3NOYW1lPXtcInNlbGVjdG9yXCJ9XG4gICAgICAgICAgICBzdHlsZT17Y3VzdG9tU3R5bGVzfVxuICAgICAgICA+XG5cbiAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwibW9kYWwtdGl0bGVcIj5cbiAgICAgICAgICAgICAgICA8aSBjbGFzc05hbWU9XCJmYSBmYS1lZGl0XCIvPlxuICAgICAgICAgICAgICAgIHtuYW1lfVxuICAgICAgICAgICAgICAgIHtkZXNjcmlwdGlvbiAmJiA8aSBjbGFzc05hbWU9XCJmYSBmYS1pbmZvLWNpcmNsZSB0b29sdGlwLWljb25cIiB0aXRsZT17ZGVzY3JpcHRpb259Lz59XG4gICAgICAgICAgICAgICAgPGkgY2xhc3NOYW1lPVwiZmEgZmEtY29tbWVudHNcIi8+XG4gICAgICAgICAgICAgICAgPGkgY2xhc3NOYW1lPVwiZmEgZmEtdGltZXMgY2xvc2UtaWNvblwiIG9uQ2xpY2s9e3RoaXMuY2xvc2VQb3B1cEFuZFJlc3RvcmVEYXRhfS8+XG4gICAgICAgICAgICA8L2Rpdj5cblxuICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJzdGVwLWNvbnRlbnRcIj5cbiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cInN0ZXAtY29udGVudC1jb250YWluZXJcIj5cbiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJtb2RhbC10YWJsZVwiPlxuICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJyb3cgcm93LWhlYWRlclwiPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHshZ2xvYmFsICYmIDxkaXYgY2xhc3NOYW1lPVwiY29sdW1uXCIgc3R5bGU9e3tqdXN0aWZ5Q29udGVudDpcImZsZXgtc3RhcnRcIiwgZmxleDogM319Lz59XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAge2dsb2JhbCAmJiBsYW5ndWFnZSAmJiA8ZGl2IGNsYXNzTmFtZT1cImNvbHVtblwiIHN0eWxlPXt7IGZsZXg6IDMgfX0+TGljZW5zZWQgbGFuZ3VhZ2VzPC9kaXY+fVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHtvcHRpb25zLm1hcCgob3B0aW9uLCBpICwgbGlzdCk9PiB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGxldCBmbGV4ID0gKGxpc3QubGVuZ3RoID4gMiApID8gMiA6IDM7XG5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbGV0IGRlZmluaXRpb24gPSBSaWdodEl0ZW1zRGVmaW5pdGlvbnNbb3B0aW9uXTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGRlZmluaXRpb24ubGFuZ3VhZ2UpIGZsZXggPSBmbGV4KyAyO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBsZXQgbGFiZWwgPSBkZWZpbml0aW9uLmxhYmVsO1xuXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmIChkZWZpbml0aW9uLmhpZGVJZiAmJiBkZWZpbml0aW9uLmhpZGVJZi5maWx0ZXIoc2w9PntyZXR1cm4gcGFja2FnZXNBdmFpbGFibGUuaW5kZXhPZihzbCkgIT09IC0xfSkubGVuZ3RoID4gMCkgcmV0dXJuIG51bGw7XG5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIDxkaXYgY2xhc3NOYW1lPVwiY29sdW1uXCIgc3R5bGU9e3sgZmxleDogZmxleCB9fT5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHtsYWJlbCAmJiBsYWJlbH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfSl9XG4gICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgICAgICAgICAgIHtnbG9iYWwgJiYgbGFuZ3VhZ2UgJiZcbiAgICAgICAgICAgICAgICAgICAgICAgIDxMYW5ndWFnZVNlbGVjdG9yXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgb25DaGFuZ2U9eyh2YWx1ZSkgPT4geyBvblVwZGF0ZUxpc3RpbmcoXCJMSUNFTlNFRF9MQU5HVUFHRVNcIiwgdmFsdWUpIH19XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdmFsdWU9e2xhbmd1YWdlc30vPn1cblxuICAgICAgICAgICAgICAgICAgICAgICAge2RlbGl2ZXJ5VmlhTGl2ZUZlZWQubGVuZ3RoID4gMCAmJiBpZCAhPT0gXCJDT05URU5UX0RFTElWRVJZXCIgJiYgcGFja2FnZXNBdmFpbGFibGUuaW5kZXhPZihcIkxUXCIpID09PSAtMSAmJiBjaGVja0NvbnRlbnREZWxpdmVyeVxuICAgICAgICAgICAgICAgICAgICAgICAgJiYgPGRpdiBjbGFzc05hbWU9XCJyb3dcIj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImNvbHVtblwiIHN0eWxlPXt7anVzdGlmeUNvbnRlbnQ6XCJmbGV4LXN0YXJ0XCIsIGZsZXg6IDN9fT5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgTGl2ZSBUcmFuc21pc3Npb25cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB7b3B0aW9ucy5tYXAoKG9wdGlvbiwgaSAsbGlzdCk9PiB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGxldCBmbGV4ID0gKGxpc3QubGVuZ3RoID4gMiApID8gMiA6IDM7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGxldCBkaXNhYmxlZCA9IGZhbHNlO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBsZXQgZGVmaW5pdGlvbiA9IFJpZ2h0SXRlbXNEZWZpbml0aW9uc1tvcHRpb25dO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoZGVmaW5pdGlvbi5sYW5ndWFnZSkgZmxleCA9IGZsZXgrIDI7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmIChkZWZpbml0aW9uLmhpZGVJZiAmJiBkZWZpbml0aW9uLmhpZGVJZi5maWx0ZXIoc2w9PntyZXR1cm4gcGFja2FnZXNBdmFpbGFibGUuaW5kZXhPZihzbCkgIT09IC0xfSkubGVuZ3RoID4gMCkgcmV0dXJuIG51bGw7XG5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbGV0IGN1c3RvbUlkID0gXCJMSVZFX0ZFRURfXCIgKyBpZDtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbGV0IGN1c3RvbVByb3AgPSByaWdodHNQYWNrYWdlWzBdLnNlbGVjdGVkUmlnaHRzW2N1c3RvbUlkXTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIDxkaXYgY2xhc3NOYW1lPVwiY29sdW1uXCIgc3R5bGU9e3sgZmxleDogZmxleCB9fT5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpbnB1dFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRlZmF1bHRDaGVja2VkPXtjdXN0b21Qcm9wID09PSBvcHRpb259XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdHlwZT1cInJhZGlvXCJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjbGFzc05hbWU9XCJjYS1yYWRpb1wiXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZGlzYWJsZWQ9e2Rpc2FibGVkfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG9uQ2hhbmdlPXsoZSkgPT4geyB0aGlzLnVwZGF0ZVNlbGVjdGlvbihlLnRhcmdldC52YWx1ZSwgY3VzdG9tSWQscmlnaHRzUGFja2FnZVswXSl9IH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBuYW1lPXtjdXN0b21JZCArIFwiX1wiICsgaWR9IHZhbHVlPXtvcHRpb259Lz5cblxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAge2RlZmluaXRpb24ubGFuZ3VhZ2UgJiZcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxMYW5ndWFnZVNlbGVjdG9yXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgb25DaGFuZ2U9eyh2YWx1ZSkgPT4geyB0aGlzLnVwZGF0ZVNlbGVjdGlvbih2YWx1ZSwgY3VzdG9tSWQrIFwiX0xBTkdVQUdFU1wiLHJpZ2h0c1BhY2thZ2VbMF0pfSB9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdmFsdWU9e3JpZ2h0c1BhY2thZ2VbMF0uc2VsZWN0ZWRSaWdodHNbY3VzdG9tSWQrIFwiX0xBTkdVQUdFU1wiXX0vPn1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHtkZWZpbml0aW9uLnRleHRGaWVsZCAmJlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGlucHV0XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgb25DaGFuZ2U9eyhlKSA9PiB7IHRoaXMudXBkYXRlU2VsZWN0aW9uKGUudGFyZ2V0LnZhbHVlLCBjdXN0b21JZCsgXCJfVEVYVFwiLHJpZ2h0c1BhY2thZ2VbMF0pfSB9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdmFsdWU9e3JpZ2h0c1BhY2thZ2VbMF0uc2VsZWN0ZWRSaWdodHNbY3VzdG9tSWQrIFwiX1RFWFRcIl19XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY2xhc3NOYW1lPVwidGV4dC1maWVsZFwiXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdHlwZT1cInRleHRcIi8+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZGVmaW5pdGlvbi5udW1iZXJGaWVsZCAmJlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpbnB1dFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjbGFzc05hbWU9XCJ0ZXh0LWZpZWxkXCJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc3R5bGU9e251bWJlckZpZWxkU3R5bGV9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHR5cGU9XCJudW1iZXJcIlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBvbkNoYW5nZT17KGUpID0+IHsgdGhpcy51cGRhdGVTZWxlY3Rpb24oZS50YXJnZXQudmFsdWUsIHRoaXMuZ2V0TnVtYmVyRmllbGRLZXkoZGVmaW5pdGlvbiwgY3VzdG9tSWQpLHJpZ2h0c1BhY2thZ2VbMF0pfSB9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhbHVlPXtyaWdodHNQYWNrYWdlWzBdLnNlbGVjdGVkUmlnaHRzW3RoaXMuZ2V0TnVtYmVyRmllbGRLZXkoZGVmaW5pdGlvbiwgY3VzdG9tSWQpXX1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbWluPXswfS8+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0pfVxuICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+fVxuXG4gICAgICAgICAgICAgICAgICAgICAgICB7IWdsb2JhbCAmJiByaWdodHNQYWNrYWdlLm1hcCgocmlnaHRQYWNrYWdlKT0+e1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmICggc3VwZXJSaWdodHMubGVuZ3RoID4gMCAmJiBzdXBlclJpZ2h0cy5pbmRleE9mKHJpZ2h0UGFja2FnZS5zaG9ydExhYmVsKSA9PT0gLTEgKSByZXR1cm47XG5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoY2hlY2tDb250ZW50RGVsaXZlcnlcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJiYgaWQgIT09IFwiQ09OVEVOVF9ERUxJVkVSWVwiXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICYmICggcmlnaHRQYWNrYWdlLnNlbGVjdGVkUmlnaHRzLkNPTlRFTlRfREVMSVZFUlkgPT09IFwiQ09OVEVOVF9ERUxJVkVSWV9OT05fREVESUNBVEVEXCIgfHxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJpZ2h0UGFja2FnZS5zZWxlY3RlZFJpZ2h0cy5DT05URU5UX0RFTElWRVJZID09PSBcIkNPTlRFTlRfREVMSVZFUllfTElWRVwiIClcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAvLyYmIHBhY2thZ2VzQXZhaWxhYmxlLmluZGV4T2YoXCJMVFwiKSA9PT0gLTFcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICApe1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiB0aGlzLnJlbmRlck1vZGFsUm93KHJpZ2h0UGFja2FnZSlcbiAgICAgICAgICAgICAgICAgICAgICAgIH0pfVxuICAgICAgICAgICAgICAgICAgICAgICAge3Nob3dUZXh0QXJlYSAmJiAoIHNob3dUZXh0QXJlYSA9PT0gXCJBTExcIiB8fCB0aGlzLmhhc1NlbGVjdGlvbihpZCwgc2hvd1RleHRBcmVhLCByaWdodHNQYWNrYWdlKSkgJiZcbiAgICAgICAgICAgICAgICAgICAgICAgIDx0ZXh0YXJlYVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHBsYWNlaG9sZGVyPXtcIkVudGVyIHRleHQgdG8gcHJvY2VlZFwifVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIG9uQ2hhbmdlPXsoZSkgPT4geyB0aGlzLnVwZGF0ZVNlbGVjdGlvbkluQWxsUGFja2FnZXMoZS50YXJnZXQudmFsdWUsIGlkKyBcIl9URVhUQVJFQVwiKX19XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdmFsdWU9e3JpZ2h0c1BhY2thZ2VbMF0uc2VsZWN0ZWRSaWdodHNbaWQrIFwiX1RFWFRBUkVBXCJdfS8+fVxuXG4gICAgICAgICAgICAgICAgICAgICAgICB7c2hvd1RleHRBcmVhICYmIHNob3dUZXh0QXJlYSA9PT0gXCJGVVJUSEVSX0RFVEFJTFNcIiAmJiByaWdodHNQYWNrYWdlICYmIHJpZ2h0c1BhY2thZ2UubGVuZ3RoID4gMCAmJlxuICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBzdHlsZT17eyBwYWRkaW5nOiBcIjAgMTVweFwifX0+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBzdHlsZT17eyBmb250V2VpZ2h0OiA2MDAsIHBhZGRpbmc6IFwiMTVweCAwIDVweFwifX0+RnVydGhlciBkZXRhaWxzPC9kaXY+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRleHRhcmVhXG5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgb25DaGFuZ2U9eyhlKSA9PiB7IHRoaXMudXBkYXRlU2VsZWN0aW9uSW5BbGxQYWNrYWdlcyhlLnRhcmdldC52YWx1ZSwgXCJURUNITklDQUxfRkVFX0RFVEFJTFNcIil9fVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YWx1ZT17cmlnaHRzUGFja2FnZVswXS5zZWxlY3RlZFJpZ2h0c1tcIlRFQ0hOSUNBTF9GRUVfREVUQUlMU1wiXX0vPlxuICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgICAgICAgICAgIHt0ZWNobmljYWxGZWUgJiYgdGhpcy5oYXNTZWxlY3Rpb24oaWQsIHRlY2huaWNhbEZlZSwgcmlnaHRzUGFja2FnZSkgJiYgPGRpdiBzdHlsZT17eyBwYWRkaW5nOiBcIjAgMTVweFwifX0+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBzdHlsZT17eyBmb250V2VpZ2h0OiA2MDAsIHBhZGRpbmc6IFwiMTVweCAwIDVweFwifX0+VGVjaG5pY2FsIGZlZTwvZGl2PlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXY+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpbnB1dFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc3R5bGU9e3sgd2lkdGg6ICcyMHB4J319XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBkZWZhdWx0Q2hlY2tlZD17cmlnaHRzUGFja2FnZVswXS5zZWxlY3RlZFJpZ2h0c1tcIlRFQ0hOSUNBTF9GRUVcIl09PT0gXCJJTkNMVURFRFwifVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdHlwZT1cInJhZGlvXCJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNsYXNzTmFtZT1cImNhLXJhZGlvXCJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhbHVlPXtcIklOQ0xVREVEXCJ9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBvbkNoYW5nZT17KGUpID0+IHsgdGhpcy51cGRhdGVTZWxlY3Rpb25JbkFsbFBhY2thZ2VzKGUudGFyZ2V0LnZhbHVlLCBcIlRFQ0hOSUNBTF9GRUVcIil9IH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG5hbWU9XCJURUNITklDQUxfRkVFXCIvPiBUZWNobmljYWwgZmVlIGluY2x1ZGVkIGluIGxpY2Vuc2UgZmVlXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGlucHV0XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzdHlsZT17eyB3aWR0aDogJzIwcHgnfX1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNoZWNrZWQ9e3JpZ2h0c1BhY2thZ2VbMF0uc2VsZWN0ZWRSaWdodHNbXCJURUNITklDQUxfRkVFXCJdID09PSBcIk9OX1RPUFwifVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdHlwZT1cInJhZGlvXCJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNsYXNzTmFtZT1cImNhLXJhZGlvXCJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhbHVlPXtcIk9OX1RPUFwifVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgb25DaGFuZ2U9eyhlKSA9PiB7IHRoaXMudXBkYXRlU2VsZWN0aW9uSW5BbGxQYWNrYWdlcyhlLnRhcmdldC52YWx1ZSwgXCJURUNITklDQUxfRkVFXCIpfSB9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBuYW1lPVwiVEVDSE5JQ0FMX0ZFRVwiLz4gVGVjaG5pY2FsIGZlZSBjaGFyZ2VkIG9uIHRvcCBvZiBsaWNlbnNlIGZlZVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aW5wdXRcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHN0eWxlPXt7IHdpZHRoOiAnNzBweCcsIG1hcmdpbjogJzFweCAxMHB4J319XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBvbkNoYW5nZT17KGUpID0+IHsgdGhpcy51cGRhdGVTZWxlY3Rpb25JbkFsbFBhY2thZ2VzKGUudGFyZ2V0LnZhbHVlLCBcIlRFQ0hOSUNBTF9GRUVfUEVSQ0VOVEFHRVwiKX0gfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdmFsdWU9eyByaWdodHNQYWNrYWdlWzBdLnNlbGVjdGVkUmlnaHRzW1wiVEVDSE5JQ0FMX0ZFRV9QRVJDRU5UQUdFXCJdIH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHR5cGU9XCJudW1iZXJcIlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbWF4PXsxMDB9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBtaW49ezB9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBvbkZvY3VzPXsoZSkgPT4geyB0aGlzLnVwZGF0ZVNlbGVjdGlvbkluQWxsUGFja2FnZXMoXCJPTl9UT1BcIiwgXCJURUNITklDQUxfRkVFXCIpfSB9Lz5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJSB0ZWNobmljYWwgZmVlXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj59XG5cblxuICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgIDwvZGl2PlxuXG4gICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT17XCJidXR0b25zIHBvcHVwLWJ1dHRvbnNcIn0+XG4gICAgICAgICAgICAgICAgPGJ1dHRvblxuICAgICAgICAgICAgICAgICAgICBjbGFzc05hbWU9e1wiY2FuY2VsLWJ1dHRvblwifVxuICAgICAgICAgICAgICAgICAgICBvbkNsaWNrPXt0aGlzLmNsb3NlUG9wdXBBbmRSZXN0b3JlRGF0YX0+Q2FuY2VsXG4gICAgICAgICAgICAgICAgPC9idXR0b24+XG4gICAgICAgICAgICAgICAgPGJ1dHRvblxuICAgICAgICAgICAgICAgICAgICBkaXNhYmxlZD17IXRoaXMuc2hvd09rQnV0dG9uKCl9XG4gICAgICAgICAgICAgICAgICAgIGNsYXNzTmFtZT17XCJzdGFuZGFyZC1idXR0b25cIn1cbiAgICAgICAgICAgICAgICAgICAgb25DbGljaz17dGhpcy5vbk9LQ2xpY2tlZH0+QWNjZXB0XG4gICAgICAgICAgICAgICAgPC9idXR0b24+XG4gICAgICAgICAgICA8L2Rpdj5cblxuICAgICAgICA8L01vZGFsPlxuICAgIH07XG5cbiAgICBzaG93T2tCdXR0b249KCk9PntcbiAgICAgICAgY29uc3Qge25hbWUsIG11bHRpcGxlLCBvcHRpb25zLCBpZCwgIHN1cGVyUmlnaHRzLCBzaG93VGV4dEFyZWEsIHJpZ2h0c1BhY2thZ2UsIHRlY2huaWNhbEZlZSwgZ2xvYmFsLFxuICAgICAgICAgICAgbGFuZ3VhZ2UsXG4gICAgICAgICAgICBsYW5ndWFnZXN9ID0gdGhpcy5wcm9wcztcblxuICAgICAgICBsZXQgcmVzcG9uc2UgPSB0cnVlO1xuICAgICAgICBsZXQgY29udGVudERlbGl2ZXJ5Q291bnRlciA9IDA7XG5cbiAgICAgICAgaWYgKCBnbG9iYWwgJiYgbGFuZ3VhZ2UgKXtcbiAgICAgICAgICAgIHJldHVybiBsYW5ndWFnZXMubGVuZ3RoID4gMFxuICAgICAgICB9XG5cbiAgICAgICAgaWYgKCBzaG93VGV4dEFyZWEgKXtcbiAgICAgICAgICAgIGlmICgoIHNob3dUZXh0QXJlYSA9PT0gXCJBTExcIiB8fCB0aGlzLmhhc1NlbGVjdGlvbihpZCwgc2hvd1RleHRBcmVhLCByaWdodHNQYWNrYWdlKSkpe1xuICAgICAgICAgICAgICAgIGlmICghcmlnaHRzUGFja2FnZVswXS5zZWxlY3RlZFJpZ2h0c1tpZCsgXCJfVEVYVEFSRUFcIl0gfHwgcmlnaHRzUGFja2FnZVswXS5zZWxlY3RlZFJpZ2h0c1tpZCsgXCJfVEVYVEFSRUFcIl0gPT09IFwiXCIgKSByZXR1cm4gZmFsc2U7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cblxuICAgICAgICBpZiAoIGlkID09PSBcIkNPTlRFTlRfREVMSVZFUllcIil7XG4gICAgICAgICAgICByaWdodHNQYWNrYWdlLmZvckVhY2gocnAgPT4ge1xuICAgICAgICAgICAgICAgIGlmICggcnAuc2VsZWN0ZWRSaWdodHNbaWRdID09PSBcIkNPTlRFTlRfREVMSVZFUllfTk9OX0RFRElDQVRFRFwiICkgY29udGVudERlbGl2ZXJ5Q291bnRlcisrO1xuICAgICAgICAgICAgfSlcbiAgICAgICAgICAgIGlmICggcmlnaHRzUGFja2FnZS5sZW5ndGggPT09IGNvbnRlbnREZWxpdmVyeUNvdW50ZXIgKSByZXNwb25zZSA9IGZhbHNlO1xuXG4gICAgICAgIH1cblxuICAgICAgICBpZiAocmlnaHRzUGFja2FnZSAmJiByaWdodHNQYWNrYWdlWzBdICYmIHJpZ2h0c1BhY2thZ2VbMF0uc2VsZWN0ZWRSaWdodHMpe1xuICAgICAgICAgICAgcmlnaHRzUGFja2FnZS5mb3JFYWNoKHJpZ2h0ID0+IHtcbiAgICAgICAgICAgICAgICBpZihSaWdodEl0ZW1zRGVmaW5pdGlvbnNbcmlnaHQuc2VsZWN0ZWRSaWdodHNbaWRdXSAmJlxuICAgICAgICAgICAgICAgICAgICBSaWdodEl0ZW1zRGVmaW5pdGlvbnNbcmlnaHQuc2VsZWN0ZWRSaWdodHNbaWRdXS5sYW5ndWFnZSApe1xuICAgICAgICAgICAgICAgICAgICBpZiAgKCAhcmlnaHQuc2VsZWN0ZWRSaWdodHNbaWQrICdfTEFOR1VBR0VTJ11cbiAgICAgICAgICAgICAgICAgICAgICAgIHx8IHJpZ2h0LnNlbGVjdGVkUmlnaHRzW2lkKyAnX0xBTkdVQUdFUyddLmxlbmd0aCA9PT0gMCApIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHJlc3BvbnNlID0gZmFsc2U7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9KTtcblxuICAgICAgICAgICAgcmlnaHRzUGFja2FnZS5mb3JFYWNoKHJpZ2h0ID0+IHtcbiAgICAgICAgICAgICAgICBpZihSaWdodEl0ZW1zRGVmaW5pdGlvbnNbcmlnaHQuc2VsZWN0ZWRSaWdodHNbaWRdXSAmJlxuICAgICAgICAgICAgICAgICAgICBSaWdodEl0ZW1zRGVmaW5pdGlvbnNbcmlnaHQuc2VsZWN0ZWRSaWdodHNbaWRdXS50ZXh0RmllbGQgKXtcbiAgICAgICAgICAgICAgICAgICAgaWYgICggIXJpZ2h0LnNlbGVjdGVkUmlnaHRzW2lkKyAnX1RFWFQnXVxuICAgICAgICAgICAgICAgICAgICAgICAgfHwgcmlnaHQuc2VsZWN0ZWRSaWdodHNbaWQrICdfVEVYVCddLmxlbmd0aCA9PT0gMCApIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHJlc3BvbnNlID0gZmFsc2U7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9KTtcblxuICAgICAgICAgICAgcmlnaHRzUGFja2FnZS5mb3JFYWNoKHJpZ2h0ID0+IHtcbiAgICAgICAgICAgICAgICBpZihSaWdodEl0ZW1zRGVmaW5pdGlvbnNbcmlnaHQuc2VsZWN0ZWRSaWdodHNbaWRdXSAmJlxuICAgICAgICAgICAgICAgICAgICBSaWdodEl0ZW1zRGVmaW5pdGlvbnNbcmlnaHQuc2VsZWN0ZWRSaWdodHNbaWRdXS5udW1iZXJGaWVsZCApe1xuICAgICAgICAgICAgICAgICAgICBjb25zdCBudW1iZXJLZXkgPSB0aGlzLmdldE51bWJlckZpZWxkS2V5KFJpZ2h0SXRlbXNEZWZpbml0aW9uc1tyaWdodC5zZWxlY3RlZFJpZ2h0c1tpZF1dLCBpZCk7XG4gICAgICAgICAgICAgICAgICAgIGNvbnN0IG51bWJlclN0cmluZyA9IHJpZ2h0LnNlbGVjdGVkUmlnaHRzW251bWJlcktleV07XG4gICAgICAgICAgICAgICAgICAgIGNvbnN0IG51bWJlciA9IG51bWJlclN0cmluZyA/IHRvTnVtYmVyKG51bWJlclN0cmluZyk6IG51bGw7XG4gICAgICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgICAgICBpZiAoIW51bWJlciB8fCAhaXNGaW5pdGUobnVtYmVyKSB8fCBudW1iZXIgPCAwKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICByZXNwb25zZSA9IGZhbHNlO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSk7XG5cbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gcmVzcG9uc2U7XG4gICAgfTtcblxuICAgIHJlbmRlcigpe1xuXG4gICAgICAgIGNvbnN0IHtuYW1lLCByaWdodHNQYWNrYWdlLCBwcm9ncmFtTmFtZSwgbGFuZ3VhZ2VzLCBjaGVja0NvbnRlbnREZWxpdmVyeX0gPSB0aGlzLnByb3BzO1xuICAgICAgICBsZXQgaWQgPSB0aGlzLnByb3BzLmlkO1xuXG4gICAgICAgIGNvbnN0IHJpZ2h0c1BhY2thZ2VGaWx0ZXJlZCA9IHRoaXMuZmlsdGVyUmlnaHRzUGFja2FnZShpZCwgcmlnaHRzUGFja2FnZSk7XG5cbiAgICAgICAgbGV0IGlzTXVsdGlwbGVWYWx1ZXNTZWxlY3RlZCA9IHRoaXMuaXNNdWx0aXBsZVZhbHVlc1NlbGVjdGVkKGlkLCAgcmlnaHRzUGFja2FnZUZpbHRlcmVkKTtcbiAgICAgICAgbGV0IGRpc3BsYXllZFZhbHVlID0gICcnO1xuICAgICAgICBsZXQgcGFja2FnZXNBdmFpbGFibGUgPSByaWdodHNQYWNrYWdlLm1hcChycCA9PnJwLnNob3J0TGFiZWwpO1xuICAgICAgICBsZXQgZGVsaXZlcnlWaWFMaXZlRmVlZCA9IHJpZ2h0c1BhY2thZ2UuZmlsdGVyKHJwID0+cnAuc2VsZWN0ZWRSaWdodHMuQ09OVEVOVF9ERUxJVkVSWSA9PT0gXCJDT05URU5UX0RFTElWRVJZX0xJVkVcIik7XG5cbiAgICAgICAgaWYgKCBkZWxpdmVyeVZpYUxpdmVGZWVkLmxlbmd0aCA+IDAgJiYgaWQgIT09IFwiQ09OVEVOVF9ERUxJVkVSWVwiICYmIHBhY2thZ2VzQXZhaWxhYmxlLmluZGV4T2YoXCJMVFwiKSA9PT0gLTEgJiYgY2hlY2tDb250ZW50RGVsaXZlcnkgKSBpZCA9IFwiTElWRV9GRUVEX1wiICsgaWQ7XG4gICAgICAgIFxuICAgICAgICBpZiAocmlnaHRzUGFja2FnZUZpbHRlcmVkLmxlbmd0aCA+IDAgKXtcbiAgICAgICAgICAgIGNvbnN0IGZpcnN0UGFja2FnZSA9IHJpZ2h0c1BhY2thZ2VGaWx0ZXJlZFswXTtcbiAgICAgICAgICAgIGNvbnN0IGN1cnJlbnRSaWdodHMgPSBmaXJzdFBhY2thZ2Uuc2VsZWN0ZWRSaWdodHNbaWRdO1xuICAgICAgICAgICAgY29uc3QgZ2V0Q3VycmVudEN1c3RvbVZhbHVlU3RyaW5nID0gZ2V0Q3VzdG9tVmFsdWVTdHJpbmcuYmluZChudWxsLCBmaXJzdFBhY2thZ2UsIGN1cnJlbnRSaWdodHMsIFJpZ2h0SXRlbXNEZWZpbml0aW9ucyk7XG5cbiAgICAgICAgICAgIHN3aXRjaCAoaWQpIHtcbiAgICAgICAgICAgICAgICBjYXNlICdQUk9HUkFNJzpcbiAgICAgICAgICAgICAgICAgICAgZGlzcGxheWVkVmFsdWUgPSBwcm9ncmFtTmFtZTtcbiAgICAgICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICAgICAgY2FzZSAnTElDRU5TRURfTEFOR1VBR0VTJzpcbiAgICAgICAgICAgICAgICAgICAgZGlzcGxheWVkVmFsdWUgPSBnZXRMYW5ndWFnZXNTdHJpbmcobGFuZ3VhZ2VzKTtcbiAgICAgICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICAgICAgY2FzZSAnQ0FNRVJBJzpcbiAgICAgICAgICAgICAgICAgICAgZGlzcGxheWVkVmFsdWUgPSBnZXRDdXJyZW50Q3VzdG9tVmFsdWVTdHJpbmcoaWQsICh2YWx1ZSkgPT4gYE1pbmltdW0gY2FtZXJhczogJHt2YWx1ZX1gICk7XG4gICAgICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgICAgIGNhc2UgJ1JVTlMnOlxuICAgICAgICAgICAgICAgICAgICBkaXNwbGF5ZWRWYWx1ZSA9IGdldEN1cnJlbnRDdXN0b21WYWx1ZVN0cmluZyhpZCwgKHZhbHVlKSA9PiBgJHt2YWx1ZX0gUnVuc2AgKTtcbiAgICAgICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICAgICAgY2FzZSAnQVNQRUNUX1JBVElPJzpcbiAgICAgICAgICAgICAgICAgICAgZGlzcGxheWVkVmFsdWUgPSBnZXRDdXJyZW50Q3VzdG9tVmFsdWVTdHJpbmcoaWQsICh2YWx1ZSkgPT4gYCR7dmFsdWV9YCApO1xuICAgICAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgICAgICBjYXNlICdDT01NRU5UQVJZJzpcbiAgICAgICAgICAgICAgICAgICAgZGlzcGxheWVkVmFsdWUgPSBnZXRDdXJyZW50Q3VzdG9tVmFsdWVTdHJpbmcoaWQsICh2YWx1ZSkgPT4gZ2V0TGFuZ3VhZ2VzU3RyaW5nKHZhbHVlKSk7XG4gICAgICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgICAgIGNhc2UgJ0dSQVBISUNTJzpcbiAgICAgICAgICAgICAgICAgICAgZGlzcGxheWVkVmFsdWUgPSBnZXRDdXJyZW50Q3VzdG9tVmFsdWVTdHJpbmcoaWQsICh2YWx1ZSkgPT4gZ2V0TGFuZ3VhZ2VzU3RyaW5nKHZhbHVlKSk7XG4gICAgICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgICAgIGRlZmF1bHQ6XG4gICAgICAgICAgICAgICAgICAgIGlmIChmaXJzdFBhY2thZ2Uuc2VsZWN0ZWRSaWdodHMpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGNvbnN0IGlzU2luZ2xlTGFiZWwgPSAhQXJyYXkuaXNBcnJheShjdXJyZW50UmlnaHRzKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChpc1NpbmdsZUxhYmVsKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgZGlzcGxheWVkVmFsdWUgPSBSaWdodEl0ZW1zRGVmaW5pdGlvbnNbY3VycmVudFJpZ2h0c10ubGFiZWxcbiAgICAgICAgICAgICAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgZGlzcGxheWVkVmFsdWUgPSBjdXJyZW50UmlnaHRzLm1hcChpdGVtID0+IHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIFJpZ2h0SXRlbXNEZWZpbml0aW9uc1tpdGVtXS5sYWJlbDtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9KS5qb2luKCcsICcpO1xuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cblxuICAgICAgICBjb25zdCB2YWx1ZSA9IChpc011bHRpcGxlVmFsdWVzU2VsZWN0ZWQpID8gXCJNdWx0aXBsZSB2YWx1ZXMgc2VsZWN0ZWRcIiA6IGRpc3BsYXllZFZhbHVlO1xuXG4gICAgICAgIHJldHVybiAoXG4gICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImJhc2UtaW5wdXRcIiBzdHlsZT17e3dpZHRoOiBcIjQ5JVwifX0+XG4gICAgICAgICAgICAgICAgPGxhYmVsPntuYW1lfTwvbGFiZWw+XG4gICAgICAgICAgICAgICAgPGRpdlxuICAgICAgICAgICAgICAgICAgICBjbGFzc05hbWU9J2Rpc3BsYXktbGFiZWwnXG4gICAgICAgICAgICAgICAgICAgIG9uQ2xpY2s9e3RoaXMudG9nZ2xlUG9wdXB9XG4gICAgICAgICAgICAgICAgPlxuICAgICAgICAgICAgICAgICAgICB7dmFsdWUgfHwgJ1NlbGVjdCd9XG4gICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgICAgPGkgY2xhc3NOYW1lPVwiZmEgZmEtZWRpdFwiIG9uQ2xpY2s9e3RoaXMudG9nZ2xlUG9wdXB9IC8+XG4gICAgICAgICAgICAgICAgeyB0aGlzLnJlbmRlck1vZGFsKCkgfVxuICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgIClcbiAgICB9XG59XG5cblxuZXhwb3J0IGRlZmF1bHQgUG9wdXBSaWdodDtcblxuXG4vLyBXRUJQQUNLIEZPT1RFUiAvL1xuLy8gLi9zcmMvQXBwQnVuZGxlL1Jlc291cmNlcy9wdWJsaWMvamF2YXNjcmlwdC9zZWxsL2NvbXBvbmVudHMvUG9wdXBSaWdodC5qcyIsImV4cG9ydCBjb25zdCBQcm9kdWN0aW9uU3RhbmRhcmRzRGVmaW5pdGlvbnMgPSBbXG4gICAge1xuICAgICAgICBuYW1lOiBcIkNvbnRlbnQgRGVsaXZlcnlcIixcbiAgICAgICAga2V5OiBcIkNPTlRFTlRfREVMSVZFUllcIixcbiAgICAgICAgc3VwZXJSaWdodHM6IFtdLFxuICAgICAgICBvcHRpb25zIDogW1xuICAgICAgICAgICAgXCJDT05URU5UX0RFTElWRVJZX0xJVkVcIixcbiAgICAgICAgICAgIFwiQ09OVEVOVF9ERUxJVkVSWV9ERURJQ0FURURcIixcbiAgICAgICAgICAgIFwiQ09OVEVOVF9ERUxJVkVSWV9OT05fREVESUNBVEVEXCJcbiAgICAgICAgXSxcbiAgICAgICAgbXVsdGlwbGUgOiBmYWxzZVxuICAgIH0sXG4gICAge1xuICAgICAgICBuYW1lOiBcIlZpZGVvIFN0YW5kYXJkXCIsXG4gICAgICAgIGtleTogXCJWSURFT19TVEFOREFSRFwiLFxuICAgICAgICBzdXBlclJpZ2h0czogW1wiTFRcIixcIkhMXCIsIFwiTEJcIiwgXCJOQVwiLFwiRFRcIl0sXG4gICAgICAgIHByb2R1Y3Rpb25MYWJlbCA6IHRydWUsXG4gICAgICAgIG9wdGlvbnMgOiBbXG4gICAgICAgICAgICBcIlZJREVPX1NUQU5EQVJEX0hEXCIsXG4gICAgICAgICAgICBcIlZJREVPX1NUQU5EQVJEX1NEXCIsXG4gICAgICAgICAgICBcIlZJREVPX1NUQU5EQVJEX1VIRFwiLFxuICAgICAgICAgICAgXCJWSURFT19TVEFOREFSRF9WUlwiLFxuICAgICAgICAgICAgXCJWSURFT19TVEFOREFSRF9OT1RfQVZBSUxBQkxFXCJcbiAgICAgICAgXSxcbiAgICAgICAgbXVsdGlwbGUgOiBmYWxzZSxcbiAgICAgICAgY2hlY2tEZWxpdmVyeTogdHJ1ZVxuICAgIH0sXG4gICAge1xuICAgICAgICBuYW1lOiBcIkFzcGVjdCByYXRpb1wiLFxuICAgICAgICBrZXk6IFwiQVNQRUNUX1JBVElPXCIsXG4gICAgICAgIHN1cGVyUmlnaHRzOiBbXCJMVFwiLFwiSExcIiwgXCJMQlwiLCBcIk5BXCIsXCJEVFwiXSxcbiAgICAgICAgcHJvZHVjdGlvbkxhYmVsIDogdHJ1ZSxcbiAgICAgICAgb3B0aW9ucyA6IFtcbiAgICAgICAgICAgIFwiQVNQRUNUX1JBVElPXzE2XzlcIixcbiAgICAgICAgICAgIFwiQVNQRUNUX1JBVElPXzRfM1wiLFxuICAgICAgICAgICAgXCJBU1BFQ1RfUkFUSU9fQ1VTVE9NXCIsXG4gICAgICAgICAgICBcIkFTUEVDVF9SQVRJT19OT1RfQVZBSUxBQkxFXCJcbiAgICAgICAgXSxcbiAgICAgICAgbXVsdGlwbGUgOiBmYWxzZSxcbiAgICAgICAgY2hlY2tEZWxpdmVyeTogdHJ1ZVxuICAgIH0sXG4gICAge1xuICAgICAgICBuYW1lOiBcIkdyYXBoaWNzXCIsXG4gICAgICAgIGtleTogXCJHUkFQSElDU1wiLFxuICAgICAgICBzdXBlclJpZ2h0czogW1wiTFRcIixcIkhMXCIsIFwiTEJcIiwgXCJOQVwiLFwiRFRcIl0sXG4gICAgICAgIHByb2R1Y3Rpb25MYWJlbCA6IHRydWUsXG4gICAgICAgIG9wdGlvbnMgOiBbXG4gICAgICAgICAgICBcIkdSQVBISUNTX05PXCIsXG4gICAgICAgICAgICBcIkdSQVBISUNTX1lFU1wiLFxuICAgICAgICAgICAgXCJHUkFQSElDU19OT1RfQVZBSUxBQkxFXCJcbiAgICAgICAgXSxcbiAgICAgICAgbXVsdGlwbGUgOiBmYWxzZSxcbiAgICAgICAgY2hlY2tEZWxpdmVyeTogdHJ1ZVxuICAgIH0sXG4gICAge1xuICAgICAgICBuYW1lOiBcIkNvbW1lbnRhcnlcIixcbiAgICAgICAga2V5OiBcIkNPTU1FTlRBUllcIixcbiAgICAgICAgcHJvZHVjdGlvbkxhYmVsIDogdHJ1ZSxcbiAgICAgICAgc3VwZXJSaWdodHM6IFtcIkxUXCIsXCJITFwiLCBcIkxCXCIsIFwiTkFcIixcIkRUXCJdLFxuICAgICAgICBvcHRpb25zIDogW1xuICAgICAgICAgICAgXCJDT01NRU5UQVJZX05PXCIsXG4gICAgICAgICAgICBcIkNPTU1FTlRBUllfWUVTXCIsXG4gICAgICAgICAgICBcIkNPTU1FTlRBUllfTk9UX0FWQUlMQUJMRVwiXG4gICAgICAgIF0sXG4gICAgICAgIG11bHRpcGxlIDogZmFsc2UsXG4gICAgICAgIGNoZWNrRGVsaXZlcnk6IHRydWVcbiAgICB9LFxuICAgIHtcbiAgICAgICAgbmFtZTogXCJDYW1lcmEgc3RhbmRhcmRzXCIsXG4gICAgICAgIGtleTogXCJDQU1FUkFcIixcbiAgICAgICAgcHJvZHVjdGlvbkxhYmVsIDogdHJ1ZSxcbiAgICAgICAgc3VwZXJSaWdodHM6IFtcIkxUXCIsXCJITFwiLCBcIkxCXCIsIFwiTkFcIixcIkRUXCJdLFxuICAgICAgICBvcHRpb25zIDogW1xuICAgICAgICAgICAgXCJDQU1FUkFfTUlOSU1VTVwiLFxuICAgICAgICAgICAgXCJDQU1FUkFfTk9UX0FWQUlMQUJMRVwiXG4gICAgICAgIF0sXG4gICAgICAgIG11bHRpcGxlIDogZmFsc2UsXG4gICAgICAgIGNoZWNrRGVsaXZlcnk6IHRydWVcbiAgICB9LFxuICAgIHtcbiAgICAgICAgbmFtZTogXCJEZWxpdmVyeSBNZXRob2RcIixcbiAgICAgICAga2V5OiBcIlRFQ0hOSUNBTF9ERUxJVkVSWVwiLFxuICAgICAgICBwcm9kdWN0aW9uTGFiZWwgOiB0cnVlLFxuICAgICAgICBzdXBlclJpZ2h0czogW10sXG4gICAgICAgIG9wdGlvbnMgOiBbXG4gICAgICAgICAgICBcIlRFQ0hOSUNBTF9ERUxJVkVSWV9TQVRFTExJVEVcIixcbiAgICAgICAgICAgIFwiVEVDSE5JQ0FMX0RFTElWRVJZX0lQXCIsXG4gICAgICAgICAgICBcIlRFQ0hOSUNBTF9ERUxJVkVSWV9GVFBcIixcbiAgICAgICAgICAgIFwiVEVDSE5JQ0FMX0RFTElWRVJZX0ZJQkVSXCIsXG4gICAgICAgIF0sXG4gICAgICAgIG11bHRpcGxlIDogdHJ1ZSxcbiAgICAgICAgc2hvd1RleHRBcmVhOlwiRlVSVEhFUl9ERVRBSUxTXCIsXG4gICAgICAgIHRlY2huaWNhbEZlZSA6IFwiVEVDSE5JQ0FMX0RFTElWRVJZX1NBVEVMTElURVwiLFxuICAgICAgICBjaGVja0RlbGl2ZXJ5OiB0cnVlXG4gICAgfSxcbiAgICB7XG4gICAgICAgIG5hbWU6IFwiUHJvZ3JhbSBEZXRhaWxzXCIsXG4gICAgICAgIGtleTogXCJQUk9HUkFNXCIsXG4gICAgICAgIHN1cGVyUmlnaHRzOiBbJ1BSJ10sXG4gICAgICAgIG9wdGlvbnMgOiBbXG4gICAgICAgIF0sXG4gICAgICAgIG11bHRpcGxlIDogZmFsc2VcbiAgICB9XG5cbl07XG5cblxuLy8gV0VCUEFDSyBGT09URVIgLy9cbi8vIC4vc3JjL0FwcEJ1bmRsZS9SZXNvdXJjZXMvcHVibGljL2phdmFzY3JpcHQvc2VsbC9jb21wb25lbnRzL1Byb2R1Y3Rpb25TdGFuZGFyZHNEZWZpbml0aW9ucy5qcyIsImV4cG9ydCBjb25zdCBSaWdodERlZmF1bHRzID0ge1xuICAgIFwiQ1VUU1wiOiBcIkNVVF9BVkFJTEFCTEVfTk9cIixcbiAgICBcIkJST0FEQ0FTVElOR1wiIDogXCJCUk9BRENBU1RJTkdfTk9cIixcbiAgICBcIlNVQkxJQ0VOU0VcIjogXCJTVUJMSUNFTlNFX1lFU19BUFBST1ZBTFwiLFxuICAgIFwiVFJBTlNNSVNTSU9OX01FQU5TXCI6IFtcIlRSQU5TTUlTU0lPTl9NRUFOU19BTExcIl0sXG4gICAgXCJFWFBMT0lUQVRJT05fRk9STVwiIDogW1wiRVhQTE9JVEFUSU9OX0ZPUk1fQUxMXCJdLFxuICAgIFwiVklERU9fU1RBTkRBUkRcIiA6IFwiVklERU9fU1RBTkRBUkRfSERcIixcbiAgICBcIlJVTlNcIiA6IFwiUlVOU19VTkxJTUlURURcIixcbiAgICBcIkVYUExPSVRBVElPTl9XSU5ET1dcIjogXCJFWFBMT0lUQVRJT05fV0lORE9XX1VOTElNSVRFRFwiLFxuICAgIFwiUkVTRVJWRURfUklHSFRTXCIgOiBcIlJFU0VSVkVEX1JJR0hUU19OT1wiLFxuICAgIFwiQVNQRUNUX1JBVElPXCIgOiBcIkFTUEVDVF9SQVRJT18xNl85XCIsXG4gICAgXCJDT01NRU5UQVJZXCI6IFwiQ09NTUVOVEFSWV9OT1wiLFxuICAgIFwiR1JBUEhJQ1NcIjogXCJHUkFQSElDU19OT1wiLFxuICAgIFwiQ0FNRVJBXCI6IFwiQ0FNRVJBX01JTklNVU1cIixcbiAgICBcIkNPTlRFTlRcIiA6IFwiQ09OVEVOVF9BTExcIixcbiAgICBcIlRFQ0hOSUNBTF9ERUxJVkVSWVwiOiBbXCJURUNITklDQUxfREVMSVZFUllfU0FURUxMSVRFXCJdLFxuICAgIFwiVEVDSE5JQ0FMX0ZFRVwiIDogXCJJTkNMVURFRFwiLFxuICAgIFwiQ0FNRVJBU1wiIDogNCxcbiAgICBMSVZFX0ZFRURfQVNQRUNUX1JBVElPIDogXCJBU1BFQ1RfUkFUSU9fMTZfOVwiLFxuICAgIExJVkVfRkVFRF9DT01NRU5UQVJZOiBcIkNPTU1FTlRBUllfTk9cIixcbiAgICBMSVZFX0ZFRURfR1JBUEhJQ1M6IFwiR1JBUEhJQ1NfTk9cIixcbiAgICBMSVZFX0ZFRURfQ0FNRVJBOiBcIkNBTUVSQV9NSU5JTVVNXCIsXG4gICAgTElWRV9GRUVEX1RFQ0hOSUNBTF9ERUxJVkVSWTogXCJURUNITklDQUxfREVMSVZFUllfU0FURUxMSVRFXCIsXG4gICAgTElWRV9GRUVEX0NBTUVSQVMgOiA0LFxuICAgIExJVkVfRkVFRF9WSURFT19TVEFOREFSRCA6IFwiVklERU9fU1RBTkRBUkRfSERcIixcbiAgICBcIkxJQ0VOU0VEX0xBTkdVQUdFU1wiIDogXCJMSUNFTlNFRF9MQU5HVUFHRVNfWUVTXCIsXG59O1xuXG5cbi8vIFdFQlBBQ0sgRk9PVEVSIC8vXG4vLyAuL3NyYy9BcHBCdW5kbGUvUmVzb3VyY2VzL3B1YmxpYy9qYXZhc2NyaXB0L3NlbGwvY29tcG9uZW50cy9SaWdodERlZmF1bHRzLmpzIiwiZXhwb3J0IGNvbnN0IFJpZ2h0RGVmYXVsdHNCeVN1cGVyUmlnaHQgPSB7XG4gICAgXCJMVFwiIDoge1xuICAgICAgICBcIkNPTlRFTlRfREVMSVZFUllcIiA6IFwiQ09OVEVOVF9ERUxJVkVSWV9ERURJQ0FURURcIlxuICAgIH0sXG4gICAgXCJQUlwiIDoge1xuICAgICAgICBcIkNPTlRFTlRfREVMSVZFUllcIiA6IFwiQ09OVEVOVF9ERUxJVkVSWV9ERURJQ0FURURcIlxuICAgIH0sXG4gICAgXCJOQVwiIDoge1xuICAgICAgICBcIkNPTlRFTlRfREVMSVZFUllcIiA6IFwiQ09OVEVOVF9ERUxJVkVSWV9OT05fREVESUNBVEVEXCJcbiAgICB9LFxuICAgIFwiRFRcIiA6IHtcbiAgICAgICAgXCJDT05URU5UX0RFTElWRVJZXCIgOiBcIkNPTlRFTlRfREVMSVZFUllfTk9OX0RFRElDQVRFRFwiXG4gICAgfSxcbiAgICBcIkhMXCIgOiB7XG4gICAgICAgIFwiQ09OVEVOVF9ERUxJVkVSWVwiIDogXCJDT05URU5UX0RFTElWRVJZX05PTl9ERURJQ0FURURcIlxuICAgIH0sXG4gICAgXCJMQlwiIDoge1xuICAgICAgICBcIkNPTlRFTlRfREVMSVZFUllcIiA6IFwiQ09OVEVOVF9ERUxJVkVSWV9OT05fREVESUNBVEVEXCJcbiAgICB9XG5cbn07XG5cblxuLy8gV0VCUEFDSyBGT09URVIgLy9cbi8vIC4vc3JjL0FwcEJ1bmRsZS9SZXNvdXJjZXMvcHVibGljL2phdmFzY3JpcHQvc2VsbC9jb21wb25lbnRzL1JpZ2h0RGVmYXVsdHNCeVN1cGVyUmlnaHQuanMiLCJleHBvcnQgY29uc3QgUmlnaHREZWZpbml0aW9ucyA9IFtcbiAgICB7XG4gICAgICAgIG5hbWU6IFwiUmlnaHQgdG8gc3VibGljZW5zZVwiLFxuICAgICAgICBrZXk6IFwiU1VCTElDRU5TRVwiLFxuICAgICAgICBzdXBlclJpZ2h0czogW10sXG4gICAgICAgIG9wdGlvbnMgOiBbXG4gICAgICAgICAgICBcIlNVQkxJQ0VOU0VfWUVTXCIsXG4gICAgICAgICAgICBcIlNVQkxJQ0VOU0VfWUVTX0FQUFJPVkFMXCIsXG4gICAgICAgICAgICBcIlNVQkxJQ0VOU0VfTk9cIlxuICAgICAgICBdLFxuICAgICAgICBtdWx0aXBsZSA6IGZhbHNlLFxuICAgICAgICBkZXNjcmlwdGlvbjogJ01lYW5zIHRoZSBsaWNlbnNlZVxcJ3MgcmlnaHQgdG8gc3VibGljZW5zZSB0aGUgcHJvZ3JhbSB0byBhIHRoaXJkIHBhcnR5LidcbiAgICB9LFxuICAgIHtcbiAgICAgICAgbmFtZSA6IFwiVHJhbnNtaXNzaW9uIE9ibGlnYXRpb25cIixcbiAgICAgICAga2V5OiBcIkJST0FEQ0FTVElOR1wiLFxuICAgICAgICBzdXBlclJpZ2h0czogW10sXG4gICAgICAgIG9wdGlvbnMgOiBbXG4gICAgICAgICAgICBcIkJST0FEQ0FTVElOR19OT1wiLFxuICAgICAgICAgICAgXCJCUk9BRENBU1RJTkdfWUVTXCJcbiAgICAgICAgXSxcbiAgICAgICAgc2hvd1RleHRBcmVhOlwiQlJPQURDQVNUSU5HX1lFU1wiLFxuICAgICAgICBtdWx0aXBsZSA6IGZhbHNlLFxuICAgICAgICBkZXNjcmlwdGlvbjogJ01lYW5zIHRoZSBsaWNlbnNlZVxcJ3Mgb2JsaWdhdGlvbiB0byB0cmFuc21pdCB0aGUgcHJvZ3JhbS4nXG4gICAgfSxcbiAgICB7XG4gICAgICAgIG5hbWUgOiBcIlRyYW5zbWlzc2lvbiBtZWFuc1wiLFxuICAgICAgICBrZXk6IFwiVFJBTlNNSVNTSU9OX01FQU5TXCIsXG4gICAgICAgIHN1cGVyUmlnaHRzOiBbXSxcbiAgICAgICAgb3B0aW9ucyA6IFtcbiAgICAgICAgICAgIFwiVFJBTlNNSVNTSU9OX01FQU5TX0FMTFwiLFxuICAgICAgICAgICAgXCJUUkFOU01JU1NJT05fTUVBTlNfQ0FCTEVcIixcbiAgICAgICAgICAgIFwiVFJBTlNNSVNTSU9OX01FQU5TX1NBVEVMTElURVwiLFxuICAgICAgICAgICAgXCJUUkFOU01JU1NJT05fTUVBTlNfRElHSVRBTFwiLFxuICAgICAgICAgICAgXCJUUkFOU01JU1NJT05fTUVBTlNfT1RUXCIsXG4gICAgICAgICAgICBcIlRSQU5TTUlTU0lPTl9NRUFOU19JTlRFUk5FVFwiLFxuICAgICAgICAgICAgXCJUUkFOU01JU1NJT05fTUVBTlNfTU9CSUxFXCJcbiAgICAgICAgXSxcbiAgICAgICAgbXVsdGlwbGUgOiB0cnVlLFxuICAgICAgICBkZXNjcmlwdGlvbjogJ01lYW5zIHRoZSB0ZWNobmljYWwgbWVhbnMgb24gd2hpY2ggdGhlIGxpY2Vuc2VlIG1heSB0cmFuc21pdCB0aGUgcHJvZ3JhbSB0byB0aGUgZW5kLXVzZXIuJ1xuICAgIH0sXG4gICAge1xuICAgICAgICBuYW1lOiBcIlRyYW5zbWlzc2lvbiBGb3JtXCIsXG4gICAgICAgIGtleSA6IFwiRVhQTE9JVEFUSU9OX0ZPUk1cIixcbiAgICAgICAgc3VwZXJSaWdodHMgOiBbXSxcbiAgICAgICAgb3B0aW9uczogW1xuICAgICAgICAgICAgXCJFWFBMT0lUQVRJT05fRk9STV9BTExcIixcbiAgICAgICAgICAgIFwiRVhQTE9JVEFUSU9OX0ZPUk1fRlJFRVwiLFxuICAgICAgICAgICAgXCJFWFBMT0lUQVRJT05fRk9STV9QQVlcIixcbiAgICAgICAgICAgIFwiRVhQTE9JVEFUSU9OX0ZPUk1fSU4tU0hJUFwiLFxuICAgICAgICAgICAgXCJFWFBMT0lUQVRJT05fRk9STV9DTE9TRURcIlxuICAgICAgICBdLFxuICAgICAgICBtdWx0aXBsZTogdHJ1ZSxcbiAgICAgICAgZGVzY3JpcHRpb246ICdNZWFucyB0aGUgY29tbWVyY2lhbCBmb3JtIGJ5IG1lYW5zIG9mIHdoaWNoIHRoZSBsaWNlbnNlZSBtYXkgdHJhbnNtaXQgdGhlIHByb2dyYW0gdG8gdGhlIGVuZC11c2VyLidcbiAgICB9LFxuICAgIHtcbiAgICAgICAgbmFtZSA6IFwiTGljZW5zZWQgbGFuZ3VhZ2VzXCIsXG4gICAgICAgIGtleSA6IFwiTElDRU5TRURfTEFOR1VBR0VTXCIsXG4gICAgICAgIHN1cGVyUmlnaHRzIDogW10sXG4gICAgICAgIG9wdGlvbnMgOiBbXSxcbiAgICAgICAgZ2xvYmFsIDogdHJ1ZSxcbiAgICAgICAgbGFuZ3VhZ2UgOiB0cnVlLFxuICAgICAgICBkZXNjcmlwdGlvbjogJ01lYW5zIHRoZSBsYW5ndWFnZSBpbiB3aGljaCB0aGUgbGljZW5zZWUgbXkgZXhwbG9pdCB0aGUgZ3JhbnRlZCByaWdodHMuJ1xuICAgIH0sXG4gICAge1xuICAgICAgICBuYW1lIDogXCJOdW1iZXIgb2YgcnVuc1wiLFxuICAgICAgICBrZXk6IFwiUlVOU1wiLFxuICAgICAgICBzdXBlclJpZ2h0czogW1wiQ0xcIixcIk5BXCIsXCJQUlwiLCBcIkRUXCIsIFwiSExcIl0sXG4gICAgICAgIG9wdGlvbnMgOiBbXG4gICAgICAgICAgICBcIlJVTlNfVU5MSU1JVEVEXCIsXG4gICAgICAgICAgICBcIlJVTlNfTElNSVRFRFwiLFxuICAgICAgICBdLFxuICAgICAgICBtdWx0aXBsZSA6IGZhbHNlLFxuICAgICAgICBkZXNjcmlwdGlvbjogJ01lYW5zIHRoZSBudW1iZXIgb2YgVHJhbnNtaXNzaW9uIG9mIHRoZSBQcm9ncmFtLidcbiAgICB9LFxuICAgIHtcbiAgICAgICAgbmFtZSA6IFwiRXhwbG9pdGF0aW9uIHdpbmRvd1wiLFxuICAgICAgICBrZXk6IFwiRVhQTE9JVEFUSU9OX1dJTkRPV1wiLFxuICAgICAgICBzdXBlclJpZ2h0czogW1wiQ0xcIixcIk5BXCIsXCJQUlwiLCBcIkRUXCIsIFwiSExcIl0sXG4gICAgICAgIG9wdGlvbnMgOiBbXG4gICAgICAgICAgICBcIkVYUExPSVRBVElPTl9XSU5ET1dfVU5MSU1JVEVEXCIsXG4gICAgICAgICAgICBcIkVYUExPSVRBVElPTl9XSU5ET1dfTElNSVRFRFwiLFxuICAgICAgICBdLFxuICAgICAgICBtdWx0aXBsZSA6IGZhbHNlLFxuICAgICAgICBkZXNjcmlwdGlvbjogJ01lYW5zIHRoZSBzcGVjaWZpYyB0aW1lIGZyYW1lIHdpdGhpbiB0aGUgbGljZW5zZSBwZXJpb2QgaW4gd2hpY2ggdGhlIGxpY2Vuc2VlIG1heSBleHBsb2l0IGEgc3BlY2lmaWMgcmlnaHQuJyxcbiAgICAgICAgc2hvd1RleHRBcmVhOlwiRVhQTE9JVEFUSU9OX1dJTkRPV19MSU1JVEVEXCJcbiAgICB9LFxuICAgIHtcbiAgICAgICAgbmFtZSA6IFwiUmVzZXJ2ZWQgcmlnaHRzXCIsXG4gICAgICAgIGtleTogXCJSRVNFUlZFRF9SSUdIVFNcIixcbiAgICAgICAgc3VwZXJSaWdodHM6IFtdLFxuICAgICAgICBvcHRpb25zIDogW1xuICAgICAgICAgICAgXCJSRVNFUlZFRF9SSUdIVFNfTk9cIixcbiAgICAgICAgICAgIFwiUkVTRVJWRURfUklHSFRTX1lFU1wiLFxuICAgICAgICBdLFxuICAgICAgICBtdWx0aXBsZSA6IGZhbHNlLFxuICAgICAgICBkZXNjcmlwdGlvbjogJ01lYW5zIHRoZSBhdWRpby12aXN1YWwgcmlnaHRzIHRvIHRoZSBwcm9ncmFtIHRoYXQgeW91LCBvciB5b3VyIHN1YmxpY2Vuc2VlLCBtYXkgZXhwbG9pdCBpcnJlc3BlY3RpdmUgb2YgYW55IGV4Y2x1c2l2aXR5IGdyYW50ZWQuJyxcbiAgICAgICAgc2hvd1RleHRBcmVhOlwiUkVTRVJWRURfUklHSFRTX1lFU1wiXG5cbiAgICB9LFxuXTtcblxuXG4vLyBXRUJQQUNLIEZPT1RFUiAvL1xuLy8gLi9zcmMvQXBwQnVuZGxlL1Jlc291cmNlcy9wdWJsaWMvamF2YXNjcmlwdC9zZWxsL2NvbXBvbmVudHMvUmlnaHREZWZpbml0aW9ucy5qcyIsImV4cG9ydCBjb25zdCBSaWdodEl0ZW1zRGVmaW5pdGlvbnMgPSB7XG4gICAgXCJCUk9BRENBU1RJTkdfWUVTXCIgOiB7XG4gICAgICAgIFwicGFyZW50XCIgOiBcIlRyYW5zbWlzc2lvbiBPYmxpZ2F0aW9uXCIsXG4gICAgICAgIFwibGFiZWxcIiA6IFwiWWVzXCJcbiAgICB9LFxuICAgIFwiQlJPQURDQVNUSU5HX05PXCIgOiB7XG4gICAgICAgIFwicGFyZW50XCIgOiBcIlRyYW5zbWlzc2lvbiBPYmxpZ2F0aW9uXCIsXG4gICAgICAgIFwibGFiZWxcIiA6IFwiTm9cIlxuICAgIH0sXG4gICAgXCJTVUJMSUNFTlNFX1lFU1wiIDoge1xuICAgICAgICBcInBhcmVudFwiIDogXCJSaWdodCB0byBzdWJsaWNlbnNlXCIsXG4gICAgICAgIFwibGFiZWxcIiA6IFwiWWVzXCJcbiAgICB9LFxuICAgIFwiU1VCTElDRU5TRV9ZRVNfQVBQUk9WQUxcIiA6IHtcbiAgICAgICAgXCJwYXJlbnRcIiA6IFwiUmlnaHQgdG8gc3VibGljZW5zZVwiLFxuICAgICAgICBcImxhYmVsXCIgOiBcIlllcywgYnV0IHJlbWFpbnMgc3ViamVjdCB0byBzZWxsZXIncyBhcHByb3ZhbFwiXG4gICAgfSxcbiAgICBcIlNVQkxJQ0VOU0VfTk9cIiA6IHtcbiAgICAgICAgXCJwYXJlbnRcIiA6IFwiUmlnaHQgdG8gc3VibGljZW5zZVwiLFxuICAgICAgICBcImxhYmVsXCIgOiBcIk5vXCJcbiAgICB9LFxuICAgIFwiQ1VUX0FWQUlMQUJMRV9ZRVNcIiA6IHtcbiAgICAgICAgXCJwYXJlbnRcIiA6IFwiQ3V0IGF2YWlsYWJsZVwiLFxuICAgICAgICBcImxhYmVsXCIgOiBcIlllc1wiXG4gICAgfSxcbiAgICBcIkNVVF9BVkFJTEFCTEVfTk9cIiA6IHtcbiAgICAgICAgXCJwYXJlbnRcIiA6IFwiQ3V0IGF2YWlsYWJsZVwiLFxuICAgICAgICBcImxhYmVsXCIgOiBcIk5vXCJcbiAgICB9LFxuICAgIFwiVFJBTlNNSVNTSU9OX01FQU5TX0FMTFwiIDoge1xuICAgICAgICBcInBhcmVudFwiIDogXCJUcmFuc21pc3Npb24gbWVhbnNcIixcbiAgICAgICAgXCJsYWJlbFwiIDogXCJBbGxcIixcbiAgICAgICAgYWxsIDogdHJ1ZVxuICAgIH0sXG4gICAgXCJUUkFOU01JU1NJT05fTUVBTlNfQ0FCTEVcIiA6IHtcbiAgICAgICAgXCJwYXJlbnRcIiA6IFwiVHJhbnNtaXNzaW9uIG1lYW5zXCIsXG4gICAgICAgIFwibGFiZWxcIiA6IFwiQ2FibGUgJiBJUFRWXCJcbiAgICB9LFxuICAgIFwiVFJBTlNNSVNTSU9OX01FQU5TX1NBVEVMTElURVwiIDoge1xuICAgICAgICBcInBhcmVudFwiIDogXCJUcmFuc21pc3Npb24gbWVhbnNcIixcbiAgICAgICAgXCJsYWJlbFwiIDogXCJTYXRlbGxpdGVcIlxuICAgIH0sXG4gICAgXCJUUkFOU01JU1NJT05fTUVBTlNfRElHSVRBTFwiIDoge1xuICAgICAgICBcInBhcmVudFwiIDogXCJUcmFuc21pc3Npb24gbWVhbnNcIixcbiAgICAgICAgXCJsYWJlbFwiIDogXCJEaWdpdGFsIFRlcnJlc3RyaWFsXCJcbiAgICB9LFxuICAgIFwiVFJBTlNNSVNTSU9OX01FQU5TX09UVFwiIDoge1xuICAgICAgICBcInBhcmVudFwiIDogXCJUcmFuc21pc3Npb24gbWVhbnNcIixcbiAgICAgICAgXCJsYWJlbFwiIDogXCJPVFRcIlxuICAgIH0sXG4gICAgXCJUUkFOU01JU1NJT05fTUVBTlNfSU5URVJORVRcIiA6IHtcbiAgICAgICAgXCJwYXJlbnRcIiA6IFwiVHJhbnNtaXNzaW9uIG1lYW5zXCIsXG4gICAgICAgIFwibGFiZWxcIiA6IFwiSW50ZXJuZXRcIlxuICAgIH0sXG4gICAgXCJUUkFOU01JU1NJT05fTUVBTlNfTU9CSUxFXCIgOiB7XG4gICAgICAgIFwicGFyZW50XCIgOiBcIlRyYW5zbWlzc2lvbiBtZWFuc1wiLFxuICAgICAgICBcImxhYmVsXCIgOiBcIk1vYmlsZVwiXG4gICAgfSxcbiAgICBcIkVYUExPSVRBVElPTl9GT1JNX0FMTFwiIDoge1xuICAgICAgICBcInBhcmVudFwiIDogXCJUcmFuc21pc3Npb24gRm9ybVwiLFxuICAgICAgICBcImxhYmVsXCIgOiBcIkFsbFwiLFxuICAgICAgICBhbGwgOiB0cnVlXG4gICAgfSxcbiAgICBcIkVYUExPSVRBVElPTl9GT1JNX0ZSRUVcIiA6IHtcbiAgICAgICAgXCJwYXJlbnRcIiA6IFwiRXhwbG9pdGF0aW9uIGZvcm1cIixcbiAgICAgICAgXCJsYWJlbFwiIDogXCJGcmVlIE9ubHlcIlxuICAgIH0sXG4gICAgXCJFWFBMT0lUQVRJT05fRk9STV9QQVlcIiA6IHtcbiAgICAgICAgXCJwYXJlbnRcIiA6IFwiRXhwbG9pdGF0aW9uIGZvcm1cIixcbiAgICAgICAgXCJsYWJlbFwiIDogXCJQYXkgT25seVwiXG4gICAgfSxcbiAgICBcIkVYUExPSVRBVElPTl9GT1JNX0lOLVNISVBcIiA6IHtcbiAgICAgICAgXCJwYXJlbnRcIiA6IFwiRXhwbG9pdGF0aW9uIGZvcm1cIixcbiAgICAgICAgXCJsYWJlbFwiIDogXCJJbi1TaGlwICYgSW4tRmxpZ2h0XCJcbiAgICB9LFxuICAgIFwiRVhQTE9JVEFUSU9OX0ZPUk1fQ0xPU0VEXCIgOiB7XG4gICAgICAgIFwicGFyZW50XCIgOiBcIkV4cGxvaXRhdGlvbiBmb3JtXCIsXG4gICAgICAgIFwibGFiZWxcIiA6IFwiQ2xvc2VkIENpcmN1aXRcIlxuICAgIH0sXG4gICAgXCJSVU5TX1VOTElNSVRFRFwiIDoge1xuICAgICAgICBcInBhcmVudFwiIDogXCJOdW1iZXIgb2YgcnVuc1wiLFxuICAgICAgICBcImxhYmVsXCIgOiBcIlVubGltaXRlZFwiXG4gICAgfSxcbiAgICBcIlJVTlNfTElNSVRFRFwiIDoge1xuICAgICAgICBcInBhcmVudFwiIDogXCJOdW1iZXIgb2YgcnVuc1wiLFxuICAgICAgICBcImxhYmVsXCIgOiBcIkxpbWl0ZWRcIixcbiAgICAgICAgbnVtYmVyRmllbGQgOiB0cnVlXG4gICAgfSxcbiAgICBcIkVYUExPSVRBVElPTl9XSU5ET1dfVU5MSU1JVEVEXCIgOiB7XG4gICAgICAgIFwicGFyZW50XCIgOiBcIkV4cGxvaXRhdGlvbiB3aW5kb3dcIixcbiAgICAgICAgXCJsYWJlbFwiIDogXCJVbmxpbWl0ZWRcIlxuICAgIH0sXG4gICAgXCJFWFBMT0lUQVRJT05fV0lORE9XX0xJTUlURURcIiA6IHtcbiAgICAgICAgXCJwYXJlbnRcIiA6IFwiRXhwbG9pdGF0aW9uIHdpbmRvd1wiLFxuICAgICAgICBcImxhYmVsXCIgOiBcIkxpbWl0ZWRcIlxuICAgIH0sXG5cbiAgICBcIlZJREVPX1NUQU5EQVJEX0hEXCI6IHtcbiAgICAgICAgXCJwYXJlbnRcIiA6IFwiVmlkZW8gc3RhbmRhcmRcIixcbiAgICAgICAgXCJsYWJlbFwiIDogXCJIRFwiXG4gICAgfSxcbiAgICBcIlZJREVPX1NUQU5EQVJEX1NEXCI6IHtcbiAgICAgICAgXCJwYXJlbnRcIiA6IFwiVmlkZW8gc3RhbmRhcmRcIixcbiAgICAgICAgXCJsYWJlbFwiIDogXCJTRFwiXG4gICAgfSxcbiAgICBcIlZJREVPX1NUQU5EQVJEX1VIRFwiOiB7XG4gICAgICAgIFwicGFyZW50XCIgOiBcIlZpZGVvIHN0YW5kYXJkXCIsXG4gICAgICAgIFwibGFiZWxcIiA6IFwiVUhEXCJcbiAgICB9LFxuICAgIFwiVklERU9fU1RBTkRBUkRfVlJcIjoge1xuICAgICAgICBcInBhcmVudFwiIDogXCJWaWRlbyBzdGFuZGFyZFwiLFxuICAgICAgICBcImxhYmVsXCIgOiBcIlZSXCJcbiAgICB9LFxuICAgIFwiVklERU9fU1RBTkRBUkRfTk9UX0FWQUlMQUJMRVwiIDoge1xuICAgICAgICBcInBhcmVudFwiIDogXCJWaWRlbyBzdGFuZGFyZFwiLFxuICAgICAgICBcImxhYmVsXCIgOiBcIkluZm8gbm90IGF2YWlsYWJsZSB5ZXRcIlxuICAgIH0sXG4gICAgXCJSRVNFUlZFRF9SSUdIVFNfTk9cIjoge1xuICAgICAgICBcInBhcmVudFwiIDogXCJSZXNlcnZlZCByaWdodHNcIixcbiAgICAgICAgXCJsYWJlbFwiIDogXCJOb1wiXG4gICAgfSxcbiAgICBcIlJFU0VSVkVEX1JJR0hUU19ZRVNcIjoge1xuICAgICAgICBcInBhcmVudFwiIDogXCJSZXNlcnZlZCByaWdodHNcIixcbiAgICAgICAgXCJsYWJlbFwiIDogXCJZZXNcIixcblxuICAgIH0sXG4gICAgXCJBU1BFQ1RfUkFUSU9fMTZfOVwiOiB7XG4gICAgICAgIFwicGFyZW50XCIgOiBcIkFzcGVjdCByYXRpb1wiLFxuICAgICAgICBcImxhYmVsXCIgOiBcIjE2OjlcIixcbiAgICB9LFxuICAgIFwiQVNQRUNUX1JBVElPXzRfM1wiOiB7XG4gICAgICAgIFwicGFyZW50XCIgOiBcIkFzcGVjdCByYXRpb1wiLFxuICAgICAgICBcImxhYmVsXCIgOiBcIjQ6M1wiLFxuICAgIH0sXG4gICAgXCJBU1BFQ1RfUkFUSU9fQ1VTVE9NXCI6IHtcbiAgICAgICAgXCJwYXJlbnRcIiA6IFwiQXNwZWN0IHJhdGlvXCIsXG4gICAgICAgIFwibGFiZWxcIiA6IFwiT3RoZXJcIixcbiAgICAgICAgdGV4dEZpZWxkIDogdHJ1ZVxuICAgIH0sXG4gICAgXCJBU1BFQ1RfUkFUSU9fTk9UX0FWQUlMQUJMRVwiIDoge1xuICAgICAgICBcInBhcmVudFwiIDogXCJBc3BlY3QgcmF0aW9cIixcbiAgICAgICAgXCJsYWJlbFwiIDogXCJJbmZvIG5vdCBhdmFpbGFibGUgeWV0XCJcbiAgICB9LFxuICAgIFwiR1JBUEhJQ1NfTk9cIjoge1xuICAgICAgICBcInBhcmVudFwiIDogXCJHcmFwaGljc1wiLFxuICAgICAgICBcImxhYmVsXCIgOiBcIk5vXCJcbiAgICB9LFxuICAgIFwiR1JBUEhJQ1NfWUVTXCI6IHtcbiAgICAgICAgXCJwYXJlbnRcIiA6IFwiR3JhcGhpY3NcIixcbiAgICAgICAgXCJsYWJlbFwiIDogXCJZZXNcIixcbiAgICAgICAgbGFuZ3VhZ2UgOiB0cnVlLFxuICAgICAgICBsYW5ndWFnZXM6IFtdXG4gICAgfSxcbiAgICBcIkdSQVBISUNTX05PVF9BVkFJTEFCTEVcIiA6IHtcbiAgICAgICAgXCJwYXJlbnRcIiA6IFwiR3JhcGhpY3NcIixcbiAgICAgICAgXCJsYWJlbFwiIDogXCJJbmZvIG5vdCBhdmFpbGFibGUgeWV0XCJcbiAgICB9LFxuICAgIFwiQ09NTUVOVEFSWV9OT1wiOiB7XG4gICAgICAgIFwicGFyZW50XCIgOiBcIkNvbW1lbnRhcnlcIixcbiAgICAgICAgXCJsYWJlbFwiIDogXCJOb1wiXG4gICAgfSxcbiAgICBcIkNPTU1FTlRBUllfWUVTXCI6IHtcbiAgICAgICAgXCJwYXJlbnRcIiA6IFwiQ29tbWVudGFyeVwiLFxuICAgICAgICBcImxhYmVsXCIgOiBcIlllc1wiLFxuICAgICAgICBsYW5ndWFnZSA6IHRydWUsXG4gICAgICAgIGxhbmd1YWdlczogW10sXG4gICAgICAgIHZhbGlkYXRlOiB0cnVlXG4gICAgfSxcbiAgICBcIkNPTU1FTlRBUllfTk9UX0FWQUlMQUJMRVwiOiB7XG4gICAgICAgIFwicGFyZW50XCIgOiBcIkNvbW1lbnRhcnlcIixcbiAgICAgICAgXCJsYWJlbFwiIDogXCJJbmZvIG5vdCBhdmFpbGFibGUgeWV0XCJcbiAgICB9LFxuICAgIFwiTElDRU5TRURfTEFOR1VBR0VTX1lFU1wiIDoge1xuICAgICAgICBsYWJlbCA6ICcnLFxuICAgICAgICBsYW5ndWFnZSA6IHRydWUsXG4gICAgICAgIGxhbmd1YWdlczogW10sXG4gICAgfSxcbiAgICBcIkNBTUVSQV9NSU5JTVVNXCI6IHtcbiAgICAgICAgXCJwYXJlbnRcIiA6IFwiQ2FtZXJhIHN0YW5kYXJkc1wiLFxuICAgICAgICBcImxhYmVsXCIgOiBcIk1pbmltdW0gY2FtZXJhc1wiLFxuICAgICAgICBudW1iZXJGaWVsZCA6IHRydWUsXG4gICAgICAgIG51bWJlckZpZWxkVmFsdWUgOiBcIkNBTUVSQVNcIlxuICAgIH0sXG4gICAgXCJDQU1FUkFfVEVYVFwiOiB7XG4gICAgICAgIFwicGFyZW50XCIgOiBcIkNhbWVyYSBzdGFuZGFyZHNcIixcbiAgICAgICAgXCJsYWJlbFwiIDogXCJcIixcbiAgICAgICAgdGV4dEZpZWxkIDogdHJ1ZVxuICAgIH0sXG4gICAgXCJDQU1FUkFfTk9UX0FWQUlMQUJMRVwiIDoge1xuICAgICAgICBcInBhcmVudFwiIDogXCJDYW1lcmEgc3RhbmRhcmRzXCIsXG4gICAgICAgIFwibGFiZWxcIiA6IFwiSW5mbyBub3QgYXZhaWxhYmxlIHlldFwiXG4gICAgfSxcbiAgICBcIkNPTlRFTlRfQUxMXCI6IHtcbiAgICAgICAgXCJwYXJlbnRcIiA6IFwiQ29udGVudCBwcm9kdWN0aW9uXCIsXG4gICAgICAgIFwibGFiZWxcIiA6IFwiQWxsIGNvbnRlbnQgcHJvZHVjZWRcIlxuICAgIH0sXG4gICAgXCJDT05URU5UX1RFWFRcIjoge1xuICAgICAgICBcInBhcmVudFwiIDogXCJDb250ZW50IHByb2R1Y3Rpb25cIixcbiAgICAgICAgXCJsYWJlbFwiIDogXCJDb250ZW50IHBhcnRpYWxseSBwcm9kdWNlZFwiLFxuICAgIH0sXG5cbiAgICBcIlRFQ0hOSUNBTF9ERUxJVkVSWV9TQVRFTExJVEVcIjoge1xuICAgICAgICBcInBhcmVudFwiIDogXCJUZWNobmljYWwgZGVsaXZlcnlcIixcbiAgICAgICAgXCJsYWJlbFwiIDogXCJTYXRlbGxpdGVcIlxuICAgIH0sXG5cbiAgICBcIlRFQ0hOSUNBTF9ERUxJVkVSWV9JUFwiOiB7XG4gICAgICAgIFwicGFyZW50XCIgOiBcIlRlY2huaWNhbCBkZWxpdmVyeVwiLFxuICAgICAgICBcImxhYmVsXCIgOiBcIklQXCJcbiAgICB9LFxuXG4gICAgXCJURUNITklDQUxfREVMSVZFUllfRlRQXCI6IHtcbiAgICAgICAgXCJwYXJlbnRcIiA6IFwiVGVjaG5pY2FsIGRlbGl2ZXJ5XCIsXG4gICAgICAgIFwibGFiZWxcIiA6IFwiRlRQLXNlcnZlclwiXG4gICAgfSxcblxuICAgIFwiVEVDSE5JQ0FMX0RFTElWRVJZX0ZJQkVSXCI6IHtcbiAgICAgICAgXCJwYXJlbnRcIiA6IFwiVGVjaG5pY2FsIGRlbGl2ZXJ5XCIsXG4gICAgICAgIFwibGFiZWxcIiA6IFwiRmliZXJcIlxuICAgIH0sXG5cbiAgICBcIkNPTlRFTlRfREVMSVZFUllfTElWRVwiOiB7XG4gICAgICAgIFwicGFyZW50XCIgOiBcIkNvbnRlbnQgRGVsaXZlcnlcIixcbiAgICAgICAgXCJsYWJlbFwiIDogXCJEZWxpdmVyZWQgdmlhIGxpdmUgZmVlZFwiLFxuICAgICAgICBoaWRlSWYgOiBbXCJMVFwiLCBcIlBSXCJdXG5cbiAgICB9LFxuXG4gICAgXCJDT05URU5UX0RFTElWRVJZX0RFRElDQVRFRFwiOiB7XG4gICAgICAgIFwicGFyZW50XCIgOiBcIkNvbnRlbnQgRGVsaXZlcnlcIixcbiAgICAgICAgXCJsYWJlbFwiIDogXCJEZWRpY2F0ZWQgY29udGVudCBkZWxpdmVyeVwiXG4gICAgfSxcblxuICAgIFwiQ09OVEVOVF9ERUxJVkVSWV9OT05fREVESUNBVEVEXCI6IHtcbiAgICAgICAgXCJwYXJlbnRcIiA6IFwiQ29udGVudCBEZWxpdmVyeVwiLFxuICAgICAgICBcImxhYmVsXCIgOiBcIk5vIGRlZGljYXRlZCBjb250ZW50IGRlbGl2ZXJ5XCIsXG4gICAgICAgIGRpc2FibGVkSWYgOiBbXCJMVFwiLCBcIlBSXCJdXG4gICAgfSxcblxuXG59O1xuXG5cbi8vIFdFQlBBQ0sgRk9PVEVSIC8vXG4vLyAuL3NyYy9BcHBCdW5kbGUvUmVzb3VyY2VzL3B1YmxpYy9qYXZhc2NyaXB0L3NlbGwvY29tcG9uZW50cy9SaWdodEl0ZW1zRGVmaW5pdGlvbnMuanMiLCJpbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xuaW1wb3J0IE1hdGNoIGZyb20gJy4vTWF0Y2gnO1xuaW1wb3J0IHtjb25uZWN0fSBmcm9tIFwicmVhY3QtcmVkdXhcIjtcblxuY2xhc3MgUm91bmQgZXh0ZW5kcyBSZWFjdC5Db21wb25lbnQge1xuXG4gICAgY29uc3RydWN0b3IocHJvcHMpIHtcbiAgICAgICAgc3VwZXIocHJvcHMpO1xuICAgICAgICB0aGlzLnN0YXRlID0ge1xuICAgICAgICB9O1xuICAgIH1cblxuICAgIHRvZ2dsZSA9IChlKSA9PiB7XG4gICAgICAgIGNvbnN0IHsgc2Vhc29ucywgc2Vhc29uLCByb3VuZCwgdXBkYXRlRnJvbU11bHRpcGxlIH0gPSB0aGlzLnByb3BzO1xuICAgICAgICBsZXQgc2VsZWN0ZWQgPSBlLnRhcmdldC5jaGVja2VkO1xuICAgICAgICBsZXQgc2NoZWR1bGVzID0gc2Vhc29uc1tzZWFzb25dLnNjaGVkdWxlcztcbiAgICAgICAgbGV0IGFjdGl2ZVJvdW5kID0gc2NoZWR1bGVzW3JvdW5kXTtcbiAgICAgICAgYWN0aXZlUm91bmQuc2VsZWN0ZWQgPSBzZWxlY3RlZDtcblxuICAgICAgICB1cGRhdGVGcm9tTXVsdGlwbGUoXCJzZWFzb25zXCIsIHNlYXNvbiwgXCJzY2hlZHVsZXNcIiwgc2NoZWR1bGVzKTtcblxuICAgICAgICBlLnN0b3BQcm9wYWdhdGlvbigpO1xuICAgICAgICB0aGlzLnNlbGVjdEFsbChzZWxlY3RlZCk7XG4gICAgfTtcblxuICAgIHRvZ2dsZU1hdGNoZXMgPSAoZSkgPT4ge1xuICAgICAgICBjb25zdCB7IHNlYXNvbnMsIHNlYXNvbiwgcm91bmQsIHVwZGF0ZUZyb21NdWx0aXBsZSB9ID0gdGhpcy5wcm9wcztcblxuICAgICAgICBsZXQgc2NoZWR1bGVzID0gc2Vhc29uc1tzZWFzb25dLnNjaGVkdWxlcztcbiAgICAgICAgbGV0IGFjdGl2ZVJvdW5kID0gc2NoZWR1bGVzW3JvdW5kXTtcbiAgICAgICAgYWN0aXZlUm91bmQuc2hvd01hdGNoZXMgPSAhYWN0aXZlUm91bmQuc2hvd01hdGNoZXM7XG4gICAgICAgIHVwZGF0ZUZyb21NdWx0aXBsZShcInNlYXNvbnNcIiwgc2Vhc29uLCBcInNjaGVkdWxlc1wiLCBzY2hlZHVsZXMpO1xuXG4gICAgICAgIGUuc3RvcFByb3BhZ2F0aW9uKCk7XG4gICAgfTtcblxuICAgIHNlbGVjdEFsbCA9IChzZWxlY3RlZCkgPT4ge1xuICAgICAgICBjb25zdCB7IHNlYXNvbnMsIHNlYXNvbiwgcm91bmQsIHVwZGF0ZUZyb21NdWx0aXBsZSB9ID0gdGhpcy5wcm9wcztcblxuICAgICAgICBsZXQgc2NoZWR1bGVzID0gc2Vhc29uc1tzZWFzb25dLnNjaGVkdWxlcztcbiAgICAgICAgbGV0IGFjdGl2ZVJvdW5kID0gc2NoZWR1bGVzW3JvdW5kXTtcbiAgICAgICAgYWN0aXZlUm91bmQubWF0Y2hlcy5mb3JFYWNoKG1hdGNoID0+IHsgbWF0Y2guc2VsZWN0ZWQgPSBzZWxlY3RlZCB9KTtcbiAgICAgICAgdXBkYXRlRnJvbU11bHRpcGxlKFwic2Vhc29uc1wiLCBzZWFzb24sIFwic2NoZWR1bGVzXCIsIHNjaGVkdWxlcyk7XG5cbiAgICB9O1xuXG4gICAgb25TZWxlY3QgPSAoaWQpID0+IHtcbiAgICAgICAgY29uc3QgeyBzZWFzb25zLCBzZWFzb24sIHJvdW5kICwgdXBkYXRlRnJvbU11bHRpcGxlfSA9IHRoaXMucHJvcHM7XG5cbiAgICAgICAgbGV0IHNjaGVkdWxlcyA9IHNlYXNvbnNbc2Vhc29uXS5zY2hlZHVsZXM7XG4gICAgICAgIGxldCBhY3RpdmVSb3VuZCA9IHNjaGVkdWxlc1tyb3VuZF07XG4gICAgICAgIGFjdGl2ZVJvdW5kLm1hdGNoZXMuZ2V0KGlkKS5zZWxlY3RlZCA9ICFhY3RpdmVSb3VuZC5tYXRjaGVzLmdldChpZCkuc2VsZWN0ZWQ7XG5cbiAgICAgICAgaWYgKGFjdGl2ZVJvdW5kLm1hdGNoZXMuZ2V0KGlkKS5zZWxlY3RlZCkgYWN0aXZlUm91bmQuc2VsZWN0ZWQgPSB0cnVlO1xuXG4gICAgICAgIHVwZGF0ZUZyb21NdWx0aXBsZShcInNlYXNvbnNcIiwgc2Vhc29uLCBcInNjaGVkdWxlc1wiLCBzY2hlZHVsZXMpO1xuICAgIH07XG5cbiAgICBnZXRTZWxlY3RlZCA9ICgpID0+IHtcbiAgICAgICAgY29uc3QgeyBzZWFzb25zLCBzZWFzb24sIHJvdW5kIH0gPSB0aGlzLnByb3BzO1xuXG4gICAgICAgIGxldCBzY2hlZHVsZSA9IHNlYXNvbnNbc2Vhc29uXS5zY2hlZHVsZXM7XG4gICAgICAgIGxldCBhY3RpdmVSb3VuZCA9IHNjaGVkdWxlW3JvdW5kXTtcbiAgICAgICAgcmV0dXJuIEFycmF5LmZyb20oIGFjdGl2ZVJvdW5kLm1hdGNoZXMudmFsdWVzKCkgKS5maWx0ZXIobSA9PihtLnNlbGVjdGVkKSkubGVuZ3RoXG4gICAgfTtcblxuICAgIHJlbmRlcigpe1xuXG4gICAgICAgIGNvbnN0IHsgc2Vhc29ucywgc2Vhc29uLCByb3VuZCB9ID0gdGhpcy5wcm9wcztcblxuICAgICAgICBsZXQgc2NoZWR1bGUgPSBzZWFzb25zW3NlYXNvbl0uc2NoZWR1bGVzO1xuICAgICAgICBsZXQgYWN0aXZlUm91bmQgPSBzY2hlZHVsZVtyb3VuZF07XG5cbiAgICAgICAgcmV0dXJuIChcbiAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPXtcIm1hdGNoZGF5XCJ9PlxuICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiY2EtY2hlY2tib3ggc2VsZWN0LWJveC1jaGVja2JveFwiPlxuICAgICAgICAgICAgICAgICAgICA8aW5wdXQgdHlwZT1cImNoZWNrYm94XCJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgIGNoZWNrZWQ9e2FjdGl2ZVJvdW5kLnNlbGVjdGVkfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgb25DaGFuZ2U9e3RoaXMudG9nZ2xlfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgaWQ9e1wicm91bmQtXCIgKyByb3VuZH0vPlxuICAgICAgICAgICAgICAgICAgICA8bGFiZWwgaHRtbEZvcj17XCJyb3VuZC1cIiArIHJvdW5kfS8+XG5cbiAgICAgICAgICAgICAgICAgICAgPGRpdiBzdHlsZT17e3dpZHRoOiAnMTAwJSd9fT5cbiAgICAgICAgICAgICAgICAgICAgICAgIHtpc05hTihyb3VuZCkgJiYgcm91bmR9XG4gICAgICAgICAgICAgICAgICAgICAgICB7IWlzTmFOKHJvdW5kKSAmJiBcIk1hdGNoZGF5IFwiICsgcm91bmR9XG5cbiAgICAgICAgICAgICAgICAgICAgICAgIHsodGhpcy5nZXRTZWxlY3RlZCgpID09PSAwKSAgJiYgKHRoaXMuZ2V0U2VsZWN0ZWQoKSE9PSBhY3RpdmVSb3VuZC5tYXRjaGVzLnNpemUpICYmIDxzcGFuIG9uQ2xpY2s9e3RoaXMudG9nZ2xlTWF0Y2hlc30+U2VsZWN0ID48L3NwYW4+fVxuICAgICAgICAgICAgICAgICAgICAgICAgeyh0aGlzLmdldFNlbGVjdGVkKCkgIT09IDApICAmJiAodGhpcy5nZXRTZWxlY3RlZCgpPT09IGFjdGl2ZVJvdW5kLm1hdGNoZXMuc2l6ZSkgJiYgPHNwYW4gb25DbGljaz17dGhpcy50b2dnbGVNYXRjaGVzfT5BbGwgPjwvc3Bhbj59XG4gICAgICAgICAgICAgICAgICAgICAgICB7KHRoaXMuZ2V0U2VsZWN0ZWQoKSAhPT0gMCkgJiYgKCB0aGlzLmdldFNlbGVjdGVkKCkgIT09IGFjdGl2ZVJvdW5kLm1hdGNoZXMuc2l6ZSkgJiYgPHNwYW4gb25DbGljaz17dGhpcy50b2dnbGVNYXRjaGVzfT57dGhpcy5nZXRTZWxlY3RlZCgpfSBTZWxlY3RlZCA+PC9zcGFuPn1cbiAgICAgICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgICAgPC9kaXY+XG5cblxuXG4gICAgICAgICAgICAgICAge2FjdGl2ZVJvdW5kLnNob3dNYXRjaGVzICYmIDxkaXYgY2xhc3NOYW1lPXtcIm1hdGNoLWdyb3VwXCJ9PlxuICAgICAgICAgICAgICAgICAgICB7YWN0aXZlUm91bmQubWF0Y2hlcy5zaXplID4gMCAmJiBBcnJheS5mcm9tICggYWN0aXZlUm91bmQubWF0Y2hlcy52YWx1ZXMoKSkubWFwKChpdGVtLCBpKSA9PiB7XG4gICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gPE1hdGNoIG1hdGNoPXtpdGVtfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBrZXk9e2l0ZW0uZXh0ZXJuYWxJZH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgb25TZWxlY3Q9e3RoaXMub25TZWxlY3R9Lz5cbiAgICAgICAgICAgICAgICAgICAgfSl9XG4gICAgICAgICAgICAgICAgPC9kaXY+fVxuICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgIClcbiAgICB9XG59XG5cbmNvbnN0IG1hcFN0YXRlVG9Qcm9wcyA9IHN0YXRlID0+IHtcbiAgICByZXR1cm4gc3RhdGUuY29udGVudFxufTtcblxuY29uc3QgbWFwRGlzcGF0Y2hUb1Byb3BzID0gZGlzcGF0Y2ggPT4ge1xuICAgIHJldHVybiB7XG4gICAgICAgIHVwZGF0ZUZyb21NdWx0aXBsZSA6ICh0eXBlLCBpbmRleCwga2V5LCB2YWx1ZSkgPT4gZGlzcGF0Y2goe1xuICAgICAgICAgICAgdHlwZTogJ1VQREFURV9GUk9NX01VTFRJUExFJyxcbiAgICAgICAgICAgIHNlbGVjdG9yVHlwZTogdHlwZSxcbiAgICAgICAgICAgIGluZGV4OiBpbmRleCxcbiAgICAgICAgICAgIGtleToga2V5LFxuICAgICAgICAgICAgdmFsdWU6IHZhbHVlXG4gICAgICAgIH0pLFxuICAgICAgICB1cGRhdGVDb250ZW50VmFsdWUgOiAoa2V5LCB2YWx1ZSkgPT4gZGlzcGF0Y2goe1xuICAgICAgICAgICAgdHlwZTogJ1VQREFURV9DT05URU5UX1ZBTFVFJyxcbiAgICAgICAgICAgIGtleToga2V5LFxuICAgICAgICAgICAgdmFsdWUgOiB2YWx1ZVxuICAgICAgICB9KSxcbiAgICB9XG59O1xuXG5leHBvcnQgZGVmYXVsdCBjb25uZWN0KFxuICAgIG1hcFN0YXRlVG9Qcm9wcyxcbiAgICBtYXBEaXNwYXRjaFRvUHJvcHNcbikoUm91bmQpO1xuXG5cbi8vIFdFQlBBQ0sgRk9PVEVSIC8vXG4vLyAuL3NyYy9BcHBCdW5kbGUvUmVzb3VyY2VzL3B1YmxpYy9qYXZhc2NyaXB0L3NlbGwvY29tcG9uZW50cy9Sb3VuZC5qcyIsImltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgTW9kYWwgZnJvbSAncmVhY3QtbW9kYWwnO1xuaW1wb3J0IHtjdXN0b21TdHlsZXN9IGZyb20gXCIuLi8uLi9tYWluL3N0eWxlcy9jdXN0b21cIjtcbmltcG9ydCBDb3VudHJ5U2VsZWN0b3IgZnJvbSBcIi4uLy4uL21haW4vY29tcG9uZW50cy9Db3VudHJ5U2VsZWN0b3JcIjtcbmltcG9ydCBEYXRlUGlja2VyIGZyb20gJ3JlYWN0LWRhdGVwaWNrZXInO1xuaW1wb3J0IHtQcm9wVHlwZXN9IGZyb20gXCJwcm9wLXR5cGVzXCI7XG5cbmNvbnN0IGxhYmVsU3R5bGUgPSB7IGhlaWdodDogXCIzMHB4XCIsIGZvbnRTaXplOiBcIjEycHhcIn07XG5jb25zdCBpbnN0YWxsbWVudEljb25TdHlsZSA9IHsgbWFyZ2luOiBcIjAgMTBweFwiLCBwb3NpdGlvbjogXCJyZWxhdGl2ZVwifTtcbmNvbnN0IHNtYWxsQ29udGFpbmVyU3R5bGUgPSB7XG4gICAgZGlzcGxheTogJ2lubGluZS1ibG9jaycsXG4gICAgb3ZlcmZsb3dZOiAnb3ZlcmxheScsXG4gICAgbWF4SGVpZ2h0OiAnMjAwcHgnXG59O1xuY29uc3QgY29udGFpbmVyU3R5bGUgPSB7XG4gICAgZGlzcGxheTogJ2lubGluZS1ibG9jaydcbn07XG5cbmNsYXNzIFNhbGVzUGFja2FnZUVkaXQgZXh0ZW5kcyBSZWFjdC5Db21wb25lbnQge1xuXG4gICAgY29uc3RydWN0b3IocHJvcHMpIHtcbiAgICAgICAgc3VwZXIocHJvcHMpO1xuICAgICAgICBsZXQgc2FsZXNQYWNrYWdlID0gcHJvcHMuc2FsZXNQYWNrYWdlc1twcm9wcy5zYWxlc1BhY2thZ2VJZF0gfHwge307XG5cbiAgICAgICAgdGhpcy5hc0J1bmRsZSA9IFwiU0VMTF9BU19CVU5ETEVcIjtcbiAgICAgICAgdGhpcy5pbmRpdmlkdWFsbHkgPSBcIlNFTExfSU5ESVZJRFVBTExZXCI7XG4gICAgICAgIHRoaXMud29ybGR3aWRlID0gXCJXT1JMRFdJREVcIjtcbiAgICAgICAgdGhpcy53b3JsZHdpZGVFeGNsdWRpbmcgPSBcIldPUkxEV0lERV9FWENMVURJTkdcIjtcbiAgICAgICAgdGhpcy5zZWxlY3RlZFRlcnJpdG9yaWVzID0gXCJTRUxFQ1RFRF9URVJSSVRPUklFU1wiO1xuICAgICAgICB0aGlzLmZpeGVkID0gXCJGSVhFRFwiO1xuICAgICAgICB0aGlzLmJpZGRpbmcgPSBcIkJJRERJTkdcIjtcbiAgICAgICAgdGhpcy5saW1pdCA9IDM7XG5cbiAgICAgICAgdGhpcy5zdGF0ZSA9IHtcbiAgICAgICAgICAgIGlzT3BlbiA6IHByb3BzLmlzT3BlbixcbiAgICAgICAgICAgIGJ1bmRsZU1ldGhvZCA6IHNhbGVzUGFja2FnZS5idW5kbGVNZXRob2QsXG4gICAgICAgICAgICB0ZXJyaXRvcmllc01ldGhvZCA6IHNhbGVzUGFja2FnZS50ZXJyaXRvcmllc01ldGhvZCxcbiAgICAgICAgICAgIHNhbGVzTWV0aG9kIDogc2FsZXNQYWNrYWdlLnNhbGVzTWV0aG9kLFxuICAgICAgICAgICAgdGVycml0b3JpZXMgOiAoc2FsZXNQYWNrYWdlLnRlcnJpdG9yaWVzTWV0aG9kID09PSBcIldPUkxEV0lERV9FWENMVURJTkdcIikgPyBzYWxlc1BhY2thZ2UuZXhjbHVkZWRUZXJyaXRvcmllcyA6IHNhbGVzUGFja2FnZS50ZXJyaXRvcmllcyxcbiAgICAgICAgICAgIGZpbHRlclRlcnJpdG9yaWVzIDogW10sXG4gICAgICAgICAgICBpbnN0YWxsbWVudHMgOiBzYWxlc1BhY2thZ2UuaW5zdGFsbG1lbnRzIHx8IFtdLFxuICAgICAgICAgICAgZmVlIDogc2FsZXNQYWNrYWdlLmZlZSxcbiAgICAgICAgICAgIHNhbGVzUGFja2FnZUlkOiBzYWxlc1BhY2thZ2UuaWQsXG4gICAgICAgICAgICBpc05ldyA6IHRydWVcbiAgICAgICAgfTtcbiAgICAgICAgdGhpcy5iaWRJY29uID0gYXNzZXRzQmFzZURpciArIFwiYXBwL2ltYWdlcy9hdWN0aW9uLnN2Z1wiO1xuICAgICAgICB0aGlzLmZpeGVkSWNvbiA9IGFzc2V0c0Jhc2VEaXIgKyBcImFwcC9pbWFnZXMvYmlkLnBuZ1wiO1xuXG4gICAgfVxuXG4gICAgdXBkYXRlID0gKHNlbGVjdGVkKSA9PiB7XG4gICAgICAgIHRoaXMuc2V0U3RhdGUoe3NlbGVjdGVkOiBzZWxlY3RlZH0pO1xuICAgIH07XG5cbiAgICBzZXRCdW5kbGVNZXRob2QgPSAoYnVuZGxlTWV0aG9kKSA9PiB7XG4gICAgICAgIHRoaXMuc2V0U3RhdGUoe2J1bmRsZU1ldGhvZH0pO1xuICAgICAgICB0aGlzLmZpbGxUZXJyaXRvcmllcyh0aGlzLnN0YXRlLnRlcnJpdG9yaWVzTWV0aG9kLCBidW5kbGVNZXRob2QpO1xuICAgIH07XG5cbiAgICBzZXRUZXJyaXRvcmllc01ldGhvZCA9ICh0ZXJyaXRvcmllc01ldGhvZCkgPT4ge1xuICAgICAgICB0aGlzLnNldFN0YXRlKHt0ZXJyaXRvcmllc01ldGhvZH0pO1xuICAgICAgICB0aGlzLmZpbGxUZXJyaXRvcmllcyh0ZXJyaXRvcmllc01ldGhvZCwgdGhpcy5zdGF0ZS5idW5kbGVNZXRob2QpO1xuICAgIH07XG5cbiAgICBmaWxsVGVycml0b3JpZXMgPSAodGVycml0b3JpZXNNZXRob2QsIGJ1bmRsZU1ldGhvZCkgPT4ge1xuICAgICAgICBpZiAoIHRlcnJpdG9yaWVzTWV0aG9kID09PSB0aGlzLndvcmxkd2lkZSAmJlxuICAgICAgICAgICAgYnVuZGxlTWV0aG9kID09PSB0aGlzLmluZGl2aWR1YWxseSApIHtcbiAgICAgICAgICAgIHRoaXMuc2V0U3RhdGUoeyB0ZXJyaXRvcmllcyA6IE9iamVjdC52YWx1ZXMoQ29udGVudEFyZW5hLkRhdGEuQ291bnRyaWVzKS5tYXAoKGksayk9Pih7dmFsdWUgOiBpLm5hbWUgLCBsYWJlbCA6IGkubmFtZSB9KSl9KVxuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgdGhpcy5zZXRTdGF0ZSh7IHRlcnJpdG9yaWVzIDogW119KVxuICAgICAgICB9XG4gICAgfTtcblxuICAgIGdldEZpbHRlclRlcnJpdG9yaWVzID0gKCkgPT4ge1xuXG4gICAgICAgIGNvbnN0IHsgZXhjbHVzaXZpdHksIHNhbGVzUGFja2FnZXMsIHNhbGVzUGFja2FnZUlkfSA9IHRoaXMucHJvcHM7XG4gICAgICAgIGxldCBmaWx0ZXIgPSBbXTtcblxuICAgICAgICBpZiAoICFleGNsdXNpdml0eSApIHJldHVybiBmaWx0ZXI7XG5cbiAgICAgICAgc2FsZXNQYWNrYWdlcy5mb3JFYWNoKChzYWxlc1BhY2thZ2UsIGlkKSA9PiB7XG4gICAgICAgICAgICBpZiAoc2FsZXNQYWNrYWdlSWQgIT09IGlkKSBmaWx0ZXIgPSBbLi4uZmlsdGVyLCAuLi5zYWxlc1BhY2thZ2UudGVycml0b3JpZXMubWFwKHQgPT4gdC52YWx1ZSldXG4gICAgICAgIH0pO1xuXG4gICAgICAgIHJldHVybiBmaWx0ZXJcbiAgICB9O1xuXG4gICAgZ2V0RXhjbHVkZWRUZXJyaXRvcmllcyA9ICgpID0+IHtcblxuICAgICAgICBjb25zdCB7dGVycml0b3JpZXN9ID0gdGhpcy5zdGF0ZTtcblxuICAgICAgICBsZXQgZmlsdGVyID0gdGhpcy5nZXRGaWx0ZXJUZXJyaXRvcmllcygpO1xuXG4gICAgICAgIGxldCBzZWxlY3RlZCA9IHRlcnJpdG9yaWVzLm1hcCh0ID0+IHQudmFsdWUpO1xuICAgICAgICBmaWx0ZXIgPSBbLi4uZmlsdGVyLCAuLi5zZWxlY3RlZF07XG5cblxuICAgICAgICByZXR1cm4gZmlsdGVyLmZpbHRlcihmdW5jdGlvbihpdGVtLCBwb3MsIHNlbGYpIHtcbiAgICAgICAgICAgIHJldHVybiBzZWxmLmluZGV4T2YoaXRlbSkgPT0gcG9zO1xuICAgICAgICB9KS5tYXAodD0+e3JldHVybiB7dmFsdWU6IHQsIGxhYmVsOiB0fX0pXG4gICAgfTtcblxuICAgIHByZXNlbGVjdGVkRXhjbHVkZWQgPSAoKSA9PiB7XG4gICAgICAgIGNvbnN0IHsgc2FsZXNQYWNrYWdlc30gPSB0aGlzLnByb3BzO1xuICAgICAgICByZXR1cm4gc2FsZXNQYWNrYWdlcy5maWx0ZXIoc2FsZXNQYWNrYWdlID0+IHNhbGVzUGFja2FnZS50ZXJyaXRvcmllc01ldGhvZCA9PT0gdGhpcy5zZWxlY3RlZFRlcnJpdG9yaWVzKS5sZW5ndGggPT09IDA7XG4gICAgfTtcblxuICAgIHNldFNhbGVzTWV0aG9kID0gKHNhbGVzTWV0aG9kKSA9PiB7XG4gICAgICAgIHRoaXMuc2V0U3RhdGUoe3NhbGVzTWV0aG9kfSk7XG4gICAgfTtcblxuICAgIGNsb3NlTW9kYWwgPSAoKSA9PiB7XG4gICAgICAgIGNvbnN0IHtvbkNsb3NlfSA9IHRoaXMucHJvcHM7XG4gICAgICAgIGlmICggb25DbG9zZSkgb25DbG9zZSgpO1xuICAgIH07XG5cbiAgICBnZXROYW1lID0gKCkgPT4ge1xuXG4gICAgICAgIGNvbnN0IHsgZXhjbHVzaXZpdHl9ID0gdGhpcy5wcm9wcztcbiAgICAgICAgY29uc3Qge3RlcnJpdG9yaWVzTWV0aG9kfSA9IHRoaXMuc3RhdGU7XG4gICAgICAgIGxldCBleGNsdWRlZFRlcnJpdG9yaWVzID0gKGV4Y2x1c2l2aXR5KSA/IHRoaXMuZ2V0RXhjbHVkZWRUZXJyaXRvcmllcygpIDogdGhpcy5zdGF0ZS50ZXJyaXRvcmllcztcbiAgICAgICAgbGV0IHRlcnJpdG9yaWVzID0gdGhpcy5zdGF0ZS50ZXJyaXRvcmllcztcblxuICAgICAgICBsZXQgbmFtZSA9IFwiXCI7XG5cbiAgICAgICAgaWYgKCB0ZXJyaXRvcmllc01ldGhvZCA9PT0gdGhpcy53b3JsZHdpZGUgKXtcbiAgICAgICAgICAgIG5hbWUgPSBcIldvcmxkd2lkZVwiO1xuICAgICAgICB9IGVsc2UgaWYgKCB0ZXJyaXRvcmllc01ldGhvZCA9PT0gdGhpcy5zZWxlY3RlZFRlcnJpdG9yaWVzICkge1xuICAgICAgICAgICAgbmFtZSA9IHRlcnJpdG9yaWVzLnNsaWNlKDAsIDMpLm1hcCggKCB0ZXJyaXRvcnksIGkgKT0+e1xuICAgICAgICAgICAgICAgIHJldHVybiB0ZXJyaXRvcnkubGFiZWxcbiAgICAgICAgICAgIH0pLmpvaW4oXCIsIFwiKTtcblxuICAgICAgICB9IGVsc2UgaWYgKCB0ZXJyaXRvcmllc01ldGhvZCA9PT0gdGhpcy53b3JsZHdpZGVFeGNsdWRpbmcgKSB7XG5cbiAgICAgICAgICAgIG5hbWUgPSBcIldvcmxkd2lkZSBleGNsdWRpbmcgXCIgKyBleGNsdWRlZFRlcnJpdG9yaWVzLnNsaWNlKDAsIDMpLm1hcCggKCB0ZXJyaXRvcnksIGkgKT0+e1xuICAgICAgICAgICAgICAgIHJldHVybiB0ZXJyaXRvcnkubGFiZWxcbiAgICAgICAgICAgIH0pLmpvaW4oXCIsIFwiKTtcbiAgICAgICAgfVxuXG4gICAgICAgIHJldHVybiBuYW1lO1xuXG4gICAgfTtcblxuICAgIGFwcGx5U2VsZWN0aW9uICA9ICgpID0+IHtcbiAgICAgICAgY29uc3QgeyAgZmVlLCBidW5kbGVNZXRob2QsIHRlcnJpdG9yaWVzTWV0aG9kLCBzYWxlc01ldGhvZCwgaW5zdGFsbG1lbnRzIH0gPSB0aGlzLnN0YXRlO1xuICAgICAgICBjb25zdCB7IHNhbGVzUGFja2FnZUlkICwgZXhjbHVzaXZpdHl9ID0gdGhpcy5wcm9wcztcbiAgICAgICAgbGV0IGV4Y2x1ZGVkVGVycml0b3JpZXMgPSAoZXhjbHVzaXZpdHkpID8gdGhpcy5nZXRFeGNsdWRlZFRlcnJpdG9yaWVzKCkgOiB0aGlzLnN0YXRlLnRlcnJpdG9yaWVzO1xuICAgICAgICBsZXQgdGVycml0b3JpZXMgPSB0aGlzLnN0YXRlLnRlcnJpdG9yaWVzO1xuICAgICAgICBsZXQgYWxsVGVycml0b3JpZXMgPSBPYmplY3QudmFsdWVzKENvbnRlbnRBcmVuYS5EYXRhLkNvdW50cmllcykubWFwKChpLGspPT4oe3ZhbHVlIDogaS5uYW1lICwgbGFiZWwgOiBpLm5hbWUgfSkpO1xuICAgICAgICBsZXQgdGVycml0b3JpZXNCeUxhYmVsID0gKGV4Y2x1c2l2aXR5KSA/IHRoaXMuZ2V0RXhjbHVkZWRUZXJyaXRvcmllcygpLm1hcCh0ID0+IHQubGFiZWwpIDogdGVycml0b3JpZXMubWFwKHQgPT4gdC5sYWJlbCk7XG4gICAgICAgIGlmICggdGVycml0b3JpZXNNZXRob2QgPT09IHRoaXMud29ybGR3aWRlRXhjbHVkaW5nICkgdGVycml0b3JpZXMgPSBhbGxUZXJyaXRvcmllcy5maWx0ZXIodCA9PiB0ZXJyaXRvcmllc0J5TGFiZWwuaW5kZXhPZih0LmxhYmVsKSA9PT0gLTEpO1xuICAgICAgICB0aGlzLnByb3BzLm9uVXBkYXRlKHtcbiAgICAgICAgICAgIG5hbWUgOiB0aGlzLmdldE5hbWUoKSxcbiAgICAgICAgICAgIHRlcnJpdG9yaWVzIDogdGVycml0b3JpZXMsXG4gICAgICAgICAgICBleGNsdWRlZFRlcnJpdG9yaWVzIDogKHRlcnJpdG9yaWVzTWV0aG9kID09PSB0aGlzLndvcmxkd2lkZUV4Y2x1ZGluZykgPyBleGNsdWRlZFRlcnJpdG9yaWVzIDogW10sXG4gICAgICAgICAgICBmZWUgOiBmZWUsXG4gICAgICAgICAgICBzYWxlc01ldGhvZCA6IHNhbGVzTWV0aG9kLFxuICAgICAgICAgICAgdGVycml0b3JpZXNNZXRob2QgOiB0ZXJyaXRvcmllc01ldGhvZCxcbiAgICAgICAgICAgIGJ1bmRsZU1ldGhvZCA6IGJ1bmRsZU1ldGhvZCxcbiAgICAgICAgICAgIGluc3RhbGxtZW50cyA6IGluc3RhbGxtZW50cyxcbiAgICAgICAgICAgIGlkOiB0aGlzLnN0YXRlLnNhbGVzUGFja2FnZUlkLFxuICAgICAgICAgICAgZWRpdGVkIDogdHJ1ZVxuICAgICAgICB9LCBzYWxlc1BhY2thZ2VJZCk7XG4gICAgICAgIHRoaXMuY2xvc2VNb2RhbCgpO1xuICAgIH07XG5cbiAgICBzZWxlY3RUZXJyaXRvcmllcyA9ICh0ZXJyaXRvcmllcykgPT4ge1xuICAgICAgICB0aGlzLnNldFN0YXRlKHsgdGVycml0b3JpZXMgfSk7XG4gICAgfTtcblxuICAgIHNldEluc3RhbGxtZW50VHlwZSA9ICggdHlwZSwgaSApID0+IHtcbiAgICAgICAgbGV0IGluc3RhbGxtZW50cyA9IHRoaXMuc3RhdGUuaW5zdGFsbG1lbnRzO1xuICAgICAgICBpbnN0YWxsbWVudHNbaV0udHlwZSA9IHR5cGU7XG4gICAgICAgIHRoaXMuc2V0U3RhdGUoe2luc3RhbGxtZW50c30pO1xuICAgIH07XG5cbiAgICBzZXRJbnN0YWxsbWVudERhdGUgPSAoIGRhdGUsIGkgKSA9PiB7XG4gICAgICAgIGxldCBpbnN0YWxsbWVudHMgPSB0aGlzLnN0YXRlLmluc3RhbGxtZW50cztcbiAgICAgICAgaW5zdGFsbG1lbnRzW2ldLmRhdGUgPSBkYXRlO1xuICAgICAgICB0aGlzLnNldFN0YXRlKHtpbnN0YWxsbWVudHN9KTtcbiAgICB9O1xuXG4gICAgc2V0SW5zdGFsbG1lbnREYXlzID0gKCBkYXlzLCBpICkgPT4ge1xuICAgICAgICBsZXQgaW5zdGFsbG1lbnRzID0gdGhpcy5zdGF0ZS5pbnN0YWxsbWVudHM7XG4gICAgICAgIGluc3RhbGxtZW50c1tpXS5kYXlzID0gZGF5cztcbiAgICAgICAgdGhpcy5zZXRTdGF0ZSh7aW5zdGFsbG1lbnRzfSk7XG4gICAgfTtcblxuICAgIHNldEluc3RhbGxtZW50VmFsdWUgPSAoIHZhbHVlLCBpICkgPT4ge1xuICAgICAgICBsZXQgaW5zdGFsbG1lbnRzID0gdGhpcy5zdGF0ZS5pbnN0YWxsbWVudHM7XG4gICAgICAgIGluc3RhbGxtZW50c1tpXS52YWx1ZSA9IHZhbHVlO1xuICAgICAgICB0aGlzLnNldFN0YXRlKHtpbnN0YWxsbWVudHN9KTtcbiAgICB9O1xuXG4gICAgYWRkSW5zdGFsbG1lbnQgPSAoICkgPT4ge1xuICAgICAgICBsZXQgaW5zdGFsbG1lbnRzID0gdGhpcy5zdGF0ZS5pbnN0YWxsbWVudHM7XG4gICAgICAgIGluc3RhbGxtZW50cy5wdXNoKHsgdmFsdWUgOiAxMDAsICB0eXBlIDogXCJEQVlcIiwgZGF5czogMzB9KTtcbiAgICAgICAgdGhpcy5zZXRTdGF0ZSh7aW5zdGFsbG1lbnRzfSk7XG4gICAgfTtcblxuICAgIHJlbW92ZUluc3RhbGxtZW50ID0gKCBpICkgPT4ge1xuICAgICAgICBsZXQgaW5zdGFsbG1lbnRzID0gdGhpcy5zdGF0ZS5pbnN0YWxsbWVudHM7XG4gICAgICAgIGluc3RhbGxtZW50cy5zcGxpY2UoaSwgMSk7XG4gICAgICAgIHRoaXMuc2V0U3RhdGUoe2luc3RhbGxtZW50c30pO1xuICAgIH07XG5cbiAgICB1cGRhdGVGZWUgPSAoZSkgPT4ge1xuICAgICAgICBsZXQgZmVlID0gZS50YXJnZXQudmFsdWU7XG4gICAgICAgIHRoaXMuc2V0U3RhdGUoe2ZlZX0pXG4gICAgfTtcblxuICAgIHJlbmRlciA9ICgpID0+IHtcblxuICAgICAgICBjb25zdCB7c2FsZXNQYWNrYWdlcywgc2FsZXNQYWNrYWdlSWR9ID0gdGhpcy5wcm9wcztcbiAgICAgICAgbGV0IHNhbGVzUGFja2FnZSA9IHNhbGVzUGFja2FnZXNbc2FsZXNQYWNrYWdlSWRdIHx8IHt9O1xuXG4gICAgICAgIHJldHVybiA8TW9kYWxcbiAgICAgICAgICAgIGlzT3Blbj17dGhpcy5zdGF0ZS5pc09wZW59XG4gICAgICAgICAgICBvblJlcXVlc3RDbG9zZT17dGhpcy5jbG9zZU1vZGFsfVxuICAgICAgICAgICAgYm9keU9wZW5DbGFzc05hbWU9e1wic2VsZWN0b3JcIn1cbiAgICAgICAgICAgIHN0eWxlPXtjdXN0b21TdHlsZXN9XG4gICAgICAgICAgICBjb250ZW50TGFiZWw9XCJFeGFtcGxlIE1vZGFsXCJcbiAgICAgICAgPlxuXG4gICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cIm1vZGFsLXRpdGxlXCI+XG4gICAgICAgICAgICAgICAge3RoaXMuY29udGV4dC50KFwiU2FsZXMgYnVuZGxlXCIpfVxuICAgICAgICAgICAgICAgIDxpIGNsYXNzTmFtZT1cImZhIGZhLXRpbWVzLWNpcmNsZS1vIGNsb3NlLWljb25cIiBvbkNsaWNrPXt0aGlzLmNsb3NlTW9kYWx9Lz5cbiAgICAgICAgICAgIDwvZGl2PlxuXG4gICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cInN0ZXAtY29udGVudFwiPlxuICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwic3RlcC1jb250ZW50LWNvbnRhaW5lclwiPlxuICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImJhc2UtZnVsbC1pbnB1dFwiPlxuICAgICAgICAgICAgICAgICAgICAgICAgPGxhYmVsIHN0eWxlPXtsYWJlbFN0eWxlfT5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB7dGhpcy5jb250ZXh0LnQoXCJDTF9TVEVQNF9FRElUX0JVTkRMRV9USVRMRV9URVJSSVRPUklFU1wiKX1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB7dGhpcy5zdGF0ZS50ZXJyaXRvcmllc01ldGhvZCA9PT0gdGhpcy53b3JsZHdpZGVFeGNsdWRpbmcgJiYgXCI6IFdvcmxkd2lkZSBleGNsdWRpbmdcIn1cbiAgICAgICAgICAgICAgICAgICAgICAgIDwvbGFiZWw+XG4gICAgICAgICAgICAgICAgICAgIDwvZGl2PlxuXG4gICAgICAgICAgICAgICAgICAgIHsgKHRoaXMuc3RhdGUuYnVuZGxlTWV0aG9kID09PSB0aGlzLmFzQnVuZGxlICkgJiYgKCB0aGlzLnN0YXRlLnRlcnJpdG9yaWVzTWV0aG9kID09PSB0aGlzLnNlbGVjdGVkVGVycml0b3JpZXMgKVxuICAgICAgICAgICAgICAgICAgICAmJiA8Q291bnRyeVNlbGVjdG9yXG4gICAgICAgICAgICAgICAgICAgICAgICBjbGFzc05hbWU9e1wic21hbGwtc2VsZWN0XCJ9XG4gICAgICAgICAgICAgICAgICAgICAgICB2YWx1ZT17dGhpcy5zdGF0ZS50ZXJyaXRvcmllc31cbiAgICAgICAgICAgICAgICAgICAgICAgIG9uQ2hhbmdlPXt0aGlzLnNlbGVjdFRlcnJpdG9yaWVzfVxuICAgICAgICAgICAgICAgICAgICAgICAgZmlsdGVyPXt0aGlzLmdldEZpbHRlclRlcnJpdG9yaWVzKCl9IC8+fVxuXG4gICAgICAgICAgICAgICAgICAgIHsgKHRoaXMuc3RhdGUuYnVuZGxlTWV0aG9kID09PSB0aGlzLmFzQnVuZGxlICkgJiYgKCB0aGlzLnN0YXRlLnRlcnJpdG9yaWVzTWV0aG9kID09PSB0aGlzLndvcmxkd2lkZUV4Y2x1ZGluZyApXG4gICAgICAgICAgICAgICAgICAgICYmXG4gICAgICAgICAgICAgICAgICAgIDxDb3VudHJ5U2VsZWN0b3JcbiAgICAgICAgICAgICAgICAgICAgICAgIGNsYXNzTmFtZT17XCJzbWFsbC1zZWxlY3RcIn1cbiAgICAgICAgICAgICAgICAgICAgICAgIHZhbHVlPXt0aGlzLmdldEV4Y2x1ZGVkVGVycml0b3JpZXMoKX1cbiAgICAgICAgICAgICAgICAgICAgICAgIG9uQ2hhbmdlPXt0aGlzLnNlbGVjdFRlcnJpdG9yaWVzfSAvPlxuICAgICAgICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgICAgICAgeyAodGhpcy5zdGF0ZS5idW5kbGVNZXRob2QgPT09IHRoaXMuaW5kaXZpZHVhbGx5IClcbiAgICAgICAgICAgICAgICAgICAgJiYgPGRpdiBzdHlsZT17eyBwYWRkaW5nOiAnMTBweCA1cHggMjBweCd9fT5cbiAgICAgICAgICAgICAgICAgICAgICAgIHsgc2FsZXNQYWNrYWdlLm5hbWV9XG4gICAgICAgICAgICAgICAgICAgIDwvZGl2PiB9XG5cbiAgICAgICAgICAgICAgICAgICAgeyAodGhpcy5zdGF0ZS5idW5kbGVNZXRob2QgPT09IHRoaXMuYXNCdW5kbGUgKVxuICAgICAgICAgICAgICAgICAgICAmJiAoIHRoaXMuc3RhdGUudGVycml0b3JpZXNNZXRob2QgPT09IHRoaXMud29ybGR3aWRlIClcbiAgICAgICAgICAgICAgICAgICAgJiYgPGRpdiBzdHlsZT17eyBwYWRkaW5nOiAnMTBweCA1cHggMjBweCd9fT5cbiAgICAgICAgICAgICAgICAgICAgICAgIHt0aGlzLmNvbnRleHQudChcIldvcmxkd2lkZVwiKX1cbiAgICAgICAgICAgICAgICAgICAgPC9kaXY+IH1cblxuICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImJhc2UtZnVsbC1pbnB1dFwiPlxuICAgICAgICAgICAgICAgICAgICAgICAgPGxhYmVsIHN0eWxlPXtsYWJlbFN0eWxlfT5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB7dGhpcy5jb250ZXh0LnQoXCJTYWxlcyBtZXRob2RcIil9XG4gICAgICAgICAgICAgICAgICAgICAgICA8L2xhYmVsPlxuICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9e1wiY29udGVudFwifT5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT17XCJpdGVtXCJ9IG9uQ2xpY2s9eygpID0+IHsgdGhpcy5zZXRTYWxlc01ldGhvZCh0aGlzLmZpeGVkKSB9IH0+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHt0aGlzLnN0YXRlLnNhbGVzTWV0aG9kICE9PSB0aGlzLmZpeGVkICYmIDxpIGNsYXNzTmFtZT1cImZhIGZhLWNpcmNsZS10aGluXCIvPn1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAge3RoaXMuc3RhdGUuc2FsZXNNZXRob2QgPT09IHRoaXMuZml4ZWQgJiYgPGkgY2xhc3NOYW1lPVwiZmEgZmEtY2hlY2stY2lyY2xlLW9cIi8+fVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT17XCJ0aXRsZVwifT5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHt0aGlzLmNvbnRleHQudChcIkZpeGVkIGZlZVwiKX1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9e1wiaXRlbVwifSBvbkNsaWNrPXsoKSA9PiB7IHRoaXMuc2V0U2FsZXNNZXRob2QodGhpcy5iaWRkaW5nKSB9IH0+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHt0aGlzLnN0YXRlLnNhbGVzTWV0aG9kICE9PSB0aGlzLmJpZGRpbmcgJiYgPGkgY2xhc3NOYW1lPVwiZmEgZmEtY2lyY2xlLXRoaW5cIi8+fVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB7dGhpcy5zdGF0ZS5zYWxlc01ldGhvZCA9PT0gdGhpcy5iaWRkaW5nICYmIDxpIGNsYXNzTmFtZT1cImZhIGZhLWNoZWNrLWNpcmNsZS1vXCIvPn1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9e1widGl0bGVcIn0+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB7dGhpcy5jb250ZXh0LnQoXCJCaWRkaW5nXCIpfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT17XCJpdGVtXCJ9IHN0eWxlPXt7IHBhZGRpbmdMZWZ0OiAwLCBwYWRkaW5nUmlnaHQ6IDAgfX0+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAge3RoaXMuc3RhdGUuc2FsZXNNZXRob2QgPT09IHRoaXMuZml4ZWQgJiYgXCJGaXhlZCBmZWVcIn1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHt0aGlzLnN0YXRlLnNhbGVzTWV0aG9kICE9PSB0aGlzLmZpeGVkICYmIFwiTWluaW11bSBiaWQgKG9wdGlvbmFsKVwifVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3NwYW4+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpbnB1dFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdHlwZT1cIm51bWJlclwiXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBtaW49ezB9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBvbkNoYW5nZT17dGhpcy51cGRhdGVGZWV9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YWx1ZT17dGhpcy5zdGF0ZS5mZWV9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzdHlsZT17eyBoZWlnaHQ6IFwiMjZweFwiLCB3aWR0aDogXCI4MHB4XCIgfX0vPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBzdHlsZT17e3dpZHRoOiAnYXV0bycsIHBhZGRpbmc6ICcwIDEwcHgnfX0+eyB0aGlzLmdldEN1cnJlbmN5U3ltYm9sKCkgfTwvc3Bhbj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cblxuICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImJhc2UtZnVsbC1pbnB1dFwiPlxuICAgICAgICAgICAgICAgICAgICAgICAgPGxhYmVsIHN0eWxlPXtsYWJlbFN0eWxlfT5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB7dGhpcy5jb250ZXh0LnQoXCJDTF9TVEVQNF9FRElUX0JVTkRMRV9USVRMRV9QQVlNRU5UXCIpfVxuICAgICAgICAgICAgICAgICAgICAgICAgPC9sYWJlbD5cblxuICAgICAgICAgICAgICAgICAgICAgICAgeyB0aGlzLnN0YXRlLmluc3RhbGxtZW50cy5tYXAoIChpbnN0YWxsbWVudCwgaSwgbGlzdCkgPT4ge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiA8ZGl2IGNsYXNzTmFtZT17XCJjb250ZW50XCJ9PlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT17XCJpdGVtXCJ9IHN0eWxlPXt7IHBhZGRpbmdMZWZ0OiAwIH19PlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9e1widGl0bGVcIn0gPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHtpKzF9IEluc3RhbG1lbnQgPGlucHV0IG9uQ2hhbmdlPXsoZSkgPT4ge3RoaXMuc2V0SW5zdGFsbG1lbnRWYWx1ZShlLnRhcmdldC52YWx1ZSxpKX19IHN0eWxlPXt7IGhlaWdodDogXCIyNnB4XCIsIHdpZHRoOiBcIjUwcHhcIiB9fSB0eXBlPVwibnVtYmVyXCIgbWF4PXsxMDB9IHZhbHVlPXtpbnN0YWxsbWVudC52YWx1ZX0vPiAlIG9mIHBheW1lbnRcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAge2luc3RhbGxtZW50LnR5cGUgIT09IFwiREFURVwiICYmIDxpIHN0eWxlPXtpbnN0YWxsbWVudEljb25TdHlsZX0gY2xhc3NOYW1lPVwiZmEgZmEtY2lyY2xlLXRoaW5cIiBvbkNsaWNrPXsoKSA9PiB7IHRoaXMuc2V0SW5zdGFsbG1lbnRUeXBlKFwiREFURVwiLGkpfX0gIC8+fVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgeyBpbnN0YWxsbWVudC50eXBlID09PSBcIkRBVEVcIiAmJiA8aSBzdHlsZT17aW5zdGFsbG1lbnRJY29uU3R5bGV9IGNsYXNzTmFtZT1cImZhIGZhLWNoZWNrLWNpcmNsZS1vXCIgLz59XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT17XCJ0aXRsZVwifT5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8RGF0ZVBpY2tlclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBkaXNhYmxlZD17aW5zdGFsbG1lbnQudHlwZSAhPT0gXCJEQVRFXCJ9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNlbGVjdGVkPXtpbnN0YWxsbWVudC5kYXRlfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBwbGFjZWhvbGRlclRleHQ9e1wiZGQvbW0veXl5eVwifVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBvbkNoYW5nZT17KGRhdGUpID0+IHt0aGlzLnNldEluc3RhbGxtZW50RGF0ZShkYXRlLGkpfX1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY2xhc3NOYW1lPVwic21hbGwtZGF0ZXBpY2tlclwiLz5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgeyBpbnN0YWxsbWVudC50eXBlICE9PSBcIkRBWVwiICYmIDxpIHN0eWxlPXtpbnN0YWxsbWVudEljb25TdHlsZX0gY2xhc3NOYW1lPVwiZmEgZmEtY2lyY2xlLXRoaW5cIiBvbkNsaWNrPXsoKSA9PiB7IHRoaXMuc2V0SW5zdGFsbG1lbnRUeXBlKFwiREFZXCIsaSl9IH0vPn1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHsgaW5zdGFsbG1lbnQudHlwZSA9PT0gXCJEQVlcIiAmJiA8aSBzdHlsZT17aW5zdGFsbG1lbnRJY29uU3R5bGV9IGNsYXNzTmFtZT1cImZhIGZhLWNoZWNrLWNpcmNsZS1vXCIgLz59XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT17XCJ0aXRsZVwifSA+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aW5wdXRcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0eXBlPVwibnVtYmVyXCJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBtaW49ezB9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgb25DaGFuZ2U9eyhlKSA9PiB7dGhpcy5zZXRJbnN0YWxsbWVudERheXMoZS50YXJnZXQudmFsdWUsaSl9fVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRpc2FibGVkPXtpbnN0YWxsbWVudC50eXBlICE9PSBcIkRBWVwifVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhbHVlPXtpbnN0YWxsbWVudC5kYXlzfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHN0eWxlPXt7IGhlaWdodDogXCIyNnB4XCIsIHdpZHRoOiBcIjQwcHhcIiB9fS8+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAge3RoaXMuY29udGV4dC50KFwiQ0xfU1RFUDRfRURJVF9CVU5ETEVfSU5TVEFMTE1FTlRfREFZU1wiKX1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgeyBpICE9PSAwICYmIDxpIHN0eWxlPXt7bWFyZ2luOiAwLCBwb3NpdGlvbjogXCJyZWxhdGl2ZVwifX0gY2xhc3NOYW1lPVwiZmEgZmEtbWludXMtY2lyY2xlXCIgb25DbGljaz17KCkgPT4geyB0aGlzLnJlbW92ZUluc3RhbGxtZW50KGkpIH19Lz59XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB7IGkgPT09IGxpc3QubGVuZ3RoIC0gMSAmJiA8aSBzdHlsZT17e21hcmdpbjogMCwgcG9zaXRpb246IFwicmVsYXRpdmVcIn19IGNsYXNzTmFtZT1cImZhIGZhLXBsdXMtY2lyY2xlXCIgb25DbGljaz17dGhpcy5hZGRJbnN0YWxsbWVudH0vPn1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgICAgICAgICAgICB9KSB9XG5cblxuICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cblxuICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgPC9kaXY+XG5cbiAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiZXJyb3JcIiBzdHlsZT17e1xuICAgICAgICAgICAgICAgIHdpZHRoOiAnMTAwJScsXG4gICAgICAgICAgICAgICAgdGV4dEFsaWduOiAnY2VudGVyJyxcbiAgICAgICAgICAgICAgICBmb250U2l6ZTogJzEycHgnLFxuICAgICAgICAgICAgICAgIGNvbG9yOiAncmVkJ1xuICAgICAgICAgICAgfX0+XG4gICAgICAgICAgICAgICAgeyB0aGlzLmluc3RhbGxtZW50c0luY29tcGxldGUoKSAmJiB0aGlzLmNvbnRleHQudChcIkNMX1NURVA0X0VESVRfQlVORExFX0lOU1RBTExNRU5UX1dBUk5JTkdcIil9XG4gICAgICAgICAgICA8L2Rpdj5cblxuICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9e1wiYnV0dG9uc1wifT5cbiAgICAgICAgICAgICAgICA8YnV0dG9uXG4gICAgICAgICAgICAgICAgICAgIGNsYXNzTmFtZT1cInN0YW5kYXJkLWJ1dHRvblwiXG4gICAgICAgICAgICAgICAgICAgIGRpc2FibGVkPXtcbiAgICAgICAgICAgICAgICAgICAgICAgICggdGhpcy5zdGF0ZS5zYWxlc01ldGhvZCA9PT0gdGhpcy5maXhlZCAmJiBOdW1iZXIoIHRoaXMuc3RhdGUuZmVlICkgPT09IDAgKSB8fFxuICAgICAgICAgICAgICAgICAgICAgICAgKCB0aGlzLnN0YXRlLnRlcnJpdG9yaWVzTWV0aG9kICE9PSB0aGlzLndvcmxkd2lkZSAmJiB0aGlzLnN0YXRlLnRlcnJpdG9yaWVzLmxlbmd0aCA9PT0gMCApIHx8XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5pbnN0YWxsbWVudHNJbmNvbXBsZXRlKClcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICBvbkNsaWNrPXt0aGlzLmFwcGx5U2VsZWN0aW9ufT5PazwvYnV0dG9uPlxuICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgIDwvTW9kYWw+XG4gICAgfTtcblxuICAgIGluc3RhbGxtZW50c0luY29tcGxldGUgPSAoKSA9PiB7XG4gICAgICAgIGNvbnN0IHsgaW5zdGFsbG1lbnRzIH0gPSB0aGlzLnN0YXRlO1xuICAgICAgICBsZXQgdG90YWwgPSAwO1xuXG4gICAgICAgIGluc3RhbGxtZW50cy5mb3JFYWNoKGk9PntcbiAgICAgICAgICAgIHRvdGFsICs9IE51bWJlcihpLnZhbHVlKTtcbiAgICAgICAgfSk7XG5cbiAgICAgICAgcmV0dXJuIHRvdGFsICE9PSAxMDA7XG5cbiAgICB9O1xuXG4gICAgZ2V0RmVlID0gKHNhbGVzUGFja2FnZSkgPT4ge1xuICAgICAgICByZXR1cm4gc2FsZXNQYWNrYWdlLmZlZSArIFwiIFwiICsgdGhpcy5nZXRDdXJyZW5jeVN5bWJvbCgpO1xuICAgIH07XG5cbiAgICBnZXRDdXJyZW5jeVN5bWJvbCA9ICgpID0+IHtcbiAgICAgICAgY29uc3Qge2N1cnJlbmN5fSA9IHRoaXMucHJvcHM7XG4gICAgICAgIHJldHVybiAoY3VycmVuY3kgPT09IFwiRVVSXCIgPyBcIuKCrFwiIDogXCIkXCIpO1xuICAgIH07XG5cbn1cblxuU2FsZXNQYWNrYWdlRWRpdC5jb250ZXh0VHlwZXMgPSB7XG4gICAgdDogUHJvcFR5cGVzLmZ1bmMuaXNSZXF1aXJlZFxufTtcblxuZXhwb3J0IGRlZmF1bHQgU2FsZXNQYWNrYWdlRWRpdDtcblxuXG4vLyBXRUJQQUNLIEZPT1RFUiAvL1xuLy8gLi9zcmMvQXBwQnVuZGxlL1Jlc291cmNlcy9wdWJsaWMvamF2YXNjcmlwdC9zZWxsL2NvbXBvbmVudHMvU2FsZXNQYWNrYWdlRWRpdC5qcyIsImltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgTW9kYWwgZnJvbSAncmVhY3QtbW9kYWwnO1xuaW1wb3J0IHtjdXN0b21TdHlsZXN9IGZyb20gXCIuLi8uLi9tYWluL3N0eWxlcy9jdXN0b21cIjtcbmltcG9ydCBDb3VudHJ5U2VsZWN0b3IgZnJvbSBcIi4uLy4uL21haW4vY29tcG9uZW50cy9Db3VudHJ5U2VsZWN0b3JcIjtcbmltcG9ydCBDdXJyZW5jeVNlbGVjdG9yIGZyb20gXCIuLi9jb21wb25lbnRzL0N1cnJlbmN5U2VsZWN0b3JcIjtcbmltcG9ydCBEYXRlUGlja2VyIGZyb20gJ3JlYWN0LWRhdGVwaWNrZXInO1xuaW1wb3J0IFRvb2x0aXAgZnJvbSAnLi4vLi4vbWFpbi9jb21wb25lbnRzL1Rvb2x0aXAnO1xuaW1wb3J0IExpY2Vuc2VEb3dubG9hZGVyIGZyb20gJy4uLy4uL21haW4vY29tcG9uZW50cy9MaWNlbnNlRG93bmxvYWRlcidcbmltcG9ydCB7UHJvcFR5cGVzfSBmcm9tIFwicHJvcC10eXBlc1wiO1xuaW1wb3J0IFJlZ2lvbkNvdW50cnlTZWxlY3RvciBmcm9tIFwiLi4vLi4vbWFpbi9jb21wb25lbnRzL1JlZ2lvbkNvdW50cnlTZWxlY3RvclwiO1xuXG5jb25zdCBsYWJlbFN0eWxlID0geyBoZWlnaHQ6IFwiMzBweFwiLCBmb250U2l6ZTogXCIxMnB4XCJ9O1xuY29uc3QgaW5zdGFsbG1lbnRJY29uU3R5bGUgPSB7IG1hcmdpbjogXCIwIDEwcHhcIiwgcG9zaXRpb246IFwicmVsYXRpdmVcIn07XG5jb25zdCBzbWFsbENvbnRhaW5lclN0eWxlID0ge1xuICAgIGRpc3BsYXk6ICdpbmxpbmUtYmxvY2snLFxuICAgIG92ZXJmbG93WTogJ292ZXJsYXknLFxuICAgIG1heEhlaWdodDogJzIwMHB4JyxcbiAgICBwYWRkaW5nUmlnaHQ6IDIwXG59O1xuY29uc3QgY29udGFpbmVyU3R5bGUgPSB7XG4gICAgZGlzcGxheTogJ2lubGluZS1ibG9jaycsXG4gICAgcGFkZGluZ1RvcDogNVxufTtcblxuY2xhc3MgU2FsZXNQYWNrYWdlRm9ybSBleHRlbmRzIFJlYWN0LkNvbXBvbmVudCB7XG4gICAgY29uc3RydWN0b3IocHJvcHMpIHtcbiAgICAgICAgc3VwZXIocHJvcHMpO1xuXG4gICAgICAgIHRoaXMuYXNCdW5kbGUgPSBcIlNFTExfQVNfQlVORExFXCI7XG4gICAgICAgIHRoaXMuaW5kaXZpZHVhbGx5ID0gXCJTRUxMX0lORElWSURVQUxMWVwiO1xuICAgICAgICB0aGlzLndvcmxkd2lkZSA9IFwiV09STERXSURFXCI7XG4gICAgICAgIHRoaXMud29ybGR3aWRlRXhjbHVkaW5nID0gXCJXT1JMRFdJREVfRVhDTFVESU5HXCI7XG4gICAgICAgIHRoaXMuc2VsZWN0ZWRUZXJyaXRvcmllcyA9IFwiU0VMRUNURURfVEVSUklUT1JJRVNcIjtcbiAgICAgICAgdGhpcy5maXhlZCA9IFwiRklYRURcIjtcbiAgICAgICAgdGhpcy5iaWRkaW5nID0gXCJCSURESU5HXCI7XG4gICAgICAgIHRoaXMubGltaXQgPSAzO1xuICAgICAgICB0aGlzLnN0YXRlID0ge1xuICAgICAgICAgICAgaXNPcGVuIDogcHJvcHMuaXNPcGVuLFxuICAgICAgICAgICAgYnVuZGxlTWV0aG9kIDogdGhpcy5hc0J1bmRsZSxcbiAgICAgICAgICAgIHRlcnJpdG9yaWVzTWV0aG9kIDogdGhpcy5zZWxlY3RlZFRlcnJpdG9yaWVzLFxuICAgICAgICAgICAgc2FsZXNNZXRob2QgOiB0aGlzLmZpeGVkLFxuICAgICAgICAgICAgdGVycml0b3JpZXMgOiBbXSxcbiAgICAgICAgICAgIGV4Y2x1ZGVkVGVycml0b3JpZXMgOiBbXSxcbiAgICAgICAgICAgIGZpbHRlclRlcnJpdG9yaWVzIDogW10sXG4gICAgICAgICAgICB0ZXJyaXRvcmllc0xpc3Q6IFtdLFxuICAgICAgICAgICAgaW5zdGFsbG1lbnRzIDogW3sgdmFsdWUgOiAxMDAsICB0eXBlIDogXCJEQVlcIiwgZGF5czogMzB9XSxcbiAgICAgICAgICAgIGZlZSA6IDAsXG4gICAgICAgICAgICBpc05ldyA6IHRydWUsXG4gICAgICAgICAgICB0ZXJyaXRvcmllc1F1YW50aXR5OiAnc2luZ2xlJyxcbiAgICAgICAgICAgIGNvdW50cmllczogQ29udGVudEFyZW5hLkRhdGEuQ291bnRyaWVzXG4gICAgICAgIH07XG4gICAgICAgIHRoaXMuYmlkSWNvbiA9IGFzc2V0c0Jhc2VEaXIgKyBcImFwcC9pbWFnZXMvaGFtbWVyLnBuZ1wiO1xuICAgICAgICB0aGlzLmZpeGVkSWNvbiA9IGFzc2V0c0Jhc2VEaXIgKyBcImFwcC9pbWFnZXMvYmlkLnBuZ1wiO1xuICAgICAgICB0aGlzLmRyYWZ0SWNvbiA9IGFzc2V0c0Jhc2VEaXIgKyBcImFwcC9pbWFnZXMvZHJhZnQucG5nXCI7XG4gICAgICAgIHRoaXMuY2FuY2VsSWNvbiA9IGFzc2V0c0Jhc2VEaXIgKyBcImFwcC9pbWFnZXMvY2FuY2VsLnBuZ1wiO1xuICAgIH1cblxuICAgIGNvbXBvbmVudERpZE1vdW50KCkge1xuICAgICAgICBDb250ZW50QXJlbmEuQXBpLmdldENvdW50cmllcygpLmRvbmUoIChjb3VudHJpZXMgKSA9PiB7XG4gICAgICAgICAgICB0aGlzLnNldFN0YXRlKHtjb3VudHJpZXN9KVxuICAgICAgICB9KTtcbiAgICB9XG5cbiAgICBlZGl0U2FsZXNQYWNrYWdlID0gKCBzYWxlc1BhY2thZ2UsIGluZGV4ICkgPT4ge1xuICAgICAgICBjb25zdCB7b25FZGl0fSA9IHRoaXMucHJvcHM7XG4gICAgICAgIGlmICggb25FZGl0ICkgb25FZGl0KGluZGV4KTtcblxuICAgIH07XG5cbiAgICB1cGRhdGUgPSAoc2VsZWN0ZWQpID0+IHtcbiAgICAgICAgdGhpcy5zZXRTdGF0ZSh7c2VsZWN0ZWQ6IHNlbGVjdGVkfSk7XG4gICAgfTtcblxuICAgIHNldEJ1bmRsZU1ldGhvZCA9IChidW5kbGVNZXRob2QpID0+IHtcbiAgICAgICAgdGhpcy5zZXRTdGF0ZSh7YnVuZGxlTWV0aG9kfSk7XG4gICAgfTtcblxuICAgIHNldFRlcnJpdG9yaWVzTWV0aG9kID0gKHRlcnJpdG9yaWVzTWV0aG9kKSA9PiB7XG4gICAgICAgIHRoaXMuc2V0U3RhdGUoe3RlcnJpdG9yaWVzTWV0aG9kOiB0ZXJyaXRvcmllc01ldGhvZCwgdGVycml0b3JpZXM6IFtdfSk7XG4gICAgICAgIHRoaXMuZmlsbFRlcnJpdG9yaWVzKHRlcnJpdG9yaWVzTWV0aG9kLCB0aGlzLnN0YXRlLmJ1bmRsZU1ldGhvZCk7XG4gICAgfTtcblxuICAgIGZpbGxUZXJyaXRvcmllcyA9ICh0ZXJyaXRvcmllc01ldGhvZCwgYnVuZGxlTWV0aG9kKSA9PiB7XG4gICAgICAgIGlmICggdGVycml0b3JpZXNNZXRob2QgPT09IHRoaXMud29ybGR3aWRlICYmIGJ1bmRsZU1ldGhvZCA9PT0gdGhpcy5pbmRpdmlkdWFsbHkgKSB7XG4gICAgICAgICAgICB0aGlzLnNldFN0YXRlKHsgdGVycml0b3JpZXMgOiBPYmplY3QudmFsdWVzKENvbnRlbnRBcmVuYS5EYXRhLkNvdW50cmllcykubWFwKChpLGspPT4oe3ZhbHVlIDogaS5uYW1lICwgbGFiZWwgOiBpLm5hbWUgfSkpfSlcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIHRoaXMuc2V0U3RhdGUoeyB0ZXJyaXRvcmllcyA6IFtdfSlcbiAgICAgICAgfVxuICAgIH07XG5cbiAgICBnZXRGaWx0ZXJUZXJyaXRvcmllcyA9ICgpID0+IHtcblxuICAgICAgICBjb25zdCB7IGV4Y2x1c2l2aXR5LCBzYWxlc1BhY2thZ2VzfSA9IHRoaXMucHJvcHM7XG4gICAgICAgIGxldCBmaWx0ZXIgPSBbXTtcblxuICAgICAgICBpZiAoICFleGNsdXNpdml0eSApIHJldHVybiBmaWx0ZXI7XG5cbiAgICAgICAgc2FsZXNQYWNrYWdlcy5mb3JFYWNoKChzYWxlc1BhY2thZ2UpID0+IHtcbiAgICAgICAgICAgIGZpbHRlciA9IFsuLi5maWx0ZXIsIC4uLnNhbGVzUGFja2FnZS50ZXJyaXRvcmllcy5tYXAodCA9PiB0LnZhbHVlKV1cbiAgICAgICAgfSk7XG5cbiAgICAgICAgcmV0dXJuIGZpbHRlclxuICAgIH07XG5cbiAgICBnZXRFeGNsdWRlZFRlcnJpdG9yaWVzID0gKCkgPT4ge1xuXG4gICAgICAgIGNvbnN0IHt0ZXJyaXRvcmllc30gPSB0aGlzLnN0YXRlO1xuICAgICAgICBsZXQgdGVycml0b3JpZXNBcnJheSA9IFtdO1xuXG4gICAgICAgIGlmICghQXJyYXkuaXNBcnJheSh0ZXJyaXRvcmllcykpIHtcbiAgICAgICAgICAgIHRlcnJpdG9yaWVzQXJyYXkgPSBbdGVycml0b3JpZXNdO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgdGVycml0b3JpZXNBcnJheSA9IHRlcnJpdG9yaWVzO1xuICAgICAgICB9XG4gICAgICAgIGxldCBmaWx0ZXIgPSB0aGlzLmdldEZpbHRlclRlcnJpdG9yaWVzKCk7XG5cbiAgICAgICAgbGV0IHNlbGVjdGVkID0gdGVycml0b3JpZXNBcnJheS5tYXAodCA9PiB0LnZhbHVlKTtcbiAgICAgICAgZmlsdGVyID0gWy4uLmZpbHRlciwgLi4uc2VsZWN0ZWRdO1xuXG5cbiAgICAgICAgcmV0dXJuIGZpbHRlci5maWx0ZXIoZnVuY3Rpb24oaXRlbSwgcG9zLCBzZWxmKSB7XG4gICAgICAgICAgICByZXR1cm4gc2VsZi5pbmRleE9mKGl0ZW0pID09IHBvcztcbiAgICAgICAgfSkubWFwKHQ9PntyZXR1cm4ge3ZhbHVlOiB0LCBsYWJlbDogdH19KVxuICAgIH07XG5cbiAgICB3b3JsZHdpZGVBdmFpbGFibGUgPSAoKSA9PiB7XG4gICAgICAgIGNvbnN0IHsgc2FsZXNQYWNrYWdlcywgZXhjbHVzaXZpdHl9ID0gdGhpcy5wcm9wcztcblxuICAgICAgICBpZiAoIWV4Y2x1c2l2aXR5KSByZXR1cm4gdHJ1ZTtcblxuICAgICAgICByZXR1cm4gc2FsZXNQYWNrYWdlcy5maWx0ZXIoc2FsZXNQYWNrYWdlID0+IHNhbGVzUGFja2FnZS50ZXJyaXRvcmllc01ldGhvZCA9PT0gdGhpcy53b3JsZHdpZGVFeGNsdWRpbmcpLmxlbmd0aCA9PT0gMDtcbiAgICB9O1xuXG4gICAgc2V0U2FsZXNNZXRob2QgPSAoc2FsZXNNZXRob2QpID0+IHtcbiAgICAgICAgdGhpcy5zZXRTdGF0ZSh7c2FsZXNNZXRob2R9KTtcbiAgICB9O1xuXG4gICAgY2xvc2VNb2RhbCA9ICgpID0+IHtcbiAgICAgICAgdGhpcy5zZXRTdGF0ZSh7IGlzT3BlbjogZmFsc2V9KTtcbiAgICB9O1xuXG4gICAgY2xvc2VUZXJyaXRvcmllc01vZGFsID0gKCkgPT4ge1xuICAgICAgICB0aGlzLnNldFN0YXRlKHsgc2hvd0FsbFRlcnJpdG9yaWVzOiBmYWxzZX0pO1xuICAgIH07XG5cbiAgICBhcHBseVNlbGVjdGlvbiAgPSAoKSA9PiB7XG4gICAgICAgIHRoaXMuc2V0U3RhdGUoeyBpc09wZW46IGZhbHNlfSk7XG5cbiAgICAgICAgY29uc3QgeyBidW5kbGVNZXRob2QsIHRlcnJpdG9yaWVzTWV0aG9kLCBmZWUsIHNhbGVzTWV0aG9kLCBpbnN0YWxsbWVudHMgfSA9IHRoaXMuc3RhdGU7XG4gICAgICAgIGNvbnN0IHtleGNsdXNpdml0eX0gPSB0aGlzLnByb3BzO1xuXG4gICAgICAgIGNvbnN0IHRlcnJpdG9yaWVzQXNBcnJheSA9IEFycmF5LmlzQXJyYXkodGhpcy5zdGF0ZS50ZXJyaXRvcmllcykgPyB0aGlzLnN0YXRlLnRlcnJpdG9yaWVzIDogW3RoaXMuc3RhdGUudGVycml0b3JpZXNdO1xuICAgICAgICBsZXQgc2FsZXNQYWNrYWdlc0xpc3QgPSBbXSwgbmFtZT0gXCJcIjtcbiAgICAgICAgbGV0IGV4Y2x1ZGVkVGVycml0b3JpZXMgPSAoZXhjbHVzaXZpdHkpID8gdGhpcy5nZXRFeGNsdWRlZFRlcnJpdG9yaWVzKCkgOiB0ZXJyaXRvcmllc0FzQXJyYXk7XG4gICAgICAgIGxldCB0ZXJyaXRvcmllcyA9IHRlcnJpdG9yaWVzQXNBcnJheTtcbiAgICAgICAgbGV0IGFsbFRlcnJpdG9yaWVzID0gT2JqZWN0LnZhbHVlcyhDb250ZW50QXJlbmEuRGF0YS5Db3VudHJpZXMpLm1hcCgoaSxrKT0+KHt2YWx1ZSA6IGkubmFtZSAsIGxhYmVsIDogaS5uYW1lIH0pKTtcbiAgICAgICAgbGV0IHRlcnJpdG9yaWVzQnlMYWJlbCA9IChleGNsdXNpdml0eSkgPyB0aGlzLmdldEV4Y2x1ZGVkVGVycml0b3JpZXMoKS5tYXAodCA9PiB0LmxhYmVsKSA6IHRlcnJpdG9yaWVzLm1hcCh0ID0+IHQubGFiZWwpO1xuICAgICAgICBpZiAoIHRoaXMuc3RhdGUuaXNOZXcgKSB7XG5cbiAgICAgICAgICAgIGlmICggYnVuZGxlTWV0aG9kID09PSB0aGlzLmluZGl2aWR1YWxseSApe1xuXG4gICAgICAgICAgICAgICAgaWYgKCB0ZXJyaXRvcmllc01ldGhvZCA9PT0gdGhpcy53b3JsZHdpZGVFeGNsdWRpbmcgKXtcbiAgICAgICAgICAgICAgICAgICAgc2FsZXNQYWNrYWdlc0xpc3QgPSBhbGxUZXJyaXRvcmllcy5maWx0ZXIodCA9PiB0ZXJyaXRvcmllc0J5TGFiZWwuaW5kZXhPZih0LmxhYmVsKSA9PT0gLTEpLm1hcCgodGVycml0b3J5KT0+e1xuICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBuYW1lIDogdGVycml0b3J5LmxhYmVsLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRlcnJpdG9yaWVzIDogW3RlcnJpdG9yeV0sXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgZmVlIDogZmVlLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNhbGVzTWV0aG9kIDogc2FsZXNNZXRob2QsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgYnVuZGxlTWV0aG9kIDogYnVuZGxlTWV0aG9kLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRlcnJpdG9yaWVzTWV0aG9kOiB0ZXJyaXRvcmllc01ldGhvZCxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpbnN0YWxsbWVudHMgOiBpbnN0YWxsbWVudHNcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgc2FsZXNQYWNrYWdlc0xpc3QgPSBhbGxUZXJyaXRvcmllcy5tYXAoKHRlcnJpdG9yeSk9PntcbiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgbmFtZSA6IHRlcnJpdG9yeS5sYWJlbCxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB0ZXJyaXRvcmllcyA6IFt0ZXJyaXRvcnldLFxuXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgZmVlIDogZmVlLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNhbGVzTWV0aG9kIDogc2FsZXNNZXRob2QsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgYnVuZGxlTWV0aG9kIDogYnVuZGxlTWV0aG9kLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRlcnJpdG9yaWVzTWV0aG9kOiB0ZXJyaXRvcmllc01ldGhvZCxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpbnN0YWxsbWVudHMgOiBpbnN0YWxsbWVudHNcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSBlbHNlIHtcblxuICAgICAgICAgICAgICAgIGlmICggdGVycml0b3JpZXNNZXRob2QgPT09IHRoaXMud29ybGR3aWRlICl7XG4gICAgICAgICAgICAgICAgICAgIG5hbWUgPSBcIldvcmxkd2lkZVwiO1xuICAgICAgICAgICAgICAgIH0gZWxzZSBpZiAoIHRlcnJpdG9yaWVzTWV0aG9kID09PSB0aGlzLnNlbGVjdGVkVGVycml0b3JpZXMgKSB7XG4gICAgICAgICAgICAgICAgICAgIG5hbWUgPSB0ZXJyaXRvcmllcy5zbGljZSgwLCAzKS5tYXAoICggdGVycml0b3J5LCBpICk9PntcbiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiB0ZXJyaXRvcnkubGFiZWxcbiAgICAgICAgICAgICAgICAgICAgfSkuam9pbihcIiwgXCIpO1xuXG4gICAgICAgICAgICAgICAgfSBlbHNlIGlmICggdGVycml0b3JpZXNNZXRob2QgPT09IHRoaXMud29ybGR3aWRlRXhjbHVkaW5nICkge1xuICAgICAgICAgICAgICAgICAgICB0ZXJyaXRvcmllcyA9IGFsbFRlcnJpdG9yaWVzLmZpbHRlcih0ID0+IHRlcnJpdG9yaWVzQnlMYWJlbC5pbmRleE9mKHQubGFiZWwpID09PSAtMSk7XG4gICAgICAgICAgICAgICAgICAgIG5hbWUgPSBcIldvcmxkd2lkZSBleGNsdWRpbmcgXCIgKyBleGNsdWRlZFRlcnJpdG9yaWVzLnNsaWNlKDAsIDMpLm1hcCggKCB0ZXJyaXRvcnksIGkgKT0+e1xuICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHRlcnJpdG9yeS5sYWJlbFxuICAgICAgICAgICAgICAgICAgICB9KS5qb2luKFwiLCBcIik7XG4gICAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgICAgc2FsZXNQYWNrYWdlc0xpc3QgPSBbe1xuICAgICAgICAgICAgICAgICAgICBuYW1lIDogbmFtZSxcbiAgICAgICAgICAgICAgICAgICAgdGVycml0b3JpZXMgOiB0ZXJyaXRvcmllcyxcbiAgICAgICAgICAgICAgICAgICAgZXhjbHVkZWRUZXJyaXRvcmllcyA6IGV4Y2x1ZGVkVGVycml0b3JpZXMsXG4gICAgICAgICAgICAgICAgICAgIGZlZSA6IGZlZSxcbiAgICAgICAgICAgICAgICAgICAgc2FsZXNNZXRob2QgOiBzYWxlc01ldGhvZCxcbiAgICAgICAgICAgICAgICAgICAgYnVuZGxlTWV0aG9kIDogYnVuZGxlTWV0aG9kLFxuICAgICAgICAgICAgICAgICAgICB0ZXJyaXRvcmllc01ldGhvZDogdGVycml0b3JpZXNNZXRob2QsXG4gICAgICAgICAgICAgICAgICAgIGluc3RhbGxtZW50cyA6IGluc3RhbGxtZW50c1xuICAgICAgICAgICAgICAgIH1dXG5cbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgdGhpcy5wcm9wcy5vbkFkZChzYWxlc1BhY2thZ2VzTGlzdCk7XG5cbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIHRoaXMucHJvcHMub25VcGRhdGUodGhpcy5zdGF0ZSwgdGhpcy5zdGF0ZS5pbmRleCk7XG4gICAgICAgIH1cblxuICAgICAgICB0aGlzLnNldFN0YXRlKHtcbiAgICAgICAgICAgIGZlZTogMCxcbiAgICAgICAgICAgIHRlcnJpdG9yaWVzOiBbXSxcbiAgICAgICAgICAgIC8vIHRlcnJpdG9yaWVzTWV0aG9kOiAodGhpcy53b3JsZHdpZGVBdmFpbGFibGUoKSkgPyB0aGlzLndvcmxkd2lkZSA6IHRoaXMuc2VsZWN0ZWRUZXJyaXRvcmllc1xuICAgICAgICB9KTtcbiAgICB9O1xuXG4gICAgc2VsZWN0VGVycml0b3JpZXMgPSAodGVycml0b3JpZXMpID0+IHtcbiAgICAgICAgdGhpcy5zZXRTdGF0ZSh7IHRlcnJpdG9yaWVzIH0pO1xuICAgIH07XG5cbiAgICBzZXRJbnN0YWxsbWVudFR5cGUgPSAoIHR5cGUsIGkgKSA9PiB7XG4gICAgICAgIGxldCBpbnN0YWxsbWVudHMgPSB0aGlzLnN0YXRlLmluc3RhbGxtZW50cztcbiAgICAgICAgaW5zdGFsbG1lbnRzW2ldLnR5cGUgPSB0eXBlO1xuICAgICAgICB0aGlzLnNldFN0YXRlKHtpbnN0YWxsbWVudHN9KTtcbiAgICB9O1xuXG4gICAgc2V0SW5zdGFsbG1lbnREYXRlID0gKCBkYXRlLCBpICkgPT4ge1xuICAgICAgICBsZXQgaW5zdGFsbG1lbnRzID0gdGhpcy5zdGF0ZS5pbnN0YWxsbWVudHM7XG4gICAgICAgIGluc3RhbGxtZW50c1tpXS5kYXRlID0gZGF0ZTtcbiAgICAgICAgdGhpcy5zZXRTdGF0ZSh7aW5zdGFsbG1lbnRzfSk7XG4gICAgfTtcblxuICAgIHNldEluc3RhbGxtZW50RGF5cyA9ICggZGF5cywgaSApID0+IHtcbiAgICAgICAgbGV0IGluc3RhbGxtZW50cyA9IHRoaXMuc3RhdGUuaW5zdGFsbG1lbnRzO1xuICAgICAgICBpbnN0YWxsbWVudHNbaV0uZGF5cyA9IGRheXM7XG4gICAgICAgIHRoaXMuc2V0U3RhdGUoe2luc3RhbGxtZW50c30pO1xuICAgIH07XG5cbiAgICBzZXRJbnN0YWxsbWVudFZhbHVlID0gKCB2YWx1ZSwgaSApID0+IHtcbiAgICAgICAgbGV0IGluc3RhbGxtZW50cyA9IHRoaXMuc3RhdGUuaW5zdGFsbG1lbnRzO1xuICAgICAgICBpbnN0YWxsbWVudHNbaV0udmFsdWUgPSB2YWx1ZTtcbiAgICAgICAgdGhpcy5zZXRTdGF0ZSh7aW5zdGFsbG1lbnRzfSk7XG4gICAgfTtcblxuICAgIGFkZEluc3RhbGxtZW50ID0gKCApID0+IHtcbiAgICAgICAgbGV0IGluc3RhbGxtZW50cyA9IHRoaXMuc3RhdGUuaW5zdGFsbG1lbnRzO1xuICAgICAgICBpbnN0YWxsbWVudHMucHVzaCh7IHZhbHVlIDogMTAwLCAgdHlwZSA6IFwiREFZXCIsIGRheXM6IDMwfSk7XG4gICAgICAgIHRoaXMuc2V0U3RhdGUoe2luc3RhbGxtZW50c30pO1xuICAgIH07XG5cbiAgICByZW1vdmVJbnN0YWxsbWVudCA9ICggaSApID0+IHtcbiAgICAgICAgbGV0IGluc3RhbGxtZW50cyA9IHRoaXMuc3RhdGUuaW5zdGFsbG1lbnRzO1xuICAgICAgICBpbnN0YWxsbWVudHMuc3BsaWNlKGksIDEpO1xuICAgICAgICB0aGlzLnNldFN0YXRlKHtpbnN0YWxsbWVudHN9KTtcbiAgICB9O1xuXG4gICAgdXBkYXRlRmVlID0gKGUpID0+IHtcbiAgICAgICAgbGV0IGZlZSA9IGUudGFyZ2V0LnZhbHVlO1xuICAgICAgICB0aGlzLnNldFN0YXRlKHtmZWV9KVxuICAgIH07XG5cbiAgICBhZGRCdW5kbGVzQXZhaWxhYmxlID0gKCkgPT4ge1xuICAgICAgICBjb25zdCB7IGV4Y2x1c2l2aXR5LCBzYWxlc1BhY2thZ2VzfSA9IHRoaXMucHJvcHM7XG4gICAgICAgIGNvbnN0IHsgY291bnRyaWVzIH0gPSB0aGlzLnN0YXRlO1xuICAgICAgICBsZXQgdGVycml0b3JpZXMgPSBbXSwgd29ybGR3aWRlID1mYWxzZTtcblxuICAgICAgICBpZiAoIGV4Y2x1c2l2aXR5ICl7XG4gICAgICAgICAgICBzYWxlc1BhY2thZ2VzLm1hcChzcCA9PiB7XG4gICAgICAgICAgICAgICAgaWYgKCBzcC50ZXJyaXRvcmllc01ldGhvZCA9PT0gXCJXT1JMRFdJREVcIiAmJiBzcC5idW5kbGVNZXRob2QgPT09IHRoaXMuYXNCdW5kbGUpIHdvcmxkd2lkZSA9IHRydWU7XG4gICAgICAgICAgICAgICAgdGVycml0b3JpZXMgPSBbLi4udGVycml0b3JpZXMsIC4uLnNwLnRlcnJpdG9yaWVzXTtcbiAgICAgICAgICAgIH0pXG4gICAgICAgIH1cblxuICAgICAgICByZXR1cm4gIXdvcmxkd2lkZSAmJiB0ZXJyaXRvcmllcy5sZW5ndGggIT09IE9iamVjdC52YWx1ZXMoY291bnRyaWVzKS5sZW5ndGg7XG4gICAgfTtcblxuICAgIGhhbmRsZVRlcnJpdG9yaWVzID0gKHR5cGUpID0+IHtcbiAgICAgICAgdGhpcy5zZXRTdGF0ZSh7dGVycml0b3JpZXNRdWFudGl0eTogdHlwZX0pO1xuICAgIH1cblxuICAgIHJlbmRlck1vZGFsID0gKCkgPT4ge1xuXG4gICAgICAgIGNvbnN0IHtvbkNsb3NlLCBleGNsdXNpdml0eSwgc2FsZXNQYWNrYWdlc30gPSB0aGlzLnByb3BzO1xuICAgICAgICBjb25zdCB7dGVycml0b3JpZXNRdWFudGl0eSwgdGVycml0b3JpZXNNZXRob2QsIHRlcnJpdG9yaWVzfSA9IHRoaXMuc3RhdGU7XG5cbiAgICAgICAgY29uc3QgaXNGaWx0ZXJFbmFibGVkID0gdGVycml0b3JpZXNNZXRob2QgPT09IHRoaXMuc2VsZWN0ZWRUZXJyaXRvcmllcztcbiAgICAgICAgY29uc3QgaXNNdWx0aXBsZUVuYWJsZWQgPSB0ZXJyaXRvcmllc1F1YW50aXR5ID09PSAnbXVsdGlwbGUnO1xuICAgICAgICByZXR1cm4gPE1vZGFsXG4gICAgICAgICAgICBpc09wZW49e3RoaXMuc3RhdGUuaXNPcGVufVxuICAgICAgICAgICAgb25SZXF1ZXN0Q2xvc2U9e3RoaXMuY2xvc2VNb2RhbH1cbiAgICAgICAgICAgIGJvZHlPcGVuQ2xhc3NOYW1lPXtcInNlbGVjdG9yXCJ9XG4gICAgICAgICAgICBzdHlsZT17Y3VzdG9tU3R5bGVzfVxuICAgICAgICAgICAgY29udGVudExhYmVsPVwiRXhhbXBsZSBNb2RhbFwiXG4gICAgICAgID5cblxuICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJtb2RhbC10aXRsZVwiPlxuICAgICAgICAgICAgICAgIFNhbGVzIGJ1bmRsZVxuICAgICAgICAgICAgICAgIDxpIGNsYXNzTmFtZT1cImZhIGZhLXRpbWVzLWNpcmNsZS1vIGNsb3NlLWljb25cIiBvbkNsaWNrPXt0aGlzLmNsb3NlTW9kYWx9Lz5cbiAgICAgICAgICAgIDwvZGl2PlxuXG4gICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cInN0ZXAtY29udGVudFwiPlxuICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwic3RlcC1jb250ZW50LWNvbnRhaW5lclwiPlxuXG4gICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiYmFzZS1mdWxsLWlucHV0XCI+XG4gICAgICAgICAgICAgICAgICAgICAgICA8bGFiZWwgc3R5bGU9e2xhYmVsU3R5bGV9ID5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB7dGhpcy5jb250ZXh0LnQoXCJDTF9TVEVQNF9FRElUX0JVTkRMRV9USVRMRV9URVJSSVRPUklFU19NT0RFXCIpfVxuICAgICAgICAgICAgICAgICAgICAgICAgPC9sYWJlbD5cbiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPXtcImNvbnRlbnRcIn0+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9e1wiaXRlbVwifSBvbkNsaWNrPXsoKT0+dGhpcy5oYW5kbGVUZXJyaXRvcmllcygnc2luZ2xlJyl9PlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB7dGVycml0b3JpZXNRdWFudGl0eSA9PT0gJ3NpbmdsZScgP1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGkgY2xhc3NOYW1lPVwiZmEgZmEtY2hlY2stY2lyY2xlLW9cIi8+IDpcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpIGNsYXNzTmFtZT1cImZhIGZhLWNpcmNsZS10aGluXCIgLz5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT17XCJ0aXRsZVwifT5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHt0aGlzLmNvbnRleHQudChcIkNMX1NURVA0X0VESVRfQlVORExFX1RJVExFX1NJTkdMRV9URVJSSVRPUllcIil9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPXtcIml0ZW1cIn0gb25DbGljaz17KCk9PnRoaXMuaGFuZGxlVGVycml0b3JpZXMoJ211bHRpcGxlJyl9PlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB7dGVycml0b3JpZXNRdWFudGl0eSA9PT0gJ211bHRpcGxlJyA/XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aSBjbGFzc05hbWU9XCJmYSBmYS1jaGVjay1jaXJjbGUtb1wiLz4gOlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGkgY2xhc3NOYW1lPVwiZmEgZmEtY2lyY2xlLXRoaW5cIiAvPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPXtcInRpdGxlXCJ9PlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAge3RoaXMuY29udGV4dC50KFwiQ0xfU1RFUDRfRURJVF9CVU5ETEVfVElUTEVfTVVMVElQTEVfVEVSUklUT1JJRVNcIil9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgICAgICAgIDwvZGl2PlxuXG4gICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiYmFzZS1mdWxsLWlucHV0XCIgc3R5bGU9e3tkaXNwbGF5OiAnYmxvY2snfX0+XG4gICAgICAgICAgICAgICAgICAgICAgICA8bGFiZWwgc3R5bGU9e2xhYmVsU3R5bGV9PlNlbGVjdCB0ZXJyaXRvcmllczwvbGFiZWw+XG4gICAgICAgICAgICAgICAgICAgICAgICB7dGVycml0b3JpZXNRdWFudGl0eSA9PT0gJ211bHRpcGxlJyAmJiAoXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9e1wiY29udGVudFwifT5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9e1wiaXRlbVwifSBvbkNsaWNrPXsoKSA9PiB7IHRoaXMuc2V0VGVycml0b3JpZXNNZXRob2QodGhpcy5zZWxlY3RlZFRlcnJpdG9yaWVzKSB9IH0+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB7dGVycml0b3JpZXNNZXRob2QgIT09IHRoaXMuc2VsZWN0ZWRUZXJyaXRvcmllcyAmJiA8aSBjbGFzc05hbWU9XCJmYSBmYS1jaXJjbGUtdGhpblwiLz59XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB7dGVycml0b3JpZXNNZXRob2QgPT09IHRoaXMuc2VsZWN0ZWRUZXJyaXRvcmllcyAmJiA8aSBjbGFzc05hbWU9XCJmYSBmYS1jaGVjay1jaXJjbGUtb1wiLz59XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT17XCJ0aXRsZVwifT5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB7dGhpcy5jb250ZXh0LnQoXCJDTF9TVEVQNF9FRElUX0JVTkRMRV9USVRMRV9TRUxFQ1RFRF9URVJSSVRPUklFU1wiKX1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgeyghZXhjbHVzaXZpdHkgfHwgKGV4Y2x1c2l2aXR5ICYmIHNhbGVzUGFja2FnZXMubGVuZ3RoID09PSAwKSkgJiYgKFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9e1wiaXRlbVwifSBvbkNsaWNrPXsoKSA9PiB7IHRoaXMuc2V0VGVycml0b3JpZXNNZXRob2QodGhpcy53b3JsZHdpZGUpIH0gfT5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB7dGVycml0b3JpZXNNZXRob2QgIT09IHRoaXMud29ybGR3aWRlICYmIDxpIGNsYXNzTmFtZT1cImZhIGZhLWNpcmNsZS10aGluXCIvPn1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB7dGVycml0b3JpZXNNZXRob2QgPT09IHRoaXMud29ybGR3aWRlICYmIDxpIGNsYXNzTmFtZT1cImZhIGZhLWNoZWNrLWNpcmNsZS1vXCIvPn1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT17XCJ0aXRsZVwifT5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAge3RoaXMuY29udGV4dC50KFwiQ0xfU1RFUDRfRURJVF9CVU5ETEVfVElUTEVfV09STERXSURFXCIpfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICl9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHt0aGlzLndvcmxkd2lkZUF2YWlsYWJsZSgpICYmIDxkaXYgY2xhc3NOYW1lPXtcIml0ZW1cIn0gb25DbGljaz17KCkgPT4geyB0aGlzLnNldFRlcnJpdG9yaWVzTWV0aG9kKHRoaXMud29ybGR3aWRlRXhjbHVkaW5nKSB9IH0+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB7dGVycml0b3JpZXNNZXRob2QgIT09IHRoaXMud29ybGR3aWRlRXhjbHVkaW5nICYmIDxpIGNsYXNzTmFtZT1cImZhIGZhLWNpcmNsZS10aGluXCIvPn1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHt0ZXJyaXRvcmllc01ldGhvZCA9PT0gdGhpcy53b3JsZHdpZGVFeGNsdWRpbmcgJiYgPGkgY2xhc3NOYW1lPVwiZmEgZmEtY2hlY2stY2lyY2xlLW9cIi8+fVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9e1widGl0bGVcIn0+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAge3RoaXMuY29udGV4dC50KFwiQ0xfU1RFUDRfRURJVF9CVU5ETEVfVElUTEVfV09STERXSURFX0VYQ0xVRElOR1wiKX1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj59XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgICAgICAgICAgICApfVxuICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBzdHlsZT17e21hcmdpblRvcDogJzEwcHgnLCBwYWRkaW5nOiBcIjAgMTVweFwifX0+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgeyFpc011bHRpcGxlRW5hYmxlZCAmJiA8Q291bnRyeVNlbGVjdG9yXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNsYXNzTmFtZT17XCJzbWFsbC1zZWxlY3RcIn1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgb25DaGFuZ2U9eyhjKSA9Pnt0aGlzLnNlbGVjdFRlcnJpdG9yaWVzKFtjXSl9fVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YWx1ZT17dGVycml0b3JpZXNbMF19XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGZpbHRlcj17aXNGaWx0ZXJFbmFibGVkID8gdGhpcy5nZXRGaWx0ZXJUZXJyaXRvcmllcygpIDogW119XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG11bHRpPXtmYWxzZX1cblxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8+fVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHtpc011bHRpcGxlRW5hYmxlZCAmJiA8UmVnaW9uQ291bnRyeVNlbGVjdG9yXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNsYXNzTmFtZT17XCJzbWFsbC1zZWxlY3RcIn1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgb25DaGFuZ2U9e3RoaXMuc2VsZWN0VGVycml0b3JpZXN9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhbHVlPXtpc0V4Y2x1ZGVkVGVycml0b3JpZXNFbmFibGVkID8gdGhpcy5nZXRFeGNsdWRlZFRlcnJpdG9yaWVzKCkgOiB0ZXJyaXRvcmllc31cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZmlsdGVyPXtpc0ZpbHRlckVuYWJsZWQgPyB0aGlzLmdldEZpbHRlclRlcnJpdG9yaWVzKCkgOiBbXX1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZGlzYWJsZWQ9e2lzV29ybGR3aWRlRW5hYmxlZH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAvPn1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB7dGVycml0b3JpZXNRdWFudGl0eSA9PT0gJ211bHRpcGxlJyAmJiAoXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXY+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aW5wdXQgdHlwZT1cImNoZWNrYm94XCJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjbGFzc05hbWU9XCJjYS1jaGVja2JveFwiXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc3R5bGU9e3t3aWR0aDonaW5oZXJpdCcsIGhlaWdodDogJzIwcHgnfX1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBkZWZhdWx0Q2hlY2tlZD17dGhpcy5zdGF0ZS5idW5kbGVNZXRob2QgPT09IHRoaXMuYXNCdW5kbGV9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgb25DaGFuZ2U9eyhlKT0+e3RoaXMuc2V0QnVuZGxlTWV0aG9kKGUudGFyZ2V0LmNoZWNrZWQgPyB0aGlzLmFzQnVuZGxlOiB0aGlzLmluZGl2aWR1YWxseSl9fVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgLz5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIHN0eWxlPXt7dmVydGljYWxBbGlnbjonbWlkZGxlJywgbWFyZ2luTGVmdDogJzVweCcsIGZvbnRTaXplOiAnMTRweCd9fT5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB7dGhpcy5jb250ZXh0LnQoXCJDTF9TVEVQNF9FRElUX0JVTkRMRV9BU19QQUNLQUdFXCIpfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9zcGFuPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPFRvb2x0aXBcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZD1cIm9mZmVyX2luZm9cIlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRleHQ9XCJUZXN0IHRleHRcIlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgLz5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgKX1cbiAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJiYXNlLWZ1bGwtaW5wdXRcIj5cbiAgICAgICAgICAgICAgICAgICAgICAgIDxsYWJlbCBzdHlsZT17bGFiZWxTdHlsZX0+U2FsZXMgbWV0aG9kPC9sYWJlbD5cbiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPXtcImNvbnRlbnRcIn0+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9e1wiaXRlbVwifSBvbkNsaWNrPXsoKSA9PiB7IHRoaXMuc2V0U2FsZXNNZXRob2QodGhpcy5maXhlZCkgfSB9PlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB7dGhpcy5zdGF0ZS5zYWxlc01ldGhvZCAhPT0gdGhpcy5maXhlZCAmJiA8aSBjbGFzc05hbWU9XCJmYSBmYS1jaXJjbGUtdGhpblwiLz59XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHt0aGlzLnN0YXRlLnNhbGVzTWV0aG9kID09PSB0aGlzLmZpeGVkICYmIDxpIGNsYXNzTmFtZT1cImZhIGZhLWNoZWNrLWNpcmNsZS1vXCIvPn1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9e1widGl0bGVcIn0+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB7dGhpcy5jb250ZXh0LnQoXCJDTF9TVEVQNF9FRElUX0JVTkRMRV9UWVBFX0ZJWEVEXCIpfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT17XCJpdGVtXCJ9IG9uQ2xpY2s9eygpID0+IHsgdGhpcy5zZXRTYWxlc01ldGhvZCh0aGlzLmJpZGRpbmcpIH0gfT5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAge3RoaXMuc3RhdGUuc2FsZXNNZXRob2QgIT09IHRoaXMuYmlkZGluZyAmJiA8aSBjbGFzc05hbWU9XCJmYSBmYS1jaXJjbGUtdGhpblwiLz59XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHt0aGlzLnN0YXRlLnNhbGVzTWV0aG9kID09PSB0aGlzLmJpZGRpbmcgJiYgPGkgY2xhc3NOYW1lPVwiZmEgZmEtY2hlY2stY2lyY2xlLW9cIi8+fVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT17XCJ0aXRsZVwifT5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHt0aGlzLmNvbnRleHQudChcIkNMX1NURVA0X0VESVRfQlVORExFX1RZUEVfQklERElOR1wiKX1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9e1wiaXRlbVwifSBzdHlsZT17eyBwYWRkaW5nTGVmdDogMCwgcGFkZGluZ1JpZ2h0OiAwIH19PlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3Bhbj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHt0aGlzLnN0YXRlLnNhbGVzTWV0aG9kID09PSB0aGlzLmZpeGVkICYmIFwiRml4ZWQgZmVlXCJ9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB7dGhpcy5zdGF0ZS5zYWxlc01ldGhvZCAhPT0gdGhpcy5maXhlZCAmJiBcIk1pbmltdW0gYmlkIChvcHRpb25hbClcIn1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9zcGFuPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aW5wdXRcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHR5cGU9XCJudW1iZXJcIlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbWluPXswfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgb25DaGFuZ2U9e3RoaXMudXBkYXRlRmVlfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdmFsdWU9e3RoaXMuc3RhdGUuZmVlfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc3R5bGU9e3sgaGVpZ2h0OiBcIjI2cHhcIiwgd2lkdGg6IFwiMTAwcHhcIiB9fS8+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIHN0eWxlPXt7d2lkdGg6ICdhdXRvJywgcGFkZGluZzogJzAgMTBweCd9fT57IHRoaXMuZ2V0Q3VycmVuY3lTeW1ib2woKSB9PC9zcGFuPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgICAgICAgIDwvZGl2PlxuXG4gICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiYmFzZS1mdWxsLWlucHV0XCI+XG4gICAgICAgICAgICAgICAgICAgICAgICA8bGFiZWwgc3R5bGU9e2xhYmVsU3R5bGV9PlBheW1lbnQgZGV0YWlsczwvbGFiZWw+XG5cbiAgICAgICAgICAgICAgICAgICAgICAgIHsgdGhpcy5zdGF0ZS5pbnN0YWxsbWVudHMubWFwKCAoaW5zdGFsbG1lbnQsIGksIGxpc3QpID0+IHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gPGRpdiBjbGFzc05hbWU9e1wiY29udGVudFwifT5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9e1wiaXRlbVwifSBzdHlsZT17eyBwYWRkaW5nTGVmdDogMCB9fT5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPXtcInRpdGxlXCJ9ID5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB7aSsxfSBJbnN0YWxtZW50IDxpbnB1dCBvbkNoYW5nZT17KGUpID0+IHt0aGlzLnNldEluc3RhbGxtZW50VmFsdWUoZS50YXJnZXQudmFsdWUsaSl9fSBzdHlsZT17eyBoZWlnaHQ6IFwiMjZweFwiLCB3aWR0aDogXCI3MHB4XCIgfX0gdHlwZT1cIm51bWJlclwiIG1heD17MTAwfSB2YWx1ZT17aW5zdGFsbG1lbnQudmFsdWV9Lz4gJSBvZiBwYXltZW50XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHtpbnN0YWxsbWVudC50eXBlICE9PSBcIkRBVEVcIiAmJiA8aSBzdHlsZT17aW5zdGFsbG1lbnRJY29uU3R5bGV9IGNsYXNzTmFtZT1cImZhIGZhLWNpcmNsZS10aGluXCIgb25DbGljaz17KCkgPT4geyB0aGlzLnNldEluc3RhbGxtZW50VHlwZShcIkRBVEVcIixpKX19ICAvPn1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHsgaW5zdGFsbG1lbnQudHlwZSA9PT0gXCJEQVRFXCIgJiYgPGkgc3R5bGU9e2luc3RhbGxtZW50SWNvblN0eWxlfSBjbGFzc05hbWU9XCJmYSBmYS1jaGVjay1jaXJjbGUtb1wiIC8+fVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9e1widGl0bGVcIn0+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPERhdGVQaWNrZXJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZGlzYWJsZWQ9e2luc3RhbGxtZW50LnR5cGUgIT09IFwiREFURVwifVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzZWxlY3RlZD17aW5zdGFsbG1lbnQuZGF0ZX1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcGxhY2Vob2xkZXJUZXh0PXtcImRkL21tL3l5eXlcIn1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgb25DaGFuZ2U9eyhkYXRlKSA9PiB7dGhpcy5zZXRJbnN0YWxsbWVudERhdGUoZGF0ZSxpKX19XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNsYXNzTmFtZT1cInNtYWxsLWRhdGVwaWNrZXJcIi8+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHsgaW5zdGFsbG1lbnQudHlwZSAhPT0gXCJEQVlcIiAmJiA8aSBzdHlsZT17aW5zdGFsbG1lbnRJY29uU3R5bGV9IGNsYXNzTmFtZT1cImZhIGZhLWNpcmNsZS10aGluXCIgb25DbGljaz17KCkgPT4geyB0aGlzLnNldEluc3RhbGxtZW50VHlwZShcIkRBWVwiLGkpfSB9Lz59XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB7IGluc3RhbGxtZW50LnR5cGUgPT09IFwiREFZXCIgJiYgPGkgc3R5bGU9e2luc3RhbGxtZW50SWNvblN0eWxlfSBjbGFzc05hbWU9XCJmYSBmYS1jaGVjay1jaXJjbGUtb1wiIC8+fVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9e1widGl0bGVcIn0gPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpbnB1dFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0eXBlPVwibnVtYmVyXCJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbWluPXswfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBvbkNoYW5nZT17KGUpID0+IHt0aGlzLnNldEluc3RhbGxtZW50RGF5cyhlLnRhcmdldC52YWx1ZSxpKX19XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRpc2FibGVkPXtpbnN0YWxsbWVudC50eXBlICE9PSBcIkRBWVwifVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YWx1ZT17aW5zdGFsbG1lbnQuZGF5c31cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc3R5bGU9e3sgaGVpZ2h0OiBcIjI2cHhcIiwgd2lkdGg6IFwiNzBweFwiIH19Lz4gZGF5cyBhZnRlciBjb250cmFjdCBjb25jbHVzaW9uXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHsgaSAhPT0gMCAmJiA8aSBzdHlsZT17e21hcmdpbjogMCwgcG9zaXRpb246IFwicmVsYXRpdmVcIn19IGNsYXNzTmFtZT1cImZhIGZhLW1pbnVzLWNpcmNsZVwiIG9uQ2xpY2s9eygpID0+IHsgdGhpcy5yZW1vdmVJbnN0YWxsbWVudChpKSB9fS8+fVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgeyBpID09PSBsaXN0Lmxlbmd0aCAtIDEgJiYgPGkgc3R5bGU9e3ttYXJnaW46IDAsIHBvc2l0aW9uOiBcInJlbGF0aXZlXCJ9fSBjbGFzc05hbWU9XCJmYSBmYS1wbHVzLWNpcmNsZVwiIG9uQ2xpY2s9e3RoaXMuYWRkSW5zdGFsbG1lbnR9Lz59XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICAgICAgICAgICAgfSkgfVxuXG5cbiAgICAgICAgICAgICAgICAgICAgPC9kaXY+XG5cbiAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgIDwvZGl2PlxuXG4gICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImVycm9yXCIgc3R5bGU9e3tcbiAgICAgICAgICAgICAgICB3aWR0aDogJzEwMCUnLFxuICAgICAgICAgICAgICAgIHRleHRBbGlnbjogJ2NlbnRlcicsXG4gICAgICAgICAgICAgICAgZm9udFNpemU6ICcxMnB4JyxcbiAgICAgICAgICAgICAgICBjb2xvcjogJ3JlZCdcbiAgICAgICAgICAgIH19PlxuICAgICAgICAgICAgICAgIHsgdGhpcy5pbnN0YWxsbWVudHNJbmNvbXBsZXRlKCkgJiYgdGhpcy5jb250ZXh0LnQoXCJDTF9TVEVQNF9FRElUX0JVTkRMRV9JTlNUQUxMTUVOVF9XQVJOSU5HXCIpfVxuICAgICAgICAgICAgPC9kaXY+XG5cbiAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPXtcImJ1dHRvbnNcIn0+XG4gICAgICAgICAgICAgICAgPGJ1dHRvblxuICAgICAgICAgICAgICAgICAgICBjbGFzc05hbWU9XCJzdGFuZGFyZC1idXR0b25cIlxuICAgICAgICAgICAgICAgICAgICBkaXNhYmxlZD17XG4gICAgICAgICAgICAgICAgICAgICAgICAoIHRoaXMuc3RhdGUuc2FsZXNNZXRob2QgPT09IHRoaXMuZml4ZWQgJiYgTnVtYmVyKCB0aGlzLnN0YXRlLmZlZSApID09PSAwICkgfHxcbiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMudGVycml0b3JpZXNJbmNvbXBsZXRlKCkgfHxcbiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuaW5zdGFsbG1lbnRzSW5jb21wbGV0ZSgpXG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgb25DbGljaz17dGhpcy5hcHBseVNlbGVjdGlvbn0+T2s8L2J1dHRvbj5cbiAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICA8L01vZGFsPlxuICAgICAgICBjb25zdCBpc0V4Y2x1ZGVkVGVycml0b3JpZXNFbmFibGVkID0gdGVycml0b3JpZXNNZXRob2QgPT09IHRoaXMud29ybGR3aWRlRXhjbHVkaW5nO1xuXG4gICAgICAgIGNvbnN0IGlzV29ybGR3aWRlRW5hYmxlZCA9IHRlcnJpdG9yaWVzTWV0aG9kID09PSB0aGlzLndvcmxkd2lkZTtcbiAgICB9O1xuXG4gICAgdGVycml0b3JpZXNJbmNvbXBsZXRlID0gKCkgPT4ge1xuXG4gICAgICAgIGNvbnN0IHt0ZXJyaXRvcmllc01ldGhvZCwgdGVycml0b3JpZXN9ID0gdGhpcy5zdGF0ZTtcblxuICAgICAgICBpZiAoIHRlcnJpdG9yaWVzTWV0aG9kID09PSB0aGlzLnNlbGVjdGVkVGVycml0b3JpZXMgJiYgdGVycml0b3JpZXMubGVuZ3RoID09PSAwICkgcmV0dXJuIHRydWU7XG5cbiAgICAgICAgaWYgKCB0ZXJyaXRvcmllc01ldGhvZCA9PT0gdGhpcy53b3JsZHdpZGVFeGNsdWRpbmdcbiAgICAgICAgICAgICYmIHRlcnJpdG9yaWVzLmxlbmd0aCA9PT0gMFxuICAgICAgICAgICAgJiYgdGhpcy5nZXRFeGNsdWRlZFRlcnJpdG9yaWVzKCkubGVuZ3RoID09PSAwICkgcmV0dXJuIHRydWU7XG5cbiAgICB9O1xuXG4gICAgc2hvd0FsbFRlcnJpdG9yaWVzID0gKGV4dHJhVGVycml0b3JpZXMpID0+IHtcbiAgICAgICAgdGhpcy5zZXRTdGF0ZSh7XG4gICAgICAgICAgICBzaG93QWxsVGVycml0b3JpZXMgOiB0cnVlLFxuICAgICAgICAgICAgdGVycml0b3JpZXNMaXN0IDogZXh0cmFUZXJyaXRvcmllc1xuICAgICAgICB9KVxuICAgIH07XG5cbiAgICBhbGxUZXJyaXRvcmllcyA9ICgpID0+IHtcblxuICAgICAgICByZXR1cm4gPE1vZGFsXG4gICAgICAgICAgICBpc09wZW49e3RoaXMuc3RhdGUuc2hvd0FsbFRlcnJpdG9yaWVzfVxuICAgICAgICAgICAgb25SZXF1ZXN0Q2xvc2U9e3RoaXMuY2xvc2VUZXJyaXRvcmllc01vZGFsfVxuICAgICAgICAgICAgYm9keU9wZW5DbGFzc05hbWU9e1wic2VsZWN0b3JcIn1cbiAgICAgICAgICAgIHN0eWxlPXtjdXN0b21TdHlsZXN9XG4gICAgICAgID5cblxuICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJtb2RhbC1pbm5lclwiPlxuICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5zdGF0ZS50ZXJyaXRvcmllc0xpc3QubWFwKHRlcnJpdG9yeSA9PntcbiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiA8ZGl2IGNsYXNzTmFtZT1cImNvdW50cnktbW9kYWxcIj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB7dGVycml0b3J5LmxhYmVsfVxuICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgICAgICAgIH0pXG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgPC9kaXY+XG5cbiAgICAgICAgPC9Nb2RhbD5cbiAgICB9O1xuXG4gICAgc2hvd1RlcnJpdG9yaWVzID0gKHNhbGVzUGFja2FnZSkgPT4ge1xuICAgICAgICByZXR1cm4gKCBzYWxlc1BhY2thZ2UuYnVuZGxlTWV0aG9kID09PSB0aGlzLmluZGl2aWR1YWxseSAmJlxuICAgICAgICBzYWxlc1BhY2thZ2UudGVycml0b3JpZXNNZXRob2QgPT09IHRoaXMud29ybGR3aWRlICkgfHxcbiAgICAgICAgICAgIHNhbGVzUGFja2FnZS50ZXJyaXRvcmllc01ldGhvZCAhPT0gdGhpcy53b3JsZHdpZGU7XG4gICAgfTtcblxuICAgIGluc3RhbGxtZW50c0luY29tcGxldGUgPSAoKSA9PiB7XG4gICAgICAgIGNvbnN0IHsgaW5zdGFsbG1lbnRzIH0gPSB0aGlzLnN0YXRlO1xuICAgICAgICBsZXQgdG90YWwgPSAwO1xuXG4gICAgICAgIGluc3RhbGxtZW50cy5mb3JFYWNoKGk9PntcbiAgICAgICAgICAgIHRvdGFsICs9IE51bWJlcihpLnZhbHVlKTtcbiAgICAgICAgfSk7XG5cbiAgICAgICAgcmV0dXJuIHRvdGFsICE9PSAxMDA7XG5cbiAgICB9O1xuXG4gICAgZ2V0RmVlID0gKHNhbGVzUGFja2FnZSkgPT4ge1xuICAgICAgICBjb25zdCBmZWVOdW1iZXIgPSBwYXJzZUZsb2F0KHNhbGVzUGFja2FnZS5mZWUpO1xuICAgICAgICByZXR1cm4gZmVlTnVtYmVyLnRvTG9jYWxlU3RyaW5nKCkgKyBcIiBcIiArIHRoaXMuZ2V0Q3VycmVuY3lTeW1ib2woKTtcbiAgICB9O1xuXG4gICAgZ2V0Q3VycmVuY3lTeW1ib2wgPSAoKSA9PiB7XG4gICAgICAgIGNvbnN0IHtjdXJyZW5jeX0gPSB0aGlzLnByb3BzO1xuICAgICAgICByZXR1cm4gKGN1cnJlbmN5ID09PSBcIkVVUlwiID8gXCLigqxcIiA6IFwiJFwiKTtcbiAgICB9O1xuXG4gICAgc29ydFNhbGVzUGFja2FnZXMgPSAoYSwgYikgPT4ge1xuXG4gICAgICAgIGxldCBhV29ybGR3aWRlID0gYS50ZXJyaXRvcmllc01ldGhvZCA9PT1cIldPUkxEV0lERVwiO1xuICAgICAgICBsZXQgYldvcmxkd2lkZSA9IGIudGVycml0b3JpZXNNZXRob2QgPT09XCJXT1JMRFdJREVcIjtcblxuICAgICAgICBsZXQgd29ybGR3aWRlID0gKCBhV29ybGR3aWRlICYmICFiV29ybGR3aWRlICkgPyAxIDogKChiV29ybGR3aWRlICYmICFhV29ybGR3aWRlKSA/IC0xIDogMCk7XG5cbiAgICAgICAgcmV0dXJuIHdvcmxkd2lkZSB8fHRoaXMuY29tcGFyZVByb3BlcnR5KGEudGVycml0b3JpZXMubGVuZ3RoLCBiLnRlcnJpdG9yaWVzLmxlbmd0aClcbiAgICAgICAgICAgIHx8IHRoaXMuY29tcGFyZVByb3BlcnR5KGEubmFtZSwgYi5uYW1lKTtcbiAgICB9O1xuXG4gICAgY29tcGFyZVByb3BlcnR5ID0gKGEsIGIpID0+ICB7XG4gICAgICAgIHJldHVybiAoYSA+IGIpID8gMSA6ICgoYiA+IGEpID8gLTEgOiAwKTtcbiAgICB9O1xuXG4gICAgcmVuZGVyKCl7XG4gICAgICAgIGNvbnN0IHsgb25SZW1vdmUsIGhpZGVCdXR0b25zLCBjdXJyZW5jeSwgZnVsbFNpemUsIHNvcnQsIGxpc3RpbmdJZCwgc2VsZWN0Q3VycmVuY3kgfSA9IHRoaXMucHJvcHM7XG4gICAgICAgIGxldCBpbnB1dFN0eWxlID0gKGZ1bGxTaXplKSA/IHsgbWF4V2lkdGg6ICdub25lJ30gOiBudWxsIDtcbiAgICAgICAgbGV0IHNhbGVzUGFja2FnZXMgPSB0aGlzLnByb3BzLnNhbGVzUGFja2FnZXM7XG5cbiAgICAgICAgaWYgKHNvcnQpIHNhbGVzUGFja2FnZXMuc29ydCh0aGlzLnNvcnRTYWxlc1BhY2thZ2VzKTtcbiAgICAgICAgcmV0dXJuIChcbiAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwic2FsZXMtcGFja2FnZS1mb3JtXCI+XG4gICAgICAgICAgICAgICAgeyB0aGlzLnJlbmRlck1vZGFsKCkgfVxuICAgICAgICAgICAgICAgIHsgdGhpcy5hbGxUZXJyaXRvcmllcygpIH1cbiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImJhc2UtZnVsbC1pbnB1dFwiIHN0eWxlPXtpbnB1dFN0eWxlfT5cbiAgICAgICAgICAgICAgICAgICAgPGxhYmVsPlxuICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9J2xhYmVsLXRleHQnPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHt0aGlzLmNvbnRleHQudChcIkNMX1NURVA0X1NBTEVTX0JVTkRMRVNcIil9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPGkgY2xhc3NOYW1lPVwiZmEgZmEtaW5mby1jaXJjbGUgdG9vbHRpcC1pY29uXCIgdGl0bGU9eydPZmZlciBpbmRpdmlkdWFsIHNhbGVzIGJ1bmRsZXMgdG8gYnV5ZXJzLiBBIHNhbGVzIGJ1bmRsZSBtYXkgY29uc2lzdCBvdXQgb2Ygb25lIG9yIG11bHRpcGxlIHRlcnJpdG9yaWVzLiBGb3IgZWFjaCBzYWxlcyBidW5kbGUsIHlvdSBjYW4gc2V0IGFuIGluZGl2aWR1YWwgcGF5bWVudCBtZXRob2QgKGZpeGVkIGZlZSBvciBiaWQpIGFuZCBwYXltZW50IHNjaGVkdWxlLid9Lz5cbiAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICAgICAgICAgICAgPEN1cnJlbmN5U2VsZWN0b3Igb25DbGljaz17c2VsZWN0Q3VycmVuY3l9IHNlbGVjdGVkPXtjdXJyZW5jeX0gLz5cbiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPSdjbGVhcmZpeCcvPlxuICAgICAgICAgICAgICAgICAgICA8L2xhYmVsPlxuXG4gICAgICAgICAgICAgICAgICAgIHshc2FsZXNQYWNrYWdlcy5sZW5ndGggJiYgdGhpcy5hZGRCdW5kbGVzQXZhaWxhYmxlKCkgJiYgKFxuICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9J3NhbGVzLWJ1bmRsZXMtcGxhY2Vob2xkZXInPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHt0aGlzLnJlbmRlckFkZFNhbGVzQnVuZGxlQnV0dG9uKCl9XG4gICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgICAgICAgKX1cblxuICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImNvbnRlbnRcIiBzdHlsZT17KGhpZGVCdXR0b25zKSA/IGNvbnRhaW5lclN0eWxlOiBzbWFsbENvbnRhaW5lclN0eWxlfT5cbiAgICAgICAgICAgICAgICAgICAgICAgIHsgc2FsZXNQYWNrYWdlcy5tYXAoIChzYWxlc1BhY2thZ2UsIGkpID0+IHtcblxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGxldCBleHRyYVRlcnJpdG9yaWVzID0gKCBzYWxlc1BhY2thZ2UudGVycml0b3JpZXNNZXRob2QgPT09IHRoaXMud29ybGR3aWRlRXhjbHVkaW5nKSA/IHNhbGVzUGFja2FnZS5leGNsdWRlZFRlcnJpdG9yaWVzIDogc2FsZXNQYWNrYWdlLnRlcnJpdG9yaWVzO1xuXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIDxkaXYgY2xhc3NOYW1lPVwic2FsZXMtcGFja2FnZS1jb250YWluZXJcIiBrZXk9e2l9PlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cInNhbGVzLXBhY2thZ2VcIiBrZXk9e1wic2FsZXMtcGFja2FnZS1cIisgaX0+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IHN0eWxlPXt7ZmxleCA6IDUsIGN1cnNvcjogJ2RlZmF1bHQnfX0+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAge3NhbGVzUGFja2FnZS5uYW1lfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZXh0cmFUZXJyaXRvcmllcyAmJiBleHRyYVRlcnJpdG9yaWVzLmxlbmd0aCA+IDMgJiYgPHNwYW5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHN0eWxlPXt7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY29sb3I6ICcjMkRBN0U2JyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0ZXh0RGVjb3JhdGlvbjogJ3VuZGVybGluZScsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbWFyZ2luTGVmdCA6IDVcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH19XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBvbkNsaWNrPXsoKSA9PiB7dGhpcy5zaG93QWxsVGVycml0b3JpZXMoZXh0cmFUZXJyaXRvcmllcyl9fT5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHtcIitcIiArIChleHRyYVRlcnJpdG9yaWVzLmxlbmd0aCAtIDMpfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3NwYW4+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XG5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHtoaWRlQnV0dG9ucyAmJiA8TGljZW5zZURvd25sb2FkZXJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0eXBlPXtcIkJVTkRMRVwifVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlkPXtzYWxlc1BhY2thZ2UuaWR9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbGlzdGluZ0lkPXtsaXN0aW5nSWR9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc3R5bGU9e3tmbGV4IDogMSwgZGlzcGxheTogJ2ZsZXgnLCBqdXN0aWZ5Q29udGVudDogJ2NlbnRlcid9fSAvPn1cblxuXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB7c2FsZXNQYWNrYWdlLnRlcnJpdG9yaWVzLmxlbmd0aCAhPT0gMSAmJjxkaXYgc3R5bGU9e3sgbWFyZ2luTGVmdDogMjAsIGp1c3RpZnlDb250ZW50OiBcImZsZXgtZW5kXCIsIGRpc3BsYXk6IFwiZmxleFwifX0+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGltZyBzdHlsZT17eyAgICBtYXJnaW5Ub3A6ICcycHgnLHdpZHRoOiAyNiwgaGVpZ2h0OiAyM319IHNyYz17dGhpcy5maXhlZEljb259Lz5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2Pn1cblxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAge3NhbGVzUGFja2FnZS5zYWxlc01ldGhvZCA9PT0gXCJCSURESU5HXCIgJiY8ZGl2IHN0eWxlPXt7IG1hcmdpbkxlZnQ6IDIwLCBqdXN0aWZ5Q29udGVudDogXCJmbGV4LWVuZFwiLCBkaXNwbGF5OiBcImZsZXhcIn19PlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpbWcgc3R5bGU9e3t3aWR0aDogMjMsIGhlaWdodDogMjN9fSBzcmM9e3RoaXMuYmlkSWNvbn0vPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+fVxuXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgKCBzYWxlc1BhY2thZ2Uuc2FsZXNNZXRob2QgIT09IFwiQklERElOR1wiIHx8ICAoIHNhbGVzUGFja2FnZS5zYWxlc01ldGhvZCA9PT0gXCJCSURESU5HXCIgJiYgc2FsZXNQYWNrYWdlLmZlZSA+IDAgKSApXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJiY8ZGl2IHN0eWxlPXt7IG1hcmdpbkxlZnQ6IDIwLCBqdXN0aWZ5Q29udGVudDogXCJmbGV4LWVuZFwiLCBkaXNwbGF5OiBcImZsZXhcIiwgY3Vyc29yOiAnZGVmYXVsdCd9fT5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAge3RoaXMuZ2V0RmVlKHNhbGVzUGFja2FnZSl9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB7IWhpZGVCdXR0b25zICYmIDxpbWcgc3R5bGU9e3t3aWR0aDogMjMsIGhlaWdodDogMjMsIGN1cnNvcjogJ3BvaW50ZXInLCBtYXJnaW46ICcxNXB4IDVweCAwJ319XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzcmM9e3RoaXMuY2FuY2VsSWNvbn1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG9uQ2xpY2s9eygpID0+IHsgb25SZW1vdmUoaSkgfX0vPn1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgeyFoaWRlQnV0dG9ucyAmJiA8aW1nIHN0eWxlPXt7d2lkdGg6IDIzLCBoZWlnaHQ6IDIzLCBjdXJzb3I6ICdwb2ludGVyJywgbWFyZ2luOiAnMTVweCA1cHggMCcsIGNvbG9yOiAnZ3JleSd9fVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc3JjPXt0aGlzLmRyYWZ0SWNvbn1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG9uQ2xpY2s9eygpID0+IHsgdGhpcy5lZGl0U2FsZXNQYWNrYWdlKHNhbGVzUGFja2FnZSwgaSkgfX0vPn1cblxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICAgICAgICAgICAgfSl9XG5cbiAgICAgICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgICAgPC9kaXY+XG5cbiAgICAgICAgICAgICAgICB7IWhpZGVCdXR0b25zICYmIDxkaXYgc3R5bGU9e3tkaXNwbGF5IDogXCJmbGV4XCIsIGp1c3RpZnlDb250ZW50OiBcImZsZXgtZW5kXCJ9fT5cbiAgICAgICAgICAgICAgICAgICAge3RoaXMuYWRkQnVuZGxlc0F2YWlsYWJsZSgpICYmIHRoaXMucmVuZGVyQWRkU2FsZXNCdW5kbGVCdXR0b24oKSB9XG4gICAgICAgICAgICAgICAgICAgIHtzYWxlc1BhY2thZ2VzLmxlbmd0aCA+IDAgJiYgPGRpdiBjbGFzc05hbWU9e1wiYWRkLWl0ZW1cIn0gb25DbGljaz17dGhpcy5wcm9wcy5vblJlbW92ZUFsbH0+XG4gICAgICAgICAgICAgICAgICAgICAgICA8aSBjbGFzc05hbWU9XCJmYSBmYS1taW51cy1jaXJjbGVcIi8+XG4gICAgICAgICAgICAgICAgICAgICAgICB7dGhpcy5jb250ZXh0LnQoXCJDTF9TVEVQNF9SRU1PVkVfQUxMX0JVTkRMRVNcIil9XG4gICAgICAgICAgICAgICAgICAgIDwvZGl2Pn1cbiAgICAgICAgICAgICAgICA8L2Rpdj59XG5cbiAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICApXG5cbiAgICB9XG5cbiAgICByZW5kZXJBZGRTYWxlc0J1bmRsZUJ1dHRvbigpIHtcbiAgICAgICAgcmV0dXJuIChcbiAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPXtcImFkZC1pdGVtXCJ9IG9uQ2xpY2s9eygpPT57dGhpcy5zZXRTdGF0ZSh7aXNPcGVuOnRydWUsIGlzTmV3IDogdHJ1ZX0pfX0+XG4gICAgICAgICAgICAgICAgPGkgY2xhc3NOYW1lPVwiZmEgZmEtcGx1cy1jaXJjbGVcIi8+XG4gICAgICAgICAgICAgICAge3RoaXMuY29udGV4dC50KFwiQ0xfU1RFUDRfQUREX1NBTEVTX0JVTkRMRVwiKX1cbiAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICApO1xuICAgIH1cbn1cblxuU2FsZXNQYWNrYWdlRm9ybS5jb250ZXh0VHlwZXMgPSB7XG4gICAgdDogUHJvcFR5cGVzLmZ1bmMuaXNSZXF1aXJlZFxufTtcblxuZXhwb3J0IGRlZmF1bHQgU2FsZXNQYWNrYWdlRm9ybTtcblxuXG4vLyBXRUJQQUNLIEZPT1RFUiAvL1xuLy8gLi9zcmMvQXBwQnVuZGxlL1Jlc291cmNlcy9wdWJsaWMvamF2YXNjcmlwdC9zZWxsL2NvbXBvbmVudHMvU2FsZXNQYWNrYWdlRm9ybS5qcyIsImltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5cbmltcG9ydCBTZWxsQnV0dG9ucyBmcm9tIFwiLi4vY29udGFpbmVycy9TZWxsQnV0dG9uc1wiO1xuaW1wb3J0IFNlbGxGb3JtU3RlcHMgZnJvbSBcIi4uL2NvbnRhaW5lcnMvU2VsbEZvcm1TdGVwc1wiO1xuaW1wb3J0IFNlbGxGb3JtU3RlcDEgZnJvbSBcIi4uL2NvbnRhaW5lcnMvU2VsbEZvcm1TdGVwMVwiO1xuaW1wb3J0IFNlbGxGb3JtU3RlcDIgZnJvbSBcIi4uL2NvbnRhaW5lcnMvU2VsbEZvcm1TdGVwMlwiO1xuaW1wb3J0IFNlbGxGb3JtU3RlcDMgZnJvbSBcIi4uL2NvbnRhaW5lcnMvU2VsbEZvcm1TdGVwM1wiO1xuaW1wb3J0IFNlbGxGb3JtU3RlcDQgZnJvbSBcIi4uL2NvbnRhaW5lcnMvU2VsbEZvcm1TdGVwNFwiO1xuaW1wb3J0IFJldmlld0FuZFNpZ24gZnJvbSBcIi4uL2NvbnRhaW5lcnMvUmV2aWV3QW5kU2lnblwiO1xuaW1wb3J0IFNlbGVjdG9yIGZyb20gXCIuLi8uLi9tYWluL2NvbXBvbmVudHMvU2VsZWN0b3JcIjtcbmltcG9ydCB7IGNvbm5lY3QgfSBmcm9tIFwicmVhY3QtcmVkdXhcIjtcbmltcG9ydCBzdG9yZSBmcm9tICcuLi8uLi9tYWluL3N0b3JlJztcbmltcG9ydCBSZWFjdFRvb2x0aXAgZnJvbSAncmVhY3QtdG9vbHRpcCc7XG5pbXBvcnQge3VwZGF0ZVByb2ZpbGV9IGZyb20gXCIuLi8uLi9tYWluL2FjdGlvbnMvdXNlckFjdGlvbnNcIjtcblxuY2xhc3MgU2VsbEZvcm0gZXh0ZW5kcyBSZWFjdC5Db21wb25lbnQge1xuICAgIGNvbnN0cnVjdG9yKHByb3BzKSB7XG4gICAgICAgIHN1cGVyKHByb3BzKTtcblxuICAgICAgICBsZXQgY29udGVudCA9IChwcm9wcy5jb250ZW50LmluaXRpYWxpemVkKSA/IHByb3BzLmNvbnRlbnQgOiBKU09OLnBhcnNlKHByb3BzLm5ld0xpc3RpbmcpO1xuICAgICAgICBjb250ZW50Lmp1cmlzZGljdGlvbiA9IHtcbiAgICAgICAgICAgIGxhYmVsOiBjb250ZW50LmNvbXBhbnkuY291bnRyeS5uYW1lLFxuICAgICAgICAgICAgdmFsdWU6IGNvbnRlbnQuY29tcGFueS5jb3VudHJ5Lm5hbWVcbiAgICAgICAgfTtcblxuICAgICAgICBjb250ZW50ID0gQ29udGVudEFyZW5hLlV0aWxzLmNvbnRlbnRQYXJzZXJGcm9tU2VydmVyKGNvbnRlbnQpO1xuXG4gICAgICAgIGlmIChwcm9wcy5tYXRjaCAmJiBwcm9wcy5tYXRjaC5wYXJhbXMuc3RlcCApIHtcblxuICAgICAgICAgICAgY29udGVudC5zdGVwID0gKHByb3BzLm1hdGNoLnBhcmFtcy5zdGVwID09PSBcInNpZ25cIikgPyA1IDogTnVtYmVyKHByb3BzLm1hdGNoLnBhcmFtcy5zdGVwKTtcbiAgICAgICAgfVxuXG4gICAgICAgIHRoaXMuc3RhdGUgPSB7XG4gICAgICAgICAgICBjb250ZW50IDogY29udGVudCxcbiAgICAgICAgICAgIHNob3dTZWFyY2ggOiBwcm9wcy5tYXRjaC5wYXJhbXMuY3VzdG9tSWQgPT09IFwibmV3XCJcbiAgICAgICAgfTtcblxuICAgICAgICBzdG9yZS5zdWJzY3JpYmUoKGEpID0+IHtcbiAgICAgICAgICAgIC8vY29uc29sZS5sb2coc3RvcmUuZ2V0U3RhdGUoKSk7XG4gICAgICAgIH0pO1xuICAgIH1cblxuICAgIGNvbXBvbmVudERpZE1vdW50ID0gKCkgPT57XG4gICAgICAgIHRoaXMucHJvcHMuY29udGVudExpc3RpbmdJbml0KCB0aGlzLnN0YXRlLmNvbnRlbnQgKTtcbiAgICAgICAgdGhpcy5wcm9wcy51cGRhdGVQcm9maWxlKCdTRUxMRVInKTtcbiAgICB9IDtcblxuICAgIHJlbmRlcigpIHtcbiAgICAgICAgY29uc3Qge2hpc3Rvcnl9ID0gdGhpcy5wcm9wcztcbiAgICAgICAgY29uc3QgZGVmYXVsdFJpZ2h0c1BhY2thZ2UgPSBKU09OLnBhcnNlKHRoaXMucHJvcHMucmlnaHRzKVxuICAgICAgICByZXR1cm4gKFxuICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJtYW5hZ2VyLWNvbnRlbnRcIj5cbiAgICAgICAgICAgICAgICA8U2VsZWN0b3Igc3R5bGU9e3t6SW5kZXg6IDEwMH19Lz5cbiAgICAgICAgICAgICAgICA8U2VsbEZvcm1TdGVwcyBoaXN0b3J5PXtoaXN0b3J5fSAvPlxuICAgICAgICAgICAgICAgIDxTZWxsRm9ybVN0ZXAxIGhpc3Rvcnk9e2hpc3Rvcnl9IHNob3dTZWFyY2g9e3RoaXMuc3RhdGUuc2hvd1NlYXJjaH0gLz5cbiAgICAgICAgICAgICAgICA8U2VsbEZvcm1TdGVwMiBwYWNrYWdlcz17dGhpcy5wcm9wcy5wYWNrYWdlc30gLz5cbiAgICAgICAgICAgICAgICA8U2VsbEZvcm1TdGVwMyBwYWNrYWdlcz17dGhpcy5wcm9wcy5wYWNrYWdlc30gLz5cbiAgICAgICAgICAgICAgICA8U2VsbEZvcm1TdGVwNCBwYWNrYWdlcz17dGhpcy5wcm9wcy5wYWNrYWdlc30gLz5cbiAgICAgICAgICAgICAgICA8UmV2aWV3QW5kU2lnbiBoaXN0b3J5PXtoaXN0b3J5fSBkZWZhdWx0UmlnaHRzUGFja2FnZT17ZGVmYXVsdFJpZ2h0c1BhY2thZ2V9Lz5cbiAgICAgICAgICAgICAgICA8U2VsbEJ1dHRvbnMgaGlzdG9yeT17aGlzdG9yeX0vPlxuICAgICAgICAgICAgICAgIDxSZWFjdFRvb2x0aXAgaHRtbD17dHJ1ZX0gLz5cbiAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICApO1xuICAgIH1cbn1cblxuY29uc3QgbWFwU3RhdGVUb1Byb3BzID0gKCBzdGF0ZSwgb3duUHJvcHMpID0+IHtcbiAgICByZXR1cm4gb3duUHJvcHM7XG59O1xuXG5jb25zdCBtYXBEaXNwYXRjaFRvUHJvcHMgPSBkaXNwYXRjaCA9PiB7XG4gICAgcmV0dXJuIHtcbiAgICAgICAgY29udGVudExpc3RpbmdJbml0IDogKGNvbnRlbnQpID0+IGRpc3BhdGNoKHtcbiAgICAgICAgICAgIHR5cGUgOiAnQ09OVEVOVF9JTklUJyxcbiAgICAgICAgICAgIGNvbnRlbnQ6IGNvbnRlbnRcbiAgICAgICAgfSksXG4gICAgICAgIHVwZGF0ZVByb2ZpbGUgOiBwcm9maWxlID0+ZGlzcGF0Y2godXBkYXRlUHJvZmlsZShwcm9maWxlKSksXG4gICAgfVxufTtcblxuZXhwb3J0IGRlZmF1bHQgY29ubmVjdChcbiAgICBtYXBTdGF0ZVRvUHJvcHMsXG4gICAgbWFwRGlzcGF0Y2hUb1Byb3BzXG4pKFNlbGxGb3JtKVxuXG5cblxuXG5cblxuXG5cbi8vIFdFQlBBQ0sgRk9PVEVSIC8vXG4vLyAuL3NyYy9BcHBCdW5kbGUvUmVzb3VyY2VzL3B1YmxpYy9qYXZhc2NyaXB0L3NlbGwvY29tcG9uZW50cy9TZWxsRm9ybS5qcyIsImltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgbW9tZW50IGZyb20gJ21vbWVudCc7XG5pbXBvcnQgUm91bmQgZnJvbSAnLi4vY29tcG9uZW50cy9Sb3VuZCc7XG5pbXBvcnQgU3RhdGljUm91bmQgZnJvbSAnLi4vY29tcG9uZW50cy9TdGF0aWNSb3VuZCc7XG5cbmV4cG9ydCBjb25zdCBEZXNjcmlwdGlvbiA9ICh7dmFsdWUsIG9uQ2hhbmdlLCB0aXRsZT0gXCJFbnRlciBhIGRlc2NyaXB0aW9uXCIsIHBsYWNlaG9sZGVyPVwiUHJvdmlkZSBhIHNob3J0IGRlc2NyaXB0aW9uIG9mIHlvdXIgY29udGVudCBsaXN0aW5nXCJ9KSA9PiAoXG4gICAgPGRpdiBjbGFzc05hbWU9XCJ0ZXh0YXJlYS1pbnB1dFwiPlxuICAgICAgICA8bGFiZWw+e3RpdGxlfSAob3B0aW9uYWwpPC9sYWJlbD5cbiAgICAgICAgPHRleHRhcmVhIG9uQ2hhbmdlPXtvbkNoYW5nZX0gdmFsdWU9e3ZhbHVlfSBwbGFjZWhvbGRlcj17cGxhY2Vob2xkZXJ9Lz5cbiAgICA8L2Rpdj5cbik7XG5cbmV4cG9ydCBjb25zdCBUaXRsZUJhciA9ICh7dGl0bGUsIHN1YnRpdGxlLCBpbmZvVGV4dH0pID0+IChcbiAgICA8ZGl2IGNsYXNzTmFtZT1cInRpdGxlLWJhclwiPlxuICAgICAgICA8aHIvPlxuICAgICAgICA8ZGl2IGNsYXNzTmFtZT17XCJ0aXRsZVwifT57dGl0bGV9PC9kaXY+XG4gICAgICAgIDxkaXYgY2xhc3NOYW1lPXtcInN1YnRpdGxlXCJ9PntzdWJ0aXRsZX08L2Rpdj5cbiAgICAgICAge2luZm9UZXh0ICYmIChcbiAgICAgICAgICAgIDxpIGNsYXNzTmFtZT1cImZhIGZhLWluZm8tY2lyY2xlIHRvb2x0aXAtaWNvblwiIHRpdGxlPXtpbmZvVGV4dH0vPlxuICAgICAgICApfVxuICAgIDwvZGl2PlxuKTtcblxuZXhwb3J0IGNvbnN0IFN1bW1hcnlUZXh0ID0gKHtzcG9ydHMsIHNwb3J0Q2F0ZWdvcnksIHRvdXJuYW1lbnQsIHNlYXNvbnN9KSA9PiB7XG5cbiAgICBsZXQgc3VtbWFyeSA9IFwiXCIsIHJvdW5kcyA9IFtdLCBmaXh0dXJlcyA9IFtdLCBtYXRjaGVzID0gW107XG5cbiAgICBpZiAoc3BvcnRzLmxlbmd0aCA9PT0gMCAmJiBzcG9ydENhdGVnb3J5Lmxlbmd0aCA9PT0gMCAmJiB0b3VybmFtZW50Lmxlbmd0aCA9PT0gMCkgcmV0dXJuIG51bGw7XG5cbiAgICBzdW1tYXJ5ICs9IHNwb3J0c1swXS5uYW1lO1xuICAgIGlmICggc3BvcnRDYXRlZ29yeS5sZW5ndGggPiAwICkgIHN1bW1hcnkgKz0gXCIgLSBcIiArIHNwb3J0Q2F0ZWdvcnlbMF0ubmFtZTtcbiAgICBpZiAoIHRvdXJuYW1lbnQubGVuZ3RoID4gMCApICBzdW1tYXJ5ICs9IFwiIC0gXCIgKyB0b3VybmFtZW50WzBdLm5hbWU7XG4gICAgaWYgKCBzZWFzb25zLmxlbmd0aCA+IDAgKXtcbiAgICAgICAgY29uc3Qgc2Vhc29uc1N0ciA9IFtdO1xuICAgICAgICBzZWFzb25zLmZvckVhY2gocyA9PiB7XG4gICAgICAgICAgICBjb25zdCBzdHIgPSBzLmN1c3RvbSA/IGAke3MuZnJvbX0vJHtzLnRvfWAgOiBzLnllYXI7XG4gICAgICAgICAgICBzZWFzb25zU3RyLnB1c2goc3RyKTtcbiAgICAgICAgICAgIGlmICggcy5maXh0dXJlcyApIGZpeHR1cmVzID0gWy4uLmZpeHR1cmVzLCAuLi5zLmZpeHR1cmVzXTtcbiAgICAgICAgfSk7XG5cbiAgICAgICAgaWYgKHNlYXNvbnNTdHIubGVuZ3RoKSB7XG4gICAgICAgICAgICBzdW1tYXJ5ICs9IFwiIC0gXCIgKyBzZWFzb25zU3RyLmpvaW4oJyAtICcpO1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgaWYgKCByb3VuZHMubGVuZ3RoIDw9IDEgJiYgZml4dHVyZXMubGVuZ3RoID09PSAxICkgIHN1bW1hcnkgKz0gYCAtICR7Zml4dHVyZXNbMF0ubmFtZX0gKCR7bW9tZW50KGZpeHR1cmVzWzBdLmRhdGUpLmZvcm1hdCgnREQtTU0tWVlZWScpfSlgO1xuICAgIGlmICggcm91bmRzLmxlbmd0aCA8PSAxICYmIGZpeHR1cmVzLmxlbmd0aCA+IDEgKSAgc3VtbWFyeSArPSBcIiAtIFwiICsgZml4dHVyZXMubGVuZ3RoICsgXCIgRml4dHVyZXNcIjtcbiAgICBpZiAoIHJvdW5kcy5sZW5ndGggPD0gMSAmJiBtYXRjaGVzLmxlbmd0aCA9PT0gMSApICBzdW1tYXJ5ICs9IFwiIC0gXCIgKyBtYXRjaGVzWzBdLmNvbXBldGl0b3JzLm1hcChmdW5jdGlvbiAoY29tcGV0aXRvcikge1xuICAgICAgICByZXR1cm4gY29tcGV0aXRvci5uYW1lIDtcbiAgICB9KS5qb2luKFwiIHZzIFwiKTtcbiAgICBpZiAoIHJvdW5kcy5sZW5ndGggPT09IDEgJiYgbWF0Y2hlcy5sZW5ndGggIT09IDEgKSAgc3VtbWFyeSArPSBcIiAtIFwiICsgcm91bmRzWzBdO1xuICAgIGlmICggcm91bmRzLmxlbmd0aCA+IDEpIHN1bW1hcnkgKz0gXCIgLSBNdWx0aXBsZSByb3VuZHNcIjtcblxuXG4gICAgcmV0dXJuIDxzcGFuPntzdW1tYXJ5fTwvc3Bhbj47XG59O1xuXG5leHBvcnQgY29uc3QgTmV3Q2F0ZWdvcnkgPSAoe29uQ2xpY2ssIHNob3dDbG9zZSwgb25CbHVyLCB2YWx1ZX0pID0+IChcbiAgICA8ZGl2IGNsYXNzTmFtZT1cImJhc2UtaW5wdXRcIj5cbiAgICAgICAgPGxhYmVsPkNvdW50cnkvQ2F0ZWdvcnk8L2xhYmVsPlxuICAgICAgICA8aW5wdXRcbiAgICAgICAgICAgIGNsYXNzTmFtZT1cIm5ldy1jYXRlZ29yeVwiXG4gICAgICAgICAgICB0eXBlPVwidGV4dFwiXG4gICAgICAgICAgICBwbGFjZWhvbGRlcj1cIkVudGVyIENvdW50cnkvQ2F0ZWdvcnlcIlxuICAgICAgICAgICAgb25CbHVyPXtvbkJsdXJ9XG4gICAgICAgICAgICBkZWZhdWx0VmFsdWU9e3ZhbHVlfS8+XG4gICAgICAgIHsgc2hvd0Nsb3NlICYmIDxidXR0b24gb25DbGljaz17b25DbGlja30gY2xhc3NOYW1lPXtcInN0YW5kYXJkLWJ1dHRvblwifT48aSBjbGFzc05hbWU9XCJmYSBmYS1jbG9zZVwiLz48L2J1dHRvbj59XG4gICAgPC9kaXY+XG4pO1xuXG5leHBvcnQgY29uc3QgTmV3VG91cm5hbWVudCA9ICh7b25DbGljaywgc2hvd0Nsb3NlLCBvbkJsdXIsIHZhbHVlfSkgPT4gKFxuICAgIDxkaXYgY2xhc3NOYW1lPVwiYmFzZS1pbnB1dFwiPlxuICAgICAgICA8bGFiZWw+Q29tcGV0aXRpb248L2xhYmVsPlxuICAgICAgICA8aW5wdXRcbiAgICAgICAgICAgIGNsYXNzTmFtZT1cIm5ldy1jYXRlZ29yeVwiXG4gICAgICAgICAgICB0eXBlPVwidGV4dFwiXG4gICAgICAgICAgICBvbkJsdXI9e29uQmx1cn1cbiAgICAgICAgICAgIGRlZmF1bHRWYWx1ZT17dmFsdWV9XG4gICAgICAgICAgICBwbGFjZWhvbGRlcj1cIkVudGVyIGNvbXBldGl0aW9uIG5hbWVcIi8+XG4gICAgICAgIHsgc2hvd0Nsb3NlICYmIDxidXR0b24gb25DbGljaz17b25DbGlja30gY2xhc3NOYW1lPXtcInN0YW5kYXJkLWJ1dHRvblwifT48aSBjbGFzc05hbWU9XCJmYSBmYS1jbG9zZVwiLz48L2J1dHRvbj59XG4gICAgPC9kaXY+XG4pO1xuXG5leHBvcnQgY29uc3QgU2NoZWR1bGVzID0gKHtzZWFzb24sIHNlYXNvbnN9KSA9PiAoXG4gICAgPGRpdiBjbGFzc05hbWU9XCJzY2hlZHVsZVwiPlxuICAgICAgICB7IHNlYXNvbnMgJiYgc2Vhc29uc1tzZWFzb25dICYmIHNlYXNvbnNbc2Vhc29uXS5zY2hlZHVsZXMgJiYgT2JqZWN0LmtleXMoc2Vhc29uc1tzZWFzb25dLnNjaGVkdWxlcykubWFwKCggbnVtYmVyLCBpICkgPT4ge1xuICAgICAgICAgICAgcmV0dXJuIDxSb3VuZCBzZWFzb25zPXtzZWFzb25zfSBrZXk9e2l9IHJvdW5kPXtudW1iZXJ9IHNlYXNvbj17c2Vhc29ufSAvPlxuICAgICAgICB9KSB9XG4gICAgPC9kaXY+XG4pO1xuXG5cbmV4cG9ydCBjb25zdCBTdGF0aWNTY2hlZHVsZXMgPSAoe3NlYXNvbiwgc2Vhc29uc30pID0+IChcbiAgICA8ZGl2IGNsYXNzTmFtZT1cInNjaGVkdWxlXCI+XG4gICAgICAgIHsgc2Vhc29ucyAmJiBzZWFzb25zW3NlYXNvbl0gJiYgc2Vhc29uc1tzZWFzb25dLnNjaGVkdWxlcyAmJiBPYmplY3Qua2V5cyhzZWFzb25zW3NlYXNvbl0uc2NoZWR1bGVzKS5tYXAoKCBudW1iZXIsIGkgKSA9PiB7XG4gICAgICAgICAgICByZXR1cm4gPFN0YXRpY1JvdW5kIHNlYXNvbnM9e3NlYXNvbnN9IGtleT17aX0gcm91bmQ9e251bWJlcn0gc2Vhc29uPXtzZWFzb259IC8+XG4gICAgICAgIH0pIH1cbiAgICA8L2Rpdj5cbik7XG5cblxuZXhwb3J0IGNsYXNzIFNwb3J0U2VsZWN0b3IgZXh0ZW5kcyBSZWFjdC5Db21wb25lbnQge1xuICAgIGNvbnN0cnVjdG9yKHByb3BzKSB7XG4gICAgICAgIHN1cGVyKHByb3BzKTtcbiAgICAgICAgdGhpcy5zdGF0ZSA9IHtcbiAgICAgICAgfTtcbiAgICB9XG5cbiAgICBoYW5kbGUgPSAoZSkgPT4ge1xuICAgICAgICBjb25zdCB7b25VcGRhdGVOZXd9ID0gdGhpcy5wcm9wcztcblxuICAgICAgICBpZiAob25VcGRhdGVOZXcpIG9uVXBkYXRlTmV3KGUudGFyZ2V0LnZhbHVlKTtcbiAgICB9O1xuXG4gICAgcmVuZGVyKCl7XG4gICAgICAgIGNvbnN0IHtzcG9ydHMsIGluZGV4fSA9IHRoaXMucHJvcHM7XG4gICAgICAgIHJldHVybiAoXG4gICAgICAgICAgICA8ZGl2PlxuICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiYmFzZS1pbnB1dFwiPlxuICAgICAgICAgICAgICAgICAgICA8bGFiZWw+U3BvcnQ8L2xhYmVsPlxuICAgICAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgICAgICAhdGhpcy5wcm9wcy5pc0N1c3RvbSAmJlxuICAgICAgICAgICAgICAgICAgICAgICAgPGlucHV0IHR5cGU9XCJ0ZXh0XCJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YWx1ZT17dGhpcy5wcm9wcy52YWx1ZX1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICByZWFkT25seT17dHJ1ZX1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBvbkNsaWNrPXt0aGlzLnByb3BzLm9uQ2xpY2t9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcGxhY2Vob2xkZXI9e1wiZS5nLiBTb2NjZXJcIn0gIC8+XG4gICAgICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgICAgICB0aGlzLnByb3BzLmlzQ3VzdG9tICYmXG4gICAgICAgICAgICAgICAgICAgICAgICA8aW5wdXRcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjbGFzc05hbWU9XCJuZXctc3BvcnRcIlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHR5cGU9XCJ0ZXh0XCJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YWx1ZT17c3BvcnRzW2luZGV4XS52YWx1ZX1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBvbkNoYW5nZT17dGhpcy5oYW5kbGV9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcGxhY2Vob2xkZXI9XCJFbnRlciBzcG9ydFwiLz5cbiAgICAgICAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgICAgICAgIHsgKCB0aGlzLnByb3BzLmlzQ3VzdG9tIHx8IHRoaXMucHJvcHMuc2hvd0Nsb3NlICkgJiZcbiAgICAgICAgICAgICAgICAgICAgICAgIDxidXR0b24gY2xhc3NOYW1lPVwic3RhbmRhcmQtYnV0dG9uXCIgb25DbGljaz17dGhpcy5wcm9wcy5yZW1vdmV9PlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpIGNsYXNzTmFtZT1cImZhIGZhLWNsb3NlXCIvPlxuICAgICAgICAgICAgICAgICAgICAgICAgPC9idXR0b24+XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgICB7dGhpcy5wcm9wcy5zaG93QWRkTmV3ICYmXG4gICAgICAgICAgICAgICAgPGJ1dHRvbiBzdHlsZT17e21hcmdpbkJvdHRvbTogXCIyNXB4XCJ9fSBjbGFzc05hbWU9e1wibGluay1idXR0b25cIn0gb25DbGljaz17dGhpcy5wcm9wcy5hZGRTcG9ydFNlbGVjdG9yfT5BZGQgc3BvcnQ8L2J1dHRvbj4gfVxuICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgIClcbiAgICB9XG59XG5cblxuLy8gV0VCUEFDSyBGT09URVIgLy9cbi8vIC4vc3JjL0FwcEJ1bmRsZS9SZXNvdXJjZXMvcHVibGljL2phdmFzY3JpcHQvc2VsbC9jb21wb25lbnRzL1NlbGxGb3JtSXRlbXMuanMiLCJpbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xuaW1wb3J0IE1hdGNoIGZyb20gJy4vTWF0Y2gnO1xuaW1wb3J0IHtjb25uZWN0fSBmcm9tIFwicmVhY3QtcmVkdXhcIjtcblxuY2xhc3MgU3RhdGljUm91bmQgZXh0ZW5kcyBSZWFjdC5Db21wb25lbnQge1xuXG4gICAgY29uc3RydWN0b3IocHJvcHMpIHtcbiAgICAgICAgc3VwZXIocHJvcHMpO1xuICAgICAgICB0aGlzLnN0YXRlID0ge1xuICAgICAgICAgICAgc2Vhc29ucyA6IHByb3BzLnNlYXNvbnMsXG4gICAgICAgICAgICBzZWFzb24gOiBwcm9wcy5zZWFzb24sXG4gICAgICAgICAgICByb3VuZCA6IHByb3BzLnJvdW5kXG4gICAgICAgIH07XG4gICAgfVxuXG4gICAgdG9nZ2xlID0gKGUpID0+IHtcbiAgICAgICAgY29uc3QgeyBzZWFzb25zLCBzZWFzb24sIHJvdW5kLCB1cGRhdGVGcm9tTXVsdGlwbGUgfSA9IHRoaXMucHJvcHM7XG4gICAgICAgIGxldCBzZWxlY3RlZCA9IGUudGFyZ2V0LmNoZWNrZWQ7XG4gICAgICAgIGxldCBzY2hlZHVsZXMgPSBzZWFzb25zW3NlYXNvbl0uc2NoZWR1bGVzO1xuICAgICAgICBsZXQgYWN0aXZlUm91bmQgPSBzY2hlZHVsZXNbcm91bmRdO1xuICAgICAgICBhY3RpdmVSb3VuZC5zZWxlY3RlZCA9IHNlbGVjdGVkO1xuXG4gICAgICAgIHVwZGF0ZUZyb21NdWx0aXBsZShcInNlYXNvbnNcIiwgc2Vhc29uLCBcInNjaGVkdWxlc1wiLCBzY2hlZHVsZXMpO1xuXG4gICAgICAgIGUuc3RvcFByb3BhZ2F0aW9uKCk7XG4gICAgICAgIHRoaXMuc2VsZWN0QWxsKHNlbGVjdGVkKTtcbiAgICB9O1xuXG4gICAgdG9nZ2xlTWF0Y2hlcyA9IChlKSA9PiB7XG4gICAgICAgIGNvbnN0IHsgc2Vhc29ucywgc2Vhc29uLCByb3VuZCB9ID0gdGhpcy5zdGF0ZTtcblxuICAgICAgICBsZXQgc2NoZWR1bGVzID0gc2Vhc29uc1tzZWFzb25dLnNjaGVkdWxlcztcbiAgICAgICAgbGV0IGFjdGl2ZVJvdW5kID0gc2NoZWR1bGVzW3JvdW5kXTtcbiAgICAgICAgYWN0aXZlUm91bmQuc2hvd01hdGNoZXMgPSAhYWN0aXZlUm91bmQuc2hvd01hdGNoZXM7XG4gICAgICAgIHRoaXMuc2V0U3RhdGUoe3NlYXNvbnN9KTtcbiAgICAgICAgZS5zdG9wUHJvcGFnYXRpb24oKTtcbiAgICB9O1xuXG4gICAgc2VsZWN0QWxsID0gKHNlbGVjdGVkKSA9PiB7XG4gICAgICAgIGNvbnN0IHsgc2Vhc29ucywgc2Vhc29uLCByb3VuZCwgdXBkYXRlRnJvbU11bHRpcGxlIH0gPSB0aGlzLnByb3BzO1xuXG4gICAgICAgIGxldCBzY2hlZHVsZXMgPSBzZWFzb25zW3NlYXNvbl0uc2NoZWR1bGVzO1xuICAgICAgICBsZXQgYWN0aXZlUm91bmQgPSBzY2hlZHVsZXNbcm91bmRdO1xuICAgICAgICBhY3RpdmVSb3VuZC5tYXRjaGVzLmZvckVhY2gobWF0Y2ggPT4geyBtYXRjaC5zZWxlY3RlZCA9IHNlbGVjdGVkIH0pO1xuICAgICAgICB1cGRhdGVGcm9tTXVsdGlwbGUoXCJzZWFzb25zXCIsIHNlYXNvbiwgXCJzY2hlZHVsZXNcIiwgc2NoZWR1bGVzKTtcblxuICAgIH07XG5cbiAgICBnZXRTZWxlY3RlZCA9ICgpID0+IHtcbiAgICAgICAgY29uc3QgeyBzZWFzb25zLCBzZWFzb24sIHJvdW5kIH0gPSB0aGlzLnByb3BzO1xuXG4gICAgICAgIGxldCBzY2hlZHVsZSA9IHNlYXNvbnNbc2Vhc29uXS5zY2hlZHVsZXM7XG4gICAgICAgIGxldCBhY3RpdmVSb3VuZCA9IHNjaGVkdWxlW3JvdW5kXTtcbiAgICAgICAgcmV0dXJuIEFycmF5LmZyb20oIGFjdGl2ZVJvdW5kLm1hdGNoZXMudmFsdWVzKCkgKS5maWx0ZXIobSA9PihtLnNlbGVjdGVkKSkubGVuZ3RoXG4gICAgfTtcblxuICAgIGNvbXBsZXRlU2Vhc29uID0gKCkgPT4ge1xuICAgICAgICBjb25zdCB7IHNlYXNvbnMsIHNlYXNvbiwgcm91bmQgfSA9IHRoaXMucHJvcHM7XG4gICAgICAgIGxldCBzY2hlZHVsZSA9IHNlYXNvbnNbc2Vhc29uXS5zY2hlZHVsZXM7XG4gICAgICAgIHJldHVybiBPYmplY3QudmFsdWVzKHNjaGVkdWxlKS5maWx0ZXIocj0+e1xuICAgICAgICAgICAgcmV0dXJuIEFycmF5LmZyb20oci5tYXRjaGVzLnZhbHVlcygpKS5maWx0ZXIoZnVuY3Rpb24gKG0pIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gbS5zZWxlY3RlZDtcbiAgICAgICAgICAgIH0pLmxlbmd0aD4gMFxuXG4gICAgICAgIH0pLmxlbmd0aD09PTA7XG4gICAgfTtcblxuICAgIHJlbmRlcigpe1xuXG4gICAgICAgIGNvbnN0IHsgc2Vhc29ucywgc2Vhc29uLCByb3VuZCB9ID0gdGhpcy5zdGF0ZTtcblxuICAgICAgICBsZXQgc2NoZWR1bGUgPSBzZWFzb25zW3NlYXNvbl0uc2NoZWR1bGVzO1xuICAgICAgICBsZXQgYWN0aXZlUm91bmQgPSBzY2hlZHVsZVtyb3VuZF07XG4gICAgICAgIGxldCBjb21wbGV0ZSA9IHRoaXMuY29tcGxldGVTZWFzb24oKTtcbiAgICAgICAgbGV0IHNlbGVjdGVkID0gdGhpcy5nZXRTZWxlY3RlZCgpO1xuXG4gICAgICAgIGlmICggIWNvbXBsZXRlICYmIHNlbGVjdGVkID09PSAwKSByZXR1cm4gbnVsbDtcblxuICAgICAgICByZXR1cm4gKFxuICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9e1wibWF0Y2hkYXlcIn0+XG4gICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJjYS1jaGVja2JveCBzZWxlY3QtYm94LWNoZWNrYm94XCI+XG4gICAgICAgICAgICAgICAgICAgIDxkaXYgc3R5bGU9e3t3aWR0aDogJzEwMCUnfX0+XG4gICAgICAgICAgICAgICAgICAgICAgICB7aXNOYU4ocm91bmQpICYmIHJvdW5kfVxuICAgICAgICAgICAgICAgICAgICAgICAgeyFpc05hTihyb3VuZCkgJiYgXCJNYXRjaGRheSBcIiArIHJvdW5kfVxuXG4gICAgICAgICAgICAgICAgICAgICAgICB7IChjb21wbGV0ZSB8fCBzZWxlY3RlZCA9PT0gYWN0aXZlUm91bmQubWF0Y2hlcy5zaXplKSAmJiA8c3BhbiBvbkNsaWNrPXt0aGlzLnRvZ2dsZU1hdGNoZXN9PkFsbCA+PC9zcGFuPn1cbiAgICAgICAgICAgICAgICAgICAgICAgIHsgIWNvbXBsZXRlICYmIHNlbGVjdGVkICE9PSBhY3RpdmVSb3VuZC5tYXRjaGVzLnNpemUgJiYgPHNwYW4gb25DbGljaz17dGhpcy50b2dnbGVNYXRjaGVzfT57c2VsZWN0ZWR9IFNlbGVjdGVkID48L3NwYW4+fVxuICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgICA8L2Rpdj5cblxuICAgICAgICAgICAgICAgIHthY3RpdmVSb3VuZC5zaG93TWF0Y2hlcyAmJiA8ZGl2IGNsYXNzTmFtZT17XCJtYXRjaC1ncm91cFwifT5cbiAgICAgICAgICAgICAgICAgICAge2FjdGl2ZVJvdW5kLm1hdGNoZXMuc2l6ZSA+IDAgJiYgQXJyYXkuZnJvbSAoIGFjdGl2ZVJvdW5kLm1hdGNoZXMudmFsdWVzKCkpLm1hcCgoaXRlbSwgaSkgPT4ge1xuICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIDxkaXYgY2xhc3NOYW1lPXtcIm1hdGNoXCJ9IGtleT17XCJtYXRjaC1cIiArIGl9ID5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB7IChpdGVtLnNlbGVjdGVkIHx8IGNvbXBsZXRlICkgJiYgPGkgY2xhc3NOYW1lPVwiZmEgZmEtY2lyY2xlXCIvPn1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB7IWl0ZW0uc2VsZWN0ZWQgJiYgIWNvbXBsZXRlICYmIDxpIGNsYXNzTmFtZT1cImZhIGZhLWNpcmNsZS1vXCIvPn1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB7aXRlbS5jb21wZXRpdG9ycy5tYXAoKCBjb21wZXRpdG9yLCBjaSwgbGlzdCk9PntcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIDxzcGFuIGtleT17Y2l9Pntjb21wZXRpdG9yLm5hbWV9IHsobGlzdC5sZW5ndGggIT09IGNpICsgMSkgJiYgXCIgdnMgXCIgfTwvc3Bhbj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9KX1cblxuICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgICAgICAgIH0pfVxuICAgICAgICAgICAgICAgIDwvZGl2Pn1cbiAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICApXG4gICAgfVxufVxuXG5leHBvcnQgZGVmYXVsdCBTdGF0aWNSb3VuZDtcblxuXG4vLyBXRUJQQUNLIEZPT1RFUiAvL1xuLy8gLi9zcmMvQXBwQnVuZGxlL1Jlc291cmNlcy9wdWJsaWMvamF2YXNjcmlwdC9zZWxsL2NvbXBvbmVudHMvU3RhdGljUm91bmQuanMiLCJleHBvcnQgY29uc3QgU3VwZXJSaWdodERlZmluaXRpb25zID0ge1xuICAgIFwiTFRcIiA6IFtcIm1lYW5zIHRoZSByaWdodCB0byBhIHJlYWwtdGltZSAoc3ViamVjdCB0byBsYXRlbmN5KSBUcmFuc21pc3Npb24gb2YgYSBMaXZlIEZlZWQgb2YgdGhlIEV2ZW50IG90aGVyIHRoYW4gaW4gQmV0dGluZyBTaG9wcyBhbmQgb24gQmV0dGluZyBQbGF0Zm9ybXMuXCJdLFxuICAgIFwiRFRcIiA6IFtcIm1lYW5zIHRoZSByaWdodCB0byBhIGZ1bGwtbGVuZ3RoIGRlbGF5ZWQgVHJhbnNtaXNzaW9uIG9mIGEgTGl2ZSBGZWVkIG9mIHRoZSBFdmVudCBjb21tZW5jaW5nIG5vdCBiZWZvcmUgZW5kIG9mIHRoZSBFdmVudCBvciB0aGUgVGltZSBFbWJhcmdvIGRlZmluZWQuXCJdLFxuICAgIFwiTEJcIiA6IFtcIm1lYW5zIHRoZSByaWdodCB0byByZWFsLXRpbWUgKHN1YmplY3QgdG8gbGF0ZW5jeSkgVHJhbnNtaXNzaW9uIG9mIGEgTGl2ZSBGZWVkIG9mIHRoZSBFdmVudCBpbiBCZXR0aW5nIFNob3BzIGFuZCBvbiBCZXR0aW5nIFBsYXRmb3JtcztcIl0sXG4gICAgXCJOQVwiIDogW1xuICAgICAgICBcIm1lYW5zIHRoZSByaWdodCB0byBhIFRyYW5zbWlzc2lvbiBvZiBGb290YWdlIG9mIHRoZSBFdmVudCBub3QgZXhjZWVkaW5nXCIsXG4gICAgICAgIHtcbiAgICAgICAgICAgIGtleTogXCJOQV9JTlBVVFwiLFxuICAgICAgICB9LFxuICAgICAgICBcInNlY29uZHMgaW4gbmV3cyBwcm9ncmFtcyBub3QgYmVmb3JlIHRoZSBlbmQgb2YgdGhlIHJlbGV2YW50IEV2ZW50IG9yIHRoZSBUaW1lIEVtYmFyZ28gZGVmaW5lZFwiXG4gICAgXSxcbiAgICBcIkhMXCIgOiBbXG4gICAgICAgIFwibWVhbnMgdGhlIHJpZ2h0IHRvIGEgVHJhbnNtaXNzaW9uIG9mIEhpZ2hsaWdodCBmb290YWdlIG9mIHRoZSBFdmVudCBub3QgZXhjZWVkaW5nXCIsXG4gICAgICAgIHtcbiAgICAgICAgICAgIGtleTogXCJITF9JTlBVVFwiLFxuICAgICAgICB9LFxuICAgICAgICBcIm1pbnV0ZXMgbm90IGJlZm9yZSB0aGUgZW5kIG9mIHRoZSByZWxldmFudCBFdmVudCBvciB0aGUgVGltZSBFbWJhcmdvIGRlZmluZWRcIlxuXG4gICAgXSxcbiAgICBcIlBSXCIgOiBbXCJtZWFucyB0aGUgcmlnaHQgdG8gYSBUcmFuc21pc3Npb24gb2YgdGhlIHNwZWNpZmljIFByb2dyYW1zIHByb3ZpZGVkIGJ5IExpY2Vuc29yIHRvIExpY2Vuc2VlLlwiXSxcbn07XG5cblxuZXhwb3J0IGNvbnN0IFN1cGVyUmlnaHRQcm9kdWN0aW9uRGV0YWlsc0xhYmVscyA9IHtcbiAgICBcIkxUXCIgOiBcIkxpdmUgRmVlZFwiLFxuICAgIFwiRFRcIiA6IFwiRGVsYXllZCAmIEFyY2hpdmUgQ29udGVudFwiLFxuICAgIFwiTEJcIiA6IFwiTGl2ZSBCZXR0aW5nIEZlZWRcIixcbiAgICBcIkhMXCIgOiBcIkhpZ2hsaWdodCAmIENsaXAgRm9vdGFnZVwiLFxuICAgIFwiTkFcIiA6IFwiTmV3cyBGb290YWdlXCIsXG4gICAgXCJQUlwiIDogXCJFZGl0ZWQgUHJvZ3JhbVwiLFxufTtcblxuZXhwb3J0IGNvbnN0IFN1cGVyUmlnaHRCb2FyZExhYmVscyA9IHtcbiAgICBcIkxUXCIgOiBcIkxpdmVcIixcbiAgICBcIkRUXCIgOiBcIkRlbGF5ZWQmQXJjaGl2ZVwiLFxuICAgIFwiTEJcIiA6IFwiQmV0dGluZ1wiLFxuICAgIFwiSExcIiA6IFwiSGlnaGxpZ2h0cyZDbGlwc1wiLFxuICAgIFwiTkFcIiA6IFwiTmV3c1wiLFxuICAgIFwiUFJcIiA6IFwiUHJvZ3JhbVwiLFxufTtcblxuXG4vLyBXRUJQQUNLIEZPT1RFUiAvL1xuLy8gLi9zcmMvQXBwQnVuZGxlL1Jlc291cmNlcy9wdWJsaWMvamF2YXNjcmlwdC9zZWxsL2NvbXBvbmVudHMvU3VwZXJSaWdodERlZmluaXRpb25zLmpzIiwiaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCB7IGNvbm5lY3QgfSBmcm9tIFwicmVhY3QtcmVkdXhcIjtcbmltcG9ydCBUb2dnbGUgZnJvbSAncmVhY3QtdG9nZ2xlJztcbmltcG9ydCB7UmlnaHREZWZhdWx0c30gZnJvbSBcIi4uL2NvbXBvbmVudHMvUmlnaHREZWZhdWx0c1wiO1xuaW1wb3J0IHt1cGRhdGVDb250ZW50VmFsdWV9IGZyb20gXCIuLi9hY3Rpb25zL2NvbnRlbnRBY3Rpb25zXCI7XG5pbXBvcnQge1N1cGVyUmlnaHREZWZpbml0aW9uc30gZnJvbSBcIi4uL2NvbXBvbmVudHMvU3VwZXJSaWdodERlZmluaXRpb25zXCI7XG5pbXBvcnQge1JpZ2h0RGVmYXVsdHNCeVN1cGVyUmlnaHR9IGZyb20gXCIuLi9jb21wb25lbnRzL1JpZ2h0RGVmYXVsdHNCeVN1cGVyUmlnaHRcIjtcbmltcG9ydCB7UHJvcFR5cGVzfSBmcm9tIFwicHJvcC10eXBlc1wiO1xuXG5jbGFzcyBTdXBlclJpZ2h0IGV4dGVuZHMgUmVhY3QuQ29tcG9uZW50IHtcblxuICAgIGNvbnN0cnVjdG9yKHByb3BzKSB7XG4gICAgICAgIHN1cGVyKHByb3BzKTtcbiAgICAgICAgdGhpcy5zdGF0ZSA9IHtcbiAgICAgICAgICAgIGNoZWNrZWQ6cHJvcHMuY2hlY2tlZFxuICAgICAgICB9O1xuICAgIH1cblxuICAgIGNvbXBvbmVudFdpbGxSZWNlaXZlUHJvcHMobmV4dFByb3BzKSB7XG4gICAgICAgIHRoaXMuc2V0U3RhdGUoe2NoZWNrZWQ6bmV4dFByb3BzLmNoZWNrZWR9KTtcbiAgICB9XG5cbiAgICByZW5kZXIoKXtcblxuICAgICAgICBjb25zdCB7b25FeGNsdXNpdmUsIHN1cGVyUmlnaHQsIGV4Y2x1c2l2ZSwgb25DaGFuZ2VJbnB1dCwgaW5wdXRWYWx1ZXN9ID0gdGhpcy5wcm9wcztcbiAgICAgICAgY29uc3QgZGVmQnlMYWJlbCA9IFN1cGVyUmlnaHREZWZpbml0aW9uc1tzdXBlclJpZ2h0LnNob3J0TGFiZWxdIHx8IFtdO1xuXG4gICAgICAgIGxldCBpbnB1dERhdGEgPSBkZWZCeUxhYmVsWzFdO1xuXG4gICAgICAgIHJldHVybiAoXG4gICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cInNlbGVjdC1ib3gtaXRlbVwiID5cbiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cInNlbGVjdC1ib3gtaXRlbS1jaGlsZFwiPlxuICAgICAgICAgICAgICAgICAgICA8aW5wdXQgdHlwZT1cImNoZWNrYm94XCJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgIGRlZmF1bHRDaGVja2VkPXt0aGlzLnByb3BzLmNoZWNrZWR9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICBjaGVja2VkPXt0aGlzLnN0YXRlLmNoZWNrZWR9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICBvbkNoYW5nZT17IChlKSA9PntcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0aGlzLnNldFN0YXRlKHtjaGVja2VkOiBlLnRhcmdldC5jaGVja2VkfSk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5wcm9wcy5vbkNoYW5nZSh0aGlzLnByb3BzLnN1cGVyUmlnaHQsIGUudGFyZ2V0LmNoZWNrZWQpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgfX1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgIGlkPXtcInN1cGVyLXJpZ2h0LVwiICsgdGhpcy5wcm9wcy5zdXBlclJpZ2h0LmlkfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgICAgICAgICAgICBjbGFzc05hbWU9XCJjYS1jaGVja2JveCBwYWNrYWdlLXNlbGVjdG9yXCIgLz5cbiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiY2hlY2tib3gtY3VzdG9tXCIgLz5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgIHsgc3VwZXJSaWdodC5uYW1lIH1cbiAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cInNlbGVjdC1ib3gtaXRlbS1jaGlsZFwiPlxuICAgICAgICAgICAgICAgICAgICA8VG9nZ2xlXG4gICAgICAgICAgICAgICAgICAgICAgICBpY29ucz17ZmFsc2V9XG4gICAgICAgICAgICAgICAgICAgICAgICBjaGVja2VkPXtleGNsdXNpdmV9XG4gICAgICAgICAgICAgICAgICAgICAgICBkaXNhYmxlZD17IXRoaXMuc3RhdGUuY2hlY2tlZH1cbiAgICAgICAgICAgICAgICAgICAgICAgIG9uQ2hhbmdlPXsoZSkgPT4ge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuc2V0U3RhdGUoe2V4Y2x1c2l2ZTogZS50YXJnZXQuY2hlY2tlZH0pO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIG9uRXhjbHVzaXZlKHN1cGVyUmlnaHQgLGUudGFyZ2V0LmNoZWNrZWQgKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH19XG4gICAgICAgICAgICAgICAgICAgIC8+XG4gICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJzZWxlY3QtYm94LWl0ZW0tY2hpbGRcIj5cbiAgICAgICAgICAgICAgICAgICAgeyBkZWZCeUxhYmVsWzBdIH1cbiAgICAgICAgICAgICAgICAgICAgeyBpbnB1dERhdGEgJiZcbiAgICAgICAgICAgICAgICAgICAgPGlucHV0XG4gICAgICAgICAgICAgICAgICAgICAgICB0eXBlPXtcIm51bWJlclwifVxuICAgICAgICAgICAgICAgICAgICAgICAgb25DaGFuZ2U9eyhlKSA9PiB7IG9uQ2hhbmdlSW5wdXQoaW5wdXREYXRhLmtleSwgTnVtYmVyKGUudGFyZ2V0LnZhbHVlKSl9IH1cbiAgICAgICAgICAgICAgICAgICAgICAgIHZhbHVlPXtpbnB1dFZhbHVlc1tpbnB1dERhdGEua2V5XX1cbiAgICAgICAgICAgICAgICAgICAgICAgIGRpc2FibGVkPXshdGhpcy5zdGF0ZS5jaGVja2VkfVxuICAgICAgICAgICAgICAgICAgICAgICAgc3R5bGU9e3tcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBtYXJnaW46ICcwIDVweCcsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcGFkZGluZzogNCxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB3aWR0aDogNzAsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgZm9udFNpemUgOiAxMixcbiAgICAgICAgICAgICAgICAgICAgICAgIH19Lz59XG4gICAgICAgICAgICAgICAgICAgIHsgZGVmQnlMYWJlbFsyXSAmJiBkZWZCeUxhYmVsWzJdfVxuICAgICAgICAgICAgICAgIDwvZGl2PlxuXG4gICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgKVxuICAgIH1cbn1cblxuY2xhc3MgUGFja2FnZVNlbGVjdG9yIGV4dGVuZHMgUmVhY3QuQ29tcG9uZW50IHtcbiAgICBjb25zdHJ1Y3Rvcihwcm9wcykge1xuICAgICAgICBzdXBlcihwcm9wcyk7XG4gICAgICAgIHRoaXMuc3RhdGUgPSB7XG4gICAgICAgICAgICBwYWNrYWdlcyA6IEpTT04ucGFyc2UocHJvcHMucGFja2FnZXMpLm1hcCggKHApID0+IHtcbiAgICAgICAgICAgICAgICBwLnNlbGVjdGVkUmlnaHRzID0gT2JqZWN0LmFzc2lnbih7fSxSaWdodERlZmF1bHRzKTtcbiAgICAgICAgICAgICAgICBpZiAoUmlnaHREZWZhdWx0c0J5U3VwZXJSaWdodFtwLnNob3J0TGFiZWxdICE9PSB1bmRlZmluZWQpIHtcbiAgICAgICAgICAgICAgICAgICAgcC5zZWxlY3RlZFJpZ2h0cyA9IE9iamVjdC5hc3NpZ24oe30scC5zZWxlY3RlZFJpZ2h0cywgUmlnaHREZWZhdWx0c0J5U3VwZXJSaWdodFtwLnNob3J0TGFiZWxdKTtcbiAgICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgICByZXR1cm4gcFxuICAgICAgICAgICAgfSksXG4gICAgICAgICAgICByaWdodHNQYWNrYWdlIDogbmV3IE1hcChwcm9wcy5yaWdodHNQYWNrYWdlLm1hcCgoaSkgPT4ge1xuICAgICAgICAgICAgICAgIGlmICghaS5zZWxlY3RlZFJpZ2h0cykgaS5zZWxlY3RlZFJpZ2h0cyA9IE9iamVjdC5hc3NpZ24oe30sUmlnaHREZWZhdWx0cykgO1xuICAgICAgICAgICAgICAgIHJldHVybltpLmlkLCBpXVxuICAgICAgICAgICAgfSkpLFxuICAgICAgICAgICAgZGVmYXVsdFJpZ2h0cyA6IGZhbHNlXG4gICAgICAgIH07XG4gICAgfVxuXG4gICAgY29tcG9uZW50V2lsbFJlY2VpdmVQcm9wcyhuZXh0UHJvcHMpIHtcbiAgICAgICAgdGhpcy5zZXRTdGF0ZSh7cmlnaHRzUGFja2FnZSA6IG5ldyBNYXAobmV4dFByb3BzLnJpZ2h0c1BhY2thZ2UubWFwKChpKSA9PiBbaS5pZCwgaV0pKX0pO1xuICAgIH1cblxuICAgIHVwZGF0ZVN1cGVyUmlnaHRzTGlzdCA9IChzdXBlclJpZ2h0LCBzdGF0dXMpID0+IHtcbiAgICAgICAgaWYgKHN0YXR1cyAmJiAhdGhpcy5zdGF0ZS5yaWdodHNQYWNrYWdlLmhhcyhzdXBlclJpZ2h0LmlkKSkgdGhpcy5zdGF0ZS5yaWdodHNQYWNrYWdlLnNldChzdXBlclJpZ2h0LmlkLCBzdXBlclJpZ2h0KTtcbiAgICAgICAgaWYgKCFzdGF0dXMgJiYgdGhpcy5zdGF0ZS5yaWdodHNQYWNrYWdlLmhhcyhzdXBlclJpZ2h0LmlkKSkgdGhpcy5zdGF0ZS5yaWdodHNQYWNrYWdlLmRlbGV0ZShzdXBlclJpZ2h0LmlkKTtcbiAgICAgICAgdGhpcy5wcm9wcy5zdXBlclJpZ2h0c1VwZGF0ZWQodGhpcy5zdGF0ZS5yaWdodHNQYWNrYWdlKTtcbiAgICB9O1xuXG4gICAgb25FeGNsdXNpdmUgPSAoc3VwZXJSaWdodCwgc3RhdHVzKSA9PiB7XG5cbiAgICAgICAgbGV0IHJpZ2h0UGFja2FnZSA9IHRoaXMuc3RhdGUucmlnaHRzUGFja2FnZS5nZXQoc3VwZXJSaWdodC5pZCk7XG4gICAgICAgIHJpZ2h0UGFja2FnZS5leGNsdXNpdmUgPSBzdGF0dXM7XG4gICAgICAgIHRoaXMuc3RhdGUucmlnaHRzUGFja2FnZS5zZXQoc3VwZXJSaWdodC5pZCwgcmlnaHRQYWNrYWdlKTtcbiAgICAgICAgdGhpcy5wcm9wcy5zdXBlclJpZ2h0c1VwZGF0ZWQodGhpcy5zdGF0ZS5yaWdodHNQYWNrYWdlKTtcbiAgICB9O1xuXG4gICAgcmVuZGVyKCkge1xuICAgICAgICBsZXQgX3RoaXMgPSB0aGlzO1xuICAgICAgICBjb25zdCB7SExfSU5QVVQsIE5BX0lOUFVUfSA9IHRoaXMucHJvcHM7XG4gICAgICAgIHJldHVybiAoXG4gICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cInBhY2thZ2Utc2VsZWN0b3IgdGFibGVcIj5cbiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cInBhY2thZ2Utc2VsZWN0b3ItdGl0bGVcIj5cbiAgICAgICAgICAgICAgICAgICAge3RoaXMuY29udGV4dC50KFwiQ0xfU1RFUDJfUklHSFRTX1RJVExFXCIpfVxuICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwicGFja2FnZS1zZWxlY3Rvci1jb250YWluZXJcIj5cblxuICAgICAgICAgICAgICAgICAgICA8ZGl2IHN0eWxlPXt7bWFyZ2luOiAyMH19PlxuICAgICAgICAgICAgICAgICAgICAgICAge3RoaXMuY29udGV4dC50KFwiQ0xfU1RFUDJfUklHSFRTX1RFWFRcIil9XG4gICAgICAgICAgICAgICAgICAgIDwvZGl2PlxuXG4gICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwicGFja2FnZS1leGNsdXNpdmVcIj5cbiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwicGFja2FnZS1leGNsdXNpdmUtaXRlbVwiIC8+XG4gICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cInBhY2thZ2UtZXhjbHVzaXZlLWl0ZW1cIj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB7dGhpcy5jb250ZXh0LnQoXCJFeGNsdXNpdmVcIil9XG4gICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwicGFja2FnZS1leGNsdXNpdmUtaXRlbVwiIC8+XG4gICAgICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cInBhY2thZ2Utc2VsZWN0b3ItY29udGVudFwiID5cbiAgICAgICAgICAgICAgICAgICAgICAgIHsgdGhpcy5zdGF0ZS5wYWNrYWdlcy5tYXAoZnVuY3Rpb24oc3VwZXJSaWdodCl7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIDxTdXBlclJpZ2h0XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGtleT17c3VwZXJSaWdodC5pZH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgb25FeGNsdXNpdmU9e190aGlzLm9uRXhjbHVzaXZlfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzdXBlclJpZ2h0PXtzdXBlclJpZ2h0fVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpbnB1dFZhbHVlcz17e1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgSExfSU5QVVQgOiBITF9JTlBVVCxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIE5BX0lOUFVUIDogTkFfSU5QVVRcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfX1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgb25DaGFuZ2U9e190aGlzLnVwZGF0ZVN1cGVyUmlnaHRzTGlzdH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgb25DaGFuZ2VJbnB1dD17X3RoaXMucHJvcHMudXBkYXRlQ29udGVudFZhbHVlfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjaGVja2VkPXsgX3RoaXMuc3RhdGUucmlnaHRzUGFja2FnZS5oYXMoc3VwZXJSaWdodC5pZCkgfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBleGNsdXNpdmU9eyAoX3RoaXMuc3RhdGUucmlnaHRzUGFja2FnZS5oYXMoc3VwZXJSaWdodC5pZCkpID8gX3RoaXMuc3RhdGUucmlnaHRzUGFja2FnZS5nZXQoc3VwZXJSaWdodC5pZCkuZXhjbHVzaXZlOiBmYWxzZSB9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgLz47XG4gICAgICAgICAgICAgICAgICAgICAgICB9KX1cbiAgICAgICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgKTtcbiAgICB9XG59XG5cblBhY2thZ2VTZWxlY3Rvci5jb250ZXh0VHlwZXMgPSB7XG4gICAgdDogUHJvcFR5cGVzLmZ1bmMuaXNSZXF1aXJlZFxufTtcblxuY29uc3QgbWFwU3RhdGVUb1Byb3BzID0gc3RhdGUgPT4ge1xuICAgIHJldHVybiBzdGF0ZS5jb250ZW50O1xufTtcblxuY29uc3QgbWFwRGlzcGF0Y2hUb1Byb3BzID0gZGlzcGF0Y2ggPT4ge1xuICAgIHJldHVybiB7XG4gICAgICAgIHN1cGVyUmlnaHRzVXBkYXRlZCA6IChyaWdodHNQYWNrYWdlKSA9PiBkaXNwYXRjaCh7XG4gICAgICAgICAgICB0eXBlIDogJ1NVUEVSX1JJR0hUU19VUERBVEVEJyxcbiAgICAgICAgICAgIHJpZ2h0c1BhY2thZ2U6IHJpZ2h0c1BhY2thZ2VcbiAgICAgICAgfSksXG4gICAgICAgIHJlc2V0U3VwZXJSaWd0aHMgOiAoKSA9PiBkaXNwYXRjaCh7XG4gICAgICAgICAgICB0eXBlIDogJ1NVUEVSX1JJR0hUU19VUERBVEVEJyxcbiAgICAgICAgICAgIHJlc2V0OiB0cnVlXG4gICAgICAgIH0pLFxuICAgICAgICB1cGRhdGVDb250ZW50VmFsdWUgOiAoaywgdikgPT4gZGlzcGF0Y2godXBkYXRlQ29udGVudFZhbHVlKGssIHYpKVxuICAgIH1cbn07XG5cbmV4cG9ydCBkZWZhdWx0IGNvbm5lY3QoXG4gICAgbWFwU3RhdGVUb1Byb3BzLFxuICAgIG1hcERpc3BhdGNoVG9Qcm9wc1xuKShQYWNrYWdlU2VsZWN0b3IpXG5cblxuLy8gV0VCUEFDSyBGT09URVIgLy9cbi8vIC4vc3JjL0FwcEJ1bmRsZS9SZXNvdXJjZXMvcHVibGljL2phdmFzY3JpcHQvc2VsbC9jb250YWluZXJzL1BhY2thZ2VTZWxlY3Rvci5qcyIsImltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgeyBjb25uZWN0IH0gZnJvbSBcInJlYWN0LXJlZHV4XCI7XG5pbXBvcnQgc3RvcmUgZnJvbSAnLi4vLi4vbWFpbi9zdG9yZSc7XG5pbXBvcnQgU2FsZXNQYWNrYWdlRm9ybSBmcm9tIFwiLi4vY29tcG9uZW50cy9TYWxlc1BhY2thZ2VGb3JtXCI7XG5pbXBvcnQgU2FsZXNQYWNrYWdlRWRpdCBmcm9tIFwiLi4vY29tcG9uZW50cy9TYWxlc1BhY2thZ2VFZGl0XCI7XG5pbXBvcnQgTGlzdGluZ0RldGFpbHMgZnJvbSAnLi8uLi8uLi9idXkvY29udGFpbmVycy9MaXN0aW5nRGV0YWlscyc7XG5pbXBvcnQgQ29udGVudExpc3RpbmcgZnJvbSBcIi4uLy4uL21haW4vY29tcG9uZW50cy9Db250ZW50TGlzdGluZ1wiO1xuaW1wb3J0IHtnb1RvUHJldmlvdXNTdGVwLCBzdGVwQ2hhbmdlUmVzZXR9IGZyb20gXCIuLi9hY3Rpb25zL2NvbnRlbnRBY3Rpb25zXCI7XG5pbXBvcnQgRGlnaXRhbFNpZ25hdHVyZSBmcm9tIFwiLi4vLi4vbWFpbi9jb21wb25lbnRzL0RpZ2l0YWxTaWduYXR1cmVcIjtcbmltcG9ydCB7Z29UbywgcGFyc2VTZWFzb25zLCB2aWV3TGljZW5zZX0gZnJvbSBcIi4uLy4uL21haW4vYWN0aW9ucy91dGlsc1wiO1xuaW1wb3J0IHtjdXN0b21TdHlsZXN9IGZyb20gXCIuLi8uLi9tYWluL3N0eWxlcy9jdXN0b21cIjtcbmltcG9ydCBNb2RhbCBmcm9tICdyZWFjdC1tb2RhbCc7XG5pbXBvcnQge1Byb3BUeXBlc30gZnJvbSBcInByb3AtdHlwZXNcIjtcblxuY2xhc3MgUmV2aWV3QW5kU2lnbiBleHRlbmRzIFJlYWN0LkNvbXBvbmVudCB7XG5cbiAgICBjb25zdHJ1Y3Rvcihwcm9wcykge1xuICAgICAgICBzdXBlcihwcm9wcyk7XG4gICAgICAgIHRoaXMuYXNCdW5kbGUgPSBcIlNFTExfQVNfQlVORExFXCI7XG4gICAgICAgIHRoaXMuaW5kaXZpZHVhbGx5ID0gXCJTRUxMX0lORElWSURVQUxMWVwiO1xuICAgICAgICB0aGlzLndvcmxkd2lkZSA9IFwiV09STERXSURFXCI7XG4gICAgICAgIHRoaXMud29ybGR3aWRlRXhjbHVkaW5nID0gXCJXT1JMRFdJREVfRVhDTFVESU5HXCI7XG4gICAgICAgIHRoaXMuc2VsZWN0ZWRUZXJyaXRvcmllcyA9IFwiU0VMRUNURURfVEVSUklUT1JJRVNcIjtcbiAgICAgICAgdGhpcy5maXhlZCA9IFwiRklYRURcIjtcbiAgICAgICAgdGhpcy5iaWRkaW5nID0gXCJCSURESU5HXCI7XG4gICAgICAgIHRoaXMubGltaXQgPSAzO1xuICAgICAgICB0aGlzLnN0YXRlID0ge307XG4gICAgfVxuXG4gICAgY29tcG9uZW50V2lsbFJlY2VpdmVQcm9wcyhuZXh0UHJvcHMpIHtcbiAgICAgICAgY29uc3QgeyBzdGF0dXMsIHN0ZXAsIHVwZGF0ZUNvbnRlbnRWYWx1ZSB9ID0gbmV4dFByb3BzO1xuXG4gICAgICAgIGlmKChzdGVwID09PSA1ICYmIHN0YXR1cyAmJiAoc3RhdHVzLm5hbWUgPT09IFwiQVBQUk9WRURcIiB8fCBzdGF0dXMubmFtZSA9PT0gXCJFRElURURcIikpICYmICF0aGlzLnRlcm1zQXV0b1NlbGVjdGVkKSB7XG4gICAgICAgICAgICB1cGRhdGVDb250ZW50VmFsdWUoJ3Rlcm1zJywgdHJ1ZSk7XG4gICAgICAgICAgICB1cGRhdGVDb250ZW50VmFsdWUoJ3Rlcm1zX2FyZW5hJywgdHJ1ZSk7XG4gICAgICAgICAgICB0aGlzLnRlcm1zQXV0b1NlbGVjdGVkID0gdHJ1ZTtcbiAgICAgICAgfVxuICAgIH1cblxuICAgIHNob3dUZXJyaXRvcmllcyA9IChzYWxlc1BhY2thZ2UpID0+IHtcbiAgICAgICAgcmV0dXJuICggc2FsZXNQYWNrYWdlLmJ1bmRsZU1ldGhvZCA9PT0gdGhpcy5pbmRpdmlkdWFsbHkgJiZcbiAgICAgICAgICAgIHNhbGVzUGFja2FnZS50ZXJyaXRvcmllc01ldGhvZCA9PT0gdGhpcy53b3JsZHdpZGUgKSB8fFxuICAgICAgICAgICAgc2FsZXNQYWNrYWdlLnRlcnJpdG9yaWVzTWV0aG9kICE9PSB0aGlzLndvcmxkd2lkZTtcbiAgICB9O1xuXG4gICAgc2Nyb2xsID0gKCkgPT4ge1xuXG4gICAgICAgIGNvbnN0IHtzdGVwQ2hhbmdlLCBzdGVwQ2hhbmdlUmVzZXQgfSA9IHRoaXMucHJvcHM7XG5cbiAgICAgICAgaWYgKCBzdGVwQ2hhbmdlICkge1xuICAgICAgICAgICAgd2luZG93LnNjcm9sbFRvKDAsIDApO1xuICAgICAgICAgICAgc3RlcENoYW5nZVJlc2V0KCk7XG4gICAgICAgIH1cbiAgICB9O1xuXG4gICAgc3VibWl0ID0gKCkgPT4ge1xuICAgICAgICBjb25zdCB7dXBkYXRlQ29udGVudFZhbHVlfSA9IHRoaXMucHJvcHM7XG4gICAgICAgIGxldCBjb250ZW50ID0gc3RvcmUuZ2V0U3RhdGUoKS5jb250ZW50O1xuICAgICAgICBsZXQgX3RoaXMgPSB0aGlzO1xuICAgICAgICBjb250ZW50ID0gcGFyc2VTZWFzb25zKGNvbnRlbnQpO1xuICAgICAgICB0aGlzLnNldFN0YXRlKHtzaG93U3VibWl0dGluZzogdHJ1ZX0pXG4gICAgICAgIENvbnRlbnRBcmVuYS5Db250ZW50QXBpLnNhdmVDb250ZW50QXNBY3RpdmUoY29udGVudCkuZG9uZShmdW5jdGlvbiAoIHJlc3BvbnNlICkge1xuXG4gICAgICAgICAgICBpZiAoIHJlc3BvbnNlLnN1Y2Nlc3MgJiYgcmVzcG9uc2UuY29udGVudElkICl7XG4gICAgICAgICAgICAgICAgdXBkYXRlQ29udGVudFZhbHVlKFwiaWRcIiwgcmVzcG9uc2UuY29udGVudElkKTtcbiAgICAgICAgICAgICAgICBfdGhpcy5zZXRTdGF0ZSh7c2hvd1N1Y2Nlc3NTY3JlZW46IHRydWUsc2hvd1N1Ym1pdHRpbmc6IGZhbHNlfSlcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSk7XG4gICAgfTtcblxuICAgIGNsb3NlU3VjY2Vzc1NjcmVlbiA9ICgpID0+IHtcbiAgICAgICAgdGhpcy5zZXRTdGF0ZSh7c2hvd1N1Y2Nlc3NTY3JlZW46IGZhbHNlfSk7XG4gICAgICAgIGdvVG8oXCJtYW5hZ2VsaXN0aW5nc1wiKVxuICAgIH07XG5cbiAgICBzdWNjZXNzU2NyZWVuID0gKCkgPT4ge1xuICAgICAgICByZXR1cm4gPE1vZGFsXG4gICAgICAgICAgICBpc09wZW49e3RoaXMuc3RhdGUuc2hvd1N1Y2Nlc3NTY3JlZW59XG4gICAgICAgICAgICBvblJlcXVlc3RDbG9zZT17dGhpcy5jbG9zZVN1Y2Nlc3NTY3JlZW59XG4gICAgICAgICAgICBib2R5T3BlbkNsYXNzTmFtZT17XCJzZWxlY3RvclwifVxuICAgICAgICAgICAgc3R5bGU9e2N1c3RvbVN0eWxlc31cbiAgICAgICAgPlxuXG4gICAgICAgICAgICA8ZGl2IHN0eWxlPXt7XG4gICAgICAgICAgICAgICAgY29sb3I6ICdncmV5JyxcbiAgICAgICAgICAgICAgICBwYWRkaW5nOiAyMCxcbiAgICAgICAgICAgICAgICBkaXNwbGF5OiAnZmxleCcsXG4gICAgICAgICAgICAgICAgZmxleERpcmVjdGlvbjogJ2NvbHVtbicsXG4gICAgICAgICAgICAgICAgYWxpZ25JdGVtczogJ2NlbnRlcidcbiAgICAgICAgICAgIH19PlxuICAgICAgICAgICAgICAgIDxkaXYgc3R5bGU9e3tcbiAgICAgICAgICAgICAgICAgICAgZm9udFNpemU6IDMwLFxuICAgICAgICAgICAgICAgICAgICB3aWR0aCA6IDYwMCxcbiAgICAgICAgICAgICAgICAgICAgdGV4dEFsaWduIDogJ2NlbnRlcicsXG4gICAgICAgICAgICAgICAgICAgIGZvbnRXZWlnaHQ6IDYwMFxuICAgICAgICAgICAgICAgIH19PlxuICAgICAgICAgICAgICAgICAgICB7dGhpcy5jb250ZXh0LnQoXCJDTF9TVEVQNV9NT0RBTF9TVUNDRVNTX01FU1NBR0VfMVwiKX1cbiAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgICA8ZGl2IHN0eWxlPXt7XG4gICAgICAgICAgICAgICAgICAgIGZvbnRTaXplOiAyMCxcbiAgICAgICAgICAgICAgICAgICAgd2lkdGggOiA2MDAsXG4gICAgICAgICAgICAgICAgICAgIG1hcmdpbiA6IDQwLFxuICAgICAgICAgICAgICAgICAgICB0ZXh0QWxpZ24gOiAnY2VudGVyJ1xuICAgICAgICAgICAgICAgIH19PlxuXG4gICAgICAgICAgICAgICAgICAgIHt0aGlzLmNvbnRleHQudChcIkNMX1NURVA1X01PREFMX1NVQ0NFU1NfTUVTU0FHRV8yXCIpfVxuICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICAgIDxkaXY+XG4gICAgICAgICAgICAgICAgICAgIDxidXR0b24gY2xhc3NOYW1lPVwic3RhbmRhcmQtYnV0dG9uXCIgb25DbGljaz17dGhpcy5jbG9zZVN1Y2Nlc3NTY3JlZW59ID5cbiAgICAgICAgICAgICAgICAgICAgICAgIHt0aGlzLmNvbnRleHQudChcIkNMX1NURVA1X01PREFMX0JVVFRPTlwiKX1cbiAgICAgICAgICAgICAgICAgICAgPC9idXR0b24+XG4gICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICA8L2Rpdj5cblxuICAgICAgICA8L01vZGFsPlxuICAgIH07XG5cbiAgICB1cGRhdGVTYWxlc1BhY2thZ2UgPSAoIHNhbGVzUGFja2FnZSwgaW5kZXggKSA9PiB7XG4gICAgICAgIHRoaXMucHJvcHMudXBkYXRlU2FsZXNQYWNrYWdlcyhcInNhdmVcIiwgc2FsZXNQYWNrYWdlLCBpbmRleCk7XG4gICAgfTtcblxuICAgIHJlbW92ZVNhbGVzUGFja2FnZSA9ICggaW5kZXggKSA9PiB7XG4gICAgICAgIHRoaXMucHJvcHMudXBkYXRlU2FsZXNQYWNrYWdlcyhcInJlbW92ZVwiLCBudWxsLCBpbmRleCk7XG4gICAgfTtcblxuICAgIGVkaXRTYWxlc1BhY2thZ2UgPSAoIGluZGV4ICkgPT4ge1xuICAgICAgICB0aGlzLnNldFN0YXRlKHtcbiAgICAgICAgICAgIHNhbGVzUGFja2FnZVRvRWRpdCA6IGluZGV4LFxuICAgICAgICAgICAgZWRpdE9wZW46IHRydWVcbiAgICAgICAgfSk7XG4gICAgfTtcblxuICAgIHRvZ2dsZURldGFpbHMgPSAoKSA9PiB7XG4gICAgICAgIHRoaXMuc2V0U3RhdGUoe3Nob3dEZXRhaWxzOiAhdGhpcy5zdGF0ZS5zaG93RGV0YWlsc30pO1xuICAgIH07XG5cbiAgICByZW5kZXIoKSB7XG4gICAgICAgIGlmICggdGhpcy5wcm9wcy5zdGVwICE9PSA1KSByZXR1cm4gKG51bGwpO1xuICAgICAgICB0aGlzLnNjcm9sbCgpO1xuICAgICAgICBjb25zdCB7XG4gICAgICAgICAgICBzYWxlc1BhY2thZ2VzLFxuICAgICAgICAgICAgdXBkYXRlQ29udGVudFZhbHVlLFxuICAgICAgICAgICAgc2lnbmF0dXJlLFxuICAgICAgICAgICAgY3VycmVuY3ksXG4gICAgICAgICAgICBjb21wYW55LFxuICAgICAgICAgICAgdGVybXNfYXJlbmEsXG4gICAgICAgICAgICB0ZXJtcyxcbiAgICAgICAgICAgIGhpc3RvcnksXG4gICAgICAgICAgICBjdXN0b21JZCxcbiAgICAgICAgICAgIHN0YXR1cyxcbiAgICAgICAgICAgIGRlZmF1bHRSaWdodHNQYWNrYWdlXG4gICAgICAgIH0gPSB0aGlzLnByb3BzO1xuXG4gICAgICAgIGNvbnN0IHtzaG93RGV0YWlscywgc2hvd1N1Ym1pdHRpbmd9ID0gdGhpcy5zdGF0ZTtcblxuICAgICAgICByZXR1cm4gKFxuICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJzdGVwLWNvbnRlbnRcIj5cbiAgICAgICAgICAgICAgICB7IHRoaXMuc3VjY2Vzc1NjcmVlbigpIH1cbiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImJ1dHRvbnNcIj5cbiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9e1wiYnV0dG9ucy1jb250YWluZXJcIn0gc3R5bGU9e3sganVzdGlmeUNvbnRlbnQ6ICdmbGV4LXN0YXJ0J319PlxuICAgICAgICAgICAgICAgICAgICAgICAgPGJ1dHRvbiBjbGFzc05hbWU9XCJsaWdodC1ibHVlLWJ1dHRvblwiIG9uQ2xpY2s9eygpPT57XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaGlzdG9yeS5wdXNoKFwiL2NvbnRlbnRsaXN0aW5nL1wiKyBjdXN0b21JZCArIFwiLzRcIik7XG4gICAgICAgICAgICAgICAgICAgICAgICB9fT5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aSBjbGFzc05hbWU9XCJmYSBmYS1jaGV2cm9uLWxlZnRcIi8+IHt0aGlzLmNvbnRleHQudChcIkVkaXRcIil9XG4gICAgICAgICAgICAgICAgICAgICAgICA8L2J1dHRvbj5cbiAgICAgICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgICAgeyFzaG93RGV0YWlscyAmJiA8ZGl2IGNsYXNzTmFtZT1cInN0ZXAtdGl0bGVcIj5cbiAgICAgICAgICAgICAgICAgICAge3RoaXMuY29udGV4dC50KFwiQ0xfU1RFUDVfVElUTEVfUkVWSUVXXCIpfVxuICAgICAgICAgICAgICAgIDwvZGl2Pn1cbiAgICAgICAgICAgICAgICB7c2hvd0RldGFpbHMgJiYgPGRpdiBjbGFzc05hbWU9XCJzdGVwLXRpdGxlXCI+XG4gICAgICAgICAgICAgICAgICAgIHt0aGlzLmNvbnRleHQudChcIkNMX1NURVA1X1RJVExFX1BSRVZJRVdcIil9XG4gICAgICAgICAgICAgICAgPC9kaXY+fVxuXG4gICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICBzaG93RGV0YWlscyAmJlxuICAgICAgICAgICAgICAgICAgICA8ZGl2PlxuICAgICAgICAgICAgICAgICAgICAgICAgPExpc3RpbmdEZXRhaWxzXG4gICAgICAgICAgICAgICAgICAgICAgICBvbkJhY2s9e3RoaXMudG9nZ2xlRGV0YWlsc31cbiAgICAgICAgICAgICAgICAgICAgICAgIGNvbXBhbnk9e2NvbXBhbnl9XG4gICAgICAgICAgICAgICAgICAgICAgICBjb250ZW50PXt0aGlzLnByb3BzfS8+XG4gICAgICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICAgIHshc2hvd0RldGFpbHMgJiYgPGRpdiBjbGFzc05hbWU9XCJzdGVwLWNvbnRlbnQtY29udGFpbmVyXCI+XG5cbiAgICAgICAgICAgICAgICAgICAgPENvbnRlbnRMaXN0aW5nIHsuLi50aGlzLnByb3BzfSBvblNlbGVjdE5hbWU9e3RoaXMudG9nZ2xlRGV0YWlsc30gZGVmYXVsdFJpZ2h0c1BhY2thZ2U9e2RlZmF1bHRSaWdodHNQYWNrYWdlfS8+XG5cbiAgICAgICAgICAgICAgICAgICAgPFNhbGVzUGFja2FnZUZvcm1cbiAgICAgICAgICAgICAgICAgICAgICAgIGhpZGVCdXR0b25zXG4gICAgICAgICAgICAgICAgICAgICAgICBzb3J0PXt0cnVlfVxuICAgICAgICAgICAgICAgICAgICAgICAgbGlzdGluZ0lkPXtjdXN0b21JZH1cbiAgICAgICAgICAgICAgICAgICAgICAgIGZ1bGxTaXplPXt0cnVlfVxuICAgICAgICAgICAgICAgICAgICAgICAgc2FsZXNQYWNrYWdlcz17c2FsZXNQYWNrYWdlc31cbiAgICAgICAgICAgICAgICAgICAgICAgIGN1cnJlbmN5PXtjdXJyZW5jeX1cbiAgICAgICAgICAgICAgICAgICAgICAgIG9uRWRpdD17dGhpcy5lZGl0U2FsZXNQYWNrYWdlfVxuICAgICAgICAgICAgICAgICAgICAgICAgb25VcGRhdGU9e3RoaXMudXBkYXRlU2FsZXNQYWNrYWdlfVxuICAgICAgICAgICAgICAgICAgICAgICAgb25SZW1vdmU9e3RoaXMucmVtb3ZlU2FsZXNQYWNrYWdlfS8+XG5cbiAgICAgICAgICAgICAgICAgICAge3RoaXMuc3RhdGUuZWRpdE9wZW4gJiYgPFNhbGVzUGFja2FnZUVkaXRcbiAgICAgICAgICAgICAgICAgICAgICAgIGlzT3Blbj17dGhpcy5zdGF0ZS5lZGl0T3Blbn1cbiAgICAgICAgICAgICAgICAgICAgICAgIG9uQ2xvc2U9eygpPT57XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5zZXRTdGF0ZSh7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGVkaXRPcGVuIDogZmFsc2VcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9KVxuICAgICAgICAgICAgICAgICAgICAgICAgfX1cbiAgICAgICAgICAgICAgICAgICAgICAgIG9uVXBkYXRlPXt0aGlzLnVwZGF0ZVNhbGVzUGFja2FnZX1cbiAgICAgICAgICAgICAgICAgICAgICAgIHNhbGVzUGFja2FnZUlkPXt0aGlzLnN0YXRlLnNhbGVzUGFja2FnZVRvRWRpdH1cbiAgICAgICAgICAgICAgICAgICAgICAgIHNhbGVzUGFja2FnZXM9e3NhbGVzUGFja2FnZXN9XG4gICAgICAgICAgICAgICAgICAgIC8+fVxuXG4gICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPXtcInRlcm1zLWNvbmZpcm1cIn1cbiAgICAgICAgICAgICAgICAgICAgICAgICBzdHlsZT17e1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICBwYWRkaW5nOiAnNDBweCAwcHgnLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICB3aWR0aDogJzUwJScsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgIG1hcmdpbjogJzAgYXV0bydcbiAgICAgICAgICAgICAgICAgICAgICAgICB9fT5cbiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgc3R5bGU9e3tkaXNwbGF5OiAnZmxleCcsIG1hcmdpbkJvdHRvbTogMTB9fT5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aW5wdXRcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdHlwZT1cImNoZWNrYm94XCJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY2xhc3NOYW1lPVwiY2EtY2hlY2tib3hcIlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBkZWZhdWx0Q2hlY2tlZD17dGVybXN9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhbHVlPXt0ZXJtc31cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgb25DaGFuZ2U9eyhlKT0+e1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdXBkYXRlQ29udGVudFZhbHVlKCd0ZXJtcycsIGUudGFyZ2V0LmNoZWNrZWQpXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH19XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlkPVwidGVybXNcIlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzdHlsZT17e21hcmdpblJpZ2h0OiAxMH19XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgLz5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGFiZWwgaHRtbEZvcj1cInRlcm1zXCIvPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHt0aGlzLmNvbnRleHQudChcIkNMX1NURVA1X1RFUk1TXzFcIil9XG4gICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgc3R5bGU9e3tkaXNwbGF5OiAnZmxleCcsIG1hcmdpbkJvdHRvbTogMTB9fT5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aW5wdXRcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdHlwZT1cImNoZWNrYm94XCJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY2xhc3NOYW1lPVwiY2EtY2hlY2tib3hcIlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBkZWZhdWx0Q2hlY2tlZD17dGVybXNfYXJlbmF9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhbHVlPXt0ZXJtc19hcmVuYX1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgb25DaGFuZ2U9eyhlKT0+e1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdXBkYXRlQ29udGVudFZhbHVlKCd0ZXJtc19hcmVuYScsIGUudGFyZ2V0LmNoZWNrZWQpXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH19XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlkPVwidGVybXNfYXJlbmFcIlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzdHlsZT17e21hcmdpblJpZ2h0OiAxMH19XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgLz5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGFiZWwgaHRtbEZvcj1cInRlcm1zX2FyZW5hXCI+PC9sYWJlbD5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB7dGhpcy5jb250ZXh0LnQoXCJDTF9TVEVQNV9URVJNU18yXCIpfVxuICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgICAgICAgIDwvZGl2PlxuXG4gICAgICAgICAgICAgICAgICAgIDxEaWdpdGFsU2lnbmF0dXJlXG4gICAgICAgICAgICAgICAgICAgICAgICBvblJlYWR5PXsoc2lnbmF0dXJlKSA9PiB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdXBkYXRlQ29udGVudFZhbHVlKFwic2lnbmF0dXJlXCIsIHNpZ25hdHVyZSk7XG4gICAgICAgICAgICAgICAgICAgICAgICB9fVxuICAgICAgICAgICAgICAgICAgICAgICAgc2lnbmF0dXJlPXtzaWduYXR1cmV9XG4gICAgICAgICAgICAgICAgICAgIC8+XG5cbiAgICAgICAgICAgICAgICAgICAgezxkaXYgY2xhc3NOYW1lPVwiYnV0dG9uc1wiIHN0eWxlPXt7bWFyZ2luVG9wOiAyMH19PlxuICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJidXR0b25zLWNvbnRhaW5lclwiICA+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgeyFzaG93U3VibWl0dGluZyAmJiA8YnV0dG9uIGRpc2FibGVkPXshKHRlcm1zICYmIHRlcm1zX2FyZW5hICYmIHNpZ25hdHVyZSl9IGlkPVwiZHJhZnQtbGlzdGluZ1wiIGNsYXNzTmFtZT1cInN0YW5kYXJkLWJ1dHRvbi1iaWcgc3RlcHNcIiBvbkNsaWNrPXt0aGlzLnN1Ym1pdH0+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHsoIXN0YXR1cyB8fCBzdGF0dXMubmFtZSA9PT0gXCJEUkFGVFwiIHx8IHN0YXR1cy5uYW1lID09PSBcIklOQUNUSVZFXCIgfHwgc3RhdHVzLm5hbWUgPT09IFwiQVVUT19JTkFDVElWRVwiICkgJiYgdGhpcy5jb250ZXh0LnQoXCJDTF9TVEVQNV9CVVRUT05fU1VCTUlUXCIpIH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAge3N0YXR1cyAmJiAoc3RhdHVzLm5hbWUgPT09IFwiQVBQUk9WRURcIiB8fCBzdGF0dXMubmFtZSA9PT0gXCJQRU5ESU5HXCIgfHwgc3RhdHVzLm5hbWUgPT09IFwiRURJVEVEXCIpICYmIHRoaXMuY29udGV4dC50KFwiQ0xfU1RFUDVfQlVUVE9OX1NBVkVcIil9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9idXR0b24+fVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHtzaG93U3VibWl0dGluZyAmJiA8aSBjbGFzc05hbWU9XCJmYSBmYS1jb2cgZmEtc3BpblwiIC8+fVxuICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgICAgICAgIDwvZGl2Pn1cbiAgICAgICAgICAgICAgICA8L2Rpdj59XG4gICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgKTtcbiAgICB9XG59XG5cblJldmlld0FuZFNpZ24uY29udGV4dFR5cGVzID0ge1xuICAgIHQ6IFByb3BUeXBlcy5mdW5jLmlzUmVxdWlyZWRcbn07XG5cbmNvbnN0IG1hcFN0YXRlVG9Qcm9wcyA9IHN0YXRlID0+IHtcbiAgICByZXR1cm4gc3RhdGUuY29udGVudFxufTtcblxuY29uc3QgbWFwRGlzcGF0Y2hUb1Byb3BzID0gZGlzcGF0Y2ggPT4ge1xuICAgIHJldHVybiB7XG4gICAgICAgIHVwZGF0ZUNvbnRlbnRWYWx1ZSA6IChrZXksIHZhbHVlKSA9PiBkaXNwYXRjaCh7XG4gICAgICAgICAgICB0eXBlOiAnVVBEQVRFX0NPTlRFTlRfVkFMVUUnLFxuICAgICAgICAgICAga2V5OiBrZXksXG4gICAgICAgICAgICB2YWx1ZSA6IHZhbHVlXG4gICAgICAgIH0pLFxuICAgICAgICB1cGRhdGVTYWxlc1BhY2thZ2VzIDogKG5hbWUsIHNhbGVzUGFja2FnZSwgaW5kZXgpID0+IGRpc3BhdGNoKHtcbiAgICAgICAgICAgIHR5cGU6ICdVUERBVEVfU0FMRVNfUEFDS0FHRVMnLFxuICAgICAgICAgICAgaW5kZXg6IGluZGV4LFxuICAgICAgICAgICAgc2FsZXNQYWNrYWdlIDogc2FsZXNQYWNrYWdlLFxuICAgICAgICAgICAgbmFtZTogbmFtZVxuICAgICAgICB9KSxcbiAgICAgICAgc3RlcENoYW5nZVJlc2V0IDogKCkgPT4gZGlzcGF0Y2goc3RlcENoYW5nZVJlc2V0KCkpXG4gICAgfVxufTtcblxuZXhwb3J0IGRlZmF1bHQgY29ubmVjdChcbiAgICBtYXBTdGF0ZVRvUHJvcHMsXG4gICAgbWFwRGlzcGF0Y2hUb1Byb3BzXG4pKFJldmlld0FuZFNpZ24pXG5cblxuLy8gV0VCUEFDSyBGT09URVIgLy9cbi8vIC4vc3JjL0FwcEJ1bmRsZS9SZXNvdXJjZXMvcHVibGljL2phdmFzY3JpcHQvc2VsbC9jb250YWluZXJzL1Jldmlld0FuZFNpZ24uanMiLCJpbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xuaW1wb3J0IHtjb25uZWN0fSBmcm9tICdyZWFjdC1yZWR1eCc7XG5pbXBvcnQgY24gZnJvbSAnY2xhc3NuYW1lcyc7XG5pbXBvcnQgc3RvcmUgZnJvbSAnLi4vLi4vbWFpbi9zdG9yZSc7XG5pbXBvcnQge2dvVG9QcmV2aW91c1N0ZXAsIGdvVG9OZXh0U3RlcCwgdXBkYXRlQ29udGVudFZhbHVlLCBnb1RvU3RlcCwgc2Nyb2xsVG9wTWFpbkNvbnRlbnR9IGZyb20gXCIuLi9hY3Rpb25zL2NvbnRlbnRBY3Rpb25zXCI7XG5pbXBvcnQge2NvbXBhbnlJc1ZhbGlkfSBmcm9tIFwiLi4vYWN0aW9ucy92YWxpZGF0aW9uQWN0aW9uc1wiO1xuaW1wb3J0IFJlYWN0VG9vbHRpcCBmcm9tICdyZWFjdC10b29sdGlwJ1xuaW1wb3J0IHtlZGl0ZWRQcm9ncmFtU2VsZWN0ZWQsIHBhcnNlU2Vhc29uc30gZnJvbSBcIi4uLy4uL21haW4vYWN0aW9ucy91dGlsc1wiO1xuaW1wb3J0IHtQcm9wVHlwZXN9IGZyb20gJ3Byb3AtdHlwZXMnO1xuXG5jb25zdCBNSU5fUFJPR1JBTV9ERVNDX0xFTkdUSCA9IDMwO1xuXG5jbGFzcyBTZWxsQnV0dG9ucyBleHRlbmRzIFJlYWN0LkNvbXBvbmVudCB7XG4gICAgY29uc3RydWN0b3IocHJvcHMpIHtcbiAgICAgICAgc3VwZXIocHJvcHMpO1xuICAgICAgICB0aGlzLnN0YXRlID0ge1xuICAgICAgICAgICAgZGF0ZTogbmV3IERhdGUoKSxcbiAgICAgICAgICAgIGxhc3RTdGVwIDogcHJvcHMubGFzdFN0ZXAgfHwgNSxcbiAgICAgICAgICAgIHNhdmluZyA6IGZhbHNlLFxuICAgICAgICAgICAgc2F2aW5nU3VjY2VzczogZmFsc2UsXG4gICAgICAgICAgICB2aXNpdGVkIDogWzFdXG4gICAgICAgIH07XG4gICAgfVxuXG4gICAgY29tcG9uZW50V2lsbFJlY2VpdmVQcm9wcyAoIHByb3BzICkge1xuXG4gICAgICAgIGlmICggdGhpcy5zdGF0ZS52aXNpdGVkLmluZGV4T2YocHJvcHMuc3RlcCkgPT09IC0xICl7XG4gICAgICAgICAgICB0aGlzLnNldFN0YXRlKHtcbiAgICAgICAgICAgICAgICB2aXNpdGVkIDogWy4uLnRoaXMuc3RhdGUudmlzaXRlZCwgcHJvcHMuc3RlcF1cbiAgICAgICAgICAgIH0pXG4gICAgICAgIH1cbiAgICAgICAgUmVhY3RUb29sdGlwLnJlYnVpbGQoKVxuICAgIH1cblxuICAgIHNhdmVBbmRHb05leHQgPSAoKSA9PiB7XG4gICAgICAgIGNvbnN0IHtoaXN0b3J5fSA9IHRoaXMucHJvcHM7XG4gICAgICAgIHRoaXMuc2V0U3RhdGUoeyBzYXZpbmcgOiB0cnVlIH0pO1xuXG4gICAgICAgIGxldCBjb250ZW50ID0gc3RvcmUuZ2V0U3RhdGUoKS5jb250ZW50O1xuICAgICAgICBjb250ZW50ID0gcGFyc2VTZWFzb25zKGNvbnRlbnQpO1xuICAgICAgICBDb250ZW50QXJlbmEuQ29udGVudEFwaS5zYXZlQ29udGVudEFzRHJhZnQoY29udGVudCkuZG9uZSgocmVzcG9uc2UpPT57XG5cbiAgICAgICAgICAgIGxldCBuZXh0U3RlcCA9IChOdW1iZXIoY29udGVudC5zdGVwKSArIDEpO1xuXG4gICAgICAgICAgICBpZiAoIHJlc3BvbnNlLnN1Y2Nlc3MgJiYgcmVzcG9uc2UuY29udGVudElkICl7XG4gICAgICAgICAgICAgICAgdGhpcy5wcm9wcy51cGRhdGVDb250ZW50VmFsdWUoXCJpZFwiLCByZXNwb25zZS5jb250ZW50SWQpO1xuICAgICAgICAgICAgICAgIHRoaXMucHJvcHMudXBkYXRlQ29udGVudFZhbHVlKFwiY3VzdG9tSWRcIiwgcmVzcG9uc2UuY3VzdG9tSWQpO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICB0aGlzLnNldFN0YXRlKHsgc2F2aW5nIDogZmFsc2UsIHNhdmluZ1N1Y2Nlc3M6IHRydWUgfSk7XG5cbiAgICAgICAgICAgIGhpc3RvcnkucHVzaChcIi9jb250ZW50bGlzdGluZy9cIisgcmVzcG9uc2UuY3VzdG9tSWQgKyBcIi9cIiArIG5leHRTdGVwKTtcbiAgICAgICAgICAgIHNjcm9sbFRvcE1haW5Db250ZW50KCk7XG5cbiAgICAgICAgfSkuZmFpbCgoKSA9PntcbiAgICAgICAgICAgIHRoaXMuc2V0U3RhdGUoeyBzYXZpbmcgOiBmYWxzZSwgc2F2aW5nU3VjY2VzczogZmFsc2UgfSk7XG4gICAgICAgICAgICAvL2hpc3RvcnkucHVzaChcIi9jb250ZW50bGlzdGluZy9cIisgcmVzcG9uc2UuY3VzdG9tSWQgKyBcIi9cIiArIG5leHRTdGVwKTtcbiAgICAgICAgfSk7XG4gICAgfTtcblxuICAgIC8qKlxuICAgICAqIGlmIGN1cnJlbmN5IHNlbGVjdGVkLCBsaXN0aW5nIGltYWdlIGluc2VydGVkLCBleHBpcnkgZGF0ZSBzZWxlY3RlZCwgc2FsZXMgYnVuZGxlcyBhZGRlZCxcbiAgICAgKiBjb21wYW55IGFkZHJlc3MgY29tcGxldGUsIHBsYWNlIG9mIGp1cmlzZGljdGlvbiBzZWxlY3RlZCBhbmQgaWYgdmF0ID0geWVzLCBwZXJjZW50YWdlIGlzIGluc2VydGVkXG4gICAgICogQHJldHVybnMge2Jvb2xlYW59XG4gICAgICovXG4gICAgcmV2aWV3QW5kU2lnbkVuYWJsZWQgPSAoKSA9PntcblxuICAgICAgICBjb25zdCB7ZXhwaXJlc0F0LCB2YXQsIHZhdFBlcmNlbnRhZ2UsIHNhbGVzUGFja2FnZXMsIGNvbXBhbnksIG5hbWV9ID0gdGhpcy5wcm9wcztcblxuICAgICAgICByZXR1cm4gZXhwaXJlc0F0XG4gICAgICAgICAgICAmJiAoIHZhdCA9PT0gXCJub1wiIHx8ICh2YXRQZXJjZW50YWdlICYmIHZhdFBlcmNlbnRhZ2UgIT0gMCAmJiB2YXRQZXJjZW50YWdlICE9PSBcIlwiKSApXG4gICAgICAgICAgICAmJiBzYWxlc1BhY2thZ2VzLmxlbmd0aCA+IDBcbiAgICAgICAgICAgICYmIG5hbWVcbiAgICAgICAgICAgICYmIG5hbWUgIT09IFwiXCJcbiAgICAgICAgICAgICYmIGNvbXBhbnlJc1ZhbGlkKGNvbXBhbnkpO1xuXG4gICAgfTtcblxuICAgIHJldmlld0FuZFNpZ25HZXRNZXNzYWdlcyA9ICgpID0+IHtcbiAgICAgICAgY29uc3Qge2V4cGlyZXNBdCwgdmF0LCB2YXRQZXJjZW50YWdlLCBzYWxlc1BhY2thZ2VzLCBjb21wYW55LCBuYW1lfSA9IHRoaXMucHJvcHM7XG4gICAgICAgIGxldCBtZXNzYWdlID0gXCJQbGVhc2UgY29tcGxldGUgbWlzc2luZyBpbmZvcm1hdGlvblxcblwiO1xuXG4gICAgICAgIGlmICggc2FsZXNQYWNrYWdlcy5sZW5ndGggPT09IDAgKSBtZXNzYWdlICs9IFwiPGJyLz4tIFNlbGVjdCBhdCBsZWFzdCBvbmUgc2FsZXMgYnVuZGxlLlxcblwiO1xuICAgICAgICBpZiAoICFleHBpcmVzQXQgKSBtZXNzYWdlICs9IFwiPGJyLz4tIFNlbGVjdCBsaXN0aW5nIGV4cGlyeS5cIjtcbiAgICAgICAgaWYgKCAhY29tcGFueUlzVmFsaWQoY29tcGFueSkgKSBtZXNzYWdlICs9IFwiPGJyLz4tIEVudGVyIGNvbXBhbnkgaW5mb3JtYXRpb24uXCI7XG4gICAgICAgIGlmICggIW5hbWUgfHwgbmFtZSA9PT0gXCJcIikgbWVzc2FnZSArPSBcIjxici8+LSBFbnRlciBhIG5hbWUgZm9yIHRoZSBsaXN0aW5nLlwiO1xuXG4gICAgICAgIGlmICggdmF0ID09PSBcInllc1wiICYmICghdmF0UGVyY2VudGFnZSB8fCB2YXRQZXJjZW50YWdlID09PSAwIHx8IHZhdFBlcmNlbnRhZ2UgPT09IFwiXCIpICkgbWVzc2FnZSArPSBcIjxici8+LSBFbnRlciBWQVQgcGVyY2VudGFnZS5cIjtcblxuICAgICAgICByZXR1cm4gbWVzc2FnZTtcbiAgICB9O1xuXG4gICAgcHJvZ3JhbUlzVmFsaWQgPSAoKSA9PiB7XG4gICAgICAgIGNvbnN0IHtcbiAgICAgICAgICAgIHJpZ2h0c1BhY2thZ2UsXG4gICAgICAgICAgICBQUk9HUkFNX05BTUUsXG4gICAgICAgICAgICBQUk9HUkFNX0VQSVNPREVTLFxuICAgICAgICAgICAgUFJPR1JBTV9EVVJBVElPTixcbiAgICAgICAgICAgIFBST0dSQU1fVFlQRVxuICAgICAgICB9ID0gdGhpcy5wcm9wcztcblxuICAgICAgICBsZXQgcHJvZ3JhbSA9IGVkaXRlZFByb2dyYW1TZWxlY3RlZChyaWdodHNQYWNrYWdlKTtcblxuICAgICAgICBpZiAoIXByb2dyYW0pIHJldHVybiB0cnVlO1xuXG4gICAgICAgIHJldHVybiBQUk9HUkFNX05BTUUgJiYgUFJPR1JBTV9OQU1FICE9PSBcIlwiICYmXG4gICAgICAgICAgICBQUk9HUkFNX0VQSVNPREVTICYmIFBST0dSQU1fRVBJU09ERVMgIT09IFwiXCIgJiZcbiAgICAgICAgICAgIFBST0dSQU1fRFVSQVRJT04gJiYgUFJPR1JBTV9EVVJBVElPTiAhPT0gXCJcIiAmJlxuICAgICAgICAgICAgUFJPR1JBTV9UWVBFICE9PSBcIlNFTEVDVFwiXG5cbiAgICB9O1xuXG4gICAgc3RlcDJFbmFibGVkID0gKCkgPT4ge1xuICAgICAgICBjb25zdCB7cmlnaHRzUGFja2FnZSwgcHJvZ3JhbURlc2NyaXB0aW9ufSA9IHRoaXMucHJvcHM7XG5cbiAgICAgICAgbGV0IHByb2dyYW0gPSB0aGlzLnByb2dyYW1Jc1ZhbGlkKCk7XG5cbiAgICAgICAgcmV0dXJuIHJpZ2h0c1BhY2thZ2UubGVuZ3RoID4gMCAmJiBwcm9ncmFtICYmIHByb2dyYW1EZXNjcmlwdGlvbiAmJiBwcm9ncmFtRGVzY3JpcHRpb24ubGVuZ3RoID49IE1JTl9QUk9HUkFNX0RFU0NfTEVOR1RIO1xuXG4gICAgfTtcblxuICAgIHN0ZXAzRW5hYmxlZCA9ICgpID0+IHtcbiAgICAgICAgY29uc3Qge2VuZERhdGVNb2RlfSA9IHRoaXMucHJvcHM7XG4gICAgICAgIHJldHVybiBlbmREYXRlTW9kZSAhPT0gdW5kZWZpbmVkO1xuICAgIH07XG5cbiAgICBzdGVwM0dldE1lc3NhZ2VzID0gKCkgPT4ge1xuICAgICAgICBjb25zdCB7ZW5kRGF0ZU1vZGV9ID0gdGhpcy5wcm9wcztcbiAgICAgICAgbGV0IG1lc3NhZ2UgPSBcIlBsZWFzZSBjb21wbGV0ZSBtaXNzaW5nIGluZm9ybWF0aW9uXFxuXCI7XG4gICAgICAgIGlmICggZW5kRGF0ZU1vZGUgPT09IHVuZGVmaW5lZCApIG1lc3NhZ2UgKz0gXCI8YnIvPi0gU2VsZWN0IHdoZW4gdGhlIGxpY2Vuc2UgcGVyaW9kIGVuZHMuXCI7XG5cbiAgICAgICAgcmV0dXJuIG1lc3NhZ2U7XG4gICAgfTtcblxuICAgIHN0ZXAxRW5hYmxlZCA9ICgpID0+IHtcbiAgICAgICAgY29uc3Qge3Nwb3J0c30gPSB0aGlzLnByb3BzO1xuICAgICAgICByZXR1cm4gc3BvcnRzLmxlbmd0aCA+IDA7XG4gICAgfTtcblxuICAgIHN0ZXAxR2V0TWVzc2FnZXMgPSAoKSA9PiB7XG4gICAgICAgIGNvbnN0IHtzcG9ydHMsIG5hbWV9ID0gdGhpcy5wcm9wcztcbiAgICAgICAgbGV0IG1lc3NhZ2UgPSBcIlBsZWFzZSBjb21wbGV0ZSBtaXNzaW5nIGluZm9ybWF0aW9uXFxuXCI7XG5cbiAgICAgICAgaWYgKCBzcG9ydHMubGVuZ3RoID09PSAwICkgbWVzc2FnZSArPSBcIjxici8+LSBTZWxlY3QgYSBzcG9ydC5cXG5cIjtcbiAgICAgICAgLy9pZiAoIG5hbWUgPT09IHVuZGVmaW5lZCB8fCBuYW1lID09PSBcIlwiICkgbWVzc2FnZSArPSBcIjxici8+LSBFbnRlciBhIG5hbWUgZm9yIHRoZSBsaXN0aW5nLlwiO1xuXG4gICAgICAgIHJldHVybiBtZXNzYWdlO1xuICAgIH07XG5cbiAgICBzdGVwMkdldE1lc3NhZ2VzID0gKCkgPT4ge1xuICAgICAgICBjb25zdCB7cHJvZ3JhbURlc2NyaXB0aW9uLCByaWdodHNQYWNrYWdlfSA9IHRoaXMucHJvcHM7XG4gICAgICAgIGxldCBtZXNzYWdlID0gXCJQbGVhc2UgY29tcGxldGUgbWlzc2luZyBpbmZvcm1hdGlvblxcblwiO1xuICAgICAgICBsZXQgcHJvZ3JhbSA9IHRoaXMucHJvZ3JhbUlzVmFsaWQoKTs7XG4gICAgICAgIGlmICggcmlnaHRzUGFja2FnZS5sZW5ndGggPT09IDAgKSBtZXNzYWdlICs9IFwiPGJyLz4tIFNlbGVjdCBhdCBsZWFzdCBvbmUgcmlnaHQuXFxuXCI7XG4gICAgICAgIGlmICggIXByb2dyYW1EZXNjcmlwdGlvbiB8fCBwcm9ncmFtRGVzY3JpcHRpb24ubGVuZ3RoIDwgTUlOX1BST0dSQU1fREVTQ19MRU5HVEggKSBtZXNzYWdlICs9IFwiPGJyLz4tIFByb2dyYW0gZGVzY3JpcHRpb24gbXVzdCBiZSBhdCBsZWFzdCBcIiArIE1JTl9QUk9HUkFNX0RFU0NfTEVOR1RIICsgXCIgY2hhcmFjdGVycyBsZW5ndGhcIjtcbiAgICAgICAgaWYgKCAhcHJvZ3JhbSApIG1lc3NhZ2UgKz0gXCI8YnIvPi0gIEVudGVyIHByb2dyYW0gaW5mb3JtYXRpb24uXCI7XG5cbiAgICAgICAgcmV0dXJuIG1lc3NhZ2U7XG4gICAgfTtcblxuICAgIGdldFRvb2x0aXBNZXNzYWdlcyA9ICgpID0+IHtcbiAgICAgICAgY29uc3Qge3N0ZXB9ID0gdGhpcy5wcm9wcztcblxuICAgICAgICBpZiAoIHN0ZXAgPT09IDEgJiYgIXRoaXMuc3RlcDFFbmFibGVkKCkpIHJldHVybiB0aGlzLnN0ZXAxR2V0TWVzc2FnZXMoKTtcbiAgICAgICAgaWYgKCBzdGVwID09PSAyICYmICF0aGlzLnN0ZXAyRW5hYmxlZCgpKSByZXR1cm4gdGhpcy5zdGVwMkdldE1lc3NhZ2VzKCk7XG4gICAgICAgIGlmICggc3RlcCA9PT0gMyAmJiAhdGhpcy5zdGVwM0VuYWJsZWQoKSkgcmV0dXJuIHRoaXMuc3RlcDNHZXRNZXNzYWdlcygpO1xuICAgICAgICBpZiAoIHN0ZXAgPT09IDQgJiYgIXRoaXMucmV2aWV3QW5kU2lnbkVuYWJsZWQoKSkgcmV0dXJuIHRoaXMucmV2aWV3QW5kU2lnbkdldE1lc3NhZ2VzKCk7XG4gICAgfTtcblxuICAgIGdldFJldmlld0J1dHRvblRvb2x0aXBNZXNzYWdlcyA9ICgpID0+IHtcbiAgICAgICAgY29uc3Qge3N0ZXB9ID0gdGhpcy5wcm9wcztcblxuICAgICAgICBpZiAoIHN0ZXAgPT09IDQgJiYgIXRoaXMucmV2aWV3QW5kU2lnbkVuYWJsZWQoKSkgcmV0dXJuIHRoaXMucmV2aWV3QW5kU2lnbkdldE1lc3NhZ2VzKCk7XG4gICAgfTtcblxuICAgIG9uQ2xpY2tTdGVwID0gKHN0ZXBTZWxlY3RlZCkgPT4ge1xuICAgICAgICBjb25zdCB7IG1heFN0ZXAgfSA9IHRoaXMucHJvcHM7XG5cbiAgICAgICAgaWYgKHN0ZXBTZWxlY3RlZCA8PSBtYXhTdGVwKSB7XG4gICAgICAgICAgICB0aGlzLmdvVG9TdGVwKHN0ZXBTZWxlY3RlZCk7XG4gICAgICAgIH1cbiAgICB9O1xuXG4gICAgZ29Ub1Jldmlld0FuZFNpZ24gPSAoKSA9PiB7XG4gICAgICAgIGNvbnN0IHtoaXN0b3J5fSA9IHRoaXMucHJvcHM7XG4gICAgICAgIGxldCBzYXZlUHJvbWlzZSA9IG51bGw7XG4gICAgICAgIGxldCBjb250ZW50ID0gc3RvcmUuZ2V0U3RhdGUoKS5jb250ZW50O1xuICAgICAgICBjb250ZW50ID0gcGFyc2VTZWFzb25zKGNvbnRlbnQpO1xuICAgICAgICB0aGlzLnNldFN0YXRlKHsgc2F2aW5nIDogdHJ1ZSB9KTtcblxuXG5cbiAgICAgICAgaWYgKCFjb250ZW50LnN0YXR1cyB8fCAoY29udGVudC5zdGF0dXMubmFtZSA9PT0gJ0RSQUZUJyAmJiBjb250ZW50LnN0ZXAgPT09IDQpKSB7XG4gICAgICAgICAgICAvL3dlIGFyZSBpbiBuZXcgbW9kZSBvciBlZGl0aW5nIGRyYWZ0XG4gICAgICAgICAgICBzYXZlUHJvbWlzZSA9IENvbnRlbnRBcmVuYS5Db250ZW50QXBpLnNhdmVDb250ZW50QXNJbmFjdGl2ZSh7Li4uY29udGVudCwgLi4ueyBzdGF0dXM6ICdBVVRPX0lOQUNUSVZFJyB9fSk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICBzYXZlUHJvbWlzZSA9IENvbnRlbnRBcmVuYS5Db250ZW50QXBpLnNhdmVDb250ZW50QXNEcmFmdChjb250ZW50KTtcbiAgICAgICAgfVxuXG4gICAgICAgIHNhdmVQcm9taXNlLmRvbmUoKHJlc3BvbnNlKT0+e1xuICAgICAgICAgICAgaWYgKCByZXNwb25zZS5zdWNjZXNzICYmIHJlc3BvbnNlLmNvbnRlbnRJZCApe1xuXG4gICAgICAgICAgICAgICAgaWYgKCByZXNwb25zZS5zYWxlc1BhY2thZ2VzICYmIEFycmF5LmlzQXJyYXkocmVzcG9uc2Uuc2FsZXNQYWNrYWdlcykgKXtcbiAgICAgICAgICAgICAgICAgICAgcmVzcG9uc2Uuc2FsZXNQYWNrYWdlcy5mb3JFYWNoKChzcCwgaSk9PntcblxuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHNwLnNhbGVzTWV0aG9kKSBzcC5zYWxlc01ldGhvZCA9IHNwLnNhbGVzTWV0aG9kLm5hbWU7XG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAoc3AuZXhjbHVkZWRDb3VudHJpZXMpIHNwLmV4Y2x1ZGVkVGVycml0b3JpZXMgPSBzcC5leGNsdWRlZENvdW50cmllcy5tYXAodD0+e3JldHVybntsYWJlbDp0Lm5hbWUsIHZhbHVlOnQubmFtZX19KVxuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHNwLnRlcnJpdG9yaWVzKSBzcC50ZXJyaXRvcmllcyA9IHNwLnRlcnJpdG9yaWVzLm1hcCh0PT57cmV0dXJue2xhYmVsOnQubmFtZSwgdmFsdWU6dC5uYW1lfX0pO1xuXG4gICAgICAgICAgICAgICAgICAgICAgICB0aGlzLnByb3BzLnVwZGF0ZVNhbGVzUGFja2FnZXMoXCJzYXZlXCIsIHNwLCBpKTtcbiAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgICAgdGhpcy5wcm9wcy51cGRhdGVDb250ZW50VmFsdWUoXCJpZFwiLCByZXNwb25zZS5jb250ZW50SWQpO1xuICAgICAgICAgICAgICAgIHRoaXMuc2V0U3RhdGUoeyBzYXZpbmcgOiBmYWxzZSwgc2F2aW5nU3VjY2VzczogdHJ1ZSB9KTtcbiAgICAgICAgICAgICAgICBoaXN0b3J5LnB1c2goXCIvY29udGVudGxpc3RpbmcvXCIrIHJlc3BvbnNlLmN1c3RvbUlkICsgXCIvc2lnblwiKTtcblxuICAgICAgICAgICAgICAgIHNjcm9sbFRvcE1haW5Db250ZW50KCk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0pO1xuICAgIH07XG5cbiAgICBnb1RvUHJldmlvdXNTdGVwID0gKCkgPT4ge1xuICAgICAgICBjb25zdCB7aGlzdG9yeX0gPSB0aGlzLnByb3BzO1xuICAgICAgICBsZXQgY29udGVudCA9IHN0b3JlLmdldFN0YXRlKCkuY29udGVudDtcbiAgICAgICAgbGV0IHByZXZTdGVwID0gKE51bWJlcihjb250ZW50LnN0ZXApIC0gMSk7XG5cbiAgICAgICAgaGlzdG9yeS5wdXNoKFwiL2NvbnRlbnRsaXN0aW5nL1wiKyBjb250ZW50LmN1c3RvbUlkICsgXCIvXCIgKyBwcmV2U3RlcCk7XG5cbiAgICAgICAgc2Nyb2xsVG9wTWFpbkNvbnRlbnQoKTtcbiAgICB9O1xuXG4gICAgZ29Ub05leHRTdGVwID0gKCkgPT4ge1xuXG4gICAgfTtcblxuICAgIGdvVG9TdGVwID0gKHN0ZXApID0+IHtcbiAgICAgICAgY29uc3Qge2hpc3Rvcnl9ID0gdGhpcy5wcm9wcztcbiAgICAgICAgbGV0IGNvbnRlbnQgPSBzdG9yZS5nZXRTdGF0ZSgpLmNvbnRlbnQ7XG4gICAgICAgIGhpc3RvcnkucHVzaChcIi9jb250ZW50bGlzdGluZy9cIisgY29udGVudC5jdXN0b21JZCArIFwiL1wiICsgc3RlcCk7XG4gICAgICAgIFxuICAgICAgICBzY3JvbGxUb3BNYWluQ29udGVudCgpO1xuICAgIH07XG5cbiAgICByZW5kZXIoKSB7XG4gICAgICAgIGNvbnN0IHsgc3RlcCwgbWF4U3RlcCB9ID0gdGhpcy5wcm9wcztcbiAgICAgICAgY29uc3QgeyBsYXN0U3RlcCwgc2F2aW5nIH0gPSB0aGlzLnN0YXRlO1xuICAgICAgICBjb25zdCBjYW50UmV2aWV3QW5kU2lnbiA9IChzdGVwID09PSA0ICYmICF0aGlzLnJldmlld0FuZFNpZ25FbmFibGVkKCkpO1xuXG4gICAgICAgIHJldHVybiAoXG4gICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImJ1dHRvbnNcIj5cbiAgICAgICAgICAgICAgICB7IHRoaXMucHJvcHMuc3RlcCA8IGxhc3RTdGVwICYmIDxkaXYgY2xhc3NOYW1lPVwiYnV0dG9ucy1jb250YWluZXIgc3RlcC0xIHN0ZXAtMlwiID5cbiAgICAgICAgICAgICAgICAgICAgeyB0aGlzLnByb3BzLnN0ZXAgIT09IDEgJiZcbiAgICAgICAgICAgICAgICAgICAgPGJ1dHRvbiBjbGFzc05hbWU9XCJzdGFuZGFyZC1idXR0b24gcHJldlwiXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgb25DbGljaz17IHRoaXMuZ29Ub1ByZXZpb3VzU3RlcCB9PlxuICAgICAgICAgICAgICAgICAgICAgICAgPGkgY2xhc3NOYW1lPVwiZmEgZmEtYXJyb3ctbGVmdFwiLz4ge3RoaXMuY29udGV4dC50KFwiQmFja1wiKX1cbiAgICAgICAgICAgICAgICAgICAgPC9idXR0b24+IH1cbiAgICAgICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICAgICAgWzEsMiwzLDRdLm1hcCgodixrKT0+KFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPXtjbihcInN0ZXBcIiwgeyAnc3RlcC1hY3RpdmUnOiB0aGlzLnByb3BzLnN0ZXAgPT09IHYsICdzdGVwLXZpc2l0ZWQnOiB2IDw9IG1heFN0ZXB9KX1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG9uQ2xpY2s9eygpID0+IHt0aGlzLm9uQ2xpY2tTdGVwKHYpfX1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGtleT17a30+e3Z9PC9kaXY+XG4gICAgICAgICAgICAgICAgICAgICAgICApKVxuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIHsgPGRpdiBkYXRhLXRpcD17Y2FudFJldmlld0FuZFNpZ24gPyB0aGlzLmdldFJldmlld0J1dHRvblRvb2x0aXBNZXNzYWdlcygpIDogdGhpcy5nZXRUb29sdGlwTWVzc2FnZXMoKX0gPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxidXR0b25cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaWQ9XCJuZXh0LXN0ZXBcIlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjbGFzc05hbWU9XCJzdGFuZGFyZC1idXR0b25cIlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBkaXNhYmxlZD17XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAoIHN0ZXAgPT09IDEgJiYgIXRoaXMuc3RlcDFFbmFibGVkKCkpIHx8XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAoIHN0ZXAgPT09IDIgJiYgIXRoaXMuc3RlcDJFbmFibGVkKCkpIHx8XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAoIHN0ZXAgPT09IDMgJiYgIXRoaXMuc3RlcDNFbmFibGVkKCkpIHx8XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAoIGNhbnRSZXZpZXdBbmRTaWduIClcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBvbkNsaWNrPXsgKCkgPT4gc3RlcCA9PT0gNCA/IHRoaXMuZ29Ub1Jldmlld0FuZFNpZ24oKSA6IHRoaXMuc2F2ZUFuZEdvTmV4dCgpfT5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAge3RoaXMuY29udGV4dC50KFwiTmV4dFwiKX1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHtzYXZpbmcgP1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpIGNsYXNzTmFtZT1cImZhIGZhLWNvZyBmYS1zcGluXCIvPiA6XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGkgY2xhc3NOYW1lPVwiZmEgZmEtYXJyb3ctcmlnaHRcIi8+fVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvYnV0dG9uPlxuICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+fVxuICAgICAgICAgICAgICAgIDwvZGl2Pn1cbiAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICApO1xuICAgIH1cbn1cblxuU2VsbEJ1dHRvbnMuY29udGV4dFR5cGVzID0ge1xuICAgIHQ6IFByb3BUeXBlcy5mdW5jLmlzUmVxdWlyZWRcbn07XG5cbmNvbnN0IG1hcFN0YXRlVG9Qcm9wcyA9IHN0YXRlID0+IHtcbiAgICByZXR1cm4gc3RhdGUuY29udGVudFxufTtcblxuY29uc3QgbWFwRGlzcGF0Y2hUb1Byb3BzID0gZGlzcGF0Y2ggPT4ge1xuICAgIHJldHVybiB7XG4gICAgICAgIGdvVG9QcmV2aW91c1N0ZXAgOiAoKSA9PiBkaXNwYXRjaChnb1RvUHJldmlvdXNTdGVwKCkpLFxuICAgICAgICBnb1RvTmV4dFN0ZXAgOiAoKSA9PiBkaXNwYXRjaChnb1RvTmV4dFN0ZXAoKSksXG4gICAgICAgIGdvVG9TdGVwIDogKHN0ZXApID0+IGRpc3BhdGNoKGdvVG9TdGVwKHN0ZXApKSxcbiAgICAgICAgdXBkYXRlQ29udGVudFZhbHVlIDogKGtleSx2YWx1ZSkgPT4gZGlzcGF0Y2godXBkYXRlQ29udGVudFZhbHVlKGtleSx2YWx1ZSkpLFxuICAgICAgICB1cGRhdGVTYWxlc1BhY2thZ2VzIDogKG5hbWUsIHNhbGVzUGFja2FnZSwgaW5kZXgpID0+IGRpc3BhdGNoKHtcbiAgICAgICAgICAgIHR5cGU6ICdVUERBVEVfU0FMRVNfUEFDS0FHRVMnLFxuICAgICAgICAgICAgaW5kZXg6IGluZGV4LFxuICAgICAgICAgICAgc2FsZXNQYWNrYWdlIDogc2FsZXNQYWNrYWdlLFxuICAgICAgICAgICAgbmFtZTogbmFtZVxuICAgICAgICB9KSxcbiAgICB9XG59O1xuXG5leHBvcnQgZGVmYXVsdCBjb25uZWN0KFxuICAgIG1hcFN0YXRlVG9Qcm9wcyxcbiAgICBtYXBEaXNwYXRjaFRvUHJvcHNcbikoU2VsbEJ1dHRvbnMpXG5cblxuXG4vLyBXRUJQQUNLIEZPT1RFUiAvL1xuLy8gLi9zcmMvQXBwQnVuZGxlL1Jlc291cmNlcy9wdWJsaWMvamF2YXNjcmlwdC9zZWxsL2NvbnRhaW5lcnMvU2VsbEJ1dHRvbnMuanMiLCJpbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xuaW1wb3J0IHsgY29ubmVjdCB9IGZyb20gXCJyZWFjdC1yZWR1eFwiO1xuaW1wb3J0IEZpbGVTZWxlY3RvciBmcm9tICcuLi8uLi9tYWluL2NvbXBvbmVudHMvRmlsZVNlbGVjdG9yJ1xuaW1wb3J0IFNlYXJjaENvbXBldGl0aW9uIGZyb20gJy4uLy4uL21haW4vY29tcG9uZW50cy9TZWFyY2hDb21wZXRpdGlvbidcbmltcG9ydCBTZWFzb25TZWxlY3RvciBmcm9tICcuLi8uLi9tYWluL2NvbXBvbmVudHMvU2Vhc29uU2VsZWN0b3InXG5pbXBvcnQgVGFnc0lucHV0IGZyb20gJ3JlYWN0LXRhZ3NpbnB1dCdcbmltcG9ydCB7c3RlcENoYW5nZVJlc2V0fSBmcm9tIFwiLi4vYWN0aW9ucy9jb250ZW50QWN0aW9uc1wiO1xuXG5pbXBvcnQge1xuICAgIERlc2NyaXB0aW9uLFxuICAgIE5ld1RvdXJuYW1lbnQsXG4gICAgTmV3Q2F0ZWdvcnksXG4gICAgU3BvcnRTZWxlY3Rvcixcbn0gZnJvbSBcIi4uL2NvbXBvbmVudHMvU2VsbEZvcm1JdGVtc1wiO1xuaW1wb3J0IHtQcm9wVHlwZXN9IGZyb20gXCJwcm9wLXR5cGVzXCI7XG5cbmNsYXNzIFNlbGxGb3JtU3RlcDEgZXh0ZW5kcyBSZWFjdC5Db21wb25lbnQge1xuXG4gICAgY29uc3RydWN0b3IocHJvcHMpIHtcbiAgICAgICAgc3VwZXIocHJvcHMpO1xuICAgICAgICBpZiAoIHByb3BzLnN0ZXAgIT09IDEpIHJldHVybjtcbiAgICAgICAgdGhpcy5zdGF0ZSA9IHtcbiAgICAgICAgICAgIGxhc3RTcG9ydElkIDogbnVsbCxcbiAgICAgICAgICAgIGxhc3RDYXRlZ29yeUlkIDogbnVsbCxcbiAgICAgICAgICAgIGxhc3RUb3VybmFtZW50SWQgOiBudWxsLFxuICAgICAgICAgICAgbG9hZGluZ0NhdGVnb3JpZXMgOiBmYWxzZSxcbiAgICAgICAgICAgIGxvYWRpbmdUb3VybmFtZW50cyA6IGZhbHNlLFxuICAgICAgICAgICAgbG9hZGluZ1NlYXNvbnM6IGZhbHNlLFxuICAgICAgICAgICAgbG9hZGluZ1NjaGVkdWxlOiBmYWxzZSxcbiAgICAgICAgICAgIHNlYXNvblNlbGVjdG9ycyA6IFsxXSxcbiAgICAgICAgICAgIHNwb3J0U2VsZWN0b3JzIDogWzFdLFxuICAgICAgICAgICAgc2Vhc29uczogW10sXG4gICAgICAgICAgICBzY2hlZHVsZXM6IHt9LFxuICAgICAgICAgICAgc2hvd1NlYXJjaCA6IHByb3BzLnNob3dTZWFyY2gsXG4gICAgICAgICAgICB3ZWJzaXRlczogW10sXG4gICAgICAgICAgICB3ZWJzaXRlOiAnJyxcbiAgICAgICAgICAgIHRvdXJuYW1lbnRzOiBbXSxcbiAgICAgICAgICAgIHNwb3J0Q2F0ZWdvcmllczogW10sXG4gICAgICAgICAgICBzcG9ydENhdGVnb3J5RXh0ZW5kZWQgOiBmYWxzZSxcbiAgICAgICAgfTtcbiAgICB9XG5cbiAgICBjb21wb25lbnREaWRNb3VudCAoKSB7XG5cbiAgICAgICAgaWYgKHRoaXMucHJvcHMuc3RlcCAhPT0gMSkgcmV0dXJuO1xuXG4gICAgICAgIENvbnRlbnRBcmVuYS5BcGkuZ2V0U3BvcnRzKCkuZG9uZSggKHNwb3J0cyApID0+IHtcbiAgICAgICAgICAgIENvbnRlbnRBcmVuYS5EYXRhLkZ1bGxTcG9ydHMgPSBzcG9ydHM7XG4gICAgICAgIH0pO1xuXG4gICAgICAgIENvbnRlbnRBcmVuYS5BcGkuZ2V0Q291bnRyaWVzKCkuZG9uZSggKGNvdW50cmllcyApID0+IHtcbiAgICAgICAgfSk7XG5cbiAgICAgICAgdGhpcy5wcm9wcy51cGRhdGVDb250ZW50VmFsdWUoXCJsYXN0VXBkYXRlXCIsbmV3IERhdGUoKS5nZXRUaW1lKCkpO1xuICAgIH1cblxuICAgIGxvYWRDYXRlZ29yaWVzIChzcG9ydCkge1xuXG4gICAgICAgIGxldCBzcG9ydElkID0gc3BvcnQuZXh0ZXJuYWxJZDtcblxuICAgICAgICBpZiAoIHNwb3J0SWQgPT09IHRoaXMuc3RhdGUubGFzdFNwb3J0SWQgKSByZXR1cm47XG5cbiAgICAgICAgdGhpcy5zZXRTdGF0ZSh7IGxvYWRpbmdDYXRlZ29yaWVzIDogdHJ1ZSB9KTtcbiAgICAgICAgQ29udGVudEFyZW5hLkFwaS5nZXRDYXRlZ29yaWVzKHNwb3J0SWQpLmRvbmUoIChjYXRlZ29yaWVzICkgPT4ge1xuICAgICAgICAgICAgQ29udGVudEFyZW5hLkRhdGEuQ2F0ZWdvcmllcyA9IGNhdGVnb3JpZXM7XG4gICAgICAgICAgICB0aGlzLnNldFN0YXRlKHsgbGFzdFNwb3J0SWQgOiBzcG9ydElkLCBsb2FkaW5nQ2F0ZWdvcmllcyA6IGZhbHNlIH0pO1xuICAgICAgICB9KTtcbiAgICB9XG5cbiAgICBsb2FkVG91cm5hbWVudHMgKHNwb3J0LCBjYXRlZ29yeSkge1xuXG4gICAgICAgIGlmKCBzcG9ydC5jdXN0b20gKSByZXR1cm47XG5cbiAgICAgICAgbGV0IHNwb3J0SWQgPSBzcG9ydC5leHRlcm5hbElkO1xuICAgICAgICBsZXQgY2F0ZWdvcnlJZCA9ICggY2F0ZWdvcnkgKSA/IGNhdGVnb3J5LmV4dGVybmFsSWQgOiBudWxsO1xuXG4gICAgICAgIGlmICggc3BvcnRJZCA9PT0gdGhpcy5zdGF0ZS5sYXN0U3BvcnRJZCAmJiBjYXRlZ29yeUlkID09PSB0aGlzLnN0YXRlLmxhc3RDYXRlZ29yeUlkICkgcmV0dXJuO1xuXG4gICAgICAgIHRoaXMuc2V0U3RhdGUoeyBsb2FkaW5nVG91cm5hbWVudHMgOiB0cnVlIH0pO1xuICAgICAgICBDb250ZW50QXJlbmEuQXBpLmdldFRvdXJuYW1lbnRzKHNwb3J0SWQsY2F0ZWdvcnlJZCkuZG9uZSggKHRvdXJuYW1lbnRzICkgPT4ge1xuICAgICAgICAgICAgQ29udGVudEFyZW5hLkRhdGEuVG91cm5hbWVudHMgPSB0b3VybmFtZW50cztcblxuICAgICAgICAgICAgaWYgKHRvdXJuYW1lbnRzLmxlbmd0aCA9PT0gMCApIHtcbiAgICAgICAgICAgICAgICBpZiAoIXRoaXMuc3RhdGUuY3VzdG9tU2Vhc29uc1BhcnNlZCl7XG4gICAgICAgICAgICAgICAgICAgIHRoaXMucHJvcHMuYWRkTmV3Q2F0ZWdvcnkoKTtcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5wcm9wcy5hZGROZXdUb3VybmFtZW50KCk7XG5cbiAgICAgICAgICAgICAgICAgICAgaWYgKHRoaXMucHJvcHMuY3VzdG9tU2Vhc29ucy5sZW5ndGggPiAwICl7XG5cbiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMucHJvcHMuY3VzdG9tU2Vhc29ucy5mb3JFYWNoKChzLGkpPT57XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5wcm9wcy5hZGROZXdTZWFzb24oaSk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5wcm9wcy51cGRhdGVGcm9tTXVsdGlwbGUoXCJzZWFzb25zXCIsIGksIFwiZnJvbVwiLCBzLmZyb20pO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMucHJvcHMudXBkYXRlRnJvbU11bHRpcGxlKFwic2Vhc29uc1wiLGksIFwidG9cIiwgcy50byk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHMuZml4dHVyZXMpIHRoaXMucHJvcHMudXBkYXRlRnJvbU11bHRpcGxlKFwic2Vhc29uc1wiLGksIFwiZml4dHVyZXNcIiwgcy5maXh0dXJlcyk7XG4gICAgICAgICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMucHJvcHMuYWRkTmV3U2Vhc29uKDApO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgICAgdGhpcy5zZXRTdGF0ZSh7XG4gICAgICAgICAgICAgICAgICAgIGxvYWRpbmdUb3VybmFtZW50cyA6IGZhbHNlLFxuICAgICAgICAgICAgICAgICAgICBjdXN0b21TZWFzb25zUGFyc2VkIDogdHJ1ZVxuICAgICAgICAgICAgICAgIH0pO1xuXG4gICAgICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICB0aGlzLnNldFN0YXRlKHtcbiAgICAgICAgICAgICAgICBsYXN0U3BvcnRJZCA6IHNwb3J0SWQsXG4gICAgICAgICAgICAgICAgbG9hZGluZ1RvdXJuYW1lbnRzIDogZmFsc2UsXG4gICAgICAgICAgICAgICAgbGFzdENhdGVnb3J5SWQgOiBjYXRlZ29yeUlkXG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfSk7XG4gICAgfVxuXG4gICAgbG9hZFNlYXNvbnMgKHRvdXJuYW1lbnRzKSB7XG4gICAgICAgIGxldCB0b3VybmFtZW50SWQgPSAoIHRvdXJuYW1lbnRzLmxlbmd0aCA+IDAgKSA/IHRvdXJuYW1lbnRzWzBdLmV4dGVybmFsSWQgOiBudWxsO1xuXG4gICAgICAgIGlmICggdG91cm5hbWVudElkID09PSB0aGlzLnN0YXRlLmxhc3RUb3VybmFtZW50SWQgKSByZXR1cm47XG5cbiAgICAgICAgdGhpcy5zZXRTdGF0ZSh7IGxvYWRpbmdTZWFzb25zIDogdHJ1ZSB9KTtcbiAgICAgICAgQ29udGVudEFyZW5hLkFwaS5nZXRTZWFzb25zKHRvdXJuYW1lbnRJZCkuZG9uZSggKHNlYXNvbnMgKSA9PiB7XG4gICAgICAgICAgICBDb250ZW50QXJlbmEuRGF0YS5TZWFzb25zID0gc2Vhc29ucztcblxuICAgICAgICAgICAgaWYgKHNlYXNvbnMubGVuZ3RoID09PSAwICkge1xuICAgICAgICAgICAgICAgIHRoaXMucHJvcHMuYWRkTmV3U2Vhc29uKDApO1xuICAgICAgICAgICAgICAgIHRoaXMuc2V0U3RhdGUoe1xuICAgICAgICAgICAgICAgICAgICBsb2FkaW5nU2Vhc29ucyA6IGZhbHNlLFxuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgdGhpcy5zZXRTdGF0ZSh7XG4gICAgICAgICAgICAgICAgbGFzdFRvdXJuYW1lbnRJZCA6IHRvdXJuYW1lbnRJZCxcbiAgICAgICAgICAgICAgICBsb2FkaW5nU2Vhc29ucyA6IGZhbHNlLFxuICAgICAgICAgICAgICAgIHNlYXNvbnMgOiBzZWFzb25zXG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfSlcbiAgICAgICAgICAgIC5hbHdheXMoKCk9PntcbiAgICAgICAgICAgIH0pO1xuICAgIH1cblxuICAgIGxvYWRTY2hlZHVsZSAobmV4dFByb3BzKSB7XG5cbiAgICAgICAgbGV0IF90aGlzID0gdGhpcztcbiAgICAgICAgY29uc3QgeyB1cGRhdGVGcm9tTXVsdGlwbGUgfSA9IHRoaXMucHJvcHM7XG4gICAgICAgIGNvbnN0IHsgc2Vhc29ucywgc2NoZWR1bGVzQnlTZWFzb24gfSA9IG5leHRQcm9wcztcblxuICAgICAgICBzZWFzb25zLmZvckVhY2goKCBzZWFzb24sIGluZGV4ICkgPT57XG4gICAgICAgICAgICBpZiAoICFzZWFzb24uc2NoZWR1bGVzICYmICFzZWFzb24uY3VzdG9tICl7XG4gICAgICAgICAgICAgICAgX3RoaXMuc2V0U3RhdGUoeyBsb2FkaW5nU2NoZWR1bGUgOiB0cnVlIH0pO1xuICAgICAgICAgICAgICAgIENvbnRlbnRBcmVuYS5BcGkuZ2V0U2NoZWR1bGUoc2Vhc29uLmV4dGVybmFsSWQpLmRvbmUoIChzY2hlZHVsZXMgKSA9PiB7XG4gICAgICAgICAgICAgICAgICAgIF90aGlzLnNldFN0YXRlKHsgbG9hZGluZ1NjaGVkdWxlIDogZmFsc2UgfSk7XG4gICAgICAgICAgICAgICAgICAgIGxldCBrZXlzID0gW107XG4gICAgICAgICAgICAgICAgICAgIGlmIChzY2hlZHVsZXNCeVNlYXNvbiAmJiBzY2hlZHVsZXNCeVNlYXNvbltpbmRleF0pe1xuICAgICAgICAgICAgICAgICAgICAgICAga2V5cyA9IE9iamVjdC5rZXlzKHNjaGVkdWxlc0J5U2Vhc29uW2luZGV4XSk7XG4gICAgICAgICAgICAgICAgICAgICAgICBrZXlzLmZvckVhY2goKGspPT57XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgc2NoZWR1bGVzQnlTZWFzb25baW5kZXhdW2tdLm1hdGNoZXMuZm9yRWFjaCgobSk9PntcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKG0uc2VsZWN0ZWQpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNjaGVkdWxlc1trXS5tYXRjaGVzLmdldChtLmV4dGVybmFsSWQpLnNlbGVjdGVkID0gdHJ1ZTtcblxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgc2NoZWR1bGVzW2tdLnNlbGVjdGVkID0gdHJ1ZTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgICAgICAgdXBkYXRlRnJvbU11bHRpcGxlKFwic2Vhc29uc1wiLCBpbmRleCwgXCJzY2hlZHVsZXNcIiwgc2NoZWR1bGVzKTtcbiAgICAgICAgICAgICAgICAgICAgaWYoIGtleXMubGVuZ3RoPiAwKSB1cGRhdGVGcm9tTXVsdGlwbGUoXCJzZWFzb25zXCIsIGluZGV4LCBcInNob3dTY2hlZHVsZVwiLCB0cnVlKTtcblxuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgfVxuICAgICAgICB9KTtcbiAgICB9XG5cbiAgICBjb21wb25lbnRXaWxsUmVjZWl2ZVByb3BzKG5leHRQcm9wcykge1xuXG4gICAgICAgIGlmIChuZXh0UHJvcHMuc3RlcCAhPT0gMSkgcmV0dXJuO1xuXG4gICAgICAgIGNvbnN0IHsgbG9hZGluZ0NhdGVnb3JpZXMsIGxvYWRpbmdUb3VybmFtZW50cywgbG9hZGluZ1NlYXNvbnMgfSA9IHRoaXMuc3RhdGU7XG4gICAgICAgIGxldCB0b3VybmFtZW50cywgc2Vhc29ucywgc3BvcnRDYXRlZ29yaWVzLCB3ZWJzaXRlcywgbmFtZSA9IG5leHRQcm9wcy5uYW1lO1xuXG4gICAgICAgIHRvdXJuYW1lbnRzID0gKCBBcnJheS5pc0FycmF5KG5leHRQcm9wcy50b3VybmFtZW50KSApID8gbmV4dFByb3BzLnRvdXJuYW1lbnQgOiBbbmV4dFByb3BzLnRvdXJuYW1lbnRdO1xuICAgICAgICBzZWFzb25zID0gKCBBcnJheS5pc0FycmF5KG5leHRQcm9wcy5zZWFzb25zKSApID8gbmV4dFByb3BzLnNlYXNvbnMgOiBbbmV4dFByb3BzLnNlYXNvbnNdO1xuICAgICAgICBzcG9ydENhdGVnb3JpZXMgPSggQXJyYXkuaXNBcnJheShuZXh0UHJvcHMuc3BvcnRDYXRlZ29yeSkgKSA/IG5leHRQcm9wcy5zcG9ydENhdGVnb3J5IDogW25leHRQcm9wcy5zcG9ydENhdGVnb3J5XTtcbiAgICAgICAgd2Vic2l0ZXMgPSggQXJyYXkuaXNBcnJheShuZXh0UHJvcHMud2Vic2l0ZSkgKSA/IG5leHRQcm9wcy53ZWJzaXRlIDogKG5leHRQcm9wcy53ZWJzaXRlKSA/IFtuZXh0UHJvcHMud2Vic2l0ZV06IFtdO1xuXG4gICAgICAgIGlmIChuZXh0UHJvcHMuc3BvcnRzLmxlbmd0aCA9PT0gMSAmJiAhbG9hZGluZ0NhdGVnb3JpZXMpIHtcbiAgICAgICAgICAgIHRoaXMubG9hZENhdGVnb3JpZXMobmV4dFByb3BzLnNwb3J0c1swXSk7XG4gICAgICAgICAgICB0aGlzLnNldFN0YXRlKCgpID0+ICh7XG4gICAgICAgICAgICAgICAgc2hvd1NlYXJjaDogZmFsc2VcbiAgICAgICAgICAgIH0pKTtcbiAgICAgICAgfVxuXG4gICAgICAgIGlmIChuZXh0UHJvcHMuc3BvcnRzLmxlbmd0aCA9PT0gMCkge1xuICAgICAgICAgICAgdGhpcy5zZXRTdGF0ZSgoKSA9PiAoe1xuICAgICAgICAgICAgICAgIHNlYXNvbnM6IFtdLFxuICAgICAgICAgICAgICAgIHNjaGVkdWxlczogW11cbiAgICAgICAgICAgIH0pKTtcbiAgICAgICAgICAgIHNwb3J0Q2F0ZWdvcmllcyA9IFtdO1xuICAgICAgICAgICAgdG91cm5hbWVudHM9IFtdO1xuXG4gICAgICAgICAgICB0aGlzLnByb3BzLnVwZGF0ZUNvbnRlbnRWYWx1ZShcIm5hbWVcIixcIlwiKTtcbiAgICAgICAgfVxuXG4gICAgICAgIGlmIChuZXh0UHJvcHMuc3BvcnRzLmxlbmd0aCA9PT0gMSAmJiAhbG9hZGluZ1RvdXJuYW1lbnRzKSB7XG4gICAgICAgICAgICB0aGlzLmxvYWRUb3VybmFtZW50cyhuZXh0UHJvcHMuc3BvcnRzWzBdLCBzcG9ydENhdGVnb3JpZXNbMF0pO1xuICAgICAgICB9XG5cbiAgICAgICAgaWYgKHRvdXJuYW1lbnRzLmxlbmd0aCA9PT0gMSAmJiAhbG9hZGluZ1NlYXNvbnMpIHtcbiAgICAgICAgICAgIGlmICghdG91cm5hbWVudHNbMF0uY3VzdG9tKSB7XG4gICAgICAgICAgICAgICAgdGhpcy5sb2FkU2Vhc29ucyh0b3VybmFtZW50cyk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cblxuICAgICAgICBpZiAodG91cm5hbWVudHMubGVuZ3RoID09PSAwKSB7XG4gICAgICAgICAgICB0aGlzLnNldFN0YXRlKHtzZWFzb25zIDogW119KTtcbiAgICAgICAgfVxuXG4gICAgICAgIHRoaXMuc2V0U3RhdGUoe1xuICAgICAgICAgICAgc3BvcnRDYXRlZ29yaWVzOiBzcG9ydENhdGVnb3JpZXMsXG4gICAgICAgICAgICB0b3VybmFtZW50cyA6IHRvdXJuYW1lbnRzLFxuICAgICAgICB9KTtcblxuICAgICAgICBpZiAoc3BvcnRDYXRlZ29yaWVzLmxlbmd0aCA9PT0gMSApIHtcbiAgICAgICAgICAgIHRoaXMuc2V0U3RhdGUoe3Nwb3J0Q2F0ZWdvcnlFeHRlbmRlZCA6IHNwb3J0Q2F0ZWdvcmllc1swXS5leHRlbmRlZH0pO1xuXG4gICAgICAgICAgICBpZiAoc3BvcnRDYXRlZ29yaWVzWzBdLmV4dGVuZGVkKXtcbiAgICAgICAgICAgICAgICB0aGlzLnByb3BzLnVwZGF0ZUNvbnRlbnRWYWx1ZShcImN1c3RvbUNhdGVnb3J5XCIsc3BvcnRDYXRlZ29yaWVzWzBdLm5hbWUpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG5cbiAgICAgICAgaWYgKHNlYXNvbnMubGVuZ3RoID4gMCkge1xuICAgICAgICAgICAgdGhpcy5zZXRTdGF0ZSgoKSA9PiAoe1xuICAgICAgICAgICAgICAgIHNlYXNvblNlbGVjdG9yczogWy4uLkFycmF5KHNlYXNvbnMubGVuZ3RoKS5rZXlzKCldXG4gICAgICAgICAgICB9KSk7XG4gICAgICAgICAgICAvL3RoaXMubG9hZFNjaGVkdWxlKG5leHRQcm9wcyk7XG4gICAgICAgIH1cblxuICAgICAgICBpZiAod2Vic2l0ZXMgJiYgd2Vic2l0ZXMubGVuZ3RoID4gMCkge1xuICAgICAgICAgICAgdGhpcy5zZXRTdGF0ZSh7IHdlYnNpdGVzOiB3ZWJzaXRlc30pO1xuICAgICAgICB9XG5cbiAgICB9XG5cbiAgICAvKipcbiAgICAgKlxuICAgICAqIEBwYXJhbSBldmVudFxuICAgICAqIEBwYXJhbSBrZXlcbiAgICAgKi9cbiAgICB1cGRhdGVDb250ZW50VmFsdWUgPSAoIGV2ZW50LCBrZXkgKSA9PntcbiAgICAgICAgdGhpcy5wcm9wcy51cGRhdGVDb250ZW50VmFsdWUoa2V5LGV2ZW50LnRhcmdldC52YWx1ZSk7XG4gICAgfTtcblxuICAgIGZvcmNlQ3VzdG9tVG91cm5hbWVudCA9ICgpID0+IHtcbiAgICAgICAgcmV0dXJuIHRoaXMuaGFzQ3VzdG9tU3BvcnQoKSB8fCB0aGlzLmhhc0N1c3RvbUNhdGVnb3J5KCkgfHwgdGhpcy5zdGF0ZS5zcG9ydENhdGVnb3J5RXh0ZW5kZWRcbiAgICB9O1xuXG4gICAgZm9yY2VDdXN0b21DYXRlZ29yeSA9ICgpID0+IHtcbiAgICAgICAgcmV0dXJuIHRoaXMuaGFzQ3VzdG9tU3BvcnQoKVxuICAgIH07XG5cbiAgICBmb3JjZUN1c3RvbVNlYXNvbiA9ICgpID0+IHtcbiAgICAgICAgbGV0IHJlc3BvbnNlID0gdGhpcy5oYXNDdXN0b21TcG9ydCgpIHx8IHRoaXMuaGFzQ3VzdG9tVG91cm5hbWVudCgpO1xuICAgICAgICByZXR1cm4gcmVzcG9uc2U7XG4gICAgfTtcblxuICAgIGhhc0N1c3RvbVNwb3J0ID0gKCkgPT4ge1xuXG4gICAgICAgIGxldCBoYXNDdXN0b21TcG9ydCA9IGZhbHNlO1xuICAgICAgICBsZXQgcmVzcG9uc2U7XG5cbiAgICAgICAgdGhpcy5wcm9wcy5zcG9ydHMuZm9yRWFjaCggKCBzcG9ydCApID0+IHtcbiAgICAgICAgICAgIGlmICggc3BvcnQuY3VzdG9tICkgaGFzQ3VzdG9tU3BvcnQgPSB0cnVlO1xuICAgICAgICB9KTtcblxuICAgICAgICByZXNwb25zZSA9IGhhc0N1c3RvbVNwb3J0ICYmIHRoaXMucHJvcHMuc3BvcnRzLmxlbmd0aCA9PT0gMTtcblxuICAgICAgICByZXR1cm4gcmVzcG9uc2U7XG5cbiAgICB9O1xuXG4gICAgaGFzQ3VzdG9tQ2F0ZWdvcnkgPSAoKSA9PiB7XG5cbiAgICAgICAgbGV0IGhhc0N1c3RvbUNhdGVnb3J5ID0gZmFsc2U7XG4gICAgICAgIGxldCByZXNwb25zZTtcblxuICAgICAgICB0aGlzLnN0YXRlLnNwb3J0Q2F0ZWdvcmllcy5mb3JFYWNoKCAoIHNwb3J0Q2F0ZWdvcnkgKSA9PiB7XG4gICAgICAgICAgICBpZiAoIHNwb3J0Q2F0ZWdvcnkuY3VzdG9tICkgaGFzQ3VzdG9tQ2F0ZWdvcnkgPSB0cnVlO1xuICAgICAgICB9KTtcblxuICAgICAgICByZXNwb25zZSA9ICB0aGlzLmZvcmNlQ3VzdG9tQ2F0ZWdvcnkoKSB8fCBoYXNDdXN0b21DYXRlZ29yeSA7XG4gICAgICAgIHJldHVybiByZXNwb25zZVxuICAgIH07XG5cbiAgICBoYXNDdXN0b21Ub3VybmFtZW50ID0gKCkgPT4ge1xuICAgICAgICBsZXQgaGFzQ3VzdG9tVG91cm5hbWVudCA9IGZhbHNlO1xuICAgICAgICBsZXQgcmVzcG9uc2U7XG4gICAgICAgIHRoaXMuc3RhdGUudG91cm5hbWVudHMuZm9yRWFjaCggKCB0b3VybmFtZW50ICkgPT4ge1xuICAgICAgICAgICAgaWYgKCB0b3VybmFtZW50LmN1c3RvbSApIGhhc0N1c3RvbVRvdXJuYW1lbnQgPSB0cnVlO1xuICAgICAgICB9KTtcblxuICAgICAgICByZXNwb25zZSA9ICAgdGhpcy5mb3JjZUN1c3RvbVRvdXJuYW1lbnQoKSB8fCBoYXNDdXN0b21Ub3VybmFtZW50IHx8IHRoaXMuc3RhdGUuc3BvcnRDYXRlZ29yeUV4dGVuZGVkO1xuICAgICAgICByZXR1cm4gcmVzcG9uc2VcbiAgICB9O1xuXG4gICAgaGFzQ3VzdG9tU2Vhc29uID0gKCkgPT4ge1xuXG4gICAgICAgIGxldCBoYXNDdXN0b21TZWFzb24gPSBmYWxzZTtcbiAgICAgICAgbGV0IHJlc3BvbnNlO1xuICAgICAgICB0aGlzLnByb3BzLnNlYXNvbnMuZm9yRWFjaCggKCBzZWFzb24gKSA9PiB7XG4gICAgICAgICAgICBpZiAoIHNlYXNvbi5jdXN0b20gKSBoYXNDdXN0b21TZWFzb24gPSB0cnVlO1xuICAgICAgICB9KTtcblxuICAgICAgICByZXNwb25zZSA9ICB0aGlzLmZvcmNlQ3VzdG9tU2Vhc29uKCkgfHwgaGFzQ3VzdG9tU2Vhc29uO1xuICAgICAgICByZXR1cm4gcmVzcG9uc2VcbiAgICB9O1xuXG4gICAgYWRkU2Vhc29uID0gKCkgPT4ge1xuICAgICAgICBjb25zb2xlLmxvZyhcIkFERFNFQVNPTlwiKTtcbiAgICAgICAgY29uc3Qge3NlYXNvbnN9ID0gdGhpcy5wcm9wcztcblxuICAgICAgICB0aGlzLnNldFN0YXRlKChwcmV2U3RhdGUpPT4gKHtcbiAgICAgICAgICAgIHNlYXNvblNlbGVjdG9ycyA6IFsuLi5BcnJheShzZWFzb25zLmxlbmd0aCArMSkua2V5cygpXVxuICAgICAgICB9KSk7XG5cbiAgICAgICAgaWYgKCB0aGlzLmhhc0N1c3RvbVRvdXJuYW1lbnQoKSApe1xuICAgICAgICAgICAgdGhpcy5wcm9wcy5hZGROZXdTZWFzb24odGhpcy5wcm9wcy5zZWFzb25zLmxlbmd0aCk7XG4gICAgICAgIH1cblxuXG4gICAgfTtcblxuICAgIGFkZFNwb3J0U2VsZWN0b3IgPSAoKSA9PiB7XG4gICAgICAgIHRoaXMuc2V0U3RhdGUoKHByZXZTdGF0ZSk9PiAoe1xuICAgICAgICAgICAgc3BvcnRTZWxlY3RvcnMgOiBbLi4ucHJldlN0YXRlLnNwb3J0U2VsZWN0b3JzLCAxXVxuICAgICAgICB9KSlcbiAgICB9O1xuXG4gICAgcmVtb3ZlU3BvcnQgPSAoaSkgPT4ge1xuXG4gICAgICAgIGlmICggaSA9PT0gMCApIHtcbiAgICAgICAgICAgIHRoaXMucHJvcHMucmVtb3ZlTmV3U3BvcnQoaSk7XG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cblxuICAgICAgICB0aGlzLnNldFN0YXRlKChwcmV2U3RhdGUpPT4ge1xuICAgICAgICAgICAgcHJldlN0YXRlLnNwb3J0U2VsZWN0b3JzLnNwbGljZShpLDEpO1xuICAgICAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgICAgICBzcG9ydFNlbGVjdG9ycyA6IHByZXZTdGF0ZS5zcG9ydFNlbGVjdG9yc1xuICAgICAgICAgICAgfVxuICAgICAgICB9KTtcblxuICAgICAgICB0aGlzLnByb3BzLnJlbW92ZUZyb21NdWx0aXBsZShpLCBcInNwb3J0c1wiKTtcbiAgICB9O1xuXG4gICAgcmVtb3ZlU2Vhc29uID0gKGkpID0+IHtcblxuICAgICAgICBpZiAoIGkgPT09IDAgKSB7XG4gICAgICAgICAgICB0aGlzLnByb3BzLnJlbW92ZU5ld1NlYXNvbihpKTtcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuXG4gICAgICAgIHRoaXMuc2V0U3RhdGUoKHByZXZTdGF0ZSk9PiB7XG4gICAgICAgICAgICBwcmV2U3RhdGUuc2Vhc29uU2VsZWN0b3JzLnNwbGljZShpLDEpO1xuICAgICAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgICAgICBzZWFzb25TZWxlY3RvcnMgOiBwcmV2U3RhdGUuc2Vhc29uU2VsZWN0b3JzXG4gICAgICAgICAgICB9XG4gICAgICAgIH0pO1xuXG4gICAgICAgIHRoaXMucHJvcHMucmVtb3ZlRnJvbU11bHRpcGxlKGksIFwic2Vhc29uc1wiKTtcbiAgICB9O1xuXG4gICAgdG9nZ2xlU2VhcmNoID0gKCB0b3VybmFtZW50KSA9PiB7XG4gICAgICAgIGNvbnN0IHtoaXN0b3J5fSA9IHRoaXMucHJvcHM7XG4gICAgICAgIGxldCBfdGhpcyA9IHRoaXM7XG4gICAgICAgIGhpc3RvcnkucHVzaChcIi9jb250ZW50bGlzdGluZy8xXCIpO1xuICAgICAgICBpZiAodG91cm5hbWVudCl7XG4gICAgICAgICAgICBzZXRUaW1lb3V0KCgpPT57XG4gICAgICAgICAgICAgICAgX3RoaXMucHJvcHMuc2VsZWN0VG91cm5hbWVudCh0b3VybmFtZW50KTtcbiAgICAgICAgICAgIH0sMTAwMCk7XG4gICAgICAgIH1cbiAgICB9O1xuXG4gICAgd2Vic2l0ZXNVcGRhdGVkID0gKHdlYnNpdGVzKSA9PiB7XG4gICAgICAgIHRoaXMuc2V0U3RhdGUoe3dlYnNpdGVzfSk7XG4gICAgICAgIHRoaXMucHJvcHMudXBkYXRlQ29udGVudFZhbHVlKFwid2Vic2l0ZVwiLHdlYnNpdGVzKTtcbiAgICB9O1xuXG4gICAgaGFuZGxlV2Vic2l0ZUNoYW5nZSA9IHdlYnNpdGUgPT4ge1xuICAgICAgICB0aGlzLnNldFN0YXRlKHt3ZWJzaXRlfSk7XG4gICAgfTtcblxuICAgIHNlbGVjdFRvdXJuYW1lbnQgPSAoIHRvdXJuYW1lbnQgKSA9PntcblxuICAgICAgICB0aGlzLnRvZ2dsZVNlYXJjaCh0b3VybmFtZW50KTtcbiAgICB9O1xuXG4gICAgY2xlYXIgPSAoKSA9PiB7XG4gICAgICAgIHRoaXMucHJvcHMucmVzZXQoKTtcbiAgICAgICAgY29uc3Qge2hpc3Rvcnl9ID0gdGhpcy5wcm9wcztcbiAgICAgICAgaGlzdG9yeS5wdXNoKFwiL2NvbnRlbnRsaXN0aW5nL25ld1wiKTtcbiAgICB9O1xuXG4gICAgc2Nyb2xsID0gKCkgPT4ge1xuXG4gICAgICAgIGNvbnN0IHtzdGVwQ2hhbmdlLCBzdGVwQ2hhbmdlUmVzZXQgfSA9IHRoaXMucHJvcHM7XG5cbiAgICAgICAgaWYgKCBzdGVwQ2hhbmdlICkge1xuICAgICAgICAgICAgd2luZG93LnNjcm9sbFRvKDAsIDApO1xuICAgICAgICAgICAgc3RlcENoYW5nZVJlc2V0KCk7XG4gICAgICAgIH1cblxuICAgIH07XG5cbiAgICBhZGRGaWxlID0gKHJlc3BvbnNlKSA9PiB7XG4gICAgICAgIGNvbnN0IHthdHRhY2htZW50c30gPSB0aGlzLnByb3BzO1xuICAgICAgICBsZXQgaW5kZXggPSBhdHRhY2htZW50cy5sZW5ndGggO1xuICAgICAgICB0aGlzLnByb3BzLnVwZGF0ZUF0dGFjaG1lbnRzKFwic2F2ZVwiLCBpbmRleCwge2ZpbGU6IHJlc3BvbnNlLmZpbGUsIG5hbWUgOiByZXNwb25zZS5uYW1lIH0gKTtcbiAgICB9O1xuXG4gICAgcmVtb3ZlRmlsZSA9ICggaW5kZXggKSA9PiB7XG4gICAgICAgIHRoaXMucHJvcHMudXBkYXRlQXR0YWNobWVudHMoXCJyZW1vdmVcIiwgaW5kZXgsIG51bGwpO1xuICAgIH07XG5cbiAgICBzaG93U2Vhc29uU2VsZWN0b3IgPSAoKSA9PiB7XG4gICAgICAgIGxldCBzaG93ID0gdGhpcy5zdGF0ZS5zcG9ydFNlbGVjdG9ycy5sZW5ndGggPT09IDEgJiZcbiAgICAgICAgICAgICggdGhpcy5zdGF0ZS5zZWFzb25zLmxlbmd0aCA+IDAgfHwgdGhpcy5mb3JjZUN1c3RvbVNlYXNvbigpICkgJiZcbiAgICAgICAgICAgIHRoaXMuc3RhdGUuc2Vhc29uU2VsZWN0b3JzLmxlbmd0aCA+IDA7XG4gICAgICAgIHJldHVybiBzaG93O1xuXG4gICAgfTtcblxuICAgIHJlbmRlcigpIHtcblxuICAgICAgICBpZiAoIHRoaXMucHJvcHMuc3RlcCAhPT0gMSApIHJldHVybiAobnVsbCk7XG5cbiAgICAgICAgY29uc3Qge3dlYnNpdGVzLCB3ZWJzaXRlfSA9IHRoaXMuc3RhdGU7XG4gICAgICAgIGNvbnN0IHdlYnNpdGVQbGFjZWhvbGRlciA9IHdlYnNpdGVzLmxlbmd0aCA+IDAgPyAnJyA6IHRoaXMuY29udGV4dC50KFwiQ0xfU1RFUDFfUExBQ0VIT0xERVJfV0VCU0lURVwiKTtcblxuICAgICAgICB0aGlzLnNjcm9sbCgpO1xuXG4gICAgICAgIGNvbnN0IGlucHV0UHJvcHMgPSB7XG4gICAgICAgICAgICBzcG9ydHM6IFt7IHZhbHVlIDogXCJcIiwgY3VzdG9tIDogZmFsc2UgfV0sXG4gICAgICAgICAgICBzcG9ydENhdGVnb3J5IDogeyB2YWx1ZSA6IFwiXCIsIGN1c3RvbSA6IGZhbHNlIH0sXG4gICAgICAgICAgICB0b3VybmFtZW50IDogeyB2YWx1ZSA6IFwiXCIsIGN1c3RvbSA6IGZhbHNlIH0sXG4gICAgICAgICAgICBzZWFzb25zIDogW3sgdmFsdWUgOiBcIlwiLCBjdXN0b20gOiBmYWxzZSB9XVxuICAgICAgICB9O1xuXG4gICAgICAgIGlmICggdGhpcy5wcm9wcy5zcG9ydHMubGVuZ3RoID4gMCApIHtcbiAgICAgICAgICAgIGlucHV0UHJvcHMuc3BvcnRzID0gW107XG4gICAgICAgICAgICB0aGlzLnByb3BzLnNwb3J0cy5mb3JFYWNoKCggc3BvcnQgKT0+e1xuICAgICAgICAgICAgICAgIGlucHV0UHJvcHMuc3BvcnRzLnB1c2goe1xuICAgICAgICAgICAgICAgICAgICB2YWx1ZTogc3BvcnQubmFtZSxcbiAgICAgICAgICAgICAgICAgICAgaXNDdXN0b20gOiBzcG9ydC5jdXN0b21cbiAgICAgICAgICAgICAgICB9KVxuICAgICAgICAgICAgfSk7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKCB0aGlzLnByb3BzLnNlYXNvbnMubGVuZ3RoID4gMCApIHtcbiAgICAgICAgICAgIGlucHV0UHJvcHMuc2Vhc29ucyA9IFtdO1xuICAgICAgICAgICAgdGhpcy5wcm9wcy5zZWFzb25zLmZvckVhY2goKCBzZWFzb24gKT0+e1xuICAgICAgICAgICAgICAgIGlucHV0UHJvcHMuc2Vhc29ucy5wdXNoKHtcbiAgICAgICAgICAgICAgICAgICAgdmFsdWU6IHNlYXNvbi5uYW1lLFxuICAgICAgICAgICAgICAgICAgICBmcm9tOiBzZWFzb24uZnJvbSxcbiAgICAgICAgICAgICAgICAgICAgdG86IHNlYXNvbi50byxcbiAgICAgICAgICAgICAgICAgICAgaXNDdXN0b20gOiBzZWFzb24uY3VzdG9tfSlcbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9XG4gICAgICAgIGlmICggdGhpcy5zdGF0ZS5zcG9ydENhdGVnb3JpZXMubGVuZ3RoID4gMCAmJiB0aGlzLnByb3BzLnNwb3J0Q2F0ZWdvcnkubGVuZ3RoID09PSAwKSB7XG4gICAgICAgICAgICBpbnB1dFByb3BzLnNwb3J0Q2F0ZWdvcnkgPSB7XG4gICAgICAgICAgICAgICAgdmFsdWU6IHRoaXMuc3RhdGUuc3BvcnRDYXRlZ29yaWVzWzBdLm5hbWUsXG4gICAgICAgICAgICAgICAgaXNDdXN0b206IHRoaXMuc3RhdGUuc3BvcnRDYXRlZ29yaWVzWzBdLmlzQ3VzdG9tXG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgaWYgKCB0aGlzLnN0YXRlLnRvdXJuYW1lbnRzLmxlbmd0aCA+IDAgJiYgdGhpcy5wcm9wcy50b3VybmFtZW50Lmxlbmd0aCA9PT0gMCApIHtcbiAgICAgICAgICAgIGlucHV0UHJvcHMudG91cm5hbWVudCA9IHtcbiAgICAgICAgICAgICAgICB2YWx1ZTogdGhpcy5zdGF0ZS50b3VybmFtZW50c1swXS5uYW1lLFxuICAgICAgICAgICAgICAgIGlzQ3VzdG9tOiB0aGlzLnN0YXRlLnRvdXJuYW1lbnRzWzBdLmlzQ3VzdG9tXG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgaWYgKCAgdGhpcy5wcm9wcy50b3VybmFtZW50Lmxlbmd0aCA+IDAgKSB7XG4gICAgICAgICAgICBpbnB1dFByb3BzLnRvdXJuYW1lbnQgPSB7XG4gICAgICAgICAgICAgICAgdmFsdWU6IHRoaXMucHJvcHMudG91cm5hbWVudFswXS5uYW1lLFxuICAgICAgICAgICAgICAgIGlzQ3VzdG9tOiB0aGlzLnByb3BzLnRvdXJuYW1lbnRbMF0uaXNDdXN0b21cbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICBpZiAoICB0aGlzLnByb3BzLnNwb3J0Q2F0ZWdvcnkubGVuZ3RoID4gMCApIHtcbiAgICAgICAgICAgIGlucHV0UHJvcHMuc3BvcnRDYXRlZ29yeSA9IHtcbiAgICAgICAgICAgICAgICB2YWx1ZTogdGhpcy5wcm9wcy5zcG9ydENhdGVnb3J5WzBdLm5hbWUsXG4gICAgICAgICAgICAgICAgaXNDdXN0b206IHRoaXMucHJvcHMuc3BvcnRDYXRlZ29yeVswXS5pc0N1c3RvbVxuICAgICAgICAgICAgfVxuICAgICAgICB9XG5cblxuICAgICAgICByZXR1cm4gKFxuICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJzdGVwLWNvbnRlbnRcIj5cbiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cInN0ZXAtdGl0bGVcIj57dGhpcy5zdGF0ZS50aXRsZX08L2Rpdj5cblxuICAgICAgICAgICAgICAgIHt0aGlzLnN0YXRlLnNob3dTZWFyY2ggJiYgPFNlYXJjaENvbXBldGl0aW9uIGNsb3NlPXsoKT0+e3RoaXMudG9nZ2xlU2VhcmNoKGZhbHNlKX19IHNlbGVjdD17dGhpcy5zZWxlY3RUb3VybmFtZW50fSAvPn1cbiAgICAgICAgICAgICAgICB7IXRoaXMuc3RhdGUuc2hvd1NlYXJjaCAmJlxuICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiYnV0dG9uc1wiPlxuICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT17XCJidXR0b25zLWNvbnRhaW5lclwifSBzdHlsZT17eyBqdXN0aWZ5Q29udGVudDogJ2ZsZXgtc3RhcnQnfX0+XG4gICAgICAgICAgICAgICAgICAgICAgICA8YnV0dG9uIGNsYXNzTmFtZT1cImxpZ2h0LWJsdWUtYnV0dG9uXCIgb25DbGljaz17dGhpcy5jbGVhcn0+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAge3RoaXMuY29udGV4dC50KFwiQ0xfU1RFUDFfQlVUVE9OX1NUQVJUX09WRVJcIil9XG4gICAgICAgICAgICAgICAgICAgICAgICA8L2J1dHRvbj5cbiAgICAgICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgICAgPC9kaXY+fVxuXG4gICAgICAgICAgICAgICAgeyF0aGlzLnN0YXRlLnNob3dTZWFyY2ggJiYgPGRpdiBjbGFzc05hbWU9XCJzdGVwLWNvbnRlbnQtY29udGFpbmVyXCI+XG5cbiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJzdGVwLWl0ZW0tZGVzY3JpcHRpb25cIiA+XG4gICAgICAgICAgICAgICAgICAgICAgICB7dGhpcy5jb250ZXh0LnQoXCJDTF9TVEVQMV9ERVNDUklQVElPTl8xXCIpfVxuICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cblxuICAgICAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgICAgICB0aGlzLnN0YXRlLnNwb3J0U2VsZWN0b3JzLm1hcCgoaXRlbSwgaSwgbGlzdCk9PntcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gPFNwb3J0U2VsZWN0b3JcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAga2V5PXtpfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpbmRleD17aX1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc3BvcnRzPXt0aGlzLnByb3BzLnNwb3J0c31cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmVtb3ZlPXsoKSA9PiB0aGlzLnJlbW92ZVNwb3J0KGkpIH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc2hvd0FkZE5ldz17bGlzdC5sZW5ndGggPiAxICYmIGxpc3QubGVuZ3RoID09PSBpICsgMX1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgb25VcGRhdGVOZXc9eyhuYW1lKSA9PiB7IHRoaXMucHJvcHMudXBkYXRlRnJvbU11bHRpcGxlKFwic3BvcnRzXCIsIGksIFwidmFsdWVcIiwgbmFtZSkgfX1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc2hvd0Nsb3NlPXsgaSA+IDAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpc0N1c3RvbT17KGlucHV0UHJvcHMuc3BvcnRzW2ldKSA/IGlucHV0UHJvcHMuc3BvcnRzW2ldLmlzQ3VzdG9tIDogZmFsc2V9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGFkZFNwb3J0U2VsZWN0b3I9e3RoaXMuYWRkU3BvcnRTZWxlY3Rvcn1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgb25DbGljaz17KCkgPT4geyB0aGlzLnByb3BzLm9wZW5TcG9ydFNlbGVjdG9yKGksIHRoaXMucHJvcHMuc3BvcnRzKSB9IH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdmFsdWU9eyggaW5wdXRQcm9wcy5zcG9ydHNbaV0pID9pbnB1dFByb3BzLnNwb3J0c1tpXS52YWx1ZSA6IFwiXCJ9ICAvPlxuICAgICAgICAgICAgICAgICAgICAgICAgfSlcbiAgICAgICAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgICAgICAgIHt0aGlzLnN0YXRlLnNwb3J0U2VsZWN0b3JzLmxlbmd0aCA9PT0gMSAmJiA8ZGl2IGNsYXNzTmFtZT1cInN0ZXAtaXRlbS1kZXNjcmlwdGlvblwiIHN0eWxlPXt7bWFyZ2luVG9wOiBcIi0xNXB4XCJ9fT5cbiAgICAgICAgICAgICAgICAgICAgICAgIHt0aGlzLmNvbnRleHQudChcIkNMX1NURVAxX0RFU0NSSVBUSU9OX01VTFRJUExFX1NQT1JUU1wiKX1cbiAgICAgICAgICAgICAgICAgICAgICAgIDxidXR0b24gY2xhc3NOYW1lPXtcImxpbmstYnV0dG9uXCJ9IG9uQ2xpY2s9e3RoaXMuYWRkU3BvcnRTZWxlY3Rvcn0+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAge3RoaXMuY29udGV4dC50KFwiQ0xfU1RFUDFfQlVUVE9OX01VTFRJUExFX1NQT1JUU1wiKX1cbiAgICAgICAgICAgICAgICAgICAgICAgIDwvYnV0dG9uPlxuICAgICAgICAgICAgICAgICAgICA8L2Rpdj59XG5cbiAgICAgICAgICAgICAgICAgICAge3RoaXMuc3RhdGUuc3BvcnRTZWxlY3RvcnMubGVuZ3RoID09PSAxICYmICF0aGlzLmhhc0N1c3RvbUNhdGVnb3J5KCkgJiZcbiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJiYXNlLWlucHV0XCI+XG4gICAgICAgICAgICAgICAgICAgICAgICA8bGFiZWw+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAge3RoaXMuY29udGV4dC50KFwiQ0xfU1RFUDFfTEFCRUxfQ09VTlRSWVwiKX1cbiAgICAgICAgICAgICAgICAgICAgICAgIDwvbGFiZWw+XG4gICAgICAgICAgICAgICAgICAgICAgICA8aW5wdXRcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB0eXBlPVwidGV4dFwiXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdmFsdWU9e2lucHV0UHJvcHMuc3BvcnRDYXRlZ29yeS52YWx1ZSB8fCBcIlwifVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJlYWRPbmx5PXt0cnVlfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRpc2FibGVkPXt0aGlzLnByb3BzLnNwb3J0cy5sZW5ndGggPT09IDAgfHwgdGhpcy5zdGF0ZS5sb2FkaW5nQ2F0ZWdvcmllc31cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBvbkNsaWNrPXsoKSA9PiB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMucHJvcHMub3BlbkNhdGVnb3J5U2VsZWN0b3IodGhpcy5zdGF0ZS5zcG9ydENhdGVnb3JpZXMpXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfX1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBwbGFjZWhvbGRlcj17dGhpcy5jb250ZXh0LnQoXCJDTF9TVEVQMV9QTEFDRUhPTERFUl9DT1VOVFJZXCIpfSAgLz5cbiAgICAgICAgICAgICAgICAgICAgICAgIHsgdGhpcy5zdGF0ZS5sb2FkaW5nQ2F0ZWdvcmllcyAmJiA8aSBjbGFzc05hbWU9XCJmYSBmYS1jb2cgZmEtc3BpblwiLz59XG4gICAgICAgICAgICAgICAgICAgIDwvZGl2Pn1cbiAgICAgICAgICAgICAgICAgICAge3RoaXMuc3RhdGUuc3BvcnRTZWxlY3RvcnMubGVuZ3RoID09PSAxICYmIHRoaXMuaGFzQ3VzdG9tQ2F0ZWdvcnkoKSAmJiA8TmV3Q2F0ZWdvcnlcbiAgICAgICAgICAgICAgICAgICAgICAgIHNob3dDbG9zZT17IXRoaXMuZm9yY2VDdXN0b21DYXRlZ29yeSgpfVxuICAgICAgICAgICAgICAgICAgICAgICAgdmFsdWU9e3RoaXMucHJvcHMuY3VzdG9tQ2F0ZWdvcnl9XG4gICAgICAgICAgICAgICAgICAgICAgICBvbkJsdXI9eyAoZSkgPT4gdGhpcy51cGRhdGVDb250ZW50VmFsdWUoZSwgXCJjdXN0b21DYXRlZ29yeVwiKX1cbiAgICAgICAgICAgICAgICAgICAgICAgIG9uQ2xpY2s9e3RoaXMucHJvcHMucmVtb3ZlTmV3Q2F0ZWdvcnl9XG4gICAgICAgICAgICAgICAgICAgIC8+fVxuICAgICAgICAgICAgICAgICAgICB7dGhpcy5zdGF0ZS5zcG9ydFNlbGVjdG9ycy5sZW5ndGggPT09IDEgJiYgIXRoaXMuaGFzQ3VzdG9tVG91cm5hbWVudCgpICYmXG4gICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiYmFzZS1pbnB1dFwiPlxuICAgICAgICAgICAgICAgICAgICAgICAgPGxhYmVsPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHt0aGlzLmNvbnRleHQudChcIkNMX1NURVAxX0xBQkVMX0NPTVBFVElUSU9OXCIpfVxuICAgICAgICAgICAgICAgICAgICAgICAgPC9sYWJlbD5cbiAgICAgICAgICAgICAgICAgICAgICAgIDxpbnB1dCB0eXBlPVwidGV4dFwiXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdmFsdWUgPXtpbnB1dFByb3BzLnRvdXJuYW1lbnQudmFsdWUgfHwgXCJcIn1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICByZWFkT25seT17dHJ1ZX1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBkaXNhYmxlZD17dGhpcy5wcm9wcy5zcG9ydHMubGVuZ3RoID09PSAwIHx8IHRoaXMuc3RhdGUubG9hZGluZ1RvdXJuYW1lbnRzfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG9uQ2xpY2s9eygpID0+IHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5wcm9wcy5vcGVuVG91cm5hbWVudFNlbGVjdG9yKCB0aGlzLnN0YXRlLnRvdXJuYW1lbnRzICk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfX1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBwbGFjZWhvbGRlcj17dGhpcy5jb250ZXh0LnQoXCJDTF9TVEVQMV9QTEFDRUhPTERFUl9DT01QRVRJVElPTlwiKX0gIC8+XG4gICAgICAgICAgICAgICAgICAgICAgICB7IHRoaXMuc3RhdGUubG9hZGluZ1RvdXJuYW1lbnRzICYmIDxpIGNsYXNzTmFtZT1cImZhIGZhLWNvZyBmYS1zcGluXCIvPn1cbiAgICAgICAgICAgICAgICAgICAgPC9kaXY+fVxuXG4gICAgICAgICAgICAgICAgICAgIHsgdGhpcy5zdGF0ZS5zcG9ydFNlbGVjdG9ycy5sZW5ndGggPT09IDEgJiYgdGhpcy5oYXNDdXN0b21Ub3VybmFtZW50KCkgJiZcbiAgICAgICAgICAgICAgICAgICAgPE5ld1RvdXJuYW1lbnQgc2hvd0Nsb3NlPXshdGhpcy5mb3JjZUN1c3RvbVRvdXJuYW1lbnQoKX1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdmFsdWU9e3RoaXMucHJvcHMuY3VzdG9tVG91cm5hbWVudH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgb25CbHVyPXsgKGUpID0+IHRoaXMudXBkYXRlQ29udGVudFZhbHVlKGUsIFwiY3VzdG9tVG91cm5hbWVudFwiKX1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgb25DbGljaz17dGhpcy5wcm9wcy5yZW1vdmVOZXdUb3VybmFtZW50fSAvPlxuICAgICAgICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgICAgICAgeyB0aGlzLnNob3dTZWFzb25TZWxlY3RvcigpICYmXG4gICAgICAgICAgICAgICAgICAgICAgICB0aGlzLnN0YXRlLnNlYXNvblNlbGVjdG9ycy5tYXAoIChzZWFzb24sIGkpID0+IHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gPFNlYXNvblNlbGVjdG9yXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGtleT17aX1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc2Vhc29uPXtpfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpbmRleD17aX1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYWRkU2Vhc29uPXt0aGlzLmFkZFNlYXNvbn1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmVtb3ZlU2Vhc29uPXsoKT0+dGhpcy5yZW1vdmVTZWFzb24oaSl9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhbHVlPXsgKGlucHV0UHJvcHMuc2Vhc29uc1tpXSApID8gaW5wdXRQcm9wcy5zZWFzb25zW2ldLnZhbHVlIDogXCJcIn1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbG9hZGluZz17dGhpcy5zdGF0ZS5sb2FkaW5nU2Vhc29uc31cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc2hvd0Nsb3NlPXsgaSA+IDAgfHwgKCAhdGhpcy5mb3JjZUN1c3RvbVNlYXNvbigpICYmIHRoaXMuaGFzQ3VzdG9tU2Vhc29uKCkgKSB9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG9uQmx1cj17IChlKSA9PiB0aGlzLnVwZGF0ZUNvbnRlbnRWYWx1ZShlLCBcImN1c3RvbVNlYXNvblwiKX1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaXNDdXN0b209eyhpbnB1dFByb3BzLnNlYXNvbnNbaV0pID8gaW5wdXRQcm9wcy5zZWFzb25zW2ldLmlzQ3VzdG9tIHx8IHRoaXMuZm9yY2VDdXN0b21TZWFzb24oKSA6IHRoaXMuZm9yY2VDdXN0b21TZWFzb24oKX1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc2hvd0FkZE5ldz17dGhpcy5zdGF0ZS5zZWFzb25TZWxlY3RvcnMubGVuZ3RoID09PSBpICsgMX1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgb3BlblNlbGVjdG9yPXsoKT0+dGhpcy5wcm9wcy5vcGVuU2Vhc29uU2VsZWN0b3IoaSwgdGhpcy5wcm9wcy5zZWFzb25zKX0vPlxuICAgICAgICAgICAgICAgICAgICAgICAgfSlcbiAgICAgICAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgICAgICAgIHsgKCB0aGlzLnN0YXRlLmxvYWRpbmdTZWFzb25zIHx8IHRoaXMuc3RhdGUubG9hZGluZ1NjaGVkdWxlICkgJiYgPGRpdj48aSBjbGFzc05hbWU9XCJmYSBmYS1jb2cgZmEtc3BpblwiLz48L2Rpdj59XG5cbiAgICAgICAgICAgICAgICAgICAgPERlc2NyaXB0aW9uIHZhbHVlPXt0aGlzLnByb3BzLmRlc2NyaXB0aW9ufSBvbkNoYW5nZT17IChlKSA9PiB0aGlzLnVwZGF0ZUNvbnRlbnRWYWx1ZShlLCBcImRlc2NyaXB0aW9uXCIpfSAvPlxuXG4gICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwic3RlcC1pdGVtLWRlc2NyaXB0aW9uXCIgc3R5bGU9e3t9fT5cbiAgICAgICAgICAgICAgICAgICAgICAgIHt0aGlzLmNvbnRleHQudChcIkNMX1NURVAxX0xBQkVMX0FERElUSU9OQUxfSU5GT1wiKX1cbiAgICAgICAgICAgICAgICAgICAgICAgIDxpIGNsYXNzTmFtZT1cImZhIGZhLWluZm8tY2lyY2xlIHRvb2x0aXAtaWNvblwiIHRpdGxlPXsnVGhlIHdlYnNpdGUgbGluayBhbmQgdGhlIGF0dGFjaGVkIGZpbGVzIHdpbGwgYmUgbWFkZSBhdmFpbGFibGUgdG8gYnV5ZXJzIGluIHRoZSBsaXN0aW5nIGRldGFpbHMsIHdoZW4gY2xpY2tpbmcgb24gYSBsaXN0aW5nIGluIHRoZSBtYXJrZXRwbGFjZS4nfS8+XG4gICAgICAgICAgICAgICAgICAgIDwvZGl2PlxuXG4gICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiYmFzZS1pbnB1dFwiPlxuICAgICAgICAgICAgICAgICAgICAgICAgPGxhYmVsPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHt0aGlzLmNvbnRleHQudChcIkNMX1NURVAxX0xBQkVMX1dFQlNJVEVcIil9XG4gICAgICAgICAgICAgICAgICAgICAgICA8L2xhYmVsPlxuICAgICAgICAgICAgICAgICAgICAgICAgPFRhZ3NJbnB1dFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlucHV0UHJvcHM9e3twbGFjZWhvbGRlcjogd2Vic2l0ZVBsYWNlaG9sZGVyfX1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YWx1ZT17d2Vic2l0ZXN9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcmVmPSd0YWdzaW5wdXQnXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgb25DaGFuZ2U9e3RoaXMud2Vic2l0ZXNVcGRhdGVkfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlucHV0VmFsdWU9e3dlYnNpdGV9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgb25DaGFuZ2VJbnB1dD17dGhpcy5oYW5kbGVXZWJzaXRlQ2hhbmdlfVxuICAgICAgICAgICAgICAgICAgICAgICAgLz5cbiAgICAgICAgICAgICAgICAgICAgPC9kaXY+XG5cbiAgICAgICAgICAgICAgICAgICAgPEZpbGVTZWxlY3RvclxuICAgICAgICAgICAgICAgICAgICAgICAgdGFyZ2V0PXtcImF0dGFjaG1lbnRzXCJ9XG4gICAgICAgICAgICAgICAgICAgICAgICBzZWxlY3RlZD17dGhpcy5wcm9wcy5hdHRhY2htZW50c31cbiAgICAgICAgICAgICAgICAgICAgICAgIG9uU2VsZWN0PXt0aGlzLmFkZEZpbGV9XG4gICAgICAgICAgICAgICAgICAgICAgICBvblJlbW92ZT17dGhpcy5yZW1vdmVGaWxlfVxuICAgICAgICAgICAgICAgICAgICAgICAgYWNjZXB0PXtbXCJpbWFnZS9wbmdcIiwgXCJpbWFnZS9qcGdcIiwgXCIucGRmXCIsIFwiLmRvY1wiLCBcIi5kb2N4XCIsIFwiLmN2c1wiLCBcIi5wcHRcIiwgXCIueGxzXCIsIFwiLnhsc3hcIl0gfVxuICAgICAgICAgICAgICAgICAgICAgICAgYWNjZXB0VHlwZT17W1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIFwiaW1hZ2UvanBlZ1wiLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIFwiaW1hZ2UvcG5nXCIsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgXCJhcHBsaWNhdGlvbi9wZGZcIlxuICAgICAgICAgICAgICAgICAgICAgICAgXX1cbiAgICAgICAgICAgICAgICAgICAgICAgIHRtcD17dHJ1ZX0vPlxuICAgICAgICAgICAgICAgIDwvZGl2Pn1cbiAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICApO1xuICAgIH1cbn1cblxuU2VsbEZvcm1TdGVwMS5jb250ZXh0VHlwZXMgPSB7XG4gICAgdDogUHJvcFR5cGVzLmZ1bmMuaXNSZXF1aXJlZFxufTtcblxuY29uc3QgbWFwU3RhdGVUb1Byb3BzID0gc3RhdGUgPT4ge1xuICAgIHJldHVybiBzdGF0ZS5jb250ZW50XG59O1xuXG5jb25zdCBtYXBEaXNwYXRjaFRvUHJvcHMgPSBkaXNwYXRjaCA9PiB7XG4gICAgcmV0dXJuIHtcbiAgICAgICAgdXBkYXRlRnJvbU11bHRpcGxlIDogKHR5cGUsIGluZGV4LCBrZXksIHZhbHVlKSA9PiBkaXNwYXRjaCh7XG4gICAgICAgICAgICB0eXBlOiAnVVBEQVRFX0ZST01fTVVMVElQTEUnLFxuICAgICAgICAgICAgc2VsZWN0b3JUeXBlOiB0eXBlLFxuICAgICAgICAgICAgaW5kZXg6IGluZGV4LFxuICAgICAgICAgICAga2V5OiBrZXksXG4gICAgICAgICAgICB2YWx1ZTogdmFsdWVcbiAgICAgICAgfSksXG4gICAgICAgIHVwZGF0ZUF0dGFjaG1lbnRzIDogKG5hbWUsIGluZGV4LCB2YWx1ZSkgPT4gZGlzcGF0Y2goe1xuICAgICAgICAgICAgdHlwZTogJ1VQREFURV9BVFRBQ0hNRU5UUycsXG4gICAgICAgICAgICBuYW1lOiBuYW1lLFxuICAgICAgICAgICAgaW5kZXg6IGluZGV4LFxuICAgICAgICAgICAgdmFsdWU6IHZhbHVlXG4gICAgICAgIH0pLFxuICAgICAgICBvcGVuU3BvcnRTZWxlY3RvciA6IChpbmRleCwgc2VsZWN0ZWRJdGVtcykgPT4gZGlzcGF0Y2goe1xuICAgICAgICAgICAgdHlwZSA6ICdPUEVOX1NFTEVDVE9SJyxcbiAgICAgICAgICAgIHNlbGVjdG9ySXRlbXMgOiBDb250ZW50QXJlbmEuRGF0YS5GdWxsU3BvcnRzLFxuICAgICAgICAgICAgcG9wdWxhckl0ZW1zIDogQ29udGVudEFyZW5hLkRhdGEuVG9wU3BvcnRzLFxuICAgICAgICAgICAgc2VsZWN0b3JUeXBlIDogXCJzcG9ydHNcIixcbiAgICAgICAgICAgIGFjdGl2ZUZpbHRlciA6IFwicG9wdWxhclwiLFxuICAgICAgICAgICAgY2xlYW46IFtcInRvdXJuYW1lbnRcIiwgXCJzZWFzb25zXCIsIFwic3BvcnRDYXRlZ29yeVwiXSxcbiAgICAgICAgICAgIHNlbGVjdGVkSXRlbXMgOiBzZWxlY3RlZEl0ZW1zLFxuICAgICAgICAgICAgc2hvd05ld1Nwb3J0IDogdHJ1ZSxcbiAgICAgICAgICAgIGluZGV4IDogaW5kZXhcbiAgICAgICAgfSksXG4gICAgICAgIG9wZW5DYXRlZ29yeVNlbGVjdG9yIDogKHNlbGVjdGVkSXRlbXMpID0+IGRpc3BhdGNoKHtcbiAgICAgICAgICAgIHR5cGU6ICdPUEVOX1NFTEVDVE9SJyxcbiAgICAgICAgICAgIHNlbGVjdG9ySXRlbXM6IENvbnRlbnRBcmVuYS5EYXRhLkNhdGVnb3JpZXMsXG4gICAgICAgICAgICBzZWxlY3RvclR5cGU6IFwic3BvcnRDYXRlZ29yeVwiLFxuICAgICAgICAgICAgYWN0aXZlRmlsdGVyIDogXCJhZ1wiLFxuICAgICAgICAgICAgc2hvd0FsbENvdW50cmllcyA6IHRydWUsXG4gICAgICAgICAgICBzaG93TmV3Q2F0ZWdvcnkgOiB0cnVlLFxuICAgICAgICAgICAgc2VsZWN0ZWRJdGVtczogc2VsZWN0ZWRJdGVtcyxcbiAgICAgICAgICAgIGluZGV4OiAwLFxuICAgICAgICAgICAgY2xlYW46IFtcInRvdXJuYW1lbnRcIiwgXCJzZWFzb25zXCIsIFwiY3VzdG9tQ2F0ZWdvcnlcIiwgXCJjdXN0b21Ub3VybmFtZW50XCJdXG4gICAgICAgIH0pLFxuICAgICAgICBvcGVuVG91cm5hbWVudFNlbGVjdG9yIDogKHNlbGVjdGVkSXRlbXMpID0+IGRpc3BhdGNoKHtcbiAgICAgICAgICAgIHR5cGU6ICdPUEVOX1NFTEVDVE9SJyxcbiAgICAgICAgICAgIHNlbGVjdG9ySXRlbXM6IENvbnRlbnRBcmVuYS5EYXRhLlRvdXJuYW1lbnRzLFxuICAgICAgICAgICAgc2VsZWN0b3JUeXBlOiBcInRvdXJuYW1lbnRcIixcbiAgICAgICAgICAgIGFjdGl2ZUZpbHRlciA6IFwiYWdcIixcbiAgICAgICAgICAgIGluZGV4OiAwLFxuICAgICAgICAgICAgc2VsZWN0ZWRJdGVtczogc2VsZWN0ZWRJdGVtcyxcbiAgICAgICAgICAgIHNob3dOZXdUb3VybmFtZW50IDogdHJ1ZSxcbiAgICAgICAgICAgIGNsZWFuOiBbXCJzZWFzb25zXCJdXG4gICAgICAgIH0pLFxuICAgICAgICBvcGVuU2Vhc29uU2VsZWN0b3IgOiAoaW5kZXgsIHNlbGVjdGVkSXRlbXMpID0+IGRpc3BhdGNoKHtcbiAgICAgICAgICAgIHR5cGU6ICdPUEVOX1NFTEVDVE9SJyxcbiAgICAgICAgICAgIHNlbGVjdG9ySXRlbXM6IENvbnRlbnRBcmVuYS5EYXRhLlNlYXNvbnMsXG4gICAgICAgICAgICBzZWxlY3RvclR5cGU6IFwic2Vhc29uc1wiLFxuICAgICAgICAgICAgbXVsdGlwbGU6IHRydWUsXG4gICAgICAgICAgICBpbmRleDogaW5kZXgsXG4gICAgICAgICAgICBzaG93TmV3U2Vhc29uIDogdHJ1ZSxcbiAgICAgICAgICAgIGNsZWFuIDogW10sXG4gICAgICAgICAgICBzZWxlY3RlZEl0ZW1zIDogc2VsZWN0ZWRJdGVtc1xuICAgICAgICB9KSxcbiAgICAgICAgcmVtb3ZlRnJvbU11bHRpcGxlIDogKGluZGV4LCBzZWxlY3RvclR5cGUpID0+IGRpc3BhdGNoKHtcbiAgICAgICAgICAgIHR5cGU6ICdSRU1PVkVfRlJPTV9NVUxUSVBMRScsXG4gICAgICAgICAgICBzZWxlY3RvclR5cGU6IHNlbGVjdG9yVHlwZSxcbiAgICAgICAgICAgIGluZGV4OiBpbmRleFxuICAgICAgICB9KSxcbiAgICAgICAgdXBkYXRlQ29udGVudFZhbHVlIDogKGtleSwgdmFsdWUpID0+IGRpc3BhdGNoKHtcbiAgICAgICAgICAgIHR5cGU6ICdVUERBVEVfQ09OVEVOVF9WQUxVRScsXG4gICAgICAgICAgICBrZXk6IGtleSxcbiAgICAgICAgICAgIHZhbHVlIDogdmFsdWVcbiAgICAgICAgfSksXG4gICAgICAgIHJlbW92ZU5ld1Nwb3J0IDogKGluZGV4KSA9PiBkaXNwYXRjaCh7XG4gICAgICAgICAgICB0eXBlOiAnUkVNT1ZFX05FVycsXG4gICAgICAgICAgICBpbmRleCA6IGluZGV4LFxuICAgICAgICAgICAgc2VsZWN0b3JUeXBlIDogXCJzcG9ydHNcIixcbiAgICAgICAgfSksXG4gICAgICAgIHJlbW92ZU5ld1RvdXJuYW1lbnQgOiAoaW5kZXgpID0+IGRpc3BhdGNoKHtcbiAgICAgICAgICAgIHR5cGU6ICdSRU1PVkVfTkVXJyxcbiAgICAgICAgICAgIGluZGV4IDogaW5kZXgsXG4gICAgICAgICAgICBzZWxlY3RvclR5cGUgOiBcInRvdXJuYW1lbnRcIixcbiAgICAgICAgfSksXG4gICAgICAgIHJlbW92ZU5ld0NhdGVnb3J5IDogKGluZGV4KSA9PiBkaXNwYXRjaCh7XG4gICAgICAgICAgICB0eXBlOiAnUkVNT1ZFX05FVycsXG4gICAgICAgICAgICBpbmRleCA6IGluZGV4LFxuICAgICAgICAgICAgc2VsZWN0b3JUeXBlIDogXCJzcG9ydENhdGVnb3J5XCIsXG4gICAgICAgIH0pLFxuICAgICAgICByZW1vdmVOZXdTZWFzb24gOiAoaW5kZXgpID0+IGRpc3BhdGNoKHtcbiAgICAgICAgICAgIHR5cGU6ICdSRU1PVkVfTkVXJyxcbiAgICAgICAgICAgIGluZGV4IDogaW5kZXgsXG4gICAgICAgICAgICBzZWxlY3RvclR5cGUgOiBcInNlYXNvbnNcIixcbiAgICAgICAgfSksXG4gICAgICAgIGFkZE5ld1NlYXNvbiA6IChpbmRleCkgPT4gZGlzcGF0Y2goe1xuICAgICAgICAgICAgdHlwZTogJ0FERF9ORVcnLFxuICAgICAgICAgICAgaW5kZXggOiBpbmRleCxcbiAgICAgICAgICAgIHNlbGVjdG9yVHlwZTogXCJzZWFzb25zXCIsXG4gICAgICAgICAgICBjbGVhbiA6IFtdXG4gICAgICAgIH0pLFxuICAgICAgICBhZGROZXdDYXRlZ29yeSA6ICgpID0+IGRpc3BhdGNoKHtcbiAgICAgICAgICAgIHR5cGUgOiAnQUREX05FVycsXG4gICAgICAgICAgICBpbmRleCA6IDAsXG4gICAgICAgICAgICBzZWxlY3RvclR5cGU6IFwic3BvcnRDYXRlZ29yeVwiLFxuICAgICAgICAgICAgY2xlYW4gOiBbXCJ0b3VybmFtZW50XCIsIFwic2Vhc29uc1wiXVxuICAgICAgICB9KSxcbiAgICAgICAgYWRkTmV3VG91cm5hbWVudCA6ICgpID0+IGRpc3BhdGNoKHtcbiAgICAgICAgICAgIHR5cGUgOiAnQUREX05FVycsXG4gICAgICAgICAgICBpbmRleCA6IDAsXG4gICAgICAgICAgICBzZWxlY3RvclR5cGU6IFwidG91cm5hbWVudFwiLFxuICAgICAgICAgICAgY2xlYW4gOiBbXCJzZWFzb25zXCJdXG4gICAgICAgIH0pLFxuICAgICAgICByZXNldCA6ICgpID0+IGRpc3BhdGNoKHtcbiAgICAgICAgICAgIHR5cGUgOiAnUkVTRVQnXG4gICAgICAgIH0pLFxuICAgICAgICBzZWxlY3RUb3VybmFtZW50IDogKHRvdXJuYW1lbnQpID0+IGRpc3BhdGNoKHsgdHlwZTogJ1NFTEVDVF9UT1VSTkFNRU5UJywgdG91cm5hbWVudDogdG91cm5hbWVudCB9KSxcbiAgICAgICAgc3RlcENoYW5nZVJlc2V0IDogKCkgPT4gZGlzcGF0Y2goc3RlcENoYW5nZVJlc2V0KCkpXG5cbiAgICB9XG59O1xuXG5leHBvcnQgZGVmYXVsdCBjb25uZWN0KFxuICAgIG1hcFN0YXRlVG9Qcm9wcyxcbiAgICBtYXBEaXNwYXRjaFRvUHJvcHNcbikoU2VsbEZvcm1TdGVwMSlcblxuXG4vLyBXRUJQQUNLIEZPT1RFUiAvL1xuLy8gLi9zcmMvQXBwQnVuZGxlL1Jlc291cmNlcy9wdWJsaWMvamF2YXNjcmlwdC9zZWxsL2NvbnRhaW5lcnMvU2VsbEZvcm1TdGVwMS5qcyIsImltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgeyBjb25uZWN0IH0gZnJvbSBcInJlYWN0LXJlZHV4XCI7XG5pbXBvcnQgUGFja2FnZVNlbGVjdG9yIGZyb20gXCIuLi9jb250YWluZXJzL1BhY2thZ2VTZWxlY3RvclwiO1xuaW1wb3J0IHtTdW1tYXJ5VGV4dCwgVGl0bGVCYXJ9IGZyb20gXCIuLi9jb21wb25lbnRzL1NlbGxGb3JtSXRlbXNcIjtcbmltcG9ydCB7UmlnaHREZWZpbml0aW9uc30gZnJvbSBcIi4uL2NvbXBvbmVudHMvUmlnaHREZWZpbml0aW9uc1wiO1xuaW1wb3J0IHtQcm9kdWN0aW9uU3RhbmRhcmRzRGVmaW5pdGlvbnN9IGZyb20gXCIuLi9jb21wb25lbnRzL1Byb2R1Y3Rpb25TdGFuZGFyZHNEZWZpbml0aW9uc1wiO1xuaW1wb3J0IHtzdGVwQ2hhbmdlUmVzZXR9IGZyb20gXCIuLi9hY3Rpb25zL2NvbnRlbnRBY3Rpb25zXCI7XG5pbXBvcnQge2VkaXRlZFByb2dyYW1TZWxlY3RlZH0gZnJvbSBcIi4uLy4uL21haW4vYWN0aW9ucy91dGlsc1wiO1xuaW1wb3J0IHtQcm9wVHlwZXN9IGZyb20gXCJwcm9wLXR5cGVzXCI7XG5cbmNsYXNzIFNlbGxGb3JtU3RlcDIgZXh0ZW5kcyBSZWFjdC5Db21wb25lbnQge1xuXG4gICAgY29uc3RydWN0b3IocHJvcHMpIHtcbiAgICAgICAgc3VwZXIocHJvcHMpO1xuXG4gICAgICAgIGxldCBzdGFydFllYXIgPSAyMDMwO1xuICAgICAgICBsZXQgeWVhcnMgPSBbXTtcblxuICAgICAgICBmb3IgKGxldCBpID0wOyBpIDwgODE7aSsrICl7IHllYXJzLnB1c2goc3RhcnRZZWFyLWkpfVxuXG4gICAgICAgIHRoaXMuc3RhdGUgPSB7XG4gICAgICAgICAgICB5ZWFycyA6IHllYXJzLFxuICAgICAgICAgICAgdGl0bGUgOiBcIlN0ZXAgMiAtIENvbmZpZ3VyZSBSaWdodHNcIixcbiAgICAgICAgICAgIGxpY2Vuc2VQb3B1cCA6IGZhbHNlLFxuICAgICAgICAgICAgcmlnaHRzIDogUmlnaHREZWZpbml0aW9ucyxcbiAgICAgICAgICAgIHByb2R1Y3Rpb25TdGFuZGFyZHMgOiBQcm9kdWN0aW9uU3RhbmRhcmRzRGVmaW5pdGlvbnNcbiAgICAgICAgfTtcbiAgICB9XG5cbiAgICBjb21wb25lbnRXaWxsUmVjZWl2ZVByb3BzKG5leHRQcm9wcykge1xuICAgICAgICBjb25zb2xlLmxvZyhcIlN0ZXAgMiAtIHByb3BzXCIsIG5leHRQcm9wcyk7XG4gICAgICAgIHdpbmRvdy5jb250ZW50ID0gbmV4dFByb3BzO1xuICAgIH1cblxuICAgIGxvYWRSaWdodHMgPSAocmlnaHRzUGFja2FnZSwgZ3JvdXApID0+IHtcbiAgICAgICAgbGV0IF90aGlzID0gdGhpcztcbiAgICAgICAgQ29udGVudEFyZW5hLkFwaS5nZXRSaWdodHMocmlnaHRzUGFja2FnZS5tYXAoKHApPT4gKHAuaWQpKSwgZ3JvdXApLmRvbmUoKHJpZ2h0cyk9PntcbiAgICAgICAgICAgIF90aGlzLnNldFN0YXRlKHtyaWdodHN9KTtcbiAgICAgICAgfSk7XG4gICAgfTtcblxuICAgIHVwZGF0ZVJpZ2h0ID0gKHJpZ2h0c1BhY2thZ2UpID0+IHtcbiAgICAgICAgdGhpcy5wcm9wcy5zdXBlclJpZ2h0c1VwZGF0ZWQocmlnaHRzUGFja2FnZSk7XG4gICAgfTtcblxuICAgIHN1cGVyUmlnaHRzRW5hYmxlZCA9ICggc3VwZXJSaWdodHMgKSA9PiB7XG5cbiAgICAgICAgdmFyIHNlbGVjdGVkID0gdGhpcy5wcm9wcy5yaWdodHNQYWNrYWdlLm1hcChhID0+IGEuc2hvcnRMYWJlbCk7XG5cbiAgICAgICAgcmV0dXJuIHN1cGVyUmlnaHRzLmZpbHRlcihyID0+IHNlbGVjdGVkLmluZGV4T2YocikgIT09IC0xKS5sZW5ndGggPiAwO1xuXG4gICAgfTtcblxuICAgIHNjcm9sbCA9ICgpID0+IHtcblxuICAgICAgICBjb25zdCB7c3RlcENoYW5nZSwgc3RlcENoYW5nZVJlc2V0IH0gPSB0aGlzLnByb3BzO1xuXG4gICAgICAgIGlmICggc3RlcENoYW5nZSApIHtcbiAgICAgICAgICAgIHdpbmRvdy5zY3JvbGxUbygwLCAwKTtcbiAgICAgICAgICAgIHN0ZXBDaGFuZ2VSZXNldCgpO1xuICAgICAgICB9XG5cbiAgICB9O1xuXG4gICAgcmVuZGVyKCkge1xuXG4gICAgICAgIGNvbnN0IHtcbiAgICAgICAgICAgIHByb2dyYW1EZXNjcmlwdGlvbixcbiAgICAgICAgICAgIHVwZGF0ZUNvbnRlbnRWYWx1ZSxcbiAgICAgICAgICAgIFBST0dSQU1fTkFNRSxcbiAgICAgICAgICAgIFBST0dSQU1fRVBJU09ERVMsXG4gICAgICAgICAgICBQUk9HUkFNX1lFQVIsXG4gICAgICAgICAgICBQUk9HUkFNX1RZUEUsXG4gICAgICAgICAgICBQUk9HUkFNX0RVUkFUSU9OLFxuICAgICAgICAgICAgUFJPR1JBTV9ERVNDUklQVElPTixcbiAgICAgICAgICAgIHJpZ2h0c1BhY2thZ2UsXG4gICAgICAgICAgICBzdGVwLFxuICAgICAgICAgICAgc3BvcnRzLFxuICAgICAgICAgICAgc3BvcnRDYXRlZ29yeSxcbiAgICAgICAgICAgIHRvdXJuYW1lbnQsXG4gICAgICAgICAgICBzZWFzb25zXG4gICAgICAgIH0gPSB0aGlzLnByb3BzO1xuICAgICAgICBpZiAoIHN0ZXAgIT09IDIpIHJldHVybiAobnVsbCk7XG5cbiAgICAgICAgbGV0IGVkaXRlZFByb2dyYW0gPSBlZGl0ZWRQcm9ncmFtU2VsZWN0ZWQocmlnaHRzUGFja2FnZSk7XG5cbiAgICAgICAgdGhpcy5zY3JvbGwoKTtcbiAgICAgICAgcmV0dXJuIChcblxuICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJzdGVwLWNvbnRlbnQgc3RlcC0yXCI+XG4gICAgICAgICAgICAgICAgeyhzcG9ydHMubGVuZ3RoIHx8IHNwb3J0Q2F0ZWdvcnkubGVuZ3RoIHx8IHRvdXJuYW1lbnQubGVuZ3RoIHx8ICBzZWFzb25zLmxlbmd0aCkgJiYgKFxuICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImxpc3Rpbmctc3VtbWFyeVwiPlxuICAgICAgICAgICAgICAgICAgICAgICAgPFN1bW1hcnlUZXh0IHsuLi50aGlzLnByb3BzfS8+XG4gICAgICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICAgICl9XG5cbiAgICAgICAgICAgICAgICB7LypQUk9HUkFNIERFU0NSSVBUSU9OKi99XG4gICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJzdGVwLWNvbnRlbnQtY29udGFpbmVyXCI+XG4gICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwidGV4dGFyZWEtaW5wdXRcIj5cbiAgICAgICAgICAgICAgICAgICAgICAgIDxsYWJlbD5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB7dGhpcy5jb250ZXh0LnQoXCJDTF9TVEVQMl9QUk9HUkFNX0RFU0NSSVBUSU9OX1RJVExFXCIpfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpIGNsYXNzTmFtZT1cImZhIGZhLWluZm8tY2lyY2xlIHRvb2x0aXAtaWNvblwiIHRpdGxlPXsnVGhlIHByb2dyYW0gZGVzY3JpcHRpb24gcmVwcmVzZW50cyB0aGUgY29yZSBvZiB0aGUgbGljZW5zZSBhZ3JlZW1lbnQuIEl0IGRlZmluZXMgd2hhdCBpcyBsaWNlbnNlZCBieSB5b3UsIHRoZSBsaWNlbnNvci4gWW91IGVpdGhlciBjYW4gbGljZW5zZSBwcm9kdWNlZCBjb250ZW50IChlLmcuIGxpdmUgdHJhbnNtaXNzaW9uIG9mIGFuIGV2ZW50KSBvciBhbiBldmVudCBpdHNlbGYgKGUuZy4gYSB0ZW5uaXMgdG91cm5hbWVudCkuIEluIHRoZSBsaWNlbnNlIGFncmVlbWVudCwgYWxsIHJpZ2h0cyBzZWxlY3RlZCBiZWxvdyB3aWxsIGRpcmVjdGx5IHJlZmVyIHRvIHRoaXMgcHJvZ3JhbSBkZXNjcmlwdGlvbi4nfS8+XG4gICAgICAgICAgICAgICAgICAgICAgICA8L2xhYmVsPlxuICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9J3RleHRhcmVhLWlucHV0LXRleHQnPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHt0aGlzLmNvbnRleHQudChcIkNMX1NURVAyX1BST0dSQU1fREVTQ1JJUFRJT05fVEVYVFwiKX1cbiAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICAgICAgICAgICAgPHRleHRhcmVhXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgb25DaGFuZ2U9eyAoZSkgPT4gdXBkYXRlQ29udGVudFZhbHVlKFwicHJvZ3JhbURlc2NyaXB0aW9uXCIsIGUudGFyZ2V0LnZhbHVlKX1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBkZWZhdWx0VmFsdWU9e3Byb2dyYW1EZXNjcmlwdGlvbn1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBwbGFjZWhvbGRlcj17dGhpcy5jb250ZXh0LnQoXCJDTF9TVEVQMl9QUk9HUkFNX0RFU0NSSVBUSU9OX1BMQUNFSE9MREVSXCIpfS8+XG4gICAgICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICAgIDwvZGl2PlxuXG4gICAgICAgICAgICAgICAgey8qU1VQRVIgUklHSFRTKi99XG4gICAgICAgICAgICAgICAgPFBhY2thZ2VTZWxlY3RvciBwYWNrYWdlcz17dGhpcy5wcm9wcy5wYWNrYWdlc30vPlxuXG4gICAgICAgICAgICAgICAgey8qIFBST0dSQU0gREVUQUlMUyovfVxuICAgICAgICAgICAgICAgIHtlZGl0ZWRQcm9ncmFtICYmIDxkaXY+XG5cbiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImxlZnRcIj5cbiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJtb2RhbC1pbnB1dFwiPlxuICAgICAgICAgICAgICAgICAgICAgICAgPGxhYmVsPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHt0aGlzLmNvbnRleHQudChcIkNMX1NURVAyX1BST0dSQU1fTkFNRVwiKX1cbiAgICAgICAgICAgICAgICAgICAgICAgIDwvbGFiZWw+XG4gICAgICAgICAgICAgICAgICAgICAgICA8aW5wdXRcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB0eXBlPVwidGV4dFwiXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdmFsdWU9e1BST0dSQU1fTkFNRX1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBvbkNoYW5nZT17KGUpPT57dXBkYXRlQ29udGVudFZhbHVlKFwiUFJPR1JBTV9OQU1FXCIsIGUudGFyZ2V0LnZhbHVlKX19Lz5cbiAgICAgICAgICAgICAgICAgICAgPC9kaXY+XG5cbiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJtb2RhbC1pbnB1dFwiPlxuICAgICAgICAgICAgICAgICAgICAgICAgPGxhYmVsPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHt0aGlzLmNvbnRleHQudChcIkNMX1NURVAyX1BST0dSQU1fRVBJU09ERVNcIil9XG4gICAgICAgICAgICAgICAgICAgICAgICA8L2xhYmVsPlxuICAgICAgICAgICAgICAgICAgICAgICAgPGlucHV0XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdHlwZT1cIm51bWJlclwiXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdmFsdWU9e1BST0dSQU1fRVBJU09ERVN9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgb25DaGFuZ2U9eyhlKT0+e3VwZGF0ZUNvbnRlbnRWYWx1ZShcIlBST0dSQU1fRVBJU09ERVNcIiwgTnVtYmVyKGUudGFyZ2V0LnZhbHVlKSl9fS8+XG4gICAgICAgICAgICAgICAgICAgIDwvZGl2PlxuXG4gICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwibW9kYWwtaW5wdXRcIj5cbiAgICAgICAgICAgICAgICAgICAgICAgIDxsYWJlbD5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB7dGhpcy5jb250ZXh0LnQoXCJDTF9TVEVQMl9QUk9HUkFNX0RVUkFUSU9OXCIpfVxuICAgICAgICAgICAgICAgICAgICAgICAgPC9sYWJlbD5cbiAgICAgICAgICAgICAgICAgICAgICAgIDxpbnB1dFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHR5cGU9XCJudW1iZXJcIlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhbHVlPXtQUk9HUkFNX0RVUkFUSU9OfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIG9uQ2hhbmdlPXsoZSk9Pnt1cGRhdGVDb250ZW50VmFsdWUoXCJQUk9HUkFNX0RVUkFUSU9OXCIsIE51bWJlcihlLnRhcmdldC52YWx1ZSkpfX0vPlxuICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cblxuICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cIm1vZGFsLWlucHV0XCI+XG4gICAgICAgICAgICAgICAgICAgICAgICA8bGFiZWw+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAge3RoaXMuY29udGV4dC50KFwiQ0xfU1RFUDJfUFJPR1JBTV9UWVBFXCIpfVxuICAgICAgICAgICAgICAgICAgICAgICAgPC9sYWJlbD5cbiAgICAgICAgICAgICAgICAgICAgICAgIDxzZWxlY3RcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YWx1ZT17UFJPR1JBTV9UWVBFfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIG9uQ2hhbmdlPXsoZSk9Pnt1cGRhdGVDb250ZW50VmFsdWUoXCJQUk9HUkFNX1RZUEVcIiwgZS50YXJnZXQudmFsdWUpfX0+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPG9wdGlvbiB2YWx1ZT1cIlNFTEVDVFwiPlNlbGVjdDwvb3B0aW9uPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxvcHRpb24gdmFsdWU9XCJISUdITElHSFRfU0hPV1wiPkhpZ2hsaWdodCBzaG93PC9vcHRpb24+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPG9wdGlvbiB2YWx1ZT1cIkRPQ1VNRU5UQVJZXCI+RG9jdW1lbnRhcnk8L29wdGlvbj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8b3B0aW9uIHZhbHVlPVwiUFJFVklFV1wiPlByZXZpZXc8L29wdGlvbj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8b3B0aW9uIHZhbHVlPVwiVEFMS19TSE9XXCI+VGFsayBzaG93PC9vcHRpb24+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPG9wdGlvbiB2YWx1ZT1cIk9USEVSXCI+T3RoZXI8L29wdGlvbj5cbiAgICAgICAgICAgICAgICAgICAgICAgIDwvc2VsZWN0PlxuXG4gICAgICAgICAgICAgICAgICAgIDwvZGl2PlxuXG4gICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPXtcIm1vZGFsLWlucHV0XCJ9PlxuICAgICAgICAgICAgICAgICAgICAgICAgPGxhYmVsPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHt0aGlzLmNvbnRleHQudChcIkNMX1NURVAyX1BST0dSQU1fWUVBUlwiKX1cbiAgICAgICAgICAgICAgICAgICAgICAgIDwvbGFiZWw+XG4gICAgICAgICAgICAgICAgICAgICAgICA8c2VsZWN0XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdmFsdWU9e1BST0dSQU1fWUVBUn1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBvbkNoYW5nZT17KGUpPT57dXBkYXRlQ29udGVudFZhbHVlKFwiUFJPR1JBTV9ZRUFSXCIsIGUudGFyZ2V0LnZhbHVlKX19PlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxvcHRpb24gdmFsdWU9XCJZZWFyXCI+WWVhcjwvb3B0aW9uPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHt0aGlzLnN0YXRlLnllYXJzLm1hcCgoeWVhcixpKT0+KDxvcHRpb24ga2V5PXtpfSB2YWx1ZT17eWVhcn0+e3llYXJ9PC9vcHRpb24+KSl9XG4gICAgICAgICAgICAgICAgICAgICAgICA8L3NlbGVjdD5cbiAgICAgICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9J3JpZ2h0Jz5cbiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJtb2RhbC1pbnB1dFwiPlxuICAgICAgICAgICAgICAgICAgICAgICAgPGxhYmVsPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHt0aGlzLmNvbnRleHQudChcIkNMX1NURVAyX1BST0dSQU1fREVTQ1JJUFRJT05fT1BUSU9OQUxcIil9XG4gICAgICAgICAgICAgICAgICAgICAgICA8L2xhYmVsPlxuICAgICAgICAgICAgICAgICAgICAgICAgPHRleHRhcmVhXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgb25DaGFuZ2U9eyhlKT0+e3VwZGF0ZUNvbnRlbnRWYWx1ZShcIlBST0dSQU1fREVTQ1JJUFRJT05cIiwgZS50YXJnZXQudmFsdWUpfX1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBwbGFjZWhvbGRlcj17dGhpcy5jb250ZXh0LnQoXCJDTF9TVEVQMl9QUk9HUkFNX0RFU0NSSVBUSU9OX09QVElPTkFMX1BMQUNFSE9MREVSXCIpfT5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB7UFJPR1JBTV9ERVNDUklQVElPTn1cbiAgICAgICAgICAgICAgICAgICAgICAgIDwvdGV4dGFyZWE+XG4gICAgICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPSdjbGVhcmZpeCcvPlxuICAgICAgICAgICAgICAgIDwvZGl2Pn1cbiAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICApO1xuICAgIH1cbn1cblxuU2VsbEZvcm1TdGVwMi5jb250ZXh0VHlwZXMgPSB7XG4gICAgdDogUHJvcFR5cGVzLmZ1bmMuaXNSZXF1aXJlZFxufTtcblxuY29uc3QgbWFwU3RhdGVUb1Byb3BzID0gc3RhdGUgPT4ge1xuICAgIHJldHVybiBzdGF0ZS5jb250ZW50XG59O1xuXG5jb25zdCBtYXBEaXNwYXRjaFRvUHJvcHMgPSBkaXNwYXRjaCA9PiB7XG4gICAgcmV0dXJuIHtcbiAgICAgICAgc3VwZXJSaWdodHNVcGRhdGVkIDogKHJpZ2h0c1BhY2thZ2UpID0+IGRpc3BhdGNoKHtcbiAgICAgICAgICAgIHR5cGUgOiAnU1VQRVJfUklHSFRTX1VQREFURUQnLFxuICAgICAgICAgICAgcmlnaHRzUGFja2FnZTogcmlnaHRzUGFja2FnZVxuICAgICAgICB9KSxcbiAgICAgICAgdXBkYXRlQ29udGVudFZhbHVlIDogKGtleSwgdmFsdWUpID0+IGRpc3BhdGNoKHtcbiAgICAgICAgICAgIHR5cGU6ICdVUERBVEVfQ09OVEVOVF9WQUxVRScsXG4gICAgICAgICAgICBrZXk6IGtleSxcbiAgICAgICAgICAgIHZhbHVlIDogdmFsdWVcbiAgICAgICAgfSksXG4gICAgICAgIHN0ZXBDaGFuZ2VSZXNldCA6ICgpID0+IGRpc3BhdGNoKHN0ZXBDaGFuZ2VSZXNldCgpKVxuICAgIH1cbn07XG5cbmV4cG9ydCBkZWZhdWx0IGNvbm5lY3QoXG4gICAgbWFwU3RhdGVUb1Byb3BzLFxuICAgIG1hcERpc3BhdGNoVG9Qcm9wc1xuKShTZWxsRm9ybVN0ZXAyKVxuXG5cblxuLy8gV0VCUEFDSyBGT09URVIgLy9cbi8vIC4vc3JjL0FwcEJ1bmRsZS9SZXNvdXJjZXMvcHVibGljL2phdmFzY3JpcHQvc2VsbC9jb250YWluZXJzL1NlbGxGb3JtU3RlcDIuanMiLCJpbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xuaW1wb3J0IHsgY29ubmVjdCB9IGZyb20gXCJyZWFjdC1yZWR1eFwiO1xuaW1wb3J0IE1vZGFsIGZyb20gJ3JlYWN0LW1vZGFsJztcbmltcG9ydCBNb21lbnQgZnJvbSBcIm1vbWVudFwiO1xuXG5pbXBvcnQgUGFja2FnZVNlbGVjdG9yIGZyb20gXCIuLi9jb250YWluZXJzL1BhY2thZ2VTZWxlY3RvclwiO1xuaW1wb3J0IFBvcHVwUmlnaHQgZnJvbSBcIi4uL2NvbXBvbmVudHMvUG9wdXBSaWdodFwiO1xuaW1wb3J0IENvbW1lbnRzIGZyb20gXCIuLi9jb21wb25lbnRzL0NvbW1lbnRzXCI7XG5pbXBvcnQgTGljZW5zZURhdGVTZWxlY3RvciBmcm9tIFwiLi4vY29tcG9uZW50cy9MaWNlbnNlRGF0ZVNlbGVjdG9yXCI7XG5cbmltcG9ydCB7UmlnaHREZWZpbml0aW9uc30gZnJvbSBcIi4uL2NvbXBvbmVudHMvUmlnaHREZWZpbml0aW9uc1wiO1xuaW1wb3J0IHtQcm9kdWN0aW9uU3RhbmRhcmRzRGVmaW5pdGlvbnN9IGZyb20gXCIuLi9jb21wb25lbnRzL1Byb2R1Y3Rpb25TdGFuZGFyZHNEZWZpbml0aW9uc1wiO1xuaW1wb3J0IHtTdW1tYXJ5VGV4dCwgVGl0bGVCYXJ9IGZyb20gXCIuLi9jb21wb25lbnRzL1NlbGxGb3JtSXRlbXNcIjtcbmltcG9ydCB7c3RlcENoYW5nZVJlc2V0fSBmcm9tIFwiLi4vYWN0aW9ucy9jb250ZW50QWN0aW9uc1wiO1xuaW1wb3J0IHtMYW5ndWFnZVNlbGVjdG9yfSBmcm9tIFwiLi4vLi4vbWFpbi9jb21wb25lbnRzL0xhbmd1YWdlU2VsZWN0b3JcIjtcblxuaW1wb3J0IHtjdXN0b21TdHlsZXN9IGZyb20gXCIuLi8uLi9tYWluL3N0eWxlcy9jdXN0b21cIjtcbmltcG9ydCB7UHJvcFR5cGVzfSBmcm9tIFwicHJvcC10eXBlc1wiO1xuXG5jb25zdCBsaWNlbnNlU3R5bGVzID0ge1xuICAgIGZvbnRTaXplOiBcIjE1cHhcIixcbiAgICBmb250V2VpZ2h0OiBcIjEwMFwiLFxuICAgIGp1c3RpZnlDb250ZW50OiBcImxlZnRcIlxufTtcblxuY2xhc3MgU2VsbEZvcm1TdGVwMyBleHRlbmRzIFJlYWN0LkNvbXBvbmVudCB7XG5cbiAgICBjb25zdHJ1Y3Rvcihwcm9wcykge1xuICAgICAgICBzdXBlcihwcm9wcyk7XG5cbiAgICAgICAgdGhpcy5zdGF0ZSA9IHtcbiAgICAgICAgICAgIHByb2dyYW1Qb3B1cEFjdGl2ZTogZmFsc2UsXG4gICAgICAgICAgICBsaWNlbnNlUG9wdXAgOiBmYWxzZSxcbiAgICAgICAgICAgIHJpZ2h0cyA6IFJpZ2h0RGVmaW5pdGlvbnMsXG4gICAgICAgICAgICBwcm9kdWN0aW9uU3RhbmRhcmRzIDogUHJvZHVjdGlvblN0YW5kYXJkc0RlZmluaXRpb25zXG4gICAgICAgIH07XG4gICAgICAgIHRoaXMuYmx1ZUNoZWNrID0gYXNzZXRzQmFzZURpciArIFwiYXBwL2ltYWdlcy9ibHVlX2NoZWNrLnBuZ1wiO1xuICAgICAgICB0aGlzLnllbGxvd0NoZWNrID0gYXNzZXRzQmFzZURpciArIFwiYXBwL2ltYWdlcy95ZWxsb3dfY2hlY2gucG5nXCI7XG5cbiAgICB9XG5cbiAgICBsb2FkUmlnaHRzID0gKHJpZ2h0c1BhY2thZ2UsIGdyb3VwKSA9PiB7XG4gICAgICAgIGxldCBfdGhpcyA9IHRoaXM7XG4gICAgICAgIENvbnRlbnRBcmVuYS5BcGkuZ2V0UmlnaHRzKHJpZ2h0c1BhY2thZ2UubWFwKChwKT0+IChwLmlkKSksIGdyb3VwKS5kb25lKChyaWdodHMpPT57XG4gICAgICAgICAgICBfdGhpcy5zZXRTdGF0ZSh7cmlnaHRzfSk7XG4gICAgICAgIH0pO1xuICAgIH07XG5cbiAgICBjbG9zZVByb2dyYW1zUG9wdXAgPSAoKSA9PiB7XG4gICAgICAgIHRoaXMuc2V0U3RhdGUoe3Byb2dyYW1Qb3B1cEFjdGl2ZTpmYWxzZX0pIDtcbiAgICB9O1xuXG4gICAgY2xvc2VMaWNlbnNlUG9wdXAgPSAoKSA9PiB7XG4gICAgICAgIHRoaXMuc2V0U3RhdGUoe2xpY2Vuc2VQb3B1cDpmYWxzZX0pIDtcbiAgICB9O1xuXG4gICAgc2VsZWN0Q3VycmVuY3kgPSAoIGN1cnJlbmN5ICkgPT4ge1xuICAgICAgICB0aGlzLnByb3BzLnVwZGF0ZUNvbnRlbnRWYWx1ZSgnY3VycmVuY3knLCBjdXJyZW5jeSk7XG4gICAgfTtcblxuICAgIHNlbGVjdExpY2Vuc2VEYXRlcyA9IChrZXksIHZhbHVlKSA9PiB7XG4gICAgICAgIHRoaXMucHJvcHMudXBkYXRlQ29udGVudFZhbHVlKGtleSwgdmFsdWUpO1xuICAgIH07XG5cbiAgICB1cGRhdGVSaWdodCA9IChyaWdodHNQYWNrYWdlKSA9PiB7XG4gICAgICAgIHRoaXMucHJvcHMuc3VwZXJSaWdodHNVcGRhdGVkKHJpZ2h0c1BhY2thZ2UpO1xuICAgIH07XG5cbiAgICBzdXBlclJpZ2h0c0VuYWJsZWQgPSAoIHN1cGVyUmlnaHRzICkgPT4ge1xuXG4gICAgICAgIHZhciBzZWxlY3RlZCA9IHRoaXMucHJvcHMucmlnaHRzUGFja2FnZS5tYXAoYSA9PiBhLnNob3J0TGFiZWwpO1xuXG4gICAgICAgIHJldHVybiBzdXBlclJpZ2h0cy5maWx0ZXIociA9PiBzZWxlY3RlZC5pbmRleE9mKHIpICE9PSAtMSkubGVuZ3RoID4gMDtcblxuICAgIH07XG5cbiAgICBza2lwQ29udGVudERlbGl2ZXJ5ID0gKHJpZ2h0KSA9PiB7XG5cbiAgICAgICAgY29uc3Qge3JpZ2h0c1BhY2thZ2V9ID0gdGhpcy5wcm9wcztcblxuICAgICAgICBsZXQgc2VsZWN0ZWQgPSByaWdodHNQYWNrYWdlLm1hcChhID0+IGEuc2hvcnRMYWJlbCk7XG5cbiAgICAgICAgcmV0dXJuIHJpZ2h0LmtleSA9PT0gXCJDT05URU5UX0RFTElWRVJZXCJcbiAgICAgICAgICAgICYmIHNlbGVjdGVkLmluZGV4T2YoXCJOQVwiKSA9PT0gLTFcbiAgICAgICAgICAgICYmIHNlbGVjdGVkLmluZGV4T2YoXCJMQlwiKSA9PT0gLTFcbiAgICAgICAgICAgICYmIHNlbGVjdGVkLmluZGV4T2YoXCJITFwiKSA9PT0gLTFcbiAgICAgICAgICAgICYmIHNlbGVjdGVkLmluZGV4T2YoXCJEVFwiKSA9PT0gLTE7XG5cbiAgICB9O1xuXG4gICAgc2Nyb2xsID0gKCkgPT4ge1xuXG4gICAgICAgIGNvbnN0IHtzdGVwQ2hhbmdlLCBzdGVwQ2hhbmdlUmVzZXQgfSA9IHRoaXMucHJvcHM7XG5cbiAgICAgICAgaWYgKCBzdGVwQ2hhbmdlICkge1xuICAgICAgICAgICAgd2luZG93LnNjcm9sbFRvKDAsIDApO1xuICAgICAgICAgICAgc3RlcENoYW5nZVJlc2V0KCk7XG4gICAgICAgIH1cblxuICAgIH07XG5cbiAgICByZW5kZXJQcm9ncmFtUG9wdXAoKXtcblxuICAgICAgICBjb25zdCB7XG4gICAgICAgICAgICB1cGRhdGVDb250ZW50VmFsdWUsXG4gICAgICAgICAgICBQUk9HUkFNX1NVQlRJVExFUyxcbiAgICAgICAgICAgIFBST0dSQU1fU0NSSVBULFxuICAgICAgICAgICAgUFJPR1JBTV9MQU5HVUFHRVxuICAgICAgICB9ID0gdGhpcy5wcm9wcztcbiAgICAgICAgcmV0dXJuIChcbiAgICAgICAgICAgIDxNb2RhbFxuICAgICAgICAgICAgICAgIGlzT3Blbj17dGhpcy5zdGF0ZS5wcm9ncmFtUG9wdXBBY3RpdmV9XG4gICAgICAgICAgICAgICAgb25SZXF1ZXN0Q2xvc2U9e3RoaXMuY2xvc2VQcm9ncmFtc1BvcHVwfVxuICAgICAgICAgICAgICAgIGJvZHlPcGVuQ2xhc3NOYW1lPXtcInNlbGVjdG9yXCJ9XG4gICAgICAgICAgICAgICAgc3R5bGU9e2N1c3RvbVN0eWxlc31cbiAgICAgICAgICAgICAgICBjb250ZW50TGFiZWw9XCJFeGFtcGxlIE1vZGFsXCJcbiAgICAgICAgICAgID5cblxuICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwibW9kYWwtdGl0bGVcIj5cbiAgICAgICAgICAgICAgICAgICAge3RoaXMuY29udGV4dC50KFwiQ0xfU1RFUDNfUFJPR1JBTV9NT0RBTF9USVRMRVwiKX1cbiAgICAgICAgICAgICAgICAgICAgPGkgY2xhc3NOYW1lPVwiZmEgZmEtdGltZXMtY2lyY2xlLW9cIiBvbkNsaWNrPXt0aGlzLmNsb3NlUHJvZ3JhbXNQb3B1cH0vPlxuICAgICAgICAgICAgICAgIDwvZGl2PlxuXG4gICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJzdGVwLWNvbnRlbnQgY3VzdG9tXCI+XG4gICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwic3RlcC1jb250ZW50LWNvbnRhaW5lclwiIHN0eWxlPXt7bWluV2lkdGg6NTAwfX0+XG5cbiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwibW9kYWwtaW5wdXRcIj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGFiZWw+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHt0aGlzLmNvbnRleHQudChcIkNMX1NURVAzX1BST0dSQU1fTU9EQUxfTEFOR1VBR0VcIil9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9sYWJlbD5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8TGFuZ3VhZ2VTZWxlY3RvclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YWx1ZT17UFJPR1JBTV9MQU5HVUFHRX1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgb25DaGFuZ2U9eyh2YWx1ZSk9Pnt1cGRhdGVDb250ZW50VmFsdWUoJ1BST0dSQU1fTEFOR1VBR0UnLCB2YWx1ZSl9fS8+XG4gICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cblxuICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJtb2RhbC1pbnB1dFwiPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsYWJlbD5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAge3RoaXMuY29udGV4dC50KFwiQ0xfU1RFUDNfUFJPR1JBTV9NT0RBTF9TVUJUSVRMRVNcIil9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9sYWJlbD5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8TGFuZ3VhZ2VTZWxlY3RvclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YWx1ZT17UFJPR1JBTV9TVUJUSVRMRVN9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG9uQ2hhbmdlPXsodmFsdWUpPT57dXBkYXRlQ29udGVudFZhbHVlKCdQUk9HUkFNX1NVQlRJVExFUycsIHZhbHVlKX19Lz5cbiAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxuXG4gICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cIm1vZGFsLWlucHV0XCI+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxhYmVsPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB7dGhpcy5jb250ZXh0LnQoXCJDTF9TVEVQM19QUk9HUkFNX01PREFMX1NDUklQVFwiKX1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2xhYmVsPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxMYW5ndWFnZVNlbGVjdG9yXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhbHVlPXtQUk9HUkFNX1NDUklQVH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgb25DaGFuZ2U9eyh2YWx1ZSk9Pnt1cGRhdGVDb250ZW50VmFsdWUoJ1BST0dSQU1fU0NSSVBUJywgdmFsdWUpfX0vPlxuICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XG5cbiAgICAgICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgICAgPC9kaXY+XG5cbiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT17XCJidXR0b25zXCJ9PlxuICAgICAgICAgICAgICAgICAgICA8YnV0dG9uXG4gICAgICAgICAgICAgICAgICAgICAgICBjbGFzc05hbWU9e1wic3RhbmRhcmQtYnV0dG9uXCJ9XG4gICAgICAgICAgICAgICAgICAgICAgICBvbkNsaWNrPXt0aGlzLmNsb3NlUHJvZ3JhbXNQb3B1cH0+XG4gICAgICAgICAgICAgICAgICAgICAgICB7dGhpcy5jb250ZXh0LnQoXCJDTF9TVEVQM19QUk9HUkFNX01PREFMX0JVVFRPTl9PS1wiKX1cbiAgICAgICAgICAgICAgICAgICAgPC9idXR0b24+XG4gICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICA8L01vZGFsPlxuICAgICAgICApXG4gICAgfVxuXG4gICAgcmVuZGVyKCkge1xuXG4gICAgICAgIGNvbnN0IHtzdGVwLCByaWdodHNQYWNrYWdlLCBzdGFydERhdGVNb2RlLCBlbmREYXRlTW9kZSwgZW5kRGF0ZSwgQ09NTUVOVFNfUklHSFRTLCBDT01NRU5UU19QUk9EVUNUSU9OLFxuICAgICAgICAgICAgdXBkYXRlQ29udGVudFZhbHVlLCBQUk9HUkFNX05BTUUsIExJQ0VOU0VEX0xBTkdVQUdFU1xuICAgICAgICB9ID0gdGhpcy5wcm9wcztcbiAgICAgICAgaWYgKCBzdGVwICE9PSAzKSByZXR1cm4gKG51bGwpO1xuICAgICAgICB0aGlzLnNjcm9sbCgpO1xuXG4gICAgICAgIHJldHVybiAoXG5cbiAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwic3RlcC1jb250ZW50IHN0ZXAtM1wiPlxuICAgICAgICAgICAgICAgIHsgdGhpcy5yZW5kZXJQcm9ncmFtUG9wdXAoKSB9XG5cbiAgICAgICAgICAgICAgICB7LypTVU1NQVJZKi99XG4gICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJsaXN0aW5nLXN1bW1hcnlcIj5cbiAgICAgICAgICAgICAgICAgICAgPFN1bW1hcnlUZXh0IHsuLi50aGlzLnByb3BzfS8+XG4gICAgICAgICAgICAgICAgPC9kaXY+XG5cbiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cInN0ZXAtY29udGVudC1jb250YWluZXJcIj5cblxuICAgICAgICAgICAgICAgICAgICB7LyogUklHSFRTKi99XG4gICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPXtcInJpZ2h0cy1ib3hcIn0+XG4gICAgICAgICAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcmlnaHRzUGFja2FnZS5tYXAoKCBzcixpICk9PntcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIDxkaXYga2V5PXtpfSAgY2xhc3NOYW1lPXtcInJpZ2h0cy1ib3gtaXRlbVwifT5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHshc3IuZXhjbHVzaXZlICYmXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aW1nIHN0eWxlPXt7d2lkdGg6IDIzLCBoZWlnaHQ6IDIyLCBtYXJnaW46ICcwIDVweCd9fSBzcmM9e3RoaXMuYmx1ZUNoZWNrfS8+fVxuXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB7c3IuZXhjbHVzaXZlICYmXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aW1nIHN0eWxlPXt7d2lkdGg6IDIzLCBoZWlnaHQ6IDIyLCBtYXJnaW46ICcwIDVweCd9fSBzcmM9e3RoaXMueWVsbG93Q2hlY2t9Lz59XG5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgc3R5bGU9e3tkaXNwbGF5OiAnZmxleCcsIGZsZXhEaXJlY3Rpb246IFwicm93XCIgIH19PlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHsgc3Iuc2hvcnRMYWJlbCAhPT0gXCJQUlwiICYmIHNyLm5hbWUgfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHsgc3Iuc2hvcnRMYWJlbCA9PT0gXCJQUlwiICYmIGNvbnRlbnQuUFJPR1JBTV9OQU1FICYmXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXCJFZGl0ZWQgUHJvZ3JhbVwiXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHtzci5leGNsdXNpdmUgJiYgPHNwYW4gc3R5bGU9e3tmb250V2VpZ2h0OiA2MDAsIG1hcmdpbkxlZnQ6IDN9fT4gRVg8L3NwYW4+fVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0pXG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIDwvZGl2PlxuXG4gICAgICAgICAgICAgICAgICAgIDxMaWNlbnNlRGF0ZVNlbGVjdG9yXG4gICAgICAgICAgICAgICAgICAgICAgICBpc09wZW49e3RoaXMuc3RhdGUubGljZW5zZVBvcHVwfVxuICAgICAgICAgICAgICAgICAgICAgICAgb25VcGRhdGU9e3RoaXMuc2VsZWN0TGljZW5zZURhdGVzfVxuICAgICAgICAgICAgICAgICAgICAgICAgc3RhcnREYXRlPXt0aGlzLnByb3BzLnN0YXJ0RGF0ZX1cbiAgICAgICAgICAgICAgICAgICAgICAgIGVuZERhdGVMaW1pdD17dGhpcy5wcm9wcy5lbmREYXRlTGltaXR9XG4gICAgICAgICAgICAgICAgICAgICAgICBlbmREYXRlTW9kZT17ZW5kRGF0ZU1vZGV9XG4gICAgICAgICAgICAgICAgICAgICAgICBzdGFydERhdGVNb2RlPXtzdGFydERhdGVNb2RlfVxuICAgICAgICAgICAgICAgICAgICAgICAgZW5kRGF0ZT17ZW5kRGF0ZX1cbiAgICAgICAgICAgICAgICAgICAgICAgIG9uQ2xvc2U9e3RoaXMuY2xvc2VMaWNlbnNlUG9wdXB9XG4gICAgICAgICAgICAgICAgICAgIC8+XG5cbiAgICAgICAgICAgICAgICAgICAgPFRpdGxlQmFyIHRpdGxlPXtcIkxpY2Vuc2UgcGVyaW9kXCJ9IGluZm9UZXh0PXsnTWVhbnMgdGhlIHRpbWUgcGVyaW9kIGR1cmluZyB3aGljaCB0aGUgbGljZW5zZWUgbWF5IGV4cGxvaXQgdGhlIHByb2dyYW0uJ30vPlxuXG4gICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPXtcImxpY2Vuc2UtZGF0ZS1jb250YWluZXJcIn0+XG4gICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cInRhYmxlLXJpZ2h0XCI+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJyb3dcIj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJjb2x1bW4gcmlnaHQtbmFtZVwiPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAge3RoaXMuY29udGV4dC50KFwiQ0xfU1RFUDNfVElUTEVfTElDRU5TRV9QRVJJT0RfU1RBUlRcIil9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImNvbHVtbiByaWdodC1pdGVtLWNvbnRlbnRcIiBzdHlsZT17bGljZW5zZVN0eWxlc30gb25DbGljaz17dGhpcy5zaG93TGljZW5zZVBvcHVwfT5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHsgdGhpcy5wcm9wcy5zdGFydERhdGVNb2RlID09PSBcIkxJQ0VOU0VcIiAgJiYgXCIgY29udHJhY3QgY29uY2x1c2lvblwifVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgeyB0aGlzLnByb3BzLnN0YXJ0RGF0ZU1vZGUgPT09IFwiREFURVwiICAmJiBNb21lbnQodGhpcy5wcm9wcy5zdGFydERhdGUpLmZvcm1hdCgnREQvTU0vWVlZWScpfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJjb2x1bW4gcmlnaHQtbmFtZVwiPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAge3RoaXMuY29udGV4dC50KFwiQ0xfU1RFUDNfVElUTEVfTElDRU5TRV9QRVJJT0RfRU5EXCIpfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJjb2x1bW4gcmlnaHQtaXRlbS1jb250ZW50XCIgIHN0eWxlPXtsaWNlbnNlU3R5bGVzfSBvbkNsaWNrPXt0aGlzLnNob3dMaWNlbnNlUG9wdXB9PlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgeyBlbmREYXRlTW9kZSA9PT0gXCJMSU1JVEVEXCIgICYmIHRoaXMucHJvcHMuZW5kRGF0ZUxpbWl0ICsgdGhpcy5jb250ZXh0LnQoXCJMSVNUSU5HX0RFVEFJTFNfTElDRU5TRV9FTkRfREFZU1wiKX1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHsgZW5kRGF0ZU1vZGUgPT09IFwiREFURVwiICAmJiBNb21lbnQodGhpcy5wcm9wcy5lbmREYXRlKS5mb3JtYXQoJ0REL01NL1lZWVknKX1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHsgZW5kRGF0ZU1vZGUgPT09IFwiVU5MSU1JVEVEXCIgICYmIHRoaXMuY29udGV4dC50KFwiVW5saW1pdGVkXCIpfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgeyAhZW5kRGF0ZU1vZGUgJiYgdGhpcy5jb250ZXh0LnQoXCJDTF9TVEVQM19TRUxFQ1RfTElDRU5TRV9QRVJJT0RcIil9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImNvbHVtbiByaWdodC1pdGVtLWNvbnRlbnQgZWRpdC1pdGVtXCIgb25DbGljaz17dGhpcy5zaG93TGljZW5zZVBvcHVwfT5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aSBjbGFzc05hbWU9XCJmYSBmYS1lZGl0XCIvPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgICAgICAgIDwvZGl2PlxuXG4gICAgICAgICAgICAgICAgICAgIDxUaXRsZUJhciB0aXRsZT17dGhpcy5jb250ZXh0LnQoXCJDTF9TVEVQM19USVRMRV9HUkFOVF9SSUdIVFwiKX0vPlxuXG4gICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwicmlnaHRzLWNvbnRhaW5lclwiPlxuICAgICAgICAgICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuc3RhdGUucmlnaHRzLmxlbmd0aCA+IDAgJiYgdGhpcy5zdGF0ZS5yaWdodHMubWFwKChyaWdodCwgaSk9PiB7XG5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKCByaWdodC5zdXBlclJpZ2h0cy5sZW5ndGggPiAwXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAmJiAhdGhpcy5zdXBlclJpZ2h0c0VuYWJsZWQocmlnaHQuc3VwZXJSaWdodHMpKSByZXR1cm47XG5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIDxQb3B1cFJpZ2h0XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBrZXk9e3JpZ2h0LmtleX1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlkPXtyaWdodC5rZXl9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBuYW1lPXtyaWdodC5uYW1lfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZGVzY3JpcHRpb249e3JpZ2h0LmRlc2NyaXB0aW9ufVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZ2xvYmFsPXtyaWdodC5nbG9iYWx9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBsYW5ndWFnZT17cmlnaHQubGFuZ3VhZ2V9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBsYW5ndWFnZXM9e0xJQ0VOU0VEX0xBTkdVQUdFU31cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG9wdGlvbnM9e3JpZ2h0Lm9wdGlvbnN9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBtdWx0aXBsZT17cmlnaHQubXVsdGlwbGV9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzdXBlclJpZ2h0cz17cmlnaHQuc3VwZXJSaWdodHN9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzaG93VGV4dEFyZWE9e3JpZ2h0LnNob3dUZXh0QXJlYX1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG9uVXBkYXRlPXt0aGlzLnVwZGF0ZVJpZ2h0fVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgb25VcGRhdGVMaXN0aW5nPXsoaywgdik9Pnt1cGRhdGVDb250ZW50VmFsdWUoayx2KX19XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICByaWdodHNQYWNrYWdlPXt0aGlzLnByb3BzLnJpZ2h0c1BhY2thZ2V9Lz5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9KVxuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cblxuICAgICAgICAgICAgICAgICAgICA8Q29tbWVudHMgY29tbWVudHM9e0NPTU1FTlRTX1JJR0hUU30gcHJvcE5hbWU9e1wiQ09NTUVOVFNfUklHSFRTXCJ9Lz5cblxuICAgICAgICAgICAgICAgICAgICA8VGl0bGVCYXIgdGl0bGU9e3RoaXMuY29udGV4dC50KFwiQ0xfU1RFUDNfVElUTEVfUFJPRFVDVElPTl9TVEFOREFSRFNcIil9Lz5cblxuICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cInJpZ2h0cy1jb250YWluZXJcIj5cbiAgICAgICAgICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB0aGlzLnN0YXRlLnByb2R1Y3Rpb25TdGFuZGFyZHMubGVuZ3RoID4gMCAmJiB0aGlzLnN0YXRlLnByb2R1Y3Rpb25TdGFuZGFyZHMubWFwKChyaWdodCwgaSk9PiB7XG5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbGV0IHN1cGVyUmlnaHRzID0gcmlnaHQuc3VwZXJSaWdodHM7XG5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKCByaWdodC5zdXBlclJpZ2h0cy5sZW5ndGggPiAwXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAmJiAhdGhpcy5zdXBlclJpZ2h0c0VuYWJsZWQocmlnaHQuc3VwZXJSaWdodHMpKSByZXR1cm47XG5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKCB0aGlzLnNraXBDb250ZW50RGVsaXZlcnkocmlnaHQpICkgcmV0dXJuO1xuXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiA8UG9wdXBSaWdodFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAga2V5PXtyaWdodC5rZXl9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZD17cmlnaHQua2V5fVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbmFtZT17cmlnaHQubmFtZX1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRlc2NyaXB0aW9uPXtyaWdodC5kZXNjcmlwdGlvbn1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNlbGVjdGVkPXt0aGlzLnByb3BzW3JpZ2h0LmtleV19XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBvcHRpb25zPXtyaWdodC5vcHRpb25zfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbXVsdGlwbGU9e3JpZ2h0Lm11bHRpcGxlfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcHJvZHVjdGlvbkxhYmVsPXtyaWdodC5wcm9kdWN0aW9uTGFiZWx9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjaGVja0NvbnRlbnREZWxpdmVyeT17dHJ1ZX1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHByb2dyYW1OYW1lPXtQUk9HUkFNX05BTUV9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBvblByb2dyYW09eygpID0+IHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0aGlzLnNldFN0YXRlKHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcHJvZ3JhbVBvcHVwQWN0aXZlIDogdHJ1ZSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH19XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb250ZW50PXt0aGlzLnByb3BzfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc3VwZXJSaWdodHM9e3N1cGVyUmlnaHRzfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc2hvd1RleHRBcmVhPXtyaWdodC5zaG93VGV4dEFyZWF9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0ZWNobmljYWxGZWU9e3JpZ2h0LnRlY2huaWNhbEZlZX1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG9uVXBkYXRlPXt0aGlzLnVwZGF0ZVJpZ2h0fVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgb25VcGRhdGVMaXN0aW5nPXsoaywgdik9Pnt1cGRhdGVDb250ZW50VmFsdWUoayx2KX19XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICByaWdodHNQYWNrYWdlPXt0aGlzLnByb3BzLnJpZ2h0c1BhY2thZ2V9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfSlcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgPC9kaXY+XG5cbiAgICAgICAgICAgICAgICAgICAgPENvbW1lbnRzIGNvbW1lbnRzPXtDT01NRU5UU19QUk9EVUNUSU9OfSBwcm9wTmFtZT17XCJDT01NRU5UU19QUk9EVUNUSU9OXCJ9Lz5cblxuICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICk7XG4gICAgfVxuXG4gICAgc2hvd0xpY2Vuc2VQb3B1cCA9ICgpID0+IHtcbiAgICAgICAgdGhpcy5zZXRTdGF0ZSh7XG4gICAgICAgICAgICBsaWNlbnNlUG9wdXA6IHRydWVcbiAgICAgICAgfSk7XG4gICAgfVxufVxuU2VsbEZvcm1TdGVwMy5jb250ZXh0VHlwZXMgPSB7XG4gICAgdDogUHJvcFR5cGVzLmZ1bmMuaXNSZXF1aXJlZFxufTtcblxuY29uc3QgbWFwU3RhdGVUb1Byb3BzID0gc3RhdGUgPT4ge1xuICAgIHJldHVybiBzdGF0ZS5jb250ZW50XG59O1xuXG5jb25zdCBtYXBEaXNwYXRjaFRvUHJvcHMgPSBkaXNwYXRjaCA9PiB7XG4gICAgcmV0dXJuIHtcbiAgICAgICAgc3VwZXJSaWdodHNVcGRhdGVkIDogKHJpZ2h0c1BhY2thZ2UpID0+IGRpc3BhdGNoKHtcbiAgICAgICAgICAgIHR5cGUgOiAnU1VQRVJfUklHSFRTX1VQREFURUQnLFxuICAgICAgICAgICAgcmlnaHRzUGFja2FnZTogcmlnaHRzUGFja2FnZVxuICAgICAgICB9KSxcbiAgICAgICAgcmVtb3ZlTmV3U3BvcnQgOiAoaW5kZXgpID0+IGRpc3BhdGNoKHtcbiAgICAgICAgICAgIHR5cGU6ICdSRU1PVkVfTkVXJyxcbiAgICAgICAgICAgIGluZGV4IDogaW5kZXgsXG4gICAgICAgICAgICBzZWxlY3RvclR5cGUgOiBcInNwb3J0c1wiLFxuICAgICAgICB9KSxcbiAgICAgICAgdXBkYXRlQ29udGVudFZhbHVlIDogKGtleSwgdmFsdWUpID0+IGRpc3BhdGNoKHtcbiAgICAgICAgICAgIHR5cGU6ICdVUERBVEVfQ09OVEVOVF9WQUxVRScsXG4gICAgICAgICAgICBrZXk6IGtleSxcbiAgICAgICAgICAgIHZhbHVlIDogdmFsdWVcbiAgICAgICAgfSksXG4gICAgICAgIHVwZGF0ZVByb2dyYW0gOiAoaW5kZXgsIHByb2dyYW0sIG5hbWUpID0+IGRpc3BhdGNoKHtcbiAgICAgICAgICAgIHR5cGU6ICdVUERBVEVfUFJPR1JBTVMnLFxuICAgICAgICAgICAgaW5kZXg6IGluZGV4LFxuICAgICAgICAgICAgcHJvZ3JhbSA6IHByb2dyYW0sXG4gICAgICAgICAgICBuYW1lOiBuYW1lXG4gICAgICAgIH0pLFxuICAgICAgICBzdGVwQ2hhbmdlUmVzZXQgOiAoKSA9PiBkaXNwYXRjaChzdGVwQ2hhbmdlUmVzZXQoKSlcbiAgICB9XG59O1xuXG5leHBvcnQgZGVmYXVsdCBjb25uZWN0KFxuICAgIG1hcFN0YXRlVG9Qcm9wcyxcbiAgICBtYXBEaXNwYXRjaFRvUHJvcHNcbikoU2VsbEZvcm1TdGVwMylcblxuXG5cbi8vIFdFQlBBQ0sgRk9PVEVSIC8vXG4vLyAuL3NyYy9BcHBCdW5kbGUvUmVzb3VyY2VzL3B1YmxpYy9qYXZhc2NyaXB0L3NlbGwvY29udGFpbmVycy9TZWxsRm9ybVN0ZXAzLmpzIiwiaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCB7IGNvbm5lY3QgfSBmcm9tIFwicmVhY3QtcmVkdXhcIjtcbmltcG9ydCBGaWxlU2VsZWN0b3IgZnJvbSAnLi4vLi4vbWFpbi9jb21wb25lbnRzL0ZpbGVTZWxlY3Rvcic7XG5pbXBvcnQgU2FsZXNQYWNrYWdlRm9ybSBmcm9tIFwiLi4vY29tcG9uZW50cy9TYWxlc1BhY2thZ2VGb3JtXCI7XG5pbXBvcnQgU2FsZXNQYWNrYWdlRWRpdCBmcm9tIFwiLi4vY29tcG9uZW50cy9TYWxlc1BhY2thZ2VFZGl0XCI7XG5pbXBvcnQgRXhwaXJhdGlvbkRhdGVTZWxlY3RvciBmcm9tIFwiLi4vY29tcG9uZW50cy9FeHBpcmF0aW9uRGF0ZVNlbGVjdG9yXCI7XG5pbXBvcnQgSnVyaXNkaWN0aW9uU2VsZWN0b3IgZnJvbSBcIi4uL2NvbXBvbmVudHMvSnVyaXNkaWN0aW9uU2VsZWN0b3JcIjtcbmltcG9ydCBDb21wYW55SW5mb3JtYXRpb24gZnJvbSBcIi4uL2NvbXBvbmVudHMvQ29tcGFueUluZm9ybWF0aW9uXCI7XG5pbXBvcnQgTGlzdGluZ05hbWUgZnJvbSBcIi4uL2NvbXBvbmVudHMvTGlzdGluZ05hbWVcIjtcbmltcG9ydCB7Q291bnRyeVNlbGVjdG9yfSBmcm9tIFwiLi4vLi4vbWFpbi9jb21wb25lbnRzL0NvdW50cnlTZWxlY3RvclwiO1xuaW1wb3J0IHtzdGVwQ2hhbmdlUmVzZXR9IGZyb20gXCIuLi9hY3Rpb25zL2NvbnRlbnRBY3Rpb25zXCI7XG5pbXBvcnQge1N1bW1hcnlUZXh0LCBUaXRsZUJhcn0gZnJvbSBcIi4uL2NvbXBvbmVudHMvU2VsbEZvcm1JdGVtc1wiO1xuaW1wb3J0IHtQcm9wVHlwZXN9IGZyb20gXCJwcm9wLXR5cGVzXCI7XG5pbXBvcnQgQXBwbGljYWJsZUxhdyBmcm9tIFwiLi4vY29tcG9uZW50cy9BcHBsaWNhYmxlTGF3XCI7XG5cbmNsYXNzIFNlbGxGb3JtU3RlcDQgZXh0ZW5kcyBSZWFjdC5Db21wb25lbnQge1xuXG4gICAgY29uc3RydWN0b3IocHJvcHMpIHtcbiAgICAgICAgc3VwZXIocHJvcHMpO1xuXG4gICAgICAgIHRoaXMuc3RhdGUgPSB7XG4gICAgICAgICAgICB0aXRsZSA6IFwiU3RlcCA0XCIsXG4gICAgICAgICAgICBuYW1lIDogXCJcIixcbiAgICAgICAgICAgIHNhbGVzUGFja2FnZXMgOiBbXVxuICAgICAgICB9O1xuICAgIH1cblxuICAgIHNlbGVjdEN1cnJlbmN5ID0gKCBjdXJyZW5jeSApID0+IHtcbiAgICAgICAgdGhpcy5wcm9wcy51cGRhdGVDb250ZW50VmFsdWUoXCJjdXJyZW5jeVwiLCBjdXJyZW5jeSk7XG4gICAgfTtcblxuICAgIHVwZGF0ZU5hbWUgPSAoIGUgKSA9PiB7XG4gICAgICAgIHRoaXMucHJvcHMudXBkYXRlQ29udGVudFZhbHVlKFwibmFtZVwiLCBlLnRhcmdldC52YWx1ZSk7XG4gICAgfTtcblxuICAgIGVkaXRTYWxlc1BhY2thZ2UgPSAoIGluZGV4ICkgPT4ge1xuICAgICAgICB0aGlzLnNldFN0YXRlKHtcbiAgICAgICAgICAgIHNhbGVzUGFja2FnZVRvRWRpdCA6IGluZGV4LFxuICAgICAgICAgICAgZWRpdE9wZW46IHRydWVcbiAgICAgICAgfSk7XG4gICAgfTtcblxuICAgIGFkZFNhbGVzUGFja2FnZSA9ICggc2FsZXNQYWNrYWdlcyApID0+IHtcbiAgICAgICAgY29uc3Qge2N1cnJlbmN5fSA9IHRoaXMucHJvcHM7XG4gICAgICAgIHNhbGVzUGFja2FnZXMuZm9yRWFjaChzcCA9PiBzcC5jdXJyZW5jeSA9IHtjb2RlOmN1cnJlbmN5fSk7XG4gICAgICAgIHRoaXMucHJvcHMuYWRkU2FsZXNQYWNrYWdlcyhzYWxlc1BhY2thZ2VzKTtcbiAgICB9O1xuXG4gICAgdXBkYXRlU2FsZXNQYWNrYWdlID0gKCBzYWxlc1BhY2thZ2UsIGluZGV4ICkgPT4ge1xuICAgICAgICB0aGlzLnByb3BzLnVwZGF0ZVNhbGVzUGFja2FnZXMoXCJzYXZlXCIsIHNhbGVzUGFja2FnZSwgaW5kZXgpO1xuICAgIH07XG5cbiAgICByZW1vdmVTYWxlc1BhY2thZ2UgPSAoIGluZGV4ICkgPT4ge1xuICAgICAgICB0aGlzLnByb3BzLnVwZGF0ZVNhbGVzUGFja2FnZXMoXCJyZW1vdmVcIiwgbnVsbCwgaW5kZXgpO1xuICAgIH07XG5cbiAgICByZW1vdmVBbGxTYWxlc1BhY2thZ2U9ICgpID0+IHtcbiAgICAgICAgdGhpcy5wcm9wcy51cGRhdGVTYWxlc1BhY2thZ2VzKFwicmVtb3ZlQWxsXCIpO1xuICAgIH07XG5cbiAgICAvKipcbiAgICAgKlxuICAgICAqIEByZXR1cm5zIHtib29sZWFufVxuICAgICAqL1xuICAgIGV4Y2x1c2l2aXR5ID0gKCkgPT4ge1xuICAgICAgICBjb25zdCB7cmlnaHRzUGFja2FnZX0gPSB0aGlzLnByb3BzO1xuICAgICAgICByZXR1cm4gcmlnaHRzUGFja2FnZS5maWx0ZXIocnAgPT4gcnAuZXhjbHVzaXZlKS5sZW5ndGggPiAwO1xuICAgIH07XG5cbiAgICBzY3JvbGwgPSAoKSA9PiB7XG5cbiAgICAgICAgY29uc3Qge3N0ZXBDaGFuZ2UsIHN0ZXBDaGFuZ2VSZXNldCB9ID0gdGhpcy5wcm9wcztcblxuICAgICAgICBpZiAoIHN0ZXBDaGFuZ2UgKSB7XG4gICAgICAgICAgICB3aW5kb3cuc2Nyb2xsVG8oMCwgMCk7XG4gICAgICAgICAgICBzdGVwQ2hhbmdlUmVzZXQoKTtcbiAgICAgICAgfVxuXG4gICAgfTtcblxuICAgIGFkZEZpbGUgPSAocmVzcG9uc2UpID0+IHtcbiAgICAgICAgY29uc3Qge2FubmV4fSA9IHRoaXMucHJvcHM7XG4gICAgICAgIGxldCBpbmRleCA9IGFubmV4Lmxlbmd0aCA7XG4gICAgICAgIHRoaXMucHJvcHMudXBkYXRlQW5uZXgoXCJzYXZlXCIsIGluZGV4LCB7ZmlsZTogcmVzcG9uc2UuZmlsZSwgbmFtZSA6IHJlc3BvbnNlLm5hbWUgfSApO1xuICAgIH07XG5cbiAgICByZW1vdmVGaWxlID0gKCBpbmRleCApID0+IHtcbiAgICAgICAgdGhpcy5wcm9wcy51cGRhdGVBbm5leChcInJlbW92ZVwiLCBpbmRleCwgbnVsbCk7XG4gICAgfTtcblxuICAgIHJlbmRlcigpIHtcbiAgICAgICAgY29uc3Qge1xuICAgICAgICAgICAgc3RlcCxcbiAgICAgICAgICAgIGFubmV4LFxuICAgICAgICAgICAgc2FsZXNQYWNrYWdlcyxcbiAgICAgICAgICAgIGN1cnJlbmN5LFxuICAgICAgICAgICAgdXBkYXRlQ29udGVudFZhbHVlLFxuICAgICAgICAgICAgc3BvcnRzLFxuICAgICAgICAgICAgc3BvcnRDYXRlZ29yeSxcbiAgICAgICAgICAgIHRvdXJuYW1lbnQsXG4gICAgICAgICAgICBpbWFnZSxcbiAgICAgICAgfSA9IHRoaXMucHJvcHM7XG5cbiAgICAgICAgaWYgKHN0ZXAgIT09IDQpIHJldHVybiAobnVsbCk7XG4gICAgICAgIHRoaXMuc2Nyb2xsKCk7XG4gICAgICAgIHJldHVybiAoXG5cbiAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwic3RlcC1jb250ZW50IHN0ZXAtNFwiPlxuICAgICAgICAgICAgICAgIHsoc3BvcnRzLmxlbmd0aCB8fCBzcG9ydENhdGVnb3J5Lmxlbmd0aCB8fCB0b3VybmFtZW50Lmxlbmd0aCB8fCAgc2Vhc29ucy5sZW5ndGgpICYmIChcbiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJsaXN0aW5nLXN1bW1hcnlcIj5cbiAgICAgICAgICAgICAgICAgICAgICAgIDxTdW1tYXJ5VGV4dCB7Li4udGhpcy5wcm9wc30vPlxuICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgICApfVxuICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwic3RlcC1jb250ZW50LWNvbnRhaW5lclwiPlxuICAgICAgICAgICAgICAgICAgICA8U2FsZXNQYWNrYWdlRm9ybVxuICAgICAgICAgICAgICAgICAgICAgICAgY3VycmVuY3k9e2N1cnJlbmN5fVxuICAgICAgICAgICAgICAgICAgICAgICAgZXhjbHVzaXZpdHk9e3RoaXMuZXhjbHVzaXZpdHkoKX1cbiAgICAgICAgICAgICAgICAgICAgICAgIHNhbGVzUGFja2FnZXM9e3NhbGVzUGFja2FnZXN9XG4gICAgICAgICAgICAgICAgICAgICAgICBvbkFkZD17dGhpcy5hZGRTYWxlc1BhY2thZ2V9XG4gICAgICAgICAgICAgICAgICAgICAgICBvblVwZGF0ZT17dGhpcy51cGRhdGVTYWxlc1BhY2thZ2V9XG4gICAgICAgICAgICAgICAgICAgICAgICBvblJlbW92ZT17dGhpcy5yZW1vdmVTYWxlc1BhY2thZ2V9XG4gICAgICAgICAgICAgICAgICAgICAgICBvbkVkaXQ9e3RoaXMuZWRpdFNhbGVzUGFja2FnZX1cbiAgICAgICAgICAgICAgICAgICAgICAgIG9uUmVtb3ZlQWxsPXt0aGlzLnJlbW92ZUFsbFNhbGVzUGFja2FnZX1cbiAgICAgICAgICAgICAgICAgICAgICAgIHNlbGVjdEN1cnJlbmN5PXt0aGlzLnNlbGVjdEN1cnJlbmN5fVxuICAgICAgICAgICAgICAgICAgICAvPlxuXG4gICAgICAgICAgICAgICAgICAgIHt0aGlzLnN0YXRlLmVkaXRPcGVuICYmIDxTYWxlc1BhY2thZ2VFZGl0XG4gICAgICAgICAgICAgICAgICAgICAgICBpc09wZW49e3RoaXMuc3RhdGUuZWRpdE9wZW59XG4gICAgICAgICAgICAgICAgICAgICAgICBvbkNsb3NlPXsoKSA9PiB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5zZXRTdGF0ZSh7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGVkaXRPcGVuOiBmYWxzZVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0pXG4gICAgICAgICAgICAgICAgICAgICAgICB9fVxuICAgICAgICAgICAgICAgICAgICAgICAgZXhjbHVzaXZpdHk9e3RoaXMuZXhjbHVzaXZpdHkoKX1cbiAgICAgICAgICAgICAgICAgICAgICAgIG9uVXBkYXRlPXt0aGlzLnVwZGF0ZVNhbGVzUGFja2FnZX1cbiAgICAgICAgICAgICAgICAgICAgICAgIHNhbGVzUGFja2FnZUlkPXt0aGlzLnN0YXRlLnNhbGVzUGFja2FnZVRvRWRpdH1cbiAgICAgICAgICAgICAgICAgICAgICAgIHNhbGVzUGFja2FnZXM9e3NhbGVzUGFja2FnZXN9XG4gICAgICAgICAgICAgICAgICAgIC8+fVxuXG4gICAgICAgICAgICAgICAgICAgIDxUaXRsZUJhciB0aXRsZT17dGhpcy5jb250ZXh0LnQoXCJDTF9TVEVQNF9USVRMRV9JTkZPXCIpfS8+XG5cbiAgICAgICAgICAgICAgICAgICAgPENvbXBhbnlJbmZvcm1hdGlvbi8+XG5cbiAgICAgICAgICAgICAgICAgICAgPEp1cmlzZGljdGlvblNlbGVjdG9yLz5cblxuICAgICAgICAgICAgICAgICAgICA8QXBwbGljYWJsZUxhdyAvPlxuXG4gICAgICAgICAgICAgICAgICAgIDxGaWxlU2VsZWN0b3JcbiAgICAgICAgICAgICAgICAgICAgICAgIGxhYmVsPXt0aGlzLmNvbnRleHQudCgnQ0xfU1RFUDRfTEFCRUxfQU5ORVgnKX1cbiAgICAgICAgICAgICAgICAgICAgICAgIHRhcmdldD17XCJhbm5leFwifVxuICAgICAgICAgICAgICAgICAgICAgICAgc2VsZWN0ZWQ9e2FubmV4fVxuICAgICAgICAgICAgICAgICAgICAgICAgb25TZWxlY3Q9e3RoaXMuYWRkRmlsZX1cbiAgICAgICAgICAgICAgICAgICAgICAgIG9uUmVtb3ZlPXt0aGlzLnJlbW92ZUZpbGV9XG4gICAgICAgICAgICAgICAgICAgICAgICBhY2NlcHQ9e1sgXCIucGRmXCJdfVxuICAgICAgICAgICAgICAgICAgICAgICAgYWNjZXB0VHlwZT17W1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIFwiYXBwbGljYXRpb24vcGRmXCJcbiAgICAgICAgICAgICAgICAgICAgICAgIF19XG4gICAgICAgICAgICAgICAgICAgICAgICB0bXA9e3RydWV9XG4gICAgICAgICAgICAgICAgICAgICAgICBpbmZvVGV4dD17dGhpcy5jb250ZXh0LnQoJ0NMX1NURVA0X0lORk9fQU5ORVgnKX1cbiAgICAgICAgICAgICAgICAgICAgLz5cblxuICAgICAgICAgICAgICAgICAgICA8VGl0bGVCYXIgdGl0bGU9e3RoaXMuY29udGV4dC50KFwiQ0xfU1RFUDRfTElTVElOR19ERVRBSUxTX1RFWFRcIil9IGluZm9UZXh0PXt0aGlzLmNvbnRleHQudCgnQ0xfU1RFUDRfSU5GT19ERVRBSUxTJyl9Lz5cblxuICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cInN0ZXAtaXRlbS1kZXNjcmlwdGlvblwiIHN0eWxlPXt7bWFyZ2luVG9wOiAwfX0+XG4gICAgICAgICAgICAgICAgICAgICAgICB7dGhpcy5jb250ZXh0LnQoXCJDTF9TVEVQNF9MSVNUSU5HX0RFVEFJTFNfVEVYVFwiKX1cbiAgICAgICAgICAgICAgICAgICAgPC9kaXY+XG5cbiAgICAgICAgICAgICAgICAgICAgPExpc3RpbmdOYW1lLz5cblxuICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT0ncm93Jz5cbiAgICAgICAgICAgICAgICAgICAgICAgIDxFeHBpcmF0aW9uRGF0ZVNlbGVjdG9yLz5cblxuICAgICAgICAgICAgICAgICAgICAgICAgPEZpbGVTZWxlY3RvclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGxhYmVsPXt0aGlzLmNvbnRleHQudChcIkNMX1NURVA0X0xBQkVMX0lNQUdFXCIpfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlzSW1hZ2U9e3RydWV9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgb25TZWxlY3Q9e3VwZGF0ZUNvbnRlbnRWYWx1ZX1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBwcmV2aW91c0ltYWdlPXtpbWFnZX1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB0YXJnZXQ9e1wiaW1hZ2VCYXNlNjRcIn0vPlxuXG4gICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT0nY2xlYXJmaXgnLz5cbiAgICAgICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgKTtcbiAgICB9XG59XG5cblNlbGxGb3JtU3RlcDQuY29udGV4dFR5cGVzID0ge1xuICAgIHQ6IFByb3BUeXBlcy5mdW5jLmlzUmVxdWlyZWRcbn07XG5cbmNvbnN0IG1hcFN0YXRlVG9Qcm9wcyA9IHN0YXRlID0+IHtcbiAgICByZXR1cm4gc3RhdGUuY29udGVudFxufTtcblxuY29uc3QgbWFwRGlzcGF0Y2hUb1Byb3BzID0gZGlzcGF0Y2ggPT4ge1xuICAgIHJldHVybiB7XG4gICAgICAgIHVwZGF0ZUNvbnRlbnRWYWx1ZSA6IChrZXksIHZhbHVlKSA9PiBkaXNwYXRjaCh7XG4gICAgICAgICAgICB0eXBlOiAnVVBEQVRFX0NPTlRFTlRfVkFMVUUnLFxuICAgICAgICAgICAga2V5OiBrZXksXG4gICAgICAgICAgICB2YWx1ZSA6IHZhbHVlXG4gICAgICAgIH0pLFxuICAgICAgICB1cGRhdGVTYWxlc1BhY2thZ2VzIDogKG5hbWUsIHNhbGVzUGFja2FnZSwgaW5kZXgpID0+IGRpc3BhdGNoKHtcbiAgICAgICAgICAgIHR5cGU6ICdVUERBVEVfU0FMRVNfUEFDS0FHRVMnLFxuICAgICAgICAgICAgaW5kZXg6IGluZGV4LFxuICAgICAgICAgICAgc2FsZXNQYWNrYWdlIDogc2FsZXNQYWNrYWdlLFxuICAgICAgICAgICAgbmFtZTogbmFtZVxuICAgICAgICB9KSxcbiAgICAgICAgYWRkU2FsZXNQYWNrYWdlcyA6IChzYWxlc1BhY2thZ2VzKSA9PiBkaXNwYXRjaCh7XG4gICAgICAgICAgICB0eXBlOiAnQUREX1NBTEVTX1BBQ0tBR0VTJyxcbiAgICAgICAgICAgIHNhbGVzUGFja2FnZXMgOiBzYWxlc1BhY2thZ2VzLFxuICAgICAgICB9KSxcbiAgICAgICAgdXBkYXRlQW5uZXggOiAobmFtZSwgaW5kZXgsIHZhbHVlKSA9PiBkaXNwYXRjaCh7XG4gICAgICAgICAgICB0eXBlOiAnVVBEQVRFX0FOTkVYJyxcbiAgICAgICAgICAgIG5hbWU6IG5hbWUsXG4gICAgICAgICAgICBpbmRleDogaW5kZXgsXG4gICAgICAgICAgICB2YWx1ZTogdmFsdWVcbiAgICAgICAgfSksXG4gICAgICAgIHN0ZXBDaGFuZ2VSZXNldCA6ICgpID0+IGRpc3BhdGNoKHN0ZXBDaGFuZ2VSZXNldCgpKVxuICAgIH1cbn07XG5cbmV4cG9ydCBkZWZhdWx0IGNvbm5lY3QoXG4gICAgbWFwU3RhdGVUb1Byb3BzLFxuICAgIG1hcERpc3BhdGNoVG9Qcm9wc1xuKShTZWxsRm9ybVN0ZXA0KVxuXG5cbi8vIFdFQlBBQ0sgRk9PVEVSIC8vXG4vLyAuL3NyYy9BcHBCdW5kbGUvUmVzb3VyY2VzL3B1YmxpYy9qYXZhc2NyaXB0L3NlbGwvY29udGFpbmVycy9TZWxsRm9ybVN0ZXA0LmpzIiwiaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCB7IGNvbm5lY3QgfSBmcm9tIFwicmVhY3QtcmVkdXhcIjtcbmltcG9ydCBjbiBmcm9tIFwiY2xhc3NuYW1lc1wiO1xuaW1wb3J0IHtnb1RvUHJldmlvdXNTdGVwLCBnb1RvU3RlcH0gZnJvbSBcIi4uL2FjdGlvbnMvY29udGVudEFjdGlvbnNcIjtcbmltcG9ydCB7UHJvcFR5cGVzfSBmcm9tIFwicHJvcC10eXBlc1wiO1xuXG5jb25zdCBTZWxsRm9ybVN0ZXAgPSAoe3N0ZXAsIGFjdGl2ZSwgdGl0bGUsIG9uQ2xpY2ssIHN0ZXBWaXNpdGVkLCBzdGVwRmluaXNoZWR9KSA9PiAoXG4gICAgPGRpdiAgY2xhc3NOYW1lPXtjbihcInN0ZXBcIiwge1wic3RlcC1hY3RpdmVcIiA6IGFjdGl2ZSwgXCJ2aXNpdGVkXCI6IHN0ZXBWaXNpdGVkLCBcImZpbmlzaGVkXCI6IHN0ZXBGaW5pc2hlZH0pfSBvbkNsaWNrPXsoKSA9PiB7b25DbGljayhzdGVwKX19PlxuICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cInN0ZXAtbGFiZWxcIj5cbiAgICAgICAgICAgIFN0ZXAgeyBzdGVwIH1cbiAgICAgICAgPC9kaXY+XG4gICAgICAgIDxkaXYgY2xhc3NOYW1lPVwic3RlcC10aXRsZVwiPlxuICAgICAgICAgICAge3RpdGxlfVxuICAgICAgICA8L2Rpdj5cbiAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJzdGVwLWljb25cIj5cbiAgICAgICAgICAgIDxpIGNsYXNzTmFtZT1cImZhIGZhLWNoZWNrXCIvPlxuICAgICAgICAgICAgPGkgY2xhc3NOYW1lPVwiZmEgZmEtZWxsaXBzaXMtaFwiLz5cbiAgICAgICAgPC9kaXY+XG4gICAgPC9kaXY+XG4pO1xuXG5jbGFzcyBTZWxsRm9ybVN0ZXBzIGV4dGVuZHMgUmVhY3QuQ29tcG9uZW50IHtcbiAgICBjb25zdHJ1Y3Rvcihwcm9wcykge1xuICAgICAgICBzdXBlcihwcm9wcyk7XG4gICAgICAgIHRoaXMuc3RhdGUgPSB7XG4gICAgICAgICAgICBzdGVwczogW1xuICAgICAgICAgICAgICAgIHtzdGVwOiAxLCB0aXRsZTogXCJFdmVudCBzZWxlY3Rpb25cIn0sXG4gICAgICAgICAgICAgICAge3N0ZXA6IDIsIHRpdGxlOiBcIlByb2dyYW0gJiBSaWdodHMgU2VsZWN0aW9uXCJ9LFxuICAgICAgICAgICAgICAgIHtzdGVwOiAzLCB0aXRsZTogXCJHcmFudCBvZiBSaWdodHMgJiBQcm9kdWN0aW9uIERldGFpbHNcIn0sXG4gICAgICAgICAgICAgICAge3N0ZXA6IDQsIHRpdGxlOiBcIkNvbW1lcmNpYWwgRGV0YWlsc1wifVxuICAgICAgICAgICAgXVxuICAgICAgICB9O1xuICAgIH1cblxuICAgIG9uQ2xpY2sgPSAoc3RlcFNlbGVjdGVkKSA9PiB7XG4gICAgICAgIGNvbnN0IHsgZ29Ub1N0ZXAsIGN1c3RvbUlkLCBoaXN0b3J5LCBtYXhTdGVwIH0gPSB0aGlzLnByb3BzO1xuICAgICAgICBcbiAgICAgICAgaWYgKHN0ZXBTZWxlY3RlZCA8PSBtYXhTdGVwKSB7XG4gICAgICAgICAgICBnb1RvU3RlcChzdGVwU2VsZWN0ZWQpO1xuICAgICAgICAgICAgaGlzdG9yeS5wdXNoKGAvY29udGVudGxpc3RpbmcvJHtjdXN0b21JZH0vJHtzdGVwU2VsZWN0ZWR9YCk7XG4gICAgICAgIH1cbiAgICB9O1xuXG4gICAgcmVuZGVyKCkge1xuICAgICAgICBjb25zdCB7IG1heFN0ZXAsIHN0ZXAgfSA9IHRoaXMucHJvcHM7XG4gICAgICAgIFxuICAgICAgICByZXR1cm4gKFxuICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJib3gtaGVhZGVyXCI+XG4gICAgICAgICAgICAgICAgeyB0aGlzLnN0YXRlLnN0ZXBzLm1hcCgoc3RlcEl0ZW0sIGkpPT57XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiA8U2VsbEZvcm1TdGVwXG4gICAgICAgICAgICAgICAgICAgICAgICBrZXk9e2l9XG4gICAgICAgICAgICAgICAgICAgICAgICBhY3RpdmU9e3N0ZXAgPT09IHN0ZXBJdGVtLnN0ZXB9XG4gICAgICAgICAgICAgICAgICAgICAgICBzdGVwVmlzaXRlZD17c3RlcEl0ZW0uc3RlcCA8PSBtYXhTdGVwfVxuICAgICAgICAgICAgICAgICAgICAgICAgc3RlcEZpbmlzaGVkPXtzdGVwSXRlbS5zdGVwIDwgbWF4U3RlcH1cbiAgICAgICAgICAgICAgICAgICAgICAgIG9uQ2xpY2s9e3RoaXMub25DbGlja31cbiAgICAgICAgICAgICAgICAgICAgICAgIHN0ZXA9e3N0ZXBJdGVtLnN0ZXB9XG4gICAgICAgICAgICAgICAgICAgICAgICB0aXRsZT17c3RlcEl0ZW0udGl0bGV9XG4gICAgICAgICAgICAgICAgICAgIC8+XG4gICAgICAgICAgICAgICAgfSl9XG4gICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgKTtcbiAgICB9XG59XG5cblNlbGxGb3JtU3RlcHMuY29udGV4dFR5cGVzID0ge1xuICAgIHQ6IFByb3BUeXBlcy5mdW5jLmlzUmVxdWlyZWRcbn07XG5cbmNvbnN0IG1hcFN0YXRlVG9Qcm9wcyA9IHN0YXRlID0+IHtcbiAgICByZXR1cm4ge1xuICAgICAgICBzdGVwIDogc3RhdGUuY29udGVudC5zdGVwLFxuICAgICAgICBtYXhTdGVwIDogc3RhdGUuY29udGVudC5tYXhTdGVwLFxuICAgICAgICBjdXN0b21JZCA6IHN0YXRlLmNvbnRlbnQuY3VzdG9tSWQsXG4gICAgfVxufTtcblxuY29uc3QgbWFwRGlzcGF0Y2hUb1Byb3BzID0gZGlzcGF0Y2ggPT4ge1xuICAgIHJldHVybiB7XG4gICAgICAgIGdvVG9TdGVwIDogKHN0ZXApID0+IGRpc3BhdGNoKGdvVG9TdGVwKHN0ZXApKSxcbiAgICB9XG59O1xuXG5leHBvcnQgZGVmYXVsdCBjb25uZWN0KFxuICAgIG1hcFN0YXRlVG9Qcm9wcyxcbiAgICBtYXBEaXNwYXRjaFRvUHJvcHNcbikoU2VsbEZvcm1TdGVwcylcblxuXG4vLyBXRUJQQUNLIEZPT1RFUiAvL1xuLy8gLi9zcmMvQXBwQnVuZGxlL1Jlc291cmNlcy9wdWJsaWMvamF2YXNjcmlwdC9zZWxsL2NvbnRhaW5lcnMvU2VsbEZvcm1TdGVwcy5qcyIsImltcG9ydCBtYXggZnJvbSAnbG9kYXNoL21heCc7XG5pbXBvcnQgeyBhbGxWYWx1ZSB9IGZyb20gJy4vLi4vLi4vbWFpbi9jb21wb25lbnRzL0xhbmd1YWdlU2VsZWN0b3InO1xuXG5leHBvcnQgY29uc3QgY29udGVudFR5cGU9IHtcbiAgICBDT05URU5UX0lOSVQ6J0NPTlRFTlRfSU5JVCcsXG4gICAgU1RFUF9DSEFOR0VfUkVTRVQgOiAnU1RFUF9DSEFOR0VfUkVTRVQnLFxuICAgIEdPX1RPX1NURVA6ICdHT19UT19TVEVQJyxcbiAgICBHT19UT19ORVhUX1NURVA6ICdHT19UT19ORVhUX1NURVAnLFxuICAgIEdPX1RPX1BSRVZJT1VTX1NURVA6ICdHT19UT19QUkVWSU9VU19TVEVQJyxcbiAgICBBRERfTkVXIDogJ0FERF9ORVcnLFxuICAgIFJFTU9WRV9ORVcgOiAnUkVNT1ZFX05FVycsXG4gICAgU1VQRVJfUklHSFRTX1VQREFURUQ6ICdTVVBFUl9SSUdIVFNfVVBEQVRFRCcsXG4gICAgVVBEQVRFX0NPTlRFTlRfVkFMVUUgOiAnVVBEQVRFX0NPTlRFTlRfVkFMVUUnLFxuICAgIFNFTEVDVF9UT1VSTkFNRU5UIDogJ1NFTEVDVF9UT1VSTkFNRU5UJyxcbiAgICBSRU1PVkVfRlJPTV9NVUxUSVBMRSA6ICdSRU1PVkVfRlJPTV9NVUxUSVBMRScsXG4gICAgVVBEQVRFX0ZST01fTVVMVElQTEUgOiAnVVBEQVRFX0ZST01fTVVMVElQTEUnLFxuICAgIEFQUExZX1NFTEVDVElPTiA6ICdBUFBMWV9TRUxFQ1RJT04nLFxuICAgIFVQREFURV9TQUxFU19QQUNLQUdFUyA6ICdVUERBVEVfU0FMRVNfUEFDS0FHRVMnLFxuICAgIFVQREFURV9BVFRBQ0hNRU5UUyA6ICdVUERBVEVfQVRUQUNITUVOVFMnLFxuICAgIFVQREFURV9BTk5FWCA6ICdVUERBVEVfQU5ORVgnLFxuICAgIEFERF9TQUxFU19QQUNLQUdFUyA6ICdBRERfU0FMRVNfUEFDS0FHRVMnLFxuICAgIFJFU0VUIDogJ1JFU0VUJ1xuXG59O1xuXG5leHBvcnQgY29uc3QgRW1wdHlMaXN0aW5nID0ge1xuICAgIHN0ZXA6IDEsXG4gICAgbWF4U3RlcDogMSxcbiAgICByaWdodHNQYWNrYWdlIDogW10sXG4gICAgdG91cm5hbWVudCA6IFtdLFxuICAgIHNwb3J0Q2F0ZWdvcnkgOiBbXSxcbiAgICBzcG9ydHMgOiBbXSxcbiAgICBzZWFzb25zOiBbXSxcbiAgICBjdXN0b21TZWFzb25zIDogW10sXG4gICAgc2FsZXNQYWNrYWdlcyA6IFtdLFxuICAgIGN1c3RvbVRvdXJuYW1lbnQgOiBudWxsLFxuICAgIGN1c3RvbUNhdGVnb3J5IDogbnVsbCxcbiAgICBkZXNjcmlwdGlvbjogJycsXG4gICAgcHJvZ3JhbURlc2NyaXB0aW9uIDogbnVsbCxcbiAgICBhdHRhY2htZW50cyA6IFtdLFxuICAgIGFubmV4IDogW10sXG4gICAgZW5kRGF0ZUxpbWl0IDogMzAsXG4gICAgY291bnRlciA6IDAsXG4gICAgY3VycmVuY3kgOiBcIkVVUlwiLFxuICAgIHN0YXJ0RGF0ZU1vZGUgOiBcIkxJQ0VOU0VcIixcbiAgICBzdGVwQ2hhbmdlIDogZmFsc2UsXG4gICAgdmF0IDogXCJub1wiLFxuICAgIE5BX0lOUFVUIDogOTAsXG4gICAgSExfSU5QVVQgOiA1LFxuICAgIExJQ0VOU0VEX0xBTkdVQUdFUyA6IFthbGxWYWx1ZV0sXG4gICAgUFJPR1JBTV9MQU5HVUFHRSA6IFtdLFxuICAgIFBST0dSQU1fU1VCVElUTEVTIDogW10sXG4gICAgUFJPR1JBTV9TQ1JJUFQgOiBbXSxcbiAgICB3ZWJzaXRlIDogbnVsbCxcbiAgICBsYXcgOiBcIkVuZ2xpc2hcIlxufTtcblxuZXhwb3J0IGNvbnN0IGNvbnRlbnQgPSAoc3RhdGUgPSBFbXB0eUxpc3RpbmcsIGFjdGlvbikgPT4ge1xuXG4gICAgbGV0IG5ld1N0YXRlID0ge307XG5cbiAgICBzd2l0Y2ggKGFjdGlvbi50eXBlKSB7XG4gICAgICAgIGNhc2UgY29udGVudFR5cGUuUkVTRVQ6XG4gICAgICAgICAgICByZXR1cm4gT2JqZWN0LmFzc2lnbih7fSwgc3RhdGUsIEVtcHR5TGlzdGluZyk7XG4gICAgICAgIGNhc2UgY29udGVudFR5cGUuQ09OVEVOVF9JTklUOlxuICAgICAgICAgICAgYWN0aW9uLmNvbnRlbnQuaW5pdGlhbGl6ZWQgPSB0cnVlO1xuICAgICAgICAgICAgcmV0dXJuIE9iamVjdC5hc3NpZ24oe30sIHN0YXRlLCBhY3Rpb24uY29udGVudCwge21heFN0ZXA6IG1heChbYWN0aW9uLmNvbnRlbnQuc3RlcCwgc3RhdGUubWF4U3RlcF0pfSk7XG4gICAgICAgIGNhc2UgY29udGVudFR5cGUuR09fVE9fTkVYVF9TVEVQOlxuICAgICAgICAgICAgY29uc3QgbmV3U3RlcCA9IHN0YXRlLnN0ZXAgKyAxO1xuICAgICAgICAgICAgcmV0dXJuIE9iamVjdC5hc3NpZ24oe30sIHN0YXRlLCB7XG4gICAgICAgICAgICAgICAgc3RlcDogbmV3U3RlcCxcbiAgICAgICAgICAgICAgICBzdGVwQ2hhbmdlOiB0cnVlLFxuICAgICAgICAgICAgICAgIG1heFN0ZXA6IG1heChbbmV3U3RlcCwgc3RhdGUubWF4U3RlcF0pXG4gICAgICAgICAgICB9KTtcbiAgICAgICAgY2FzZSBjb250ZW50VHlwZS5HT19UT19TVEVQOlxuICAgICAgICAgICAgcmV0dXJuIE9iamVjdC5hc3NpZ24oe30sIHN0YXRlLCB7XG4gICAgICAgICAgICAgICAgc3RlcDogYWN0aW9uLnN0ZXAsXG4gICAgICAgICAgICAgICAgc3RlcENoYW5nZSA6IHRydWUsXG4gICAgICAgICAgICAgICAgbWF4U3RlcDogbWF4KFthY3Rpb24uc3RlcCwgc3RhdGUubWF4U3RlcF0pXG4gICAgICAgICAgICB9KTtcbiAgICAgICAgY2FzZSBjb250ZW50VHlwZS5TVEVQX0NIQU5HRV9SRVNFVDpcbiAgICAgICAgICAgIHJldHVybiBPYmplY3QuYXNzaWduKHt9LCBzdGF0ZSwge1xuICAgICAgICAgICAgICAgIHN0ZXBDaGFuZ2UgOiBmYWxzZVxuICAgICAgICAgICAgfSk7XG4gICAgICAgIGNhc2UgY29udGVudFR5cGUuR09fVE9fUFJFVklPVVNfU1RFUDpcbiAgICAgICAgICAgIHJldHVybiBPYmplY3QuYXNzaWduKHt9LCBzdGF0ZSwge1xuICAgICAgICAgICAgICAgIHN0ZXA6IHN0YXRlLnN0ZXAgLTEsXG4gICAgICAgICAgICAgICAgc3RlcENoYW5nZSA6IHRydWVcbiAgICAgICAgICAgIH0pO1xuICAgICAgICBjYXNlIGNvbnRlbnRUeXBlLlJFTU9WRV9ORVc6XG4gICAgICAgICAgICBuZXdTdGF0ZSA9IHt9O1xuICAgICAgICAgICAgbmV3U3RhdGVbYWN0aW9uLnNlbGVjdG9yVHlwZV0gPSBbLi4uc3RhdGVbYWN0aW9uLnNlbGVjdG9yVHlwZV1dO1xuICAgICAgICAgICAgbmV3U3RhdGVbYWN0aW9uLnNlbGVjdG9yVHlwZV0uc3BsaWNlKGFjdGlvbi5pbmRleCwgMSk7XG5cbiAgICAgICAgICAgIHJldHVybiBPYmplY3QuYXNzaWduKHt9LCBzdGF0ZSwgbmV3U3RhdGUpO1xuICAgICAgICBjYXNlIGNvbnRlbnRUeXBlLkFERF9ORVc6XG4gICAgICAgICAgICBuZXdTdGF0ZSA9IHt9O1xuICAgICAgICAgICAgbmV3U3RhdGVbYWN0aW9uLnNlbGVjdG9yVHlwZV0gPSBbLi4uc3RhdGVbYWN0aW9uLnNlbGVjdG9yVHlwZV1dO1xuICAgICAgICAgICAgbmV3U3RhdGVbYWN0aW9uLnNlbGVjdG9yVHlwZV1bYWN0aW9uLmluZGV4XSA9IHtcbiAgICAgICAgICAgICAgICBjdXN0b20gOiB0cnVlLFxuICAgICAgICAgICAgICAgIG5hbWU6IFwiXCJcbiAgICAgICAgICAgIH07XG5cbiAgICAgICAgICAgIGlmICggYWN0aW9uLmNsZWFuICl7XG4gICAgICAgICAgICAgICAgYWN0aW9uLmNsZWFuLmZvckVhY2goKHNlbGVjdG9yVHlwZSk9PntcbiAgICAgICAgICAgICAgICAgICAgbmV3U3RhdGVbc2VsZWN0b3JUeXBlXSA9ICQuaXNBcnJheShzdGF0ZVtzZWxlY3RvclR5cGVdKSA/IFtdIDogbnVsbDtcbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgcmV0dXJuIE9iamVjdC5hc3NpZ24oe30sIHN0YXRlLCBuZXdTdGF0ZSk7XG4gICAgICAgIGNhc2UgY29udGVudFR5cGUuVVBEQVRFX0NPTlRFTlRfVkFMVUU6XG4gICAgICAgICAgICBuZXdTdGF0ZSA9IHt9O1xuICAgICAgICAgICAgbmV3U3RhdGVbYWN0aW9uLmtleV0gPSBhY3Rpb24udmFsdWU7XG4gICAgICAgICAgICBuZXdTdGF0ZS5saXN0aW5nRWRpdGVkID0gdHJ1ZTtcblxuICAgICAgICAgICAgcmV0dXJuIE9iamVjdC5hc3NpZ24oe30sIHN0YXRlLCBuZXdTdGF0ZSk7XG4gICAgICAgIGNhc2UgY29udGVudFR5cGUuU0VMRUNUX1RPVVJOQU1FTlQ6XG4gICAgICAgICAgICBuZXdTdGF0ZSA9IHt9O1xuICAgICAgICAgICAgbmV3U3RhdGUudG91cm5hbWVudCA9IFthY3Rpb24udG91cm5hbWVudF07XG4gICAgICAgICAgICBuZXdTdGF0ZS5zcG9ydHMgPSAoYWN0aW9uLnRvdXJuYW1lbnQuc3BvcnQgKSA/IFthY3Rpb24udG91cm5hbWVudC5zcG9ydF0gOiBbXTtcbiAgICAgICAgICAgIG5ld1N0YXRlLnNwb3J0Q2F0ZWdvcnkgPSBbYWN0aW9uLnRvdXJuYW1lbnQuc3BvcnRDYXRlZ29yeV07XG5cbiAgICAgICAgICAgIHJldHVybiBPYmplY3QuYXNzaWduKHt9LCBzdGF0ZSwgbmV3U3RhdGUpO1xuICAgICAgICBjYXNlIGNvbnRlbnRUeXBlLkFQUExZX1NFTEVDVElPTjpcblxuICAgICAgICAgICAgbmV3U3RhdGUgPSB7fTtcblxuICAgICAgICAgICAgbGV0IHNlbGVjdGVkSXRlbXMgPSBBcnJheS5mcm9tKCBhY3Rpb24uc2VsZWN0ZWRJdGVtcy52YWx1ZXMoKSApO1xuXG4gICAgICAgICAgICBuZXdTdGF0ZVthY3Rpb24uc2VsZWN0b3JUeXBlXSA9IFsuLi5zdGF0ZVthY3Rpb24uc2VsZWN0b3JUeXBlXV07XG5cbiAgICAgICAgICAgIGlmICggYWN0aW9uLm11bHRpcGxlICl7XG4gICAgICAgICAgICAgICAgbmV3U3RhdGVbYWN0aW9uLnNlbGVjdG9yVHlwZV0gPSBzZWxlY3RlZEl0ZW1zO1xuICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICBuZXdTdGF0ZVthY3Rpb24uc2VsZWN0b3JUeXBlXVthY3Rpb24uaW5kZXhdID0gc2VsZWN0ZWRJdGVtc1swXTtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgaWYgKCBhY3Rpb24uY2xlYW4gKXtcbiAgICAgICAgICAgICAgICBhY3Rpb24uY2xlYW4uZm9yRWFjaCgoc2VsZWN0b3JUeXBlKT0+e1xuICAgICAgICAgICAgICAgICAgICBuZXdTdGF0ZVtzZWxlY3RvclR5cGVdID0gJC5pc0FycmF5KHN0YXRlW3NlbGVjdG9yVHlwZV0pID8gW10gOiBudWxsO1xuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICByZXR1cm4gT2JqZWN0LmFzc2lnbih7fSwgc3RhdGUsIG5ld1N0YXRlKTtcbiAgICAgICAgY2FzZSBjb250ZW50VHlwZS5SRU1PVkVfRlJPTV9NVUxUSVBMRTpcbiAgICAgICAgICAgIG5ld1N0YXRlID0ge307XG4gICAgICAgICAgICBuZXdTdGF0ZVthY3Rpb24uc2VsZWN0b3JUeXBlXSA9IFsuLi5zdGF0ZVthY3Rpb24uc2VsZWN0b3JUeXBlXV07XG4gICAgICAgICAgICBuZXdTdGF0ZVthY3Rpb24uc2VsZWN0b3JUeXBlXS5zcGxpY2UoYWN0aW9uLmluZGV4LDEpO1xuICAgICAgICAgICAgcmV0dXJuIE9iamVjdC5hc3NpZ24oe30sIHN0YXRlLCBuZXdTdGF0ZSk7XG4gICAgICAgIGNhc2UgY29udGVudFR5cGUuVVBEQVRFX0ZST01fTVVMVElQTEU6XG4gICAgICAgICAgICBuZXdTdGF0ZSA9IHt9O1xuICAgICAgICAgICAgbmV3U3RhdGVbYWN0aW9uLnNlbGVjdG9yVHlwZV0gPSBbLi4uc3RhdGVbYWN0aW9uLnNlbGVjdG9yVHlwZV1dO1xuICAgICAgICAgICAgbmV3U3RhdGVbYWN0aW9uLnNlbGVjdG9yVHlwZV1bYWN0aW9uLmluZGV4XVthY3Rpb24ua2V5XSA9IGFjdGlvbi52YWx1ZTtcbiAgICAgICAgICAgIHJldHVybiBPYmplY3QuYXNzaWduKHt9LCBzdGF0ZSwgbmV3U3RhdGUpO1xuICAgICAgICBjYXNlIGNvbnRlbnRUeXBlLlNVUEVSX1JJR0hUU19VUERBVEVEOlxuXG4gICAgICAgICAgICBpZiAoIGFjdGlvbi5yZXNldCApIHJldHVybiBPYmplY3QuYXNzaWduKHt9LCBzdGF0ZSwge3JpZ2h0c1BhY2thZ2UgOiBbXSB9KTtcbiAgICAgICAgICAgIHJldHVybiBPYmplY3QuYXNzaWduKHt9LCBzdGF0ZSwge1xuICAgICAgICAgICAgICAgIHJpZ2h0c1BhY2thZ2UgOiBBcnJheS5mcm9tKGFjdGlvbi5yaWdodHNQYWNrYWdlLnZhbHVlcygpKVxuICAgICAgICAgICAgfSk7XG4gICAgICAgIGNhc2UgY29udGVudFR5cGUuVVBEQVRFX1NBTEVTX1BBQ0tBR0VTOlxuXG4gICAgICAgICAgICBsZXQgc2FsZXNQYWNrYWdlcyA9IFsuLi5zdGF0ZS5zYWxlc1BhY2thZ2VzXTtcblxuICAgICAgICAgICAgaWYgKCBhY3Rpb24ubmFtZSA9PT0gXCJyZW1vdmVcIiApIHtcblxuICAgICAgICAgICAgICAgIGlmICggc2FsZXNQYWNrYWdlcy5sZW5ndGggPj0gMSApIHtcbiAgICAgICAgICAgICAgICAgICAgc2FsZXNQYWNrYWdlcy5zcGxpY2UoYWN0aW9uLmluZGV4LDEpXG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICBpZiAoIGFjdGlvbi5uYW1lID09PSBcInJlbW92ZUFsbFwiICkge1xuICAgICAgICAgICAgICAgIHNhbGVzUGFja2FnZXMgPSBbXTtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgaWYgKCBhY3Rpb24ubmFtZSA9PT0gXCJzYXZlXCIgKSBzYWxlc1BhY2thZ2VzW2FjdGlvbi5pbmRleF0gPSBhY3Rpb24uc2FsZXNQYWNrYWdlO1xuXG4gICAgICAgICAgICByZXR1cm4gT2JqZWN0LmFzc2lnbih7fSwgc3RhdGUsIHtcbiAgICAgICAgICAgICAgICBzYWxlc1BhY2thZ2VzIDogc2FsZXNQYWNrYWdlc1xuICAgICAgICAgICAgfSk7XG5cbiAgICAgICAgY2FzZSBjb250ZW50VHlwZS5VUERBVEVfQVRUQUNITUVOVFM6XG5cbiAgICAgICAgICAgIGxldCBhdHRhY2htZW50cyA9IFsuLi5zdGF0ZS5hdHRhY2htZW50c107XG5cbiAgICAgICAgICAgIGlmICggYWN0aW9uLm5hbWUgPT09IFwicmVtb3ZlXCIgKSB7XG5cbiAgICAgICAgICAgICAgICBpZiAoIGF0dGFjaG1lbnRzLmxlbmd0aCA+PSAxICkge1xuICAgICAgICAgICAgICAgICAgICBhdHRhY2htZW50cy5zcGxpY2UoYWN0aW9uLmluZGV4LDEpXG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICBpZiAoIGFjdGlvbi5uYW1lID09PSBcInJlbW92ZUFsbFwiICkge1xuICAgICAgICAgICAgICAgIGF0dGFjaG1lbnRzID0gW107XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIGlmICggYWN0aW9uLm5hbWUgPT09IFwic2F2ZVwiICkgYXR0YWNobWVudHNbYWN0aW9uLmluZGV4XSA9IGFjdGlvbi52YWx1ZTtcblxuICAgICAgICAgICAgcmV0dXJuIE9iamVjdC5hc3NpZ24oe30sIHN0YXRlLCB7XG4gICAgICAgICAgICAgICAgYXR0YWNobWVudHMgOiBhdHRhY2htZW50c1xuICAgICAgICAgICAgfSk7XG5cbiAgICAgICAgY2FzZSBjb250ZW50VHlwZS5VUERBVEVfQU5ORVg6XG5cbiAgICAgICAgICAgIGxldCBhbm5leCA9IFsuLi5zdGF0ZS5hbm5leF07XG5cbiAgICAgICAgICAgIGlmICggYWN0aW9uLm5hbWUgPT09IFwicmVtb3ZlXCIgKSB7XG5cbiAgICAgICAgICAgICAgICBpZiAoIGFubmV4Lmxlbmd0aCA+PSAxICkge1xuICAgICAgICAgICAgICAgICAgICBhbm5leC5zcGxpY2UoYWN0aW9uLmluZGV4LDEpXG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICBpZiAoIGFjdGlvbi5uYW1lID09PSBcInJlbW92ZUFsbFwiICkge1xuICAgICAgICAgICAgICAgIGFubmV4ID0gW107XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIGlmICggYWN0aW9uLm5hbWUgPT09IFwic2F2ZVwiICkgYW5uZXhbYWN0aW9uLmluZGV4XSA9IGFjdGlvbi52YWx1ZTtcblxuICAgICAgICAgICAgcmV0dXJuIE9iamVjdC5hc3NpZ24oe30sIHN0YXRlLCB7XG4gICAgICAgICAgICAgICAgYW5uZXggOiBhbm5leFxuICAgICAgICAgICAgfSk7XG5cbiAgICAgICAgY2FzZSBjb250ZW50VHlwZS5BRERfU0FMRVNfUEFDS0FHRVM6XG4gICAgICAgICAgICByZXR1cm4gT2JqZWN0LmFzc2lnbih7fSwgc3RhdGUsIHtcbiAgICAgICAgICAgICAgICBzYWxlc1BhY2thZ2VzIDogWy4uLnN0YXRlLnNhbGVzUGFja2FnZXMsLi4uYWN0aW9uLnNhbGVzUGFja2FnZXNdXG4gICAgICAgICAgICB9KTtcblxuICAgICAgICBkZWZhdWx0OlxuICAgICAgICAgICAgcmV0dXJuIHN0YXRlO1xuICAgIH1cbn07XG5cblxuLy8gV0VCUEFDSyBGT09URVIgLy9cbi8vIC4vc3JjL0FwcEJ1bmRsZS9SZXNvdXJjZXMvcHVibGljL2phdmFzY3JpcHQvc2VsbC9yZWR1Y2Vycy9jb250ZW50LmpzIiwiXG5leHBvcnQgY29uc3Qgc2VsZWN0b3JUeXBlPSB7XG4gICAgVEVTVDonVEVTVCcsXG4gICAgT1BFTl9TRUxFQ1RPUjogJ09QRU5fU0VMRUNUT1InLFxuICAgIENMT1NFX1NFTEVDVE9SIDogJ0NMT1NFX1NFTEVDVE9SJyxcbiAgICBBUFBMWV9TRUxFQ1RJT04gOiAnQVBQTFlfU0VMRUNUSU9OJ1xufTtcblxuZXhwb3J0IGNvbnN0IHNlbGVjdG9yID0gKHN0YXRlID0ge1xuICAgIHR5cGU6IFwic3BvcnRcIixcbiAgICBvcGVuIDogZmFsc2UsXG4gICAgc2VsZWN0b3JJdGVtczogW10sXG4gICAgcG9wdWxhckl0ZW1zOiBbXVxuXG59LCBhY3Rpb24pID0+IHtcblxuICAgIHN3aXRjaCAoYWN0aW9uLnR5cGUpIHtcbiAgICAgICAgY2FzZSBzZWxlY3RvclR5cGUuVEVTVDpcbiAgICAgICAgICAgIHJldHVybiBPYmplY3QuYXNzaWduKHt9LCBzdGF0ZSwge1xuICAgICAgICAgICAgICAgIG9wZW46IHRydWVcbiAgICAgICAgICAgIH0pO1xuICAgICAgICBjYXNlIHNlbGVjdG9yVHlwZS5PUEVOX1NFTEVDVE9SOlxuICAgICAgICAgICAgcmV0dXJuIE9iamVjdC5hc3NpZ24oe30sIHN0YXRlLCB7XG4gICAgICAgICAgICAgICAgc2VsZWN0b3JUeXBlOiBhY3Rpb24uc2VsZWN0b3JUeXBlLFxuICAgICAgICAgICAgICAgIG9wZW4gOiB0cnVlLFxuICAgICAgICAgICAgICAgIGluZGV4IDogYWN0aW9uLmluZGV4LFxuICAgICAgICAgICAgICAgIHNlbGVjdG9ySXRlbXM6IGFjdGlvbi5zZWxlY3Rvckl0ZW1zLFxuICAgICAgICAgICAgICAgIHBvcHVsYXJJdGVtczogYWN0aW9uLnBvcHVsYXJJdGVtcyxcbiAgICAgICAgICAgICAgICBhY3RpdmVGaWx0ZXIgOiBhY3Rpb24uYWN0aXZlRmlsdGVyLFxuICAgICAgICAgICAgICAgIG11bHRpcGxlIDogYWN0aW9uLm11bHRpcGxlLFxuICAgICAgICAgICAgICAgIGRpc2FibGVkOiBhY3Rpb24uZGlzYWJsZWQsXG4gICAgICAgICAgICAgICAgc2hvd05ld1Nwb3J0IDogYWN0aW9uLnNob3dOZXdTcG9ydCxcbiAgICAgICAgICAgICAgICBzaG93TmV3VG91cm5hbWVudCA6IGFjdGlvbi5zaG93TmV3VG91cm5hbWVudCxcbiAgICAgICAgICAgICAgICBzaG93TmV3Q2F0ZWdvcnkgOiBhY3Rpb24uc2hvd05ld0NhdGVnb3J5LFxuICAgICAgICAgICAgICAgIHNob3dOZXdTZWFzb24gOiBhY3Rpb24uc2hvd05ld1NlYXNvbixcbiAgICAgICAgICAgICAgICBzaG93QWxsQ291bnRyaWVzOiBhY3Rpb24uc2hvd0FsbENvdW50cmllcyxcbiAgICAgICAgICAgICAgICBjbGVhbiA6IGFjdGlvbi5jbGVhbixcbiAgICAgICAgICAgICAgICBzZWxlY3RlZEl0ZW1zOiBhY3Rpb24uc2VsZWN0ZWRJdGVtc1xuICAgICAgICAgICAgfSk7XG4gICAgICAgIGNhc2Ugc2VsZWN0b3JUeXBlLkNMT1NFX1NFTEVDVE9SOlxuICAgICAgICAgICAgcmV0dXJuIE9iamVjdC5hc3NpZ24oe30sIHN0YXRlLCB7XG4gICAgICAgICAgICAgICAgc2VsZWN0b3JUeXBlOiBcIlwiLFxuICAgICAgICAgICAgICAgIG9wZW4gOiBmYWxzZSxcbiAgICAgICAgICAgICAgICBzZWxlY3Rvckl0ZW1zOiBbXSxcbiAgICAgICAgICAgICAgICBwb3B1bGFySXRlbXM6IFtdXG4gICAgICAgICAgICB9KTtcbiAgICAgICAgY2FzZSBzZWxlY3RvclR5cGUuQVBQTFlfU0VMRUNUSU9OIDpcbiAgICAgICAgICAgIHJldHVybiBPYmplY3QuYXNzaWduKHt9LCBzdGF0ZSwge1xuICAgICAgICAgICAgICAgIHNlbGVjdG9yVHlwZTogXCJcIixcbiAgICAgICAgICAgICAgICBvcGVuIDogZmFsc2UsXG4gICAgICAgICAgICAgICAgc2VsZWN0b3JJdGVtczogW10sXG4gICAgICAgICAgICAgICAgcG9wdWxhckl0ZW1zOiBbXVxuICAgICAgICAgICAgfSk7XG4gICAgICAgIGRlZmF1bHQ6XG4gICAgICAgICAgICByZXR1cm4gc3RhdGU7XG4gICAgfVxufTtcblxuXG4vLyBXRUJQQUNLIEZPT1RFUiAvL1xuLy8gLi9zcmMvQXBwQnVuZGxlL1Jlc291cmNlcy9wdWJsaWMvamF2YXNjcmlwdC9zZWxsL3JlZHVjZXJzL3NlbGVjdG9yLmpzIiwiZXhwb3J0IGNvbnN0IHRyYW5zbGF0aW9ucyA9IHtcbiAgJ2RlJzoge1xuICAgICdNYXJrZXRwbGFjZSc6ICdNYXJrdHBsYXR6JyxcbiAgfSxcbiAgJ29wdGlvbnMnOiB7XG4gICAgJ3BsdXJhbF9ydWxlJzogJ24gIT0gMScsXG4gICAgJ3BsdXJhbF9udW1iZXInOiAnMicsXG4gIH0sXG4gICdlbic6IHtcbiAgICAnTElTVElOR19ERVRBSUxTX0dFTkVSQUxfQ09OVEVOVCc6ICdHZW5lcmFsIENvbnRlbnQnLFxuICAgICdMSVNUSU5HX0RFVEFJTFNfTVVMVElQTEVfU1BPUlRTJzogJ011bHRpcGxlIFNwb3J0cycsXG4gICAgJ0ludGVybmF0aW9uYWwnOiAnSW50ZXJuYXRpb25hbCcsXG4gICAgJ1JlbGVhc2UgeWVhcjonOiAnUmVsZWFzZSBZZWFyIChvcHRpb25hbCknLFxuICAgICdlcGlzb2Rlcyc6ICdlcGlzb2RlcycsXG4gICAgJ0xJU1RJTkdfREVUQUlMU19FRElURURfUFJPR1JBTSc6ICdFZGl0ZWQgUHJvZ3JhbScsXG4gICAgJ1NlYXJjaCc6ICdTZWFyY2gnLFxuICAgICdNQVJLRVRQTEFDRV9MQUJFTF9GSUxURVJfU1BPUlQnOiAnU3BvcnRzJyxcbiAgICAnTUFSS0VUUExBQ0VfTEFCRUxfRklMVEVSX1RFUlJJVE9SSUVTJzogJ1RlcnJpdG9yaWVzJyxcbiAgICAnTUFSS0VUUExBQ0VfTEFCRUxfRklMVEVSX1JJR0hUUyc6ICdSaWdodHMnLFxuICAgICdNQVJLRVRQTEFDRV9MQUJFTF9GSUxURVJfRVhDTFVTSVZFJzogJ0NvbnRhaW5zIGV4Y2x1c2l2ZSByaWdodHMnLFxuICAgICdNQVJLRVRQTEFDRV9CVVRUT05fQVBQTFknOiAnQXBwbHknLFxuICAgICdNQVJLRVRQTEFDRV9CVVRUT05fQ0xFQVInOiAnQ2xlYXInLFxuICAgICdMSVNUSU5HX0RFVEFJTFNfRVZFTlRfVElUTEVfUFJPR1JBTV9ERVNDUklQVElPTic6ICdQUk9HUkFNUyBERVNDUklQVElPTicsXG4gICAgJ0xJU1RJTkdfREVUQUlMU19FVkVOVF9USVRMRV9TRUFTT04nOiAnU2Vhc29uIDonLFxuICAgICdMSVNUSU5HX0RFVEFJTFNfRVZFTlRfVElUTEVfREVTQ1JJUFRJT04nOiAnRVZFTlQgREVTQ1JJUFRJT04nLFxuICAgICdMSVNUSU5HX0RFVEFJTFNfRVZFTlRfVElUTEVfV0VCU0lURSc6ICdDT05URU5UIFdFQlNJVEUnLFxuICAgICdMSVNUSU5HX0RFVEFJTFNfRVZFTlRfVElUTEVfQVRUQUNITUVOVFMnOiAnQVRUQUNITUVOVFMnLFxuICAgICdDSEVDS09VVF9DT05HUkFUVUxBVElPTlMnOiAnQ29uZ3JhdHVsYXRpb25zIScsXG4gICAgJ0NIRUNLT1VUX0ZJWEVEX1NVQ0NFU1NfTUVTU0FHRSc6ICdZb3UgaGF2ZSBzdWNjZXNzZnVsbHkgYWNxdWlyZWQgdGhlIHBhY2thZ2UhJyxcbiAgICAnQ0hFQ0tPVVRfQklEX1NVQ0NFU1NfTUVTU0FHRSc6ICdZb3VyIGJpZCB3YXMgcGxhY2VkIHN1Y2Nlc3NmdWxseSEnLFxuICAgICdDSEVDS09VVF9GSVhFRF9HT19UT19DTE9TRURfREVBTFMnOiAnVmlldyBDbG9zZWQgRGVhbHMnLFxuICAgICdDSEVDS09VVF9GSVhFRF9HT19UT19CSURTJzogJ1ZpZXcgQmlkcycsXG4gICAgJ0NIRUNLT1VUX0ZJWEVEX0dPX1RPX01BUktFVFBMQUNFJzogJ1JldHVybiB0byBNYXJrZXRwbGFjZScsXG4gICAgJ0xJU1RJTkdfREVUQUlMU19MSUNFTlNFX1NUQVJUJzogJ1N0YXJ0IG9mIExpY2Vuc2UgUGVyaW9kJyxcbiAgICAnTElTVElOR19ERVRBSUxTX0xJQ0VOU0VfU1RBUlRfQ09OQ0xVU0lPTic6ICcgV2l0aCBjb250cmFjdCBjb25jbHVzaW9uJyxcbiAgICAnTElTVElOR19ERVRBSUxTX0xJQ0VOU0VfRU5EJzogJ0VuZCBvZiBsaWNlbnNlIHBlcmlvZCcsXG4gICAgJ0xJU1RJTkdfREVUQUlMU19MSUNFTlNFX0VORF9EQVlTJzogJyBkYXlzIGFmdGVyIGNvbnRyYWN0IGNvbmNsdXNpb24nLFxuICAgICcgVW5saW1pdGVkJzogJyBVbmxpbWl0ZWQnLFxuICAgICdQdWJsaXNoaW5nIGRhdGUnOiAnUHVibGlzaGluZyBEYXRlJyxcbiAgICAnRXhwaXJ5JzogJ0V4cGlyeScsXG4gICAgJ0NvbnRhY3QgU2VsbGVyJzogJ0NvbnRhY3QgU2VsbGVyJyxcbiAgICAnTElTVElOR19ERVRBSUxTX0FEREVEX1RPX1dBVENITElTVCc6ICdBZGRlZCB0byB3YXRjaGxpc3QnLFxuICAgICdXYXRjaGxpc3QnOiAnV2F0Y2hsaXN0JyxcbiAgICAnTElTVElOR19ERVRBSUxTX1RBQl9CVU5ETEVTJzogJ1Byb2dyYW0gJiBTYWxlcyBCdW5kbGVzJyxcbiAgICAnTElTVElOR19ERVRBSUxTX1RBQl9FVkVOVCc6ICdFdmVudCcsXG4gICAgJ0xJU1RJTkdfREVUQUlMU19UQUJfUklHSFRTJzogJ0dyYW50IG9mIFJpZ2h0cyAmIFByb2R1Y3Rpb24nLFxuICAgICdMSVNUSU5HX0RFVEFJTFNfVEFCX1NFTExFUic6ICdTZWxsZXIgSW5mb3JtYXRpb24nLFxuICAgICdTYWxlcyBidW5kbGUnOiAnU2FsZXMgYnVuZGxlJyxcbiAgICAnQ29tbWVyY2lhbCBpbmZvcm1hdGlvbic6ICdDb21tZXJjaWFsIEluZm9ybWF0aW9uJyxcbiAgICAnTGljZW5zZSBmZWU6JzogJ0xpY2Vuc2UgRmVlOicsXG4gICAgJ0JpZDonOiAnQmlkOicsXG4gICAgJ0xJU1RJTkdfREVUQUlMU19FWENFRURfTUlOSU1VTSc6ICdUaGUgYmlkIG11c3QgZXhjZWVkIG1pbmltdW0gYmlkJyxcbiAgICAnUmFpc2UnOiAnUmFpc2UnLFxuICAgICdUZWNobmljYWwgZmVlOic6ICdUZWNobmljYWwgRmVlOicsXG4gICAgJ1RvdGFsOic6ICdUb3RhbDonLFxuICAgICdQYXltZW50IGRldGFpbHMnOiAnUGF5bWVudCBEZXRhaWxzJyxcbiAgICAnaW5zdGFsbG1lbnQnOiAnaW5zdGFsbG1lbnQnLFxuICAgICdJTlNUQUxMTUVOVF9DTE9TVVJFX0RBWVMnOiAnIGRheXMgYWZ0ZXIgY29udHJhY3QgY2xvc3VyZScsXG4gICAgJ0NIRUNLT1VUX0xBQkVMX0NPTVBBTllfQUREUkVTUyc6ICdDb21wYW55IGFkZHJlc3MnLFxuICAgICdMaWNlbnNlIGFncmVlbWVudCc6ICdMaWNlbnNlIEFncmVlbWVudCcsXG4gICAgJ0NIRUNLT1VUX1RFUk1TJzogJ0FjY2VwdCB0ZXJtcyBjb25kaXRpb25zJyxcbiAgICAnQ0hFQ0tPVVRfQlVUVE9OX0JVWSc6ICdCdXknLFxuICAgICdDSEVDS09VVF9CVVRUT05fUExBQ0VfQklEJzogJ1BsYWNlIEJpZCcsXG4gICAgJ01BUktFVFBMQUNFX05PX1JFU1VMVFMnOiAnU29ycnksIG5vIHJlc3VsdHMuIFRyeSBjaGFuZ2luZyB0aGUgZmlsdGVyIHNldHRpbmdzIScsXG4gICAgJ0xJU1RJTkdfREVUQUlMU19QUk9HUkFNX1RJVExFX1RZUEUnOiAnUHJvZ3JhbSB0eXBlJyxcbiAgICAnTElTVElOR19ERVRBSUxTX1BST0dSQU1fVElUTEVfRVBJU09ERVMnOiAnTnVtYmVyIG9mIGVwaXNvZGVzJyxcbiAgICAnTElTVElOR19ERVRBSUxTX1BST0dSQU1fVElUTEVfRFVSQVRJT04nOiAnQXZlcmFnZSBlcGlzb2RlIGR1cmF0aW9uIChtaW4pJyxcbiAgICAnTElTVElOR19ERVRBSUxTX1BST0dSQU1fVElUTEVfUkVMRUFTRSc6ICdZZWFyIG9mIHByb2dyYW0gcmVsZWFzZScsXG4gICAgJ0xJU1RJTkdfREVUQUlMU19QUk9HUkFNX1RJVExFX0RFU0NSSVBUSU9OJzogJ0Rlc2NyaXB0aW9uJyxcbiAgICAnQnV5IG5vdyc6ICdCdXkgbm93JyxcbiAgICAnUGxhY2UgYmlkJzogJ1BsYWNlIGJpZCcsXG4gICAgJ0xJU1RJTkdfREVUQUlMU19TRUxMRVJfVElUTEVfREVUQUlMUyc6ICdERVRBSUxTJyxcbiAgICAnTElTVElOR19ERVRBSUxTX1NFTExFUl9USVRMRV9OQU1FJzogJ0xlZ2FsIG5hbWUnLFxuICAgICdMSVNUSU5HX0RFVEFJTFNfU0VMTEVSX1RJVExFX0FERFJFU1MnOiAnU3RyZWV0IE5hbWUgLyBOdW1iZXInLFxuICAgICdMSVNUSU5HX0RFVEFJTFNfU0VMTEVSX1RJVExFX0NJVFknOiAnQ2l0eScsXG4gICAgJ0xJU1RJTkdfREVUQUlMU19TRUxMRVJfVElUTEVfQ09VTlRSWSc6ICdDb3VudHJ5JyxcbiAgICAnTElTVElOR19ERVRBSUxTX1NFTExFUl9USVRMRV9aSVAnOiAnWklQJyxcbiAgICAnTElTVElOR19ERVRBSUxTX1NFTExFUl9USVRMRV9SRUdJU1RSQVRJT05fTlVNQkVSJzogJ0NvbXBhbnkgcmVnaXN0cmF0aW9uIG51bWJlcicsXG4gICAgJ0xJU1RJTkdfREVUQUlMU19TRUxMRVJfVElUTEVfVkFUJzogJ1ZBVCBJRCBudW1iZXInLFxuICAgICdMSVNUSU5HX0RFVEFJTFNfU0VMTEVSX1RJVExFX0RFU0NSSVBUSU9OJzogJ0RFU0NSSVBUSU9OJyxcbiAgICAnTElTVElOR19ERVRBSUxTX1JJR0hUU19IRUFERVJfUklHSFRTJzogJ0dyYW50IG9mIFJpZ2h0cycsXG4gICAgJyBSaWdodHMnOiAnIFJpZ2h0cycsXG4gICAgJ0xJU1RJTkdfREVUQUlMU19SSUdIVFNfSEVBREVSX0dSQU5URURfVElNRSc6ICdHcmFudGVkIFRyYW5zbWlzc2lvbiBUaW1lJyxcbiAgICAnTElTVElOR19ERVRBSUxTX1JJR0hUU19USVRMRV9BTUVORE1FTlRTJzogJ0FtZW5kbWVudChzKSB0byB0aGUgR3JhbnQgb2YgUmlnaHRzIC8gU3BlY2lhbCBDb25kaXRpb25zJyxcbiAgICAnTElTVElOR19ERVRBSUxTX1JJR0hUU19USVRMRV9QUk9EVUNUSU9OX0RFVEFJTFMnOiAnUHJvZHVjdGlvbiBkZXRhaWxzJyxcbiAgICAnTElTVElOR19ERVRBSUxTX1JJR0hUU19URUNITklDQUxfRkVFX0RFVEFJTFMnOiAnVGVjaG5pY2FsIEZlZSBEZXRhaWxzJyxcbiAgICAnTElTVElOR19ERVRBSUxTX1JJR0hUU19USVRMRV9BTUVORE1FTlRTXzInOiAnQW1lbmRtZW50KHMpIHRvIHRoZSBDb250ZW50IERlbGl2ZXJ5IC8gU3BlY2lhbCBDb25kaXRpb25zJyxcbiAgICAnQ09NTUVSQ0lBTF9BQ1RJVklUWV9CSURfVElUTEVfQUNDRVBUJzogJ0FyZSB5b3Ugc3VyZSB5b3Ugd2FudCB0byBhY2NlcHQgdGhpcyBiaWQ/JyxcbiAgICAnQ09NTUVSQ0lBTF9BQ1RJVklUWV9CSURfQlVUVE9OX0NBTkNFTCc6ICdDYW5jZWwnLFxuICAgICdDT01NRVJDSUFMX0FDVElWSVRZX0JJRF9CVVRUT05fQUNDRVBUJzogJ0FjY2VwdCBCaWQnLFxuICAgICdDT01NRVJDSUFMX0FDVElWSVRZX0JJRF9USVRMRV9SRUpFQ1QnOiAnQXJlIHlvdSBzdXJlIHlvdSB3YW50IHRvIGRlY2xpbmUgdGhpcyBiaWQ/JyxcbiAgICAnQ09NTUVSQ0lBTF9BQ1RJVklUWV9CSURfUkVKRUNUX01FU1NBR0UnOiAnRW50ZXIgTWVzc2FnZSAob3B0aW9uYWwpJyxcbiAgICAnQ09NTUVSQ0lBTF9BQ1RJVklUWV9CSURfQlVUVE9OX1JFSkVDVF9DT05GSVJNJzogJ0NvbmZpcm0nLFxuICAgICdDT01NRVJDSUFMX0FDVElWSVRZX0JJRF9CVVRUT05fUkVKRUNUX0NBTkNFTCc6ICdDYW5jZWwnLFxuICAgICdDT01NRVJDSUFMX0FDVElWSVRZX0JJRF9USVRMRV9SRU1PVkUnOiAnQXJlIHlvdSBzdXJlIHlvdSB3YW50IHRvIHJlbW92ZSB0aGlzIGJpZD8nLFxuICAgICdDT01NRVJDSUFMX0FDVElWSVRZX0JJRF9CVVRUT05fUkVNT1ZFX0NPTkZJUk0nOiAnQ29uZmlybScsXG4gICAgJ0NPTU1FUkNJQUxfQUNUSVZJVFlfQklEX0JVVFRPTl9SRU1PVkVfQ0FOQ0VMJzogJ0NhbmNlbCcsXG4gICAgJ2Nsb3NlZCBkZWFsJzogJ3tufSBDbG9zZWQgRGVhbCcsXG4gICAgJ2Nsb3NlZCBkZWFscyc6ICd7bn0gQ2xvc2VkIERlYWxzJyxcbiAgICAnb3BlbiBiaWQnOiAne259IE9wZW4gQmlkJyxcbiAgICAnb3BlbiBiaWRzJzogJ3tufSBPcGVuIEJpZHMnLFxuICAgICdCdXllcic6ICdCdXllciBDb21wYW55JyxcbiAgICAnRmVlJzogJ0xpY2Vuc2UgRmVlIC8gQmlkJyxcbiAgICAnVXNlcic6ICdCdXllciBVc2VyJyxcbiAgICAnQWN0aW9uJzogJ0FjdGlvbicsXG4gICAgJ0NPTU1FUkNJQUxfQUNUSVZJVFlfQUNUSU9OX0RBVEUnOiAnRGF0ZSBvZiBBY3Rpb24nLFxuICAgICdBY3Rpb25zJzogJ0FjdGlvbnMnLFxuICAgICdXQVRDSExJU1RfUkVNT1ZFX0NPTkZJUk1BVElPTic6ICdBcmUgeW91IHN1cmUgdGhhdCB5b3Ugd2FudCB0byByZW1vdmUgdGhpcyBsaXN0aW5nIGZyb20geW91ciBXYXRjaGxpc3Q/JyxcbiAgICAnWWVzJzogJ1llcycsXG4gICAgJ0NhbmNlbCc6ICdDYW5jZWwnLFxuICAgICdQbGFjZWQgYnknOiAnUGxhY2VkIGJ5OicsXG4gICAgJ1BFTkRJTkdfQklEU19UT09MVElQX0xJU1RJTkdfRURJVEVEJzogJ0xpc3RpbmcgZWRpdGVkIGFmdGVyIGxhc3QgYmlkLiBQbGVhc2UgcmV2aWV3IHRlcm0gc2hlZXQuJyxcbiAgICAnSW5jcmVhc2UgYmlkJzogJ0luY3JlYXNlIGJpZCcsXG4gICAgJ1BsYWNlZCBieTonOiAnUGxhY2VkIGJ5OicsXG4gICAgJ1BFTkRJTkdfQklEU19SRU1PVkVfVElUTEUnOiAnQXJlIHlvdSBzdXJlIHlvdSB3YW50IHRvIHJlbW92ZSB0aGlzIGJpZD8nLFxuICAgICdQRU5ESU5HX0JJRFNfUkVNT1ZFX0JVVFRPTl9DT05GSVJNJzogJ1JlbW92ZScsXG4gICAgJ1BFTkRJTkdfQklEU19SRU1PVkVfQlVUVE9OX0NBTkNFTCc6ICdDYW5jZWwnLFxuICAgICdDb21tZXJjaWFsIEFjdGl2aXR5IFRvdGFsIC0ge259JzogJ1RvdGFsOiB7bn0nLFxuICAgICdESUdJVEFMX1NJR05BVFVSRV9USVRMRSc6ICdEaWdpdGFsIFNpZ25hdHVyJyxcbiAgICAnRElHSVRBTF9TSUdOQVRVUkVfQlVUVE9OX0NMRUFSJzogJ0NsZWFyJyxcbiAgICAnRElHSVRBTF9TSUdOQVRVUkVfQlVUVE9OX0RPTkUnOiAnRG9uZScsXG4gICAgJ0RJR0lUQUxfU0lHTkFUVVJFX0JVVFRPTl9ORVcnOiAnTmV3IFNpZ25hdHVyJyxcbiAgICAnVXBsb2FkJzogJ1VwbG9hZCcsXG4gICAgJ0hFQURFUl9MSU5LX01BUktFVFBMQUNFJzogJ01hcmtldHBsYWNlJyxcbiAgICAnSEVBREVSX0xJTktfV0FUQ0hMSVNUJzogJ1dhdGNobGlzdCcsXG4gICAgJ0hFQURFUl9MSU5LX0JJRFMnOiAnQmlkcycsXG4gICAgJ0hFQURFUl9MSU5LX0NMT1NFRF9ERUFMUyc6ICdDbG9zZWQgRGVhbHMnLFxuICAgICdIRUFERVJfTElOS19NQU5BR0VfTElTVElOR1MnOiAnTWFuYWdlIExpc3RpbmdzJyxcbiAgICAnSEVBREVSX0xJTktfQ09NTUVSQ0lBTF9BQ1RJVklUWSc6ICdDb21tZXJjaWFsIEFjdGl2aXR5JyxcbiAgICAnSEVBREVSX0xJTktfQ1JFQVRFX0xJU1RJTkcnOiAnQ3JlYXRlIExpc3RpbmcnLFxuICAgICdIRUFERVJfTElOS19TRUxMSU5HX01PREUnOiAnRW50ZXIgU2VsbGluZyBNb2RlJyxcbiAgICAnSEVBREVSX0xJTktfQlVZSU5HX01PREUnOiAnRW50ZXIgQnV5aW5nIE1vZGUnLFxuICAgICdIRUFERVJfTElOS19NRVNTQUdFUyc6ICdNZXNzYWdlcycsXG4gICAgJ0hFQURFUl9MSU5LX1NFVFRJTkdTJzogJ1NldHRpbmdzJyxcbiAgICAnSEVBREVSX0xJTktfTE9HT1VUJzogJ0xvZ291dCcsXG4gICAgJ05PVElGSUNBVElPTlNfRU1QVFknOiAnTm8gbm90aWZpY2F0aW9ucycsXG4gICAgJ1llYXInOiAnWWVhcicsXG4gICAgJ1RvJzogJ1RvJyxcbiAgICAnTm90IGFwcGxpY2FibGUnOiAnTm90IGFwcGxpY2FibGUnLFxuICAgICdDb3VudHJ5IFNlbGVjdG9yJzogJ0NvdW50cnkgU2VsZWN0b3InLFxuICAgICdNQVJLRVRQTEFDRV9GSUxURVJfT05FX1RFUlJJVE9SWSc6ICdTaG93IGxpc3RpbmdzIGZvciBhdCBsZWFzdCBvbmUgc2VsZWN0ZWQgdGVycml0b3J5JyxcbiAgICAnTUFSS0VUUExBQ0VfRklMVEVSX0FMTF9URVJSSVRPUklFUyc6ICdTaG93IGxpc3RpbmdzIGZvciBhbGwgc2VsZWN0ZWQgdGVycml0b3JpZXMnLFxuICAgICdNQVJLRVRQTEFDRV9SSUdIVFNfTEFCRUxfRVhDTFVTSVZFJzogJ0V4Y2x1c2l2ZScsXG4gICAgJ01BUktFVFBMQUNFX1JJR0hUU19MQUJFTF9OT05fRVhDTFVTSVZFJzogJ05vbiBleGNsdXNpdmUnLFxuICAgICdNQVJLRVRQTEFDRV9SSUdIVFNfTEFCRUxfTk9OX0lOQ0xVREVEJzogJ05vbiBpbmNsdWRlZCcsXG4gICAgJ0NMX1NURVAxX1NFQVJDSF9USVRMRSc6ICdQbGVhc2UgZW50ZXIgdGhlIGNvbXBldGl0aW9uIG5hbWUgZm9yIHdoaWNoIHlvdSB3b3VsZCBsaWtlIHRvIHNlbGwgY29udGVudC4gU2VsZWN0IOKAnEVudGVyIENvbnRlbnQgTWFudWFsbHnigJ0gaWYgeW91IGNhbm5vdCBmaW5kIHRoZSBjb21wZXRpdGlvbiBpbiB0aGUgZGF0YWJhc2Ugb3IgaWYgeW91ciBjb250ZW50IGlzIG5vdCByZWxhdGVkIHRvIGEgc3BlY2lmaWMgY29tcGV0aXRpb24uJyxcbiAgICAnQ29tcGV0aXRpb24nOiAnQ29tcGV0aXRpb24nLFxuICAgICdDTF9TVEVQMV9TRUFSQ0hfUExBQ0VIT0xERVInOiAnRW50ZXIgY29tcGV0aXRpb24gbmFtZSAoZS5nLiBCdW5kZXNsaWdhKScsXG4gICAgJ0NMX1NURVAxX1NFQVJDSF9IRUFERVJfQ09NUEVUSVRJT04nOiAnQ29tcGV0aXRpb24nLFxuICAgICdDTF9TVEVQMV9TRUFSQ0hfSEVBREVSX0NPVU5UUlknOiAnQ291bnRyeS9DYXRlZ29yeScsXG4gICAgJ0NMX1NURVAxX1NFQVJDSF9IRUFERVJfU1BPUlQnOiAnU3BvcnQnLFxuICAgICdDTF9TVEVQMV9TRUFSQ0hfQlVUVE9OX1NFTEVDVCc6ICdTZWxlY3QnLFxuICAgICdDTF9TVEVQMV9TRUFSQ0hfTk9fUkVTVUxUUyc6ICdZb3VyIHNlYXJjaCBcIntufVwiIGRpZCBub3QgbWF0Y2ggYW55IHByb2R1Y3RzLicsXG4gICAgJ0NMX1NURVAxX1NFQVJDSF9DQU5UX0ZJTkRfMic6ICdEaWQgeW91IG5vdCBmaW5kIHlvdXIgY29tcGV0aXRpb24gaW4gdGhlIGRhdGFiYXNlIG9yIGFyZSB5b3Ugbm90IHNlbGxpbmcgYSBjb21wZXRpdGlvbj8nLFxuICAgICdDTF9TVEVQMV9TRUFSQ0hfQ0FOVF9GSU5EJzogJ0NhblxcJ3QgZmluZCB5b3VyIGNvbXBldGl0aW9uIGluIG91ciBsaXN0PycsXG4gICAgJ0NMX1NURVAxX1NFQVJDSF9UUlknOiAnVHJ5IGFub3RoZXIgc2VhcmNoIG9yIGVudGVyIGNvbnRlbnQgbWFudWFsbHknLFxuICAgICdDTF9TVEVQMV9FTlRFUl9NQU5VQUxMWSc6ICdFbnRlciBjb250ZW50IG1hbnVhbGx5JyxcbiAgICAnRml4dHVyZSc6ICdGaXh0dXJlJyxcbiAgICAnRW50ZXIgZml4dHVyZSc6ICdFbnRlciBmaXh0dXJlJyxcbiAgICAnU2Vhc29uJzogJ1NlYXNvbicsXG4gICAgJ0NMX1NURVAxX0FERF9TRUFTT04nOiAnQWRkIHNlYXNvbicsXG4gICAgJ0NMX1NURVAxX0FERF9GSVhUVVJFUyc6ICdBZGQgZml4dHVyZXMnLFxuICAgICdQb3B1bGFyJzogJ1BvcHVsYXInLFxuICAgICdBcHBseSc6ICdBcHBseScsXG4gICAgJ0NMX1NURVAxX1NFTEVDVE9SX1NQT1JUXzEnOiAnQ2FuXFwndCBmaW5kIHlvdXIgc3BvcnQgaW4gdGhlIGxpc3Q/JyxcbiAgICAnQ0xfU1RFUDFfU0VMRUNUT1JfQUREX1NQT1JUJzogJ0FkZCBuZXcgc3BvcnQnLFxuICAgICdDTF9TVEVQMV9TRUxFQ1RPUl9UT1VSTkFNRU5UXzEnOiAnQ2FuXFwndCBmaW5kIHlvdXIgY29tcGV0aXRpb24gaW4gdGhlIGxpc3Q/JyxcbiAgICAnQ0xfU1RFUDFfU0VMRUNUT1JfQUREX1RPVVJOQU1FTlQnOiAnQWRkIG5ldyBjb21wZXRpdGlvbicsXG4gICAgJ0NMX1NURVAxX1NFTEVDVE9SX1NFQVNPTl8xJzogJ0NhbuKAmXQgZmluZCB0aGUgcmVsZXZhbnQgc2Vhc29uKHMpPycsXG4gICAgJ0NMX1NURVAxX1NFTEVDVE9SX0FERF9TRUFTT04nOiAnQWRkIG5ldyBzZWFzb24nLFxuICAgICdDTF9TVEVQMV9TRUxFQ1RPUl9DT1VOVFJZXzEnOiAnQ2FuXFwndCBmaW5kIHlvdXIgY291bnRyeSBpbiB0aGUgbGlzdD8nLFxuICAgICdDTF9TVEVQMV9TRUxFQ1RPUl9DT1VOVFJJRVNfQUxMJzogJ1Nob3cgYWxsIGNvdW50cmllcycsXG4gICAgJ0NMX1NURVAxX1NFTEVDVE9SX0NBVEVHT1JZXzEnOiAnQ2FuXFwndCBmaW5kIHlvdXIgY2F0ZWdvcnkgaW4gdGhlIGxpc3Q/JyxcbiAgICAnQ0xfU1RFUDFfU0VMRUNUT1JfQUREX0NBVEVHT1JZJzogJ0FkZCBuZXcgQ2F0ZWdvcnknLFxuICAgICdDb250YWN0JzogJ0NvbnRhY3QnLFxuICAgICdNRVNTQUdFX1BPUFVQX1NFTlQnOiAnTWVzc2FnZSBzZW50IScsXG4gICAgJ01FU1NBR0VfUE9QVVBfQlVUVE9OX1NFTkQnOiAnU2VuZCcsXG4gICAgJ01FU1NBR0VfUE9QVVBfQlVUVE9OX0NBTkNFTCc6ICdDYW5jZWwnLFxuICAgICdNRVNTQUdFX1BPUFVQX0JVVFRPTl9DTE9TRSc6ICdDbG9zZScsXG4gICAgJ1N1Ym1pdCc6ICdTdWJtaXQnLFxuICAgICdFZGl0JzogJ0VkaXQnLFxuICAgICdEdXBsaWNhdGUnOiAnRHVwbGljYXRlJyxcbiAgICAnVmlldyc6ICdWaWV3JyxcbiAgICAnTUFOQUdFX0xJU1RJTkdTX1JFTU9WRV9CVVRUT05fQ09ORklSTSc6ICdSZW1vdmUnLFxuICAgICdNQU5BR0VfTElTVElOR1NfQVJDSElWRV9CVVRUT05fQ09ORklSTSc6ICdBcmNoaXZlJyxcbiAgICAnTUFOQUdFX0xJU1RJTkdTX0RFQUNUSVZBVEVfQlVUVE9OX0NPTkZJUk0nOiAnRGVhY3RpdmF0ZScsXG4gICAgJ01BTkFHRV9MSVNUSU5HU19MQVNUX0FDVElPTic6ICdMYXN0IGFjdGlvbjogJyxcbiAgICAnTUFOQUdFX0xJU1RJTkdTX0xJU1RJTkdfT1dORVInOiAnTGlzdGluZyBvd25lcjogJyxcbiAgICAnTUFOQUdFX0xJU1RJTkdTX0RFQUNUSVZBVEVfQ09ORklSTUFUSU9OJzogJ0FyZSB5b3Ugc3VyZSB5b3Ugd2FudCB0byBkZWFjdGl2YXRlIHRoZSBsaXN0aW5nPycsXG4gICAgJ01BTkFHRV9MSVNUSU5HU19ERUFDVElWQVRFX0JVVFRPTl9DQU5DRUwnOiAnQ2FuY2VsJyxcbiAgICAnTUFOQUdFX0xJU1RJTkdTX1JFTU9WRV9DT05GSVJNQVRJT04nOiAnQXJlIHlvdSBzdXJlIHRoYXQgeW91IHdhbnQgdG8gcmVtb3ZlIHRoZSBsaXN0aW5nPycsXG4gICAgJ01BTkFHRV9MSVNUSU5HU19SRU1PVkVfQlVUVE9OX0NBTkNFTCc6ICdDYW5jZWwnLFxuICAgICdNQU5BR0VfTElTVElOR1NfQVJDSElWRV9DT05GSVJNQVRJT04nOiAnQXJlIHlvdSBzdXJlIHlvdSB3YW50IHRvIGFyY2hpdmUgdGhpcyBsaXN0aW5nPycsXG4gICAgJ01BTkFHRV9MSVNUSU5HU19BUkNISVZFX0JVVFRPTl9DQU5DRUwnOiAnQ2FuY2VsJyxcbiAgICAnTUFOQUdFX0xJU1RJTkdTX01VTFRJUExFX1NFQVNPTlMnOiAnU2Vhc29uOiBNdWx0aXBsZSBzZWFzb25zJyxcbiAgICAnTUFOQUdFX0xJU1RJTkdTX1NFQVNPTic6ICdTZWFzb246ICAnLFxuICAgICdQcm9ncmFtOiAnOiAnUHJvZ3JhbTogJyxcbiAgICAnRXhwaXJ5Oic6ICdFeHBpcnk6JyxcbiAgICAnTGlzdGluZyBuYW1lJzogJ0xpc3RpbmcgTmFtZScsXG4gICAgJ1NlbGxlcic6ICdTZWxsZXIgQ29tcGFueScsXG4gICAgJ1RlcnJpdG9yaWVzJzogJ0luY2x1ZGVkIFRlcnJpdG9yaWVzJyxcbiAgICAnV29ybGR3aWRlJzogJ1dvcmxkd2lkZScsXG4gICAgJ1ByaWNlJzogJ1ByaWNlJyxcbiAgICAnRGF0ZSBvZiBzYWxlJzogJ0RhdGUgb2YgU2FsZScsXG4gICAgJ0J1eWVyIG5hbWUnOiAnQnV5ZXIgbmFtZScsXG4gICAgJ0NMT1NFRF9ERUFMU19FTVBUWV9NRVNTQUdFJzogJ1lvdSBkb25cXCd0IGhhdmUgY2xvc2VkIGRlYWwgeWV0JyxcbiAgICAnQ09NTUVSQ0lBTF9BQ1RJVklUWV9GSUxURVJfQUxMJzogJ0FsbCBidW5kbGVzJyxcbiAgICAnQ09NTUVSQ0lBTF9BQ1RJVklUWV9GSUxURVJfV0lUSF9BQ1RJVklUWSc6ICdXaXRoIGFjdGl2aXR5JyxcbiAgICAnQ09NTUVSQ0lBTF9BQ1RJVklUWV9GSUxURVJfT1BFTl9CSURTJzogJ09wZW4gYmlkcycsXG4gICAgJ0NPTU1FUkNJQUxfQUNUSVZJVFlfRklMVEVSX0NMT1NFRF9ERUFMUyc6ICdDbG9zZWQgZGVhbHMnLFxuICAgICdDT01NRVJDSUFMX0FDVElWSVRZX0VNUFRZX01FU1NBR0UnOiAnWW91IGhhdmUgbm8gb2ZmZXJzIHlldCcsXG4gICAgJ01BTkFHRV9MSVNUSU5HU19USVRMRV9EUkFGVCc6ICdEcmFmdCcsXG4gICAgJ01BTkFHRV9MSVNUSU5HU19USVRMRV9JTkFDVElWRSc6ICdJbmFjdGl2ZSBsaXN0aW5ncycsXG4gICAgJ01BTkFHRV9MSVNUSU5HU19USVRMRV9BQ1RJVkUnOiAnQWN0aXZlIGxpc3RpbmdzJyxcbiAgICAnTUFOQUdFX0xJU1RJTkdTX1RJVExFX0VYUElSRUQnOiAnRXhwaXJlZCAmIFNvbGQgTGlzdGluZ3MnLFxuICAgICdNRVNTQUdFU19OT19USFJFQURTX1lFVCc6ICdObyB0aHJlYWRzIHlldCcsXG4gICAgJ01FU1NBR0VTX1RJVExFJzogJ1dyaXRlIGEgbWVzc2FnZScsXG4gICAgJ01FU1NBR0VTX1BMQUNFSE9MREVSX1dSSVRFJzogJ1dyaXRlIGEgbWVzc2FnZScsXG4gICAgJ01FU1NBR0VTX1NFTkRfQlVUVE9OJzogJ1NlbmQnLFxuICAgICdNRVNTQUdFU19OT19USFJFQURfU0VMRUNURUQnOiAnTm8gdGhyZWFkIHNlbGVjdGVkJyxcbiAgICAnUEVORElOR19CSURTX0ZJTFRFUl9BQ1RJVkUnOiAnQWN0aXZlJyxcbiAgICAnUEVORElOR19CSURTX0ZJTFRFUl9ERUNMSU5FRCc6ICdEZWNsaW5lZCcsXG4gICAgJ1BFTkRJTkdfQklEU19NQURFX0VNUFRZX01FU1NBR0UnOiAnWW91IGhhdmVuXFwndCBtYWRlIGFueSBiaWRzIHlldCEnLFxuICAgICdQRU5ESU5HX0JJRFNfTUFERV9ERUNMSU5FRF9FTVBUWV9NRVNTQUdFJzogJ1lvdSBoYXZlblxcJ3QgYW55IGRlY2xpbmVkIGJpZHMgeWV0IScsXG4gICAgJ1NFVFRJTkdTX1RJVExFX0NPTVBBTlknOiAnQ29tcGFueSBpbmZvcm1hdGlvbicsXG4gICAgJ1NFVFRJTkdTX0JVVFRPTl9FRElUJzogJ0VkaXQnLFxuICAgICdTRVRUSU5HU19CVVRUT05fU0FWRSc6ICdTYXZlJyxcbiAgICAnU0VUVElOR1NfTEFCRUxfQ09NUEFOWV9OQU1FJzogJ0xlZ2FsIENvbXBhbnkgTmFtZScsXG4gICAgJ1NFVFRJTkdTX0xBQkVMX0NPTVBBTllfUkVHSVNUUkFUSU9OX05VTUJFUic6ICdDb21wYW55IFJlZ2lzdHJhdGlvbiBOdW1iZXInLFxuICAgICdTRVRUSU5HU19MQUJFTF9DT01QQU5ZX1ZBVCc6ICdWQVQgSUQgbnVtYmUnLFxuICAgICdTRVRUSU5HU19MQUJFTF9DT01QQU5ZX0FERFJFU1MnOiAnQWRkcmVzcycsXG4gICAgJ1NFVFRJTkdTX0xBQkVMX0NPTVBBTllfQ0lUWSc6ICdDaXR5JyxcbiAgICAnU0VUVElOR1NfTEFCRUxfQ09NUEFOWV9aSVAnOiAnWklQIGNvZGUnLFxuICAgICdTRVRUSU5HU19MQUJFTF9DT01QQU5ZX0NPVU5UUlknOiAnQ291bnRyeScsXG4gICAgJ1NFVFRJTkdTX0xBQkVMX0NPTVBBTllfREVTQ1JJUFRJT04nOiAnQ29tcGFueSBkZXNjcmlwdGlvbicsXG4gICAgJ1NFVFRJTkdTX0xBQkVMX1VTRVJfRkFNSUxZX05BTUUnOiAnRmFtaWx5IG5hbWUnLFxuICAgICdTRVRUSU5HU19MQUJFTF9VU0VSX0ZJUlNUX05BTUUnOiAnRmlyc3QgbmFtZScsXG4gICAgJ1NFVFRJTkdTX0xBQkVMX1VTRVJfRU1BSUwnOiAnRW1haWwgYWRkcmVzcycsXG4gICAgJ1NFVFRJTkdTX0xBQkVMX1VTRVJfUEhPTkVfTlVNQkVSJzogJ1Bob25lIG51bWJlcicsXG4gICAgJ1NFVFRJTkdTX0xBQkVMX1VTRVJfQ09NUEFOWV9QT1NJVElPTic6ICdQb3NpdGlvbicsXG4gICAgJ1NFVFRJTkdTX0xBQkVMX1VTRVJfVElUTEVfSU5GTyc6ICdQZXJzb25hbCBpbmZvcm1hdGlvbicsXG4gICAgJ1NhdmUnOiAnU2F2ZSBDaGFuZ2VzJyxcbiAgICAnU0VUVElOR1NfTEFCRUxfVVNFUl9USVRMRSc6ICdUaXRsZScsXG4gICAgJ1NFVFRJTkdTX0xBQkVMX0NIQU5HRV9QQVNTV09SRCc6ICdDaGFuZ2UgUGFzc3dvcmQnLFxuICAgICdTRVRUSU5HU19MQUJFTF9DSEFOR0VfUEFTU1dPUkRfMic6ICdDaG9vc2UgYSB1bmlxdWUgcGFzc3dvcmQgdG8gcHJvdGVjdCB5b3VyIGFjY291bnQnLFxuICAgICdTRVRUSU5HU19MQUJFTF9UWVBFX0NVUlJFTlRfUEFTU1dPUkQnOiAnVHlwZSB5b3VyIGN1cnJlbnQgcGFzc3dvcmQnLFxuICAgICdTRVRUSU5HU19MQUJFTF9UWVBFX05FV19QQVNTV09SRCc6ICdUeXBlIHlvdXIgbmV3IHBhc3N3b3JkJyxcbiAgICAnU0VUVElOR1NfTEFCRUxfUkVUWVBFX05FV19QQVNTV09SRCc6ICdSZXR5cGUgeW91ciBuZXcgcGFzc3dvcmQnLFxuICAgICdTRVRUSU5HU19CVVRUT05fU0FWRV9QQVNTV09SRCc6ICdTYXZlIHBhc3N3b3JkJyxcbiAgICAnU0VUVElOR1NfTEFCRUxfUEFTU1dPUkRfVVBEQVRFRCc6ICdQYXNzd29yZCB1cGRhdGVkIHN1Y2Nlc3NmdWxseScsXG4gICAgJ1NFVFRJTkdTX0xBQkVMX1BBU1NXT1JEX1ZBTElEQVRFXzEnOiAnQXQgbGVhc3QgOCBjaGFyYWN0ZXJzIGxvbmcnLFxuICAgICdTRVRUSU5HU19MQUJFTF9QQVNTV09SRF9WQUxJREFURV8yJzogJ09uZSB1cHBlcmNhc2UgY2hhcmFjdGVyJyxcbiAgICAnU0VUVElOR1NfTEFCRUxfUEFTU1dPUkRfVkFMSURBVEVfMyc6ICdPbmUgbnVtYmVyJyxcbiAgICAnU0VUVElOR1NfTEFCRUxfUEFTU1dPUkRfVkFMSURBVEVfNCc6ICdPbmUgc3BlY2lhbCBjaGFyYWN0ZXInLFxuICAgICdTRVRUSU5HU19MQUJFTF9QQVNTV09SRF9WQUxJREFURV81JzogJ1Bhc3N3b3JkcyBkb25cXCd0IG1hdGNoJyxcbiAgICAnV0FUQ0hMSVNUX0VNUFRZX01FU1NBR0UnOiAnWW91ciB3YXRjaGxpc3QgaXMgZW1wdHkhJyxcbiAgICAnQ0xfU1RFUDRfTEFCRUxfQVBQTElDQUJMRV9MQVcnOiAnQXBwbGljYWJsZSBMYXcnLFxuICAgICdDTF9TVEVQNF9QTEFDRUhPTERFUl9BUFBMSUNBQkxFX0xBVyc6ICdTZWxlY3QgbGFuZ3VhZ2UnLFxuICAgICdBcHBsaWNhYmxlIExhdyc6ICdBcHBsaWNhYmxlIExhdycsXG4gICAgJ0NMX1NURVAzX0FNRU5ETUVOVCc6ICdDcmVhdGUgYW4gYW1lbmRtZW50LiBUaGlzIHdpbGwgYmUgaW5jbHVkZWQgaW4gdGhlIGxpY2Vuc2UgYWdyZWVtZW50LicsXG4gICAgJ0FjY2VwdCc6ICdBY2NlcHQnLFxuICAgICdDb21wYW55IEluZm9ybWF0aW9uJzogJ0NvbXBhbnkgSW5mb3JtYXRpb24nLFxuICAgICdMZWdhbCBuYW1lJzogJ0xlZ2FsIENvbXBhbnkgTmFtZScsXG4gICAgJ1JlZ2lzdHJhdGlvbiBudW1iZXInOiAnQ29tcGFueSBSZWdpc3RyYXRpb24gTnVtYmVyJyxcbiAgICAnVkFUIElEIG51bWJlcic6ICdWQVQgSUQgTnVtYmVyJyxcbiAgICAnU3RyZWV0IE5hbWUgLyBOdW1iZXInOiAnU3RyZWV0IE5hbWUgLyBOdW1iZXInLFxuICAgICdDaXR5JzogJ0NpdHknLFxuICAgICdaSVAgY29kZSc6ICdaSVAgY29kZScsXG4gICAgJ0NvdW50cnknOiAnQ291bnRyeScsXG4gICAgJ09rJzogJ09rJyxcbiAgICAnQ29tcGFueSBhZGRyZXNzJzogJ0NvbXBhbnkgQWRkcmVzcycsXG4gICAgJ0N1cnJlbmN5JzogJ0N1cnJlbmN5JyxcbiAgICAnQ0xfU1RFUDRfVElUTEVfRVhQSVJZJzogJ0xpc3RpbmcgZXhwaXJ5JyxcbiAgICAnQ0xfU1RFUDRfTEFCRUxfSlVSSVNESUNUSU9OJzogJ1BsYWNlIG9mIGp1cmlzZGljdGlvbicsXG4gICAgJ0VkaXQgbGljZW5zZSBwZXJpb2QnOiAnRWRpdCBsaWNlbnNlIHBlcmlvZCcsXG4gICAgJ0NMX1NURVAzX0xJQ0VOU0VfUE9QVVBfU1RBUlQnOiAnU3RhcnQgb2YgTGljZW5zZSBQZXJpb2QnLFxuICAgICdDTF9TVEVQM19MSUNFTlNFX1BPUFVQX1NUQVJUX0NPTkNMVVNJT04nOiAnIFdpdGggY29udHJhY3QgY29uY2x1c2lvbicsXG4gICAgJ0NMX1NURVAzX0xJQ0VOU0VfUE9QVVBfRU5EJzogJ0VuZCBvZiBsaWNlbnNlIHBlcmlvZCcsXG4gICAgJ1VubGltaXRlZCc6ICdVbmxpbWl0ZWQnLFxuICAgICdDTF9TVEVQNF9FRElUX0JVTkRMRV9USVRMRV9URVJSSVRPUklFUyc6ICdUZXJyaXRvcmllcycsXG4gICAgJ1NhbGVzIG1ldGhvZCc6ICdTYWxlcyBNZXRob2QnLFxuICAgICdGaXhlZCBmZWUnOiAnRml4ZWQgRmVlJyxcbiAgICAnQmlkZGluZyc6ICdCaWRkaW5nJyxcbiAgICAnQ0xfU1RFUDRfRURJVF9CVU5ETEVfVElUTEVfUEFZTUVOVCc6ICdQYXltZW50IGRldGFpbHMnLFxuICAgICdDTF9TVEVQNF9FRElUX0JVTkRMRV9JTlNUQUxMTUVOVF9EQVlTJzogJ2RheXMgYWZ0ZXIgY29udHJhY3QgY29uY2x1c2lvbicsXG4gICAgJ0NMX1NURVA0X0VESVRfQlVORExFX0lOU1RBTExNRU5UX1dBUk5JTkcnOiAndGhlIHRvdGFsIGluc3RhbGxtZW50IHBlcmNlbnRhZ2UgbXVzdCBhY2N1bXVsYXRlIHRvIDEwMCUnLFxuICAgICdDTF9TVEVQNF9FRElUX0JVTkRMRV9USVRMRV9URVJSSVRPUklFU19NT0RFJzogJ0hvdyB3b3VsZCB5b3UgbGlrZSB0byBzZWxsIHlvdXIgY29udGVudD8nLFxuICAgICdDTF9TVEVQNF9FRElUX0JVTkRMRV9USVRMRV9TSU5HTEVfVEVSUklUT1JZJzogJ0FkZCBzaW5nbGUgdGVycml0b3J5JyxcbiAgICAnQ0xfU1RFUDRfRURJVF9CVU5ETEVfVElUTEVfTVVMVElQTEVfVEVSUklUT1JJRVMnOiAnQWRkIG11bHRpcGxlIHRlcnJpdG9yaWVzJyxcbiAgICAnQ0xfU1RFUDRfRURJVF9CVU5ETEVfVElUTEVfU0VMRUNURURfVEVSUklUT1JJRVMnOiAnU2VsZWN0ZWQgdGVycml0b3JpZXMgb25seScsXG4gICAgJ0NMX1NURVA0X0VESVRfQlVORExFX1RJVExFX1dPUkxEV0lERSc6ICdXb3JsZHdpZGUnLFxuICAgICdDTF9TVEVQNF9FRElUX0JVTkRMRV9USVRMRV9XT1JMRFdJREVfRVhDTFVESU5HJzogJ1dvcmxkd2lkZSBleGNsdWRpbmcnLFxuICAgICdDTF9TVEVQNF9FRElUX0JVTkRMRV9BU19QQUNLQUdFJzogJ09mZmVyIHNlbGVjdGVkIHRlcnJpdG9yaWVzIHRvZ2V0aGVyIGFzIG9uZSB0ZXJyaXRvcnkgcGFja2FnZScsXG4gICAgJ0NMX1NURVA0X0VESVRfQlVORExFX1RZUEVfRklYRUQnOiAnRml4ZWQgZmVlJyxcbiAgICAnQ0xfU1RFUDRfRURJVF9CVU5ETEVfVFlQRV9CSURESU5HJzogJ0JpZGRpbmcnLFxuICAgICdDTF9TVEVQNF9TQUxFU19CVU5ETEVTJzogJ1NhbGVzIEJ1bmRsZXMnLFxuICAgICdDTF9TVEVQNF9SRU1PVkVfQUxMX0JVTkRMRVMnOiAnUmVtb3ZlIGFsJyxcbiAgICAnQ0xfU1RFUDRfQUREX1NBTEVTX0JVTkRMRSc6ICdBZGQgc2FsZXMgYnVuZGxlJyxcbiAgICAnQ0xfU1RFUDJfUklHSFRTX1RJVExFJzogJ1JJR0hUUyBTRUxFQ1RJT04nLFxuICAgICdDTF9TVEVQMl9SSUdIVFNfVEVYVCc6ICdXaGljaCByaWdodHMgZmRvIHlvdSB3YW50IHRvIGdyYW50IHRvIHRoZSBidXllcj8nLFxuICAgICdFeGNsdXNpdmUnOiAnT2ZmZXIgZXhjbHVzaXZlbHknLFxuICAgICdDTF9TVEVQNV9NT0RBTF9TVUNDRVNTX01FU1NBR0VfMSc6ICdDb25ncmF0dWxhdGlvbnMhJyxcbiAgICAnQ0xfU1RFUDVfTU9EQUxfU1VDQ0VTU19NRVNTQUdFXzInOiAnVGhlIGxpc3Rpbmcgd2FzIHN1Ym1pdHRlZCBzdWNjZXNzZnVsbHkhJyxcbiAgICAnQ0xfU1RFUDVfTU9EQUxfQlVUVE9OJzogJ0NvbnRpbnVlJyxcbiAgICAnQ0xfU1RFUDVfVElUTEVfUkVWSUVXJzogJ1JldmlldyAmIFNpZ24nLFxuICAgICdDTF9TVEVQNV9USVRMRV9QUkVWSUVXJzogJ01hcmtldHBsYWNlIFByZXZpZXcnLFxuICAgICdDTF9TVEVQNV9URVJNU18xJzogJ0kgY29uZmlybSB0aGF0IEkgaGF2ZSB2ZXJpZmllZCB0aGUgdGVybXMgc3RhdGVkIGFib3ZlLiBUaGV5IGFyZSBjb3JyZWN0IGFuZCByZWFkeSB0byBiZSBwdWJsaXNoZWQuJyxcbiAgICAnQ0xfU1RFUDVfVEVSTVNfMic6ICdJIGNvbmZpcm0gdGhhdCBJIGhhdmUgdmVyaWZpZWQgdGhlIHRlcm1zIGFuZCBjb25kaXRpb25zIHRoYXQgaGF2ZSBiZWVuIG91dGxpbmVkIGJ5IENvbnRlbnQgQXJlbmEgUHRlLiBMdGQuJyxcbiAgICAnQ0xfU1RFUDVfQlVUVE9OX1NVQk1JVCc6ICdTdWJtaXQgbGlzdGluZycsXG4gICAgJ0NMX1NURVA1X0JVVFRPTl9TQVZFJzogJ1NhdmUnLFxuICAgICdCYWNrJzogJ0JhY2snLFxuICAgICdOZXh0JzogJ05leHQnLFxuICAgICdDTF9TVEVQMV9QTEFDRUhPTERFUl9XRUJTSVRFJzogJ2UuZy4gYnVuZGVzbGlnYS5kZScsXG4gICAgJ0NMX1NURVAxX0JVVFRPTl9TVEFSVF9PVkVSJzogJ1N0YXJ0IG92ZXInLFxuICAgICdDTF9TVEVQMV9ERVNDUklQVElPTl8xJzogJ1BsZWFzZSBmaWxsIGluIHRoZSBmaWVsZHMgYmVsb3cuIOKAnENvdW50cnkvQ2F0ZWdvcnnigJ0gYW5kIOKAnENvbXBldGl0aW9u4oCdIGFyZSBvcHRpb25hbC4nLFxuICAgICdDTF9TVEVQMV9ERVNDUklQVElPTl9NVUxUSVBMRV9TUE9SVFMnOiAnWW91ciBjb250ZW50IGNvdmVycyBtdWx0aXBsZSBzcG9ydHM/JyxcbiAgICAnQ0xfU1RFUDFfQlVUVE9OX01VTFRJUExFX1NQT1JUUyc6ICdQbGVhc2UgY2xpY2sgaGVyZScsXG4gICAgJ0NMX1NURVAxX0xBQkVMX0NPVU5UUlknOiAnQ291bnRyeS9DYXRlZ29yeScsXG4gICAgJ0NMX1NURVAxX1BMQUNFSE9MREVSX0NPVU5UUlknOiAnZS5nLiBHZXJtYW55JyxcbiAgICAnQ0xfU1RFUDFfTEFCRUxfQ09NUEVUSVRJT04nOiAnQ29tcGV0aXRpb24nLFxuICAgICdDTF9TVEVQMV9QTEFDRUhPTERFUl9DT01QRVRJVElPTic6ICdlLmcuIEJ1bmRlc2xpZ2EnLFxuICAgICdDTF9TVEVQMV9MQUJFTF9BRERJVElPTkFMX0lORk8nOiAnQWRkaXRpb25hbCBJbmZvcm1hdGlvbiAob3B0aW9uYWwoJyxcbiAgICAnQ0xfU1RFUDFfTEFCRUxfV0VCU0lURSc6ICdXZWJzaXRlJyxcbiAgICAnQ0xfU1RFUDJfUFJPR1JBTV9ERVNDUklQVElPTl9USVRMRSc6ICdQUk9HUkFNIERFRklOSVRJT04nLFxuICAgICdDTF9TVEVQMl9QUk9HUkFNX0RFU0NSSVBUSU9OX1RFWFQnOiAnUGxlYXNlIGRlc2NyaWJlIHdoaWNoIHByb2dyYW0geW91IHdvdWxkIGxpa2UgdG8gbGljZW5zZSBzcGVjaWZpY2FsbHkuJyxcbiAgICAnQ0xfU1RFUDJfUFJPR1JBTV9ERVNDUklQVElPTl9QTEFDRUhPTERFUic6ICdUaGUgcHJvZ3JhbSBkZWZpbml0aW9uIHJlcHJlc2VudHMgdGhlIGJhc2lzIG9mIHRoZSBsaWNlbnNlIGFncmVlbWVudC4gQWxsIHJpZ2h0cyBzZWxlY3RlZCB3aWxsIGJlIGdyYW50ZWQgZm9yIHRoZSBwcm9ncmFtcyBhcyBkZWZpbmVkIGhlcmUuJyxcbiAgICAnQ0xfU1RFUDJfUFJPR1JBTV9OQU1FJzogJ0VudGVyIHByb2dyYW0gbmFtZScsXG4gICAgJ0NMX1NURVAyX1BST0dSQU1fRVBJU09ERVMnOiAnTnVtYmVyIG9mIGVwaXNvZGVzJyxcbiAgICAnQ0xfU1RFUDJfUFJPR1JBTV9EVVJBVElPTic6ICdBdmVyYWdlIGVwaXNvZGUgZHVyYXRpb24gaW4gbWludXRlcycsXG4gICAgJ0NMX1NURVAyX1BST0dSQU1fVFlQRSc6ICdFbnRlciBwcm9ncmFtIHR5cGUnLFxuICAgICdDTF9TVEVQMl9QUk9HUkFNX1lFQVInOiAnUmVsZWFzZSB5ZWFyIChvcHRpb25hbCknLFxuICAgICdDTF9TVEVQMl9QUk9HUkFNX0RFU0NSSVBUSU9OX09QVElPTkFMJzogJ0VkaXRlZCBQcm9ncmFtIERlc2NyaXB0aW9uIChvcHRpb25hbCknLFxuICAgICdDTF9TVEVQMl9QUk9HUkFNX0RFU0NSSVBUSU9OX09QVElPTkFMX1BMQUNFSE9MREVSJzogJ1Byb3ZpZGUgYSBkZXNjcmlwdGlvbiBvZiB5b3VyIGNvbnRlbnQgbGlzdGluZy4nLFxuICAgICdDTF9TVEVQM19QUk9HUkFNX01PREFMX1RJVExFJzogJ1Byb2dyYW0gZGV0YWlscycsXG4gICAgJ0NMX1NURVAzX1BST0dSQU1fTU9EQUxfTEFOR1VBR0UnOiAnUHJvZ3JhbSBsYW5ndWFnZScsXG4gICAgJ0NMX1NURVAzX1BST0dSQU1fTU9EQUxfU1VCVElUTEVTJzogJ1N1YnRpdGxlcyAoaWYgYXZhaWxhYmxlKScsXG4gICAgJ0NMX1NURVAzX1BST0dSQU1fTU9EQUxfU0NSSVBUJzogJ1NjcmlwdCAoaWYgYXZhaWxhYmxlKScsXG4gICAgJ0NMX1NURVAzX1BST0dSQU1fTU9EQUxfQlVUVE9OX09LJzogJ09rJyxcbiAgICAnQ0xfU1RFUDNfVElUTEVfTElDRU5TRV9QRVJJT0RfU1RBUlQnOiAnU3RhcnQnLFxuICAgICdDTF9TVEVQM19USVRMRV9MSUNFTlNFX1BFUklPRF9FTkQnOiAnRW5kJyxcbiAgICAnQ0xfU1RFUDNfU0VMRUNUX0xJQ0VOU0VfUEVSSU9EJzogJ1BsZWFzZSBzZWxlY3QnLFxuICAgICdDTF9TVEVQM19USVRMRV9HUkFOVF9SSUdIVCc6ICdHcmFudCBvZiBSaWdodHMnLFxuICAgICdDTF9TVEVQM19USVRMRV9QUk9EVUNUSU9OX1NUQU5EQVJEUyc6ICdDb25maWd1cmUgUHJvZHVjdGlvbiBTdGFuZGFyZHMnLFxuICAgICdDTF9TVEVQNF9USVRMRV9JTkZPJzogJ0Z1cnRoZXIgaW5mb3JtYXRpb24nLFxuICAgICdDTF9TVEVQNF9MQUJFTF9BTk5FWCc6ICdBbm5leCcsXG4gICAgJ0NMX1NURVA0X0lORk9fQU5ORVgnOiAnQWxsIGZpbGVzIHVwbG9hZGVkIGhlcmUgd2lsbCBiZSBtZXJnZWQgd2l0aCB0aGUgbGljZW5zZSBhZ3JlZW1lbnQuIFlvdSBtYXkgdXBsb2FkIG9ubHkgUERGIGZpbGVzLicsXG4gICAgJ0NMX1NURVA0X0xJU1RJTkdfREVUQUlMU19URVhUJzogJ1BsZWFzZSBkZWZpbmUgbGlzdGluZyBkZXRhaWxzIGJlbG93LiBUaGlzIGRldGVybWluZXMgaG93IHlvdXIgbGlzdGluZyBpcyBzaG93biB0byBwb3RlbnRpYWwgYnV5ZXJzLicsXG4gICAgJ0NMX1NURVA0X0xBQkVMX0lNQUdFJzogJ0xpc3RpbmcgaW1hZ2UgKG9wdC4pJyxcbiAgfSxcbn1cblxuXG5cbi8vIFdFQlBBQ0sgRk9PVEVSIC8vXG4vLyAuL3NyYy9BcHBCdW5kbGUvUmVzb3VyY2VzL3B1YmxpYy9qYXZhc2NyaXB0L3RyYW5zbGF0aW9ucy90cmFuc2xhdGlvbnMuanMiXSwic291cmNlUm9vdCI6IiJ9