webpackJsonp([1],{

/***/ "./node_modules/axios/index.js":
/*!*************************************!*\
  !*** ./node_modules/axios/index.js ***!
  \*************************************/
/*! dynamic exports provided */
/*! exports used: default */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__(/*! ./lib/axios */ "./node_modules/axios/lib/axios.js");

/***/ }),

/***/ "./node_modules/axios/lib/adapters/xhr.js":
/*!************************************************!*\
  !*** ./node_modules/axios/lib/adapters/xhr.js ***!
  \************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var utils = __webpack_require__(/*! ./../utils */ "./node_modules/axios/lib/utils.js");
var settle = __webpack_require__(/*! ./../core/settle */ "./node_modules/axios/lib/core/settle.js");
var buildURL = __webpack_require__(/*! ./../helpers/buildURL */ "./node_modules/axios/lib/helpers/buildURL.js");
var parseHeaders = __webpack_require__(/*! ./../helpers/parseHeaders */ "./node_modules/axios/lib/helpers/parseHeaders.js");
var isURLSameOrigin = __webpack_require__(/*! ./../helpers/isURLSameOrigin */ "./node_modules/axios/lib/helpers/isURLSameOrigin.js");
var createError = __webpack_require__(/*! ../core/createError */ "./node_modules/axios/lib/core/createError.js");
var btoa = (typeof window !== 'undefined' && window.btoa && window.btoa.bind(window)) || __webpack_require__(/*! ./../helpers/btoa */ "./node_modules/axios/lib/helpers/btoa.js");

module.exports = function xhrAdapter(config) {
  return new Promise(function dispatchXhrRequest(resolve, reject) {
    var requestData = config.data;
    var requestHeaders = config.headers;

    if (utils.isFormData(requestData)) {
      delete requestHeaders['Content-Type']; // Let the browser set it
    }

    var request = new XMLHttpRequest();
    var loadEvent = 'onreadystatechange';
    var xDomain = false;

    // For IE 8/9 CORS support
    // Only supports POST and GET calls and doesn't returns the response headers.
    // DON'T do this for testing b/c XMLHttpRequest is mocked, not XDomainRequest.
    if ("development" !== 'test' &&
        typeof window !== 'undefined' &&
        window.XDomainRequest && !('withCredentials' in request) &&
        !isURLSameOrigin(config.url)) {
      request = new window.XDomainRequest();
      loadEvent = 'onload';
      xDomain = true;
      request.onprogress = function handleProgress() {};
      request.ontimeout = function handleTimeout() {};
    }

    // HTTP basic authentication
    if (config.auth) {
      var username = config.auth.username || '';
      var password = config.auth.password || '';
      requestHeaders.Authorization = 'Basic ' + btoa(username + ':' + password);
    }

    request.open(config.method.toUpperCase(), buildURL(config.url, config.params, config.paramsSerializer), true);

    // Set the request timeout in MS
    request.timeout = config.timeout;

    // Listen for ready state
    request[loadEvent] = function handleLoad() {
      if (!request || (request.readyState !== 4 && !xDomain)) {
        return;
      }

      // The request errored out and we didn't get a response, this will be
      // handled by onerror instead
      // With one exception: request that using file: protocol, most browsers
      // will return status as 0 even though it's a successful request
      if (request.status === 0 && !(request.responseURL && request.responseURL.indexOf('file:') === 0)) {
        return;
      }

      // Prepare the response
      var responseHeaders = 'getAllResponseHeaders' in request ? parseHeaders(request.getAllResponseHeaders()) : null;
      var responseData = !config.responseType || config.responseType === 'text' ? request.responseText : request.response;
      var response = {
        data: responseData,
        // IE sends 1223 instead of 204 (https://github.com/axios/axios/issues/201)
        status: request.status === 1223 ? 204 : request.status,
        statusText: request.status === 1223 ? 'No Content' : request.statusText,
        headers: responseHeaders,
        config: config,
        request: request
      };

      settle(resolve, reject, response);

      // Clean up request
      request = null;
    };

    // Handle low level network errors
    request.onerror = function handleError() {
      // Real errors are hidden from us by the browser
      // onerror should only fire if it's a network error
      reject(createError('Network Error', config, null, request));

      // Clean up request
      request = null;
    };

    // Handle timeout
    request.ontimeout = function handleTimeout() {
      reject(createError('timeout of ' + config.timeout + 'ms exceeded', config, 'ECONNABORTED',
        request));

      // Clean up request
      request = null;
    };

    // Add xsrf header
    // This is only done if running in a standard browser environment.
    // Specifically not if we're in a web worker, or react-native.
    if (utils.isStandardBrowserEnv()) {
      var cookies = __webpack_require__(/*! ./../helpers/cookies */ "./node_modules/axios/lib/helpers/cookies.js");

      // Add xsrf header
      var xsrfValue = (config.withCredentials || isURLSameOrigin(config.url)) && config.xsrfCookieName ?
          cookies.read(config.xsrfCookieName) :
          undefined;

      if (xsrfValue) {
        requestHeaders[config.xsrfHeaderName] = xsrfValue;
      }
    }

    // Add headers to the request
    if ('setRequestHeader' in request) {
      utils.forEach(requestHeaders, function setRequestHeader(val, key) {
        if (typeof requestData === 'undefined' && key.toLowerCase() === 'content-type') {
          // Remove Content-Type if data is undefined
          delete requestHeaders[key];
        } else {
          // Otherwise add header to the request
          request.setRequestHeader(key, val);
        }
      });
    }

    // Add withCredentials to request if needed
    if (config.withCredentials) {
      request.withCredentials = true;
    }

    // Add responseType to request if needed
    if (config.responseType) {
      try {
        request.responseType = config.responseType;
      } catch (e) {
        // Expected DOMException thrown by browsers not compatible XMLHttpRequest Level 2.
        // But, this can be suppressed for 'json' type as it can be parsed by default 'transformResponse' function.
        if (config.responseType !== 'json') {
          throw e;
        }
      }
    }

    // Handle progress if needed
    if (typeof config.onDownloadProgress === 'function') {
      request.addEventListener('progress', config.onDownloadProgress);
    }

    // Not all browsers support upload events
    if (typeof config.onUploadProgress === 'function' && request.upload) {
      request.upload.addEventListener('progress', config.onUploadProgress);
    }

    if (config.cancelToken) {
      // Handle cancellation
      config.cancelToken.promise.then(function onCanceled(cancel) {
        if (!request) {
          return;
        }

        request.abort();
        reject(cancel);
        // Clean up request
        request = null;
      });
    }

    if (requestData === undefined) {
      requestData = null;
    }

    // Send the request
    request.send(requestData);
  });
};


/***/ }),

/***/ "./node_modules/axios/lib/axios.js":
/*!*****************************************!*\
  !*** ./node_modules/axios/lib/axios.js ***!
  \*****************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var utils = __webpack_require__(/*! ./utils */ "./node_modules/axios/lib/utils.js");
var bind = __webpack_require__(/*! ./helpers/bind */ "./node_modules/axios/lib/helpers/bind.js");
var Axios = __webpack_require__(/*! ./core/Axios */ "./node_modules/axios/lib/core/Axios.js");
var defaults = __webpack_require__(/*! ./defaults */ "./node_modules/axios/lib/defaults.js");

/**
 * Create an instance of Axios
 *
 * @param {Object} defaultConfig The default config for the instance
 * @return {Axios} A new instance of Axios
 */
function createInstance(defaultConfig) {
  var context = new Axios(defaultConfig);
  var instance = bind(Axios.prototype.request, context);

  // Copy axios.prototype to instance
  utils.extend(instance, Axios.prototype, context);

  // Copy context to instance
  utils.extend(instance, context);

  return instance;
}

// Create the default instance to be exported
var axios = createInstance(defaults);

// Expose Axios class to allow class inheritance
axios.Axios = Axios;

// Factory for creating new instances
axios.create = function create(instanceConfig) {
  return createInstance(utils.merge(defaults, instanceConfig));
};

// Expose Cancel & CancelToken
axios.Cancel = __webpack_require__(/*! ./cancel/Cancel */ "./node_modules/axios/lib/cancel/Cancel.js");
axios.CancelToken = __webpack_require__(/*! ./cancel/CancelToken */ "./node_modules/axios/lib/cancel/CancelToken.js");
axios.isCancel = __webpack_require__(/*! ./cancel/isCancel */ "./node_modules/axios/lib/cancel/isCancel.js");

// Expose all/spread
axios.all = function all(promises) {
  return Promise.all(promises);
};
axios.spread = __webpack_require__(/*! ./helpers/spread */ "./node_modules/axios/lib/helpers/spread.js");

module.exports = axios;

// Allow use of default import syntax in TypeScript
module.exports.default = axios;


/***/ }),

/***/ "./node_modules/axios/lib/cancel/Cancel.js":
/*!*************************************************!*\
  !*** ./node_modules/axios/lib/cancel/Cancel.js ***!
  \*************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


/**
 * A `Cancel` is an object that is thrown when an operation is canceled.
 *
 * @class
 * @param {string=} message The message.
 */
function Cancel(message) {
  this.message = message;
}

Cancel.prototype.toString = function toString() {
  return 'Cancel' + (this.message ? ': ' + this.message : '');
};

Cancel.prototype.__CANCEL__ = true;

module.exports = Cancel;


/***/ }),

/***/ "./node_modules/axios/lib/cancel/CancelToken.js":
/*!******************************************************!*\
  !*** ./node_modules/axios/lib/cancel/CancelToken.js ***!
  \******************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var Cancel = __webpack_require__(/*! ./Cancel */ "./node_modules/axios/lib/cancel/Cancel.js");

/**
 * A `CancelToken` is an object that can be used to request cancellation of an operation.
 *
 * @class
 * @param {Function} executor The executor function.
 */
function CancelToken(executor) {
  if (typeof executor !== 'function') {
    throw new TypeError('executor must be a function.');
  }

  var resolvePromise;
  this.promise = new Promise(function promiseExecutor(resolve) {
    resolvePromise = resolve;
  });

  var token = this;
  executor(function cancel(message) {
    if (token.reason) {
      // Cancellation has already been requested
      return;
    }

    token.reason = new Cancel(message);
    resolvePromise(token.reason);
  });
}

/**
 * Throws a `Cancel` if cancellation has been requested.
 */
CancelToken.prototype.throwIfRequested = function throwIfRequested() {
  if (this.reason) {
    throw this.reason;
  }
};

/**
 * Returns an object that contains a new `CancelToken` and a function that, when called,
 * cancels the `CancelToken`.
 */
CancelToken.source = function source() {
  var cancel;
  var token = new CancelToken(function executor(c) {
    cancel = c;
  });
  return {
    token: token,
    cancel: cancel
  };
};

module.exports = CancelToken;


/***/ }),

/***/ "./node_modules/axios/lib/cancel/isCancel.js":
/*!***************************************************!*\
  !*** ./node_modules/axios/lib/cancel/isCancel.js ***!
  \***************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


module.exports = function isCancel(value) {
  return !!(value && value.__CANCEL__);
};


/***/ }),

/***/ "./node_modules/axios/lib/core/Axios.js":
/*!**********************************************!*\
  !*** ./node_modules/axios/lib/core/Axios.js ***!
  \**********************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var defaults = __webpack_require__(/*! ./../defaults */ "./node_modules/axios/lib/defaults.js");
var utils = __webpack_require__(/*! ./../utils */ "./node_modules/axios/lib/utils.js");
var InterceptorManager = __webpack_require__(/*! ./InterceptorManager */ "./node_modules/axios/lib/core/InterceptorManager.js");
var dispatchRequest = __webpack_require__(/*! ./dispatchRequest */ "./node_modules/axios/lib/core/dispatchRequest.js");

/**
 * Create a new instance of Axios
 *
 * @param {Object} instanceConfig The default config for the instance
 */
function Axios(instanceConfig) {
  this.defaults = instanceConfig;
  this.interceptors = {
    request: new InterceptorManager(),
    response: new InterceptorManager()
  };
}

/**
 * Dispatch a request
 *
 * @param {Object} config The config specific for this request (merged with this.defaults)
 */
Axios.prototype.request = function request(config) {
  /*eslint no-param-reassign:0*/
  // Allow for axios('example/url'[, config]) a la fetch API
  if (typeof config === 'string') {
    config = utils.merge({
      url: arguments[0]
    }, arguments[1]);
  }

  config = utils.merge(defaults, {method: 'get'}, this.defaults, config);
  config.method = config.method.toLowerCase();

  // Hook up interceptors middleware
  var chain = [dispatchRequest, undefined];
  var promise = Promise.resolve(config);

  this.interceptors.request.forEach(function unshiftRequestInterceptors(interceptor) {
    chain.unshift(interceptor.fulfilled, interceptor.rejected);
  });

  this.interceptors.response.forEach(function pushResponseInterceptors(interceptor) {
    chain.push(interceptor.fulfilled, interceptor.rejected);
  });

  while (chain.length) {
    promise = promise.then(chain.shift(), chain.shift());
  }

  return promise;
};

// Provide aliases for supported request methods
utils.forEach(['delete', 'get', 'head', 'options'], function forEachMethodNoData(method) {
  /*eslint func-names:0*/
  Axios.prototype[method] = function(url, config) {
    return this.request(utils.merge(config || {}, {
      method: method,
      url: url
    }));
  };
});

utils.forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {
  /*eslint func-names:0*/
  Axios.prototype[method] = function(url, data, config) {
    return this.request(utils.merge(config || {}, {
      method: method,
      url: url,
      data: data
    }));
  };
});

module.exports = Axios;


/***/ }),

/***/ "./node_modules/axios/lib/core/InterceptorManager.js":
/*!***********************************************************!*\
  !*** ./node_modules/axios/lib/core/InterceptorManager.js ***!
  \***********************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var utils = __webpack_require__(/*! ./../utils */ "./node_modules/axios/lib/utils.js");

function InterceptorManager() {
  this.handlers = [];
}

/**
 * Add a new interceptor to the stack
 *
 * @param {Function} fulfilled The function to handle `then` for a `Promise`
 * @param {Function} rejected The function to handle `reject` for a `Promise`
 *
 * @return {Number} An ID used to remove interceptor later
 */
InterceptorManager.prototype.use = function use(fulfilled, rejected) {
  this.handlers.push({
    fulfilled: fulfilled,
    rejected: rejected
  });
  return this.handlers.length - 1;
};

/**
 * Remove an interceptor from the stack
 *
 * @param {Number} id The ID that was returned by `use`
 */
InterceptorManager.prototype.eject = function eject(id) {
  if (this.handlers[id]) {
    this.handlers[id] = null;
  }
};

/**
 * Iterate over all the registered interceptors
 *
 * This method is particularly useful for skipping over any
 * interceptors that may have become `null` calling `eject`.
 *
 * @param {Function} fn The function to call for each interceptor
 */
InterceptorManager.prototype.forEach = function forEach(fn) {
  utils.forEach(this.handlers, function forEachHandler(h) {
    if (h !== null) {
      fn(h);
    }
  });
};

module.exports = InterceptorManager;


/***/ }),

/***/ "./node_modules/axios/lib/core/createError.js":
/*!****************************************************!*\
  !*** ./node_modules/axios/lib/core/createError.js ***!
  \****************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var enhanceError = __webpack_require__(/*! ./enhanceError */ "./node_modules/axios/lib/core/enhanceError.js");

/**
 * Create an Error with the specified message, config, error code, request and response.
 *
 * @param {string} message The error message.
 * @param {Object} config The config.
 * @param {string} [code] The error code (for example, 'ECONNABORTED').
 * @param {Object} [request] The request.
 * @param {Object} [response] The response.
 * @returns {Error} The created error.
 */
module.exports = function createError(message, config, code, request, response) {
  var error = new Error(message);
  return enhanceError(error, config, code, request, response);
};


/***/ }),

/***/ "./node_modules/axios/lib/core/dispatchRequest.js":
/*!********************************************************!*\
  !*** ./node_modules/axios/lib/core/dispatchRequest.js ***!
  \********************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var utils = __webpack_require__(/*! ./../utils */ "./node_modules/axios/lib/utils.js");
var transformData = __webpack_require__(/*! ./transformData */ "./node_modules/axios/lib/core/transformData.js");
var isCancel = __webpack_require__(/*! ../cancel/isCancel */ "./node_modules/axios/lib/cancel/isCancel.js");
var defaults = __webpack_require__(/*! ../defaults */ "./node_modules/axios/lib/defaults.js");
var isAbsoluteURL = __webpack_require__(/*! ./../helpers/isAbsoluteURL */ "./node_modules/axios/lib/helpers/isAbsoluteURL.js");
var combineURLs = __webpack_require__(/*! ./../helpers/combineURLs */ "./node_modules/axios/lib/helpers/combineURLs.js");

/**
 * Throws a `Cancel` if cancellation has been requested.
 */
function throwIfCancellationRequested(config) {
  if (config.cancelToken) {
    config.cancelToken.throwIfRequested();
  }
}

/**
 * Dispatch a request to the server using the configured adapter.
 *
 * @param {object} config The config that is to be used for the request
 * @returns {Promise} The Promise to be fulfilled
 */
module.exports = function dispatchRequest(config) {
  throwIfCancellationRequested(config);

  // Support baseURL config
  if (config.baseURL && !isAbsoluteURL(config.url)) {
    config.url = combineURLs(config.baseURL, config.url);
  }

  // Ensure headers exist
  config.headers = config.headers || {};

  // Transform request data
  config.data = transformData(
    config.data,
    config.headers,
    config.transformRequest
  );

  // Flatten headers
  config.headers = utils.merge(
    config.headers.common || {},
    config.headers[config.method] || {},
    config.headers || {}
  );

  utils.forEach(
    ['delete', 'get', 'head', 'post', 'put', 'patch', 'common'],
    function cleanHeaderConfig(method) {
      delete config.headers[method];
    }
  );

  var adapter = config.adapter || defaults.adapter;

  return adapter(config).then(function onAdapterResolution(response) {
    throwIfCancellationRequested(config);

    // Transform response data
    response.data = transformData(
      response.data,
      response.headers,
      config.transformResponse
    );

    return response;
  }, function onAdapterRejection(reason) {
    if (!isCancel(reason)) {
      throwIfCancellationRequested(config);

      // Transform response data
      if (reason && reason.response) {
        reason.response.data = transformData(
          reason.response.data,
          reason.response.headers,
          config.transformResponse
        );
      }
    }

    return Promise.reject(reason);
  });
};


/***/ }),

/***/ "./node_modules/axios/lib/core/enhanceError.js":
/*!*****************************************************!*\
  !*** ./node_modules/axios/lib/core/enhanceError.js ***!
  \*****************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


/**
 * Update an Error with the specified config, error code, and response.
 *
 * @param {Error} error The error to update.
 * @param {Object} config The config.
 * @param {string} [code] The error code (for example, 'ECONNABORTED').
 * @param {Object} [request] The request.
 * @param {Object} [response] The response.
 * @returns {Error} The error.
 */
module.exports = function enhanceError(error, config, code, request, response) {
  error.config = config;
  if (code) {
    error.code = code;
  }
  error.request = request;
  error.response = response;
  return error;
};


/***/ }),

/***/ "./node_modules/axios/lib/core/settle.js":
/*!***********************************************!*\
  !*** ./node_modules/axios/lib/core/settle.js ***!
  \***********************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var createError = __webpack_require__(/*! ./createError */ "./node_modules/axios/lib/core/createError.js");

/**
 * Resolve or reject a Promise based on response status.
 *
 * @param {Function} resolve A function that resolves the promise.
 * @param {Function} reject A function that rejects the promise.
 * @param {object} response The response.
 */
module.exports = function settle(resolve, reject, response) {
  var validateStatus = response.config.validateStatus;
  // Note: status is not exposed by XDomainRequest
  if (!response.status || !validateStatus || validateStatus(response.status)) {
    resolve(response);
  } else {
    reject(createError(
      'Request failed with status code ' + response.status,
      response.config,
      null,
      response.request,
      response
    ));
  }
};


/***/ }),

/***/ "./node_modules/axios/lib/core/transformData.js":
/*!******************************************************!*\
  !*** ./node_modules/axios/lib/core/transformData.js ***!
  \******************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var utils = __webpack_require__(/*! ./../utils */ "./node_modules/axios/lib/utils.js");

/**
 * Transform the data for a request or a response
 *
 * @param {Object|String} data The data to be transformed
 * @param {Array} headers The headers for the request or response
 * @param {Array|Function} fns A single function or Array of functions
 * @returns {*} The resulting transformed data
 */
module.exports = function transformData(data, headers, fns) {
  /*eslint no-param-reassign:0*/
  utils.forEach(fns, function transform(fn) {
    data = fn(data, headers);
  });

  return data;
};


/***/ }),

/***/ "./node_modules/axios/lib/defaults.js":
/*!********************************************!*\
  !*** ./node_modules/axios/lib/defaults.js ***!
  \********************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(process) {

var utils = __webpack_require__(/*! ./utils */ "./node_modules/axios/lib/utils.js");
var normalizeHeaderName = __webpack_require__(/*! ./helpers/normalizeHeaderName */ "./node_modules/axios/lib/helpers/normalizeHeaderName.js");

var DEFAULT_CONTENT_TYPE = {
  'Content-Type': 'application/x-www-form-urlencoded'
};

function setContentTypeIfUnset(headers, value) {
  if (!utils.isUndefined(headers) && utils.isUndefined(headers['Content-Type'])) {
    headers['Content-Type'] = value;
  }
}

function getDefaultAdapter() {
  var adapter;
  if (typeof XMLHttpRequest !== 'undefined') {
    // For browsers use XHR adapter
    adapter = __webpack_require__(/*! ./adapters/xhr */ "./node_modules/axios/lib/adapters/xhr.js");
  } else if (typeof process !== 'undefined') {
    // For node use HTTP adapter
    adapter = __webpack_require__(/*! ./adapters/http */ "./node_modules/axios/lib/adapters/xhr.js");
  }
  return adapter;
}

var defaults = {
  adapter: getDefaultAdapter(),

  transformRequest: [function transformRequest(data, headers) {
    normalizeHeaderName(headers, 'Content-Type');
    if (utils.isFormData(data) ||
      utils.isArrayBuffer(data) ||
      utils.isBuffer(data) ||
      utils.isStream(data) ||
      utils.isFile(data) ||
      utils.isBlob(data)
    ) {
      return data;
    }
    if (utils.isArrayBufferView(data)) {
      return data.buffer;
    }
    if (utils.isURLSearchParams(data)) {
      setContentTypeIfUnset(headers, 'application/x-www-form-urlencoded;charset=utf-8');
      return data.toString();
    }
    if (utils.isObject(data)) {
      setContentTypeIfUnset(headers, 'application/json;charset=utf-8');
      return JSON.stringify(data);
    }
    return data;
  }],

  transformResponse: [function transformResponse(data) {
    /*eslint no-param-reassign:0*/
    if (typeof data === 'string') {
      try {
        data = JSON.parse(data);
      } catch (e) { /* Ignore */ }
    }
    return data;
  }],

  /**
   * A timeout in milliseconds to abort a request. If set to 0 (default) a
   * timeout is not created.
   */
  timeout: 0,

  xsrfCookieName: 'XSRF-TOKEN',
  xsrfHeaderName: 'X-XSRF-TOKEN',

  maxContentLength: -1,

  validateStatus: function validateStatus(status) {
    return status >= 200 && status < 300;
  }
};

defaults.headers = {
  common: {
    'Accept': 'application/json, text/plain, */*'
  }
};

utils.forEach(['delete', 'get', 'head'], function forEachMethodNoData(method) {
  defaults.headers[method] = {};
});

utils.forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {
  defaults.headers[method] = utils.merge(DEFAULT_CONTENT_TYPE);
});

module.exports = defaults;

/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(/*! ./../../process/browser.js */ "./node_modules/process/browser.js")))

/***/ }),

/***/ "./node_modules/axios/lib/helpers/bind.js":
/*!************************************************!*\
  !*** ./node_modules/axios/lib/helpers/bind.js ***!
  \************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


module.exports = function bind(fn, thisArg) {
  return function wrap() {
    var args = new Array(arguments.length);
    for (var i = 0; i < args.length; i++) {
      args[i] = arguments[i];
    }
    return fn.apply(thisArg, args);
  };
};


/***/ }),

/***/ "./node_modules/axios/lib/helpers/btoa.js":
/*!************************************************!*\
  !*** ./node_modules/axios/lib/helpers/btoa.js ***!
  \************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


// btoa polyfill for IE<10 courtesy https://github.com/davidchambers/Base64.js

var chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';

function E() {
  this.message = 'String contains an invalid character';
}
E.prototype = new Error;
E.prototype.code = 5;
E.prototype.name = 'InvalidCharacterError';

function btoa(input) {
  var str = String(input);
  var output = '';
  for (
    // initialize result and counter
    var block, charCode, idx = 0, map = chars;
    // if the next str index does not exist:
    //   change the mapping table to "="
    //   check if d has no fractional digits
    str.charAt(idx | 0) || (map = '=', idx % 1);
    // "8 - idx % 1 * 8" generates the sequence 2, 4, 6, 8
    output += map.charAt(63 & block >> 8 - idx % 1 * 8)
  ) {
    charCode = str.charCodeAt(idx += 3 / 4);
    if (charCode > 0xFF) {
      throw new E();
    }
    block = block << 8 | charCode;
  }
  return output;
}

module.exports = btoa;


/***/ }),

/***/ "./node_modules/axios/lib/helpers/buildURL.js":
/*!****************************************************!*\
  !*** ./node_modules/axios/lib/helpers/buildURL.js ***!
  \****************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var utils = __webpack_require__(/*! ./../utils */ "./node_modules/axios/lib/utils.js");

function encode(val) {
  return encodeURIComponent(val).
    replace(/%40/gi, '@').
    replace(/%3A/gi, ':').
    replace(/%24/g, '$').
    replace(/%2C/gi, ',').
    replace(/%20/g, '+').
    replace(/%5B/gi, '[').
    replace(/%5D/gi, ']');
}

/**
 * Build a URL by appending params to the end
 *
 * @param {string} url The base of the url (e.g., http://www.google.com)
 * @param {object} [params] The params to be appended
 * @returns {string} The formatted url
 */
module.exports = function buildURL(url, params, paramsSerializer) {
  /*eslint no-param-reassign:0*/
  if (!params) {
    return url;
  }

  var serializedParams;
  if (paramsSerializer) {
    serializedParams = paramsSerializer(params);
  } else if (utils.isURLSearchParams(params)) {
    serializedParams = params.toString();
  } else {
    var parts = [];

    utils.forEach(params, function serialize(val, key) {
      if (val === null || typeof val === 'undefined') {
        return;
      }

      if (utils.isArray(val)) {
        key = key + '[]';
      } else {
        val = [val];
      }

      utils.forEach(val, function parseValue(v) {
        if (utils.isDate(v)) {
          v = v.toISOString();
        } else if (utils.isObject(v)) {
          v = JSON.stringify(v);
        }
        parts.push(encode(key) + '=' + encode(v));
      });
    });

    serializedParams = parts.join('&');
  }

  if (serializedParams) {
    url += (url.indexOf('?') === -1 ? '?' : '&') + serializedParams;
  }

  return url;
};


/***/ }),

/***/ "./node_modules/axios/lib/helpers/combineURLs.js":
/*!*******************************************************!*\
  !*** ./node_modules/axios/lib/helpers/combineURLs.js ***!
  \*******************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


/**
 * Creates a new URL by combining the specified URLs
 *
 * @param {string} baseURL The base URL
 * @param {string} relativeURL The relative URL
 * @returns {string} The combined URL
 */
module.exports = function combineURLs(baseURL, relativeURL) {
  return relativeURL
    ? baseURL.replace(/\/+$/, '') + '/' + relativeURL.replace(/^\/+/, '')
    : baseURL;
};


/***/ }),

/***/ "./node_modules/axios/lib/helpers/cookies.js":
/*!***************************************************!*\
  !*** ./node_modules/axios/lib/helpers/cookies.js ***!
  \***************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var utils = __webpack_require__(/*! ./../utils */ "./node_modules/axios/lib/utils.js");

module.exports = (
  utils.isStandardBrowserEnv() ?

  // Standard browser envs support document.cookie
  (function standardBrowserEnv() {
    return {
      write: function write(name, value, expires, path, domain, secure) {
        var cookie = [];
        cookie.push(name + '=' + encodeURIComponent(value));

        if (utils.isNumber(expires)) {
          cookie.push('expires=' + new Date(expires).toGMTString());
        }

        if (utils.isString(path)) {
          cookie.push('path=' + path);
        }

        if (utils.isString(domain)) {
          cookie.push('domain=' + domain);
        }

        if (secure === true) {
          cookie.push('secure');
        }

        document.cookie = cookie.join('; ');
      },

      read: function read(name) {
        var match = document.cookie.match(new RegExp('(^|;\\s*)(' + name + ')=([^;]*)'));
        return (match ? decodeURIComponent(match[3]) : null);
      },

      remove: function remove(name) {
        this.write(name, '', Date.now() - 86400000);
      }
    };
  })() :

  // Non standard browser env (web workers, react-native) lack needed support.
  (function nonStandardBrowserEnv() {
    return {
      write: function write() {},
      read: function read() { return null; },
      remove: function remove() {}
    };
  })()
);


/***/ }),

/***/ "./node_modules/axios/lib/helpers/isAbsoluteURL.js":
/*!*********************************************************!*\
  !*** ./node_modules/axios/lib/helpers/isAbsoluteURL.js ***!
  \*********************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


/**
 * Determines whether the specified URL is absolute
 *
 * @param {string} url The URL to test
 * @returns {boolean} True if the specified URL is absolute, otherwise false
 */
module.exports = function isAbsoluteURL(url) {
  // A URL is considered absolute if it begins with "<scheme>://" or "//" (protocol-relative URL).
  // RFC 3986 defines scheme name as a sequence of characters beginning with a letter and followed
  // by any combination of letters, digits, plus, period, or hyphen.
  return /^([a-z][a-z\d\+\-\.]*:)?\/\//i.test(url);
};


/***/ }),

/***/ "./node_modules/axios/lib/helpers/isURLSameOrigin.js":
/*!***********************************************************!*\
  !*** ./node_modules/axios/lib/helpers/isURLSameOrigin.js ***!
  \***********************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var utils = __webpack_require__(/*! ./../utils */ "./node_modules/axios/lib/utils.js");

module.exports = (
  utils.isStandardBrowserEnv() ?

  // Standard browser envs have full support of the APIs needed to test
  // whether the request URL is of the same origin as current location.
  (function standardBrowserEnv() {
    var msie = /(msie|trident)/i.test(navigator.userAgent);
    var urlParsingNode = document.createElement('a');
    var originURL;

    /**
    * Parse a URL to discover it's components
    *
    * @param {String} url The URL to be parsed
    * @returns {Object}
    */
    function resolveURL(url) {
      var href = url;

      if (msie) {
        // IE needs attribute set twice to normalize properties
        urlParsingNode.setAttribute('href', href);
        href = urlParsingNode.href;
      }

      urlParsingNode.setAttribute('href', href);

      // urlParsingNode provides the UrlUtils interface - http://url.spec.whatwg.org/#urlutils
      return {
        href: urlParsingNode.href,
        protocol: urlParsingNode.protocol ? urlParsingNode.protocol.replace(/:$/, '') : '',
        host: urlParsingNode.host,
        search: urlParsingNode.search ? urlParsingNode.search.replace(/^\?/, '') : '',
        hash: urlParsingNode.hash ? urlParsingNode.hash.replace(/^#/, '') : '',
        hostname: urlParsingNode.hostname,
        port: urlParsingNode.port,
        pathname: (urlParsingNode.pathname.charAt(0) === '/') ?
                  urlParsingNode.pathname :
                  '/' + urlParsingNode.pathname
      };
    }

    originURL = resolveURL(window.location.href);

    /**
    * Determine if a URL shares the same origin as the current location
    *
    * @param {String} requestURL The URL to test
    * @returns {boolean} True if URL shares the same origin, otherwise false
    */
    return function isURLSameOrigin(requestURL) {
      var parsed = (utils.isString(requestURL)) ? resolveURL(requestURL) : requestURL;
      return (parsed.protocol === originURL.protocol &&
            parsed.host === originURL.host);
    };
  })() :

  // Non standard browser envs (web workers, react-native) lack needed support.
  (function nonStandardBrowserEnv() {
    return function isURLSameOrigin() {
      return true;
    };
  })()
);


/***/ }),

/***/ "./node_modules/axios/lib/helpers/normalizeHeaderName.js":
/*!***************************************************************!*\
  !*** ./node_modules/axios/lib/helpers/normalizeHeaderName.js ***!
  \***************************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var utils = __webpack_require__(/*! ../utils */ "./node_modules/axios/lib/utils.js");

module.exports = function normalizeHeaderName(headers, normalizedName) {
  utils.forEach(headers, function processHeader(value, name) {
    if (name !== normalizedName && name.toUpperCase() === normalizedName.toUpperCase()) {
      headers[normalizedName] = value;
      delete headers[name];
    }
  });
};


/***/ }),

/***/ "./node_modules/axios/lib/helpers/parseHeaders.js":
/*!********************************************************!*\
  !*** ./node_modules/axios/lib/helpers/parseHeaders.js ***!
  \********************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var utils = __webpack_require__(/*! ./../utils */ "./node_modules/axios/lib/utils.js");

// Headers whose duplicates are ignored by node
// c.f. https://nodejs.org/api/http.html#http_message_headers
var ignoreDuplicateOf = [
  'age', 'authorization', 'content-length', 'content-type', 'etag',
  'expires', 'from', 'host', 'if-modified-since', 'if-unmodified-since',
  'last-modified', 'location', 'max-forwards', 'proxy-authorization',
  'referer', 'retry-after', 'user-agent'
];

/**
 * Parse headers into an object
 *
 * ```
 * Date: Wed, 27 Aug 2014 08:58:49 GMT
 * Content-Type: application/json
 * Connection: keep-alive
 * Transfer-Encoding: chunked
 * ```
 *
 * @param {String} headers Headers needing to be parsed
 * @returns {Object} Headers parsed into an object
 */
module.exports = function parseHeaders(headers) {
  var parsed = {};
  var key;
  var val;
  var i;

  if (!headers) { return parsed; }

  utils.forEach(headers.split('\n'), function parser(line) {
    i = line.indexOf(':');
    key = utils.trim(line.substr(0, i)).toLowerCase();
    val = utils.trim(line.substr(i + 1));

    if (key) {
      if (parsed[key] && ignoreDuplicateOf.indexOf(key) >= 0) {
        return;
      }
      if (key === 'set-cookie') {
        parsed[key] = (parsed[key] ? parsed[key] : []).concat([val]);
      } else {
        parsed[key] = parsed[key] ? parsed[key] + ', ' + val : val;
      }
    }
  });

  return parsed;
};


/***/ }),

/***/ "./node_modules/axios/lib/helpers/spread.js":
/*!**************************************************!*\
  !*** ./node_modules/axios/lib/helpers/spread.js ***!
  \**************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


/**
 * Syntactic sugar for invoking a function and expanding an array for arguments.
 *
 * Common use case would be to use `Function.prototype.apply`.
 *
 *  ```js
 *  function f(x, y, z) {}
 *  var args = [1, 2, 3];
 *  f.apply(null, args);
 *  ```
 *
 * With `spread` this example can be re-written.
 *
 *  ```js
 *  spread(function(x, y, z) {})([1, 2, 3]);
 *  ```
 *
 * @param {Function} callback
 * @returns {Function}
 */
module.exports = function spread(callback) {
  return function wrap(arr) {
    return callback.apply(null, arr);
  };
};


/***/ }),

/***/ "./node_modules/axios/lib/utils.js":
/*!*****************************************!*\
  !*** ./node_modules/axios/lib/utils.js ***!
  \*****************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var bind = __webpack_require__(/*! ./helpers/bind */ "./node_modules/axios/lib/helpers/bind.js");
var isBuffer = __webpack_require__(/*! is-buffer */ "./node_modules/is-buffer/index.js");

/*global toString:true*/

// utils is a library of generic helper functions non-specific to axios

var toString = Object.prototype.toString;

/**
 * Determine if a value is an Array
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is an Array, otherwise false
 */
function isArray(val) {
  return toString.call(val) === '[object Array]';
}

/**
 * Determine if a value is an ArrayBuffer
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is an ArrayBuffer, otherwise false
 */
function isArrayBuffer(val) {
  return toString.call(val) === '[object ArrayBuffer]';
}

/**
 * Determine if a value is a FormData
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is an FormData, otherwise false
 */
function isFormData(val) {
  return (typeof FormData !== 'undefined') && (val instanceof FormData);
}

/**
 * Determine if a value is a view on an ArrayBuffer
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is a view on an ArrayBuffer, otherwise false
 */
function isArrayBufferView(val) {
  var result;
  if ((typeof ArrayBuffer !== 'undefined') && (ArrayBuffer.isView)) {
    result = ArrayBuffer.isView(val);
  } else {
    result = (val) && (val.buffer) && (val.buffer instanceof ArrayBuffer);
  }
  return result;
}

/**
 * Determine if a value is a String
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is a String, otherwise false
 */
function isString(val) {
  return typeof val === 'string';
}

/**
 * Determine if a value is a Number
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is a Number, otherwise false
 */
function isNumber(val) {
  return typeof val === 'number';
}

/**
 * Determine if a value is undefined
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if the value is undefined, otherwise false
 */
function isUndefined(val) {
  return typeof val === 'undefined';
}

/**
 * Determine if a value is an Object
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is an Object, otherwise false
 */
function isObject(val) {
  return val !== null && typeof val === 'object';
}

/**
 * Determine if a value is a Date
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is a Date, otherwise false
 */
function isDate(val) {
  return toString.call(val) === '[object Date]';
}

/**
 * Determine if a value is a File
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is a File, otherwise false
 */
function isFile(val) {
  return toString.call(val) === '[object File]';
}

/**
 * Determine if a value is a Blob
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is a Blob, otherwise false
 */
function isBlob(val) {
  return toString.call(val) === '[object Blob]';
}

/**
 * Determine if a value is a Function
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is a Function, otherwise false
 */
function isFunction(val) {
  return toString.call(val) === '[object Function]';
}

/**
 * Determine if a value is a Stream
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is a Stream, otherwise false
 */
function isStream(val) {
  return isObject(val) && isFunction(val.pipe);
}

/**
 * Determine if a value is a URLSearchParams object
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is a URLSearchParams object, otherwise false
 */
function isURLSearchParams(val) {
  return typeof URLSearchParams !== 'undefined' && val instanceof URLSearchParams;
}

/**
 * Trim excess whitespace off the beginning and end of a string
 *
 * @param {String} str The String to trim
 * @returns {String} The String freed of excess whitespace
 */
function trim(str) {
  return str.replace(/^\s*/, '').replace(/\s*$/, '');
}

/**
 * Determine if we're running in a standard browser environment
 *
 * This allows axios to run in a web worker, and react-native.
 * Both environments support XMLHttpRequest, but not fully standard globals.
 *
 * web workers:
 *  typeof window -> undefined
 *  typeof document -> undefined
 *
 * react-native:
 *  navigator.product -> 'ReactNative'
 */
function isStandardBrowserEnv() {
  if (typeof navigator !== 'undefined' && navigator.product === 'ReactNative') {
    return false;
  }
  return (
    typeof window !== 'undefined' &&
    typeof document !== 'undefined'
  );
}

/**
 * Iterate over an Array or an Object invoking a function for each item.
 *
 * If `obj` is an Array callback will be called passing
 * the value, index, and complete array for each item.
 *
 * If 'obj' is an Object callback will be called passing
 * the value, key, and complete object for each property.
 *
 * @param {Object|Array} obj The object to iterate
 * @param {Function} fn The callback to invoke for each item
 */
function forEach(obj, fn) {
  // Don't bother if no value provided
  if (obj === null || typeof obj === 'undefined') {
    return;
  }

  // Force an array if not already something iterable
  if (typeof obj !== 'object') {
    /*eslint no-param-reassign:0*/
    obj = [obj];
  }

  if (isArray(obj)) {
    // Iterate over array values
    for (var i = 0, l = obj.length; i < l; i++) {
      fn.call(null, obj[i], i, obj);
    }
  } else {
    // Iterate over object keys
    for (var key in obj) {
      if (Object.prototype.hasOwnProperty.call(obj, key)) {
        fn.call(null, obj[key], key, obj);
      }
    }
  }
}

/**
 * Accepts varargs expecting each argument to be an object, then
 * immutably merges the properties of each object and returns result.
 *
 * When multiple objects contain the same key the later object in
 * the arguments list will take precedence.
 *
 * Example:
 *
 * ```js
 * var result = merge({foo: 123}, {foo: 456});
 * console.log(result.foo); // outputs 456
 * ```
 *
 * @param {Object} obj1 Object to merge
 * @returns {Object} Result of all merge properties
 */
function merge(/* obj1, obj2, obj3, ... */) {
  var result = {};
  function assignValue(val, key) {
    if (typeof result[key] === 'object' && typeof val === 'object') {
      result[key] = merge(result[key], val);
    } else {
      result[key] = val;
    }
  }

  for (var i = 0, l = arguments.length; i < l; i++) {
    forEach(arguments[i], assignValue);
  }
  return result;
}

/**
 * Extends object a by mutably adding to it the properties of object b.
 *
 * @param {Object} a The object to be extended
 * @param {Object} b The object to copy properties from
 * @param {Object} thisArg The object to bind function to
 * @return {Object} The resulting value of object a
 */
function extend(a, b, thisArg) {
  forEach(b, function assignValue(val, key) {
    if (thisArg && typeof val === 'function') {
      a[key] = bind(val, thisArg);
    } else {
      a[key] = val;
    }
  });
  return a;
}

module.exports = {
  isArray: isArray,
  isArrayBuffer: isArrayBuffer,
  isBuffer: isBuffer,
  isFormData: isFormData,
  isArrayBufferView: isArrayBufferView,
  isString: isString,
  isNumber: isNumber,
  isObject: isObject,
  isUndefined: isUndefined,
  isDate: isDate,
  isFile: isFile,
  isBlob: isBlob,
  isFunction: isFunction,
  isStream: isStream,
  isURLSearchParams: isURLSearchParams,
  isStandardBrowserEnv: isStandardBrowserEnv,
  forEach: forEach,
  merge: merge,
  extend: extend,
  trim: trim
};


/***/ }),

/***/ "./node_modules/is-buffer/index.js":
/*!*****************************************!*\
  !*** ./node_modules/is-buffer/index.js ***!
  \*****************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports) {

/*!
 * Determine if an object is a Buffer
 *
 * @author   Feross Aboukhadijeh <https://feross.org>
 * @license  MIT
 */

// The _isBuffer check is for Safari 5-7 support, because it's missing
// Object.prototype.constructor. Remove this eventually
module.exports = function (obj) {
  return obj != null && (isBuffer(obj) || isSlowBuffer(obj) || !!obj._isBuffer)
}

function isBuffer (obj) {
  return !!obj.constructor && typeof obj.constructor.isBuffer === 'function' && obj.constructor.isBuffer(obj)
}

// For Node v0.10 support. Remove this eventually.
function isSlowBuffer (obj) {
  return typeof obj.readFloatLE === 'function' && typeof obj.slice === 'function' && isBuffer(obj.slice(0, 0))
}


/***/ }),

/***/ "./node_modules/lodash/_DataView.js":
/*!******************************************!*\
  !*** ./node_modules/lodash/_DataView.js ***!
  \******************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var getNative = __webpack_require__(/*! ./_getNative */ "./node_modules/lodash/_getNative.js"),
    root = __webpack_require__(/*! ./_root */ "./node_modules/lodash/_root.js");

/* Built-in method references that are verified to be native. */
var DataView = getNative(root, 'DataView');

module.exports = DataView;


/***/ }),

/***/ "./node_modules/lodash/_Hash.js":
/*!**************************************!*\
  !*** ./node_modules/lodash/_Hash.js ***!
  \**************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var hashClear = __webpack_require__(/*! ./_hashClear */ "./node_modules/lodash/_hashClear.js"),
    hashDelete = __webpack_require__(/*! ./_hashDelete */ "./node_modules/lodash/_hashDelete.js"),
    hashGet = __webpack_require__(/*! ./_hashGet */ "./node_modules/lodash/_hashGet.js"),
    hashHas = __webpack_require__(/*! ./_hashHas */ "./node_modules/lodash/_hashHas.js"),
    hashSet = __webpack_require__(/*! ./_hashSet */ "./node_modules/lodash/_hashSet.js");

/**
 * Creates a hash object.
 *
 * @private
 * @constructor
 * @param {Array} [entries] The key-value pairs to cache.
 */
function Hash(entries) {
  var index = -1,
      length = entries == null ? 0 : entries.length;

  this.clear();
  while (++index < length) {
    var entry = entries[index];
    this.set(entry[0], entry[1]);
  }
}

// Add methods to `Hash`.
Hash.prototype.clear = hashClear;
Hash.prototype['delete'] = hashDelete;
Hash.prototype.get = hashGet;
Hash.prototype.has = hashHas;
Hash.prototype.set = hashSet;

module.exports = Hash;


/***/ }),

/***/ "./node_modules/lodash/_ListCache.js":
/*!*******************************************!*\
  !*** ./node_modules/lodash/_ListCache.js ***!
  \*******************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var listCacheClear = __webpack_require__(/*! ./_listCacheClear */ "./node_modules/lodash/_listCacheClear.js"),
    listCacheDelete = __webpack_require__(/*! ./_listCacheDelete */ "./node_modules/lodash/_listCacheDelete.js"),
    listCacheGet = __webpack_require__(/*! ./_listCacheGet */ "./node_modules/lodash/_listCacheGet.js"),
    listCacheHas = __webpack_require__(/*! ./_listCacheHas */ "./node_modules/lodash/_listCacheHas.js"),
    listCacheSet = __webpack_require__(/*! ./_listCacheSet */ "./node_modules/lodash/_listCacheSet.js");

/**
 * Creates an list cache object.
 *
 * @private
 * @constructor
 * @param {Array} [entries] The key-value pairs to cache.
 */
function ListCache(entries) {
  var index = -1,
      length = entries == null ? 0 : entries.length;

  this.clear();
  while (++index < length) {
    var entry = entries[index];
    this.set(entry[0], entry[1]);
  }
}

// Add methods to `ListCache`.
ListCache.prototype.clear = listCacheClear;
ListCache.prototype['delete'] = listCacheDelete;
ListCache.prototype.get = listCacheGet;
ListCache.prototype.has = listCacheHas;
ListCache.prototype.set = listCacheSet;

module.exports = ListCache;


/***/ }),

/***/ "./node_modules/lodash/_Map.js":
/*!*************************************!*\
  !*** ./node_modules/lodash/_Map.js ***!
  \*************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var getNative = __webpack_require__(/*! ./_getNative */ "./node_modules/lodash/_getNative.js"),
    root = __webpack_require__(/*! ./_root */ "./node_modules/lodash/_root.js");

/* Built-in method references that are verified to be native. */
var Map = getNative(root, 'Map');

module.exports = Map;


/***/ }),

/***/ "./node_modules/lodash/_MapCache.js":
/*!******************************************!*\
  !*** ./node_modules/lodash/_MapCache.js ***!
  \******************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var mapCacheClear = __webpack_require__(/*! ./_mapCacheClear */ "./node_modules/lodash/_mapCacheClear.js"),
    mapCacheDelete = __webpack_require__(/*! ./_mapCacheDelete */ "./node_modules/lodash/_mapCacheDelete.js"),
    mapCacheGet = __webpack_require__(/*! ./_mapCacheGet */ "./node_modules/lodash/_mapCacheGet.js"),
    mapCacheHas = __webpack_require__(/*! ./_mapCacheHas */ "./node_modules/lodash/_mapCacheHas.js"),
    mapCacheSet = __webpack_require__(/*! ./_mapCacheSet */ "./node_modules/lodash/_mapCacheSet.js");

/**
 * Creates a map cache object to store key-value pairs.
 *
 * @private
 * @constructor
 * @param {Array} [entries] The key-value pairs to cache.
 */
function MapCache(entries) {
  var index = -1,
      length = entries == null ? 0 : entries.length;

  this.clear();
  while (++index < length) {
    var entry = entries[index];
    this.set(entry[0], entry[1]);
  }
}

// Add methods to `MapCache`.
MapCache.prototype.clear = mapCacheClear;
MapCache.prototype['delete'] = mapCacheDelete;
MapCache.prototype.get = mapCacheGet;
MapCache.prototype.has = mapCacheHas;
MapCache.prototype.set = mapCacheSet;

module.exports = MapCache;


/***/ }),

/***/ "./node_modules/lodash/_Promise.js":
/*!*****************************************!*\
  !*** ./node_modules/lodash/_Promise.js ***!
  \*****************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var getNative = __webpack_require__(/*! ./_getNative */ "./node_modules/lodash/_getNative.js"),
    root = __webpack_require__(/*! ./_root */ "./node_modules/lodash/_root.js");

/* Built-in method references that are verified to be native. */
var Promise = getNative(root, 'Promise');

module.exports = Promise;


/***/ }),

/***/ "./node_modules/lodash/_Set.js":
/*!*************************************!*\
  !*** ./node_modules/lodash/_Set.js ***!
  \*************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var getNative = __webpack_require__(/*! ./_getNative */ "./node_modules/lodash/_getNative.js"),
    root = __webpack_require__(/*! ./_root */ "./node_modules/lodash/_root.js");

/* Built-in method references that are verified to be native. */
var Set = getNative(root, 'Set');

module.exports = Set;


/***/ }),

/***/ "./node_modules/lodash/_SetCache.js":
/*!******************************************!*\
  !*** ./node_modules/lodash/_SetCache.js ***!
  \******************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var MapCache = __webpack_require__(/*! ./_MapCache */ "./node_modules/lodash/_MapCache.js"),
    setCacheAdd = __webpack_require__(/*! ./_setCacheAdd */ "./node_modules/lodash/_setCacheAdd.js"),
    setCacheHas = __webpack_require__(/*! ./_setCacheHas */ "./node_modules/lodash/_setCacheHas.js");

/**
 *
 * Creates an array cache object to store unique values.
 *
 * @private
 * @constructor
 * @param {Array} [values] The values to cache.
 */
function SetCache(values) {
  var index = -1,
      length = values == null ? 0 : values.length;

  this.__data__ = new MapCache;
  while (++index < length) {
    this.add(values[index]);
  }
}

// Add methods to `SetCache`.
SetCache.prototype.add = SetCache.prototype.push = setCacheAdd;
SetCache.prototype.has = setCacheHas;

module.exports = SetCache;


/***/ }),

/***/ "./node_modules/lodash/_Stack.js":
/*!***************************************!*\
  !*** ./node_modules/lodash/_Stack.js ***!
  \***************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var ListCache = __webpack_require__(/*! ./_ListCache */ "./node_modules/lodash/_ListCache.js"),
    stackClear = __webpack_require__(/*! ./_stackClear */ "./node_modules/lodash/_stackClear.js"),
    stackDelete = __webpack_require__(/*! ./_stackDelete */ "./node_modules/lodash/_stackDelete.js"),
    stackGet = __webpack_require__(/*! ./_stackGet */ "./node_modules/lodash/_stackGet.js"),
    stackHas = __webpack_require__(/*! ./_stackHas */ "./node_modules/lodash/_stackHas.js"),
    stackSet = __webpack_require__(/*! ./_stackSet */ "./node_modules/lodash/_stackSet.js");

/**
 * Creates a stack cache object to store key-value pairs.
 *
 * @private
 * @constructor
 * @param {Array} [entries] The key-value pairs to cache.
 */
function Stack(entries) {
  var data = this.__data__ = new ListCache(entries);
  this.size = data.size;
}

// Add methods to `Stack`.
Stack.prototype.clear = stackClear;
Stack.prototype['delete'] = stackDelete;
Stack.prototype.get = stackGet;
Stack.prototype.has = stackHas;
Stack.prototype.set = stackSet;

module.exports = Stack;


/***/ }),

/***/ "./node_modules/lodash/_Symbol.js":
/*!****************************************!*\
  !*** ./node_modules/lodash/_Symbol.js ***!
  \****************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var root = __webpack_require__(/*! ./_root */ "./node_modules/lodash/_root.js");

/** Built-in value references. */
var Symbol = root.Symbol;

module.exports = Symbol;


/***/ }),

/***/ "./node_modules/lodash/_Uint8Array.js":
/*!********************************************!*\
  !*** ./node_modules/lodash/_Uint8Array.js ***!
  \********************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var root = __webpack_require__(/*! ./_root */ "./node_modules/lodash/_root.js");

/** Built-in value references. */
var Uint8Array = root.Uint8Array;

module.exports = Uint8Array;


/***/ }),

/***/ "./node_modules/lodash/_WeakMap.js":
/*!*****************************************!*\
  !*** ./node_modules/lodash/_WeakMap.js ***!
  \*****************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var getNative = __webpack_require__(/*! ./_getNative */ "./node_modules/lodash/_getNative.js"),
    root = __webpack_require__(/*! ./_root */ "./node_modules/lodash/_root.js");

/* Built-in method references that are verified to be native. */
var WeakMap = getNative(root, 'WeakMap');

module.exports = WeakMap;


/***/ }),

/***/ "./node_modules/lodash/_apply.js":
/*!***************************************!*\
  !*** ./node_modules/lodash/_apply.js ***!
  \***************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports) {

/**
 * A faster alternative to `Function#apply`, this function invokes `func`
 * with the `this` binding of `thisArg` and the arguments of `args`.
 *
 * @private
 * @param {Function} func The function to invoke.
 * @param {*} thisArg The `this` binding of `func`.
 * @param {Array} args The arguments to invoke `func` with.
 * @returns {*} Returns the result of `func`.
 */
function apply(func, thisArg, args) {
  switch (args.length) {
    case 0: return func.call(thisArg);
    case 1: return func.call(thisArg, args[0]);
    case 2: return func.call(thisArg, args[0], args[1]);
    case 3: return func.call(thisArg, args[0], args[1], args[2]);
  }
  return func.apply(thisArg, args);
}

module.exports = apply;


/***/ }),

/***/ "./node_modules/lodash/_arrayEach.js":
/*!*******************************************!*\
  !*** ./node_modules/lodash/_arrayEach.js ***!
  \*******************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports) {

/**
 * A specialized version of `_.forEach` for arrays without support for
 * iteratee shorthands.
 *
 * @private
 * @param {Array} [array] The array to iterate over.
 * @param {Function} iteratee The function invoked per iteration.
 * @returns {Array} Returns `array`.
 */
function arrayEach(array, iteratee) {
  var index = -1,
      length = array == null ? 0 : array.length;

  while (++index < length) {
    if (iteratee(array[index], index, array) === false) {
      break;
    }
  }
  return array;
}

module.exports = arrayEach;


/***/ }),

/***/ "./node_modules/lodash/_arrayFilter.js":
/*!*********************************************!*\
  !*** ./node_modules/lodash/_arrayFilter.js ***!
  \*********************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports) {

/**
 * A specialized version of `_.filter` for arrays without support for
 * iteratee shorthands.
 *
 * @private
 * @param {Array} [array] The array to iterate over.
 * @param {Function} predicate The function invoked per iteration.
 * @returns {Array} Returns the new filtered array.
 */
function arrayFilter(array, predicate) {
  var index = -1,
      length = array == null ? 0 : array.length,
      resIndex = 0,
      result = [];

  while (++index < length) {
    var value = array[index];
    if (predicate(value, index, array)) {
      result[resIndex++] = value;
    }
  }
  return result;
}

module.exports = arrayFilter;


/***/ }),

/***/ "./node_modules/lodash/_arrayIncludes.js":
/*!***********************************************!*\
  !*** ./node_modules/lodash/_arrayIncludes.js ***!
  \***********************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var baseIndexOf = __webpack_require__(/*! ./_baseIndexOf */ "./node_modules/lodash/_baseIndexOf.js");

/**
 * A specialized version of `_.includes` for arrays without support for
 * specifying an index to search from.
 *
 * @private
 * @param {Array} [array] The array to inspect.
 * @param {*} target The value to search for.
 * @returns {boolean} Returns `true` if `target` is found, else `false`.
 */
function arrayIncludes(array, value) {
  var length = array == null ? 0 : array.length;
  return !!length && baseIndexOf(array, value, 0) > -1;
}

module.exports = arrayIncludes;


/***/ }),

/***/ "./node_modules/lodash/_arrayIncludesWith.js":
/*!***************************************************!*\
  !*** ./node_modules/lodash/_arrayIncludesWith.js ***!
  \***************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports) {

/**
 * This function is like `arrayIncludes` except that it accepts a comparator.
 *
 * @private
 * @param {Array} [array] The array to inspect.
 * @param {*} target The value to search for.
 * @param {Function} comparator The comparator invoked per element.
 * @returns {boolean} Returns `true` if `target` is found, else `false`.
 */
function arrayIncludesWith(array, value, comparator) {
  var index = -1,
      length = array == null ? 0 : array.length;

  while (++index < length) {
    if (comparator(value, array[index])) {
      return true;
    }
  }
  return false;
}

module.exports = arrayIncludesWith;


/***/ }),

/***/ "./node_modules/lodash/_arrayLikeKeys.js":
/*!***********************************************!*\
  !*** ./node_modules/lodash/_arrayLikeKeys.js ***!
  \***********************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var baseTimes = __webpack_require__(/*! ./_baseTimes */ "./node_modules/lodash/_baseTimes.js"),
    isArguments = __webpack_require__(/*! ./isArguments */ "./node_modules/lodash/isArguments.js"),
    isArray = __webpack_require__(/*! ./isArray */ "./node_modules/lodash/isArray.js"),
    isBuffer = __webpack_require__(/*! ./isBuffer */ "./node_modules/lodash/isBuffer.js"),
    isIndex = __webpack_require__(/*! ./_isIndex */ "./node_modules/lodash/_isIndex.js"),
    isTypedArray = __webpack_require__(/*! ./isTypedArray */ "./node_modules/lodash/isTypedArray.js");

/** Used for built-in method references. */
var objectProto = Object.prototype;

/** Used to check objects for own properties. */
var hasOwnProperty = objectProto.hasOwnProperty;

/**
 * Creates an array of the enumerable property names of the array-like `value`.
 *
 * @private
 * @param {*} value The value to query.
 * @param {boolean} inherited Specify returning inherited property names.
 * @returns {Array} Returns the array of property names.
 */
function arrayLikeKeys(value, inherited) {
  var isArr = isArray(value),
      isArg = !isArr && isArguments(value),
      isBuff = !isArr && !isArg && isBuffer(value),
      isType = !isArr && !isArg && !isBuff && isTypedArray(value),
      skipIndexes = isArr || isArg || isBuff || isType,
      result = skipIndexes ? baseTimes(value.length, String) : [],
      length = result.length;

  for (var key in value) {
    if ((inherited || hasOwnProperty.call(value, key)) &&
        !(skipIndexes && (
           // Safari 9 has enumerable `arguments.length` in strict mode.
           key == 'length' ||
           // Node.js 0.10 has enumerable non-index properties on buffers.
           (isBuff && (key == 'offset' || key == 'parent')) ||
           // PhantomJS 2 has enumerable non-index properties on typed arrays.
           (isType && (key == 'buffer' || key == 'byteLength' || key == 'byteOffset')) ||
           // Skip index properties.
           isIndex(key, length)
        ))) {
      result.push(key);
    }
  }
  return result;
}

module.exports = arrayLikeKeys;


/***/ }),

/***/ "./node_modules/lodash/_arrayMap.js":
/*!******************************************!*\
  !*** ./node_modules/lodash/_arrayMap.js ***!
  \******************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports) {

/**
 * A specialized version of `_.map` for arrays without support for iteratee
 * shorthands.
 *
 * @private
 * @param {Array} [array] The array to iterate over.
 * @param {Function} iteratee The function invoked per iteration.
 * @returns {Array} Returns the new mapped array.
 */
function arrayMap(array, iteratee) {
  var index = -1,
      length = array == null ? 0 : array.length,
      result = Array(length);

  while (++index < length) {
    result[index] = iteratee(array[index], index, array);
  }
  return result;
}

module.exports = arrayMap;


/***/ }),

/***/ "./node_modules/lodash/_arrayPush.js":
/*!*******************************************!*\
  !*** ./node_modules/lodash/_arrayPush.js ***!
  \*******************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports) {

/**
 * Appends the elements of `values` to `array`.
 *
 * @private
 * @param {Array} array The array to modify.
 * @param {Array} values The values to append.
 * @returns {Array} Returns `array`.
 */
function arrayPush(array, values) {
  var index = -1,
      length = values.length,
      offset = array.length;

  while (++index < length) {
    array[offset + index] = values[index];
  }
  return array;
}

module.exports = arrayPush;


/***/ }),

/***/ "./node_modules/lodash/_arraySome.js":
/*!*******************************************!*\
  !*** ./node_modules/lodash/_arraySome.js ***!
  \*******************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports) {

/**
 * A specialized version of `_.some` for arrays without support for iteratee
 * shorthands.
 *
 * @private
 * @param {Array} [array] The array to iterate over.
 * @param {Function} predicate The function invoked per iteration.
 * @returns {boolean} Returns `true` if any element passes the predicate check,
 *  else `false`.
 */
function arraySome(array, predicate) {
  var index = -1,
      length = array == null ? 0 : array.length;

  while (++index < length) {
    if (predicate(array[index], index, array)) {
      return true;
    }
  }
  return false;
}

module.exports = arraySome;


/***/ }),

/***/ "./node_modules/lodash/_assignValue.js":
/*!*********************************************!*\
  !*** ./node_modules/lodash/_assignValue.js ***!
  \*********************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var baseAssignValue = __webpack_require__(/*! ./_baseAssignValue */ "./node_modules/lodash/_baseAssignValue.js"),
    eq = __webpack_require__(/*! ./eq */ "./node_modules/lodash/eq.js");

/** Used for built-in method references. */
var objectProto = Object.prototype;

/** Used to check objects for own properties. */
var hasOwnProperty = objectProto.hasOwnProperty;

/**
 * Assigns `value` to `key` of `object` if the existing value is not equivalent
 * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
 * for equality comparisons.
 *
 * @private
 * @param {Object} object The object to modify.
 * @param {string} key The key of the property to assign.
 * @param {*} value The value to assign.
 */
function assignValue(object, key, value) {
  var objValue = object[key];
  if (!(hasOwnProperty.call(object, key) && eq(objValue, value)) ||
      (value === undefined && !(key in object))) {
    baseAssignValue(object, key, value);
  }
}

module.exports = assignValue;


/***/ }),

/***/ "./node_modules/lodash/_assocIndexOf.js":
/*!**********************************************!*\
  !*** ./node_modules/lodash/_assocIndexOf.js ***!
  \**********************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var eq = __webpack_require__(/*! ./eq */ "./node_modules/lodash/eq.js");

/**
 * Gets the index at which the `key` is found in `array` of key-value pairs.
 *
 * @private
 * @param {Array} array The array to inspect.
 * @param {*} key The key to search for.
 * @returns {number} Returns the index of the matched value, else `-1`.
 */
function assocIndexOf(array, key) {
  var length = array.length;
  while (length--) {
    if (eq(array[length][0], key)) {
      return length;
    }
  }
  return -1;
}

module.exports = assocIndexOf;


/***/ }),

/***/ "./node_modules/lodash/_baseAssign.js":
/*!********************************************!*\
  !*** ./node_modules/lodash/_baseAssign.js ***!
  \********************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var copyObject = __webpack_require__(/*! ./_copyObject */ "./node_modules/lodash/_copyObject.js"),
    keys = __webpack_require__(/*! ./keys */ "./node_modules/lodash/keys.js");

/**
 * The base implementation of `_.assign` without support for multiple sources
 * or `customizer` functions.
 *
 * @private
 * @param {Object} object The destination object.
 * @param {Object} source The source object.
 * @returns {Object} Returns `object`.
 */
function baseAssign(object, source) {
  return object && copyObject(source, keys(source), object);
}

module.exports = baseAssign;


/***/ }),

/***/ "./node_modules/lodash/_baseAssignIn.js":
/*!**********************************************!*\
  !*** ./node_modules/lodash/_baseAssignIn.js ***!
  \**********************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var copyObject = __webpack_require__(/*! ./_copyObject */ "./node_modules/lodash/_copyObject.js"),
    keysIn = __webpack_require__(/*! ./keysIn */ "./node_modules/lodash/keysIn.js");

/**
 * The base implementation of `_.assignIn` without support for multiple sources
 * or `customizer` functions.
 *
 * @private
 * @param {Object} object The destination object.
 * @param {Object} source The source object.
 * @returns {Object} Returns `object`.
 */
function baseAssignIn(object, source) {
  return object && copyObject(source, keysIn(source), object);
}

module.exports = baseAssignIn;


/***/ }),

/***/ "./node_modules/lodash/_baseAssignValue.js":
/*!*************************************************!*\
  !*** ./node_modules/lodash/_baseAssignValue.js ***!
  \*************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var defineProperty = __webpack_require__(/*! ./_defineProperty */ "./node_modules/lodash/_defineProperty.js");

/**
 * The base implementation of `assignValue` and `assignMergeValue` without
 * value checks.
 *
 * @private
 * @param {Object} object The object to modify.
 * @param {string} key The key of the property to assign.
 * @param {*} value The value to assign.
 */
function baseAssignValue(object, key, value) {
  if (key == '__proto__' && defineProperty) {
    defineProperty(object, key, {
      'configurable': true,
      'enumerable': true,
      'value': value,
      'writable': true
    });
  } else {
    object[key] = value;
  }
}

module.exports = baseAssignValue;


/***/ }),

/***/ "./node_modules/lodash/_baseClone.js":
/*!*******************************************!*\
  !*** ./node_modules/lodash/_baseClone.js ***!
  \*******************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var Stack = __webpack_require__(/*! ./_Stack */ "./node_modules/lodash/_Stack.js"),
    arrayEach = __webpack_require__(/*! ./_arrayEach */ "./node_modules/lodash/_arrayEach.js"),
    assignValue = __webpack_require__(/*! ./_assignValue */ "./node_modules/lodash/_assignValue.js"),
    baseAssign = __webpack_require__(/*! ./_baseAssign */ "./node_modules/lodash/_baseAssign.js"),
    baseAssignIn = __webpack_require__(/*! ./_baseAssignIn */ "./node_modules/lodash/_baseAssignIn.js"),
    cloneBuffer = __webpack_require__(/*! ./_cloneBuffer */ "./node_modules/lodash/_cloneBuffer.js"),
    copyArray = __webpack_require__(/*! ./_copyArray */ "./node_modules/lodash/_copyArray.js"),
    copySymbols = __webpack_require__(/*! ./_copySymbols */ "./node_modules/lodash/_copySymbols.js"),
    copySymbolsIn = __webpack_require__(/*! ./_copySymbolsIn */ "./node_modules/lodash/_copySymbolsIn.js"),
    getAllKeys = __webpack_require__(/*! ./_getAllKeys */ "./node_modules/lodash/_getAllKeys.js"),
    getAllKeysIn = __webpack_require__(/*! ./_getAllKeysIn */ "./node_modules/lodash/_getAllKeysIn.js"),
    getTag = __webpack_require__(/*! ./_getTag */ "./node_modules/lodash/_getTag.js"),
    initCloneArray = __webpack_require__(/*! ./_initCloneArray */ "./node_modules/lodash/_initCloneArray.js"),
    initCloneByTag = __webpack_require__(/*! ./_initCloneByTag */ "./node_modules/lodash/_initCloneByTag.js"),
    initCloneObject = __webpack_require__(/*! ./_initCloneObject */ "./node_modules/lodash/_initCloneObject.js"),
    isArray = __webpack_require__(/*! ./isArray */ "./node_modules/lodash/isArray.js"),
    isBuffer = __webpack_require__(/*! ./isBuffer */ "./node_modules/lodash/isBuffer.js"),
    isMap = __webpack_require__(/*! ./isMap */ "./node_modules/lodash/isMap.js"),
    isObject = __webpack_require__(/*! ./isObject */ "./node_modules/lodash/isObject.js"),
    isSet = __webpack_require__(/*! ./isSet */ "./node_modules/lodash/isSet.js"),
    keys = __webpack_require__(/*! ./keys */ "./node_modules/lodash/keys.js");

/** Used to compose bitmasks for cloning. */
var CLONE_DEEP_FLAG = 1,
    CLONE_FLAT_FLAG = 2,
    CLONE_SYMBOLS_FLAG = 4;

/** `Object#toString` result references. */
var argsTag = '[object Arguments]',
    arrayTag = '[object Array]',
    boolTag = '[object Boolean]',
    dateTag = '[object Date]',
    errorTag = '[object Error]',
    funcTag = '[object Function]',
    genTag = '[object GeneratorFunction]',
    mapTag = '[object Map]',
    numberTag = '[object Number]',
    objectTag = '[object Object]',
    regexpTag = '[object RegExp]',
    setTag = '[object Set]',
    stringTag = '[object String]',
    symbolTag = '[object Symbol]',
    weakMapTag = '[object WeakMap]';

var arrayBufferTag = '[object ArrayBuffer]',
    dataViewTag = '[object DataView]',
    float32Tag = '[object Float32Array]',
    float64Tag = '[object Float64Array]',
    int8Tag = '[object Int8Array]',
    int16Tag = '[object Int16Array]',
    int32Tag = '[object Int32Array]',
    uint8Tag = '[object Uint8Array]',
    uint8ClampedTag = '[object Uint8ClampedArray]',
    uint16Tag = '[object Uint16Array]',
    uint32Tag = '[object Uint32Array]';

/** Used to identify `toStringTag` values supported by `_.clone`. */
var cloneableTags = {};
cloneableTags[argsTag] = cloneableTags[arrayTag] =
cloneableTags[arrayBufferTag] = cloneableTags[dataViewTag] =
cloneableTags[boolTag] = cloneableTags[dateTag] =
cloneableTags[float32Tag] = cloneableTags[float64Tag] =
cloneableTags[int8Tag] = cloneableTags[int16Tag] =
cloneableTags[int32Tag] = cloneableTags[mapTag] =
cloneableTags[numberTag] = cloneableTags[objectTag] =
cloneableTags[regexpTag] = cloneableTags[setTag] =
cloneableTags[stringTag] = cloneableTags[symbolTag] =
cloneableTags[uint8Tag] = cloneableTags[uint8ClampedTag] =
cloneableTags[uint16Tag] = cloneableTags[uint32Tag] = true;
cloneableTags[errorTag] = cloneableTags[funcTag] =
cloneableTags[weakMapTag] = false;

/**
 * The base implementation of `_.clone` and `_.cloneDeep` which tracks
 * traversed objects.
 *
 * @private
 * @param {*} value The value to clone.
 * @param {boolean} bitmask The bitmask flags.
 *  1 - Deep clone
 *  2 - Flatten inherited properties
 *  4 - Clone symbols
 * @param {Function} [customizer] The function to customize cloning.
 * @param {string} [key] The key of `value`.
 * @param {Object} [object] The parent object of `value`.
 * @param {Object} [stack] Tracks traversed objects and their clone counterparts.
 * @returns {*} Returns the cloned value.
 */
function baseClone(value, bitmask, customizer, key, object, stack) {
  var result,
      isDeep = bitmask & CLONE_DEEP_FLAG,
      isFlat = bitmask & CLONE_FLAT_FLAG,
      isFull = bitmask & CLONE_SYMBOLS_FLAG;

  if (customizer) {
    result = object ? customizer(value, key, object, stack) : customizer(value);
  }
  if (result !== undefined) {
    return result;
  }
  if (!isObject(value)) {
    return value;
  }
  var isArr = isArray(value);
  if (isArr) {
    result = initCloneArray(value);
    if (!isDeep) {
      return copyArray(value, result);
    }
  } else {
    var tag = getTag(value),
        isFunc = tag == funcTag || tag == genTag;

    if (isBuffer(value)) {
      return cloneBuffer(value, isDeep);
    }
    if (tag == objectTag || tag == argsTag || (isFunc && !object)) {
      result = (isFlat || isFunc) ? {} : initCloneObject(value);
      if (!isDeep) {
        return isFlat
          ? copySymbolsIn(value, baseAssignIn(result, value))
          : copySymbols(value, baseAssign(result, value));
      }
    } else {
      if (!cloneableTags[tag]) {
        return object ? value : {};
      }
      result = initCloneByTag(value, tag, isDeep);
    }
  }
  // Check for circular references and return its corresponding clone.
  stack || (stack = new Stack);
  var stacked = stack.get(value);
  if (stacked) {
    return stacked;
  }
  stack.set(value, result);

  if (isSet(value)) {
    value.forEach(function(subValue) {
      result.add(baseClone(subValue, bitmask, customizer, subValue, value, stack));
    });

    return result;
  }

  if (isMap(value)) {
    value.forEach(function(subValue, key) {
      result.set(key, baseClone(subValue, bitmask, customizer, key, value, stack));
    });

    return result;
  }

  var keysFunc = isFull
    ? (isFlat ? getAllKeysIn : getAllKeys)
    : (isFlat ? keysIn : keys);

  var props = isArr ? undefined : keysFunc(value);
  arrayEach(props || value, function(subValue, key) {
    if (props) {
      key = subValue;
      subValue = value[key];
    }
    // Recursively populate clone (susceptible to call stack limits).
    assignValue(result, key, baseClone(subValue, bitmask, customizer, key, value, stack));
  });
  return result;
}

module.exports = baseClone;


/***/ }),

/***/ "./node_modules/lodash/_baseCreate.js":
/*!********************************************!*\
  !*** ./node_modules/lodash/_baseCreate.js ***!
  \********************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var isObject = __webpack_require__(/*! ./isObject */ "./node_modules/lodash/isObject.js");

/** Built-in value references. */
var objectCreate = Object.create;

/**
 * The base implementation of `_.create` without support for assigning
 * properties to the created object.
 *
 * @private
 * @param {Object} proto The object to inherit from.
 * @returns {Object} Returns the new object.
 */
var baseCreate = (function() {
  function object() {}
  return function(proto) {
    if (!isObject(proto)) {
      return {};
    }
    if (objectCreate) {
      return objectCreate(proto);
    }
    object.prototype = proto;
    var result = new object;
    object.prototype = undefined;
    return result;
  };
}());

module.exports = baseCreate;


/***/ }),

/***/ "./node_modules/lodash/_baseEach.js":
/*!******************************************!*\
  !*** ./node_modules/lodash/_baseEach.js ***!
  \******************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var baseForOwn = __webpack_require__(/*! ./_baseForOwn */ "./node_modules/lodash/_baseForOwn.js"),
    createBaseEach = __webpack_require__(/*! ./_createBaseEach */ "./node_modules/lodash/_createBaseEach.js");

/**
 * The base implementation of `_.forEach` without support for iteratee shorthands.
 *
 * @private
 * @param {Array|Object} collection The collection to iterate over.
 * @param {Function} iteratee The function invoked per iteration.
 * @returns {Array|Object} Returns `collection`.
 */
var baseEach = createBaseEach(baseForOwn);

module.exports = baseEach;


/***/ }),

/***/ "./node_modules/lodash/_baseExtremum.js":
/*!**********************************************!*\
  !*** ./node_modules/lodash/_baseExtremum.js ***!
  \**********************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var isSymbol = __webpack_require__(/*! ./isSymbol */ "./node_modules/lodash/isSymbol.js");

/**
 * The base implementation of methods like `_.max` and `_.min` which accepts a
 * `comparator` to determine the extremum value.
 *
 * @private
 * @param {Array} array The array to iterate over.
 * @param {Function} iteratee The iteratee invoked per iteration.
 * @param {Function} comparator The comparator used to compare values.
 * @returns {*} Returns the extremum value.
 */
function baseExtremum(array, iteratee, comparator) {
  var index = -1,
      length = array.length;

  while (++index < length) {
    var value = array[index],
        current = iteratee(value);

    if (current != null && (computed === undefined
          ? (current === current && !isSymbol(current))
          : comparator(current, computed)
        )) {
      var computed = current,
          result = value;
    }
  }
  return result;
}

module.exports = baseExtremum;


/***/ }),

/***/ "./node_modules/lodash/_baseFindIndex.js":
/*!***********************************************!*\
  !*** ./node_modules/lodash/_baseFindIndex.js ***!
  \***********************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports) {

/**
 * The base implementation of `_.findIndex` and `_.findLastIndex` without
 * support for iteratee shorthands.
 *
 * @private
 * @param {Array} array The array to inspect.
 * @param {Function} predicate The function invoked per iteration.
 * @param {number} fromIndex The index to search from.
 * @param {boolean} [fromRight] Specify iterating from right to left.
 * @returns {number} Returns the index of the matched value, else `-1`.
 */
function baseFindIndex(array, predicate, fromIndex, fromRight) {
  var length = array.length,
      index = fromIndex + (fromRight ? 1 : -1);

  while ((fromRight ? index-- : ++index < length)) {
    if (predicate(array[index], index, array)) {
      return index;
    }
  }
  return -1;
}

module.exports = baseFindIndex;


/***/ }),

/***/ "./node_modules/lodash/_baseFlatten.js":
/*!*********************************************!*\
  !*** ./node_modules/lodash/_baseFlatten.js ***!
  \*********************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var arrayPush = __webpack_require__(/*! ./_arrayPush */ "./node_modules/lodash/_arrayPush.js"),
    isFlattenable = __webpack_require__(/*! ./_isFlattenable */ "./node_modules/lodash/_isFlattenable.js");

/**
 * The base implementation of `_.flatten` with support for restricting flattening.
 *
 * @private
 * @param {Array} array The array to flatten.
 * @param {number} depth The maximum recursion depth.
 * @param {boolean} [predicate=isFlattenable] The function invoked per iteration.
 * @param {boolean} [isStrict] Restrict to values that pass `predicate` checks.
 * @param {Array} [result=[]] The initial result value.
 * @returns {Array} Returns the new flattened array.
 */
function baseFlatten(array, depth, predicate, isStrict, result) {
  var index = -1,
      length = array.length;

  predicate || (predicate = isFlattenable);
  result || (result = []);

  while (++index < length) {
    var value = array[index];
    if (depth > 0 && predicate(value)) {
      if (depth > 1) {
        // Recursively flatten arrays (susceptible to call stack limits).
        baseFlatten(value, depth - 1, predicate, isStrict, result);
      } else {
        arrayPush(result, value);
      }
    } else if (!isStrict) {
      result[result.length] = value;
    }
  }
  return result;
}

module.exports = baseFlatten;


/***/ }),

/***/ "./node_modules/lodash/_baseFor.js":
/*!*****************************************!*\
  !*** ./node_modules/lodash/_baseFor.js ***!
  \*****************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var createBaseFor = __webpack_require__(/*! ./_createBaseFor */ "./node_modules/lodash/_createBaseFor.js");

/**
 * The base implementation of `baseForOwn` which iterates over `object`
 * properties returned by `keysFunc` and invokes `iteratee` for each property.
 * Iteratee functions may exit iteration early by explicitly returning `false`.
 *
 * @private
 * @param {Object} object The object to iterate over.
 * @param {Function} iteratee The function invoked per iteration.
 * @param {Function} keysFunc The function to get the keys of `object`.
 * @returns {Object} Returns `object`.
 */
var baseFor = createBaseFor();

module.exports = baseFor;


/***/ }),

/***/ "./node_modules/lodash/_baseForOwn.js":
/*!********************************************!*\
  !*** ./node_modules/lodash/_baseForOwn.js ***!
  \********************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var baseFor = __webpack_require__(/*! ./_baseFor */ "./node_modules/lodash/_baseFor.js"),
    keys = __webpack_require__(/*! ./keys */ "./node_modules/lodash/keys.js");

/**
 * The base implementation of `_.forOwn` without support for iteratee shorthands.
 *
 * @private
 * @param {Object} object The object to iterate over.
 * @param {Function} iteratee The function invoked per iteration.
 * @returns {Object} Returns `object`.
 */
function baseForOwn(object, iteratee) {
  return object && baseFor(object, iteratee, keys);
}

module.exports = baseForOwn;


/***/ }),

/***/ "./node_modules/lodash/_baseGet.js":
/*!*****************************************!*\
  !*** ./node_modules/lodash/_baseGet.js ***!
  \*****************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var castPath = __webpack_require__(/*! ./_castPath */ "./node_modules/lodash/_castPath.js"),
    toKey = __webpack_require__(/*! ./_toKey */ "./node_modules/lodash/_toKey.js");

/**
 * The base implementation of `_.get` without support for default values.
 *
 * @private
 * @param {Object} object The object to query.
 * @param {Array|string} path The path of the property to get.
 * @returns {*} Returns the resolved value.
 */
function baseGet(object, path) {
  path = castPath(path, object);

  var index = 0,
      length = path.length;

  while (object != null && index < length) {
    object = object[toKey(path[index++])];
  }
  return (index && index == length) ? object : undefined;
}

module.exports = baseGet;


/***/ }),

/***/ "./node_modules/lodash/_baseGetAllKeys.js":
/*!************************************************!*\
  !*** ./node_modules/lodash/_baseGetAllKeys.js ***!
  \************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var arrayPush = __webpack_require__(/*! ./_arrayPush */ "./node_modules/lodash/_arrayPush.js"),
    isArray = __webpack_require__(/*! ./isArray */ "./node_modules/lodash/isArray.js");

/**
 * The base implementation of `getAllKeys` and `getAllKeysIn` which uses
 * `keysFunc` and `symbolsFunc` to get the enumerable property names and
 * symbols of `object`.
 *
 * @private
 * @param {Object} object The object to query.
 * @param {Function} keysFunc The function to get the keys of `object`.
 * @param {Function} symbolsFunc The function to get the symbols of `object`.
 * @returns {Array} Returns the array of property names and symbols.
 */
function baseGetAllKeys(object, keysFunc, symbolsFunc) {
  var result = keysFunc(object);
  return isArray(object) ? result : arrayPush(result, symbolsFunc(object));
}

module.exports = baseGetAllKeys;


/***/ }),

/***/ "./node_modules/lodash/_baseGetTag.js":
/*!********************************************!*\
  !*** ./node_modules/lodash/_baseGetTag.js ***!
  \********************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var Symbol = __webpack_require__(/*! ./_Symbol */ "./node_modules/lodash/_Symbol.js"),
    getRawTag = __webpack_require__(/*! ./_getRawTag */ "./node_modules/lodash/_getRawTag.js"),
    objectToString = __webpack_require__(/*! ./_objectToString */ "./node_modules/lodash/_objectToString.js");

/** `Object#toString` result references. */
var nullTag = '[object Null]',
    undefinedTag = '[object Undefined]';

/** Built-in value references. */
var symToStringTag = Symbol ? Symbol.toStringTag : undefined;

/**
 * The base implementation of `getTag` without fallbacks for buggy environments.
 *
 * @private
 * @param {*} value The value to query.
 * @returns {string} Returns the `toStringTag`.
 */
function baseGetTag(value) {
  if (value == null) {
    return value === undefined ? undefinedTag : nullTag;
  }
  return (symToStringTag && symToStringTag in Object(value))
    ? getRawTag(value)
    : objectToString(value);
}

module.exports = baseGetTag;


/***/ }),

/***/ "./node_modules/lodash/_baseGt.js":
/*!****************************************!*\
  !*** ./node_modules/lodash/_baseGt.js ***!
  \****************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports) {

/**
 * The base implementation of `_.gt` which doesn't coerce arguments.
 *
 * @private
 * @param {*} value The value to compare.
 * @param {*} other The other value to compare.
 * @returns {boolean} Returns `true` if `value` is greater than `other`,
 *  else `false`.
 */
function baseGt(value, other) {
  return value > other;
}

module.exports = baseGt;


/***/ }),

/***/ "./node_modules/lodash/_baseHasIn.js":
/*!*******************************************!*\
  !*** ./node_modules/lodash/_baseHasIn.js ***!
  \*******************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports) {

/**
 * The base implementation of `_.hasIn` without support for deep paths.
 *
 * @private
 * @param {Object} [object] The object to query.
 * @param {Array|string} key The key to check.
 * @returns {boolean} Returns `true` if `key` exists, else `false`.
 */
function baseHasIn(object, key) {
  return object != null && key in Object(object);
}

module.exports = baseHasIn;


/***/ }),

/***/ "./node_modules/lodash/_baseIndexOf.js":
/*!*********************************************!*\
  !*** ./node_modules/lodash/_baseIndexOf.js ***!
  \*********************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var baseFindIndex = __webpack_require__(/*! ./_baseFindIndex */ "./node_modules/lodash/_baseFindIndex.js"),
    baseIsNaN = __webpack_require__(/*! ./_baseIsNaN */ "./node_modules/lodash/_baseIsNaN.js"),
    strictIndexOf = __webpack_require__(/*! ./_strictIndexOf */ "./node_modules/lodash/_strictIndexOf.js");

/**
 * The base implementation of `_.indexOf` without `fromIndex` bounds checks.
 *
 * @private
 * @param {Array} array The array to inspect.
 * @param {*} value The value to search for.
 * @param {number} fromIndex The index to search from.
 * @returns {number} Returns the index of the matched value, else `-1`.
 */
function baseIndexOf(array, value, fromIndex) {
  return value === value
    ? strictIndexOf(array, value, fromIndex)
    : baseFindIndex(array, baseIsNaN, fromIndex);
}

module.exports = baseIndexOf;


/***/ }),

/***/ "./node_modules/lodash/_baseIsArguments.js":
/*!*************************************************!*\
  !*** ./node_modules/lodash/_baseIsArguments.js ***!
  \*************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var baseGetTag = __webpack_require__(/*! ./_baseGetTag */ "./node_modules/lodash/_baseGetTag.js"),
    isObjectLike = __webpack_require__(/*! ./isObjectLike */ "./node_modules/lodash/isObjectLike.js");

/** `Object#toString` result references. */
var argsTag = '[object Arguments]';

/**
 * The base implementation of `_.isArguments`.
 *
 * @private
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is an `arguments` object,
 */
function baseIsArguments(value) {
  return isObjectLike(value) && baseGetTag(value) == argsTag;
}

module.exports = baseIsArguments;


/***/ }),

/***/ "./node_modules/lodash/_baseIsEqual.js":
/*!*********************************************!*\
  !*** ./node_modules/lodash/_baseIsEqual.js ***!
  \*********************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var baseIsEqualDeep = __webpack_require__(/*! ./_baseIsEqualDeep */ "./node_modules/lodash/_baseIsEqualDeep.js"),
    isObjectLike = __webpack_require__(/*! ./isObjectLike */ "./node_modules/lodash/isObjectLike.js");

/**
 * The base implementation of `_.isEqual` which supports partial comparisons
 * and tracks traversed objects.
 *
 * @private
 * @param {*} value The value to compare.
 * @param {*} other The other value to compare.
 * @param {boolean} bitmask The bitmask flags.
 *  1 - Unordered comparison
 *  2 - Partial comparison
 * @param {Function} [customizer] The function to customize comparisons.
 * @param {Object} [stack] Tracks traversed `value` and `other` objects.
 * @returns {boolean} Returns `true` if the values are equivalent, else `false`.
 */
function baseIsEqual(value, other, bitmask, customizer, stack) {
  if (value === other) {
    return true;
  }
  if (value == null || other == null || (!isObjectLike(value) && !isObjectLike(other))) {
    return value !== value && other !== other;
  }
  return baseIsEqualDeep(value, other, bitmask, customizer, baseIsEqual, stack);
}

module.exports = baseIsEqual;


/***/ }),

/***/ "./node_modules/lodash/_baseIsEqualDeep.js":
/*!*************************************************!*\
  !*** ./node_modules/lodash/_baseIsEqualDeep.js ***!
  \*************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var Stack = __webpack_require__(/*! ./_Stack */ "./node_modules/lodash/_Stack.js"),
    equalArrays = __webpack_require__(/*! ./_equalArrays */ "./node_modules/lodash/_equalArrays.js"),
    equalByTag = __webpack_require__(/*! ./_equalByTag */ "./node_modules/lodash/_equalByTag.js"),
    equalObjects = __webpack_require__(/*! ./_equalObjects */ "./node_modules/lodash/_equalObjects.js"),
    getTag = __webpack_require__(/*! ./_getTag */ "./node_modules/lodash/_getTag.js"),
    isArray = __webpack_require__(/*! ./isArray */ "./node_modules/lodash/isArray.js"),
    isBuffer = __webpack_require__(/*! ./isBuffer */ "./node_modules/lodash/isBuffer.js"),
    isTypedArray = __webpack_require__(/*! ./isTypedArray */ "./node_modules/lodash/isTypedArray.js");

/** Used to compose bitmasks for value comparisons. */
var COMPARE_PARTIAL_FLAG = 1;

/** `Object#toString` result references. */
var argsTag = '[object Arguments]',
    arrayTag = '[object Array]',
    objectTag = '[object Object]';

/** Used for built-in method references. */
var objectProto = Object.prototype;

/** Used to check objects for own properties. */
var hasOwnProperty = objectProto.hasOwnProperty;

/**
 * A specialized version of `baseIsEqual` for arrays and objects which performs
 * deep comparisons and tracks traversed objects enabling objects with circular
 * references to be compared.
 *
 * @private
 * @param {Object} object The object to compare.
 * @param {Object} other The other object to compare.
 * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.
 * @param {Function} customizer The function to customize comparisons.
 * @param {Function} equalFunc The function to determine equivalents of values.
 * @param {Object} [stack] Tracks traversed `object` and `other` objects.
 * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.
 */
function baseIsEqualDeep(object, other, bitmask, customizer, equalFunc, stack) {
  var objIsArr = isArray(object),
      othIsArr = isArray(other),
      objTag = objIsArr ? arrayTag : getTag(object),
      othTag = othIsArr ? arrayTag : getTag(other);

  objTag = objTag == argsTag ? objectTag : objTag;
  othTag = othTag == argsTag ? objectTag : othTag;

  var objIsObj = objTag == objectTag,
      othIsObj = othTag == objectTag,
      isSameTag = objTag == othTag;

  if (isSameTag && isBuffer(object)) {
    if (!isBuffer(other)) {
      return false;
    }
    objIsArr = true;
    objIsObj = false;
  }
  if (isSameTag && !objIsObj) {
    stack || (stack = new Stack);
    return (objIsArr || isTypedArray(object))
      ? equalArrays(object, other, bitmask, customizer, equalFunc, stack)
      : equalByTag(object, other, objTag, bitmask, customizer, equalFunc, stack);
  }
  if (!(bitmask & COMPARE_PARTIAL_FLAG)) {
    var objIsWrapped = objIsObj && hasOwnProperty.call(object, '__wrapped__'),
        othIsWrapped = othIsObj && hasOwnProperty.call(other, '__wrapped__');

    if (objIsWrapped || othIsWrapped) {
      var objUnwrapped = objIsWrapped ? object.value() : object,
          othUnwrapped = othIsWrapped ? other.value() : other;

      stack || (stack = new Stack);
      return equalFunc(objUnwrapped, othUnwrapped, bitmask, customizer, stack);
    }
  }
  if (!isSameTag) {
    return false;
  }
  stack || (stack = new Stack);
  return equalObjects(object, other, bitmask, customizer, equalFunc, stack);
}

module.exports = baseIsEqualDeep;


/***/ }),

/***/ "./node_modules/lodash/_baseIsMap.js":
/*!*******************************************!*\
  !*** ./node_modules/lodash/_baseIsMap.js ***!
  \*******************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var getTag = __webpack_require__(/*! ./_getTag */ "./node_modules/lodash/_getTag.js"),
    isObjectLike = __webpack_require__(/*! ./isObjectLike */ "./node_modules/lodash/isObjectLike.js");

/** `Object#toString` result references. */
var mapTag = '[object Map]';

/**
 * The base implementation of `_.isMap` without Node.js optimizations.
 *
 * @private
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a map, else `false`.
 */
function baseIsMap(value) {
  return isObjectLike(value) && getTag(value) == mapTag;
}

module.exports = baseIsMap;


/***/ }),

/***/ "./node_modules/lodash/_baseIsMatch.js":
/*!*********************************************!*\
  !*** ./node_modules/lodash/_baseIsMatch.js ***!
  \*********************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var Stack = __webpack_require__(/*! ./_Stack */ "./node_modules/lodash/_Stack.js"),
    baseIsEqual = __webpack_require__(/*! ./_baseIsEqual */ "./node_modules/lodash/_baseIsEqual.js");

/** Used to compose bitmasks for value comparisons. */
var COMPARE_PARTIAL_FLAG = 1,
    COMPARE_UNORDERED_FLAG = 2;

/**
 * The base implementation of `_.isMatch` without support for iteratee shorthands.
 *
 * @private
 * @param {Object} object The object to inspect.
 * @param {Object} source The object of property values to match.
 * @param {Array} matchData The property names, values, and compare flags to match.
 * @param {Function} [customizer] The function to customize comparisons.
 * @returns {boolean} Returns `true` if `object` is a match, else `false`.
 */
function baseIsMatch(object, source, matchData, customizer) {
  var index = matchData.length,
      length = index,
      noCustomizer = !customizer;

  if (object == null) {
    return !length;
  }
  object = Object(object);
  while (index--) {
    var data = matchData[index];
    if ((noCustomizer && data[2])
          ? data[1] !== object[data[0]]
          : !(data[0] in object)
        ) {
      return false;
    }
  }
  while (++index < length) {
    data = matchData[index];
    var key = data[0],
        objValue = object[key],
        srcValue = data[1];

    if (noCustomizer && data[2]) {
      if (objValue === undefined && !(key in object)) {
        return false;
      }
    } else {
      var stack = new Stack;
      if (customizer) {
        var result = customizer(objValue, srcValue, key, object, source, stack);
      }
      if (!(result === undefined
            ? baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG, customizer, stack)
            : result
          )) {
        return false;
      }
    }
  }
  return true;
}

module.exports = baseIsMatch;


/***/ }),

/***/ "./node_modules/lodash/_baseIsNaN.js":
/*!*******************************************!*\
  !*** ./node_modules/lodash/_baseIsNaN.js ***!
  \*******************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports) {

/**
 * The base implementation of `_.isNaN` without support for number objects.
 *
 * @private
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.
 */
function baseIsNaN(value) {
  return value !== value;
}

module.exports = baseIsNaN;


/***/ }),

/***/ "./node_modules/lodash/_baseIsNative.js":
/*!**********************************************!*\
  !*** ./node_modules/lodash/_baseIsNative.js ***!
  \**********************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var isFunction = __webpack_require__(/*! ./isFunction */ "./node_modules/lodash/isFunction.js"),
    isMasked = __webpack_require__(/*! ./_isMasked */ "./node_modules/lodash/_isMasked.js"),
    isObject = __webpack_require__(/*! ./isObject */ "./node_modules/lodash/isObject.js"),
    toSource = __webpack_require__(/*! ./_toSource */ "./node_modules/lodash/_toSource.js");

/**
 * Used to match `RegExp`
 * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).
 */
var reRegExpChar = /[\\^$.*+?()[\]{}|]/g;

/** Used to detect host constructors (Safari). */
var reIsHostCtor = /^\[object .+?Constructor\]$/;

/** Used for built-in method references. */
var funcProto = Function.prototype,
    objectProto = Object.prototype;

/** Used to resolve the decompiled source of functions. */
var funcToString = funcProto.toString;

/** Used to check objects for own properties. */
var hasOwnProperty = objectProto.hasOwnProperty;

/** Used to detect if a method is native. */
var reIsNative = RegExp('^' +
  funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\$&')
  .replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g, '$1.*?') + '$'
);

/**
 * The base implementation of `_.isNative` without bad shim checks.
 *
 * @private
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a native function,
 *  else `false`.
 */
function baseIsNative(value) {
  if (!isObject(value) || isMasked(value)) {
    return false;
  }
  var pattern = isFunction(value) ? reIsNative : reIsHostCtor;
  return pattern.test(toSource(value));
}

module.exports = baseIsNative;


/***/ }),

/***/ "./node_modules/lodash/_baseIsSet.js":
/*!*******************************************!*\
  !*** ./node_modules/lodash/_baseIsSet.js ***!
  \*******************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var getTag = __webpack_require__(/*! ./_getTag */ "./node_modules/lodash/_getTag.js"),
    isObjectLike = __webpack_require__(/*! ./isObjectLike */ "./node_modules/lodash/isObjectLike.js");

/** `Object#toString` result references. */
var setTag = '[object Set]';

/**
 * The base implementation of `_.isSet` without Node.js optimizations.
 *
 * @private
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a set, else `false`.
 */
function baseIsSet(value) {
  return isObjectLike(value) && getTag(value) == setTag;
}

module.exports = baseIsSet;


/***/ }),

/***/ "./node_modules/lodash/_baseIsTypedArray.js":
/*!**************************************************!*\
  !*** ./node_modules/lodash/_baseIsTypedArray.js ***!
  \**************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var baseGetTag = __webpack_require__(/*! ./_baseGetTag */ "./node_modules/lodash/_baseGetTag.js"),
    isLength = __webpack_require__(/*! ./isLength */ "./node_modules/lodash/isLength.js"),
    isObjectLike = __webpack_require__(/*! ./isObjectLike */ "./node_modules/lodash/isObjectLike.js");

/** `Object#toString` result references. */
var argsTag = '[object Arguments]',
    arrayTag = '[object Array]',
    boolTag = '[object Boolean]',
    dateTag = '[object Date]',
    errorTag = '[object Error]',
    funcTag = '[object Function]',
    mapTag = '[object Map]',
    numberTag = '[object Number]',
    objectTag = '[object Object]',
    regexpTag = '[object RegExp]',
    setTag = '[object Set]',
    stringTag = '[object String]',
    weakMapTag = '[object WeakMap]';

var arrayBufferTag = '[object ArrayBuffer]',
    dataViewTag = '[object DataView]',
    float32Tag = '[object Float32Array]',
    float64Tag = '[object Float64Array]',
    int8Tag = '[object Int8Array]',
    int16Tag = '[object Int16Array]',
    int32Tag = '[object Int32Array]',
    uint8Tag = '[object Uint8Array]',
    uint8ClampedTag = '[object Uint8ClampedArray]',
    uint16Tag = '[object Uint16Array]',
    uint32Tag = '[object Uint32Array]';

/** Used to identify `toStringTag` values of typed arrays. */
var typedArrayTags = {};
typedArrayTags[float32Tag] = typedArrayTags[float64Tag] =
typedArrayTags[int8Tag] = typedArrayTags[int16Tag] =
typedArrayTags[int32Tag] = typedArrayTags[uint8Tag] =
typedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] =
typedArrayTags[uint32Tag] = true;
typedArrayTags[argsTag] = typedArrayTags[arrayTag] =
typedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] =
typedArrayTags[dataViewTag] = typedArrayTags[dateTag] =
typedArrayTags[errorTag] = typedArrayTags[funcTag] =
typedArrayTags[mapTag] = typedArrayTags[numberTag] =
typedArrayTags[objectTag] = typedArrayTags[regexpTag] =
typedArrayTags[setTag] = typedArrayTags[stringTag] =
typedArrayTags[weakMapTag] = false;

/**
 * The base implementation of `_.isTypedArray` without Node.js optimizations.
 *
 * @private
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.
 */
function baseIsTypedArray(value) {
  return isObjectLike(value) &&
    isLength(value.length) && !!typedArrayTags[baseGetTag(value)];
}

module.exports = baseIsTypedArray;


/***/ }),

/***/ "./node_modules/lodash/_baseIteratee.js":
/*!**********************************************!*\
  !*** ./node_modules/lodash/_baseIteratee.js ***!
  \**********************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var baseMatches = __webpack_require__(/*! ./_baseMatches */ "./node_modules/lodash/_baseMatches.js"),
    baseMatchesProperty = __webpack_require__(/*! ./_baseMatchesProperty */ "./node_modules/lodash/_baseMatchesProperty.js"),
    identity = __webpack_require__(/*! ./identity */ "./node_modules/lodash/identity.js"),
    isArray = __webpack_require__(/*! ./isArray */ "./node_modules/lodash/isArray.js"),
    property = __webpack_require__(/*! ./property */ "./node_modules/lodash/property.js");

/**
 * The base implementation of `_.iteratee`.
 *
 * @private
 * @param {*} [value=_.identity] The value to convert to an iteratee.
 * @returns {Function} Returns the iteratee.
 */
function baseIteratee(value) {
  // Don't store the `typeof` result in a variable to avoid a JIT bug in Safari 9.
  // See https://bugs.webkit.org/show_bug.cgi?id=156034 for more details.
  if (typeof value == 'function') {
    return value;
  }
  if (value == null) {
    return identity;
  }
  if (typeof value == 'object') {
    return isArray(value)
      ? baseMatchesProperty(value[0], value[1])
      : baseMatches(value);
  }
  return property(value);
}

module.exports = baseIteratee;


/***/ }),

/***/ "./node_modules/lodash/_baseKeys.js":
/*!******************************************!*\
  !*** ./node_modules/lodash/_baseKeys.js ***!
  \******************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var isPrototype = __webpack_require__(/*! ./_isPrototype */ "./node_modules/lodash/_isPrototype.js"),
    nativeKeys = __webpack_require__(/*! ./_nativeKeys */ "./node_modules/lodash/_nativeKeys.js");

/** Used for built-in method references. */
var objectProto = Object.prototype;

/** Used to check objects for own properties. */
var hasOwnProperty = objectProto.hasOwnProperty;

/**
 * The base implementation of `_.keys` which doesn't treat sparse arrays as dense.
 *
 * @private
 * @param {Object} object The object to query.
 * @returns {Array} Returns the array of property names.
 */
function baseKeys(object) {
  if (!isPrototype(object)) {
    return nativeKeys(object);
  }
  var result = [];
  for (var key in Object(object)) {
    if (hasOwnProperty.call(object, key) && key != 'constructor') {
      result.push(key);
    }
  }
  return result;
}

module.exports = baseKeys;


/***/ }),

/***/ "./node_modules/lodash/_baseKeysIn.js":
/*!********************************************!*\
  !*** ./node_modules/lodash/_baseKeysIn.js ***!
  \********************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var isObject = __webpack_require__(/*! ./isObject */ "./node_modules/lodash/isObject.js"),
    isPrototype = __webpack_require__(/*! ./_isPrototype */ "./node_modules/lodash/_isPrototype.js"),
    nativeKeysIn = __webpack_require__(/*! ./_nativeKeysIn */ "./node_modules/lodash/_nativeKeysIn.js");

/** Used for built-in method references. */
var objectProto = Object.prototype;

/** Used to check objects for own properties. */
var hasOwnProperty = objectProto.hasOwnProperty;

/**
 * The base implementation of `_.keysIn` which doesn't treat sparse arrays as dense.
 *
 * @private
 * @param {Object} object The object to query.
 * @returns {Array} Returns the array of property names.
 */
function baseKeysIn(object) {
  if (!isObject(object)) {
    return nativeKeysIn(object);
  }
  var isProto = isPrototype(object),
      result = [];

  for (var key in object) {
    if (!(key == 'constructor' && (isProto || !hasOwnProperty.call(object, key)))) {
      result.push(key);
    }
  }
  return result;
}

module.exports = baseKeysIn;


/***/ }),

/***/ "./node_modules/lodash/_baseMap.js":
/*!*****************************************!*\
  !*** ./node_modules/lodash/_baseMap.js ***!
  \*****************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var baseEach = __webpack_require__(/*! ./_baseEach */ "./node_modules/lodash/_baseEach.js"),
    isArrayLike = __webpack_require__(/*! ./isArrayLike */ "./node_modules/lodash/isArrayLike.js");

/**
 * The base implementation of `_.map` without support for iteratee shorthands.
 *
 * @private
 * @param {Array|Object} collection The collection to iterate over.
 * @param {Function} iteratee The function invoked per iteration.
 * @returns {Array} Returns the new mapped array.
 */
function baseMap(collection, iteratee) {
  var index = -1,
      result = isArrayLike(collection) ? Array(collection.length) : [];

  baseEach(collection, function(value, key, collection) {
    result[++index] = iteratee(value, key, collection);
  });
  return result;
}

module.exports = baseMap;


/***/ }),

/***/ "./node_modules/lodash/_baseMatches.js":
/*!*********************************************!*\
  !*** ./node_modules/lodash/_baseMatches.js ***!
  \*********************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var baseIsMatch = __webpack_require__(/*! ./_baseIsMatch */ "./node_modules/lodash/_baseIsMatch.js"),
    getMatchData = __webpack_require__(/*! ./_getMatchData */ "./node_modules/lodash/_getMatchData.js"),
    matchesStrictComparable = __webpack_require__(/*! ./_matchesStrictComparable */ "./node_modules/lodash/_matchesStrictComparable.js");

/**
 * The base implementation of `_.matches` which doesn't clone `source`.
 *
 * @private
 * @param {Object} source The object of property values to match.
 * @returns {Function} Returns the new spec function.
 */
function baseMatches(source) {
  var matchData = getMatchData(source);
  if (matchData.length == 1 && matchData[0][2]) {
    return matchesStrictComparable(matchData[0][0], matchData[0][1]);
  }
  return function(object) {
    return object === source || baseIsMatch(object, source, matchData);
  };
}

module.exports = baseMatches;


/***/ }),

/***/ "./node_modules/lodash/_baseMatchesProperty.js":
/*!*****************************************************!*\
  !*** ./node_modules/lodash/_baseMatchesProperty.js ***!
  \*****************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var baseIsEqual = __webpack_require__(/*! ./_baseIsEqual */ "./node_modules/lodash/_baseIsEqual.js"),
    get = __webpack_require__(/*! ./get */ "./node_modules/lodash/get.js"),
    hasIn = __webpack_require__(/*! ./hasIn */ "./node_modules/lodash/hasIn.js"),
    isKey = __webpack_require__(/*! ./_isKey */ "./node_modules/lodash/_isKey.js"),
    isStrictComparable = __webpack_require__(/*! ./_isStrictComparable */ "./node_modules/lodash/_isStrictComparable.js"),
    matchesStrictComparable = __webpack_require__(/*! ./_matchesStrictComparable */ "./node_modules/lodash/_matchesStrictComparable.js"),
    toKey = __webpack_require__(/*! ./_toKey */ "./node_modules/lodash/_toKey.js");

/** Used to compose bitmasks for value comparisons. */
var COMPARE_PARTIAL_FLAG = 1,
    COMPARE_UNORDERED_FLAG = 2;

/**
 * The base implementation of `_.matchesProperty` which doesn't clone `srcValue`.
 *
 * @private
 * @param {string} path The path of the property to get.
 * @param {*} srcValue The value to match.
 * @returns {Function} Returns the new spec function.
 */
function baseMatchesProperty(path, srcValue) {
  if (isKey(path) && isStrictComparable(srcValue)) {
    return matchesStrictComparable(toKey(path), srcValue);
  }
  return function(object) {
    var objValue = get(object, path);
    return (objValue === undefined && objValue === srcValue)
      ? hasIn(object, path)
      : baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG);
  };
}

module.exports = baseMatchesProperty;


/***/ }),

/***/ "./node_modules/lodash/_baseOrderBy.js":
/*!*********************************************!*\
  !*** ./node_modules/lodash/_baseOrderBy.js ***!
  \*********************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var arrayMap = __webpack_require__(/*! ./_arrayMap */ "./node_modules/lodash/_arrayMap.js"),
    baseIteratee = __webpack_require__(/*! ./_baseIteratee */ "./node_modules/lodash/_baseIteratee.js"),
    baseMap = __webpack_require__(/*! ./_baseMap */ "./node_modules/lodash/_baseMap.js"),
    baseSortBy = __webpack_require__(/*! ./_baseSortBy */ "./node_modules/lodash/_baseSortBy.js"),
    baseUnary = __webpack_require__(/*! ./_baseUnary */ "./node_modules/lodash/_baseUnary.js"),
    compareMultiple = __webpack_require__(/*! ./_compareMultiple */ "./node_modules/lodash/_compareMultiple.js"),
    identity = __webpack_require__(/*! ./identity */ "./node_modules/lodash/identity.js");

/**
 * The base implementation of `_.orderBy` without param guards.
 *
 * @private
 * @param {Array|Object} collection The collection to iterate over.
 * @param {Function[]|Object[]|string[]} iteratees The iteratees to sort by.
 * @param {string[]} orders The sort orders of `iteratees`.
 * @returns {Array} Returns the new sorted array.
 */
function baseOrderBy(collection, iteratees, orders) {
  var index = -1;
  iteratees = arrayMap(iteratees.length ? iteratees : [identity], baseUnary(baseIteratee));

  var result = baseMap(collection, function(value, key, collection) {
    var criteria = arrayMap(iteratees, function(iteratee) {
      return iteratee(value);
    });
    return { 'criteria': criteria, 'index': ++index, 'value': value };
  });

  return baseSortBy(result, function(object, other) {
    return compareMultiple(object, other, orders);
  });
}

module.exports = baseOrderBy;


/***/ }),

/***/ "./node_modules/lodash/_baseProperty.js":
/*!**********************************************!*\
  !*** ./node_modules/lodash/_baseProperty.js ***!
  \**********************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports) {

/**
 * The base implementation of `_.property` without support for deep paths.
 *
 * @private
 * @param {string} key The key of the property to get.
 * @returns {Function} Returns the new accessor function.
 */
function baseProperty(key) {
  return function(object) {
    return object == null ? undefined : object[key];
  };
}

module.exports = baseProperty;


/***/ }),

/***/ "./node_modules/lodash/_basePropertyDeep.js":
/*!**************************************************!*\
  !*** ./node_modules/lodash/_basePropertyDeep.js ***!
  \**************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var baseGet = __webpack_require__(/*! ./_baseGet */ "./node_modules/lodash/_baseGet.js");

/**
 * A specialized version of `baseProperty` which supports deep paths.
 *
 * @private
 * @param {Array|string} path The path of the property to get.
 * @returns {Function} Returns the new accessor function.
 */
function basePropertyDeep(path) {
  return function(object) {
    return baseGet(object, path);
  };
}

module.exports = basePropertyDeep;


/***/ }),

/***/ "./node_modules/lodash/_baseRest.js":
/*!******************************************!*\
  !*** ./node_modules/lodash/_baseRest.js ***!
  \******************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var identity = __webpack_require__(/*! ./identity */ "./node_modules/lodash/identity.js"),
    overRest = __webpack_require__(/*! ./_overRest */ "./node_modules/lodash/_overRest.js"),
    setToString = __webpack_require__(/*! ./_setToString */ "./node_modules/lodash/_setToString.js");

/**
 * The base implementation of `_.rest` which doesn't validate or coerce arguments.
 *
 * @private
 * @param {Function} func The function to apply a rest parameter to.
 * @param {number} [start=func.length-1] The start position of the rest parameter.
 * @returns {Function} Returns the new function.
 */
function baseRest(func, start) {
  return setToString(overRest(func, start, identity), func + '');
}

module.exports = baseRest;


/***/ }),

/***/ "./node_modules/lodash/_baseSetToString.js":
/*!*************************************************!*\
  !*** ./node_modules/lodash/_baseSetToString.js ***!
  \*************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var constant = __webpack_require__(/*! ./constant */ "./node_modules/lodash/constant.js"),
    defineProperty = __webpack_require__(/*! ./_defineProperty */ "./node_modules/lodash/_defineProperty.js"),
    identity = __webpack_require__(/*! ./identity */ "./node_modules/lodash/identity.js");

/**
 * The base implementation of `setToString` without support for hot loop shorting.
 *
 * @private
 * @param {Function} func The function to modify.
 * @param {Function} string The `toString` result.
 * @returns {Function} Returns `func`.
 */
var baseSetToString = !defineProperty ? identity : function(func, string) {
  return defineProperty(func, 'toString', {
    'configurable': true,
    'enumerable': false,
    'value': constant(string),
    'writable': true
  });
};

module.exports = baseSetToString;


/***/ }),

/***/ "./node_modules/lodash/_baseSortBy.js":
/*!********************************************!*\
  !*** ./node_modules/lodash/_baseSortBy.js ***!
  \********************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports) {

/**
 * The base implementation of `_.sortBy` which uses `comparer` to define the
 * sort order of `array` and replaces criteria objects with their corresponding
 * values.
 *
 * @private
 * @param {Array} array The array to sort.
 * @param {Function} comparer The function to define sort order.
 * @returns {Array} Returns `array`.
 */
function baseSortBy(array, comparer) {
  var length = array.length;

  array.sort(comparer);
  while (length--) {
    array[length] = array[length].value;
  }
  return array;
}

module.exports = baseSortBy;


/***/ }),

/***/ "./node_modules/lodash/_baseTimes.js":
/*!*******************************************!*\
  !*** ./node_modules/lodash/_baseTimes.js ***!
  \*******************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports) {

/**
 * The base implementation of `_.times` without support for iteratee shorthands
 * or max array length checks.
 *
 * @private
 * @param {number} n The number of times to invoke `iteratee`.
 * @param {Function} iteratee The function invoked per iteration.
 * @returns {Array} Returns the array of results.
 */
function baseTimes(n, iteratee) {
  var index = -1,
      result = Array(n);

  while (++index < n) {
    result[index] = iteratee(index);
  }
  return result;
}

module.exports = baseTimes;


/***/ }),

/***/ "./node_modules/lodash/_baseToString.js":
/*!**********************************************!*\
  !*** ./node_modules/lodash/_baseToString.js ***!
  \**********************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var Symbol = __webpack_require__(/*! ./_Symbol */ "./node_modules/lodash/_Symbol.js"),
    arrayMap = __webpack_require__(/*! ./_arrayMap */ "./node_modules/lodash/_arrayMap.js"),
    isArray = __webpack_require__(/*! ./isArray */ "./node_modules/lodash/isArray.js"),
    isSymbol = __webpack_require__(/*! ./isSymbol */ "./node_modules/lodash/isSymbol.js");

/** Used as references for various `Number` constants. */
var INFINITY = 1 / 0;

/** Used to convert symbols to primitives and strings. */
var symbolProto = Symbol ? Symbol.prototype : undefined,
    symbolToString = symbolProto ? symbolProto.toString : undefined;

/**
 * The base implementation of `_.toString` which doesn't convert nullish
 * values to empty strings.
 *
 * @private
 * @param {*} value The value to process.
 * @returns {string} Returns the string.
 */
function baseToString(value) {
  // Exit early for strings to avoid a performance hit in some environments.
  if (typeof value == 'string') {
    return value;
  }
  if (isArray(value)) {
    // Recursively convert values (susceptible to call stack limits).
    return arrayMap(value, baseToString) + '';
  }
  if (isSymbol(value)) {
    return symbolToString ? symbolToString.call(value) : '';
  }
  var result = (value + '');
  return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;
}

module.exports = baseToString;


/***/ }),

/***/ "./node_modules/lodash/_baseUnary.js":
/*!*******************************************!*\
  !*** ./node_modules/lodash/_baseUnary.js ***!
  \*******************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports) {

/**
 * The base implementation of `_.unary` without support for storing metadata.
 *
 * @private
 * @param {Function} func The function to cap arguments for.
 * @returns {Function} Returns the new capped function.
 */
function baseUnary(func) {
  return function(value) {
    return func(value);
  };
}

module.exports = baseUnary;


/***/ }),

/***/ "./node_modules/lodash/_baseUniq.js":
/*!******************************************!*\
  !*** ./node_modules/lodash/_baseUniq.js ***!
  \******************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var SetCache = __webpack_require__(/*! ./_SetCache */ "./node_modules/lodash/_SetCache.js"),
    arrayIncludes = __webpack_require__(/*! ./_arrayIncludes */ "./node_modules/lodash/_arrayIncludes.js"),
    arrayIncludesWith = __webpack_require__(/*! ./_arrayIncludesWith */ "./node_modules/lodash/_arrayIncludesWith.js"),
    cacheHas = __webpack_require__(/*! ./_cacheHas */ "./node_modules/lodash/_cacheHas.js"),
    createSet = __webpack_require__(/*! ./_createSet */ "./node_modules/lodash/_createSet.js"),
    setToArray = __webpack_require__(/*! ./_setToArray */ "./node_modules/lodash/_setToArray.js");

/** Used as the size to enable large array optimizations. */
var LARGE_ARRAY_SIZE = 200;

/**
 * The base implementation of `_.uniqBy` without support for iteratee shorthands.
 *
 * @private
 * @param {Array} array The array to inspect.
 * @param {Function} [iteratee] The iteratee invoked per element.
 * @param {Function} [comparator] The comparator invoked per element.
 * @returns {Array} Returns the new duplicate free array.
 */
function baseUniq(array, iteratee, comparator) {
  var index = -1,
      includes = arrayIncludes,
      length = array.length,
      isCommon = true,
      result = [],
      seen = result;

  if (comparator) {
    isCommon = false;
    includes = arrayIncludesWith;
  }
  else if (length >= LARGE_ARRAY_SIZE) {
    var set = iteratee ? null : createSet(array);
    if (set) {
      return setToArray(set);
    }
    isCommon = false;
    includes = cacheHas;
    seen = new SetCache;
  }
  else {
    seen = iteratee ? [] : result;
  }
  outer:
  while (++index < length) {
    var value = array[index],
        computed = iteratee ? iteratee(value) : value;

    value = (comparator || value !== 0) ? value : 0;
    if (isCommon && computed === computed) {
      var seenIndex = seen.length;
      while (seenIndex--) {
        if (seen[seenIndex] === computed) {
          continue outer;
        }
      }
      if (iteratee) {
        seen.push(computed);
      }
      result.push(value);
    }
    else if (!includes(seen, computed, comparator)) {
      if (seen !== result) {
        seen.push(computed);
      }
      result.push(value);
    }
  }
  return result;
}

module.exports = baseUniq;


/***/ }),

/***/ "./node_modules/lodash/_cacheHas.js":
/*!******************************************!*\
  !*** ./node_modules/lodash/_cacheHas.js ***!
  \******************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports) {

/**
 * Checks if a `cache` value for `key` exists.
 *
 * @private
 * @param {Object} cache The cache to query.
 * @param {string} key The key of the entry to check.
 * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
 */
function cacheHas(cache, key) {
  return cache.has(key);
}

module.exports = cacheHas;


/***/ }),

/***/ "./node_modules/lodash/_castPath.js":
/*!******************************************!*\
  !*** ./node_modules/lodash/_castPath.js ***!
  \******************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var isArray = __webpack_require__(/*! ./isArray */ "./node_modules/lodash/isArray.js"),
    isKey = __webpack_require__(/*! ./_isKey */ "./node_modules/lodash/_isKey.js"),
    stringToPath = __webpack_require__(/*! ./_stringToPath */ "./node_modules/lodash/_stringToPath.js"),
    toString = __webpack_require__(/*! ./toString */ "./node_modules/lodash/toString.js");

/**
 * Casts `value` to a path array if it's not one.
 *
 * @private
 * @param {*} value The value to inspect.
 * @param {Object} [object] The object to query keys on.
 * @returns {Array} Returns the cast property path array.
 */
function castPath(value, object) {
  if (isArray(value)) {
    return value;
  }
  return isKey(value, object) ? [value] : stringToPath(toString(value));
}

module.exports = castPath;


/***/ }),

/***/ "./node_modules/lodash/_cloneArrayBuffer.js":
/*!**************************************************!*\
  !*** ./node_modules/lodash/_cloneArrayBuffer.js ***!
  \**************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var Uint8Array = __webpack_require__(/*! ./_Uint8Array */ "./node_modules/lodash/_Uint8Array.js");

/**
 * Creates a clone of `arrayBuffer`.
 *
 * @private
 * @param {ArrayBuffer} arrayBuffer The array buffer to clone.
 * @returns {ArrayBuffer} Returns the cloned array buffer.
 */
function cloneArrayBuffer(arrayBuffer) {
  var result = new arrayBuffer.constructor(arrayBuffer.byteLength);
  new Uint8Array(result).set(new Uint8Array(arrayBuffer));
  return result;
}

module.exports = cloneArrayBuffer;


/***/ }),

/***/ "./node_modules/lodash/_cloneBuffer.js":
/*!*********************************************!*\
  !*** ./node_modules/lodash/_cloneBuffer.js ***!
  \*********************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(module) {var root = __webpack_require__(/*! ./_root */ "./node_modules/lodash/_root.js");

/** Detect free variable `exports`. */
var freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;

/** Detect free variable `module`. */
var freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;

/** Detect the popular CommonJS extension `module.exports`. */
var moduleExports = freeModule && freeModule.exports === freeExports;

/** Built-in value references. */
var Buffer = moduleExports ? root.Buffer : undefined,
    allocUnsafe = Buffer ? Buffer.allocUnsafe : undefined;

/**
 * Creates a clone of  `buffer`.
 *
 * @private
 * @param {Buffer} buffer The buffer to clone.
 * @param {boolean} [isDeep] Specify a deep clone.
 * @returns {Buffer} Returns the cloned buffer.
 */
function cloneBuffer(buffer, isDeep) {
  if (isDeep) {
    return buffer.slice();
  }
  var length = buffer.length,
      result = allocUnsafe ? allocUnsafe(length) : new buffer.constructor(length);

  buffer.copy(result);
  return result;
}

module.exports = cloneBuffer;

/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(/*! ./../webpack/buildin/module.js */ "./node_modules/webpack/buildin/module.js")(module)))

/***/ }),

/***/ "./node_modules/lodash/_cloneDataView.js":
/*!***********************************************!*\
  !*** ./node_modules/lodash/_cloneDataView.js ***!
  \***********************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var cloneArrayBuffer = __webpack_require__(/*! ./_cloneArrayBuffer */ "./node_modules/lodash/_cloneArrayBuffer.js");

/**
 * Creates a clone of `dataView`.
 *
 * @private
 * @param {Object} dataView The data view to clone.
 * @param {boolean} [isDeep] Specify a deep clone.
 * @returns {Object} Returns the cloned data view.
 */
function cloneDataView(dataView, isDeep) {
  var buffer = isDeep ? cloneArrayBuffer(dataView.buffer) : dataView.buffer;
  return new dataView.constructor(buffer, dataView.byteOffset, dataView.byteLength);
}

module.exports = cloneDataView;


/***/ }),

/***/ "./node_modules/lodash/_cloneRegExp.js":
/*!*********************************************!*\
  !*** ./node_modules/lodash/_cloneRegExp.js ***!
  \*********************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports) {

/** Used to match `RegExp` flags from their coerced string values. */
var reFlags = /\w*$/;

/**
 * Creates a clone of `regexp`.
 *
 * @private
 * @param {Object} regexp The regexp to clone.
 * @returns {Object} Returns the cloned regexp.
 */
function cloneRegExp(regexp) {
  var result = new regexp.constructor(regexp.source, reFlags.exec(regexp));
  result.lastIndex = regexp.lastIndex;
  return result;
}

module.exports = cloneRegExp;


/***/ }),

/***/ "./node_modules/lodash/_cloneSymbol.js":
/*!*********************************************!*\
  !*** ./node_modules/lodash/_cloneSymbol.js ***!
  \*********************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var Symbol = __webpack_require__(/*! ./_Symbol */ "./node_modules/lodash/_Symbol.js");

/** Used to convert symbols to primitives and strings. */
var symbolProto = Symbol ? Symbol.prototype : undefined,
    symbolValueOf = symbolProto ? symbolProto.valueOf : undefined;

/**
 * Creates a clone of the `symbol` object.
 *
 * @private
 * @param {Object} symbol The symbol object to clone.
 * @returns {Object} Returns the cloned symbol object.
 */
function cloneSymbol(symbol) {
  return symbolValueOf ? Object(symbolValueOf.call(symbol)) : {};
}

module.exports = cloneSymbol;


/***/ }),

/***/ "./node_modules/lodash/_cloneTypedArray.js":
/*!*************************************************!*\
  !*** ./node_modules/lodash/_cloneTypedArray.js ***!
  \*************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var cloneArrayBuffer = __webpack_require__(/*! ./_cloneArrayBuffer */ "./node_modules/lodash/_cloneArrayBuffer.js");

/**
 * Creates a clone of `typedArray`.
 *
 * @private
 * @param {Object} typedArray The typed array to clone.
 * @param {boolean} [isDeep] Specify a deep clone.
 * @returns {Object} Returns the cloned typed array.
 */
function cloneTypedArray(typedArray, isDeep) {
  var buffer = isDeep ? cloneArrayBuffer(typedArray.buffer) : typedArray.buffer;
  return new typedArray.constructor(buffer, typedArray.byteOffset, typedArray.length);
}

module.exports = cloneTypedArray;


/***/ }),

/***/ "./node_modules/lodash/_compareAscending.js":
/*!**************************************************!*\
  !*** ./node_modules/lodash/_compareAscending.js ***!
  \**************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var isSymbol = __webpack_require__(/*! ./isSymbol */ "./node_modules/lodash/isSymbol.js");

/**
 * Compares values to sort them in ascending order.
 *
 * @private
 * @param {*} value The value to compare.
 * @param {*} other The other value to compare.
 * @returns {number} Returns the sort order indicator for `value`.
 */
function compareAscending(value, other) {
  if (value !== other) {
    var valIsDefined = value !== undefined,
        valIsNull = value === null,
        valIsReflexive = value === value,
        valIsSymbol = isSymbol(value);

    var othIsDefined = other !== undefined,
        othIsNull = other === null,
        othIsReflexive = other === other,
        othIsSymbol = isSymbol(other);

    if ((!othIsNull && !othIsSymbol && !valIsSymbol && value > other) ||
        (valIsSymbol && othIsDefined && othIsReflexive && !othIsNull && !othIsSymbol) ||
        (valIsNull && othIsDefined && othIsReflexive) ||
        (!valIsDefined && othIsReflexive) ||
        !valIsReflexive) {
      return 1;
    }
    if ((!valIsNull && !valIsSymbol && !othIsSymbol && value < other) ||
        (othIsSymbol && valIsDefined && valIsReflexive && !valIsNull && !valIsSymbol) ||
        (othIsNull && valIsDefined && valIsReflexive) ||
        (!othIsDefined && valIsReflexive) ||
        !othIsReflexive) {
      return -1;
    }
  }
  return 0;
}

module.exports = compareAscending;


/***/ }),

/***/ "./node_modules/lodash/_compareMultiple.js":
/*!*************************************************!*\
  !*** ./node_modules/lodash/_compareMultiple.js ***!
  \*************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var compareAscending = __webpack_require__(/*! ./_compareAscending */ "./node_modules/lodash/_compareAscending.js");

/**
 * Used by `_.orderBy` to compare multiple properties of a value to another
 * and stable sort them.
 *
 * If `orders` is unspecified, all values are sorted in ascending order. Otherwise,
 * specify an order of "desc" for descending or "asc" for ascending sort order
 * of corresponding values.
 *
 * @private
 * @param {Object} object The object to compare.
 * @param {Object} other The other object to compare.
 * @param {boolean[]|string[]} orders The order to sort by for each property.
 * @returns {number} Returns the sort order indicator for `object`.
 */
function compareMultiple(object, other, orders) {
  var index = -1,
      objCriteria = object.criteria,
      othCriteria = other.criteria,
      length = objCriteria.length,
      ordersLength = orders.length;

  while (++index < length) {
    var result = compareAscending(objCriteria[index], othCriteria[index]);
    if (result) {
      if (index >= ordersLength) {
        return result;
      }
      var order = orders[index];
      return result * (order == 'desc' ? -1 : 1);
    }
  }
  // Fixes an `Array#sort` bug in the JS engine embedded in Adobe applications
  // that causes it, under certain circumstances, to provide the same value for
  // `object` and `other`. See https://github.com/jashkenas/underscore/pull/1247
  // for more details.
  //
  // This also ensures a stable sort in V8 and other engines.
  // See https://bugs.chromium.org/p/v8/issues/detail?id=90 for more details.
  return object.index - other.index;
}

module.exports = compareMultiple;


/***/ }),

/***/ "./node_modules/lodash/_copyArray.js":
/*!*******************************************!*\
  !*** ./node_modules/lodash/_copyArray.js ***!
  \*******************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports) {

/**
 * Copies the values of `source` to `array`.
 *
 * @private
 * @param {Array} source The array to copy values from.
 * @param {Array} [array=[]] The array to copy values to.
 * @returns {Array} Returns `array`.
 */
function copyArray(source, array) {
  var index = -1,
      length = source.length;

  array || (array = Array(length));
  while (++index < length) {
    array[index] = source[index];
  }
  return array;
}

module.exports = copyArray;


/***/ }),

/***/ "./node_modules/lodash/_copyObject.js":
/*!********************************************!*\
  !*** ./node_modules/lodash/_copyObject.js ***!
  \********************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var assignValue = __webpack_require__(/*! ./_assignValue */ "./node_modules/lodash/_assignValue.js"),
    baseAssignValue = __webpack_require__(/*! ./_baseAssignValue */ "./node_modules/lodash/_baseAssignValue.js");

/**
 * Copies properties of `source` to `object`.
 *
 * @private
 * @param {Object} source The object to copy properties from.
 * @param {Array} props The property identifiers to copy.
 * @param {Object} [object={}] The object to copy properties to.
 * @param {Function} [customizer] The function to customize copied values.
 * @returns {Object} Returns `object`.
 */
function copyObject(source, props, object, customizer) {
  var isNew = !object;
  object || (object = {});

  var index = -1,
      length = props.length;

  while (++index < length) {
    var key = props[index];

    var newValue = customizer
      ? customizer(object[key], source[key], key, object, source)
      : undefined;

    if (newValue === undefined) {
      newValue = source[key];
    }
    if (isNew) {
      baseAssignValue(object, key, newValue);
    } else {
      assignValue(object, key, newValue);
    }
  }
  return object;
}

module.exports = copyObject;


/***/ }),

/***/ "./node_modules/lodash/_copySymbols.js":
/*!*********************************************!*\
  !*** ./node_modules/lodash/_copySymbols.js ***!
  \*********************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var copyObject = __webpack_require__(/*! ./_copyObject */ "./node_modules/lodash/_copyObject.js"),
    getSymbols = __webpack_require__(/*! ./_getSymbols */ "./node_modules/lodash/_getSymbols.js");

/**
 * Copies own symbols of `source` to `object`.
 *
 * @private
 * @param {Object} source The object to copy symbols from.
 * @param {Object} [object={}] The object to copy symbols to.
 * @returns {Object} Returns `object`.
 */
function copySymbols(source, object) {
  return copyObject(source, getSymbols(source), object);
}

module.exports = copySymbols;


/***/ }),

/***/ "./node_modules/lodash/_copySymbolsIn.js":
/*!***********************************************!*\
  !*** ./node_modules/lodash/_copySymbolsIn.js ***!
  \***********************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var copyObject = __webpack_require__(/*! ./_copyObject */ "./node_modules/lodash/_copyObject.js"),
    getSymbolsIn = __webpack_require__(/*! ./_getSymbolsIn */ "./node_modules/lodash/_getSymbolsIn.js");

/**
 * Copies own and inherited symbols of `source` to `object`.
 *
 * @private
 * @param {Object} source The object to copy symbols from.
 * @param {Object} [object={}] The object to copy symbols to.
 * @returns {Object} Returns `object`.
 */
function copySymbolsIn(source, object) {
  return copyObject(source, getSymbolsIn(source), object);
}

module.exports = copySymbolsIn;


/***/ }),

/***/ "./node_modules/lodash/_coreJsData.js":
/*!********************************************!*\
  !*** ./node_modules/lodash/_coreJsData.js ***!
  \********************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var root = __webpack_require__(/*! ./_root */ "./node_modules/lodash/_root.js");

/** Used to detect overreaching core-js shims. */
var coreJsData = root['__core-js_shared__'];

module.exports = coreJsData;


/***/ }),

/***/ "./node_modules/lodash/_createBaseEach.js":
/*!************************************************!*\
  !*** ./node_modules/lodash/_createBaseEach.js ***!
  \************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var isArrayLike = __webpack_require__(/*! ./isArrayLike */ "./node_modules/lodash/isArrayLike.js");

/**
 * Creates a `baseEach` or `baseEachRight` function.
 *
 * @private
 * @param {Function} eachFunc The function to iterate over a collection.
 * @param {boolean} [fromRight] Specify iterating from right to left.
 * @returns {Function} Returns the new base function.
 */
function createBaseEach(eachFunc, fromRight) {
  return function(collection, iteratee) {
    if (collection == null) {
      return collection;
    }
    if (!isArrayLike(collection)) {
      return eachFunc(collection, iteratee);
    }
    var length = collection.length,
        index = fromRight ? length : -1,
        iterable = Object(collection);

    while ((fromRight ? index-- : ++index < length)) {
      if (iteratee(iterable[index], index, iterable) === false) {
        break;
      }
    }
    return collection;
  };
}

module.exports = createBaseEach;


/***/ }),

/***/ "./node_modules/lodash/_createBaseFor.js":
/*!***********************************************!*\
  !*** ./node_modules/lodash/_createBaseFor.js ***!
  \***********************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports) {

/**
 * Creates a base function for methods like `_.forIn` and `_.forOwn`.
 *
 * @private
 * @param {boolean} [fromRight] Specify iterating from right to left.
 * @returns {Function} Returns the new base function.
 */
function createBaseFor(fromRight) {
  return function(object, iteratee, keysFunc) {
    var index = -1,
        iterable = Object(object),
        props = keysFunc(object),
        length = props.length;

    while (length--) {
      var key = props[fromRight ? length : ++index];
      if (iteratee(iterable[key], key, iterable) === false) {
        break;
      }
    }
    return object;
  };
}

module.exports = createBaseFor;


/***/ }),

/***/ "./node_modules/lodash/_createSet.js":
/*!*******************************************!*\
  !*** ./node_modules/lodash/_createSet.js ***!
  \*******************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var Set = __webpack_require__(/*! ./_Set */ "./node_modules/lodash/_Set.js"),
    noop = __webpack_require__(/*! ./noop */ "./node_modules/lodash/noop.js"),
    setToArray = __webpack_require__(/*! ./_setToArray */ "./node_modules/lodash/_setToArray.js");

/** Used as references for various `Number` constants. */
var INFINITY = 1 / 0;

/**
 * Creates a set object of `values`.
 *
 * @private
 * @param {Array} values The values to add to the set.
 * @returns {Object} Returns the new set.
 */
var createSet = !(Set && (1 / setToArray(new Set([,-0]))[1]) == INFINITY) ? noop : function(values) {
  return new Set(values);
};

module.exports = createSet;


/***/ }),

/***/ "./node_modules/lodash/_defineProperty.js":
/*!************************************************!*\
  !*** ./node_modules/lodash/_defineProperty.js ***!
  \************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var getNative = __webpack_require__(/*! ./_getNative */ "./node_modules/lodash/_getNative.js");

var defineProperty = (function() {
  try {
    var func = getNative(Object, 'defineProperty');
    func({}, '', {});
    return func;
  } catch (e) {}
}());

module.exports = defineProperty;


/***/ }),

/***/ "./node_modules/lodash/_equalArrays.js":
/*!*********************************************!*\
  !*** ./node_modules/lodash/_equalArrays.js ***!
  \*********************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var SetCache = __webpack_require__(/*! ./_SetCache */ "./node_modules/lodash/_SetCache.js"),
    arraySome = __webpack_require__(/*! ./_arraySome */ "./node_modules/lodash/_arraySome.js"),
    cacheHas = __webpack_require__(/*! ./_cacheHas */ "./node_modules/lodash/_cacheHas.js");

/** Used to compose bitmasks for value comparisons. */
var COMPARE_PARTIAL_FLAG = 1,
    COMPARE_UNORDERED_FLAG = 2;

/**
 * A specialized version of `baseIsEqualDeep` for arrays with support for
 * partial deep comparisons.
 *
 * @private
 * @param {Array} array The array to compare.
 * @param {Array} other The other array to compare.
 * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.
 * @param {Function} customizer The function to customize comparisons.
 * @param {Function} equalFunc The function to determine equivalents of values.
 * @param {Object} stack Tracks traversed `array` and `other` objects.
 * @returns {boolean} Returns `true` if the arrays are equivalent, else `false`.
 */
function equalArrays(array, other, bitmask, customizer, equalFunc, stack) {
  var isPartial = bitmask & COMPARE_PARTIAL_FLAG,
      arrLength = array.length,
      othLength = other.length;

  if (arrLength != othLength && !(isPartial && othLength > arrLength)) {
    return false;
  }
  // Assume cyclic values are equal.
  var stacked = stack.get(array);
  if (stacked && stack.get(other)) {
    return stacked == other;
  }
  var index = -1,
      result = true,
      seen = (bitmask & COMPARE_UNORDERED_FLAG) ? new SetCache : undefined;

  stack.set(array, other);
  stack.set(other, array);

  // Ignore non-index properties.
  while (++index < arrLength) {
    var arrValue = array[index],
        othValue = other[index];

    if (customizer) {
      var compared = isPartial
        ? customizer(othValue, arrValue, index, other, array, stack)
        : customizer(arrValue, othValue, index, array, other, stack);
    }
    if (compared !== undefined) {
      if (compared) {
        continue;
      }
      result = false;
      break;
    }
    // Recursively compare arrays (susceptible to call stack limits).
    if (seen) {
      if (!arraySome(other, function(othValue, othIndex) {
            if (!cacheHas(seen, othIndex) &&
                (arrValue === othValue || equalFunc(arrValue, othValue, bitmask, customizer, stack))) {
              return seen.push(othIndex);
            }
          })) {
        result = false;
        break;
      }
    } else if (!(
          arrValue === othValue ||
            equalFunc(arrValue, othValue, bitmask, customizer, stack)
        )) {
      result = false;
      break;
    }
  }
  stack['delete'](array);
  stack['delete'](other);
  return result;
}

module.exports = equalArrays;


/***/ }),

/***/ "./node_modules/lodash/_equalByTag.js":
/*!********************************************!*\
  !*** ./node_modules/lodash/_equalByTag.js ***!
  \********************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var Symbol = __webpack_require__(/*! ./_Symbol */ "./node_modules/lodash/_Symbol.js"),
    Uint8Array = __webpack_require__(/*! ./_Uint8Array */ "./node_modules/lodash/_Uint8Array.js"),
    eq = __webpack_require__(/*! ./eq */ "./node_modules/lodash/eq.js"),
    equalArrays = __webpack_require__(/*! ./_equalArrays */ "./node_modules/lodash/_equalArrays.js"),
    mapToArray = __webpack_require__(/*! ./_mapToArray */ "./node_modules/lodash/_mapToArray.js"),
    setToArray = __webpack_require__(/*! ./_setToArray */ "./node_modules/lodash/_setToArray.js");

/** Used to compose bitmasks for value comparisons. */
var COMPARE_PARTIAL_FLAG = 1,
    COMPARE_UNORDERED_FLAG = 2;

/** `Object#toString` result references. */
var boolTag = '[object Boolean]',
    dateTag = '[object Date]',
    errorTag = '[object Error]',
    mapTag = '[object Map]',
    numberTag = '[object Number]',
    regexpTag = '[object RegExp]',
    setTag = '[object Set]',
    stringTag = '[object String]',
    symbolTag = '[object Symbol]';

var arrayBufferTag = '[object ArrayBuffer]',
    dataViewTag = '[object DataView]';

/** Used to convert symbols to primitives and strings. */
var symbolProto = Symbol ? Symbol.prototype : undefined,
    symbolValueOf = symbolProto ? symbolProto.valueOf : undefined;

/**
 * A specialized version of `baseIsEqualDeep` for comparing objects of
 * the same `toStringTag`.
 *
 * **Note:** This function only supports comparing values with tags of
 * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.
 *
 * @private
 * @param {Object} object The object to compare.
 * @param {Object} other The other object to compare.
 * @param {string} tag The `toStringTag` of the objects to compare.
 * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.
 * @param {Function} customizer The function to customize comparisons.
 * @param {Function} equalFunc The function to determine equivalents of values.
 * @param {Object} stack Tracks traversed `object` and `other` objects.
 * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.
 */
function equalByTag(object, other, tag, bitmask, customizer, equalFunc, stack) {
  switch (tag) {
    case dataViewTag:
      if ((object.byteLength != other.byteLength) ||
          (object.byteOffset != other.byteOffset)) {
        return false;
      }
      object = object.buffer;
      other = other.buffer;

    case arrayBufferTag:
      if ((object.byteLength != other.byteLength) ||
          !equalFunc(new Uint8Array(object), new Uint8Array(other))) {
        return false;
      }
      return true;

    case boolTag:
    case dateTag:
    case numberTag:
      // Coerce booleans to `1` or `0` and dates to milliseconds.
      // Invalid dates are coerced to `NaN`.
      return eq(+object, +other);

    case errorTag:
      return object.name == other.name && object.message == other.message;

    case regexpTag:
    case stringTag:
      // Coerce regexes to strings and treat strings, primitives and objects,
      // as equal. See http://www.ecma-international.org/ecma-262/7.0/#sec-regexp.prototype.tostring
      // for more details.
      return object == (other + '');

    case mapTag:
      var convert = mapToArray;

    case setTag:
      var isPartial = bitmask & COMPARE_PARTIAL_FLAG;
      convert || (convert = setToArray);

      if (object.size != other.size && !isPartial) {
        return false;
      }
      // Assume cyclic values are equal.
      var stacked = stack.get(object);
      if (stacked) {
        return stacked == other;
      }
      bitmask |= COMPARE_UNORDERED_FLAG;

      // Recursively compare objects (susceptible to call stack limits).
      stack.set(object, other);
      var result = equalArrays(convert(object), convert(other), bitmask, customizer, equalFunc, stack);
      stack['delete'](object);
      return result;

    case symbolTag:
      if (symbolValueOf) {
        return symbolValueOf.call(object) == symbolValueOf.call(other);
      }
  }
  return false;
}

module.exports = equalByTag;


/***/ }),

/***/ "./node_modules/lodash/_equalObjects.js":
/*!**********************************************!*\
  !*** ./node_modules/lodash/_equalObjects.js ***!
  \**********************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var getAllKeys = __webpack_require__(/*! ./_getAllKeys */ "./node_modules/lodash/_getAllKeys.js");

/** Used to compose bitmasks for value comparisons. */
var COMPARE_PARTIAL_FLAG = 1;

/** Used for built-in method references. */
var objectProto = Object.prototype;

/** Used to check objects for own properties. */
var hasOwnProperty = objectProto.hasOwnProperty;

/**
 * A specialized version of `baseIsEqualDeep` for objects with support for
 * partial deep comparisons.
 *
 * @private
 * @param {Object} object The object to compare.
 * @param {Object} other The other object to compare.
 * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.
 * @param {Function} customizer The function to customize comparisons.
 * @param {Function} equalFunc The function to determine equivalents of values.
 * @param {Object} stack Tracks traversed `object` and `other` objects.
 * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.
 */
function equalObjects(object, other, bitmask, customizer, equalFunc, stack) {
  var isPartial = bitmask & COMPARE_PARTIAL_FLAG,
      objProps = getAllKeys(object),
      objLength = objProps.length,
      othProps = getAllKeys(other),
      othLength = othProps.length;

  if (objLength != othLength && !isPartial) {
    return false;
  }
  var index = objLength;
  while (index--) {
    var key = objProps[index];
    if (!(isPartial ? key in other : hasOwnProperty.call(other, key))) {
      return false;
    }
  }
  // Assume cyclic values are equal.
  var stacked = stack.get(object);
  if (stacked && stack.get(other)) {
    return stacked == other;
  }
  var result = true;
  stack.set(object, other);
  stack.set(other, object);

  var skipCtor = isPartial;
  while (++index < objLength) {
    key = objProps[index];
    var objValue = object[key],
        othValue = other[key];

    if (customizer) {
      var compared = isPartial
        ? customizer(othValue, objValue, key, other, object, stack)
        : customizer(objValue, othValue, key, object, other, stack);
    }
    // Recursively compare objects (susceptible to call stack limits).
    if (!(compared === undefined
          ? (objValue === othValue || equalFunc(objValue, othValue, bitmask, customizer, stack))
          : compared
        )) {
      result = false;
      break;
    }
    skipCtor || (skipCtor = key == 'constructor');
  }
  if (result && !skipCtor) {
    var objCtor = object.constructor,
        othCtor = other.constructor;

    // Non `Object` object instances with different constructors are not equal.
    if (objCtor != othCtor &&
        ('constructor' in object && 'constructor' in other) &&
        !(typeof objCtor == 'function' && objCtor instanceof objCtor &&
          typeof othCtor == 'function' && othCtor instanceof othCtor)) {
      result = false;
    }
  }
  stack['delete'](object);
  stack['delete'](other);
  return result;
}

module.exports = equalObjects;


/***/ }),

/***/ "./node_modules/lodash/_freeGlobal.js":
/*!********************************************!*\
  !*** ./node_modules/lodash/_freeGlobal.js ***!
  \********************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(global) {/** Detect free variable `global` from Node.js. */
var freeGlobal = typeof global == 'object' && global && global.Object === Object && global;

module.exports = freeGlobal;

/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(/*! ./../webpack/buildin/global.js */ "./node_modules/webpack/buildin/global.js")))

/***/ }),

/***/ "./node_modules/lodash/_getAllKeys.js":
/*!********************************************!*\
  !*** ./node_modules/lodash/_getAllKeys.js ***!
  \********************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var baseGetAllKeys = __webpack_require__(/*! ./_baseGetAllKeys */ "./node_modules/lodash/_baseGetAllKeys.js"),
    getSymbols = __webpack_require__(/*! ./_getSymbols */ "./node_modules/lodash/_getSymbols.js"),
    keys = __webpack_require__(/*! ./keys */ "./node_modules/lodash/keys.js");

/**
 * Creates an array of own enumerable property names and symbols of `object`.
 *
 * @private
 * @param {Object} object The object to query.
 * @returns {Array} Returns the array of property names and symbols.
 */
function getAllKeys(object) {
  return baseGetAllKeys(object, keys, getSymbols);
}

module.exports = getAllKeys;


/***/ }),

/***/ "./node_modules/lodash/_getAllKeysIn.js":
/*!**********************************************!*\
  !*** ./node_modules/lodash/_getAllKeysIn.js ***!
  \**********************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var baseGetAllKeys = __webpack_require__(/*! ./_baseGetAllKeys */ "./node_modules/lodash/_baseGetAllKeys.js"),
    getSymbolsIn = __webpack_require__(/*! ./_getSymbolsIn */ "./node_modules/lodash/_getSymbolsIn.js"),
    keysIn = __webpack_require__(/*! ./keysIn */ "./node_modules/lodash/keysIn.js");

/**
 * Creates an array of own and inherited enumerable property names and
 * symbols of `object`.
 *
 * @private
 * @param {Object} object The object to query.
 * @returns {Array} Returns the array of property names and symbols.
 */
function getAllKeysIn(object) {
  return baseGetAllKeys(object, keysIn, getSymbolsIn);
}

module.exports = getAllKeysIn;


/***/ }),

/***/ "./node_modules/lodash/_getMapData.js":
/*!********************************************!*\
  !*** ./node_modules/lodash/_getMapData.js ***!
  \********************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var isKeyable = __webpack_require__(/*! ./_isKeyable */ "./node_modules/lodash/_isKeyable.js");

/**
 * Gets the data for `map`.
 *
 * @private
 * @param {Object} map The map to query.
 * @param {string} key The reference key.
 * @returns {*} Returns the map data.
 */
function getMapData(map, key) {
  var data = map.__data__;
  return isKeyable(key)
    ? data[typeof key == 'string' ? 'string' : 'hash']
    : data.map;
}

module.exports = getMapData;


/***/ }),

/***/ "./node_modules/lodash/_getMatchData.js":
/*!**********************************************!*\
  !*** ./node_modules/lodash/_getMatchData.js ***!
  \**********************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var isStrictComparable = __webpack_require__(/*! ./_isStrictComparable */ "./node_modules/lodash/_isStrictComparable.js"),
    keys = __webpack_require__(/*! ./keys */ "./node_modules/lodash/keys.js");

/**
 * Gets the property names, values, and compare flags of `object`.
 *
 * @private
 * @param {Object} object The object to query.
 * @returns {Array} Returns the match data of `object`.
 */
function getMatchData(object) {
  var result = keys(object),
      length = result.length;

  while (length--) {
    var key = result[length],
        value = object[key];

    result[length] = [key, value, isStrictComparable(value)];
  }
  return result;
}

module.exports = getMatchData;


/***/ }),

/***/ "./node_modules/lodash/_getNative.js":
/*!*******************************************!*\
  !*** ./node_modules/lodash/_getNative.js ***!
  \*******************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var baseIsNative = __webpack_require__(/*! ./_baseIsNative */ "./node_modules/lodash/_baseIsNative.js"),
    getValue = __webpack_require__(/*! ./_getValue */ "./node_modules/lodash/_getValue.js");

/**
 * Gets the native function at `key` of `object`.
 *
 * @private
 * @param {Object} object The object to query.
 * @param {string} key The key of the method to get.
 * @returns {*} Returns the function if it's native, else `undefined`.
 */
function getNative(object, key) {
  var value = getValue(object, key);
  return baseIsNative(value) ? value : undefined;
}

module.exports = getNative;


/***/ }),

/***/ "./node_modules/lodash/_getPrototype.js":
/*!**********************************************!*\
  !*** ./node_modules/lodash/_getPrototype.js ***!
  \**********************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var overArg = __webpack_require__(/*! ./_overArg */ "./node_modules/lodash/_overArg.js");

/** Built-in value references. */
var getPrototype = overArg(Object.getPrototypeOf, Object);

module.exports = getPrototype;


/***/ }),

/***/ "./node_modules/lodash/_getRawTag.js":
/*!*******************************************!*\
  !*** ./node_modules/lodash/_getRawTag.js ***!
  \*******************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var Symbol = __webpack_require__(/*! ./_Symbol */ "./node_modules/lodash/_Symbol.js");

/** Used for built-in method references. */
var objectProto = Object.prototype;

/** Used to check objects for own properties. */
var hasOwnProperty = objectProto.hasOwnProperty;

/**
 * Used to resolve the
 * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)
 * of values.
 */
var nativeObjectToString = objectProto.toString;

/** Built-in value references. */
var symToStringTag = Symbol ? Symbol.toStringTag : undefined;

/**
 * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.
 *
 * @private
 * @param {*} value The value to query.
 * @returns {string} Returns the raw `toStringTag`.
 */
function getRawTag(value) {
  var isOwn = hasOwnProperty.call(value, symToStringTag),
      tag = value[symToStringTag];

  try {
    value[symToStringTag] = undefined;
    var unmasked = true;
  } catch (e) {}

  var result = nativeObjectToString.call(value);
  if (unmasked) {
    if (isOwn) {
      value[symToStringTag] = tag;
    } else {
      delete value[symToStringTag];
    }
  }
  return result;
}

module.exports = getRawTag;


/***/ }),

/***/ "./node_modules/lodash/_getSymbols.js":
/*!********************************************!*\
  !*** ./node_modules/lodash/_getSymbols.js ***!
  \********************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var arrayFilter = __webpack_require__(/*! ./_arrayFilter */ "./node_modules/lodash/_arrayFilter.js"),
    stubArray = __webpack_require__(/*! ./stubArray */ "./node_modules/lodash/stubArray.js");

/** Used for built-in method references. */
var objectProto = Object.prototype;

/** Built-in value references. */
var propertyIsEnumerable = objectProto.propertyIsEnumerable;

/* Built-in method references for those with the same name as other `lodash` methods. */
var nativeGetSymbols = Object.getOwnPropertySymbols;

/**
 * Creates an array of the own enumerable symbols of `object`.
 *
 * @private
 * @param {Object} object The object to query.
 * @returns {Array} Returns the array of symbols.
 */
var getSymbols = !nativeGetSymbols ? stubArray : function(object) {
  if (object == null) {
    return [];
  }
  object = Object(object);
  return arrayFilter(nativeGetSymbols(object), function(symbol) {
    return propertyIsEnumerable.call(object, symbol);
  });
};

module.exports = getSymbols;


/***/ }),

/***/ "./node_modules/lodash/_getSymbolsIn.js":
/*!**********************************************!*\
  !*** ./node_modules/lodash/_getSymbolsIn.js ***!
  \**********************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var arrayPush = __webpack_require__(/*! ./_arrayPush */ "./node_modules/lodash/_arrayPush.js"),
    getPrototype = __webpack_require__(/*! ./_getPrototype */ "./node_modules/lodash/_getPrototype.js"),
    getSymbols = __webpack_require__(/*! ./_getSymbols */ "./node_modules/lodash/_getSymbols.js"),
    stubArray = __webpack_require__(/*! ./stubArray */ "./node_modules/lodash/stubArray.js");

/* Built-in method references for those with the same name as other `lodash` methods. */
var nativeGetSymbols = Object.getOwnPropertySymbols;

/**
 * Creates an array of the own and inherited enumerable symbols of `object`.
 *
 * @private
 * @param {Object} object The object to query.
 * @returns {Array} Returns the array of symbols.
 */
var getSymbolsIn = !nativeGetSymbols ? stubArray : function(object) {
  var result = [];
  while (object) {
    arrayPush(result, getSymbols(object));
    object = getPrototype(object);
  }
  return result;
};

module.exports = getSymbolsIn;


/***/ }),

/***/ "./node_modules/lodash/_getTag.js":
/*!****************************************!*\
  !*** ./node_modules/lodash/_getTag.js ***!
  \****************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var DataView = __webpack_require__(/*! ./_DataView */ "./node_modules/lodash/_DataView.js"),
    Map = __webpack_require__(/*! ./_Map */ "./node_modules/lodash/_Map.js"),
    Promise = __webpack_require__(/*! ./_Promise */ "./node_modules/lodash/_Promise.js"),
    Set = __webpack_require__(/*! ./_Set */ "./node_modules/lodash/_Set.js"),
    WeakMap = __webpack_require__(/*! ./_WeakMap */ "./node_modules/lodash/_WeakMap.js"),
    baseGetTag = __webpack_require__(/*! ./_baseGetTag */ "./node_modules/lodash/_baseGetTag.js"),
    toSource = __webpack_require__(/*! ./_toSource */ "./node_modules/lodash/_toSource.js");

/** `Object#toString` result references. */
var mapTag = '[object Map]',
    objectTag = '[object Object]',
    promiseTag = '[object Promise]',
    setTag = '[object Set]',
    weakMapTag = '[object WeakMap]';

var dataViewTag = '[object DataView]';

/** Used to detect maps, sets, and weakmaps. */
var dataViewCtorString = toSource(DataView),
    mapCtorString = toSource(Map),
    promiseCtorString = toSource(Promise),
    setCtorString = toSource(Set),
    weakMapCtorString = toSource(WeakMap);

/**
 * Gets the `toStringTag` of `value`.
 *
 * @private
 * @param {*} value The value to query.
 * @returns {string} Returns the `toStringTag`.
 */
var getTag = baseGetTag;

// Fallback for data views, maps, sets, and weak maps in IE 11 and promises in Node.js < 6.
if ((DataView && getTag(new DataView(new ArrayBuffer(1))) != dataViewTag) ||
    (Map && getTag(new Map) != mapTag) ||
    (Promise && getTag(Promise.resolve()) != promiseTag) ||
    (Set && getTag(new Set) != setTag) ||
    (WeakMap && getTag(new WeakMap) != weakMapTag)) {
  getTag = function(value) {
    var result = baseGetTag(value),
        Ctor = result == objectTag ? value.constructor : undefined,
        ctorString = Ctor ? toSource(Ctor) : '';

    if (ctorString) {
      switch (ctorString) {
        case dataViewCtorString: return dataViewTag;
        case mapCtorString: return mapTag;
        case promiseCtorString: return promiseTag;
        case setCtorString: return setTag;
        case weakMapCtorString: return weakMapTag;
      }
    }
    return result;
  };
}

module.exports = getTag;


/***/ }),

/***/ "./node_modules/lodash/_getValue.js":
/*!******************************************!*\
  !*** ./node_modules/lodash/_getValue.js ***!
  \******************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports) {

/**
 * Gets the value at `key` of `object`.
 *
 * @private
 * @param {Object} [object] The object to query.
 * @param {string} key The key of the property to get.
 * @returns {*} Returns the property value.
 */
function getValue(object, key) {
  return object == null ? undefined : object[key];
}

module.exports = getValue;


/***/ }),

/***/ "./node_modules/lodash/_hasPath.js":
/*!*****************************************!*\
  !*** ./node_modules/lodash/_hasPath.js ***!
  \*****************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var castPath = __webpack_require__(/*! ./_castPath */ "./node_modules/lodash/_castPath.js"),
    isArguments = __webpack_require__(/*! ./isArguments */ "./node_modules/lodash/isArguments.js"),
    isArray = __webpack_require__(/*! ./isArray */ "./node_modules/lodash/isArray.js"),
    isIndex = __webpack_require__(/*! ./_isIndex */ "./node_modules/lodash/_isIndex.js"),
    isLength = __webpack_require__(/*! ./isLength */ "./node_modules/lodash/isLength.js"),
    toKey = __webpack_require__(/*! ./_toKey */ "./node_modules/lodash/_toKey.js");

/**
 * Checks if `path` exists on `object`.
 *
 * @private
 * @param {Object} object The object to query.
 * @param {Array|string} path The path to check.
 * @param {Function} hasFunc The function to check properties.
 * @returns {boolean} Returns `true` if `path` exists, else `false`.
 */
function hasPath(object, path, hasFunc) {
  path = castPath(path, object);

  var index = -1,
      length = path.length,
      result = false;

  while (++index < length) {
    var key = toKey(path[index]);
    if (!(result = object != null && hasFunc(object, key))) {
      break;
    }
    object = object[key];
  }
  if (result || ++index != length) {
    return result;
  }
  length = object == null ? 0 : object.length;
  return !!length && isLength(length) && isIndex(key, length) &&
    (isArray(object) || isArguments(object));
}

module.exports = hasPath;


/***/ }),

/***/ "./node_modules/lodash/_hashClear.js":
/*!*******************************************!*\
  !*** ./node_modules/lodash/_hashClear.js ***!
  \*******************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var nativeCreate = __webpack_require__(/*! ./_nativeCreate */ "./node_modules/lodash/_nativeCreate.js");

/**
 * Removes all key-value entries from the hash.
 *
 * @private
 * @name clear
 * @memberOf Hash
 */
function hashClear() {
  this.__data__ = nativeCreate ? nativeCreate(null) : {};
  this.size = 0;
}

module.exports = hashClear;


/***/ }),

/***/ "./node_modules/lodash/_hashDelete.js":
/*!********************************************!*\
  !*** ./node_modules/lodash/_hashDelete.js ***!
  \********************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports) {

/**
 * Removes `key` and its value from the hash.
 *
 * @private
 * @name delete
 * @memberOf Hash
 * @param {Object} hash The hash to modify.
 * @param {string} key The key of the value to remove.
 * @returns {boolean} Returns `true` if the entry was removed, else `false`.
 */
function hashDelete(key) {
  var result = this.has(key) && delete this.__data__[key];
  this.size -= result ? 1 : 0;
  return result;
}

module.exports = hashDelete;


/***/ }),

/***/ "./node_modules/lodash/_hashGet.js":
/*!*****************************************!*\
  !*** ./node_modules/lodash/_hashGet.js ***!
  \*****************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var nativeCreate = __webpack_require__(/*! ./_nativeCreate */ "./node_modules/lodash/_nativeCreate.js");

/** Used to stand-in for `undefined` hash values. */
var HASH_UNDEFINED = '__lodash_hash_undefined__';

/** Used for built-in method references. */
var objectProto = Object.prototype;

/** Used to check objects for own properties. */
var hasOwnProperty = objectProto.hasOwnProperty;

/**
 * Gets the hash value for `key`.
 *
 * @private
 * @name get
 * @memberOf Hash
 * @param {string} key The key of the value to get.
 * @returns {*} Returns the entry value.
 */
function hashGet(key) {
  var data = this.__data__;
  if (nativeCreate) {
    var result = data[key];
    return result === HASH_UNDEFINED ? undefined : result;
  }
  return hasOwnProperty.call(data, key) ? data[key] : undefined;
}

module.exports = hashGet;


/***/ }),

/***/ "./node_modules/lodash/_hashHas.js":
/*!*****************************************!*\
  !*** ./node_modules/lodash/_hashHas.js ***!
  \*****************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var nativeCreate = __webpack_require__(/*! ./_nativeCreate */ "./node_modules/lodash/_nativeCreate.js");

/** Used for built-in method references. */
var objectProto = Object.prototype;

/** Used to check objects for own properties. */
var hasOwnProperty = objectProto.hasOwnProperty;

/**
 * Checks if a hash value for `key` exists.
 *
 * @private
 * @name has
 * @memberOf Hash
 * @param {string} key The key of the entry to check.
 * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
 */
function hashHas(key) {
  var data = this.__data__;
  return nativeCreate ? (data[key] !== undefined) : hasOwnProperty.call(data, key);
}

module.exports = hashHas;


/***/ }),

/***/ "./node_modules/lodash/_hashSet.js":
/*!*****************************************!*\
  !*** ./node_modules/lodash/_hashSet.js ***!
  \*****************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var nativeCreate = __webpack_require__(/*! ./_nativeCreate */ "./node_modules/lodash/_nativeCreate.js");

/** Used to stand-in for `undefined` hash values. */
var HASH_UNDEFINED = '__lodash_hash_undefined__';

/**
 * Sets the hash `key` to `value`.
 *
 * @private
 * @name set
 * @memberOf Hash
 * @param {string} key The key of the value to set.
 * @param {*} value The value to set.
 * @returns {Object} Returns the hash instance.
 */
function hashSet(key, value) {
  var data = this.__data__;
  this.size += this.has(key) ? 0 : 1;
  data[key] = (nativeCreate && value === undefined) ? HASH_UNDEFINED : value;
  return this;
}

module.exports = hashSet;


/***/ }),

/***/ "./node_modules/lodash/_initCloneArray.js":
/*!************************************************!*\
  !*** ./node_modules/lodash/_initCloneArray.js ***!
  \************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports) {

/** Used for built-in method references. */
var objectProto = Object.prototype;

/** Used to check objects for own properties. */
var hasOwnProperty = objectProto.hasOwnProperty;

/**
 * Initializes an array clone.
 *
 * @private
 * @param {Array} array The array to clone.
 * @returns {Array} Returns the initialized clone.
 */
function initCloneArray(array) {
  var length = array.length,
      result = new array.constructor(length);

  // Add properties assigned by `RegExp#exec`.
  if (length && typeof array[0] == 'string' && hasOwnProperty.call(array, 'index')) {
    result.index = array.index;
    result.input = array.input;
  }
  return result;
}

module.exports = initCloneArray;


/***/ }),

/***/ "./node_modules/lodash/_initCloneByTag.js":
/*!************************************************!*\
  !*** ./node_modules/lodash/_initCloneByTag.js ***!
  \************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var cloneArrayBuffer = __webpack_require__(/*! ./_cloneArrayBuffer */ "./node_modules/lodash/_cloneArrayBuffer.js"),
    cloneDataView = __webpack_require__(/*! ./_cloneDataView */ "./node_modules/lodash/_cloneDataView.js"),
    cloneRegExp = __webpack_require__(/*! ./_cloneRegExp */ "./node_modules/lodash/_cloneRegExp.js"),
    cloneSymbol = __webpack_require__(/*! ./_cloneSymbol */ "./node_modules/lodash/_cloneSymbol.js"),
    cloneTypedArray = __webpack_require__(/*! ./_cloneTypedArray */ "./node_modules/lodash/_cloneTypedArray.js");

/** `Object#toString` result references. */
var boolTag = '[object Boolean]',
    dateTag = '[object Date]',
    mapTag = '[object Map]',
    numberTag = '[object Number]',
    regexpTag = '[object RegExp]',
    setTag = '[object Set]',
    stringTag = '[object String]',
    symbolTag = '[object Symbol]';

var arrayBufferTag = '[object ArrayBuffer]',
    dataViewTag = '[object DataView]',
    float32Tag = '[object Float32Array]',
    float64Tag = '[object Float64Array]',
    int8Tag = '[object Int8Array]',
    int16Tag = '[object Int16Array]',
    int32Tag = '[object Int32Array]',
    uint8Tag = '[object Uint8Array]',
    uint8ClampedTag = '[object Uint8ClampedArray]',
    uint16Tag = '[object Uint16Array]',
    uint32Tag = '[object Uint32Array]';

/**
 * Initializes an object clone based on its `toStringTag`.
 *
 * **Note:** This function only supports cloning values with tags of
 * `Boolean`, `Date`, `Error`, `Map`, `Number`, `RegExp`, `Set`, or `String`.
 *
 * @private
 * @param {Object} object The object to clone.
 * @param {string} tag The `toStringTag` of the object to clone.
 * @param {boolean} [isDeep] Specify a deep clone.
 * @returns {Object} Returns the initialized clone.
 */
function initCloneByTag(object, tag, isDeep) {
  var Ctor = object.constructor;
  switch (tag) {
    case arrayBufferTag:
      return cloneArrayBuffer(object);

    case boolTag:
    case dateTag:
      return new Ctor(+object);

    case dataViewTag:
      return cloneDataView(object, isDeep);

    case float32Tag: case float64Tag:
    case int8Tag: case int16Tag: case int32Tag:
    case uint8Tag: case uint8ClampedTag: case uint16Tag: case uint32Tag:
      return cloneTypedArray(object, isDeep);

    case mapTag:
      return new Ctor;

    case numberTag:
    case stringTag:
      return new Ctor(object);

    case regexpTag:
      return cloneRegExp(object);

    case setTag:
      return new Ctor;

    case symbolTag:
      return cloneSymbol(object);
  }
}

module.exports = initCloneByTag;


/***/ }),

/***/ "./node_modules/lodash/_initCloneObject.js":
/*!*************************************************!*\
  !*** ./node_modules/lodash/_initCloneObject.js ***!
  \*************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var baseCreate = __webpack_require__(/*! ./_baseCreate */ "./node_modules/lodash/_baseCreate.js"),
    getPrototype = __webpack_require__(/*! ./_getPrototype */ "./node_modules/lodash/_getPrototype.js"),
    isPrototype = __webpack_require__(/*! ./_isPrototype */ "./node_modules/lodash/_isPrototype.js");

/**
 * Initializes an object clone.
 *
 * @private
 * @param {Object} object The object to clone.
 * @returns {Object} Returns the initialized clone.
 */
function initCloneObject(object) {
  return (typeof object.constructor == 'function' && !isPrototype(object))
    ? baseCreate(getPrototype(object))
    : {};
}

module.exports = initCloneObject;


/***/ }),

/***/ "./node_modules/lodash/_isFlattenable.js":
/*!***********************************************!*\
  !*** ./node_modules/lodash/_isFlattenable.js ***!
  \***********************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var Symbol = __webpack_require__(/*! ./_Symbol */ "./node_modules/lodash/_Symbol.js"),
    isArguments = __webpack_require__(/*! ./isArguments */ "./node_modules/lodash/isArguments.js"),
    isArray = __webpack_require__(/*! ./isArray */ "./node_modules/lodash/isArray.js");

/** Built-in value references. */
var spreadableSymbol = Symbol ? Symbol.isConcatSpreadable : undefined;

/**
 * Checks if `value` is a flattenable `arguments` object or array.
 *
 * @private
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is flattenable, else `false`.
 */
function isFlattenable(value) {
  return isArray(value) || isArguments(value) ||
    !!(spreadableSymbol && value && value[spreadableSymbol]);
}

module.exports = isFlattenable;


/***/ }),

/***/ "./node_modules/lodash/_isIndex.js":
/*!*****************************************!*\
  !*** ./node_modules/lodash/_isIndex.js ***!
  \*****************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports) {

/** Used as references for various `Number` constants. */
var MAX_SAFE_INTEGER = 9007199254740991;

/** Used to detect unsigned integer values. */
var reIsUint = /^(?:0|[1-9]\d*)$/;

/**
 * Checks if `value` is a valid array-like index.
 *
 * @private
 * @param {*} value The value to check.
 * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.
 * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.
 */
function isIndex(value, length) {
  var type = typeof value;
  length = length == null ? MAX_SAFE_INTEGER : length;

  return !!length &&
    (type == 'number' ||
      (type != 'symbol' && reIsUint.test(value))) &&
        (value > -1 && value % 1 == 0 && value < length);
}

module.exports = isIndex;


/***/ }),

/***/ "./node_modules/lodash/_isIterateeCall.js":
/*!************************************************!*\
  !*** ./node_modules/lodash/_isIterateeCall.js ***!
  \************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var eq = __webpack_require__(/*! ./eq */ "./node_modules/lodash/eq.js"),
    isArrayLike = __webpack_require__(/*! ./isArrayLike */ "./node_modules/lodash/isArrayLike.js"),
    isIndex = __webpack_require__(/*! ./_isIndex */ "./node_modules/lodash/_isIndex.js"),
    isObject = __webpack_require__(/*! ./isObject */ "./node_modules/lodash/isObject.js");

/**
 * Checks if the given arguments are from an iteratee call.
 *
 * @private
 * @param {*} value The potential iteratee value argument.
 * @param {*} index The potential iteratee index or key argument.
 * @param {*} object The potential iteratee object argument.
 * @returns {boolean} Returns `true` if the arguments are from an iteratee call,
 *  else `false`.
 */
function isIterateeCall(value, index, object) {
  if (!isObject(object)) {
    return false;
  }
  var type = typeof index;
  if (type == 'number'
        ? (isArrayLike(object) && isIndex(index, object.length))
        : (type == 'string' && index in object)
      ) {
    return eq(object[index], value);
  }
  return false;
}

module.exports = isIterateeCall;


/***/ }),

/***/ "./node_modules/lodash/_isKey.js":
/*!***************************************!*\
  !*** ./node_modules/lodash/_isKey.js ***!
  \***************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var isArray = __webpack_require__(/*! ./isArray */ "./node_modules/lodash/isArray.js"),
    isSymbol = __webpack_require__(/*! ./isSymbol */ "./node_modules/lodash/isSymbol.js");

/** Used to match property names within property paths. */
var reIsDeepProp = /\.|\[(?:[^[\]]*|(["'])(?:(?!\1)[^\\]|\\.)*?\1)\]/,
    reIsPlainProp = /^\w*$/;

/**
 * Checks if `value` is a property name and not a property path.
 *
 * @private
 * @param {*} value The value to check.
 * @param {Object} [object] The object to query keys on.
 * @returns {boolean} Returns `true` if `value` is a property name, else `false`.
 */
function isKey(value, object) {
  if (isArray(value)) {
    return false;
  }
  var type = typeof value;
  if (type == 'number' || type == 'symbol' || type == 'boolean' ||
      value == null || isSymbol(value)) {
    return true;
  }
  return reIsPlainProp.test(value) || !reIsDeepProp.test(value) ||
    (object != null && value in Object(object));
}

module.exports = isKey;


/***/ }),

/***/ "./node_modules/lodash/_isKeyable.js":
/*!*******************************************!*\
  !*** ./node_modules/lodash/_isKeyable.js ***!
  \*******************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports) {

/**
 * Checks if `value` is suitable for use as unique object key.
 *
 * @private
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is suitable, else `false`.
 */
function isKeyable(value) {
  var type = typeof value;
  return (type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean')
    ? (value !== '__proto__')
    : (value === null);
}

module.exports = isKeyable;


/***/ }),

/***/ "./node_modules/lodash/_isMasked.js":
/*!******************************************!*\
  !*** ./node_modules/lodash/_isMasked.js ***!
  \******************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var coreJsData = __webpack_require__(/*! ./_coreJsData */ "./node_modules/lodash/_coreJsData.js");

/** Used to detect methods masquerading as native. */
var maskSrcKey = (function() {
  var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');
  return uid ? ('Symbol(src)_1.' + uid) : '';
}());

/**
 * Checks if `func` has its source masked.
 *
 * @private
 * @param {Function} func The function to check.
 * @returns {boolean} Returns `true` if `func` is masked, else `false`.
 */
function isMasked(func) {
  return !!maskSrcKey && (maskSrcKey in func);
}

module.exports = isMasked;


/***/ }),

/***/ "./node_modules/lodash/_isPrototype.js":
/*!*********************************************!*\
  !*** ./node_modules/lodash/_isPrototype.js ***!
  \*********************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports) {

/** Used for built-in method references. */
var objectProto = Object.prototype;

/**
 * Checks if `value` is likely a prototype object.
 *
 * @private
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.
 */
function isPrototype(value) {
  var Ctor = value && value.constructor,
      proto = (typeof Ctor == 'function' && Ctor.prototype) || objectProto;

  return value === proto;
}

module.exports = isPrototype;


/***/ }),

/***/ "./node_modules/lodash/_isStrictComparable.js":
/*!****************************************************!*\
  !*** ./node_modules/lodash/_isStrictComparable.js ***!
  \****************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var isObject = __webpack_require__(/*! ./isObject */ "./node_modules/lodash/isObject.js");

/**
 * Checks if `value` is suitable for strict equality comparisons, i.e. `===`.
 *
 * @private
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` if suitable for strict
 *  equality comparisons, else `false`.
 */
function isStrictComparable(value) {
  return value === value && !isObject(value);
}

module.exports = isStrictComparable;


/***/ }),

/***/ "./node_modules/lodash/_listCacheClear.js":
/*!************************************************!*\
  !*** ./node_modules/lodash/_listCacheClear.js ***!
  \************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports) {

/**
 * Removes all key-value entries from the list cache.
 *
 * @private
 * @name clear
 * @memberOf ListCache
 */
function listCacheClear() {
  this.__data__ = [];
  this.size = 0;
}

module.exports = listCacheClear;


/***/ }),

/***/ "./node_modules/lodash/_listCacheDelete.js":
/*!*************************************************!*\
  !*** ./node_modules/lodash/_listCacheDelete.js ***!
  \*************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var assocIndexOf = __webpack_require__(/*! ./_assocIndexOf */ "./node_modules/lodash/_assocIndexOf.js");

/** Used for built-in method references. */
var arrayProto = Array.prototype;

/** Built-in value references. */
var splice = arrayProto.splice;

/**
 * Removes `key` and its value from the list cache.
 *
 * @private
 * @name delete
 * @memberOf ListCache
 * @param {string} key The key of the value to remove.
 * @returns {boolean} Returns `true` if the entry was removed, else `false`.
 */
function listCacheDelete(key) {
  var data = this.__data__,
      index = assocIndexOf(data, key);

  if (index < 0) {
    return false;
  }
  var lastIndex = data.length - 1;
  if (index == lastIndex) {
    data.pop();
  } else {
    splice.call(data, index, 1);
  }
  --this.size;
  return true;
}

module.exports = listCacheDelete;


/***/ }),

/***/ "./node_modules/lodash/_listCacheGet.js":
/*!**********************************************!*\
  !*** ./node_modules/lodash/_listCacheGet.js ***!
  \**********************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var assocIndexOf = __webpack_require__(/*! ./_assocIndexOf */ "./node_modules/lodash/_assocIndexOf.js");

/**
 * Gets the list cache value for `key`.
 *
 * @private
 * @name get
 * @memberOf ListCache
 * @param {string} key The key of the value to get.
 * @returns {*} Returns the entry value.
 */
function listCacheGet(key) {
  var data = this.__data__,
      index = assocIndexOf(data, key);

  return index < 0 ? undefined : data[index][1];
}

module.exports = listCacheGet;


/***/ }),

/***/ "./node_modules/lodash/_listCacheHas.js":
/*!**********************************************!*\
  !*** ./node_modules/lodash/_listCacheHas.js ***!
  \**********************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var assocIndexOf = __webpack_require__(/*! ./_assocIndexOf */ "./node_modules/lodash/_assocIndexOf.js");

/**
 * Checks if a list cache value for `key` exists.
 *
 * @private
 * @name has
 * @memberOf ListCache
 * @param {string} key The key of the entry to check.
 * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
 */
function listCacheHas(key) {
  return assocIndexOf(this.__data__, key) > -1;
}

module.exports = listCacheHas;


/***/ }),

/***/ "./node_modules/lodash/_listCacheSet.js":
/*!**********************************************!*\
  !*** ./node_modules/lodash/_listCacheSet.js ***!
  \**********************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var assocIndexOf = __webpack_require__(/*! ./_assocIndexOf */ "./node_modules/lodash/_assocIndexOf.js");

/**
 * Sets the list cache `key` to `value`.
 *
 * @private
 * @name set
 * @memberOf ListCache
 * @param {string} key The key of the value to set.
 * @param {*} value The value to set.
 * @returns {Object} Returns the list cache instance.
 */
function listCacheSet(key, value) {
  var data = this.__data__,
      index = assocIndexOf(data, key);

  if (index < 0) {
    ++this.size;
    data.push([key, value]);
  } else {
    data[index][1] = value;
  }
  return this;
}

module.exports = listCacheSet;


/***/ }),

/***/ "./node_modules/lodash/_mapCacheClear.js":
/*!***********************************************!*\
  !*** ./node_modules/lodash/_mapCacheClear.js ***!
  \***********************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var Hash = __webpack_require__(/*! ./_Hash */ "./node_modules/lodash/_Hash.js"),
    ListCache = __webpack_require__(/*! ./_ListCache */ "./node_modules/lodash/_ListCache.js"),
    Map = __webpack_require__(/*! ./_Map */ "./node_modules/lodash/_Map.js");

/**
 * Removes all key-value entries from the map.
 *
 * @private
 * @name clear
 * @memberOf MapCache
 */
function mapCacheClear() {
  this.size = 0;
  this.__data__ = {
    'hash': new Hash,
    'map': new (Map || ListCache),
    'string': new Hash
  };
}

module.exports = mapCacheClear;


/***/ }),

/***/ "./node_modules/lodash/_mapCacheDelete.js":
/*!************************************************!*\
  !*** ./node_modules/lodash/_mapCacheDelete.js ***!
  \************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var getMapData = __webpack_require__(/*! ./_getMapData */ "./node_modules/lodash/_getMapData.js");

/**
 * Removes `key` and its value from the map.
 *
 * @private
 * @name delete
 * @memberOf MapCache
 * @param {string} key The key of the value to remove.
 * @returns {boolean} Returns `true` if the entry was removed, else `false`.
 */
function mapCacheDelete(key) {
  var result = getMapData(this, key)['delete'](key);
  this.size -= result ? 1 : 0;
  return result;
}

module.exports = mapCacheDelete;


/***/ }),

/***/ "./node_modules/lodash/_mapCacheGet.js":
/*!*********************************************!*\
  !*** ./node_modules/lodash/_mapCacheGet.js ***!
  \*********************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var getMapData = __webpack_require__(/*! ./_getMapData */ "./node_modules/lodash/_getMapData.js");

/**
 * Gets the map value for `key`.
 *
 * @private
 * @name get
 * @memberOf MapCache
 * @param {string} key The key of the value to get.
 * @returns {*} Returns the entry value.
 */
function mapCacheGet(key) {
  return getMapData(this, key).get(key);
}

module.exports = mapCacheGet;


/***/ }),

/***/ "./node_modules/lodash/_mapCacheHas.js":
/*!*********************************************!*\
  !*** ./node_modules/lodash/_mapCacheHas.js ***!
  \*********************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var getMapData = __webpack_require__(/*! ./_getMapData */ "./node_modules/lodash/_getMapData.js");

/**
 * Checks if a map value for `key` exists.
 *
 * @private
 * @name has
 * @memberOf MapCache
 * @param {string} key The key of the entry to check.
 * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
 */
function mapCacheHas(key) {
  return getMapData(this, key).has(key);
}

module.exports = mapCacheHas;


/***/ }),

/***/ "./node_modules/lodash/_mapCacheSet.js":
/*!*********************************************!*\
  !*** ./node_modules/lodash/_mapCacheSet.js ***!
  \*********************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var getMapData = __webpack_require__(/*! ./_getMapData */ "./node_modules/lodash/_getMapData.js");

/**
 * Sets the map `key` to `value`.
 *
 * @private
 * @name set
 * @memberOf MapCache
 * @param {string} key The key of the value to set.
 * @param {*} value The value to set.
 * @returns {Object} Returns the map cache instance.
 */
function mapCacheSet(key, value) {
  var data = getMapData(this, key),
      size = data.size;

  data.set(key, value);
  this.size += data.size == size ? 0 : 1;
  return this;
}

module.exports = mapCacheSet;


/***/ }),

/***/ "./node_modules/lodash/_mapToArray.js":
/*!********************************************!*\
  !*** ./node_modules/lodash/_mapToArray.js ***!
  \********************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports) {

/**
 * Converts `map` to its key-value pairs.
 *
 * @private
 * @param {Object} map The map to convert.
 * @returns {Array} Returns the key-value pairs.
 */
function mapToArray(map) {
  var index = -1,
      result = Array(map.size);

  map.forEach(function(value, key) {
    result[++index] = [key, value];
  });
  return result;
}

module.exports = mapToArray;


/***/ }),

/***/ "./node_modules/lodash/_matchesStrictComparable.js":
/*!*********************************************************!*\
  !*** ./node_modules/lodash/_matchesStrictComparable.js ***!
  \*********************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports) {

/**
 * A specialized version of `matchesProperty` for source values suitable
 * for strict equality comparisons, i.e. `===`.
 *
 * @private
 * @param {string} key The key of the property to get.
 * @param {*} srcValue The value to match.
 * @returns {Function} Returns the new spec function.
 */
function matchesStrictComparable(key, srcValue) {
  return function(object) {
    if (object == null) {
      return false;
    }
    return object[key] === srcValue &&
      (srcValue !== undefined || (key in Object(object)));
  };
}

module.exports = matchesStrictComparable;


/***/ }),

/***/ "./node_modules/lodash/_memoizeCapped.js":
/*!***********************************************!*\
  !*** ./node_modules/lodash/_memoizeCapped.js ***!
  \***********************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var memoize = __webpack_require__(/*! ./memoize */ "./node_modules/lodash/memoize.js");

/** Used as the maximum memoize cache size. */
var MAX_MEMOIZE_SIZE = 500;

/**
 * A specialized version of `_.memoize` which clears the memoized function's
 * cache when it exceeds `MAX_MEMOIZE_SIZE`.
 *
 * @private
 * @param {Function} func The function to have its output memoized.
 * @returns {Function} Returns the new memoized function.
 */
function memoizeCapped(func) {
  var result = memoize(func, function(key) {
    if (cache.size === MAX_MEMOIZE_SIZE) {
      cache.clear();
    }
    return key;
  });

  var cache = result.cache;
  return result;
}

module.exports = memoizeCapped;


/***/ }),

/***/ "./node_modules/lodash/_nativeCreate.js":
/*!**********************************************!*\
  !*** ./node_modules/lodash/_nativeCreate.js ***!
  \**********************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var getNative = __webpack_require__(/*! ./_getNative */ "./node_modules/lodash/_getNative.js");

/* Built-in method references that are verified to be native. */
var nativeCreate = getNative(Object, 'create');

module.exports = nativeCreate;


/***/ }),

/***/ "./node_modules/lodash/_nativeKeys.js":
/*!********************************************!*\
  !*** ./node_modules/lodash/_nativeKeys.js ***!
  \********************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var overArg = __webpack_require__(/*! ./_overArg */ "./node_modules/lodash/_overArg.js");

/* Built-in method references for those with the same name as other `lodash` methods. */
var nativeKeys = overArg(Object.keys, Object);

module.exports = nativeKeys;


/***/ }),

/***/ "./node_modules/lodash/_nativeKeysIn.js":
/*!**********************************************!*\
  !*** ./node_modules/lodash/_nativeKeysIn.js ***!
  \**********************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports) {

/**
 * This function is like
 * [`Object.keys`](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)
 * except that it includes inherited enumerable properties.
 *
 * @private
 * @param {Object} object The object to query.
 * @returns {Array} Returns the array of property names.
 */
function nativeKeysIn(object) {
  var result = [];
  if (object != null) {
    for (var key in Object(object)) {
      result.push(key);
    }
  }
  return result;
}

module.exports = nativeKeysIn;


/***/ }),

/***/ "./node_modules/lodash/_nodeUtil.js":
/*!******************************************!*\
  !*** ./node_modules/lodash/_nodeUtil.js ***!
  \******************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(module) {var freeGlobal = __webpack_require__(/*! ./_freeGlobal */ "./node_modules/lodash/_freeGlobal.js");

/** Detect free variable `exports`. */
var freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;

/** Detect free variable `module`. */
var freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;

/** Detect the popular CommonJS extension `module.exports`. */
var moduleExports = freeModule && freeModule.exports === freeExports;

/** Detect free variable `process` from Node.js. */
var freeProcess = moduleExports && freeGlobal.process;

/** Used to access faster Node.js helpers. */
var nodeUtil = (function() {
  try {
    // Use `util.types` for Node.js 10+.
    var types = freeModule && freeModule.require && freeModule.require('util').types;

    if (types) {
      return types;
    }

    // Legacy `process.binding('util')` for Node.js < 10.
    return freeProcess && freeProcess.binding && freeProcess.binding('util');
  } catch (e) {}
}());

module.exports = nodeUtil;

/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(/*! ./../webpack/buildin/module.js */ "./node_modules/webpack/buildin/module.js")(module)))

/***/ }),

/***/ "./node_modules/lodash/_objectToString.js":
/*!************************************************!*\
  !*** ./node_modules/lodash/_objectToString.js ***!
  \************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports) {

/** Used for built-in method references. */
var objectProto = Object.prototype;

/**
 * Used to resolve the
 * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)
 * of values.
 */
var nativeObjectToString = objectProto.toString;

/**
 * Converts `value` to a string using `Object.prototype.toString`.
 *
 * @private
 * @param {*} value The value to convert.
 * @returns {string} Returns the converted string.
 */
function objectToString(value) {
  return nativeObjectToString.call(value);
}

module.exports = objectToString;


/***/ }),

/***/ "./node_modules/lodash/_overArg.js":
/*!*****************************************!*\
  !*** ./node_modules/lodash/_overArg.js ***!
  \*****************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports) {

/**
 * Creates a unary function that invokes `func` with its argument transformed.
 *
 * @private
 * @param {Function} func The function to wrap.
 * @param {Function} transform The argument transform.
 * @returns {Function} Returns the new function.
 */
function overArg(func, transform) {
  return function(arg) {
    return func(transform(arg));
  };
}

module.exports = overArg;


/***/ }),

/***/ "./node_modules/lodash/_overRest.js":
/*!******************************************!*\
  !*** ./node_modules/lodash/_overRest.js ***!
  \******************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var apply = __webpack_require__(/*! ./_apply */ "./node_modules/lodash/_apply.js");

/* Built-in method references for those with the same name as other `lodash` methods. */
var nativeMax = Math.max;

/**
 * A specialized version of `baseRest` which transforms the rest array.
 *
 * @private
 * @param {Function} func The function to apply a rest parameter to.
 * @param {number} [start=func.length-1] The start position of the rest parameter.
 * @param {Function} transform The rest array transform.
 * @returns {Function} Returns the new function.
 */
function overRest(func, start, transform) {
  start = nativeMax(start === undefined ? (func.length - 1) : start, 0);
  return function() {
    var args = arguments,
        index = -1,
        length = nativeMax(args.length - start, 0),
        array = Array(length);

    while (++index < length) {
      array[index] = args[start + index];
    }
    index = -1;
    var otherArgs = Array(start + 1);
    while (++index < start) {
      otherArgs[index] = args[index];
    }
    otherArgs[start] = transform(array);
    return apply(func, this, otherArgs);
  };
}

module.exports = overRest;


/***/ }),

/***/ "./node_modules/lodash/_root.js":
/*!**************************************!*\
  !*** ./node_modules/lodash/_root.js ***!
  \**************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var freeGlobal = __webpack_require__(/*! ./_freeGlobal */ "./node_modules/lodash/_freeGlobal.js");

/** Detect free variable `self`. */
var freeSelf = typeof self == 'object' && self && self.Object === Object && self;

/** Used as a reference to the global object. */
var root = freeGlobal || freeSelf || Function('return this')();

module.exports = root;


/***/ }),

/***/ "./node_modules/lodash/_setCacheAdd.js":
/*!*********************************************!*\
  !*** ./node_modules/lodash/_setCacheAdd.js ***!
  \*********************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports) {

/** Used to stand-in for `undefined` hash values. */
var HASH_UNDEFINED = '__lodash_hash_undefined__';

/**
 * Adds `value` to the array cache.
 *
 * @private
 * @name add
 * @memberOf SetCache
 * @alias push
 * @param {*} value The value to cache.
 * @returns {Object} Returns the cache instance.
 */
function setCacheAdd(value) {
  this.__data__.set(value, HASH_UNDEFINED);
  return this;
}

module.exports = setCacheAdd;


/***/ }),

/***/ "./node_modules/lodash/_setCacheHas.js":
/*!*********************************************!*\
  !*** ./node_modules/lodash/_setCacheHas.js ***!
  \*********************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports) {

/**
 * Checks if `value` is in the array cache.
 *
 * @private
 * @name has
 * @memberOf SetCache
 * @param {*} value The value to search for.
 * @returns {number} Returns `true` if `value` is found, else `false`.
 */
function setCacheHas(value) {
  return this.__data__.has(value);
}

module.exports = setCacheHas;


/***/ }),

/***/ "./node_modules/lodash/_setToArray.js":
/*!********************************************!*\
  !*** ./node_modules/lodash/_setToArray.js ***!
  \********************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports) {

/**
 * Converts `set` to an array of its values.
 *
 * @private
 * @param {Object} set The set to convert.
 * @returns {Array} Returns the values.
 */
function setToArray(set) {
  var index = -1,
      result = Array(set.size);

  set.forEach(function(value) {
    result[++index] = value;
  });
  return result;
}

module.exports = setToArray;


/***/ }),

/***/ "./node_modules/lodash/_setToString.js":
/*!*********************************************!*\
  !*** ./node_modules/lodash/_setToString.js ***!
  \*********************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var baseSetToString = __webpack_require__(/*! ./_baseSetToString */ "./node_modules/lodash/_baseSetToString.js"),
    shortOut = __webpack_require__(/*! ./_shortOut */ "./node_modules/lodash/_shortOut.js");

/**
 * Sets the `toString` method of `func` to return `string`.
 *
 * @private
 * @param {Function} func The function to modify.
 * @param {Function} string The `toString` result.
 * @returns {Function} Returns `func`.
 */
var setToString = shortOut(baseSetToString);

module.exports = setToString;


/***/ }),

/***/ "./node_modules/lodash/_shortOut.js":
/*!******************************************!*\
  !*** ./node_modules/lodash/_shortOut.js ***!
  \******************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports) {

/** Used to detect hot functions by number of calls within a span of milliseconds. */
var HOT_COUNT = 800,
    HOT_SPAN = 16;

/* Built-in method references for those with the same name as other `lodash` methods. */
var nativeNow = Date.now;

/**
 * Creates a function that'll short out and invoke `identity` instead
 * of `func` when it's called `HOT_COUNT` or more times in `HOT_SPAN`
 * milliseconds.
 *
 * @private
 * @param {Function} func The function to restrict.
 * @returns {Function} Returns the new shortable function.
 */
function shortOut(func) {
  var count = 0,
      lastCalled = 0;

  return function() {
    var stamp = nativeNow(),
        remaining = HOT_SPAN - (stamp - lastCalled);

    lastCalled = stamp;
    if (remaining > 0) {
      if (++count >= HOT_COUNT) {
        return arguments[0];
      }
    } else {
      count = 0;
    }
    return func.apply(undefined, arguments);
  };
}

module.exports = shortOut;


/***/ }),

/***/ "./node_modules/lodash/_stackClear.js":
/*!********************************************!*\
  !*** ./node_modules/lodash/_stackClear.js ***!
  \********************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var ListCache = __webpack_require__(/*! ./_ListCache */ "./node_modules/lodash/_ListCache.js");

/**
 * Removes all key-value entries from the stack.
 *
 * @private
 * @name clear
 * @memberOf Stack
 */
function stackClear() {
  this.__data__ = new ListCache;
  this.size = 0;
}

module.exports = stackClear;


/***/ }),

/***/ "./node_modules/lodash/_stackDelete.js":
/*!*********************************************!*\
  !*** ./node_modules/lodash/_stackDelete.js ***!
  \*********************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports) {

/**
 * Removes `key` and its value from the stack.
 *
 * @private
 * @name delete
 * @memberOf Stack
 * @param {string} key The key of the value to remove.
 * @returns {boolean} Returns `true` if the entry was removed, else `false`.
 */
function stackDelete(key) {
  var data = this.__data__,
      result = data['delete'](key);

  this.size = data.size;
  return result;
}

module.exports = stackDelete;


/***/ }),

/***/ "./node_modules/lodash/_stackGet.js":
/*!******************************************!*\
  !*** ./node_modules/lodash/_stackGet.js ***!
  \******************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports) {

/**
 * Gets the stack value for `key`.
 *
 * @private
 * @name get
 * @memberOf Stack
 * @param {string} key The key of the value to get.
 * @returns {*} Returns the entry value.
 */
function stackGet(key) {
  return this.__data__.get(key);
}

module.exports = stackGet;


/***/ }),

/***/ "./node_modules/lodash/_stackHas.js":
/*!******************************************!*\
  !*** ./node_modules/lodash/_stackHas.js ***!
  \******************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports) {

/**
 * Checks if a stack value for `key` exists.
 *
 * @private
 * @name has
 * @memberOf Stack
 * @param {string} key The key of the entry to check.
 * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
 */
function stackHas(key) {
  return this.__data__.has(key);
}

module.exports = stackHas;


/***/ }),

/***/ "./node_modules/lodash/_stackSet.js":
/*!******************************************!*\
  !*** ./node_modules/lodash/_stackSet.js ***!
  \******************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var ListCache = __webpack_require__(/*! ./_ListCache */ "./node_modules/lodash/_ListCache.js"),
    Map = __webpack_require__(/*! ./_Map */ "./node_modules/lodash/_Map.js"),
    MapCache = __webpack_require__(/*! ./_MapCache */ "./node_modules/lodash/_MapCache.js");

/** Used as the size to enable large array optimizations. */
var LARGE_ARRAY_SIZE = 200;

/**
 * Sets the stack `key` to `value`.
 *
 * @private
 * @name set
 * @memberOf Stack
 * @param {string} key The key of the value to set.
 * @param {*} value The value to set.
 * @returns {Object} Returns the stack cache instance.
 */
function stackSet(key, value) {
  var data = this.__data__;
  if (data instanceof ListCache) {
    var pairs = data.__data__;
    if (!Map || (pairs.length < LARGE_ARRAY_SIZE - 1)) {
      pairs.push([key, value]);
      this.size = ++data.size;
      return this;
    }
    data = this.__data__ = new MapCache(pairs);
  }
  data.set(key, value);
  this.size = data.size;
  return this;
}

module.exports = stackSet;


/***/ }),

/***/ "./node_modules/lodash/_strictIndexOf.js":
/*!***********************************************!*\
  !*** ./node_modules/lodash/_strictIndexOf.js ***!
  \***********************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports) {

/**
 * A specialized version of `_.indexOf` which performs strict equality
 * comparisons of values, i.e. `===`.
 *
 * @private
 * @param {Array} array The array to inspect.
 * @param {*} value The value to search for.
 * @param {number} fromIndex The index to search from.
 * @returns {number} Returns the index of the matched value, else `-1`.
 */
function strictIndexOf(array, value, fromIndex) {
  var index = fromIndex - 1,
      length = array.length;

  while (++index < length) {
    if (array[index] === value) {
      return index;
    }
  }
  return -1;
}

module.exports = strictIndexOf;


/***/ }),

/***/ "./node_modules/lodash/_stringToPath.js":
/*!**********************************************!*\
  !*** ./node_modules/lodash/_stringToPath.js ***!
  \**********************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var memoizeCapped = __webpack_require__(/*! ./_memoizeCapped */ "./node_modules/lodash/_memoizeCapped.js");

/** Used to match property names within property paths. */
var rePropName = /[^.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|$))/g;

/** Used to match backslashes in property paths. */
var reEscapeChar = /\\(\\)?/g;

/**
 * Converts `string` to a property path array.
 *
 * @private
 * @param {string} string The string to convert.
 * @returns {Array} Returns the property path array.
 */
var stringToPath = memoizeCapped(function(string) {
  var result = [];
  if (string.charCodeAt(0) === 46 /* . */) {
    result.push('');
  }
  string.replace(rePropName, function(match, number, quote, subString) {
    result.push(quote ? subString.replace(reEscapeChar, '$1') : (number || match));
  });
  return result;
});

module.exports = stringToPath;


/***/ }),

/***/ "./node_modules/lodash/_toKey.js":
/*!***************************************!*\
  !*** ./node_modules/lodash/_toKey.js ***!
  \***************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var isSymbol = __webpack_require__(/*! ./isSymbol */ "./node_modules/lodash/isSymbol.js");

/** Used as references for various `Number` constants. */
var INFINITY = 1 / 0;

/**
 * Converts `value` to a string key if it's not a string or symbol.
 *
 * @private
 * @param {*} value The value to inspect.
 * @returns {string|symbol} Returns the key.
 */
function toKey(value) {
  if (typeof value == 'string' || isSymbol(value)) {
    return value;
  }
  var result = (value + '');
  return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;
}

module.exports = toKey;


/***/ }),

/***/ "./node_modules/lodash/_toSource.js":
/*!******************************************!*\
  !*** ./node_modules/lodash/_toSource.js ***!
  \******************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports) {

/** Used for built-in method references. */
var funcProto = Function.prototype;

/** Used to resolve the decompiled source of functions. */
var funcToString = funcProto.toString;

/**
 * Converts `func` to its source code.
 *
 * @private
 * @param {Function} func The function to convert.
 * @returns {string} Returns the source code.
 */
function toSource(func) {
  if (func != null) {
    try {
      return funcToString.call(func);
    } catch (e) {}
    try {
      return (func + '');
    } catch (e) {}
  }
  return '';
}

module.exports = toSource;


/***/ }),

/***/ "./node_modules/lodash/cloneDeep.js":
/*!******************************************!*\
  !*** ./node_modules/lodash/cloneDeep.js ***!
  \******************************************/
/*! dynamic exports provided */
/*! exports used: default */
/***/ (function(module, exports, __webpack_require__) {

var baseClone = __webpack_require__(/*! ./_baseClone */ "./node_modules/lodash/_baseClone.js");

/** Used to compose bitmasks for cloning. */
var CLONE_DEEP_FLAG = 1,
    CLONE_SYMBOLS_FLAG = 4;

/**
 * This method is like `_.clone` except that it recursively clones `value`.
 *
 * @static
 * @memberOf _
 * @since 1.0.0
 * @category Lang
 * @param {*} value The value to recursively clone.
 * @returns {*} Returns the deep cloned value.
 * @see _.clone
 * @example
 *
 * var objects = [{ 'a': 1 }, { 'b': 2 }];
 *
 * var deep = _.cloneDeep(objects);
 * console.log(deep[0] === objects[0]);
 * // => false
 */
function cloneDeep(value) {
  return baseClone(value, CLONE_DEEP_FLAG | CLONE_SYMBOLS_FLAG);
}

module.exports = cloneDeep;


/***/ }),

/***/ "./node_modules/lodash/constant.js":
/*!*****************************************!*\
  !*** ./node_modules/lodash/constant.js ***!
  \*****************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports) {

/**
 * Creates a function that returns `value`.
 *
 * @static
 * @memberOf _
 * @since 2.4.0
 * @category Util
 * @param {*} value The value to return from the new function.
 * @returns {Function} Returns the new constant function.
 * @example
 *
 * var objects = _.times(2, _.constant({ 'a': 1 }));
 *
 * console.log(objects);
 * // => [{ 'a': 1 }, { 'a': 1 }]
 *
 * console.log(objects[0] === objects[1]);
 * // => true
 */
function constant(value) {
  return function() {
    return value;
  };
}

module.exports = constant;


/***/ }),

/***/ "./node_modules/lodash/debounce.js":
/*!*****************************************!*\
  !*** ./node_modules/lodash/debounce.js ***!
  \*****************************************/
/*! dynamic exports provided */
/*! exports used: default */
/***/ (function(module, exports, __webpack_require__) {

var isObject = __webpack_require__(/*! ./isObject */ "./node_modules/lodash/isObject.js"),
    now = __webpack_require__(/*! ./now */ "./node_modules/lodash/now.js"),
    toNumber = __webpack_require__(/*! ./toNumber */ "./node_modules/lodash/toNumber.js");

/** Error message constants. */
var FUNC_ERROR_TEXT = 'Expected a function';

/* Built-in method references for those with the same name as other `lodash` methods. */
var nativeMax = Math.max,
    nativeMin = Math.min;

/**
 * Creates a debounced function that delays invoking `func` until after `wait`
 * milliseconds have elapsed since the last time the debounced function was
 * invoked. The debounced function comes with a `cancel` method to cancel
 * delayed `func` invocations and a `flush` method to immediately invoke them.
 * Provide `options` to indicate whether `func` should be invoked on the
 * leading and/or trailing edge of the `wait` timeout. The `func` is invoked
 * with the last arguments provided to the debounced function. Subsequent
 * calls to the debounced function return the result of the last `func`
 * invocation.
 *
 * **Note:** If `leading` and `trailing` options are `true`, `func` is
 * invoked on the trailing edge of the timeout only if the debounced function
 * is invoked more than once during the `wait` timeout.
 *
 * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred
 * until to the next tick, similar to `setTimeout` with a timeout of `0`.
 *
 * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)
 * for details over the differences between `_.debounce` and `_.throttle`.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Function
 * @param {Function} func The function to debounce.
 * @param {number} [wait=0] The number of milliseconds to delay.
 * @param {Object} [options={}] The options object.
 * @param {boolean} [options.leading=false]
 *  Specify invoking on the leading edge of the timeout.
 * @param {number} [options.maxWait]
 *  The maximum time `func` is allowed to be delayed before it's invoked.
 * @param {boolean} [options.trailing=true]
 *  Specify invoking on the trailing edge of the timeout.
 * @returns {Function} Returns the new debounced function.
 * @example
 *
 * // Avoid costly calculations while the window size is in flux.
 * jQuery(window).on('resize', _.debounce(calculateLayout, 150));
 *
 * // Invoke `sendMail` when clicked, debouncing subsequent calls.
 * jQuery(element).on('click', _.debounce(sendMail, 300, {
 *   'leading': true,
 *   'trailing': false
 * }));
 *
 * // Ensure `batchLog` is invoked once after 1 second of debounced calls.
 * var debounced = _.debounce(batchLog, 250, { 'maxWait': 1000 });
 * var source = new EventSource('/stream');
 * jQuery(source).on('message', debounced);
 *
 * // Cancel the trailing debounced invocation.
 * jQuery(window).on('popstate', debounced.cancel);
 */
function debounce(func, wait, options) {
  var lastArgs,
      lastThis,
      maxWait,
      result,
      timerId,
      lastCallTime,
      lastInvokeTime = 0,
      leading = false,
      maxing = false,
      trailing = true;

  if (typeof func != 'function') {
    throw new TypeError(FUNC_ERROR_TEXT);
  }
  wait = toNumber(wait) || 0;
  if (isObject(options)) {
    leading = !!options.leading;
    maxing = 'maxWait' in options;
    maxWait = maxing ? nativeMax(toNumber(options.maxWait) || 0, wait) : maxWait;
    trailing = 'trailing' in options ? !!options.trailing : trailing;
  }

  function invokeFunc(time) {
    var args = lastArgs,
        thisArg = lastThis;

    lastArgs = lastThis = undefined;
    lastInvokeTime = time;
    result = func.apply(thisArg, args);
    return result;
  }

  function leadingEdge(time) {
    // Reset any `maxWait` timer.
    lastInvokeTime = time;
    // Start the timer for the trailing edge.
    timerId = setTimeout(timerExpired, wait);
    // Invoke the leading edge.
    return leading ? invokeFunc(time) : result;
  }

  function remainingWait(time) {
    var timeSinceLastCall = time - lastCallTime,
        timeSinceLastInvoke = time - lastInvokeTime,
        timeWaiting = wait - timeSinceLastCall;

    return maxing
      ? nativeMin(timeWaiting, maxWait - timeSinceLastInvoke)
      : timeWaiting;
  }

  function shouldInvoke(time) {
    var timeSinceLastCall = time - lastCallTime,
        timeSinceLastInvoke = time - lastInvokeTime;

    // Either this is the first call, activity has stopped and we're at the
    // trailing edge, the system time has gone backwards and we're treating
    // it as the trailing edge, or we've hit the `maxWait` limit.
    return (lastCallTime === undefined || (timeSinceLastCall >= wait) ||
      (timeSinceLastCall < 0) || (maxing && timeSinceLastInvoke >= maxWait));
  }

  function timerExpired() {
    var time = now();
    if (shouldInvoke(time)) {
      return trailingEdge(time);
    }
    // Restart the timer.
    timerId = setTimeout(timerExpired, remainingWait(time));
  }

  function trailingEdge(time) {
    timerId = undefined;

    // Only invoke if we have `lastArgs` which means `func` has been
    // debounced at least once.
    if (trailing && lastArgs) {
      return invokeFunc(time);
    }
    lastArgs = lastThis = undefined;
    return result;
  }

  function cancel() {
    if (timerId !== undefined) {
      clearTimeout(timerId);
    }
    lastInvokeTime = 0;
    lastArgs = lastCallTime = lastThis = timerId = undefined;
  }

  function flush() {
    return timerId === undefined ? result : trailingEdge(now());
  }

  function debounced() {
    var time = now(),
        isInvoking = shouldInvoke(time);

    lastArgs = arguments;
    lastThis = this;
    lastCallTime = time;

    if (isInvoking) {
      if (timerId === undefined) {
        return leadingEdge(lastCallTime);
      }
      if (maxing) {
        // Handle invocations in a tight loop.
        timerId = setTimeout(timerExpired, wait);
        return invokeFunc(lastCallTime);
      }
    }
    if (timerId === undefined) {
      timerId = setTimeout(timerExpired, wait);
    }
    return result;
  }
  debounced.cancel = cancel;
  debounced.flush = flush;
  return debounced;
}

module.exports = debounce;


/***/ }),

/***/ "./node_modules/lodash/eq.js":
/*!***********************************!*\
  !*** ./node_modules/lodash/eq.js ***!
  \***********************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports) {

/**
 * Performs a
 * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
 * comparison between two values to determine if they are equivalent.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to compare.
 * @param {*} other The other value to compare.
 * @returns {boolean} Returns `true` if the values are equivalent, else `false`.
 * @example
 *
 * var object = { 'a': 1 };
 * var other = { 'a': 1 };
 *
 * _.eq(object, object);
 * // => true
 *
 * _.eq(object, other);
 * // => false
 *
 * _.eq('a', 'a');
 * // => true
 *
 * _.eq('a', Object('a'));
 * // => false
 *
 * _.eq(NaN, NaN);
 * // => true
 */
function eq(value, other) {
  return value === other || (value !== value && other !== other);
}

module.exports = eq;


/***/ }),

/***/ "./node_modules/lodash/get.js":
/*!************************************!*\
  !*** ./node_modules/lodash/get.js ***!
  \************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var baseGet = __webpack_require__(/*! ./_baseGet */ "./node_modules/lodash/_baseGet.js");

/**
 * Gets the value at `path` of `object`. If the resolved value is
 * `undefined`, the `defaultValue` is returned in its place.
 *
 * @static
 * @memberOf _
 * @since 3.7.0
 * @category Object
 * @param {Object} object The object to query.
 * @param {Array|string} path The path of the property to get.
 * @param {*} [defaultValue] The value returned for `undefined` resolved values.
 * @returns {*} Returns the resolved value.
 * @example
 *
 * var object = { 'a': [{ 'b': { 'c': 3 } }] };
 *
 * _.get(object, 'a[0].b.c');
 * // => 3
 *
 * _.get(object, ['a', '0', 'b', 'c']);
 * // => 3
 *
 * _.get(object, 'a.b.c', 'default');
 * // => 'default'
 */
function get(object, path, defaultValue) {
  var result = object == null ? undefined : baseGet(object, path);
  return result === undefined ? defaultValue : result;
}

module.exports = get;


/***/ }),

/***/ "./node_modules/lodash/hasIn.js":
/*!**************************************!*\
  !*** ./node_modules/lodash/hasIn.js ***!
  \**************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var baseHasIn = __webpack_require__(/*! ./_baseHasIn */ "./node_modules/lodash/_baseHasIn.js"),
    hasPath = __webpack_require__(/*! ./_hasPath */ "./node_modules/lodash/_hasPath.js");

/**
 * Checks if `path` is a direct or inherited property of `object`.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Object
 * @param {Object} object The object to query.
 * @param {Array|string} path The path to check.
 * @returns {boolean} Returns `true` if `path` exists, else `false`.
 * @example
 *
 * var object = _.create({ 'a': _.create({ 'b': 2 }) });
 *
 * _.hasIn(object, 'a');
 * // => true
 *
 * _.hasIn(object, 'a.b');
 * // => true
 *
 * _.hasIn(object, ['a', 'b']);
 * // => true
 *
 * _.hasIn(object, 'b');
 * // => false
 */
function hasIn(object, path) {
  return object != null && hasPath(object, path, baseHasIn);
}

module.exports = hasIn;


/***/ }),

/***/ "./node_modules/lodash/identity.js":
/*!*****************************************!*\
  !*** ./node_modules/lodash/identity.js ***!
  \*****************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports) {

/**
 * This method returns the first argument it receives.
 *
 * @static
 * @since 0.1.0
 * @memberOf _
 * @category Util
 * @param {*} value Any value.
 * @returns {*} Returns `value`.
 * @example
 *
 * var object = { 'a': 1 };
 *
 * console.log(_.identity(object) === object);
 * // => true
 */
function identity(value) {
  return value;
}

module.exports = identity;


/***/ }),

/***/ "./node_modules/lodash/isArguments.js":
/*!********************************************!*\
  !*** ./node_modules/lodash/isArguments.js ***!
  \********************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var baseIsArguments = __webpack_require__(/*! ./_baseIsArguments */ "./node_modules/lodash/_baseIsArguments.js"),
    isObjectLike = __webpack_require__(/*! ./isObjectLike */ "./node_modules/lodash/isObjectLike.js");

/** Used for built-in method references. */
var objectProto = Object.prototype;

/** Used to check objects for own properties. */
var hasOwnProperty = objectProto.hasOwnProperty;

/** Built-in value references. */
var propertyIsEnumerable = objectProto.propertyIsEnumerable;

/**
 * Checks if `value` is likely an `arguments` object.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is an `arguments` object,
 *  else `false`.
 * @example
 *
 * _.isArguments(function() { return arguments; }());
 * // => true
 *
 * _.isArguments([1, 2, 3]);
 * // => false
 */
var isArguments = baseIsArguments(function() { return arguments; }()) ? baseIsArguments : function(value) {
  return isObjectLike(value) && hasOwnProperty.call(value, 'callee') &&
    !propertyIsEnumerable.call(value, 'callee');
};

module.exports = isArguments;


/***/ }),

/***/ "./node_modules/lodash/isArray.js":
/*!****************************************!*\
  !*** ./node_modules/lodash/isArray.js ***!
  \****************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports) {

/**
 * Checks if `value` is classified as an `Array` object.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is an array, else `false`.
 * @example
 *
 * _.isArray([1, 2, 3]);
 * // => true
 *
 * _.isArray(document.body.children);
 * // => false
 *
 * _.isArray('abc');
 * // => false
 *
 * _.isArray(_.noop);
 * // => false
 */
var isArray = Array.isArray;

module.exports = isArray;


/***/ }),

/***/ "./node_modules/lodash/isArrayLike.js":
/*!********************************************!*\
  !*** ./node_modules/lodash/isArrayLike.js ***!
  \********************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var isFunction = __webpack_require__(/*! ./isFunction */ "./node_modules/lodash/isFunction.js"),
    isLength = __webpack_require__(/*! ./isLength */ "./node_modules/lodash/isLength.js");

/**
 * Checks if `value` is array-like. A value is considered array-like if it's
 * not a function and has a `value.length` that's an integer greater than or
 * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is array-like, else `false`.
 * @example
 *
 * _.isArrayLike([1, 2, 3]);
 * // => true
 *
 * _.isArrayLike(document.body.children);
 * // => true
 *
 * _.isArrayLike('abc');
 * // => true
 *
 * _.isArrayLike(_.noop);
 * // => false
 */
function isArrayLike(value) {
  return value != null && isLength(value.length) && !isFunction(value);
}

module.exports = isArrayLike;


/***/ }),

/***/ "./node_modules/lodash/isBuffer.js":
/*!*****************************************!*\
  !*** ./node_modules/lodash/isBuffer.js ***!
  \*****************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(module) {var root = __webpack_require__(/*! ./_root */ "./node_modules/lodash/_root.js"),
    stubFalse = __webpack_require__(/*! ./stubFalse */ "./node_modules/lodash/stubFalse.js");

/** Detect free variable `exports`. */
var freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;

/** Detect free variable `module`. */
var freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;

/** Detect the popular CommonJS extension `module.exports`. */
var moduleExports = freeModule && freeModule.exports === freeExports;

/** Built-in value references. */
var Buffer = moduleExports ? root.Buffer : undefined;

/* Built-in method references for those with the same name as other `lodash` methods. */
var nativeIsBuffer = Buffer ? Buffer.isBuffer : undefined;

/**
 * Checks if `value` is a buffer.
 *
 * @static
 * @memberOf _
 * @since 4.3.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a buffer, else `false`.
 * @example
 *
 * _.isBuffer(new Buffer(2));
 * // => true
 *
 * _.isBuffer(new Uint8Array(2));
 * // => false
 */
var isBuffer = nativeIsBuffer || stubFalse;

module.exports = isBuffer;

/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(/*! ./../webpack/buildin/module.js */ "./node_modules/webpack/buildin/module.js")(module)))

/***/ }),

/***/ "./node_modules/lodash/isFunction.js":
/*!*******************************************!*\
  !*** ./node_modules/lodash/isFunction.js ***!
  \*******************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var baseGetTag = __webpack_require__(/*! ./_baseGetTag */ "./node_modules/lodash/_baseGetTag.js"),
    isObject = __webpack_require__(/*! ./isObject */ "./node_modules/lodash/isObject.js");

/** `Object#toString` result references. */
var asyncTag = '[object AsyncFunction]',
    funcTag = '[object Function]',
    genTag = '[object GeneratorFunction]',
    proxyTag = '[object Proxy]';

/**
 * Checks if `value` is classified as a `Function` object.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a function, else `false`.
 * @example
 *
 * _.isFunction(_);
 * // => true
 *
 * _.isFunction(/abc/);
 * // => false
 */
function isFunction(value) {
  if (!isObject(value)) {
    return false;
  }
  // The use of `Object#toString` avoids issues with the `typeof` operator
  // in Safari 9 which returns 'object' for typed arrays and other constructors.
  var tag = baseGetTag(value);
  return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;
}

module.exports = isFunction;


/***/ }),

/***/ "./node_modules/lodash/isLength.js":
/*!*****************************************!*\
  !*** ./node_modules/lodash/isLength.js ***!
  \*****************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports) {

/** Used as references for various `Number` constants. */
var MAX_SAFE_INTEGER = 9007199254740991;

/**
 * Checks if `value` is a valid array-like length.
 *
 * **Note:** This method is loosely based on
 * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.
 * @example
 *
 * _.isLength(3);
 * // => true
 *
 * _.isLength(Number.MIN_VALUE);
 * // => false
 *
 * _.isLength(Infinity);
 * // => false
 *
 * _.isLength('3');
 * // => false
 */
function isLength(value) {
  return typeof value == 'number' &&
    value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;
}

module.exports = isLength;


/***/ }),

/***/ "./node_modules/lodash/isMap.js":
/*!**************************************!*\
  !*** ./node_modules/lodash/isMap.js ***!
  \**************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var baseIsMap = __webpack_require__(/*! ./_baseIsMap */ "./node_modules/lodash/_baseIsMap.js"),
    baseUnary = __webpack_require__(/*! ./_baseUnary */ "./node_modules/lodash/_baseUnary.js"),
    nodeUtil = __webpack_require__(/*! ./_nodeUtil */ "./node_modules/lodash/_nodeUtil.js");

/* Node.js helper references. */
var nodeIsMap = nodeUtil && nodeUtil.isMap;

/**
 * Checks if `value` is classified as a `Map` object.
 *
 * @static
 * @memberOf _
 * @since 4.3.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a map, else `false`.
 * @example
 *
 * _.isMap(new Map);
 * // => true
 *
 * _.isMap(new WeakMap);
 * // => false
 */
var isMap = nodeIsMap ? baseUnary(nodeIsMap) : baseIsMap;

module.exports = isMap;


/***/ }),

/***/ "./node_modules/lodash/isObject.js":
/*!*****************************************!*\
  !*** ./node_modules/lodash/isObject.js ***!
  \*****************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports) {

/**
 * Checks if `value` is the
 * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)
 * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is an object, else `false`.
 * @example
 *
 * _.isObject({});
 * // => true
 *
 * _.isObject([1, 2, 3]);
 * // => true
 *
 * _.isObject(_.noop);
 * // => true
 *
 * _.isObject(null);
 * // => false
 */
function isObject(value) {
  var type = typeof value;
  return value != null && (type == 'object' || type == 'function');
}

module.exports = isObject;


/***/ }),

/***/ "./node_modules/lodash/isObjectLike.js":
/*!*********************************************!*\
  !*** ./node_modules/lodash/isObjectLike.js ***!
  \*********************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports) {

/**
 * Checks if `value` is object-like. A value is object-like if it's not `null`
 * and has a `typeof` result of "object".
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is object-like, else `false`.
 * @example
 *
 * _.isObjectLike({});
 * // => true
 *
 * _.isObjectLike([1, 2, 3]);
 * // => true
 *
 * _.isObjectLike(_.noop);
 * // => false
 *
 * _.isObjectLike(null);
 * // => false
 */
function isObjectLike(value) {
  return value != null && typeof value == 'object';
}

module.exports = isObjectLike;


/***/ }),

/***/ "./node_modules/lodash/isSet.js":
/*!**************************************!*\
  !*** ./node_modules/lodash/isSet.js ***!
  \**************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var baseIsSet = __webpack_require__(/*! ./_baseIsSet */ "./node_modules/lodash/_baseIsSet.js"),
    baseUnary = __webpack_require__(/*! ./_baseUnary */ "./node_modules/lodash/_baseUnary.js"),
    nodeUtil = __webpack_require__(/*! ./_nodeUtil */ "./node_modules/lodash/_nodeUtil.js");

/* Node.js helper references. */
var nodeIsSet = nodeUtil && nodeUtil.isSet;

/**
 * Checks if `value` is classified as a `Set` object.
 *
 * @static
 * @memberOf _
 * @since 4.3.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a set, else `false`.
 * @example
 *
 * _.isSet(new Set);
 * // => true
 *
 * _.isSet(new WeakSet);
 * // => false
 */
var isSet = nodeIsSet ? baseUnary(nodeIsSet) : baseIsSet;

module.exports = isSet;


/***/ }),

/***/ "./node_modules/lodash/isSymbol.js":
/*!*****************************************!*\
  !*** ./node_modules/lodash/isSymbol.js ***!
  \*****************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var baseGetTag = __webpack_require__(/*! ./_baseGetTag */ "./node_modules/lodash/_baseGetTag.js"),
    isObjectLike = __webpack_require__(/*! ./isObjectLike */ "./node_modules/lodash/isObjectLike.js");

/** `Object#toString` result references. */
var symbolTag = '[object Symbol]';

/**
 * Checks if `value` is classified as a `Symbol` primitive or object.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.
 * @example
 *
 * _.isSymbol(Symbol.iterator);
 * // => true
 *
 * _.isSymbol('abc');
 * // => false
 */
function isSymbol(value) {
  return typeof value == 'symbol' ||
    (isObjectLike(value) && baseGetTag(value) == symbolTag);
}

module.exports = isSymbol;


/***/ }),

/***/ "./node_modules/lodash/isTypedArray.js":
/*!*********************************************!*\
  !*** ./node_modules/lodash/isTypedArray.js ***!
  \*********************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var baseIsTypedArray = __webpack_require__(/*! ./_baseIsTypedArray */ "./node_modules/lodash/_baseIsTypedArray.js"),
    baseUnary = __webpack_require__(/*! ./_baseUnary */ "./node_modules/lodash/_baseUnary.js"),
    nodeUtil = __webpack_require__(/*! ./_nodeUtil */ "./node_modules/lodash/_nodeUtil.js");

/* Node.js helper references. */
var nodeIsTypedArray = nodeUtil && nodeUtil.isTypedArray;

/**
 * Checks if `value` is classified as a typed array.
 *
 * @static
 * @memberOf _
 * @since 3.0.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.
 * @example
 *
 * _.isTypedArray(new Uint8Array);
 * // => true
 *
 * _.isTypedArray([]);
 * // => false
 */
var isTypedArray = nodeIsTypedArray ? baseUnary(nodeIsTypedArray) : baseIsTypedArray;

module.exports = isTypedArray;


/***/ }),

/***/ "./node_modules/lodash/keys.js":
/*!*************************************!*\
  !*** ./node_modules/lodash/keys.js ***!
  \*************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var arrayLikeKeys = __webpack_require__(/*! ./_arrayLikeKeys */ "./node_modules/lodash/_arrayLikeKeys.js"),
    baseKeys = __webpack_require__(/*! ./_baseKeys */ "./node_modules/lodash/_baseKeys.js"),
    isArrayLike = __webpack_require__(/*! ./isArrayLike */ "./node_modules/lodash/isArrayLike.js");

/**
 * Creates an array of the own enumerable property names of `object`.
 *
 * **Note:** Non-object values are coerced to objects. See the
 * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)
 * for more details.
 *
 * @static
 * @since 0.1.0
 * @memberOf _
 * @category Object
 * @param {Object} object The object to query.
 * @returns {Array} Returns the array of property names.
 * @example
 *
 * function Foo() {
 *   this.a = 1;
 *   this.b = 2;
 * }
 *
 * Foo.prototype.c = 3;
 *
 * _.keys(new Foo);
 * // => ['a', 'b'] (iteration order is not guaranteed)
 *
 * _.keys('hi');
 * // => ['0', '1']
 */
function keys(object) {
  return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);
}

module.exports = keys;


/***/ }),

/***/ "./node_modules/lodash/keysIn.js":
/*!***************************************!*\
  !*** ./node_modules/lodash/keysIn.js ***!
  \***************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var arrayLikeKeys = __webpack_require__(/*! ./_arrayLikeKeys */ "./node_modules/lodash/_arrayLikeKeys.js"),
    baseKeysIn = __webpack_require__(/*! ./_baseKeysIn */ "./node_modules/lodash/_baseKeysIn.js"),
    isArrayLike = __webpack_require__(/*! ./isArrayLike */ "./node_modules/lodash/isArrayLike.js");

/**
 * Creates an array of the own and inherited enumerable property names of `object`.
 *
 * **Note:** Non-object values are coerced to objects.
 *
 * @static
 * @memberOf _
 * @since 3.0.0
 * @category Object
 * @param {Object} object The object to query.
 * @returns {Array} Returns the array of property names.
 * @example
 *
 * function Foo() {
 *   this.a = 1;
 *   this.b = 2;
 * }
 *
 * Foo.prototype.c = 3;
 *
 * _.keysIn(new Foo);
 * // => ['a', 'b', 'c'] (iteration order is not guaranteed)
 */
function keysIn(object) {
  return isArrayLike(object) ? arrayLikeKeys(object, true) : baseKeysIn(object);
}

module.exports = keysIn;


/***/ }),

/***/ "./node_modules/lodash/max.js":
/*!************************************!*\
  !*** ./node_modules/lodash/max.js ***!
  \************************************/
/*! dynamic exports provided */
/*! exports used: default */
/***/ (function(module, exports, __webpack_require__) {

var baseExtremum = __webpack_require__(/*! ./_baseExtremum */ "./node_modules/lodash/_baseExtremum.js"),
    baseGt = __webpack_require__(/*! ./_baseGt */ "./node_modules/lodash/_baseGt.js"),
    identity = __webpack_require__(/*! ./identity */ "./node_modules/lodash/identity.js");

/**
 * Computes the maximum value of `array`. If `array` is empty or falsey,
 * `undefined` is returned.
 *
 * @static
 * @since 0.1.0
 * @memberOf _
 * @category Math
 * @param {Array} array The array to iterate over.
 * @returns {*} Returns the maximum value.
 * @example
 *
 * _.max([4, 2, 8, 6]);
 * // => 8
 *
 * _.max([]);
 * // => undefined
 */
function max(array) {
  return (array && array.length)
    ? baseExtremum(array, identity, baseGt)
    : undefined;
}

module.exports = max;


/***/ }),

/***/ "./node_modules/lodash/memoize.js":
/*!****************************************!*\
  !*** ./node_modules/lodash/memoize.js ***!
  \****************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var MapCache = __webpack_require__(/*! ./_MapCache */ "./node_modules/lodash/_MapCache.js");

/** Error message constants. */
var FUNC_ERROR_TEXT = 'Expected a function';

/**
 * Creates a function that memoizes the result of `func`. If `resolver` is
 * provided, it determines the cache key for storing the result based on the
 * arguments provided to the memoized function. By default, the first argument
 * provided to the memoized function is used as the map cache key. The `func`
 * is invoked with the `this` binding of the memoized function.
 *
 * **Note:** The cache is exposed as the `cache` property on the memoized
 * function. Its creation may be customized by replacing the `_.memoize.Cache`
 * constructor with one whose instances implement the
 * [`Map`](http://ecma-international.org/ecma-262/7.0/#sec-properties-of-the-map-prototype-object)
 * method interface of `clear`, `delete`, `get`, `has`, and `set`.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Function
 * @param {Function} func The function to have its output memoized.
 * @param {Function} [resolver] The function to resolve the cache key.
 * @returns {Function} Returns the new memoized function.
 * @example
 *
 * var object = { 'a': 1, 'b': 2 };
 * var other = { 'c': 3, 'd': 4 };
 *
 * var values = _.memoize(_.values);
 * values(object);
 * // => [1, 2]
 *
 * values(other);
 * // => [3, 4]
 *
 * object.a = 2;
 * values(object);
 * // => [1, 2]
 *
 * // Modify the result cache.
 * values.cache.set(object, ['a', 'b']);
 * values(object);
 * // => ['a', 'b']
 *
 * // Replace `_.memoize.Cache`.
 * _.memoize.Cache = WeakMap;
 */
function memoize(func, resolver) {
  if (typeof func != 'function' || (resolver != null && typeof resolver != 'function')) {
    throw new TypeError(FUNC_ERROR_TEXT);
  }
  var memoized = function() {
    var args = arguments,
        key = resolver ? resolver.apply(this, args) : args[0],
        cache = memoized.cache;

    if (cache.has(key)) {
      return cache.get(key);
    }
    var result = func.apply(this, args);
    memoized.cache = cache.set(key, result) || cache;
    return result;
  };
  memoized.cache = new (memoize.Cache || MapCache);
  return memoized;
}

// Expose `MapCache`.
memoize.Cache = MapCache;

module.exports = memoize;


/***/ }),

/***/ "./node_modules/lodash/noop.js":
/*!*************************************!*\
  !*** ./node_modules/lodash/noop.js ***!
  \*************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports) {

/**
 * This method returns `undefined`.
 *
 * @static
 * @memberOf _
 * @since 2.3.0
 * @category Util
 * @example
 *
 * _.times(2, _.noop);
 * // => [undefined, undefined]
 */
function noop() {
  // No operation performed.
}

module.exports = noop;


/***/ }),

/***/ "./node_modules/lodash/now.js":
/*!************************************!*\
  !*** ./node_modules/lodash/now.js ***!
  \************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var root = __webpack_require__(/*! ./_root */ "./node_modules/lodash/_root.js");

/**
 * Gets the timestamp of the number of milliseconds that have elapsed since
 * the Unix epoch (1 January 1970 00:00:00 UTC).
 *
 * @static
 * @memberOf _
 * @since 2.4.0
 * @category Date
 * @returns {number} Returns the timestamp.
 * @example
 *
 * _.defer(function(stamp) {
 *   console.log(_.now() - stamp);
 * }, _.now());
 * // => Logs the number of milliseconds it took for the deferred invocation.
 */
var now = function() {
  return root.Date.now();
};

module.exports = now;


/***/ }),

/***/ "./node_modules/lodash/property.js":
/*!*****************************************!*\
  !*** ./node_modules/lodash/property.js ***!
  \*****************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var baseProperty = __webpack_require__(/*! ./_baseProperty */ "./node_modules/lodash/_baseProperty.js"),
    basePropertyDeep = __webpack_require__(/*! ./_basePropertyDeep */ "./node_modules/lodash/_basePropertyDeep.js"),
    isKey = __webpack_require__(/*! ./_isKey */ "./node_modules/lodash/_isKey.js"),
    toKey = __webpack_require__(/*! ./_toKey */ "./node_modules/lodash/_toKey.js");

/**
 * Creates a function that returns the value at `path` of a given object.
 *
 * @static
 * @memberOf _
 * @since 2.4.0
 * @category Util
 * @param {Array|string} path The path of the property to get.
 * @returns {Function} Returns the new accessor function.
 * @example
 *
 * var objects = [
 *   { 'a': { 'b': 2 } },
 *   { 'a': { 'b': 1 } }
 * ];
 *
 * _.map(objects, _.property('a.b'));
 * // => [2, 1]
 *
 * _.map(_.sortBy(objects, _.property(['a', 'b'])), 'a.b');
 * // => [1, 2]
 */
function property(path) {
  return isKey(path) ? baseProperty(toKey(path)) : basePropertyDeep(path);
}

module.exports = property;


/***/ }),

/***/ "./node_modules/lodash/sortBy.js":
/*!***************************************!*\
  !*** ./node_modules/lodash/sortBy.js ***!
  \***************************************/
/*! dynamic exports provided */
/***/ (function(module, exports, __webpack_require__) {

var baseFlatten = __webpack_require__(/*! ./_baseFlatten */ "./node_modules/lodash/_baseFlatten.js"),
    baseOrderBy = __webpack_require__(/*! ./_baseOrderBy */ "./node_modules/lodash/_baseOrderBy.js"),
    baseRest = __webpack_require__(/*! ./_baseRest */ "./node_modules/lodash/_baseRest.js"),
    isIterateeCall = __webpack_require__(/*! ./_isIterateeCall */ "./node_modules/lodash/_isIterateeCall.js");

/**
 * Creates an array of elements, sorted in ascending order by the results of
 * running each element in a collection thru each iteratee. This method
 * performs a stable sort, that is, it preserves the original sort order of
 * equal elements. The iteratees are invoked with one argument: (value).
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Collection
 * @param {Array|Object} collection The collection to iterate over.
 * @param {...(Function|Function[])} [iteratees=[_.identity]]
 *  The iteratees to sort by.
 * @returns {Array} Returns the new sorted array.
 * @example
 *
 * var users = [
 *   { 'user': 'fred',   'age': 48 },
 *   { 'user': 'barney', 'age': 36 },
 *   { 'user': 'fred',   'age': 40 },
 *   { 'user': 'barney', 'age': 34 }
 * ];
 *
 * _.sortBy(users, [function(o) { return o.user; }]);
 * // => objects for [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 40]]
 *
 * _.sortBy(users, ['user', 'age']);
 * // => objects for [['barney', 34], ['barney', 36], ['fred', 40], ['fred', 48]]
 */
var sortBy = baseRest(function(collection, iteratees) {
  if (collection == null) {
    return [];
  }
  var length = iteratees.length;
  if (length > 1 && isIterateeCall(collection, iteratees[0], iteratees[1])) {
    iteratees = [];
  } else if (length > 2 && isIterateeCall(iteratees[0], iteratees[1], iteratees[2])) {
    iteratees = [iteratees[0]];
  }
  return baseOrderBy(collection, baseFlatten(iteratees, 1), []);
});

module.exports = sortBy;


/***/ }),

/***/ "./node_modules/lodash/stubArray.js":
/*!******************************************!*\
  !*** ./node_modules/lodash/stubArray.js ***!
  \******************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports) {

/**
 * This method returns a new empty array.
 *
 * @static
 * @memberOf _
 * @since 4.13.0
 * @category Util
 * @returns {Array} Returns the new empty array.
 * @example
 *
 * var arrays = _.times(2, _.stubArray);
 *
 * console.log(arrays);
 * // => [[], []]
 *
 * console.log(arrays[0] === arrays[1]);
 * // => false
 */
function stubArray() {
  return [];
}

module.exports = stubArray;


/***/ }),

/***/ "./node_modules/lodash/stubFalse.js":
/*!******************************************!*\
  !*** ./node_modules/lodash/stubFalse.js ***!
  \******************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports) {

/**
 * This method returns `false`.
 *
 * @static
 * @memberOf _
 * @since 4.13.0
 * @category Util
 * @returns {boolean} Returns `false`.
 * @example
 *
 * _.times(2, _.stubFalse);
 * // => [false, false]
 */
function stubFalse() {
  return false;
}

module.exports = stubFalse;


/***/ }),

/***/ "./node_modules/lodash/toNumber.js":
/*!*****************************************!*\
  !*** ./node_modules/lodash/toNumber.js ***!
  \*****************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var isObject = __webpack_require__(/*! ./isObject */ "./node_modules/lodash/isObject.js"),
    isSymbol = __webpack_require__(/*! ./isSymbol */ "./node_modules/lodash/isSymbol.js");

/** Used as references for various `Number` constants. */
var NAN = 0 / 0;

/** Used to match leading and trailing whitespace. */
var reTrim = /^\s+|\s+$/g;

/** Used to detect bad signed hexadecimal string values. */
var reIsBadHex = /^[-+]0x[0-9a-f]+$/i;

/** Used to detect binary string values. */
var reIsBinary = /^0b[01]+$/i;

/** Used to detect octal string values. */
var reIsOctal = /^0o[0-7]+$/i;

/** Built-in method references without a dependency on `root`. */
var freeParseInt = parseInt;

/**
 * Converts `value` to a number.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to process.
 * @returns {number} Returns the number.
 * @example
 *
 * _.toNumber(3.2);
 * // => 3.2
 *
 * _.toNumber(Number.MIN_VALUE);
 * // => 5e-324
 *
 * _.toNumber(Infinity);
 * // => Infinity
 *
 * _.toNumber('3.2');
 * // => 3.2
 */
function toNumber(value) {
  if (typeof value == 'number') {
    return value;
  }
  if (isSymbol(value)) {
    return NAN;
  }
  if (isObject(value)) {
    var other = typeof value.valueOf == 'function' ? value.valueOf() : value;
    value = isObject(other) ? (other + '') : other;
  }
  if (typeof value != 'string') {
    return value === 0 ? value : +value;
  }
  value = value.replace(reTrim, '');
  var isBinary = reIsBinary.test(value);
  return (isBinary || reIsOctal.test(value))
    ? freeParseInt(value.slice(2), isBinary ? 2 : 8)
    : (reIsBadHex.test(value) ? NAN : +value);
}

module.exports = toNumber;


/***/ }),

/***/ "./node_modules/lodash/toString.js":
/*!*****************************************!*\
  !*** ./node_modules/lodash/toString.js ***!
  \*****************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

var baseToString = __webpack_require__(/*! ./_baseToString */ "./node_modules/lodash/_baseToString.js");

/**
 * Converts `value` to a string. An empty string is returned for `null`
 * and `undefined` values. The sign of `-0` is preserved.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to convert.
 * @returns {string} Returns the converted string.
 * @example
 *
 * _.toString(null);
 * // => ''
 *
 * _.toString(-0);
 * // => '-0'
 *
 * _.toString([1, 2, 3]);
 * // => '1,2,3'
 */
function toString(value) {
  return value == null ? '' : baseToString(value);
}

module.exports = toString;


/***/ }),

/***/ "./node_modules/lodash/uniqBy.js":
/*!***************************************!*\
  !*** ./node_modules/lodash/uniqBy.js ***!
  \***************************************/
/*! dynamic exports provided */
/*! exports used: default */
/***/ (function(module, exports, __webpack_require__) {

var baseIteratee = __webpack_require__(/*! ./_baseIteratee */ "./node_modules/lodash/_baseIteratee.js"),
    baseUniq = __webpack_require__(/*! ./_baseUniq */ "./node_modules/lodash/_baseUniq.js");

/**
 * This method is like `_.uniq` except that it accepts `iteratee` which is
 * invoked for each element in `array` to generate the criterion by which
 * uniqueness is computed. The order of result values is determined by the
 * order they occur in the array. The iteratee is invoked with one argument:
 * (value).
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Array
 * @param {Array} array The array to inspect.
 * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
 * @returns {Array} Returns the new duplicate free array.
 * @example
 *
 * _.uniqBy([2.1, 1.2, 2.3], Math.floor);
 * // => [2.1, 1.2]
 *
 * // The `_.property` iteratee shorthand.
 * _.uniqBy([{ 'x': 1 }, { 'x': 2 }, { 'x': 1 }], 'x');
 * // => [{ 'x': 1 }, { 'x': 2 }]
 */
function uniqBy(array, iteratee) {
  return (array && array.length) ? baseUniq(array, baseIteratee(iteratee, 2)) : [];
}

module.exports = uniqBy;


/***/ }),

/***/ "./node_modules/react-datepicker/dist/react-datepicker.css":
/*!*****************************************************************!*\
  !*** ./node_modules/react-datepicker/dist/react-datepicker.css ***!
  \*****************************************************************/
/*! dynamic exports provided */
/***/ (function(module, exports) {

// removed by extract-text-webpack-plugin

/***/ }),

/***/ "./node_modules/react-select/dist/react-select.css":
/*!*********************************************************!*\
  !*** ./node_modules/react-select/dist/react-select.css ***!
  \*********************************************************/
/*! dynamic exports provided */
/***/ (function(module, exports) {

// removed by extract-text-webpack-plugin

/***/ }),

/***/ "./node_modules/react-table/react-table.css":
/*!**************************************************!*\
  !*** ./node_modules/react-table/react-table.css ***!
  \**************************************************/
/*! dynamic exports provided */
/***/ (function(module, exports) {

// removed by extract-text-webpack-plugin

/***/ }),

/***/ "./node_modules/react-tagsinput/react-tagsinput.css":
/*!**********************************************************!*\
  !*** ./node_modules/react-tagsinput/react-tagsinput.css ***!
  \**********************************************************/
/*! dynamic exports provided */
/***/ (function(module, exports) {

// removed by extract-text-webpack-plugin

/***/ }),

/***/ "./node_modules/react-toggle/style.css":
/*!*********************************************!*\
  !*** ./node_modules/react-toggle/style.css ***!
  \*********************************************/
/*! dynamic exports provided */
/***/ (function(module, exports) {

// removed by extract-text-webpack-plugin

/***/ }),

/***/ "./src/AppBundle/Resources/public/data/languages.js":
/*!**********************************************************!*\
  !*** ./src/AppBundle/Resources/public/data/languages.js ***!
  \**********************************************************/
/*! exports provided: languages */
/*! exports used: languages */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return languages; });
var languages = {
    "ab": {
        "name": "Abkhaz",
        "nativeName": "аҧсуа"
    },
    "aa": {
        "name": "Afar",
        "nativeName": "Afaraf"
    },
    "af": {
        "name": "Afrikaans",
        "nativeName": "Afrikaans"
    },
    "ak": {
        "name": "Akan",
        "nativeName": "Akan"
    },
    "sq": {
        "name": "Albanian",
        "nativeName": "Shqip"
    },
    "am": {
        "name": "Amharic",
        "nativeName": "አማርኛ"
    },
    "ar": {
        "name": "Arabic",
        "nativeName": "العربية"
    },
    "an": {
        "name": "Aragonese",
        "nativeName": "Aragonés"
    },
    "hy": {
        "name": "Armenian",
        "nativeName": "Հայերեն"
    },
    "as": {
        "name": "Assamese",
        "nativeName": "অসমীয়া"
    },
    "av": {
        "name": "Avaric",
        "nativeName": "авар мацӀ, магӀарул мацӀ"
    },
    "ae": {
        "name": "Avestan",
        "nativeName": "avesta"
    },
    "ay": {
        "name": "Aymara",
        "nativeName": "aymar aru"
    },
    "az": {
        "name": "Azerbaijani",
        "nativeName": "azərbaycan dili"
    },
    "bm": {
        "name": "Bambara",
        "nativeName": "bamanankan"
    },
    "ba": {
        "name": "Bashkir",
        "nativeName": "башҡорт теле"
    },
    "eu": {
        "name": "Basque",
        "nativeName": "euskara, euskera"
    },
    "be": {
        "name": "Belarusian",
        "nativeName": "Беларуская"
    },
    "bn": {
        "name": "Bengali",
        "nativeName": "বাংলা"
    },
    "bh": {
        "name": "Bihari",
        "nativeName": "भोजपुरी"
    },
    "bi": {
        "name": "Bislama",
        "nativeName": "Bislama"
    },
    "bs": {
        "name": "Bosnian",
        "nativeName": "bosanski jezik"
    },
    "br": {
        "name": "Breton",
        "nativeName": "brezhoneg"
    },
    "bg": {
        "name": "Bulgarian",
        "nativeName": "български език"
    },
    "my": {
        "name": "Burmese",
        "nativeName": "ဗမာစာ"
    },
    "ca": {
        "name": "Catalan; Valencian",
        "nativeName": "Català"
    },
    "ch": {
        "name": "Chamorro",
        "nativeName": "Chamoru"
    },
    "ce": {
        "name": "Chechen",
        "nativeName": "нохчийн мотт"
    },
    "ny": {
        "name": "Chichewa; Chewa; Nyanja",
        "nativeName": "chiCheŵa, chinyanja"
    },
    "zh": {
        "name": "Chinese",
        "nativeName": "中文 (Zhōngwén), 汉语, 漢語"
    },
    "cv": {
        "name": "Chuvash",
        "nativeName": "чӑваш чӗлхи"
    },
    "kw": {
        "name": "Cornish",
        "nativeName": "Kernewek"
    },
    "co": {
        "name": "Corsican",
        "nativeName": "corsu, lingua corsa"
    },
    "cr": {
        "name": "Cree",
        "nativeName": "ᓀᐦᐃᔭᐍᐏᐣ"
    },
    "hr": {
        "name": "Croatian",
        "nativeName": "hrvatski"
    },
    "cs": {
        "name": "Czech",
        "nativeName": "česky, čeština"
    },
    "da": {
        "name": "Danish",
        "nativeName": "dansk"
    },
    "dv": {
        "name": "Divehi; Dhivehi; Maldivian;",
        "nativeName": "ދިވެހި"
    },
    "nl": {
        "name": "Dutch",
        "nativeName": "Nederlands, Vlaams"
    },
    "en": {
        "name": "English",
        "nativeName": "English"
    },
    "eo": {
        "name": "Esperanto",
        "nativeName": "Esperanto"
    },
    "et": {
        "name": "Estonian",
        "nativeName": "eesti, eesti keel"
    },
    "ee": {
        "name": "Ewe",
        "nativeName": "Eʋegbe"
    },
    "fo": {
        "name": "Faroese",
        "nativeName": "føroyskt"
    },
    "fj": {
        "name": "Fijian",
        "nativeName": "vosa Vakaviti"
    },
    "fi": {
        "name": "Finnish",
        "nativeName": "suomi, suomen kieli"
    },
    "fr": {
        "name": "French",
        "nativeName": "français, langue française"
    },
    "ff": {
        "name": "Fula; Fulah; Pulaar; Pular",
        "nativeName": "Fulfulde, Pulaar, Pular"
    },
    "gl": {
        "name": "Galician",
        "nativeName": "Galego"
    },
    "ka": {
        "name": "Georgian",
        "nativeName": "ქართული"
    },
    "de": {
        "name": "German",
        "nativeName": "Deutsch"
    },
    "el": {
        "name": "Greek, Modern",
        "nativeName": "Ελληνικά"
    },
    "gn": {
        "name": "Guaraní",
        "nativeName": "Avañeẽ"
    },
    "gu": {
        "name": "Gujarati",
        "nativeName": "ગુજરાતી"
    },
    "ht": {
        "name": "Haitian; Haitian Creole",
        "nativeName": "Kreyòl ayisyen"
    },
    "ha": {
        "name": "Hausa",
        "nativeName": "Hausa, هَوُسَ"
    },
    "he": {
        "name": "Hebrew (modern)",
        "nativeName": "עברית"
    },
    "hz": {
        "name": "Herero",
        "nativeName": "Otjiherero"
    },
    "hi": {
        "name": "Hindi",
        "nativeName": "हिन्दी, हिंदी"
    },
    "ho": {
        "name": "Hiri Motu",
        "nativeName": "Hiri Motu"
    },
    "hu": {
        "name": "Hungarian",
        "nativeName": "Magyar"
    },
    "ia": {
        "name": "Interlingua",
        "nativeName": "Interlingua"
    },
    "id": {
        "name": "Indonesian",
        "nativeName": "Bahasa Indonesia"
    },
    "ie": {
        "name": "Interlingue",
        "nativeName": "Originally called Occidental; then Interlingue after WWII"
    },
    "ga": {
        "name": "Irish",
        "nativeName": "Gaeilge"
    },
    "ig": {
        "name": "Igbo",
        "nativeName": "Asụsụ Igbo"
    },
    "ik": {
        "name": "Inupiaq",
        "nativeName": "Iñupiaq, Iñupiatun"
    },
    "io": {
        "name": "Ido",
        "nativeName": "Ido"
    },
    "is": {
        "name": "Icelandic",
        "nativeName": "Íslenska"
    },
    "it": {
        "name": "Italian",
        "nativeName": "Italiano"
    },
    "iu": {
        "name": "Inuktitut",
        "nativeName": "ᐃᓄᒃᑎᑐᑦ"
    },
    "ja": {
        "name": "Japanese",
        "nativeName": "日本語 (にほんご／にっぽんご)"
    },
    "jv": {
        "name": "Javanese",
        "nativeName": "basa Jawa"
    },
    "kl": {
        "name": "Kalaallisut, Greenlandic",
        "nativeName": "kalaallisut, kalaallit oqaasii"
    },
    "kn": {
        "name": "Kannada",
        "nativeName": "ಕನ್ನಡ"
    },
    "kr": {
        "name": "Kanuri",
        "nativeName": "Kanuri"
    },
    "ks": {
        "name": "Kashmiri",
        "nativeName": "कश्मीरी, كشميري‎"
    },
    "kk": {
        "name": "Kazakh",
        "nativeName": "Қазақ тілі"
    },
    "km": {
        "name": "Khmer",
        "nativeName": "ភាសាខ្មែរ"
    },
    "ki": {
        "name": "Kikuyu, Gikuyu",
        "nativeName": "Gĩkũyũ"
    },
    "rw": {
        "name": "Kinyarwanda",
        "nativeName": "Ikinyarwanda"
    },
    "ky": {
        "name": "Kirghiz, Kyrgyz",
        "nativeName": "кыргыз тили"
    },
    "kv": {
        "name": "Komi",
        "nativeName": "коми кыв"
    },
    "kg": {
        "name": "Kongo",
        "nativeName": "KiKongo"
    },
    "ko": {
        "name": "Korean",
        "nativeName": "한국어 (韓國語), 조선말 (朝鮮語)"
    },
    "ku": {
        "name": "Kurdish",
        "nativeName": "Kurdî, كوردی‎"
    },
    "kj": {
        "name": "Kwanyama, Kuanyama",
        "nativeName": "Kuanyama"
    },
    "la": {
        "name": "Latin",
        "nativeName": "latine, lingua latina"
    },
    "lb": {
        "name": "Luxembourgish, Letzeburgesch",
        "nativeName": "Lëtzebuergesch"
    },
    "lg": {
        "name": "Luganda",
        "nativeName": "Luganda"
    },
    "li": {
        "name": "Limburgish, Limburgan, Limburger",
        "nativeName": "Limburgs"
    },
    "ln": {
        "name": "Lingala",
        "nativeName": "Lingála"
    },
    "lo": {
        "name": "Lao",
        "nativeName": "ພາສາລາວ"
    },
    "lt": {
        "name": "Lithuanian",
        "nativeName": "lietuvių kalba"
    },
    "lu": {
        "name": "Luba-Katanga",
        "nativeName": ""
    },
    "lv": {
        "name": "Latvian",
        "nativeName": "latviešu valoda"
    },
    "gv": {
        "name": "Manx",
        "nativeName": "Gaelg, Gailck"
    },
    "mk": {
        "name": "Macedonian",
        "nativeName": "македонски јазик"
    },
    "mg": {
        "name": "Malagasy",
        "nativeName": "Malagasy fiteny"
    },
    "ms": {
        "name": "Malay",
        "nativeName": "bahasa Melayu, بهاس ملايو‎"
    },
    "ml": {
        "name": "Malayalam",
        "nativeName": "മലയാളം"
    },
    "mt": {
        "name": "Maltese",
        "nativeName": "Malti"
    },
    "mi": {
        "name": "Māori",
        "nativeName": "te reo Māori"
    },
    "mr": {
        "name": "Marathi (Marāṭhī)",
        "nativeName": "मराठी"
    },
    "mh": {
        "name": "Marshallese",
        "nativeName": "Kajin M̧ajeļ"
    },
    "mn": {
        "name": "Mongolian",
        "nativeName": "монгол"
    },
    "na": {
        "name": "Nauru",
        "nativeName": "Ekakairũ Naoero"
    },
    "nv": {
        "name": "Navajo, Navaho",
        "nativeName": "Diné bizaad, Dinékʼehǰí"
    },
    "nb": {
        "name": "Norwegian Bokmål",
        "nativeName": "Norsk bokmål"
    },
    "nd": {
        "name": "North Ndebele",
        "nativeName": "isiNdebele"
    },
    "ne": {
        "name": "Nepali",
        "nativeName": "नेपाली"
    },
    "ng": {
        "name": "Ndonga",
        "nativeName": "Owambo"
    },
    "nn": {
        "name": "Norwegian Nynorsk",
        "nativeName": "Norsk nynorsk"
    },
    "no": {
        "name": "Norwegian",
        "nativeName": "Norsk"
    },
    "ii": {
        "name": "Nuosu",
        "nativeName": "ꆈꌠ꒿ Nuosuhxop"
    },
    "nr": {
        "name": "South Ndebele",
        "nativeName": "isiNdebele"
    },
    "oc": {
        "name": "Occitan",
        "nativeName": "Occitan"
    },
    "oj": {
        "name": "Ojibwe, Ojibwa",
        "nativeName": "ᐊᓂᔑᓈᐯᒧᐎᓐ"
    },
    "cu": {
        "name": "Old Church Slavonic, Church Slavic, Church Slavonic, Old Bulgarian, Old Slavonic",
        "nativeName": "ѩзыкъ словѣньскъ"
    },
    "om": {
        "name": "Oromo",
        "nativeName": "Afaan Oromoo"
    },
    "or": {
        "name": "Oriya",
        "nativeName": "ଓଡ଼ିଆ"
    },
    "os": {
        "name": "Ossetian, Ossetic",
        "nativeName": "ирон æвзаг"
    },
    "pa": {
        "name": "Panjabi, Punjabi",
        "nativeName": "ਪੰਜਾਬੀ, پنجابی‎"
    },
    "pi": {
        "name": "Pāli",
        "nativeName": "पाऴि"
    },
    "fa": {
        "name": "Persian",
        "nativeName": "فارسی"
    },
    "pl": {
        "name": "Polish",
        "nativeName": "polski"
    },
    "ps": {
        "name": "Pashto, Pushto",
        "nativeName": "پښتو"
    },
    "pt": {
        "name": "Portuguese",
        "nativeName": "Português"
    },
    "qu": {
        "name": "Quechua",
        "nativeName": "Runa Simi, Kichwa"
    },
    "rm": {
        "name": "Romansh",
        "nativeName": "rumantsch grischun"
    },
    "rn": {
        "name": "Kirundi",
        "nativeName": "kiRundi"
    },
    "ro": {
        "name": "Romanian, Moldavian, Moldovan",
        "nativeName": "română"
    },
    "ru": {
        "name": "Russian",
        "nativeName": "русский язык"
    },
    "sa": {
        "name": "Sanskrit (Saṁskṛta)",
        "nativeName": "संस्कृतम्"
    },
    "sc": {
        "name": "Sardinian",
        "nativeName": "sardu"
    },
    "sd": {
        "name": "Sindhi",
        "nativeName": "सिन्धी, سنڌي، سندھی‎"
    },
    "se": {
        "name": "Northern Sami",
        "nativeName": "Davvisámegiella"
    },
    "sm": {
        "name": "Samoan",
        "nativeName": "gagana faa Samoa"
    },
    "sg": {
        "name": "Sango",
        "nativeName": "yângâ tî sängö"
    },
    "sr": {
        "name": "Serbian",
        "nativeName": "српски језик"
    },
    "gd": {
        "name": "Scottish Gaelic; Gaelic",
        "nativeName": "Gàidhlig"
    },
    "sn": {
        "name": "Shona",
        "nativeName": "chiShona"
    },
    "si": {
        "name": "Sinhala, Sinhalese",
        "nativeName": "සිංහල"
    },
    "sk": {
        "name": "Slovak",
        "nativeName": "slovenčina"
    },
    "sl": {
        "name": "Slovene",
        "nativeName": "slovenščina"
    },
    "so": {
        "name": "Somali",
        "nativeName": "Soomaaliga, af Soomaali"
    },
    "st": {
        "name": "Southern Sotho",
        "nativeName": "Sesotho"
    },
    "es": {
        "name": "Spanish; Castilian",
        "nativeName": "español, castellano"
    },
    "su": {
        "name": "Sundanese",
        "nativeName": "Basa Sunda"
    },
    "sw": {
        "name": "Swahili",
        "nativeName": "Kiswahili"
    },
    "ss": {
        "name": "Swati",
        "nativeName": "SiSwati"
    },
    "sv": {
        "name": "Swedish",
        "nativeName": "svenska"
    },
    "ta": {
        "name": "Tamil",
        "nativeName": "தமிழ்"
    },
    "te": {
        "name": "Telugu",
        "nativeName": "తెలుగు"
    },
    "tg": {
        "name": "Tajik",
        "nativeName": "тоҷикӣ, toğikī, تاجیکی‎"
    },
    "th": {
        "name": "Thai",
        "nativeName": "ไทย"
    },
    "ti": {
        "name": "Tigrinya",
        "nativeName": "ትግርኛ"
    },
    "bo": {
        "name": "Tibetan Standard, Tibetan, Central",
        "nativeName": "བོད་ཡིག"
    },
    "tk": {
        "name": "Turkmen",
        "nativeName": "Türkmen, Түркмен"
    },
    "tl": {
        "name": "Tagalog",
        "nativeName": "Wikang Tagalog, ᜏᜒᜃᜅ᜔ ᜆᜄᜎᜓᜄ᜔"
    },
    "tn": {
        "name": "Tswana",
        "nativeName": "Setswana"
    },
    "to": {
        "name": "Tonga (Tonga Islands)",
        "nativeName": "faka Tonga"
    },
    "tr": {
        "name": "Turkish",
        "nativeName": "Türkçe"
    },
    "ts": {
        "name": "Tsonga",
        "nativeName": "Xitsonga"
    },
    "tt": {
        "name": "Tatar",
        "nativeName": "татарча, tatarça, تاتارچا‎"
    },
    "tw": {
        "name": "Twi",
        "nativeName": "Twi"
    },
    "ty": {
        "name": "Tahitian",
        "nativeName": "Reo Tahiti"
    },
    "ug": {
        "name": "Uighur, Uyghur",
        "nativeName": "Uyƣurqə, ئۇيغۇرچە‎"
    },
    "uk": {
        "name": "Ukrainian",
        "nativeName": "українська"
    },
    "ur": {
        "name": "Urdu",
        "nativeName": "اردو"
    },
    "uz": {
        "name": "Uzbek",
        "nativeName": "zbek, Ўзбек, أۇزبېك‎"
    },
    "ve": {
        "name": "Venda",
        "nativeName": "Tshivenḓa"
    },
    "vi": {
        "name": "Vietnamese",
        "nativeName": "Tiếng Việt"
    },
    "vo": {
        "name": "Volapük",
        "nativeName": "Volapük"
    },
    "wa": {
        "name": "Walloon",
        "nativeName": "Walon"
    },
    "cy": {
        "name": "Welsh",
        "nativeName": "Cymraeg"
    },
    "wo": {
        "name": "Wolof",
        "nativeName": "Wollof"
    },
    "fy": {
        "name": "Western Frisian",
        "nativeName": "Frysk"
    },
    "xh": {
        "name": "Xhosa",
        "nativeName": "isiXhosa"
    },
    "yi": {
        "name": "Yiddish",
        "nativeName": "ייִדיש"
    },
    "yo": {
        "name": "Yoruba",
        "nativeName": "Yorùbá"
    },
    "za": {
        "name": "Zhuang, Chuang",
        "nativeName": "Saɯ cueŋƅ, Saw cuengh"
    }
};

/***/ }),

/***/ "./src/AppBundle/Resources/public/javascript/buy/actions/filterActions.js":
/*!********************************************************************************!*\
  !*** ./src/AppBundle/Resources/public/javascript/buy/actions/filterActions.js ***!
  \********************************************************************************/
/*! exports provided: addRight, removeRight, updateCountries, updateExclusive, updateMany, updateSport, updateEvent, clearFilter, clearUpdateFilter */
/*! exports used: addRight, clearFilter, clearUpdateFilter, removeRight, updateCountries, updateEvent, updateExclusive, updateMany, updateSport */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return addRight; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "d", function() { return removeRight; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "e", function() { return updateCountries; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "g", function() { return updateExclusive; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "h", function() { return updateMany; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "i", function() { return updateSport; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "f", function() { return updateEvent; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "b", function() { return clearFilter; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "c", function() { return clearUpdateFilter; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__reducers_filter__ = __webpack_require__(/*! ../reducers/filter */ "./src/AppBundle/Resources/public/javascript/buy/reducers/filter.js");


var addRight = function addRight(id) {
    return {
        type: __WEBPACK_IMPORTED_MODULE_0__reducers_filter__["b" /* filterTypes */].ADD_RIGHT,
        id: id
    };
};

var removeRight = function removeRight(id) {
    return {
        type: __WEBPACK_IMPORTED_MODULE_0__reducers_filter__["b" /* filterTypes */].REMOVE_RIGHT,
        id: id
    };
};

var updateCountries = function updateCountries(countries) {
    return {
        type: __WEBPACK_IMPORTED_MODULE_0__reducers_filter__["b" /* filterTypes */].UPDATE_COUNTRIES,
        countries: countries
    };
};

var updateExclusive = function updateExclusive(exclusive) {
    return {
        type: __WEBPACK_IMPORTED_MODULE_0__reducers_filter__["b" /* filterTypes */].UPDATE_EXCLUSIVE,
        exclusive: exclusive
    };
};

var updateMany = function updateMany(filters) {
    return {
        type: __WEBPACK_IMPORTED_MODULE_0__reducers_filter__["b" /* filterTypes */].UPDATE_MANY,
        filters: filters
    };
};

var updateSport = function updateSport(sport) {
    return {
        type: __WEBPACK_IMPORTED_MODULE_0__reducers_filter__["b" /* filterTypes */].UPDATE_SPORT,
        sport: sport
    };
};

var updateEvent = function updateEvent(event) {
    return {
        type: __WEBPACK_IMPORTED_MODULE_0__reducers_filter__["b" /* filterTypes */].UPDATE_EVENT,
        event: event
    };
};

var clearFilter = function clearFilter() {
    return {
        type: __WEBPACK_IMPORTED_MODULE_0__reducers_filter__["b" /* filterTypes */].CLEAR
    };
};

var clearUpdateFilter = function clearUpdateFilter() {
    return {
        type: __WEBPACK_IMPORTED_MODULE_0__reducers_filter__["b" /* filterTypes */].CLEAR_UPDATE
    };
};

/***/ }),

/***/ "./src/AppBundle/Resources/public/javascript/buy/actions/index.js":
/*!************************************************************************!*\
  !*** ./src/AppBundle/Resources/public/javascript/buy/actions/index.js ***!
  \************************************************************************/
/*! exports provided: test */
/*! exports used: test */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return test; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__reducers_marketplace__ = __webpack_require__(/*! ../reducers/marketplace */ "./src/AppBundle/Resources/public/javascript/buy/reducers/marketplace.js");


var nextTodoId = 0;

var test = function test(text) {
    return {
        type: __WEBPACK_IMPORTED_MODULE_0__reducers_marketplace__["b" /* marketplaceTypes */].TEST,
        id: nextTodoId++,
        text: text
    };
};

/***/ }),

/***/ "./src/AppBundle/Resources/public/javascript/buy/components/ContentListingEventDetails.js":
/*!************************************************************************************************!*\
  !*** ./src/AppBundle/Resources/public/javascript/buy/components/ContentListingEventDetails.js ***!
  \************************************************************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_react__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__main_actions_utils__ = __webpack_require__(/*! ../../main/actions/utils */ "./src/AppBundle/Resources/public/javascript/main/actions/utils.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_prop_types__ = __webpack_require__(/*! prop-types */ "./node_modules/prop-types/index.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_prop_types___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2_prop_types__);
var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }





var ContentListingEventDetails = function (_React$Component) {
    _inherits(ContentListingEventDetails, _React$Component);

    function ContentListingEventDetails(props) {
        _classCallCheck(this, ContentListingEventDetails);

        var _this = _possibleConstructorReturn(this, (ContentListingEventDetails.__proto__ || Object.getPrototypeOf(ContentListingEventDetails)).call(this, props));

        _this.getFixtures = function () {
            var seasons = _this.props.seasons;


            var fixtures = [];

            seasons.forEach(function (s) {
                if (s.fixtures) fixtures = [].concat(_toConsumableArray(fixtures), _toConsumableArray(s.fixtures));
            });

            return fixtures;
        };

        _this.getSchedules = function () {
            var _this$props = _this.props,
                seasons = _this$props.seasons,
                schedulesBySeason = _this$props.schedulesBySeason;

            var schedules = {
                rounds: [],
                matches: []
            };
            seasons.forEach(function (s) {
                if (s.schedules) Object.entries(s.schedules).forEach(function (sh) {
                    if (sh[1].selected && schedules.rounds.indexOf(sh[0]) === -1) {
                        schedules.rounds.push(sh[0]);
                        sh[1].matches.forEach(function (m) {
                            if (m.selected) schedules.matches.push(m);
                        });
                    }
                });
            });

            if (schedulesBySeason) {
                schedulesBySeason.forEach(function (s) {
                    if (s && Object.entries(s)) Object.entries(s).forEach(function (sh) {
                        if (schedules.rounds.indexOf(sh[0]) === -1) {
                            schedules.rounds.push(sh[0]);
                            sh[1].matches.forEach(function (m) {
                                if (m.selected) schedules.matches.push(m);
                            });
                        }
                    });
                });
            }

            return schedules;
        };

        _this.showProgramInfo = function () {
            var _this$props2 = _this.props,
                rightsPackage = _this$props2.rightsPackage,
                PROGRAM_NAME = _this$props2.PROGRAM_NAME;

            var show = false;

            if (rightsPackage.length > 1) return show;
            show = Object(__WEBPACK_IMPORTED_MODULE_1__main_actions_utils__["a" /* editedProgramSelected */])(rightsPackage);
            return show && PROGRAM_NAME;
        };

        _this.state = {};
        return _this;
    }

    _createClass(ContentListingEventDetails, [{
        key: "render",
        value: function render() {
            var _props = this.props,
                sports = _props.sports,
                sportCategory = _props.sportCategory,
                customTournament = _props.customTournament,
                customCategory = _props.customCategory,
                customId = _props.customId,
                tournament = _props.tournament,
                seasons = _props.seasons,
                showCustomId = _props.showCustomId,
                PROGRAM_YEAR = _props.PROGRAM_YEAR,
                PROGRAM_EPISODES = _props.PROGRAM_EPISODES,
                isFragment = _props.isFragment;


            var schedules = this.getSchedules();
            var rounds = schedules.rounds;
            var matches = schedules.matches;
            var seasonTitle = seasons.length > 1 ? "Seasons: " : "Season: ";
            var seasonName = seasonTitle + seasons.map(function (season) {
                return season.year;
            }).join(", ");
            var roundsTitle = rounds.length > 1 ? "Rounds: " : "Round: ";
            var roundsName = roundsTitle + rounds.join(", ");
            return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                "div",
                { className: "listing-attributes col" },
                __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                    "div",
                    { className: "listing-item event" },
                    sports && sports.length === 1 && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        "span",
                        null,
                        sports[0].name
                    ),
                    sports && sports.length > 1 && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        "span",
                        null,
                        this.context.t("Multiple Sports")
                    ),
                    sportCategory && sportCategory.length > 0 && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        "span",
                        null,
                        sportCategory[0].name
                    ),
                    customCategory && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        "span",
                        null,
                        customCategory
                    )
                ),
                __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                    "div",
                    { className: "listing-item event" },
                    tournament && tournament.length > 0 && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        "span",
                        null,
                        tournament[0].name
                    ),
                    customTournament && !customId && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        "span",
                        null,
                        customTournament
                    ),
                    tournament && tournament.length === 0 && !customTournament && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        "span",
                        null,
                        this.context.t("General content")
                    ),
                    seasons && seasons.length > 0 && seasonName,
                    this.showProgramInfo() && PROGRAM_YEAR && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        "span",
                        null,
                        PROGRAM_YEAR
                    )
                ),
                __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                    "div",
                    { className: "listing-item event" },
                    rounds.length === 1 && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        "span",
                        null,
                        roundsName
                    ),
                    rounds.length > 1 && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        "span",
                        null,
                        this.context.t("Multiple rounds")
                    ),
                    matches.length === 1 && matches[0].competitors.map(function (competitor, i, list) {
                        return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                            "span",
                            { key: i },
                            competitor.name,
                            " ",
                            list.length !== i + 1 && " vs "
                        );
                    }),
                    this.getFixtures().length > 1 && this.getFixtures().length + ' fixtures',
                    this.getFixtures().length === 1 && this.getFixtures()[0].name,
                    this.showProgramInfo() && PROGRAM_EPISODES && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        "span",
                        null,
                        PROGRAM_EPISODES
                    )
                )
            );
        }
    }]);

    return ContentListingEventDetails;
}(__WEBPACK_IMPORTED_MODULE_0_react___default.a.Component);

ContentListingEventDetails.contextTypes = {
    t: __WEBPACK_IMPORTED_MODULE_2_prop_types__["PropTypes"].func.isRequired
};

/* harmony default export */ __webpack_exports__["a"] = (ContentListingEventDetails);

/***/ }),

/***/ "./src/AppBundle/Resources/public/javascript/buy/components/ContentListingRightsPackage.js":
/*!*************************************************************************************************!*\
  !*** ./src/AppBundle/Resources/public/javascript/buy/components/ContentListingRightsPackage.js ***!
  \*************************************************************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_react__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__main_components_Icons__ = __webpack_require__(/*! ../../main/components/Icons */ "./src/AppBundle/Resources/public/javascript/main/components/Icons.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_prop_types__ = __webpack_require__(/*! prop-types */ "./node_modules/prop-types/index.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_prop_types___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2_prop_types__);




var ContentListingRightsPackage = function ContentListingRightsPackage(_ref, context) {
    var rightsPackage = _ref.rightsPackage,
        programName = _ref.programName;

    return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
        "div",
        { className: "listing-rights col" },
        rightsPackage.map(function (sr, i) {
            return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                "div",
                { key: i, className: "listing-item" },
                !sr.exclusive && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement("img", { style: { width: 23, height: 22, margin: '0 5px' }, src: __WEBPACK_IMPORTED_MODULE_1__main_components_Icons__["d" /* blueCheckIcon */] }),
                sr.exclusive && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement("img", { style: { width: 23, height: 22, margin: '0 5px' }, src: __WEBPACK_IMPORTED_MODULE_1__main_components_Icons__["r" /* yellowCheckIcon */] }),
                __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                    "div",
                    { style: { display: 'flex', flexDirection: "row" } },
                    sr.shortLabel !== "PR" && sr.name,
                    sr.shortLabel === "PR" && programName && context.t("Program: ") + programName,
                    sr.exclusive && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        "span",
                        { style: { fontWeight: 600, marginLeft: 3 } },
                        " EX"
                    )
                )
            );
        })
    );
};

ContentListingRightsPackage.contextTypes = {
    t: __WEBPACK_IMPORTED_MODULE_2_prop_types__["PropTypes"].func.isRequired
};

/* harmony default export */ __webpack_exports__["a"] = (ContentListingRightsPackage);

/***/ }),

/***/ "./src/AppBundle/Resources/public/javascript/buy/components/EventFilter.js":
/*!*********************************************************************************!*\
  !*** ./src/AppBundle/Resources/public/javascript/buy/components/EventFilter.js ***!
  \*********************************************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_react__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_react_redux__ = __webpack_require__(/*! react-redux */ "./node_modules/react-redux/es/index.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_react_select__ = __webpack_require__(/*! react-select */ "./node_modules/react-select/dist/react-select.es.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__actions_filterActions__ = __webpack_require__(/*! ../actions/filterActions */ "./src/AppBundle/Resources/public/javascript/buy/actions/filterActions.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_prop_types__ = __webpack_require__(/*! prop-types */ "./node_modules/prop-types/index.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_prop_types___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_4_prop_types__);
var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }







var EventFilter = function (_React$Component) {
    _inherits(EventFilter, _React$Component);

    function EventFilter(props) {
        _classCallCheck(this, EventFilter);

        var _this = _possibleConstructorReturn(this, (EventFilter.__proto__ || Object.getPrototypeOf(EventFilter)).call(this, props));

        _this.getOptions = function () {
            var _this$props = _this.props,
                _this$props$filter = _this$props.filter,
                filter = _this$props$filter === undefined ? [] : _this$props$filter,
                available = _this$props.available;
            var sports = _this.state.sports;


            var countries = sports.filter(function (s) {
                return s.name;
            }).map(function (i, k) {
                return { value: i.name, label: i.name };
            });

            return [{ value: null, label: 'All sports' }].concat(_toConsumableArray(countries));
        };

        _this.showTab = function (tab) {
            _this.setState({ tab: tab });
        };

        _this.selectSport = function (e) {

            _this.props.selectSport(e);
        };

        _this.updateEvent = function (e) {
            _this.props.updateEvent(_this.refs.search_field.value);
        };

        _this.handleKeyPress = function (e) {
            if (e.key === 'Enter') {
                var onFilter = _this.props.onFilter;

                onFilter();
            }
        };

        _this.state = {
            sports: []
        };

        _this.searchIcon = assetsBaseDir + "app/images/search.png";
        return _this;
    }

    _createClass(EventFilter, [{
        key: 'componentDidMount',
        value: function componentDidMount() {
            var _this2 = this;

            if (ContentArena.Data.Countries.length === 0) {
                ContentArena.Api.getActiveSports().done(function (sports) {
                    ContentArena.Data.ActiveSports = sports;
                    _this2.setState({ sports: sports });
                });
            } else {
                this.setState({ sports: ContentArena.Data.ActiveSports });
            }
        }
    }, {
        key: 'componentWillReceiveProps',
        value: function componentWillReceiveProps(nextProps) {}
    }, {
        key: 'render',
        value: function render() {
            var _props = this.props,
                sport = _props.sport,
                event = _props.event;

            return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                'div',
                { className: 'box' },
                __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                    'div',
                    { className: 'title' },
                    this.context.t("Event", {}, "Marketplace - Title for event filters")
                ),
                __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                    'div',
                    { className: 'content' },
                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        'div',
                        { style: {
                                position: 'relative',
                                display: 'flex'
                            } },
                        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('img', { style: {
                                position: 'absolute',
                                width: 20,
                                height: 20,
                                cursor: 'pointer',
                                margin: '23px 10px'
                            },
                            src: this.searchIcon,
                            onClick: this.handleFilter
                        }),
                        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('input', {
                            style: {
                                padding: '15px 15px 15px 40px',
                                flex: 1
                            },
                            defaultValue: event,
                            onKeyPress: this.handleKeyPress,
                            onChange: this.updateEvent,
                            ref: 'search_field',
                            type: 'text', id: 'inputSearch', name: 'event', placeholder: this.context.t("Search", {}, "Marketplace - Placeholder for Search input") })
                    ),
                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_2_react_select__["default"], {
                        name: 'form-field-name',
                        multi: false,
                        className: 'sport-input-filter',
                        onChange: this.selectSport,
                        value: sport,
                        options: this.getOptions() })
                )
            );
        }
    }]);

    return EventFilter;
}(__WEBPACK_IMPORTED_MODULE_0_react___default.a.Component);

EventFilter.contextTypes = {
    t: __WEBPACK_IMPORTED_MODULE_4_prop_types__["PropTypes"].func.isRequired
};

var mapStateToProps = function mapStateToProps(state) {
    return state.filter;
};

var mapDispatchToProps = function mapDispatchToProps(dispatch) {
    return {
        onClick: function onClick(id) {
            return dispatch(test(id));
        },
        selectSport: function selectSport(sport) {
            return dispatch(Object(__WEBPACK_IMPORTED_MODULE_3__actions_filterActions__["i" /* updateSport */])(sport));
        },
        updateEvent: function updateEvent(event) {
            return dispatch(Object(__WEBPACK_IMPORTED_MODULE_3__actions_filterActions__["f" /* updateEvent */])(event));
        }
    };
};

/* harmony default export */ __webpack_exports__["a"] = (Object(__WEBPACK_IMPORTED_MODULE_1_react_redux__["connect"])(mapStateToProps, mapDispatchToProps)(EventFilter));

/***/ }),

/***/ "./src/AppBundle/Resources/public/javascript/buy/components/RightsFilter.js":
/*!**********************************************************************************!*\
  !*** ./src/AppBundle/Resources/public/javascript/buy/components/RightsFilter.js ***!
  \**********************************************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_react__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_react_redux__ = __webpack_require__(/*! react-redux */ "./node_modules/react-redux/es/index.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__actions_filterActions__ = __webpack_require__(/*! ../actions/filterActions */ "./src/AppBundle/Resources/public/javascript/buy/actions/filterActions.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__main_components_CountrySelector__ = __webpack_require__(/*! ../../main/components/CountrySelector */ "./src/AppBundle/Resources/public/javascript/main/components/CountrySelector.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_prop_types__ = __webpack_require__(/*! prop-types */ "./node_modules/prop-types/index.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_prop_types___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_4_prop_types__);
var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }







var RightsFilter = function (_React$Component) {
    _inherits(RightsFilter, _React$Component);

    function RightsFilter(props) {
        _classCallCheck(this, RightsFilter);

        var _this = _possibleConstructorReturn(this, (RightsFilter.__proto__ || Object.getPrototypeOf(RightsFilter)).call(this, props));

        _this.selectTerritory = function (value) {
            _this.props.updateCountries(value);
        };

        _this.state = {};
        return _this;
    }

    _createClass(RightsFilter, [{
        key: "componentWillReceiveProps",
        value: function componentWillReceiveProps(nextProps) {
            console.log("RightsFilter", nextProps);
        }
    }, {
        key: "render",
        value: function render() {
            var _this2 = this;

            var _props = this.props,
                rights = _props.rights,
                rightsPackage = _props.rightsPackage,
                countries = _props.countries,
                onFilter = _props.onFilter,
                exclusive = _props.exclusive,
                clearFilter = _props.clearFilter;

            return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                "div",
                { className: "box" },
                __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                    "div",
                    { className: "title" },
                    this.context.t("Rights")
                ),
                __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                    "div",
                    { className: "content" },
                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        "div",
                        { style: { display: 'flex' } },
                        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_3__main_components_CountrySelector__["a" /* default */], {
                            className: "base-input-select",
                            value: countries.map(function (c) {
                                return { label: c, value: c };
                            }),
                            onChange: this.selectTerritory })
                    ),
                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        "div",
                        { id: "rights-packages", className: "filter-rights", style: { marginTop: 20 } },
                        rightsPackage && rightsPackage.map(function (right) {
                            return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                "div",
                                { key: right.id, className: "filter-right" },
                                __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement("input", {
                                    className: "ca-checkbox checkbox-item",
                                    type: "checkbox",
                                    checked: rights.indexOf(right.id) !== -1,
                                    onChange: function onChange(e) {
                                        if (e.target.checked) {
                                            _this2.props.addRight(right.id);
                                        } else {
                                            _this2.props.removeRight(right.id);
                                        }
                                    },
                                    id: right.id
                                }),
                                " ",
                                right.name
                            );
                        })
                    ),
                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement("hr", null),
                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        "div",
                        { style: {
                                display: 'flex',
                                marginBottom: 20
                            } },
                        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement("input", {
                            type: "checkbox",
                            checked: exclusive,
                            className: "ca-checkbox checkbox-item",
                            onChange: function onChange(e) {
                                _this2.props.updateExclusive(e.target.checked);
                            }
                        }),
                        this.context.t("Contains exclusive rights")
                    ),
                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        "div",
                        { style: {
                                display: 'flex',
                                alignItems: 'center',
                                flexDirection: 'column'
                            } },
                        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                            "button",
                            { className: "standard-button", style: { margin: 5 }, onClick: onFilter },
                            this.context.t("Apply")
                        ),
                        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                            "button",
                            { className: "standard-button transparent", style: { margin: 5 }, onClick: clearFilter },
                            this.context.t("Clear")
                        )
                    )
                )
            );
        }
    }]);

    return RightsFilter;
}(__WEBPACK_IMPORTED_MODULE_0_react___default.a.Component);

RightsFilter.contextTypes = {
    t: __WEBPACK_IMPORTED_MODULE_4_prop_types__["PropTypes"].func.isRequired
};

var mapStateToProps = function mapStateToProps(state) {
    return state.filter;
};

var mapDispatchToProps = function mapDispatchToProps(dispatch) {
    return {
        addRight: function addRight(id) {
            return dispatch(Object(__WEBPACK_IMPORTED_MODULE_2__actions_filterActions__["a" /* addRight */])(id));
        },
        removeRight: function removeRight(id) {
            return dispatch(Object(__WEBPACK_IMPORTED_MODULE_2__actions_filterActions__["d" /* removeRight */])(id));
        },
        updateCountries: function updateCountries(countries) {
            return dispatch(Object(__WEBPACK_IMPORTED_MODULE_2__actions_filterActions__["e" /* updateCountries */])(countries));
        },
        updateExclusive: function updateExclusive(exclusive) {
            return dispatch(Object(__WEBPACK_IMPORTED_MODULE_2__actions_filterActions__["g" /* updateExclusive */])(exclusive));
        },
        clearFilter: function clearFilter() {
            return dispatch(Object(__WEBPACK_IMPORTED_MODULE_2__actions_filterActions__["b" /* clearFilter */])());
        }
    };
};

/* harmony default export */ __webpack_exports__["a"] = (Object(__WEBPACK_IMPORTED_MODULE_1_react_redux__["connect"])(mapStateToProps, mapDispatchToProps)(RightsFilter));

/***/ }),

/***/ "./src/AppBundle/Resources/public/javascript/buy/containers/CommercialTerms.js":
/*!*************************************************************************************!*\
  !*** ./src/AppBundle/Resources/public/javascript/buy/containers/CommercialTerms.js ***!
  \*************************************************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_react__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_react_redux__ = __webpack_require__(/*! react-redux */ "./node_modules/react-redux/es/index.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__actions__ = __webpack_require__(/*! ../actions */ "./src/AppBundle/Resources/public/javascript/buy/actions/index.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__SalesPackages__ = __webpack_require__(/*! ./SalesPackages */ "./src/AppBundle/Resources/public/javascript/buy/containers/SalesPackages.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_prop_types__ = __webpack_require__(/*! prop-types */ "./node_modules/prop-types/index.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_prop_types___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_4_prop_types__);
var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }







var CommercialTerms = function (_React$Component) {
    _inherits(CommercialTerms, _React$Component);

    function CommercialTerms(props) {
        _classCallCheck(this, CommercialTerms);

        var _this = _possibleConstructorReturn(this, (CommercialTerms.__proto__ || Object.getPrototypeOf(CommercialTerms)).call(this, props));

        _this.state = {};
        _this.noInfoText = "No information available";
        return _this;
    }

    _createClass(CommercialTerms, [{
        key: "render",
        value: function render() {
            var _props = this.props,
                salesPackages = _props.salesPackages,
                onSelectPackage = _props.onSelectPackage,
                programDescription = _props.programDescription,
                profile = _props.profile,
                customId = _props.customId;

            return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                "div",
                { style: { marginTop: 25 } },
                __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                    "div",
                    { className: "full-item-box" },
                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        "label",
                        null,
                        this.context.t("PROGRAMS DESCRIPTION")
                    ),
                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        "div",
                        { className: "full-item-content" },
                        programDescription && programDescription,
                        !programDescription && this.noInfoText
                    )
                ),
                __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_3__SalesPackages__["a" /* default */], {
                    listingId: customId,
                    profile: profile,
                    onSelectPackage: onSelectPackage,
                    salesPackages: salesPackages })
            );
        }
    }]);

    return CommercialTerms;
}(__WEBPACK_IMPORTED_MODULE_0_react___default.a.Component);

CommercialTerms.contextTypes = {
    t: __WEBPACK_IMPORTED_MODULE_4_prop_types__["PropTypes"].func.isRequired
};

var mapStateToProps = function mapStateToProps(state) {
    return state;
};

var mapDispatchToProps = function mapDispatchToProps(dispatch) {
    return {
        onClick: function onClick(id) {
            return dispatch(Object(__WEBPACK_IMPORTED_MODULE_2__actions__["a" /* test */])(id));
        }
    };
};

/* harmony default export */ __webpack_exports__["a"] = (Object(__WEBPACK_IMPORTED_MODULE_1_react_redux__["connect"])(mapStateToProps, mapDispatchToProps)(CommercialTerms));

/***/ }),

/***/ "./src/AppBundle/Resources/public/javascript/buy/containers/ContentInformation.js":
/*!****************************************************************************************!*\
  !*** ./src/AppBundle/Resources/public/javascript/buy/containers/ContentInformation.js ***!
  \****************************************************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_react__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_react_redux__ = __webpack_require__(/*! react-redux */ "./node_modules/react-redux/es/index.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__actions__ = __webpack_require__(/*! ../actions */ "./src/AppBundle/Resources/public/javascript/buy/actions/index.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__sell_components_SellFormItems__ = __webpack_require__(/*! ../../sell/components/SellFormItems */ "./src/AppBundle/Resources/public/javascript/sell/components/SellFormItems.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_prop_types__ = __webpack_require__(/*! prop-types */ "./node_modules/prop-types/index.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_prop_types___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_4_prop_types__);
var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }







var ContentInformation = function (_React$Component) {
    _inherits(ContentInformation, _React$Component);

    function ContentInformation(props) {
        _classCallCheck(this, ContentInformation);

        var _this2 = _possibleConstructorReturn(this, (ContentInformation.__proto__ || Object.getPrototypeOf(ContentInformation)).call(this, props));

        _this2.state = {
            seasons: props.seasons
        };
        _this2.baseDir = assetsBaseDir + "../";
        _this2.pdfIcon = assetsBaseDir + "app/images/pdf.png";
        return _this2;
    }

    _createClass(ContentInformation, [{
        key: "componentDidMount",
        value: function componentDidMount() {
            this.loadSchedule();
        }
    }, {
        key: "componentWillReceiveProps",
        value: function componentWillReceiveProps(nextProps) {}
    }, {
        key: "loadSchedule",
        value: function loadSchedule() {

            var _this = this;
            var _props = this.props,
                seasons = _props.seasons,
                schedulesBySeason = _props.schedulesBySeason;


            seasons.forEach(function (season, index) {
                if (!season.schedules && !season.custom) {
                    _this.setState({ loadingSchedule: true });
                    ContentArena.Api.getSchedule(season.externalId).done(function (schedules) {
                        _this.setState({ loadingSchedule: false });
                        var keys = [];
                        if (schedulesBySeason && schedulesBySeason[index]) {
                            keys = Object.keys(schedulesBySeason[index]);
                            keys.forEach(function (k) {
                                schedulesBySeason[index][k].matches.forEach(function (m) {
                                    if (m.selected) {
                                        schedules[k].matches.get(m.externalId).selected = true;
                                    }
                                });
                                schedules[k].selected = true;
                            });
                        }

                        var tempSeasons = _this.state.seasons;
                        tempSeasons[index].schedules = schedules;
                        if (keys.length > 0) tempSeasons[index].showchedules = true;

                        _this.setState({
                            seasons: tempSeasons
                        });
                    });
                }
            });
        }
    }, {
        key: "render",
        value: function render() {
            var _this3 = this;

            var _props2 = this.props,
                description = _props2.description,
                website = _props2.website,
                attachments = _props2.attachments;
            var seasons = this.state.seasons;

            return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                "div",
                { style: { marginTop: 20 } },
                seasons && seasons.length > 0 && seasons.map(function (season, key) {
                    return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        "div",
                        { key: "season-" + key, className: "season-details" },
                        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                            "div",
                            { className: "season-name" },
                            _this3.context.t("Season :"),
                            " ",
                            season.name
                        ),
                        (!season.fixtures || season.fixtures.length === 0) && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_3__sell_components_SellFormItems__["e" /* StaticSchedules */], { season: key, seasons: seasons }),
                        season.fixtures && season.fixtures.length > 0 && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                            "div",
                            { className: "schedule" },
                            season.fixtures.map(function (fixture) {
                                return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                    "div",
                                    { className: "matchday" },
                                    fixture.name
                                );
                            })
                        )
                    );
                }),
                description && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                    "div",
                    { className: "full-item-box" },
                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        "label",
                        null,
                        this.context.t("EVENT DESCRIPTION")
                    ),
                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        "div",
                        { className: "full-item-content" },
                        description
                    )
                ),
                website && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                    "div",
                    { className: "full-item-box",
                        style: {
                            flexDirection: 'row',
                            width: '70%'
                        } },
                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        "label",
                        null,
                        this.context.t("CONTENT WEBSITE")
                    ),
                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        "div",
                        { style: { padding: 12, border: '1px solid lightgrey', marginLeft: 3, minWidth: 220 } },
                        website && website.map(function (website) {
                            return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                "div",
                                null,
                                __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                    "a",
                                    { target: "_blank", href: website },
                                    website
                                )
                            );
                        })
                    )
                ),
                attachments && attachments.length > 0 && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                    "div",
                    { className: "full-item-box",
                        style: {
                            flexDirection: 'row',
                            width: '70%'
                        } },
                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        "label",
                        { style: {
                                height: 'auto'
                            } },
                        this.context.t("ATTACHMENTS")
                    ),
                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        "div",
                        { style: { display: "flex", flexDirection: 'column' } },
                        attachments.map(function (a) {
                            return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                "div",
                                { onClick: function onClick() {}, style: {
                                        padding: 12, border: '1px solid lightgrey', marginLeft: 3, minWidth: 220,
                                        display: 'flex'
                                    } },
                                __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                    "a",
                                    { download: a.name, target: "_blank", href: _this3.baseDir + a.file, style: {
                                            display: 'inline-flex',
                                            paddingRight: 30
                                        } },
                                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement("img", { style: { margin: '-2px 5px 0 0' }, src: _this3.pdfIcon }),
                                    "  ",
                                    a.name
                                )
                            );
                        })
                    )
                )
            );
        }
    }]);

    return ContentInformation;
}(__WEBPACK_IMPORTED_MODULE_0_react___default.a.Component);

ContentInformation.contextTypes = {
    t: __WEBPACK_IMPORTED_MODULE_4_prop_types__["PropTypes"].func.isRequired
};

var mapStateToProps = function mapStateToProps(state) {
    return state;
};

var mapDispatchToProps = function mapDispatchToProps(dispatch) {
    return {
        onClick: function onClick(id) {
            return dispatch(Object(__WEBPACK_IMPORTED_MODULE_2__actions__["a" /* test */])(id));
        }
    };
};

/* harmony default export */ __webpack_exports__["a"] = (Object(__WEBPACK_IMPORTED_MODULE_1_react_redux__["connect"])(mapStateToProps, mapDispatchToProps)(ContentInformation));

/***/ }),

/***/ "./src/AppBundle/Resources/public/javascript/buy/containers/ListingDetails.js":
/*!************************************************************************************!*\
  !*** ./src/AppBundle/Resources/public/javascript/buy/containers/ListingDetails.js ***!
  \************************************************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_react__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_react_redux__ = __webpack_require__(/*! react-redux */ "./node_modules/react-redux/es/index.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__actions__ = __webpack_require__(/*! ../actions */ "./src/AppBundle/Resources/public/javascript/buy/actions/index.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__CommercialTerms__ = __webpack_require__(/*! ./CommercialTerms */ "./src/AppBundle/Resources/public/javascript/buy/containers/CommercialTerms.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__ContentInformation__ = __webpack_require__(/*! ./ContentInformation */ "./src/AppBundle/Resources/public/javascript/buy/containers/ContentInformation.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__TermSheet__ = __webpack_require__(/*! ./TermSheet */ "./src/AppBundle/Resources/public/javascript/buy/containers/TermSheet.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__ProgramDetails__ = __webpack_require__(/*! ./ProgramDetails */ "./src/AppBundle/Resources/public/javascript/buy/containers/ProgramDetails.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__Seller__ = __webpack_require__(/*! ./Seller */ "./src/AppBundle/Resources/public/javascript/buy/containers/Seller.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8_moment_moment__ = __webpack_require__(/*! moment/moment */ "./node_modules/moment/moment.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8_moment_moment___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_8_moment_moment__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9_react_router_dom__ = __webpack_require__(/*! react-router-dom */ "./node_modules/react-router-dom/es/index.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_10__buy_components_ContentListingEventDetails__ = __webpack_require__(/*! ../../buy/components/ContentListingEventDetails */ "./src/AppBundle/Resources/public/javascript/buy/components/ContentListingEventDetails.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_11__main_components_DigitalSignature__ = __webpack_require__(/*! ../../main/components/DigitalSignature */ "./src/AppBundle/Resources/public/javascript/main/components/DigitalSignature.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_12__main_components_SendMessage__ = __webpack_require__(/*! ../../main/components/SendMessage */ "./src/AppBundle/Resources/public/javascript/main/components/SendMessage.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_13__main_actions_utils__ = __webpack_require__(/*! ../../main/actions/utils */ "./src/AppBundle/Resources/public/javascript/main/actions/utils.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_14__main_styles_custom__ = __webpack_require__(/*! ../../main/styles/custom */ "./src/AppBundle/Resources/public/javascript/main/styles/custom.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_15__sell_actions_validationActions__ = __webpack_require__(/*! ../../sell/actions/validationActions */ "./src/AppBundle/Resources/public/javascript/sell/actions/validationActions.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_16_react_modal__ = __webpack_require__(/*! react-modal */ "./node_modules/react-modal/lib/index.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_16_react_modal___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_16_react_modal__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_17__main_components_CountrySelector__ = __webpack_require__(/*! ../../main/components/CountrySelector */ "./src/AppBundle/Resources/public/javascript/main/components/CountrySelector.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_18_react_tooltip__ = __webpack_require__(/*! react-tooltip */ "./node_modules/react-tooltip/dist/index.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_18_react_tooltip___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_18_react_tooltip__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_19_prop_types__ = __webpack_require__(/*! prop-types */ "./node_modules/prop-types/index.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_19_prop_types___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_19_prop_types__);
var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }





















var labelStyle = { height: "30px", fontSize: "12px", width: '400px' };
var inputStyle = { width: '380px', margin: 0, height: "30px" };
var bidButtonStyle = { height: 34, width: 75, padding: 5, marginLeft: 10, fontSize: 14, marginRight: 10 };
var bidTextBoxStyle = {
    backgroundColor: "#fff",
    padding: '5px 10px',
    border: '1px solid lightgrey',
    marginLeft: 5
};

var ListingDetails = function (_React$Component) {
    _inherits(ListingDetails, _React$Component);

    function ListingDetails(props) {
        _classCallCheck(this, ListingDetails);

        var _this2 = _possibleConstructorReturn(this, (ListingDetails.__proto__ || Object.getPrototypeOf(ListingDetails)).call(this, props));

        _this2.toggleBuyingMode = function () {
            _this2.setState({ buyingMode: !_this2.state.buyingMode });
        };

        _this2.selectPackage = function (selectedPackage, customId) {
            var history = _this2.props.history;


            history.push('/listing/' + customId + '/checkout/' + selectedPackage.id);
            _this2.setState({
                selectedPackage: selectedPackage,
                buyingMode: true,
                bid: selectedPackage.fee,
                minimumBid: selectedPackage.fee
            });
        };

        _this2.ordinal_suffix_of = function (i) {
            var j = i % 10,
                k = i % 100;
            if (j === 1 && k !== 11) {
                return i + "st";
            }
            if (j === 2 && k !== 12) {
                return i + "nd";
            }
            if (j === 3 && k !== 13) {
                return i + "rd";
            }
            return i + "th";
        };

        _this2.showTab = function (tab) {
            _this2.setState({ tab: tab });
        };

        _this2.isTabHasData = function (content, tab) {
            var description = content.description,
                website = content.website,
                attachments = content.attachments;


            if (tab === "event") {
                return !!(description || website || attachments && attachments.length > 0);
            }
        };

        _this2.closeModal = function () {
            _this2.setState({ editCompanyOpen: false });
        };

        _this2.closeTerritoriesModal = function () {
            _this2.setState({ showAllTerritories: false });
        };

        _this2.closeSuccessScreen = function () {
            var history = _this2.props.history;

            history.push("/marketplace");
        };

        _this2.editCompany = function () {
            var company = _this2.state.company;


            return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                __WEBPACK_IMPORTED_MODULE_16_react_modal___default.a,
                {
                    isOpen: _this2.state.editCompanyOpen,
                    onRequestClose: _this2.closeModal,
                    bodyOpenClassName: "selector",
                    style: __WEBPACK_IMPORTED_MODULE_14__main_styles_custom__["c" /* customStyles */],
                    contentLabel: "Example Modal"
                },
                __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                    "div",
                    { className: "modal-title" },
                    "Company Information",
                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement("i", { className: "fa fa-times-circle-o", onClick: _this2.closeModal })
                ),
                __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                    "div",
                    { className: "step-content" },
                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        "div",
                        { className: "step-content-container" },
                        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                            "div",
                            { className: "base-full-input" },
                            __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                "label",
                                { style: labelStyle },
                                "Legal name"
                            ),
                            __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement("input", {
                                type: "text",
                                style: inputStyle,
                                value: company.legalName })
                        ),
                        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                            "div",
                            { className: "base-full-input" },
                            __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                "label",
                                { style: labelStyle },
                                "Registration number"
                            ),
                            __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement("input", {
                                style: inputStyle,
                                type: "text",
                                onChange: function onChange(e) {
                                    company.reregistrationNumber = e.target.value;
                                    _this2.setState({ company: company });
                                },
                                value: company.registrationNumber })
                        ),
                        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                            "div",
                            { className: "base-full-input" },
                            __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                "label",
                                { style: labelStyle },
                                "VAT ID number"
                            ),
                            __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement("input", {
                                style: inputStyle,
                                type: "text",
                                onChange: function onChange(e) {
                                    company.vat = e.target.value;
                                    _this2.setState({ company: company });
                                },
                                value: company.vat })
                        ),
                        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                            "div",
                            { className: "base-full-input" },
                            __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                "label",
                                { style: labelStyle },
                                "Street Name / Number"
                            ),
                            __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement("input", {
                                style: inputStyle,
                                type: "text",
                                onChange: function onChange(e) {
                                    company.address = e.target.value;
                                    _this2.setState({ company: company });
                                },
                                value: company.address })
                        ),
                        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                            "div",
                            { className: "base-full-input" },
                            __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                "label",
                                { style: labelStyle },
                                "City"
                            ),
                            __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement("input", {
                                style: inputStyle,
                                type: "text",
                                onChange: function onChange(e) {
                                    company.city = e.target.value;
                                    _this2.setState({ company: company });
                                },
                                value: company.city })
                        ),
                        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                            "div",
                            { className: "base-full-input" },
                            __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                "label",
                                { style: labelStyle },
                                "ZIP code"
                            ),
                            __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement("input", {
                                style: inputStyle,
                                type: "text",
                                onChange: function onChange(e) {
                                    company.zip = e.target.value;
                                    _this2.setState({ company: company });
                                },
                                value: company.zip })
                        ),
                        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                            "div",
                            { className: "base-full-input" },
                            __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                "label",
                                { style: labelStyle },
                                "Country"
                            ),
                            __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_17__main_components_CountrySelector__["a" /* default */], {
                                multi: false,
                                onChange: function onChange(value) {
                                    company.country.name = value.label;
                                    _this2.setState({ company: company });
                                },
                                value: { value: company.country.name, label: company.country.name } })
                        )
                    )
                ),
                __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                    "div",
                    { className: "buttons" },
                    Object(__WEBPACK_IMPORTED_MODULE_15__sell_actions_validationActions__["a" /* companyIsValid */])(company) && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        "button",
                        {
                            className: "standard-button",
                            onClick: _this2.closeModal },
                        "Ok"
                    ),
                    !Object(__WEBPACK_IMPORTED_MODULE_15__sell_actions_validationActions__["a" /* companyIsValid */])(company) && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        "button",
                        {
                            className: "standard-button",
                            disabled: true
                        },
                        "Ok"
                    )
                )
            );
        };

        _this2.showAllTerritories = function (extraTerritories) {
            _this2.setState({
                showAllTerritories: true,
                territoriesList: extraTerritories
            });
        };

        _this2.allTerritories = function () {

            return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                __WEBPACK_IMPORTED_MODULE_16_react_modal___default.a,
                {
                    isOpen: _this2.state.showAllTerritories,
                    onRequestClose: _this2.closeTerritoriesModal,
                    bodyOpenClassName: "selector",
                    style: __WEBPACK_IMPORTED_MODULE_14__main_styles_custom__["c" /* customStyles */]
                },
                __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                    "div",
                    { style: {
                            color: 'grey',
                            padding: 20,
                            display: 'flex',
                            flexWrap: 'wrap'
                        } },
                    _this2.state.territoriesList.map(function (territory) {
                        return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                            "div",
                            { className: "country-modal" },
                            territory.label
                        );
                    })
                )
            );
        };

        _this2.successScreen = function () {
            var selectedPackage = _this2.state.selectedPackage;
            var history = _this2.props.history;

            return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                __WEBPACK_IMPORTED_MODULE_16_react_modal___default.a,
                {
                    isOpen: _this2.state.showSuccessScreen,
                    onRequestClose: _this2.closeSuccessScreen,
                    bodyOpenClassName: "selector",
                    style: __WEBPACK_IMPORTED_MODULE_14__main_styles_custom__["c" /* customStyles */]
                },
                __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                    "div",
                    { style: {
                            color: 'grey',
                            padding: 20,
                            display: 'flex',
                            flexDirection: 'column',
                            alignItems: 'center'
                        } },
                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        "div",
                        { style: {
                                fontSize: 30,
                                width: 600,
                                textAlign: 'center',
                                fontWeight: 600
                            } },
                        _this2.context.t("Congratulations!")
                    ),
                    selectedPackage.salesMethod === "FIXED" && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        "div",
                        { style: {
                                fontSize: 20,
                                width: 600,
                                margin: 40,
                                textAlign: 'center'
                            } },
                        _this2.context.t("You have successfully acquired the package!")
                    ),
                    selectedPackage.salesMethod === "BIDDING" && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        "div",
                        { style: {
                                fontSize: 20,
                                width: 600,
                                margin: 40,
                                textAlign: 'center'
                            } },
                        _this2.context.t("Your bid was placed successfully!")
                    ),
                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        "div",
                        { style: { display: 'flex' } },
                        selectedPackage.salesMethod === "FIXED" && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                            "button",
                            { className: "standard-button", onClick: function onClick() {
                                    history.push("/closeddeals");
                                } },
                            _this2.context.t("View Closed Deals")
                        ),
                        selectedPackage.salesMethod !== "FIXED" && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                            "button",
                            { className: "standard-button", onClick: function onClick() {
                                    history.push("/bids/activebids");
                                } },
                            _this2.context.t("View Bids")
                        ),
                        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                            "button",
                            { className: "standard-button", onClick: _this2.closeSuccessScreen },
                            _this2.context.t("Return to Marketplace")
                        )
                    )
                )
            );
        };

        _this2.getTechnicalFee = function () {
            var content = _this2.state.content;


            var response = {
                TECHNICAL_FEE: "",
                TECHNICAL_FEE_PERCENTAGE: 0
            };

            var selected = content.rightsPackage && content.rightsPackage[0] && content.rightsPackage[0].selectedRights ? content.rightsPackage[0].selectedRights : null;

            if (selected) {
                response["TECHNICAL_FEE"] = selected["TECHNICAL_FEE"];
                response["TECHNICAL_FEE_PERCENTAGE"] = selected["TECHNICAL_FEE_PERCENTAGE"];
            }

            return selected;
        };

        _this2.getTotalFee = function () {
            var selectedPackage = _this2.state.selectedPackage;

            var technicalFee = _this2.getTechnicalFee();
            var total = Number(selectedPackage.fee);

            if (technicalFee.TECHNICAL_FEE === "ON_TOP") {
                total = total + total / 100 * Number(technicalFee.TECHNICAL_FEE_PERCENTAGE);
            }
            return total;
        };

        _this2.setBid = function () {
            var _this2$state = _this2.state,
                selectedPackage = _this2$state.selectedPackage,
                bid = _this2$state.bid;


            selectedPackage.fee = bid;

            _this2.setState({
                selectedPackage: selectedPackage,
                bidUpdated: true
            });
        };

        _this2.editBid = function () {
            _this2.setState({
                bidUpdated: false
            });
        };

        _this2.placeBid = function () {
            var _this2$state2 = _this2.state,
                bid = _this2$state2.bid,
                selectedPackage = _this2$state2.selectedPackage,
                signature = _this2$state2.signature,
                content = _this2$state2.content;

            _this2.setState({ spinner: true });
            var bidObj = {
                amount: bid,
                salesPackage: selectedPackage.id,
                signature: signature,
                totalFee: _this2.getTotalFee(),
                content: content.id,
                salesMethod: selectedPackage.salesMethod
            };

            ContentArena.ContentApi.placeBid(bidObj).then(function (r) {
                _this2.setState({ showSuccessScreen: true, soldOut: r.soldOut, spinner: false });
            });
        };

        _this2.invalidPackage = function () {
            var _this2$state3 = _this2.state,
                signature = _this2$state3.signature,
                selectedPackage = _this2$state3.selectedPackage,
                bidUpdated = _this2$state3.bidUpdated,
                terms = _this2$state3.terms;

            return !signature || selectedPackage.salesMethod === 'BIDDING' && !bidUpdated || !terms;
        };

        _this2.watchlist = function () {
            var content = _this2.state.content;
            var _this = _this2;

            content.watchlist = !content.watchlist;
            _this.setState({ content: content });

            ContentArena.Api.watchlist(content.customId).then(function (response) {
                if (response && response.success === true) {
                    content.watchlist = !!response.state;
                    _this.setState({ content: content });
                }
            });
        };

        var listing = ContentArena.Utils.contentParserFromServer(props.listing) || {};

        _this2.state = {
            content: listing,
            company: props.company,
            spinner: false,
            tab: props.tab || "bundles",
            buyingMode: props.tab && props.tab === "checkout",
            soldOut: false,
            selectedPackage: props.tab && props.tab === "checkout" ? listing.salesPackages.find(function (sp) {
                return sp.id == props.bundle;
            }) : {},
            territoriesList: [],
            editCompanyOpen: false,
            bidUpdated: false
        };
        _this2.blueCheck = assetsBaseDir + "app/images/blue_check.png";
        _this2.checkIcon = assetsBaseDir + "app/images/check.png";
        _this2.yellowCheck = assetsBaseDir + "app/images/yellow_chech.png";
        _this2.contactIcon = assetsBaseDir + "app/images/envelope.png";
        _this2.watchlistIcon = assetsBaseDir + "app/images/watchlist.png";
        _this2.bidIcon = assetsBaseDir + "app/images/hammer.png";
        _this2.packageIcon = assetsBaseDir + "app/images/bid.png";
        _this2.infoIcon = assetsBaseDir + "app/images/info.png";
        _this2.pdfIcon = assetsBaseDir + "app/images/pdf.png";
        _this2.draftIcon = assetsBaseDir + "app/images/draft.png";
        _this2.baseDir = assetsBaseDir + "../";
        return _this2;
    }

    _createClass(ListingDetails, [{
        key: "componentDidMount",
        value: function componentDidMount() {
            var salesPackage = this.props.salesPackage;
            var content = this.state.content;

            var selectedPackage = void 0;

            if (salesPackage) {
                selectedPackage = content.salesPackages.filter(function (p) {
                    return Number(p.id) === Number(salesPackage);
                })[0];
                this.selectPackage(selectedPackage);
            }
        }
    }, {
        key: "componentWillReceiveProps",
        value: function componentWillReceiveProps(nextProps) {

            this.setState({
                content: ContentArena.Utils.contentParserFromServer(nextProps.listing)
            });
        }
    }, {
        key: "render",
        value: function render() {
            var _this3 = this;

            __WEBPACK_IMPORTED_MODULE_18_react_tooltip___default.a.rebuild();
            var _props = this.props,
                onBack = _props.onBack,
                profile = _props.profile,
                history = _props.history;
            var _state = this.state,
                buyingMode = _state.buyingMode,
                selectedPackage = _state.selectedPackage,
                tab = _state.tab,
                content = _state.content,
                signature = _state.signature,
                bid = _state.bid,
                company = _state.company,
                bidUpdated = _state.bidUpdated,
                spinner = _state.spinner,
                minimumBid = _state.minimumBid;

            var listingImage = content.image ? assetsBaseDir + "../" + content.image : this.noImage;
            var technicalFee = this.getTechnicalFee();
            var extraTerritories = selectedPackage.territoriesMethod === "WORLDWIDE_EXCLUDING" ? selectedPackage.excludedTerritories : selectedPackage.territories;
            return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                "div",
                { className: "listing-details" },
                __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_12__main_components_SendMessage__["a" /* default */], { ref: "messagePopup", listingId: content.id, recipient: content.company }),
                this.editCompany(),
                this.allTerritories(),
                this.successScreen(),
                __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                    "div",
                    { className: "listing-details-content" },
                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        "div",
                        { className: "left" },
                        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                            "div",
                            { className: "image" },
                            __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement("img", { src: listingImage })
                        ),
                        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_10__buy_components_ContentListingEventDetails__["a" /* default */], this.props.listing),
                        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                            "div",
                            { style: { flex: 2, flexDirection: "column", margin: '20px 0' } },
                            content.rightsPackage.map(function (sr, i) {
                                return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                    "div",
                                    { key: i, style: {
                                            minHeight: 46,
                                            flexDirection: 'row',
                                            display: 'flex',
                                            alignItems: 'center'
                                        } },
                                    !sr.exclusive && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement("img", { style: { width: 23, height: 22, margin: '0 5px' }, src: _this3.blueCheck }),
                                    sr.exclusive && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement("img", { style: { width: 23, height: 22, margin: '0 5px' }, src: _this3.yellowCheck }),
                                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                        "div",
                                        { style: { display: 'flex', flexDirection: "row" } },
                                        sr.shortLabel !== "PR" && sr.name,
                                        sr.shortLabel === "PR" && content.PROGRAM_NAME && "Program: " + content.PROGRAM_NAME,
                                        sr.exclusive && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                            "span",
                                            { style: { fontWeight: 600, marginLeft: 3 } },
                                            " EX"
                                        )
                                    )
                                );
                            })
                        ),
                        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                            "div",
                            { className: "date" },
                            this.context.t("Start of license period"),
                            __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                "span",
                                null,
                                content.startDateMode !== "DATE" && this.context.t(" With contract conclusion"),
                                content.startDateMode === "DATE" && " " + __WEBPACK_IMPORTED_MODULE_8_moment_moment___default()(content.startDate).format('DD/MM/YYYY')
                            )
                        ),
                        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                            "div",
                            { className: "date" },
                            this.context.t("End of license period"),
                            __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                "span",
                                null,
                                content.endDateMode === "LIMITED" && " " + content.endDateLimit + this.context.t(" days from contract conclusion"),
                                content.endDateMode === "DATE" && " " + __WEBPACK_IMPORTED_MODULE_8_moment_moment___default()(content.endDate).format('DD/MM/YYYY'),
                                content.endDateMode === "UNLIMITED" && this.context.t(" Unlimited")
                            )
                        ),
                        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                            "div",
                            { className: "date" },
                            this.context.t("Publishing date"),
                            __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                "span",
                                null,
                                __WEBPACK_IMPORTED_MODULE_8_moment_moment___default()().format('DD/MM/YYYY')
                            )
                        ),
                        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                            "div",
                            { className: "date" },
                            this.context.t("Expiry"),
                            __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                "span",
                                null,
                                __WEBPACK_IMPORTED_MODULE_8_moment_moment___default()(content.expiresAt).format('DD/MM/YYYY')
                            )
                        )
                    ),
                    !buyingMode && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        "div",
                        { className: "right" },
                        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                            "div",
                            { className: "header" },
                            __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                "div",
                                { className: "content" },
                                __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                    "div",
                                    { className: "name" },
                                    content.name
                                ),
                                profile === "BUYER" && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                    "div",
                                    { className: "publisher", style: {
                                            flex: 1,
                                            fontSize: 18,
                                            fontWeight: 600
                                        } },
                                    content.company.legalName
                                ),
                                profile === "BUYER" && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                    "div",
                                    { style: { margin: '0 10px', display: 'flex', cursor: 'pointer' },
                                        onClick: function onClick() {
                                            _this3.refs.messagePopup.open();
                                        } },
                                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement("img", { style: { width: 22, height: 18, marginBottom: 5 }, src: this.contactIcon }),
                                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                        "div",
                                        { style: {
                                                flex: 1,
                                                color: '#4F4F4F',
                                                fontSize: 16,
                                                margin: '0 10px'
                                            } },
                                        this.context.t("Contact Seller")
                                    )
                                ),
                                profile === "BUYER" && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                    "div",
                                    { style: { margin: '0 10px', display: 'flex', cursor: 'pointer' },
                                        onClick: this.watchlist },
                                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement("img", { style: { width: 18, height: 18, marginTop: 2 },
                                        src: content.watchlist ? this.checkIcon : this.watchlistIcon
                                    }),
                                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                        "div",
                                        { style: {
                                                flex: 1,
                                                color: '#2DA7E6',
                                                fontSize: 16,
                                                textDecoration: content.watchlist ? '' : 'underline',
                                                margin: '0 10px 0 5px'

                                            } },
                                        content.watchlist ? this.context.t('Added to watchlist') : this.context.t('Watchlist')
                                    )
                                ),
                                __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                    "div",
                                    { className: "custom-id" },
                                    "#",
                                    content.customId
                                )
                            )
                        ),
                        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                            "div",
                            { className: "listing-details-buttons" },
                            __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                "button",
                                { className: tab === "bundles" ? "active" : "", onClick: function onClick() {
                                        history.push('/listing/' + content.customId + '/bundles');
                                        _this3.showTab("bundles");
                                    } },
                                this.context.t("Program & Sales Bundles")
                            ),
                            this.isTabHasData(content, "event") && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                "button",
                                { className: tab === "event" ? "active" : "", onClick: function onClick() {
                                        history.push('/listing/' + content.customId + '/event');
                                        _this3.showTab("event");
                                    } },
                                this.context.t("Event")
                            ),
                            __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                "button",
                                { className: tab === "grantofrights" ? "active" : "", onClick: function onClick() {
                                        history.push('/listing/' + content.customId + '/grantofrights');
                                        _this3.showTab("grantofrights");
                                    } },
                                this.context.t("Grant of Rights & Production")
                            ),
                            content.PROGRAM_NAME && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                "button",
                                { className: tab === "editeprogram" ? "active" : "", onClick: function onClick() {
                                        history.push('/listing/' + content.customId + '/editedprogram');
                                        _this3.showTab("editedprogram");
                                    } },
                                this.context.t("Edited Program")
                            ),
                            __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                "button",
                                { className: tab === "seller" ? "active" : "", onClick: function onClick() {
                                        history.push('/listing/' + content.customId + '/seller');
                                        _this3.showTab("seller");
                                    } },
                                this.context.t("Seller Information")
                            )
                        ),
                        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                            "div",
                            { className: "listing-details-tab" },
                            this.state.tab === "bundles" && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_3__CommercialTerms__["a" /* default */], _extends({
                                profile: profile,
                                onSelectPackage: this.selectPackage
                            }, content)),
                            this.state.tab === "event" && this.isTabHasData(content, "event") && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_4__ContentInformation__["a" /* default */], content),
                            this.state.tab === "grantofrights" && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_5__TermSheet__["a" /* default */], content),
                            this.state.tab === "editedprogram" && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_6__ProgramDetails__["a" /* default */], content),
                            this.state.tab === "seller" && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_7__Seller__["a" /* default */], content)
                        )
                    ),
                    buyingMode && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        "div",
                        { className: "right", style: { padding: '0 20px' } },
                        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                            "div",
                            { className: "header" },
                            __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                "div",
                                { className: "content" },
                                __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                    "div",
                                    { className: "name" },
                                    selectedPackage && selectedPackage.salesMethod === "FIXED" && "Buy now",
                                    selectedPackage && selectedPackage.salesMethod === "BIDDING" && "Bid"
                                )
                            )
                        ),
                        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                            "div",
                            { style: { display: 'flex', marginBottom: 10 } },
                            __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                "div",
                                { style: {
                                        flex: 1,
                                        paddingLeft: 30,
                                        paddingTop: 5,
                                        fontWeight: 600,
                                        display: 'flex',
                                        alignItems: 'center'

                                    } },
                                this.context.t("Sales bundle")
                            ),
                            __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                "div",
                                { style: {
                                        flex: '2.5 1 0%'
                                    } },
                                __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                    "div",
                                    { style: {
                                            padding: 12,
                                            border: '1px solid #DDE1E7',
                                            backgroundColor: '#FAFBFC',
                                            margin: 5,
                                            boxSizing: 'border-box',
                                            display: 'flex',
                                            flexDirection: 'row',
                                            color: 'grey',
                                            maxWidth: 750
                                        } },
                                    selectedPackage.bundleMethod === "SELL_AS_BUNDLE" && selectedPackage.territories.length > 1 && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                        "div",
                                        { style: {} },
                                        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement("img", { style: { width: 26, height: 23 }, src: this.packageIcon })
                                    ),
                                    selectedPackage.territories.length > 1 && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                        "div",
                                        { style: { margin: '0 15px', fontWeight: 600 } },
                                        selectedPackage.territories.length
                                    ),
                                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                        "div",
                                        null,
                                        selectedPackage.name,
                                        extraTerritories && extraTerritories.length > 3 && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                            "span",
                                            {
                                                style: {
                                                    color: '#2DA7E6',
                                                    textDecoration: 'underline',
                                                    marginLeft: 5,
                                                    cursor: 'pointer'
                                                },
                                                onClick: function onClick() {
                                                    _this3.showAllTerritories(extraTerritories);
                                                } },
                                            "+" + (extraTerritories.length - 3)
                                        )
                                    )
                                )
                            )
                        ),
                        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                            "div",
                            { style: { display: 'flex', marginBottom: 10 } },
                            __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                "div",
                                { style: {
                                        flex: 1,
                                        paddingLeft: 30,
                                        paddingTop: 5,
                                        fontWeight: 600,
                                        display: 'flex',
                                        alignItems: 'center'

                                    } },
                                this.context.t("Commercial information")
                            ),
                            __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                "div",
                                { style: {
                                        flex: '2.5 1 0%'
                                    } },
                                __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                    "div",
                                    { style: {
                                            padding: '8px 12px',
                                            border: '1px solid #DDE1E7',
                                            backgroundColor: '#FAFBFC',
                                            margin: 5,
                                            boxSizing: 'border-box',
                                            display: 'flex',
                                            flexDirection: 'row',
                                            color: 'grey',
                                            maxWidth: 750
                                        } },
                                    selectedPackage.salesMethod === "FIXED" && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                        "div",
                                        { style: { display: 'flex', alignItems: 'center' } },
                                        this.context.t("License fee:"),
                                        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                            "span",
                                            { style: bidTextBoxStyle },
                                            selectedPackage.fee,
                                            " ",
                                            Object(__WEBPACK_IMPORTED_MODULE_13__main_actions_utils__["b" /* getCurrencySymbol */])(selectedPackage.currency.code)
                                        )
                                    ),
                                    selectedPackage.salesMethod === "BIDDING" && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                        "div",
                                        { style: { display: 'flex', alignItems: 'center' } },
                                        this.context.t("Bid:"),
                                        !bidUpdated && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement("input", {
                                            style: {
                                                padding: '6px 10px',
                                                width: 100,
                                                marginLeft: 10,
                                                marginRight: 10,
                                                textAlign: 'right'
                                            },
                                            type: "number",
                                            value: bid,
                                            onChange: function onChange(e) {
                                                var value = e.target.value;
                                                _this3.setState({ bid: value });
                                            },
                                            min: selectedPackage.fee }),
                                        bidUpdated && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                            "span",
                                            { style: bidTextBoxStyle },
                                            selectedPackage.fee,
                                            " ",
                                            Object(__WEBPACK_IMPORTED_MODULE_13__main_actions_utils__["b" /* getCurrencySymbol */])(selectedPackage.currency.code)
                                        ),
                                        !bidUpdated && Object(__WEBPACK_IMPORTED_MODULE_13__main_actions_utils__["b" /* getCurrencySymbol */])(selectedPackage.currency.code),
                                        !bidUpdated && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                            "div",
                                            {
                                                "data-tip": true,
                                                "data-for": "apply-bid",
                                                "data-tip-disable": parseFloat(bid) >= parseFloat(minimumBid) },
                                            __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                                "button",
                                                { className: "standard-button",
                                                    style: bidButtonStyle,
                                                    disabled: !bid || parseFloat(bid) === 0 || parseFloat(bid) < parseFloat(minimumBid),
                                                    onClick: this.setBid },
                                                "Apply"
                                            )
                                        ),
                                        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                            __WEBPACK_IMPORTED_MODULE_18_react_tooltip___default.a,
                                            { id: "apply-bid" },
                                            __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                                "span",
                                                null,
                                                this.context.t("The bid must exceed current minimum")
                                            )
                                        ),
                                        bidUpdated && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                            "button",
                                            { className: "link-button", onClick: this.editBid },
                                            this.context.t("Raise")
                                        )
                                    ),
                                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                        "div",
                                        { style: {
                                                margin: '5px 10px'
                                            } },
                                        this.context.t("Technical fee:"),
                                        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                            "span",
                                            { style: bidTextBoxStyle },
                                            technicalFee.TECHNICAL_FEE === "ON_TOP" && technicalFee.TECHNICAL_FEE_PERCENTAGE + "%",
                                            technicalFee.TECHNICAL_FEE !== "ON_TOP" && "Included"
                                        )
                                    ),
                                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                        "div",
                                        { style: {
                                                margin: '5px 10px'
                                            } },
                                        this.context.t("Total:"),
                                        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                            "span",
                                            { style: bidTextBoxStyle },
                                            this.getTotalFee() + Object(__WEBPACK_IMPORTED_MODULE_13__main_actions_utils__["b" /* getCurrencySymbol */])(selectedPackage.currency.code)
                                        )
                                    )
                                )
                            )
                        ),
                        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                            "div",
                            { style: { display: 'flex', marginBottom: 10 } },
                            __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                "div",
                                { style: {
                                        flex: 1,
                                        paddingLeft: 30,
                                        paddingTop: 5,
                                        fontWeight: 600,
                                        display: 'flex',
                                        alignItems: 'center'

                                    } },
                                this.context.t("Payment details")
                            ),
                            __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                "div",
                                { style: {
                                        flex: '2.5 1 0%'
                                    } },
                                selectedPackage.installments && selectedPackage.installments.map(function (installment, index) {
                                    return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                        "div",
                                        { key: "installment-" + index, style: {
                                                padding: 12,
                                                border: '1px solid #DDE1E7',
                                                backgroundColor: '#FAFBFC',
                                                margin: 5,
                                                boxSizing: 'border-box',
                                                display: 'flex',
                                                flexDirection: 'row',
                                                color: 'grey',
                                                maxWidth: 750
                                            } },
                                        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                            "div",
                                            { style: {
                                                    margin: '0 10px 0 0',
                                                    fontWeight: 600
                                                } },
                                            _this3.ordinal_suffix_of(index + 1),
                                            " ",
                                            _this3.context.t("installment")
                                        ),
                                        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                            "div",
                                            { style: { margin: '0 30px' } },
                                            installment.value,
                                            "%"
                                        ),
                                        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                            "div",
                                            { style: { margin: '0 10px' } },
                                            installment.type === "DAY" && installment.days + _this3.context.t(" days after contract closure"),
                                            installment.type === "DATE" && " " + __WEBPACK_IMPORTED_MODULE_8_moment_moment___default()(installment.date).format('DD/MM/YYYY')
                                        )
                                    );
                                })
                            )
                        ),
                        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                            "div",
                            { style: { display: 'flex', marginBottom: 10 } },
                            __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                "div",
                                { style: {
                                        flex: 1,
                                        paddingLeft: 30,
                                        paddingTop: 5,
                                        fontWeight: 600,
                                        display: 'flex',
                                        alignItems: 'center'

                                    } },
                                this.context.t("Company address")
                            ),
                            __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                "div",
                                { style: {
                                        flex: '2.5 1 0%'
                                    } },
                                __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                    "div",
                                    { style: {
                                            padding: 12,
                                            border: '1px solid #DDE1E7',
                                            backgroundColor: '#FAFBFC',
                                            margin: 5,
                                            boxSizing: 'border-box',
                                            display: 'flex',
                                            flexDirection: 'row',
                                            color: 'grey',
                                            maxWidth: 750
                                        } },
                                    [company.legalName, company.address, company.zip, company.country.name].join(", "),
                                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement("img", { src: this.draftIcon,
                                        onClick: function onClick(e) {
                                            _this3.setState({ editCompanyOpen: true });
                                        },
                                        style: { cursor: 'pointer', margin: '-2px 10px' } })
                                )
                            )
                        ),
                        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                            "div",
                            { style: {
                                    display: 'flex',
                                    justifyContent: 'center',
                                    textDecoration: 'underline',
                                    cursor: 'pointer',
                                    color: '#48C0FE',
                                    fontSize: 16,
                                    margin: 10
                                }, onClick: function onClick() {
                                    Object(__WEBPACK_IMPORTED_MODULE_13__main_actions_utils__["l" /* viewLicenseCustom */])(content.customId, selectedPackage.id, bid);
                                } },
                            __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement("img", { style: { marginRight: 10 }, src: this.pdfIcon }),
                            this.context.t("License agreement")
                        ),
                        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                            "div",
                            null,
                            __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_11__main_components_DigitalSignature__["a" /* default */], { signature: signature, onReady: function onReady(signature) {
                                    _this3.setState({ signature: signature });
                                } }),
                            __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                "div",
                                { style: { textAlign: 'center', padding: '20px 0 0' } },
                                __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement("input", { type: "checkbox",
                                    id: "terms-buy",
                                    className: "ca-checkbox",
                                    style: { marginRight: "5px" },
                                    onChange: function onChange(e) {
                                        _this3.setState({ terms: e.target.checked });
                                    },
                                    checked: this.state.terms
                                }),
                                __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                    "label",
                                    { htmlFor: "terms-buy" },
                                    this.context.t("Accept terms conditions")
                                )
                            )
                        ),
                        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                            "div",
                            { style: {
                                    display: 'flex',
                                    justifyContent: 'center',
                                    marginTop: 20,
                                    marginBottom: 40
                                } },
                            !spinner && selectedPackage.salesMethod === "FIXED" && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                "button",
                                { className: "standard-button",
                                    onClick: this.placeBid,
                                    disabled: this.invalidPackage() },
                                this.context.t("Buy")
                            ),
                            !spinner && selectedPackage.salesMethod !== "FIXED" && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                "button",
                                { className: "standard-button",
                                    onClick: this.placeBid,
                                    disabled: this.invalidPackage() },
                                this.context.t("Place Bid")
                            ),
                            spinner && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement("i", { className: "fa fa-cog fa-spin" })
                        )
                    )
                )
            );
        }
    }]);

    return ListingDetails;
}(__WEBPACK_IMPORTED_MODULE_0_react___default.a.Component);

ListingDetails.contextTypes = {
    t: __WEBPACK_IMPORTED_MODULE_19_prop_types__["PropTypes"].func.isRequired
};

var mapStateToProps = function mapStateToProps(state) {
    return state;
};

var mapDispatchToProps = function mapDispatchToProps(dispatch) {
    return {
        onClick: function onClick(id) {
            return dispatch(Object(__WEBPACK_IMPORTED_MODULE_2__actions__["a" /* test */])(id));
        }
    };
};

/* harmony default export */ __webpack_exports__["a"] = (Object(__WEBPACK_IMPORTED_MODULE_1_react_redux__["connect"])(mapStateToProps, mapDispatchToProps)(ListingDetails));

/***/ }),

/***/ "./src/AppBundle/Resources/public/javascript/buy/containers/Marketplace.js":
/*!*********************************************************************************!*\
  !*** ./src/AppBundle/Resources/public/javascript/buy/containers/Marketplace.js ***!
  \*********************************************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_react__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_react_redux__ = __webpack_require__(/*! react-redux */ "./node_modules/react-redux/es/index.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__actions__ = __webpack_require__(/*! ../actions */ "./src/AppBundle/Resources/public/javascript/buy/actions/index.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__components_EventFilter__ = __webpack_require__(/*! ../components/EventFilter */ "./src/AppBundle/Resources/public/javascript/buy/components/EventFilter.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__components_RightsFilter__ = __webpack_require__(/*! ../components/RightsFilter */ "./src/AppBundle/Resources/public/javascript/buy/components/RightsFilter.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__main_components_ContentListing__ = __webpack_require__(/*! ../../main/components/ContentListing */ "./src/AppBundle/Resources/public/javascript/main/components/ContentListing.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__ListingDetails__ = __webpack_require__(/*! ./ListingDetails */ "./src/AppBundle/Resources/public/javascript/buy/containers/ListingDetails.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__actions_filterActions__ = __webpack_require__(/*! ../actions/filterActions */ "./src/AppBundle/Resources/public/javascript/buy/actions/filterActions.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__main_actions_utils__ = __webpack_require__(/*! ../../main/actions/utils */ "./src/AppBundle/Resources/public/javascript/main/actions/utils.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9__main_actions_userActions__ = __webpack_require__(/*! ../../main/actions/userActions */ "./src/AppBundle/Resources/public/javascript/main/actions/userActions.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_10_prop_types__ = __webpack_require__(/*! prop-types */ "./node_modules/prop-types/index.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_10_prop_types___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_10_prop_types__);
var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }













var queryString = __webpack_require__(/*! query-string */ "./node_modules/query-string/index.js");

var Marketplace = function (_React$Component) {
    _inherits(Marketplace, _React$Component);

    function Marketplace(props) {
        _classCallCheck(this, Marketplace);

        var _this2 = _possibleConstructorReturn(this, (Marketplace.__proto__ || Object.getPrototypeOf(Marketplace)).call(this, props));

        _this2.selectListing = function (id) {

            var _this = _this2;

            if (id === _this.state.id) {
                _this.setState({
                    showDetails: true
                });

                return;
            }

            _this.setState({
                id: id,
                loadingListingDetails: true,
                showDetails: true
            });

            ContentArena.ContentApi.getByCustomId(id).done(function (content) {

                _this.setState({
                    content: content,
                    loadingListingDetails: false
                });
            }).fail(function (error) {
                _this.setState({
                    errorMessage: error.data.responseJSON.message,
                    loadingListingDetails: false
                });
            });
        };

        _this2.parseFilter = function (filter) {
            var response = {
                rights: filter.rights,
                countries: filter.countries
            };

            if (filter.sport) {
                response.sports = filter.sport.value ? [{ name: filter.sport.label }] : !filter.sport.label ? [{ name: filter.sport }] : null;
            }
            if (filter.exclusive) response.exclusive = filter.exclusive;
            if (filter.event) response.event = filter.event;

            return response;
        };

        _this2.parseFilterForUrl = function (filter) {

            var response = {
                rights: filter.rights,
                countries: filter.countries
            };

            if (filter.sport && filter.sport.value && filter.sport.label !== "All sports") {
                response.sport = filter.sport.label;
            }

            if (filter.sport && !filter.sport.value && !filter.sport.label) {
                response.sport = filter.sport;
            }

            if (filter.exclusive) response.exclusive = filter.exclusive;
            if (filter.event) response.event = filter.event;

            return response;
        };

        _this2.getContent = function (filter) {
            var _this = _this2;

            _this.setState({
                loadingListing: true,
                listings: []
            });

            ContentArena.Api.getJsonContent(filter).done(function (listings) {

                listings = listings.map(function (listing) {
                    return ContentArena.Utils.contentParserFromServer(listing);
                });
                _this.setState({ listings: listings, loadingListing: false, sortSalesPackages: true });
            });
        };

        _this2.filter = function () {
            var filter = _this2.props.filter;

            var parsedFilter = _this2.parseFilter(filter);
            _this2.getContent(parsedFilter);
        };

        _this2.filterByRoute = function () {
            var _this2$props = _this2.props,
                history = _this2$props.history,
                filter = _this2$props.filter;

            var serialize = function serialize(obj, prefix) {
                var str = [],
                    p;
                for (p in obj) {
                    if (obj.hasOwnProperty(p)) {
                        var k = prefix ? prefix + "[" + p + "]" : p,
                            v = obj[p];
                        str.push(v !== null && (typeof v === "undefined" ? "undefined" : _typeof(v)) === "object" ? serialize(v, k) : encodeURIComponent(k) + "=" + encodeURIComponent(v));
                    }
                }
                return str.join("&");
            };
            history.push("/marketplace/filter/multi?" + serialize(_this2.parseFilterForUrl(filter)));
        };

        _this2.state = {
            rightsPackage: JSON.parse(props.rights),
            company: JSON.parse(props.company),
            loadingListing: false,
            loadingListingDetails: false,
            showDetails: false,
            listings: [],
            countries: [],
            territories: [],
            profile: props.user.profile,
            errorMessage: ''
        };
        return _this2;
    }

    _createClass(Marketplace, [{
        key: "componentDidMount",
        value: function componentDidMount() {
            var _props = this.props,
                clearUpdateFilter = _props.clearUpdateFilter,
                match = _props.match,
                location = _props.location;


            if (match && match.params && match.params.customId) {
                this.selectListing(match.params.customId);
                return;
            }

            if (match && match.params && match.params.filterName) {

                switch (match.params.filterName) {
                    case "sport":
                        this.props.selectSport({ value: match.params.filterValue, label: match.params.filterValue });
                        return;
                    case "search":
                        this.props.updateEvent(match.params.filterValue);
                        return;
                    case "territory":
                        this.props.updateFilters({ countries: [match.params.filterValue] });
                        return;
                    case "multi":
                        var customFilter = queryString.parse(location.search, { arrayFormat: 'index' });
                        this.props.updateFilters(customFilter);
                        return;
                }
            }

            this.filter();
            clearUpdateFilter();
            this.props.updateProfile("BUYER");
        }
    }, {
        key: "componentWillReceiveProps",
        value: function componentWillReceiveProps(props) {
            var filter = props.filter,
                clearUpdateFilter = props.clearUpdateFilter;


            this.setState({ sortSalesPackages: false });
            if (filter.forceUpdate) {
                this.getContent(this.parseFilter(filter));
                clearUpdateFilter();
            }
        }
    }, {
        key: "render",
        value: function render() {
            var _this3 = this;

            var _props2 = this.props,
                filter = _props2.filter,
                salesPackage = _props2.salesPackage,
                history = _props2.history,
                location = _props2.location,
                match = _props2.match;
            var _state = this.state,
                listings = _state.listings,
                loadingListing = _state.loadingListing,
                listingDetailsTab = _state.listingDetailsTab,
                loadingListingDetails = _state.loadingListingDetails,
                showDetails = _state.showDetails,
                content = _state.content,
                company = _state.company,
                sortSalesPackages = _state.sortSalesPackages,
                profile = _state.profile,
                errorMessage = _state.errorMessage;


            if (errorMessage) {
                return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                    "h2",
                    { className: "text-center" },
                    errorMessage
                );
            }
            return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                "div",
                { className: "manager-content", style: { flexDirection: 'row' } },
                !showDetails && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                    "div",
                    { className: "buy-container-left" },
                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_3__components_EventFilter__["a" /* default */], {
                        onFilter: this.filter }),
                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_4__components_RightsFilter__["a" /* default */], {
                        onFilter: this.filterByRoute,
                        rightsPackage: this.state.rightsPackage })
                ),
                !showDetails && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                    "div",
                    { className: "buy-container-right" },
                    listings.length > 0 && listings.map(function (listing) {
                        return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_5__main_components_ContentListing__["a" /* default */], _extends({
                            onSelect: function onSelect() {
                                return Object(__WEBPACK_IMPORTED_MODULE_8__main_actions_utils__["f" /* goToListing */])(listing.customId, true);
                            },
                            key: listing.customId,
                            filter: filter,
                            sortSalesPackages: sortSalesPackages
                        }, listing));
                    }),
                    listings.length === 0 && loadingListing && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        "div",
                        { className: "big-spinner" },
                        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement("i", { className: "fa fa-cog fa-spin" })
                    ),
                    listings.length === 0 && !loadingListing && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        "span",
                        { className: "no-results" },
                        this.context.t("Sorry, no results. Try changing the filter settings!")
                    )
                ),
                loadingListingDetails && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                    "div",
                    { className: "big-spinner" },
                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement("i", { className: "fa fa-cog fa-spin" })
                ),
                showDetails && !loadingListingDetails && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_6__ListingDetails__["a" /* default */], {
                    key: location.pathname,
                    tab: match.params.tab,
                    bundle: match.params.bundle,
                    history: history,
                    onBack: function onBack() {
                        _this3.setState({ showDetails: false });
                    },
                    salesPackage: salesPackage,
                    company: company,
                    profile: profile,
                    listing: content })
            );
        }
    }]);

    return Marketplace;
}(__WEBPACK_IMPORTED_MODULE_0_react___default.a.Component);

Marketplace.contextTypes = {
    t: __WEBPACK_IMPORTED_MODULE_10_prop_types__["PropTypes"].func.isRequired
};

var mapStateToProps = function mapStateToProps(state, ownProps) {
    return state;
};

var mapDispatchToProps = function mapDispatchToProps(dispatch) {
    return {
        onClick: function onClick(id) {
            return dispatch(Object(__WEBPACK_IMPORTED_MODULE_2__actions__["a" /* test */])(id));
        },
        selectSport: function selectSport(sport) {
            return dispatch(Object(__WEBPACK_IMPORTED_MODULE_7__actions_filterActions__["i" /* updateSport */])(sport));
        },
        updateEvent: function updateEvent(event) {
            return dispatch(Object(__WEBPACK_IMPORTED_MODULE_7__actions_filterActions__["f" /* updateEvent */])(event));
        },
        clearUpdateFilter: function clearUpdateFilter() {
            return dispatch(Object(__WEBPACK_IMPORTED_MODULE_7__actions_filterActions__["c" /* clearUpdateFilter */])());
        },
        addRight: function addRight(id) {
            return dispatch(Object(__WEBPACK_IMPORTED_MODULE_7__actions_filterActions__["a" /* addRight */])(id));
        },
        removeRight: function removeRight(id) {
            return dispatch(Object(__WEBPACK_IMPORTED_MODULE_7__actions_filterActions__["d" /* removeRight */])(id));
        },
        updateCountries: function updateCountries(countries) {
            return dispatch(Object(__WEBPACK_IMPORTED_MODULE_7__actions_filterActions__["e" /* updateCountries */])(countries));
        },
        updateExclusive: function updateExclusive(exclusive) {
            return dispatch(Object(__WEBPACK_IMPORTED_MODULE_7__actions_filterActions__["g" /* updateExclusive */])(exclusive));
        },
        updateFilters: function updateFilters(filters) {
            return dispatch(Object(__WEBPACK_IMPORTED_MODULE_7__actions_filterActions__["h" /* updateMany */])(filters));
        },
        updateProfile: function updateProfile(profile) {
            return dispatch(Object(__WEBPACK_IMPORTED_MODULE_9__main_actions_userActions__["a" /* updateProfile */])(profile));
        }
    };
};

/* harmony default export */ __webpack_exports__["a"] = (Object(__WEBPACK_IMPORTED_MODULE_1_react_redux__["connect"])(mapStateToProps, mapDispatchToProps)(Marketplace));

/***/ }),

/***/ "./src/AppBundle/Resources/public/javascript/buy/containers/ProgramDetails.js":
/*!************************************************************************************!*\
  !*** ./src/AppBundle/Resources/public/javascript/buy/containers/ProgramDetails.js ***!
  \************************************************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_react__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_react_redux__ = __webpack_require__(/*! react-redux */ "./node_modules/react-redux/es/index.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__actions__ = __webpack_require__(/*! ../actions */ "./src/AppBundle/Resources/public/javascript/buy/actions/index.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__main_components_ProgramTypesDefinitions__ = __webpack_require__(/*! ../../main/components/ProgramTypesDefinitions */ "./src/AppBundle/Resources/public/javascript/main/components/ProgramTypesDefinitions.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_prop_types__ = __webpack_require__(/*! prop-types */ "./node_modules/prop-types/index.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_prop_types___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_4_prop_types__);
var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }







var rowStyle = {
    borderBottom: '1px solid #EEF3F6',
    borderRight: '1px solid #EEF3F6',
    display: 'flex'
};

var titleStyle = {
    backgroundColor: '#F4F6F9',
    color: '#4F4F4F',
    fontSize: 14,
    fontWeight: 600,
    margin: '3px 0',
    padding: 10,
    width: '50%'
};

var valueStyle = {
    color: '#4F4F4F',
    fontSize: 14,
    fontWeight: 600,
    margin: '3px 0',
    padding: 10,
    width: '50%'
};

var ProgramDetails = function (_React$Component) {
    _inherits(ProgramDetails, _React$Component);

    function ProgramDetails(props) {
        _classCallCheck(this, ProgramDetails);

        var _this = _possibleConstructorReturn(this, (ProgramDetails.__proto__ || Object.getPrototypeOf(ProgramDetails)).call(this, props));

        _this.state = {};
        return _this;
    }

    _createClass(ProgramDetails, [{
        key: "render",
        value: function render() {
            var _props = this.props,
                PROGRAM_NAME = _props.PROGRAM_NAME,
                PROGRAM_YEAR = _props.PROGRAM_YEAR,
                PROGRAM_DESCRIPTION = _props.PROGRAM_DESCRIPTION,
                PROGRAM_DURATION = _props.PROGRAM_DURATION,
                PROGRAM_EPISODES = _props.PROGRAM_EPISODES,
                PROGRAM_TYPE = _props.PROGRAM_TYPE;

            return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                "div",
                { style: { padding: '20px 0' } },
                __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                    "div",
                    { className: "full-item-box", style: { width: '50%' } },
                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        "label",
                        null,
                        "PROGRAM ",
                        PROGRAM_NAME
                    ),
                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        "div",
                        null,
                        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                            "div",
                            { style: rowStyle },
                            __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                "div",
                                { style: titleStyle },
                                this.context.t("Program type")
                            ),
                            __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                "div",
                                { style: valueStyle },
                                __WEBPACK_IMPORTED_MODULE_3__main_components_ProgramTypesDefinitions__["a" /* ProgramTypesDefinitions */][PROGRAM_TYPE]
                            )
                        ),
                        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                            "div",
                            { style: rowStyle },
                            __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                "div",
                                { style: titleStyle },
                                this.context.t("Number of episodes")
                            ),
                            __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                "div",
                                { style: valueStyle },
                                PROGRAM_EPISODES
                            )
                        ),
                        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                            "div",
                            { style: rowStyle },
                            __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                "div",
                                { style: titleStyle },
                                this.context.t("Average episode duration (min)")
                            ),
                            __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                "div",
                                { style: valueStyle },
                                PROGRAM_DURATION
                            )
                        ),
                        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                            "div",
                            { style: rowStyle },
                            __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                "div",
                                { style: titleStyle },
                                this.context.t("Year of program release")
                            ),
                            __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                "div",
                                { style: valueStyle },
                                PROGRAM_YEAR
                            )
                        ),
                        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                            "div",
                            { style: rowStyle },
                            __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                "div",
                                { style: titleStyle },
                                this.context.t("Description")
                            ),
                            __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                "div",
                                { style: valueStyle },
                                PROGRAM_DESCRIPTION && PROGRAM_DESCRIPTION,
                                !PROGRAM_DESCRIPTION && this.context.t("Information not available")
                            )
                        )
                    )
                )
            );
        }
    }]);

    return ProgramDetails;
}(__WEBPACK_IMPORTED_MODULE_0_react___default.a.Component);

ProgramDetails.contextTypes = {
    t: __WEBPACK_IMPORTED_MODULE_4_prop_types__["PropTypes"].func.isRequired
};

/* harmony default export */ __webpack_exports__["a"] = (ProgramDetails);

/***/ }),

/***/ "./src/AppBundle/Resources/public/javascript/buy/containers/SalesPackages.js":
/*!***********************************************************************************!*\
  !*** ./src/AppBundle/Resources/public/javascript/buy/containers/SalesPackages.js ***!
  \***********************************************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_react__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_react_redux__ = __webpack_require__(/*! react-redux */ "./node_modules/react-redux/es/index.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__actions__ = __webpack_require__(/*! ../actions */ "./src/AppBundle/Resources/public/javascript/buy/actions/index.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__main_styles_custom__ = __webpack_require__(/*! ../../main/styles/custom */ "./src/AppBundle/Resources/public/javascript/main/styles/custom.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_react_modal__ = __webpack_require__(/*! react-modal */ "./node_modules/react-modal/lib/index.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_react_modal___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_4_react_modal__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5_moment_moment__ = __webpack_require__(/*! moment/moment */ "./node_modules/moment/moment.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5_moment_moment___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_5_moment_moment__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__main_components_LicenseDownloader__ = __webpack_require__(/*! ../../main/components/LicenseDownloader */ "./src/AppBundle/Resources/public/javascript/main/components/LicenseDownloader.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7_prop_types__ = __webpack_require__(/*! prop-types */ "./node_modules/prop-types/index.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7_prop_types___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_7_prop_types__);
var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }










var SalesPackages = function (_React$Component) {
    _inherits(SalesPackages, _React$Component);

    function SalesPackages(props) {
        _classCallCheck(this, SalesPackages);

        var _this = _possibleConstructorReturn(this, (SalesPackages.__proto__ || Object.getPrototypeOf(SalesPackages)).call(this, props));

        _this.showAllTerritories = function (extraTerritories) {
            _this.setState({
                showAllTerritories: true,
                territoriesList: extraTerritories
            });
        };

        _this.showInstallments = function (installments) {
            _this.setState({
                showInstallments: true,
                installments: installments
            });
        };

        _this.closeTerritoiesModal = function () {
            _this.setState({ showAllTerritories: false });
        };

        _this.closeInstallmentsModal = function () {
            _this.setState({ showInstallments: false });
        };

        _this.ordinal_suffix_of = function (i) {
            var j = i % 10,
                k = i % 100;
            if (j === 1 && k !== 11) {
                return i + "st";
            }
            if (j === 2 && k !== 12) {
                return i + "nd";
            }
            if (j === 3 && k !== 13) {
                return i + "rd";
            }
            return i + "th";
        };

        _this.installmentsModal = function () {
            var installments = _this.state.installments;

            return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                __WEBPACK_IMPORTED_MODULE_4_react_modal___default.a,
                {
                    isOpen: _this.state.showInstallments,
                    onRequestClose: _this.closeInstallmentsModal,
                    bodyOpenClassName: "selector",
                    style: __WEBPACK_IMPORTED_MODULE_3__main_styles_custom__["c" /* customStyles */]
                },
                __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                    "div",
                    { style: {
                            display: 'flex',
                            flexDirection: 'column'
                        } },
                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        "div",
                        { style: {
                                padding: '12px 20px',
                                backgroundColor: '#32A9E7',
                                color: 'white',
                                fontWeight: 600
                            } },
                        "Payment Details"
                    ),
                    installments && installments.map(function (installment, index) {
                        return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                            "div",
                            { style: {
                                    padding: 12,
                                    border: '1px solid #DDE1E7',
                                    backgroundColor: '#FAFBFC',
                                    margin: 5,
                                    boxSizing: 'border-box',
                                    display: 'flex',
                                    flexDirection: 'row',
                                    color: 'grey'
                                } },
                            __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                "div",
                                { style: { margin: '0 10px', fontWeight: 600 } },
                                _this.ordinal_suffix_of(index + 1),
                                " installment"
                            ),
                            __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                "div",
                                { style: { margin: '0 30px' } },
                                installment.value,
                                "%"
                            ),
                            __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                "div",
                                { style: { margin: '0 10px' } },
                                installment.type === "DAY" && installment.days + " days after contract closure",
                                installment.type === "DATE" && " " + __WEBPACK_IMPORTED_MODULE_5_moment_moment___default()(installment.date).format('DD/MM/YYYY')
                            )
                        );
                    })
                )
            );
        };

        _this.allTerritories = function () {

            return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                __WEBPACK_IMPORTED_MODULE_4_react_modal___default.a,
                {
                    isOpen: _this.state.showAllTerritories,
                    onRequestClose: _this.closeTerritoiesModal,
                    bodyOpenClassName: "selector",
                    style: __WEBPACK_IMPORTED_MODULE_3__main_styles_custom__["c" /* customStyles */]
                },
                __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                    "div",
                    { style: {
                            color: 'grey',
                            padding: 20,
                            display: 'flex',
                            flexWrap: 'wrap'
                        } },
                    _this.state.territoriesList.map(function (territory) {
                        return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                            "div",
                            { className: "country-modal" },
                            territory.label
                        );
                    })
                )
            );
        };

        _this.getFee = function (salesPackage) {
            var currencySymbol = salesPackage.currency.code === "EUR" ? "€" : "$";

            if (salesPackage.fee == 0) return "";

            return salesPackage.fee + " " + currencySymbol;
        };

        _this.state = {
            territoriesList: [],
            installments: []
        };
        _this.bidIcon = assetsBaseDir + "app/images/hammer.png";
        _this.packageIcon = assetsBaseDir + "app/images/bid.png";
        _this.infoIcon = assetsBaseDir + "app/images/info.png";
        return _this;
    }

    _createClass(SalesPackages, [{
        key: "render",
        value: function render() {
            var _this2 = this;

            var _props = this.props,
                salesPackages = _props.salesPackages,
                onSelectPackage = _props.onSelectPackage,
                user = _props.user,
                listingId = _props.listingId;


            return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                "div",
                { className: "sales-packages" },
                this.allTerritories(),
                this.installmentsModal(),
                salesPackages.map(function (salesPackage, i) {

                    if (salesPackage.sold) return;

                    var extraTerritories = salesPackage.territoriesMethod === "WORLDWIDE_EXCLUDING" ? salesPackage.excludedTerritories : salesPackage.territories;
                    return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        "div",
                        { className: "sales-package-container", key: "sales-package-" + i },
                        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                            "div",
                            { style: { flex: 10, display: 'flex' } },
                            salesPackage.bundleMethod === "SELL_AS_BUNDLE" && salesPackage.territories.length > 1 && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                "div",
                                { style: {} },
                                __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement("img", { style: { width: 26, height: 23 }, src: _this2.packageIcon })
                            ),
                            salesPackage.territories.length > 1 && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                "div",
                                { style: { margin: '0 15px', fontWeight: 600 } },
                                salesPackage.territories.length
                            ),
                            __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                "div",
                                null,
                                salesPackage.name,
                                extraTerritories && extraTerritories.length > 3 && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                    "span",
                                    {
                                        style: {
                                            color: '#2DA7E6',
                                            textDecoration: 'underline',
                                            marginLeft: 5,
                                            cursor: 'pointer'
                                        },
                                        onClick: function onClick() {
                                            _this2.showAllTerritories(extraTerritories);
                                        } },
                                    "+" + (extraTerritories.length - 3)
                                )
                            )
                        ),
                        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_6__main_components_LicenseDownloader__["a" /* default */], {
                            type: "BUNDLE",
                            id: salesPackage.id,
                            listingId: listingId,
                            style: { flex: 1, display: 'flex', justifyContent: 'center' } }),
                        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                            "div",
                            { style: { flex: 1, display: 'flex', justifyContent: 'center', cursor: 'pointer' },
                                onClick: function onClick() {
                                    _this2.showInstallments(salesPackage.installments);
                                } },
                            __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement("img", { style: { width: 23, height: 23 }, src: _this2.infoIcon })
                        ),
                        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                            "div",
                            { style: { flex: 1.5, justifyContent: "center", display: "flex" } },
                            _this2.getFee(salesPackage)
                        ),
                        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                            "div",
                            { style: { flex: 1, justifyContent: "center", display: "flex" } },
                            salesPackage.salesMethod === "BIDDING" && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement("img", { style: { width: 23, height: 23 }, src: _this2.bidIcon })
                        ),
                        salesPackage.salesMethod === "FIXED" && user.profile === "BUYER" && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                            "button",
                            { className: "standard-button",
                                style: { width: 130 },
                                onClick: function onClick() {
                                    onSelectPackage(salesPackage, listingId);
                                } },
                            _this2.context.t("Buy now")
                        ),
                        salesPackage.salesMethod === "BIDDING" && user.profile === "BUYER" && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                            "button",
                            { className: "standard-button",
                                style: { width: 130 },
                                onClick: function onClick() {
                                    onSelectPackage(salesPackage, listingId);
                                } },
                            _this2.context.t("Place bid")
                        )
                    );
                })
            );
        }
    }]);

    return SalesPackages;
}(__WEBPACK_IMPORTED_MODULE_0_react___default.a.Component);

SalesPackages.contextTypes = {
    t: __WEBPACK_IMPORTED_MODULE_7_prop_types__["PropTypes"].func.isRequired
};

var mapStateToProps = function mapStateToProps(state) {
    return state;
};

var mapDispatchToProps = function mapDispatchToProps(dispatch) {
    return {
        onClick: function onClick(id) {
            return dispatch(Object(__WEBPACK_IMPORTED_MODULE_2__actions__["a" /* test */])(id));
        }
    };
};

/* harmony default export */ __webpack_exports__["a"] = (Object(__WEBPACK_IMPORTED_MODULE_1_react_redux__["connect"])(mapStateToProps, mapDispatchToProps)(SalesPackages));

/***/ }),

/***/ "./src/AppBundle/Resources/public/javascript/buy/containers/Seller.js":
/*!****************************************************************************!*\
  !*** ./src/AppBundle/Resources/public/javascript/buy/containers/Seller.js ***!
  \****************************************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_react__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_react_redux__ = __webpack_require__(/*! react-redux */ "./node_modules/react-redux/es/index.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__actions__ = __webpack_require__(/*! ../actions */ "./src/AppBundle/Resources/public/javascript/buy/actions/index.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_prop_types__ = __webpack_require__(/*! prop-types */ "./node_modules/prop-types/index.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_prop_types___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_3_prop_types__);
var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }






var rowStyle = {
    borderBottom: '1px solid #EEF3F6',
    borderRight: '1px solid #EEF3F6',
    display: 'flex'
};

var titleStyle = {
    backgroundColor: '#F4F6F9',
    color: '#4F4F4F',
    fontSize: 14,
    fontWeight: 600,
    margin: '3px 0',
    padding: 10,
    width: '50%'
};

var valueStyle = {
    color: '#4F4F4F',
    fontSize: 14,
    fontWeight: 600,
    margin: '3px 0',
    padding: 10,
    width: '50%'
};

var Seller = function (_React$Component) {
    _inherits(Seller, _React$Component);

    function Seller(props) {
        _classCallCheck(this, Seller);

        var _this = _possibleConstructorReturn(this, (Seller.__proto__ || Object.getPrototypeOf(Seller)).call(this, props));

        _this.state = {};
        return _this;
    }

    _createClass(Seller, [{
        key: "render",
        value: function render() {
            var company = this.props.company;

            return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                "div",
                { style: { padding: '20px 0' } },
                __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                    "div",
                    { style: { marginBottom: 20 } },
                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        "div",
                        { style: {
                                color: '#1A4B63',
                                fontSize: 20,
                                fontWeight: 600
                            } },
                        company.displayName
                    ),
                    company.website && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        "div",
                        { style: {
                                color: '#4F4F4F',
                                fontSize: 14
                            } },
                        company.website
                    )
                ),
                __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                    "div",
                    { className: "full-item-box", style: { width: '75%' } },
                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        "label",
                        null,
                        company.displayName,
                        this.context.t("DETAILS")
                    ),
                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        "div",
                        null,
                        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                            "div",
                            { style: rowStyle },
                            __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                "div",
                                { style: titleStyle },
                                this.context.t("Legal name")
                            ),
                            __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                "div",
                                { style: valueStyle },
                                company.legalName
                            )
                        ),
                        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                            "div",
                            { style: rowStyle },
                            __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                "div",
                                { style: titleStyle },
                                this.context.t("Street Name / Number")
                            ),
                            __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                "div",
                                { style: valueStyle },
                                company.address
                            )
                        ),
                        company.city && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                            "div",
                            { style: rowStyle },
                            __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                "div",
                                { style: titleStyle },
                                this.context.t("City")
                            ),
                            __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                "div",
                                { style: valueStyle },
                                company.city
                            )
                        ),
                        company.country.name && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                            "div",
                            { style: rowStyle },
                            __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                "div",
                                { style: titleStyle },
                                this.context.t("Country")
                            ),
                            __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                "div",
                                { style: valueStyle },
                                company.country.name
                            )
                        ),
                        company.zip && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                            "div",
                            { style: rowStyle },
                            __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                "div",
                                { style: titleStyle },
                                this.context.t("ZIP")
                            ),
                            __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                "div",
                                { style: valueStyle },
                                company.zip
                            )
                        ),
                        company.registrationNumber && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                            "div",
                            { style: rowStyle },
                            __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                "div",
                                { style: titleStyle },
                                this.context.t("Company registration number")
                            ),
                            __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                "div",
                                { style: valueStyle },
                                company.registrationNumber
                            )
                        ),
                        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                            "div",
                            { style: rowStyle },
                            __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                "div",
                                { style: titleStyle },
                                this.context.t("VAT ID number")
                            ),
                            __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                "div",
                                { style: valueStyle },
                                company.vat
                            )
                        )
                    )
                ),
                company.description && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                    "div",
                    { className: "full-item-box" },
                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        "label",
                        null,
                        this.context.t("DESCRIPTION")
                    ),
                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        "div",
                        { className: "full-item-content" },
                        company.description
                    )
                )
            );
        }
    }]);

    return Seller;
}(__WEBPACK_IMPORTED_MODULE_0_react___default.a.Component);

Seller.contextTypes = {
    t: __WEBPACK_IMPORTED_MODULE_3_prop_types__["PropTypes"].func.isRequired
};

var mapStateToProps = function mapStateToProps(state) {
    return state;
};

var mapDispatchToProps = function mapDispatchToProps(dispatch) {
    return {
        onClick: function onClick(id) {
            return dispatch(Object(__WEBPACK_IMPORTED_MODULE_2__actions__["a" /* test */])(id));
        }
    };
};

/* harmony default export */ __webpack_exports__["a"] = (Object(__WEBPACK_IMPORTED_MODULE_1_react_redux__["connect"])(mapStateToProps, mapDispatchToProps)(Seller));

/***/ }),

/***/ "./src/AppBundle/Resources/public/javascript/buy/containers/TermSheet.js":
/*!*******************************************************************************!*\
  !*** ./src/AppBundle/Resources/public/javascript/buy/containers/TermSheet.js ***!
  \*******************************************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_react__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_react_redux__ = __webpack_require__(/*! react-redux */ "./node_modules/react-redux/es/index.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__actions__ = __webpack_require__(/*! ../actions */ "./src/AppBundle/Resources/public/javascript/buy/actions/index.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__sell_components_RightDefinitions__ = __webpack_require__(/*! ../../sell/components/RightDefinitions */ "./src/AppBundle/Resources/public/javascript/sell/components/RightDefinitions.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__sell_components_ProductionStandardsDefinitions__ = __webpack_require__(/*! ../../sell/components/ProductionStandardsDefinitions */ "./src/AppBundle/Resources/public/javascript/sell/components/ProductionStandardsDefinitions.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__sell_components_RightItemsDefinitions__ = __webpack_require__(/*! ../../sell/components/RightItemsDefinitions */ "./src/AppBundle/Resources/public/javascript/sell/components/RightItemsDefinitions.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__sell_components_SuperRightDefinitions__ = __webpack_require__(/*! ../../sell/components/SuperRightDefinitions */ "./src/AppBundle/Resources/public/javascript/sell/components/SuperRightDefinitions.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7_prop_types__ = __webpack_require__(/*! prop-types */ "./node_modules/prop-types/index.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7_prop_types___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_7_prop_types__);
var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }










var TermSheet = function (_React$Component) {
    _inherits(TermSheet, _React$Component);

    function TermSheet(props) {
        _classCallCheck(this, TermSheet);

        var _this = _possibleConstructorReturn(this, (TermSheet.__proto__ || Object.getPrototypeOf(TermSheet)).call(this, props));

        _this.renderProgramInfo = function (values, name, i) {
            var rightsPackage = _this.props.rightsPackage;

            return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                "div",
                { className: 'row ' + (i % 2 ? 'odd-row' : ''), key: 'program' + i },
                __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                    "div",
                    { className: "right-name right-definition" },
                    name
                ),
                rightsPackage.map(function (rp, k) {
                    if (rp.selectedRights['CONTENT_DELIVERY'] === "CONTENT_DELIVERY_NON_DEDICATED") return;
                    if (rp.shortLabel !== 'PR') return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement("div", { className: "right-definition" });

                    return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        "div",
                        { className: "right-definition", key: "program_child" + k },
                        values && values.length === 0 && "No",
                        values && values.length > 0 && values.map(function (l) {
                            return l.label;
                        }).join(", ")
                    );
                })
            );
        };

        _this.renderList = function (definitions, checkContentDelivery) {
            var _this$props = _this.props,
                selectedRightsBySuperRight = _this$props.selectedRightsBySuperRight,
                rightsPackage = _this$props.rightsPackage,
                LICENSED_LANGUAGES = _this$props.LICENSED_LANGUAGES;

            return definitions.map(function (right, i) {

                if (right.key === 'CONTENT_DELIVERY') return;
                if (right.key === 'PROGRAM') return;

                if (right.key === "LICENSED_LANGUAGES") {
                    if (!LICENSED_LANGUAGES || LICENSED_LANGUAGES.length === 0) return false;
                }

                return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                    "div",
                    { className: 'row ' + (i % 2 ? 'odd-row' : ''), key: 'list' + i },
                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        "div",
                        { className: "right-name right-definition" },
                        right.name
                    ),
                    rightsPackage.map(function (rp, k) {
                        if (checkContentDelivery && rp.selectedRights['CONTENT_DELIVERY'] === "CONTENT_DELIVERY_NON_DEDICATED") return;

                        if (checkContentDelivery && rp.shortLabel === "PR" && right.key !== 'TECHNICAL_DELIVERY') return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement("div", { className: "right-definition" });

                        if (right.key === 'LICENSED_LANGUAGES') return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                            "div",
                            { className: "right-definition" },
                            LICENSED_LANGUAGES.map(function (l) {
                                return l.label;
                            }).join(", ")
                        );

                        var defItems = selectedRightsBySuperRight[rp.id].items;
                        var definition = defItems[right.key];
                        var label = '';

                        if (right.multiple) {
                            if (Array.isArray(defItems[right.key])) {
                                label = defItems[right.key].map(function (item) {
                                    return __WEBPACK_IMPORTED_MODULE_5__sell_components_RightItemsDefinitions__["a" /* RightItemsDefinitions */][item].label;
                                }).join(", ");
                            } else {
                                label = defItems[right.key];
                            }
                        } else {
                            var dynKey = right.key + "_TEXT";
                            if (defItems[dynKey]) {
                                label = defItems[dynKey];
                            } else {
                                label = definition && __WEBPACK_IMPORTED_MODULE_5__sell_components_RightItemsDefinitions__["a" /* RightItemsDefinitions */][definition].label;
                            }
                        }

                        if (right.key === 'RUNS' && defItems["RUNS_NUMBER"]) {
                            label = defItems["RUNS_NUMBER"];
                        }

                        if (right.key === 'GRAPHICS' && defItems["GRAPHICS_LANGUAGES"]) {
                            label = defItems["GRAPHICS_LANGUAGES"].map(function (l) {
                                return l.label;
                            }).join(", ");
                        }

                        if (right.key === 'COMMENTARY' && defItems["COMMENTARY_LANGUAGES"]) {
                            label = defItems["COMMENTARY_LANGUAGES"].map(function (l) {
                                return l.label;
                            }).join(", ");
                        }

                        return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                            "div",
                            { className: "right-definition", key: 'list_child' + k },
                            label,
                            right.key === 'CAMERA' && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                "span",
                                { style: { marginLeft: 5 } },
                                defItems["CAMERAS"]
                            )
                        );
                    })
                );
            });
        };

        _this.renderTextarea = function (definitions) {
            var _this$props2 = _this.props,
                selectedRightsBySuperRight = _this$props2.selectedRightsBySuperRight,
                rightsPackage = _this$props2.rightsPackage;

            return definitions.map(function (right, i) {
                if (right.key === 'PROGRAM' || !selectedRightsBySuperRight[rightsPackage[0].id].items[right.key + "_TEXTAREA"]) return;
                return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                    "div",
                    { className: "term-sheet-full-item-box", key: 'textarea_' + i },
                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        "label",
                        null,
                        right.name
                    ),
                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        "div",
                        { className: "full-item-content" },
                        selectedRightsBySuperRight[rightsPackage[0].id].items[right.key + "_TEXTAREA"]
                    )
                );
            });
        };

        _this.renderDetails = function (definitions) {
            var _this$props3 = _this.props,
                selectedRightsBySuperRight = _this$props3.selectedRightsBySuperRight,
                rightsPackage = _this$props3.rightsPackage;

            return definitions.map(function (right) {
                if (right.key === 'PROGRAM' || !selectedRightsBySuperRight[rightsPackage[0].id].items[right.key + "_DETAILS"]) return;
                return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                    "div",
                    { className: "full-item-box" },
                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        "label",
                        null,
                        right.name
                    ),
                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        "div",
                        { className: "full-item-content" },
                        selectedRightsBySuperRight[rightsPackage[0].id].items[right.key + "_DETAILS"]
                    )
                );
            });
        };

        _this.state = {};
        return _this;
    }

    _createClass(TermSheet, [{
        key: "render",
        value: function render() {
            var _props = this.props,
                selectedRightsBySuperRight = _props.selectedRightsBySuperRight,
                rightsPackage = _props.rightsPackage,
                PROGRAM_SCRIPT = _props.PROGRAM_SCRIPT,
                PROGRAM_SUBTITLES = _props.PROGRAM_SUBTITLES,
                PROGRAM_LANGUAGE = _props.PROGRAM_LANGUAGE,
                COMMENTS_RIGHTS = _props.COMMENTS_RIGHTS,
                COMMENTS_PRODUCTION = _props.COMMENTS_PRODUCTION;

            var packagesAvailable = rightsPackage.map(function (rp) {
                return rp.shortLabel;
            });

            return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                "div",
                { className: "term-sheet" },
                __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                    "div",
                    { className: "term-sheet-items" },
                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        "div",
                        { className: "row", style: {
                                border: 'none'
                            } },
                        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                            "div",
                            { className: "right-definition right-definition-title" },
                            this.context.t("Grant of Rights")
                        ),
                        rightsPackage.map(function (rp, i) {
                            return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                "div",
                                { key: "rp-grant" + i, className: "right-definition right-definition-title" },
                                rp.name
                            );
                        })
                    ),
                    this.renderList(__WEBPACK_IMPORTED_MODULE_3__sell_components_RightDefinitions__["a" /* RightDefinitions */], false)
                ),
                __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                    "div",
                    null,
                    this.renderTextarea(__WEBPACK_IMPORTED_MODULE_3__sell_components_RightDefinitions__["a" /* RightDefinitions */]),
                    this.renderTextarea(__WEBPACK_IMPORTED_MODULE_4__sell_components_ProductionStandardsDefinitions__["a" /* ProductionStandardsDefinitions */])
                ),
                COMMENTS_RIGHTS && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                    "div",
                    { className: "term-sheet-full-item-box" },
                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        "label",
                        null,
                        this.context.t("Amendment(s) to the Grant of Rights / Special Conditions")
                    ),
                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        "div",
                        { className: "full-item-content" },
                        COMMENTS_RIGHTS
                    )
                ),
                __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                    "div",
                    { className: "term-sheet-items" },
                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        "div",
                        { className: "row", style: { border: 'none' } },
                        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                            "div",
                            { className: "right-definition right-definition-title" },
                            this.context.t("Production details")
                        ),
                        rightsPackage.map(function (rp, i) {
                            if (rp.selectedRights['CONTENT_DELIVERY'] === "CONTENT_DELIVERY_NON_DEDICATED") return;
                            var viaLiveFeed = rp.selectedRights['CONTENT_DELIVERY'] === "CONTENT_DELIVERY_LIVE";

                            return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                "div",
                                { key: "rp-prod" + i, className: "right-definition right-definition-title" },
                                __WEBPACK_IMPORTED_MODULE_6__sell_components_SuperRightDefinitions__["c" /* SuperRightProductionDetailsLabels */][rp.shortLabel],
                                viaLiveFeed && " (via live feed)"
                            );
                        })
                    ),
                    this.renderList(__WEBPACK_IMPORTED_MODULE_4__sell_components_ProductionStandardsDefinitions__["a" /* ProductionStandardsDefinitions */], true),
                    packagesAvailable.indexOf("PR") !== -1 && PROGRAM_LANGUAGE && this.renderProgramInfo(PROGRAM_LANGUAGE, "Languages"),
                    packagesAvailable.indexOf("PR") !== -1 && PROGRAM_SUBTITLES && this.renderProgramInfo(PROGRAM_SUBTITLES, "Subtitles"),
                    packagesAvailable.indexOf("PR") !== -1 && PROGRAM_SCRIPT && this.renderProgramInfo(PROGRAM_SCRIPT, "Script")
                ),
                selectedRightsBySuperRight[rightsPackage[0].id].items["TECHNICAL_FEE_DETAILS"] && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                    "div",
                    { className: "term-sheet-full-item-box" },
                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        "label",
                        null,
                        this.context.t("Technical Fee Details")
                    ),
                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        "div",
                        { className: "full-item-content" },
                        selectedRightsBySuperRight[rightsPackage[0].id].items["TECHNICAL_FEE_DETAILS"]
                    )
                ),
                COMMENTS_PRODUCTION && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                    "div",
                    { className: "term-sheet-full-item-box" },
                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        "label",
                        null,
                        this.context.t("Amendment(s) to the Content Delivery / Special Conditions")
                    ),
                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        "div",
                        { className: "full-item-content" },
                        COMMENTS_PRODUCTION
                    )
                )
            );
        }
    }]);

    return TermSheet;
}(__WEBPACK_IMPORTED_MODULE_0_react___default.a.Component);

TermSheet.contextTypes = {
    t: __WEBPACK_IMPORTED_MODULE_7_prop_types__["PropTypes"].func.isRequired
};

var mapStateToProps = function mapStateToProps(state) {
    return state;
};

var mapDispatchToProps = function mapDispatchToProps(dispatch) {
    return {
        onClick: function onClick(id) {
            return dispatch(Object(__WEBPACK_IMPORTED_MODULE_2__actions__["a" /* test */])(id));
        }
    };
};

/* harmony default export */ __webpack_exports__["a"] = (Object(__WEBPACK_IMPORTED_MODULE_1_react_redux__["connect"])(mapStateToProps, mapDispatchToProps)(TermSheet));

/***/ }),

/***/ "./src/AppBundle/Resources/public/javascript/buy/reducers/filter.js":
/*!**************************************************************************!*\
  !*** ./src/AppBundle/Resources/public/javascript/buy/reducers/filter.js ***!
  \**************************************************************************/
/*! exports provided: filterTypes, filter */
/*! exports used: filter, filterTypes */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "b", function() { return filterTypes; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return filter; });
function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }

var filterTypes = {
    ADD_RIGHT: 'ADD_RIGHT',
    REMOVE_RIGHT: 'REMOVE_RIGHT',
    UPDATE_COUNTRIES: 'UPDATE_COUNTRIES',
    UPDATE_EXCLUSIVE: 'UPDATE_EXCLUSIVE',
    UPDATE_SPORT: 'UPDATE_SPORT',
    UPDATE_EVENT: 'UPDATE_EVENT',
    CLEAR: 'CLEAR',
    CLEAR_UPDATE: 'CLEAR_UPDATE',
    UPDATE_MANY: 'UPDATE_MANY'
};

var defaultFilter = {
    rights: [],
    countries: [],
    exclusive: false,
    sport: {
        value: null,
        label: "All sports"
    },
    event: "",
    forceUpdate: true

};

var filter = function filter() {
    var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : defaultFilter;
    var action = arguments[1];


    switch (action.type) {
        case filterTypes.CLEAR:
            return Object.assign({}, state, defaultFilter);
        case filterTypes.CLEAR_UPDATE:
            return Object.assign({}, state, {
                forceUpdate: false
            });
        case filterTypes.ADD_RIGHT:
            return Object.assign({}, state, {
                rights: [].concat(_toConsumableArray(state.rights), [action.id])
            });
        case filterTypes.REMOVE_RIGHT:

            var index = state.rights.indexOf(action.id);
            state.rights.splice(index, 1);
            return Object.assign({}, state, {
                rights: [].concat(_toConsumableArray(state.rights))
            });
        case filterTypes.UPDATE_COUNTRIES:
            return Object.assign({}, state, {
                countries: action.countries.map(function (c) {
                    return c.value;
                })
            });
        case filterTypes.UPDATE_EXCLUSIVE:
            return Object.assign({}, state, {
                exclusive: action.exclusive
            });
        case filterTypes.UPDATE_SPORT:
            return Object.assign({}, state, {
                sport: action.sport
            });
        case filterTypes.UPDATE_EVENT:
            return Object.assign({}, state, {
                event: action.event
            });
        case filterTypes.UPDATE_MANY:
            action.filters.forceUpdate = true;
            if (action.filters.rights) action.filters.rights = action.filters.rights.map(function (r) {
                return Number(r);
            });
            return Object.assign({}, defaultFilter, action.filters);
        default:
            return state;
    }
};

/***/ }),

/***/ "./src/AppBundle/Resources/public/javascript/buy/reducers/marketplace.js":
/*!*******************************************************************************!*\
  !*** ./src/AppBundle/Resources/public/javascript/buy/reducers/marketplace.js ***!
  \*******************************************************************************/
/*! exports provided: marketplaceTypes, marketplace */
/*! exports used: marketplace, marketplaceTypes */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "b", function() { return marketplaceTypes; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return marketplace; });

var marketplaceTypes = {
    TEST: 'TEST'
};

var marketplace = function marketplace() {
    var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {
        testItem: "marketplaceReducer"

    };
    var action = arguments[1];


    switch (action.type) {
        case marketplaceTypes.TEST:
            return Object.assign({}, state, {
                test: action.text,
                id: action.id
            });
        default:
            return state;
    }
};

/***/ }),

/***/ "./src/AppBundle/Resources/public/javascript/ca/ca.api.content.js":
/*!************************************************************************!*\
  !*** ./src/AppBundle/Resources/public/javascript/ca/ca.api.content.js ***!
  \************************************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(jQuery, $) {/**
* Created by JuanCruz on 4/1/2018.
*/

var __apiStore = {
    tournaments: {}
};

window.ContentArena = window.ContentArena || {};
ContentArena.ContentApi = ContentArena.ContentApi || {};

ContentArena.ContentApi = {
    saveContentAsDraft: function saveContentAsDraft(content) {
        var deferred = jQuery.Deferred(),
            _this = this;

        $.ajax({
            url: envhosturl + "content/draft/save",
            type: "POST",
            data: JSON.stringify(content),
            contentType: "application/json",
            success: function success(response) {
                deferred.resolve(response);
            },
            error: function error(data, status) {
                deferred.reject({
                    data: data,
                    status: status
                });
            }
        });

        return deferred.promise();
    },
    saveContentAsInactive: function saveContentAsInactive(content) {
        var deferred = jQuery.Deferred(),
            _this = this;

        $.ajax({
            url: envhosturl + "api/listing/save",
            type: "POST",
            data: JSON.stringify(content),
            contentType: "application/json",
            success: function success(response) {
                deferred.resolve(response);
            },
            error: function error(data, status) {
                deferred.reject({
                    data: data,
                    status: status
                });
            }
        });

        return deferred.promise();
    },
    saveContentAsActive: function saveContentAsActive(content) {
        var deferred = jQuery.Deferred(),
            _this = this;

        $.ajax({
            url: envhosturl + "api/listing/publish",
            type: "POST",
            data: JSON.stringify(content),
            contentType: "application/json",
            success: function success(response) {
                deferred.resolve(response);
            },
            error: function error(data, status) {
                deferred.reject({
                    data: data,
                    status: status
                });
            }
        });

        return deferred.promise();
    },
    sendMessage: function sendMessage(message) {
        var deferred = jQuery.Deferred(),
            _this = this;

        $.ajax({
            url: envhosturl + "api/messages/send",
            type: "POST",
            data: JSON.stringify(message),
            contentType: "application/json",
            success: function success(response) {
                deferred.resolve(response);
            },
            error: function error(data, status) {
                deferred.reject({
                    data: data,
                    status: status
                });
            }
        });

        return deferred.promise();
    },
    getUserInfo: function getUserInfo() {
        var deferred = jQuery.Deferred(),
            _this = this;

        $.ajax({
            url: envhosturl + "api/user/info",
            type: "POST",
            contentType: "application/json",
            success: function success(response) {
                deferred.resolve(response);
            },
            error: function error(data, status) {
                deferred.reject({
                    data: data,
                    status: status
                });
            }
        });

        return deferred.promise();
    },
    getCompanyUsers: function getCompanyUsers() {
        var deferred = jQuery.Deferred(),
            _this = this;

        $.ajax({
            url: envhosturl + "api/company/users",
            type: "POST",
            contentType: "application/json",
            success: function success(response) {
                deferred.resolve(response);
            },
            error: function error(data, status) {
                deferred.reject({
                    data: data,
                    status: status
                });
            }
        });

        return deferred.promise();
    },
    updateCompany: function updateCompany(company) {
        var deferred = jQuery.Deferred(),
            _this = this;

        $.ajax({
            url: envhosturl + "api/company/update",
            type: "POST",
            data: JSON.stringify({ company: company }),
            contentType: "application/json",
            success: function success(response) {
                deferred.resolve(response);
            },
            error: function error(data, status) {
                deferred.reject({
                    data: data,
                    status: status
                });
            }
        });

        return deferred.promise();
    },
    updatePassword: function updatePassword(data) {
        var deferred = jQuery.Deferred(),
            _this = this;

        $.ajax({
            url: envhosturl + "api/user/password",
            type: "POST",
            data: JSON.stringify(data),
            contentType: "application/json",
            success: function success(response) {
                deferred.resolve(response);
            },
            error: function error(data, status) {
                deferred.reject({
                    data: data,
                    status: status
                });
            }
        });

        return deferred.promise();
    },
    updateUser: function updateUser(user) {
        var deferred = jQuery.Deferred(),
            _this = this;

        $.ajax({
            url: envhosturl + "api/user/update",
            type: "POST",
            data: JSON.stringify({ user: user }),
            contentType: "application/json",
            success: function success(response) {
                deferred.resolve(response);
            },
            error: function error(data, status) {
                deferred.reject({
                    data: data,
                    status: status
                });
            }
        });

        return deferred.promise();
    },
    getThread: function getThread(customId) {
        var deferred = jQuery.Deferred(),
            _this = this;

        $.ajax({
            url: envhosturl + "api/messages/thread",
            type: "POST",
            data: JSON.stringify({ customId: customId }),
            contentType: "application/json",
            success: function success(response) {
                deferred.resolve(response);
            },
            error: function error(data, status) {
                deferred.reject({
                    data: data,
                    status: status
                });
            }
        });

        return deferred.promise();
    },
    getThreads: function getThreads() {
        var deferred = jQuery.Deferred(),
            _this = this;

        $.ajax({
            url: envhosturl + "api/messages/threads",
            type: "POST",
            contentType: "application/json",
            success: function success(response) {
                deferred.resolve(response);
            },
            error: function error(data, status) {
                deferred.reject({
                    data: data,
                    status: status
                });
            }
        });

        return deferred.promise();
    },
    placeBid: function placeBid(bid) {
        var deferred = jQuery.Deferred(),
            _this = this;

        $.ajax({
            url: envhosturl + "api/bid/place",
            type: "POST",
            data: JSON.stringify(bid),
            contentType: "application/json",
            success: function success(response) {
                deferred.resolve(response);
            },
            error: function error(data, status) {
                deferred.reject({
                    data: data,
                    status: status
                });
            }
        });

        return deferred.promise();
    },
    acceptBid: function acceptBid(bid, signature) {
        var deferred = jQuery.Deferred(),
            _this = this;

        bid.signature = signature;

        $.ajax({
            url: envhosturl + "api/bid/accept",
            type: "POST",
            data: JSON.stringify(bid),
            contentType: "application/json",
            success: function success(response) {
                deferred.resolve(response);
            },
            error: function error(data, status) {
                deferred.reject({
                    data: data,
                    status: status
                });
            }
        });

        return deferred.promise();
    },
    rejectBid: function rejectBid(bid) {
        var deferred = jQuery.Deferred(),
            _this = this;

        $.ajax({
            url: envhosturl + "api/bid/reject",
            type: "POST",
            data: JSON.stringify(bid),
            contentType: "application/json",
            success: function success(response) {
                deferred.resolve(response);
            },
            error: function error(data, status) {
                deferred.reject({
                    data: data,
                    status: status
                });
            }
        });

        return deferred.promise();
    },
    removeBid: function removeBid(bid) {
        var deferred = jQuery.Deferred(),
            _this = this;

        $.ajax({
            url: envhosturl + "api/bid/remove",
            type: "POST",
            data: JSON.stringify(bid),
            contentType: "application/json",
            success: function success(response) {
                deferred.resolve(response);
            },
            error: function error(data, status) {
                deferred.reject({
                    data: data,
                    status: status
                });
            }
        });

        return deferred.promise();
    },
    saveTmpFile: function saveTmpFile(files) {
        var deferred = jQuery.Deferred(),
            _this = this;

        var data = new FormData();
        data.append('file', files[0]);

        $.ajax({
            url: envhosturl + "content/save/file",
            type: "POST",
            data: data,
            processData: false,
            contentType: false,
            success: function success(response) {
                deferred.resolve(response);
            },
            error: function error(data, status) {
                deferred.reject({
                    data: data,
                    status: status
                });
            }
        });

        return deferred.promise();
    },
    getByCustomId: function getByCustomId(customId) {
        var deferred = jQuery.Deferred(),
            _this = this;

        $.ajax({
            url: envhosturl + "listing/details",
            type: "POST",
            data: {
                customId: customId
            },
            success: function success(response) {
                deferred.resolve(response);
            },
            error: function error(data, status) {
                deferred.reject({
                    data: data,
                    status: status
                });
            }
        });

        return deferred.promise();
    },
    getDraftListings: function getDraftListings() {
        var deferred = jQuery.Deferred();

        $.ajax({
            url: envhosturl + "api/listings/draft",
            type: "POST",
            success: function success(response) {
                deferred.resolve(response);
            },
            error: function error(data, status) {
                deferred.reject({
                    data: data,
                    status: status
                });
            }
        });

        return deferred.promise();
    },
    getInactiveListings: function getInactiveListings() {
        var deferred = jQuery.Deferred();

        $.ajax({
            url: envhosturl + "api/listings/inactive",
            type: "POST",
            success: function success(response) {
                deferred.resolve(response);
            },
            error: function error(data, status) {
                deferred.reject({
                    data: data,
                    status: status
                });
            }
        });

        return deferred.promise();
    },
    getActiveListings: function getActiveListings() {
        var deferred = jQuery.Deferred();

        $.ajax({
            url: envhosturl + "api/listings/active",
            type: "POST",
            success: function success(response) {
                deferred.resolve(response);
            },
            error: function error(data, status) {
                deferred.reject({
                    data: data,
                    status: status
                });
            }
        });

        return deferred.promise();
    },
    getExpiredListings: function getExpiredListings() {
        var deferred = jQuery.Deferred();

        $.ajax({
            url: envhosturl + "api/listings/expired",
            type: "POST",
            success: function success(response) {
                deferred.resolve(response);
            },
            error: function error(data, status) {
                deferred.reject({
                    data: data,
                    status: status
                });
            }
        });

        return deferred.promise();
    },
    removeListing: function removeListing(customId) {
        var deferred = jQuery.Deferred(),
            _this = this;

        $.ajax({
            url: envhosturl + "api/listings/remove",
            type: "POST",
            data: {
                customId: customId
            },
            success: function success(response) {
                deferred.resolve(response);
            },
            error: function error(data, status) {
                deferred.reject({
                    data: data,
                    status: status
                });
            }
        });

        return deferred.promise();
    },
    duplicateListing: function duplicateListing(customId) {
        var deferred = jQuery.Deferred(),
            _this = this;

        $.ajax({
            url: envhosturl + "api/listings/duplicate",
            type: "POST",
            data: {
                customId: customId
            },
            success: function success(response) {
                deferred.resolve(response);
            },
            error: function error(data, status) {
                deferred.reject({
                    data: data,
                    status: status
                });
            }
        });

        return deferred.promise();
    },
    deactivateListing: function deactivateListing(customId) {
        var deferred = jQuery.Deferred(),
            _this = this;

        $.ajax({
            url: envhosturl + "api/listings/deactivate",
            type: "POST",
            data: {
                customId: customId
            },
            success: function success(response) {
                deferred.resolve(response);
            },
            error: function error(data, status) {
                deferred.reject({
                    data: data,
                    status: status
                });
            }
        });

        return deferred.promise();
    },
    getClosedDeals: function getClosedDeals() {
        var deferred = jQuery.Deferred();

        $.ajax({
            url: envhosturl + "api/bid/closed",
            type: "POST",
            data: {},
            success: function success(response) {
                deferred.resolve(response);
            },
            error: function error(data, status) {
                deferred.reject({
                    data: data,
                    status: status
                });
            }
        });

        return deferred.promise();
    },
    getAllDeals: function getAllDeals() {
        var deferred = jQuery.Deferred();

        $.ajax({
            url: envhosturl + "api/bid/all",
            type: "POST",
            data: {},
            success: function success(response) {
                deferred.resolve(response);
            },
            error: function error(data, status) {
                deferred.reject({
                    data: data,
                    status: status
                });
            }
        });

        return deferred.promise();
    },
    getPendingDeals: function getPendingDeals() {
        var deferred = jQuery.Deferred();

        $.ajax({
            url: envhosturl + "api/bid/pending",
            type: "POST",
            data: {},
            success: function success(response) {
                deferred.resolve(response);
            },
            error: function error(data, status) {
                deferred.reject({
                    data: data,
                    status: status
                });
            }
        });

        return deferred.promise();
    },
    getRejectedDeals: function getRejectedDeals() {
        var deferred = jQuery.Deferred();

        $.ajax({
            url: envhosturl + "api/bid/rejected",
            type: "POST",
            data: {},
            success: function success(response) {
                deferred.resolve(response);
            },
            error: function error(data, status) {
                deferred.reject({
                    data: data,
                    status: status
                });
            }
        });

        return deferred.promise();
    },
    getWatchlistListings: function getWatchlistListings() {
        var deferred = jQuery.Deferred(),
            _this = this;

        $.ajax({
            url: envhosturl + "api/listings/watchlist",
            type: "POST",
            success: function success(response) {
                deferred.resolve(response);
            },
            error: function error(data, status) {
                deferred.reject({
                    data: data,
                    status: status
                });
            }
        });

        return deferred.promise();
    }
};
/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(/*! jquery */ "./node_modules/jquery/dist/jquery.js"), __webpack_require__(/*! jquery */ "./node_modules/jquery/dist/jquery.js")))

/***/ }),

/***/ "./src/AppBundle/Resources/public/javascript/ca/ca.api.js":
/*!****************************************************************!*\
  !*** ./src/AppBundle/Resources/public/javascript/ca/ca.api.js ***!
  \****************************************************************/
/*! no exports provided */
/*! all exports used */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* WEBPACK VAR INJECTION */(function($, jQuery) {/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_axios__ = __webpack_require__(/*! axios */ "./node_modules/axios/index.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_axios___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_axios__);


/**
 * Created by JuanCruz on 4/1/2018.
 */

var __apiStore = {
    tournaments: {}
};

window.ContentArena = window.ContentArena || {};

ContentArena.Api = {
    sortByLabel: function sortByLabel(a, b) {
        return a.name > b.name ? 1 : b.name > a.name ? -1 : 0;
    },
    sortBySport: function sortBySport(a, b) {

        if (a.sport.name > b.sport.name) return 1;
        if (a.sport.name < b.sport.name) return -1;
        if (a.sportCategory.name > b.sportCategory.name) return 1;
        if (a.sportCategory.name < b.sportCategory.name) return -1;
        if (a.name > b.name) return 1;
        if (a.name < b.name) return -1;
        return 0;
    },
    prepareList: function prepareList(list, categoryId) {

        var _this = this;

        list = $.map(list, function (item) {

            // Filter by category
            if (categoryId && item.category['@attributes'].id != categoryId) return null;

            return { name: item['@attributes'].name, externalId: item['@attributes'].id };
        });

        list.sort(_this.sortByLabel);

        return list;
    },
    getContent: function getContent(filter) {
        var deferred = jQuery.Deferred();

        $.ajax({
            url: envhosturl + "buy/search",
            type: "POST",
            data: filter,
            success: function success(response) {
                deferred.resolve(response);
            },
            error: function error(data, status) {
                deferred.reject({
                    data: data,
                    status: status
                });
            }
        });

        return deferred.promise();
    },
    getJsonContent: function getJsonContent(filter) {
        var deferred = jQuery.Deferred();

        $.ajax({
            url: envhosturl + "listings/marketplace",
            type: "POST",
            data: filter,
            success: function success(response) {
                deferred.resolve(response);
            },
            error: function error(data, status) {
                deferred.reject({
                    data: data,
                    status: status
                });
            }
        });

        return deferred.promise();
    },
    saveFilter: function saveFilter(filter) {
        var deferred = jQuery.Deferred();

        $.ajax({
            url: envhosturl + "buy/filter/save",
            type: "POST",
            data: filter,
            success: function success(response) {
                deferred.resolve(response);
            },
            error: function error(data, status) {
                deferred.reject({
                    data: data,
                    status: status
                });
            }
        });

        return deferred.promise();
    },
    getCountries: function getCountries() {
        var deferred = jQuery.Deferred();
        var _this = this;
        $.ajax({
            url: envhosturl + "api/search/countries/all",
            type: "POST",
            /**
             * @param {array} response
             */
            success: function success(response) {
                response.sort(_this.sortByLabel);
                deferred.resolve(response);
            },
            error: function error(data, status) {
                deferred.reject({
                    data: data,
                    status: status
                });
            }
        });

        return deferred.promise();
    },
    getActiveSports: function getActiveSports() {
        var deferred = jQuery.Deferred();
        var _this = this;
        $.ajax({
            url: envhosturl + "api/search/sports/active",
            type: "POST",
            /**
             * @param {array} response
             */
            success: function success(response) {
                deferred.resolve(response);
            },
            error: function error(data, status) {
                deferred.reject({
                    data: data,
                    status: status
                });
            }
        });

        return deferred.promise();
    },
    getCountriesFull: function getCountriesFull() {
        var deferred = jQuery.Deferred();
        var _this = this;
        $.ajax({
            url: envhosturl + "api/search/countries/full",
            type: "POST",
            /**
             * @param {array} response
             */
            success: function success(response) {
                response.sort(_this.sortByLabel);
                deferred.resolve(response);
            },
            error: function error(data, status) {
                deferred.reject({
                    data: data,
                    status: status
                });
            }
        });

        return deferred.promise();
    },
    getTerritories: function getTerritories() {
        var deferred = jQuery.Deferred();
        var _this = this;
        $.ajax({
            url: envhosturl + "api/search/territories",
            type: "POST",
            /**
             * @param {array} response
             */
            success: function success(response) {
                response.sort(_this.sortByLabel);
                deferred.resolve(response);
            },
            error: function error(data, status) {
                deferred.reject({
                    data: data,
                    status: status
                });
            }
        });

        return deferred.promise();
    },
    getRights: function getRights(rightsPackage, group) {
        var deferred = jQuery.Deferred();
        var _this = this;
        $.ajax({
            url: envhosturl + "api/search/rights",
            type: "POST",
            data: {
                rightsPackage: rightsPackage,
                group: group
            },

            /**
             * @param {array} response
             */
            success: function success(response) {
                deferred.resolve(response);
            },
            error: function error(data, status) {
                deferred.reject({
                    data: data,
                    status: status
                });
            }
        });

        return deferred.promise();
    },
    getRightsPackage: function getRightsPackage(rightsPackage, group) {
        var deferred = jQuery.Deferred();
        var _this = this;
        $.ajax({
            url: envhosturl + "api/search/rights-package",
            type: "POST",
            data: {
                rightsPackage: rightsPackage,
                group: group
            },

            /**
             * @param {array} response
             */
            success: function success(response) {
                deferred.resolve(response);
            },
            error: function error(data, status) {
                deferred.reject({
                    data: data,
                    status: status
                });
            }
        });

        return deferred.promise();
    },
    getSports: function getSports() {
        var deferred = jQuery.Deferred();
        var _this = this;
        $.ajax({
            url: externalApiUrl + "v1/feed/sports",
            type: "GET",
            /**
             * @param {{sport:object}} response
             */
            success: function success(response) {

                var sports = _this.prepareList(response.sport);
                deferred.resolve(sports);
            },
            error: function error(data, status) {
                deferred.reject({
                    data: data,
                    status: status
                });
            }
        });

        return deferred.promise();
    },
    getContentDetails: function getContentDetails(id) {
        var deferred = jQuery.Deferred(),
            _this = this;

        $.ajax({
            url: envhosturl + "content/details/",
            type: "POST",
            data: { id: id },
            success: function success(response) {
                deferred.resolve(response);
            },
            error: function error(data, status) {
                deferred.reject({
                    data: data,
                    status: status
                });
            }
        });

        return deferred.promise();
    },
    getPendingListings: function getPendingListings(id) {
        var deferred = jQuery.Deferred(),
            _this = this;

        $.ajax({
            url: envhosturl + "content/pending-listings/",
            type: "POST",
            data: { id: id },
            success: function success(response) {
                deferred.resolve(response);
            },
            error: function error(data, status) {
                deferred.reject({
                    data: data,
                    status: status
                });
            }
        });

        return deferred.promise();
    },
    getCategories: function getCategories(sportId) {
        var deferred = jQuery.Deferred(),
            _this = this,
            list = [],
            cats = [];

        _this.getTournaments(sportId).done(function () {

            if (!__apiStore.tournaments[sportId]) {
                deferred.resolve([]);
                return;
            }

            list = $.map(__apiStore.tournaments[sportId].tournament, function (item) {

                var id = item.category['@attributes'].id;

                if (cats.indexOf(id) !== -1) {
                    return null;
                } else {
                    cats.push(id);
                    return item.category;
                }
            });

            deferred.resolve(_this.prepareList(list));
        });

        return deferred.promise();
    },
    getTournaments: function getTournaments(sportId, categoryId) {
        var deferred = jQuery.Deferred(),
            _this = this;

        if (__apiStore.tournaments[sportId] !== undefined) {
            deferred.resolve(_this.prepareList(__apiStore.tournaments[sportId].tournament, categoryId));
            return deferred.promise();
        }

        $.ajax({
            url: externalApiUrl + "v1/feed/tournaments",
            type: "POST",
            data: { id: sportId },
            /**
             * @param {{tournaments:{tournament:Array}}} response
             */
            success: function success(response) {

                // A comment
                if (response.tournaments === undefined || response.tournaments.tournament === undefined) {
                    deferred.resolve([]);
                    return;
                }

                __apiStore.tournaments[sportId] = response.tournaments;
                deferred.resolve(_this.prepareList(response.tournaments.tournament, categoryId));
            },
            error: function error(data, status) {
                deferred.reject({
                    data: data,
                    status: status
                });
            }
        });
        return deferred.promise();
    },
    getSeasons: function getSeasons(tournamentId) {
        var deferred = jQuery.Deferred(),
            _this = this;

        $.ajax({
            url: externalApiUrl + "v1/feed/seasons",
            type: "POST",
            data: { id: tournamentId },
            /**
             * @param {{tournaments:{tournament:Array}}} response
             */
            success: function success(response) {

                var list;

                if (response.seasons === undefined || response.seasons.season === undefined) return false;

                if ($.isArray(response.seasons.season)) {
                    list = $.map(response.seasons.season, function (item) {
                        return {
                            name: item['@attributes'].name,
                            externalId: item['@attributes'].id,
                            endDate: item['@attributes'].end_date,
                            startDate: item['@attributes'].start_date,
                            tournamentId: item['@attributes'].tournament_id,
                            year: item['@attributes'].year
                        };
                    }).reverse();
                } else {
                    list = [{
                        name: response.seasons.season['@attributes'].name,
                        externalId: response.seasons.season['@attributes'].id,
                        endDate: response.seasons.season['@attributes'].end_date,
                        startDate: response.seasons.season['@attributes'].start_date,
                        tournamentId: response.seasons.season['@attributes'].tournament_id,
                        year: response.seasons.season['@attributes'].year
                    }];
                }

                deferred.resolve(list);
            },
            error: function error(data, status) {
                deferred.reject({
                    data: data,
                    status: status
                });
            }
        });
        return deferred.promise();
    },
    getSchedule: function getSchedule(seasonId) {
        var deferred = jQuery.Deferred(),
            _this = this;

        $.ajax({
            url: externalApiUrl + "v1/feed/schedules",
            type: "POST",
            data: { id: seasonId },
            /**
             * @param {{tournaments:{tournament:Array}}} response
             */
            success: function success(response) {

                var list = {};

                if (response.sport_events === undefined || response.sport_events.sport_event === undefined) return false;

                response.sport_events.sport_event.forEach(function (item) {

                    var round = item.tournament_round ? item.tournament_round['@attributes'] : null;

                    if (!round) return;

                    var name = round.number ? "round_" + round.number : round.name;

                    if (!list[name]) list[name] = {};

                    if (!list[name].matches) list[name].matches = new Map();

                    list[name].matches.set(item['@attributes'].id, {
                        scheduled: item['@attributes'].scheduled,
                        externalId: item['@attributes'].id,
                        status: item['@attributes'].status,
                        tournamentRound: round,
                        competitors: item.competitors ? item.competitors.competitor.map(function (competitor) {
                            return competitor['@attributes'];
                        }) : null
                    });
                });

                deferred.resolve(list);
            },
            error: function error(data, status) {
                deferred.reject({
                    data: data,
                    status: status
                });
            }
        });
        return deferred.promise();
    },
    searchCompetition: function searchCompetition(request) {

        var deferred = jQuery.Deferred();
        var _this = this;

        $.ajax({
            url: envhosturl + 'api/search/tournament',
            data: {
                "content": request
            },
            traditional: true,
            type: "POST",
            dataType: "json",
            success: function success(data) {

                data.sort(_this.sortBySport);

                deferred.resolve(data);
            },
            error: function error(data, status) {
                deferred.reject({
                    data: data,
                    status: status
                });
            }
        });
        return deferred.promise();
    },
    watchlist: function watchlist(id) {
        var deferred = jQuery.Deferred(),
            _this = this;

        $.ajax({
            url: envhosturl + "api/watchlist/add",
            type: "POST",
            data: { id: id },
            success: function success(response) {
                deferred.resolve(response);
            },
            error: function error(data, status) {
                deferred.reject({
                    data: data,
                    status: status
                });
            }
        });

        return deferred.promise();
    },
    getNotifications: function getNotifications() {
        return __WEBPACK_IMPORTED_MODULE_0_axios___default.a.get(envhosturl + 'api/notifications/');
    },
    markNotificationAsSeen: function markNotificationAsSeen(id) {
        return __WEBPACK_IMPORTED_MODULE_0_axios___default.a.post(envhosturl + 'api/notifications/seen', {
            id: id
        });
    }
};
/* WEBPACK VAR INJECTION */}.call(__webpack_exports__, __webpack_require__(/*! jquery */ "./node_modules/jquery/dist/jquery.js"), __webpack_require__(/*! jquery */ "./node_modules/jquery/dist/jquery.js")))

/***/ }),

/***/ "./src/AppBundle/Resources/public/javascript/ca/ca.data.js":
/*!*****************************************************************!*\
  !*** ./src/AppBundle/Resources/public/javascript/ca/ca.data.js ***!
  \*****************************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports) {

/**
 * Created by JuanCruz on 4/1/2018.
 */

window.ContentArena = window.ContentArena || {};

ContentArena.Data = ContentArena.Data || {};
ContentArena.Languages = ContentArena.Languages || {};

ContentArena.Data.TopSports = [{ name: "Soccer", externalId: "sr:sport:1" }, { name: "Basketball", externalId: "sr:sport:2" }, { name: "Baseball", externalId: "sr:sport:3" }, { name: "Tennis", externalId: "sr:sport:5" }, { name: "Cricket", externalId: "sr:sport:21" }, { name: "Field Hockey", externalId: "sr:sport:24" }, { name: "Volleyball", externalId: "sr:sport:23" }, { name: "Table Tennis", externalId: "sr:sport:20" }, { name: "Golf", externalId: "sr:sport:9" }, { name: "American Football", externalId: "sr:sport:16" }, { name: "Handball", externalId: "sr:sport:6" }];

ContentArena.Data.FullSports = [];
ContentArena.Data.Countries = [];

ContentArena.Languages.Short = {
    "mdr": "Mandarin",
    "es": "Spanish",
    "en": "English",
    "hi": "Hindi",
    "ar": "Arabic",
    "pt": "Portuguese",
    "bn": "Bengali",
    "ru": "Russian",
    "ja": "Japanese",
    "jv": "Javanese",
    "de": "German",
    "all": "Show All"
};

ContentArena.Languages.Long = {
    "aa": "Afar",
    "af": "Afrikaans",
    "ain": "Ainu",
    "akz": "Alabama",
    "sq": "Albanian",
    "ale": "Aleut",
    "arq": "Algerian Arabic",
    "en_US": "American English",
    "ase": "American Sign Language",
    "am": "Amharic",
    "egy": "Ancient Egyptian",
    "grc": "Ancient Greek",
    "ar": "Arabic",
    "arc": "Aramaic",
    "arp": "Arapaho",
    "arw": "Arawak",
    "hy": "Armenian",
    "as": "Assamese",
    "asa": "Asu",
    "en_AU": "Australian English",
    "de_AT": "Austrian German",
    "ay": "Aymara",
    "az": "Azerbaijani",
    "ban": "Balinese",
    "eu": "Basque",
    "bar": "Bavarian",
    "be": "Belarusian",
    "bn": "Bengali",
    "bik": "Bikol",
    "bin": "Bini",
    "bs": "Bosnian",
    "brh": "Brahui",
    "bra": "Braj",
    "pt_BR": "Brazilian Portuguese",
    "br": "Breton",
    "en_GB": "British English",
    "bg": "Bulgarian",
    "my": "Burmese",
    "frc": "Cajun French",
    "en_CA": "Canadian English",
    "fr_CA": "Canadian French",
    "yue": "Cantonese",
    "car": "Carib",
    "ca": "Catalan",
    "cay": "Cayuga",
    "ceb": "Cebuano",
    "shu": "Chadian Arabic",
    "ce": "Chechen",
    "chr": "Cherokee",
    "qug": "Chimborazo Highland Quichua",
    "zh": "Chinese",
    "chn": "Chinook Jargon",
    "chp": "Chipewyan",
    "cho": "Choctaw",
    "cu": "Church Slavic",
    "cv": "Chuvash",
    "nwc": "Classical Newari",
    "syc": "Classical Syriac",
    "swc": "Congo Swahili",
    "cop": "Coptic",
    "kw": "Cornish",
    "co": "Corsican",
    "cr": "Cree",
    "mus": "Creek",
    "crh": "Crimean Turkish",
    "hr": "Croatian",
    "cs": "Czech",
    "dak": "Dakota",
    "da": "Danish",
    "del": "Delaware",
    "nl": "Dutch",
    "frs": "Eastern Frisian",
    "arz": "Egyptian Arabic",
    "en": "English",
    "eo": "Esperanto",
    "et": "Estonian",
    "pt_PT": "European Portuguese",
    "es_ES": "European Spanish",
    "ee": "Ewe",
    "fan": "Fang",
    "hif": "Fiji Hindi",
    "fj": "Fijian",
    "fil": "Filipino",
    "fi": "Finnish",
    "nl_BE": "Flemish",
    "fon": "Fon",
    "fr": "French",
    "gaa": "Ga",
    "gan": "Gan Chinese",
    "ka": "Georgian",
    "de": "German",
    "got": "Gothic",
    "grb": "Grebo",
    "el": "Greek",
    "gn": "Guarani",
    "gu": "Gujarati",
    "guz": "Gusii",
    "hai": "Haida",
    "ht": "Haitian",
    "hak": "Hakka Chinese",
    "ha": "Hausa",
    "haw": "Hawaiian",
    "he": "Hebrew",
    "hz": "Herero",
    "hi": "Hindi",
    "hit": "Hittite",
    "hmn": "Hmong",
    "hu": "Hungarian",
    "is": "Icelandic",
    "io": "Ido",
    "ig": "Igbo",
    "iu": "Inuktitut",
    "ik": "Inupiaq",
    "ga": "Irish",
    "it": "Italian",
    "jam": "Jamaican Creole English",
    "ja": "Japanese",
    "jv": "Javanese",
    "kaj": "Jju",
    "dyo": "Jola-Fonyi",
    "xal": "Kalmyk",
    "kam": "Kamba",
    "kbl": "Kanembu",
    "kn": "Kannada",
    "kr": "Kanuri",
    "kaa": "Kara-Kalpak",
    "krc": "Karachay-Balkar",
    "krl": "Karelian",
    "ks": "Kashmiri",
    "csb": "Kashubian",
    "kaw": "Kawi",
    "kk": "Kazakh",
    "ken": "Kenyang",
    "kha": "Khasi",
    "km": "Khmer",
    "kho": "Khotanese",
    "khw": "Khowar",
    "ki": "Kikuyu",
    "kmb": "Kimbundu",
    "krj": "Kinaray-a",
    "rw": "Kinyarwanda",
    "kiu": "Kirmanjki",
    "tlh": "Klingon",
    "bkm": "Kom",
    "kv": "Komi",
    "koi": "Komi-Permyak",
    "kg": "Kongo",
    "kok": "Konkani",
    "ko": "Korean",
    "kfo": "Koro",
    "kos": "Kosraean",
    "avk": "Kotava",
    "khq": "Koyra Chiini",
    "ses": "Koyraboro Senni",
    "kpe": "Kpelle",
    "kri": "Krio",
    "kj": "Kuanyama",
    "kum": "Kumyk",
    "ku": "Kurdish",
    "kru": "Kurukh",
    "kut": "Kutenai",
    "nmg": "Kwasio",
    "ky": "Kyrgyz",
    "quc": "K\u02BCiche\u02BC",
    "lad": "Ladino",
    "lah": "Lahnda",
    "lkt": "Lakota",
    "lam": "Lamba",
    "lag": "Langi",
    "lo": "Lao",
    "ltg": "Latgalian",
    "la": "Latin",
    "es_419": "Latin American Spanish",
    "lv": "Latvian",
    "lzz": "Laz",
    "lez": "Lezghian",
    "lij": "Ligurian",
    "li": "Limburgish",
    "ln": "Lingala",
    "lfn": "Lingua Franca Nova",
    "lzh": "Literary Chinese",
    "lt": "Lithuanian",
    "liv": "Livonian",
    "jbo": "Lojban",
    "lmo": "Lombard",
    "nds": "Low German",
    "sli": "Lower Silesian",
    "dsb": "Lower Sorbian",
    "loz": "Lozi",
    "lu": "Luba-Katanga",
    "lua": "Luba-Lulua",
    "lui": "Luiseno",
    "smj": "Lule Sami",
    "lun": "Lunda",
    "luo": "Luo",
    "lb": "Luxembourgish",
    "luy": "Luyia",
    "mde": "Maba",
    "mk": "Macedonian",
    "jmc": "Machame",
    "mad": "Madurese",
    "maf": "Mafa",
    "mag": "Magahi",
    "vmf": "Main-Franconian",
    "mai": "Maithili",
    "mak": "Makasar",
    "mgh": "Makhuwa-Meetto",
    "kde": "Makonde",
    "mg": "Malagasy",
    "ms": "Malay",
    "ml": "Malayalam",
    "mt": "Maltese",
    "mnc": "Manchu",
    "mdr": "Mandarin",
    "man": "Mandingo",
    "mni": "Manipuri",
    "gv": "Manx",
    "mi": "Maori",
    "arn": "Mapuche",
    "mr": "Marathi",
    "chm": "Mari",
    "mh": "Marshallese",
    "mwr": "Marwari",
    "mas": "Masai",
    "mzn": "Mazanderani",
    "byv": "Medumba",
    "men": "Mende",
    "mwv": "Mentawai",
    "mer": "Meru",
    "mgo": "Meta\u02BC",
    "es_MX": "Mexican Spanish",
    "mic": "Micmac",
    "dum": "Middle Dutch",
    "enm": "Middle English",
    "frm": "Middle French",
    "gmh": "Middle High German",
    "mga": "Middle Irish",
    "nan": "Min Nan Chinese",
    "min": "Minangkabau",
    "xmf": "Mingrelian",
    "mwl": "Mirandese",
    "lus": "Mizo",
    "ar_001": "Modern Standard Arabic",
    "moh": "Mohawk",
    "mdf": "Moksha",
    "ro_MD": "Moldavian",
    "lol": "Mongo",
    "mn": "Mongolian",
    "mfe": "Morisyen",
    "ary": "Moroccan Arabic",
    "mos": "Mossi",
    "mul": "Multiple Languages",
    "mua": "Mundang",
    "ttt": "Muslim Tat",
    "mye": "Myene",
    "naq": "Nama",
    "na": "Nauru",
    "nv": "Navajo",
    "ng": "Ndonga",
    "nap": "Neapolitan",
    "ne": "Nepali",
    "new": "Newari",
    "sba": "Ngambay",
    "nnh": "Ngiemboon",
    "jgo": "Ngomba",
    "yrl": "Nheengatu",
    "nia": "Nias",
    "niu": "Niuean",
    "zxx": "No linguistic content",
    "nog": "Nogai",
    "nd": "North Ndebele",
    "frr": "Northern Frisian",
    "se": "Northern Sami",
    "nso": "Northern Sotho",
    "no": "Norwegian",
    "nb": "Norwegian Bokm\xE5l",
    "nn": "Norwegian Nynorsk",
    "nov": "Novial",
    "nus": "Nuer",
    "nym": "Nyamwezi",
    "ny": "Nyanja",
    "nyn": "Nyankole",
    "tog": "Nyasa Tonga",
    "nyo": "Nyoro",
    "nzi": "Nzima",
    "nqo": "N\u02BCKo",
    "oc": "Occitan",
    "oj": "Ojibwa",
    "ang": "Old English",
    "fro": "Old French",
    "goh": "Old High German",
    "sga": "Old Irish",
    "non": "Old Norse",
    "peo": "Old Persian",
    "pro": "Old Proven\xE7al",
    "or": "Oriya",
    "om": "Oromo",
    "osa": "Osage",
    "os": "Ossetic",
    "ota": "Ottoman Turkish",
    "pal": "Pahlavi",
    "pfl": "Palatine German",
    "pau": "Palauan",
    "pi": "Pali",
    "pdc": "Pennsylvania German",
    "fa": "Persian",
    "phn": "Phoenician",
    "pcd": "Picard",
    "pms": "Piedmontese",
    "pdt": "Plautdietsch",
    "pon": "Pohnpeian",
    "pl": "Polish",
    "pnt": "Pontic",
    "pt": "Portuguese",
    "prg": "Prussian",
    "pa": "Punjabi",
    "qu": "Quechua",
    "ro": "Romanian",
    "rm": "Romansh",
    "rom": "Romany",
    "root": "Root",
    "ru": "Russian",
    "rwk": "Rwa",
    "sah": "Sakha",
    "sam": "Samaritan Aramaic",
    "sm": "Samoan",
    "sco": "Scots",
    "gd": "Scottish Gaelic",
    "sly": "Selayar",
    "sel": "Selkup",
    "seh": "Sena",
    "see": "Seneca",
    "sr": "Serbian",
    "sh": "Serbo-Croatian",
    "srr": "Serer",
    "sei": "Seri",
    "ksb": "Shambala",
    "shn": "Shan",
    "sn": "Shona",
    "ii": "Sichuan Yi",
    "scn": "Sicilian",
    "sid": "Sidamo",
    "bla": "Siksika",
    "szl": "Silesian",
    "zh_Hans": "Simplified Chinese",
    "sd": "Sindhi",
    "si": "Sinhala",
    "sms": "Skolt Sami",
    "den": "Slave",
    "sk": "Slovak",
    "sl": "Slovenian",
    "xog": "Soga",
    "sog": "Sogdien",
    "so": "Somali",
    "snk": "Soninke",
    "ckb": "Sorani Kurdish",
    "azb": "South Azerbaijani",
    "nr": "South Ndebele",
    "alt": "Southern Altai",
    "sma": "Southern Sami",
    "st": "Southern Sotho",
    "es": "Spanish",
    "srn": "Sranan Tongo",
    "zgh": "Standard Moroccan Tamazight",
    "suk": "Sukuma",
    "sux": "Sumerian",
    "su": "Sundanese",
    "sus": "Susu",
    "sw": "Swahili",
    "ss": "Swati",
    "sv": "Swedish",
    "fr_CH": "Swiss French",
    "gsw": "Swiss German",
    "de_CH": "Swiss High German",
    "syr": "Syriac",
    "shi": "Tachelhit",
    "tl": "Tagalog",
    "ty": "Tahitian",
    "dav": "Taita",
    "tg": "Tajik",
    "tly": "Talysh",
    "tmh": "Tamashek",
    "ta": "Tamil",
    "trv": "Taroko",
    "twq": "Tasawaq",
    "tt": "Tatar",
    "te": "Telugu",
    "ter": "Tereno",
    "teo": "Teso",
    "tet": "Tetum",
    "th": "Thai",
    "bo": "Tibetan",
    "tig": "Tigre",
    "ti": "Tigrinya",
    "tem": "Timne",
    "tiv": "Tiv",
    "tli": "Tlingit",
    "tpi": "Tok Pisin",
    "tkl": "Tokelau",
    "to": "Tongan",
    "fit": "Tornedalen Finnish",
    "zh_Hant": "Traditional Chinese",
    "tkr": "Tsakhur",
    "tsd": "Tsakonian",
    "tsi": "Tsimshian",
    "ts": "Tsonga",
    "tn": "Tswana",
    "tcy": "Tulu",
    "tum": "Tumbuka",
    "aeb": "Tunisian Arabic",
    "tr": "Turkish",
    "tk": "Turkmen",
    "tru": "Turoyo",
    "tvl": "Tuvalu",
    "tyv": "Tuvinian",
    "tw": "Twi",
    "kcg": "Tyap",
    "udm": "Udmurt",
    "uga": "Ugaritic",
    "uk": "Ukrainian",
    "umb": "Umbundu",
    "und": "Unknown Language",
    "hsb": "Upper Sorbian",
    "ur": "Urdu",
    "ug": "Uyghur",
    "uz": "Uzbek",
    "vai": "Vai",
    "ve": "Venda",
    "vec": "Venetian",
    "vep": "Veps",
    "vi": "Vietnamese",
    "vo": "Volap\xFCk",
    "vro": "V\xF5ro",
    "vot": "Votic",
    "vun": "Vunjo",
    "wa": "Walloon",
    "wae": "Walser",
    "war": "Waray",
    "was": "Washo",
    "guc": "Wayuu",
    "cy": "Welsh",
    "vls": "West Flemish",
    "fy": "Western Frisian",
    "mrj": "Western Mari",
    "wal": "Wolaytta",
    "wo": "Wolof",
    "wuu": "Wu Chinese",
    "xh": "Xhosa",
    "hsn": "Xiang Chinese",
    "yav": "Yangben",
    "yao": "Yao",
    "yap": "Yapese",
    "ybb": "Yemba",
    "yi": "Yiddish",
    "yo": "Yoruba",
    "zap": "Zapotec",
    "dje": "Zarma",
    "zza": "Zaza",
    "zea": "Zeelandic",
    "zen": "Zenaga",
    "za": "Zhuang",
    "gbz": "Zoroastrian Dari",
    "zu": "Zulu",
    "zun": "Zuni"
};

/***/ }),

/***/ "./src/AppBundle/Resources/public/javascript/ca/ca.models.js":
/*!*******************************************************************!*\
  !*** ./src/AppBundle/Resources/public/javascript/ca/ca.models.js ***!
  \*******************************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function($) {/**
 * Created by JuanCruz on 4/1/2018.
 */

$(function () {

    window.ContentArena = window.ContentArena || {};

    ContentArena.Model = ContentArena.Model || {};

    ContentArena.Model.RightPackage = function () {
        this.id = null;
        this.name = null;
        this.rights = {};
    };

    ContentArena.Model.Right = function () {
        this.id = null;
        this.name = null;
        this.rightItems = {};
    };

    ContentArena.Model.RightItem = function () {
        this.id = null;
        this.name = null;
        this.inputs = [];
    };

    ContentArena.Model.SelectedRight = function () {
        this.right = null;
        this.rightItem = null;
        this.group = null;
        this.inputs = [];
    };

    ContentArena.Model.SalesPackage = function () {
        var _this = this;

        this.salesMethod = null;
        this.fee = null;
        this.currency = null;
        this.id = null;
        this.name = null;
        this.territories = null;
        this.selectedTerritories = [];
        this.excludedTerritories = [];
        this.territoryBids = false;
        this.sellAsPackage = false;

        this.validate = function () {

            var description = "Sales Package " + _this.id + ": ",
                hasErrors = false;

            if (!_this.currency) {
                hasErrors = true;
                description += "Currency can't be empty. ";
            }

            if (!_this.fee) {
                hasErrors = true;
                description += "Fee can't be empty. ";
            }

            if (!_this.territories) {
                hasErrors = true;
                description += "Territories can't be empty. ";
            }

            if (!_this.salesMethod) {
                hasErrors = true;
                description += "Sales method can't be empty. ";
            }

            return {
                hasErrors: hasErrors,
                description: description
            };
        };
    };

    ContentArena.Model.Content = function () {
        var _this2 = this;

        this.sport = {};
        this.sports = [];
        this.tournament = null;
        this.category = null;
        this.salesPackages = {};
        this.installments = {};

        this.getTitle = function () {

            console.log(_this2);

            var title = "";

            if (_this2.sports.length > 0) {
                _this2.sports.forEach(function (sport, index, array) {
                    title += sport.value;
                    if (index + 1 != array.length) title += ", ";
                });
            }

            if (_this2.sport !== null) title += _this2.sport.value;
            if (_this2.category !== null) title += " - " + _this2.category.value;
            if (_this2.tournament !== null) title += " - " + _this2.tournament.value;

            if (_this2.seasons && _this2.seasons.length > 0) {
                title += " " + _this2.seasons.map(function (season) {
                    var values = season.value.split(" ");
                    return values[values.length - 1];
                }).join(" - ");
            }

            return title;
        };

        watch(this, "sports", function () {
            console.log("Updating sports", arguments);
        });
    };
});
/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(/*! jquery */ "./node_modules/jquery/dist/jquery.js")))

/***/ }),

/***/ "./src/AppBundle/Resources/public/javascript/ca/ca.utils.js":
/*!******************************************************************!*\
  !*** ./src/AppBundle/Resources/public/javascript/ca/ca.utils.js ***!
  \******************************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports) {

var _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"]) _i["return"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError("Invalid attempt to destructure non-iterable instance"); } }; }();

/**
 * Created by JuanCruz on 4/1/2018.
 */

window.ContentArena = window.ContentArena || {};
ContentArena.Utils = {
    contentParserFromServer: function contentParserFromServer(content) {

        if (content.parsed) return content;

        var sort = true;

        if (content.extraData) {
            Object.entries(content.extraData).forEach(function (_ref) {
                var _ref2 = _slicedToArray(_ref, 2),
                    key = _ref2[0],
                    value = _ref2[1];

                return content[key] = value;
            });
        }

        content.tournament = content.tournament ? Array.isArray(content.tournament) ? content.tournament : [content.tournament] : [];
        content.sportCategory = content.sportCategory ? Array.isArray(content.sportCategory) ? content.sportCategory : [content.sportCategory] : [];

        if (content.selectedRightsBySuperRight) {
            content.rightsPackage.forEach(function (rp) {
                rp.selectedRights = content.selectedRightsBySuperRight[rp.id]['items'];
                rp.exclusive = content.selectedRightsBySuperRight[rp.id]['exclusive'];
            });
        }

        if (content.fixturesBySeason) {
            content.seasons.forEach(function (s, i) {
                s.fixtures = content.fixturesBySeason[i];
            });
        }

        if (content.salesPackages) {
            content.salesPackages.forEach(function (sp) {
                if (sp.salesMethod) sp.salesMethod = sp.salesMethod.name;
                if (sp.excludedCountries) sp.excludedTerritories = sp.excludedCountries.map(function (t) {
                    return { label: t.name, value: t.name };
                });
                if (sp.territories) sp.territories = sp.territories.map(function (t) {
                    return { label: t.name, value: t.name };
                });
                if (!sp.territories) sort = false;
            });
            if (sort) content.salesPackages.sort(this.sortSalesPackages).reverse();
        }
        content.step = Number(content.step);
        content.parsed = true;

        return content;
    },
    sortSalesPackages: function sortSalesPackages(a, b) {
        var c = function c(a, b) {
            return a > b ? 1 : b > a ? -1 : 0;
        };
        return c(a.territories.length, b.territories.length) || c(b.name, a.name);
    },
    isAPIAvailable: function isAPIAvailable() {
        // Check for the various File API support.
        if (window.File && window.FileReader && window.FileList && window.Blob) {
            // Great success! All the File APIs are supported.
            return true;
        } else {
            // source: File API availability - http://caniuse.com/#feat=fileapi
            // source: <output> availability - http://html5doctor.com/the-output-element/
            document.writeln('The HTML5 APIs used in this form are only available in the following browsers:<br />');
            // 6.0 File API & 13.0 <output>
            document.writeln(' - Google Chrome: 13.0 or later<br />');
            // 3.6 File API & 6.0 <output>
            document.writeln(' - Mozilla Firefox: 6.0 or later<br />');
            // 10.0 File API & 10.0 <output>
            document.writeln(' - Internet Explorer: Not supported (partial support expected in 10.0)<br />');
            // ? File API & 5.1 <output>
            document.writeln(' - Safari: Not supported<br />');
            // ? File API & 9.2 <output>
            document.writeln(' - Opera: Not supported');
            return false;
        }
    },
    addOrdinal: function addOrdinal(n) {
        var str = n.toString().slice(-1),
            ord = '';
        switch (str) {
            case '1':
                ord = 'st';
                break;
            case '2':
                ord = 'nd';
                break;
            case '3':
                ord = 'rd';
                break;
            case '4':
            case '5':
            case '6':
            case '7':
            case '8':
            case '9':
            case '0':
                ord = 'th';
                break;
        }
        return n + ord;
    },

    /**
     *
     * @param value
     * @param arr
     * @param prop
     * @returns {number}
     */
    getIndex: function getIndex(value, arr, prop) {
        for (var i = 0; i < arr.length; i++) {
            if (arr[i][prop] === value) {
                return i;
            }
        }
        return -1; //to handle the case where the value doesn't exist
    }
};

/***/ }),

/***/ "./src/AppBundle/Resources/public/javascript/main/actions/userActions.js":
/*!*******************************************************************************!*\
  !*** ./src/AppBundle/Resources/public/javascript/main/actions/userActions.js ***!
  \*******************************************************************************/
/*! exports provided: updateProfile */
/*! exports used: updateProfile */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return updateProfile; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__reducers_user__ = __webpack_require__(/*! ../reducers/user */ "./src/AppBundle/Resources/public/javascript/main/reducers/user.js");


var updateProfile = function updateProfile(profile) {
    return {
        type: __WEBPACK_IMPORTED_MODULE_0__reducers_user__["b" /* userTypes */].PROFILE,
        profile: profile
    };
};

/***/ }),

/***/ "./src/AppBundle/Resources/public/javascript/main/actions/utils.js":
/*!*************************************************************************!*\
  !*** ./src/AppBundle/Resources/public/javascript/main/actions/utils.js ***!
  \*************************************************************************/
/*! exports provided: getCurrencySymbol, goTo, historyGoTo, goToListing, viewLicense, viewLicenseBid, viewLicenseBundle, viewLicenseCustom, goToMarketplace, goToClosedDeals, getFee, getFullName, limitText, editedProgramSelected, parseSeasons */
/*! exports used: editedProgramSelected, getCurrencySymbol, getFee, getFullName, goTo, goToListing, limitText, parseSeasons, viewLicense, viewLicenseBid, viewLicenseBundle, viewLicenseCustom */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "b", function() { return getCurrencySymbol; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "e", function() { return goTo; });
/* unused harmony export historyGoTo */
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "f", function() { return goToListing; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "i", function() { return viewLicense; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "j", function() { return viewLicenseBid; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "k", function() { return viewLicenseBundle; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "l", function() { return viewLicenseCustom; });
/* unused harmony export goToMarketplace */
/* unused harmony export goToClosedDeals */
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "c", function() { return getFee; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "d", function() { return getFullName; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "g", function() { return limitText; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return editedProgramSelected; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "h", function() { return parseSeasons; });
var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

var getCurrencySymbol = function getCurrencySymbol(code) {
    return code === "EUR" ? "€" : "$";
};

var goTo = function goTo(route, openNew) {

    if (openNew) {
        window.open(envhosturl + route, "_blank");
    } else {
        window.location.href = envhosturl + route;
    }
};

var historyGoTo = function historyGoTo(route) {
    window.history.pushState(null, null, envhosturl + route);
};

var goToListing = function goToListing(id, openNew) {
    goTo("listing/" + id, openNew);
};

var viewLicense = function viewLicense(id) {
    goTo("license/preview/" + id);
};

var viewLicenseBid = function viewLicenseBid(id) {
    goTo("license/bid/" + id);
};

var viewLicenseBundle = function viewLicenseBundle(id, listingId) {
    goTo("license/bundle/" + id + "/" + listingId);
};

var viewLicenseCustom = function viewLicenseCustom(listingId, bundleId, bid) {

    var serialize = function serialize(obj, prefix) {
        var str = [],
            p;
        for (p in obj) {
            if (obj.hasOwnProperty(p)) {
                var k = prefix ? prefix + "[" + p + "]" : p,
                    v = obj[p];
                str.push(v !== null && (typeof v === "undefined" ? "undefined" : _typeof(v)) === "object" ? serialize(v, k) : encodeURIComponent(k) + "=" + encodeURIComponent(v));
            }
        }
        return str.join("&");
    };

    //let queryString = Object.keys(bundle).map(key => key + '=' + bundle[key]).join('&');
    goTo("license/custom/" + listingId + "/" + bundleId + "?" + serialize({ bid: bid }));
};

var goToMarketplace = function goToMarketplace() {
    goTo("marketplace");
};

var goToClosedDeals = function goToClosedDeals() {
    goTo("closeddeals");
};

var getFee = function getFee(salesPackage) {
    var feeNumber = parseFloat(salesPackage.fee);
    return feeNumber.toLocaleString() + " " + getCurrencySymbol(salesPackage.currency.code);
};

var getFullName = function getFullName(user) {
    return user.firstName + " " + user.lastName;
};

var limitText = function limitText(txt) {
    var limit = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 25;

    return txt.length > limit ? txt.substring(0, limit) + "..." : txt;
};

var editedProgramSelected = function editedProgramSelected(rights) {
    return rights.filter(function (r) {
        return r.shortLabel === 'PR';
    }).length === 1;
};

var parseSeasons = function parseSeasons(content) {
    if (content.seasons === undefined) return content;
    content.seasons.forEach(function (season) {
        season.selectedSchedules = {};

        if (season.schedules === undefined) return;

        Object.entries(season.schedules).filter(function (round) {
            if (!round || round.length <= 1) return false;
            return round[1].selected;
        }).map(function (round) {
            if (!season.selectedSchedules[round[0]]) season.selectedSchedules[round[0]] = { matches: [] };
            if (round[1].selected) {
                Array.from(round[1].matches.values()).filter(function (match) {
                    return match.selected;
                }).forEach(function (match) {
                    season.selectedSchedules[round[0]].matches.push(match);
                });
            }
        });
    });

    return content;
};

/***/ }),

/***/ "./src/AppBundle/Resources/public/javascript/main/components/CommercialSalesBundle.js":
/*!********************************************************************************************!*\
  !*** ./src/AppBundle/Resources/public/javascript/main/components/CommercialSalesBundle.js ***!
  \********************************************************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_react__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_moment_moment__ = __webpack_require__(/*! moment/moment */ "./node_modules/moment/moment.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_moment_moment___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_moment_moment__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_react_table__ = __webpack_require__(/*! react-table */ "./node_modules/react-table/es/index.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_react_modal__ = __webpack_require__(/*! react-modal */ "./node_modules/react-modal/lib/index.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_react_modal___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_3_react_modal__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__main_components_DigitalSignature__ = __webpack_require__(/*! ../../main/components/DigitalSignature */ "./src/AppBundle/Resources/public/javascript/main/components/DigitalSignature.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__actions_utils__ = __webpack_require__(/*! ../actions/utils */ "./src/AppBundle/Resources/public/javascript/main/actions/utils.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__Icons__ = __webpack_require__(/*! ./Icons */ "./src/AppBundle/Resources/public/javascript/main/components/Icons.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__styles_custom__ = __webpack_require__(/*! ../styles/custom */ "./src/AppBundle/Resources/public/javascript/main/styles/custom.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__main_components_SendMessage__ = __webpack_require__(/*! ../../main/components/SendMessage */ "./src/AppBundle/Resources/public/javascript/main/components/SendMessage.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9_prop_types__ = __webpack_require__(/*! prop-types */ "./node_modules/prop-types/index.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9_prop_types___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_9_prop_types__);
var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }













var CommercialSalesBundle = function (_React$Component) {
    _inherits(CommercialSalesBundle, _React$Component);

    function CommercialSalesBundle(props) {
        _classCallCheck(this, CommercialSalesBundle);

        var _this2 = _possibleConstructorReturn(this, (CommercialSalesBundle.__proto__ || Object.getPrototypeOf(CommercialSalesBundle)).call(this, props));

        _this2.acceptBid = function () {
            var signature = _this2.state.signature;
            var contentId = _this2.props.contentId;

            var selectedBid = _this2.state.selectedBid;
            selectedBid.content = contentId;
            _this2.setState({ saving: true });
            ContentArena.ContentApi.acceptBid(selectedBid, signature).done(function (response) {
                _this2.setState({ approveModalIsOpen: false, saving: false });
                _this2.props.onUpdate();
            });
        };

        _this2.removeBid = function () {
            var selectedBid = _this2.state.selectedBid;
            _this2.setState({ saving: true });
            ContentArena.ContentApi.removeBid(selectedBid).done(function (response) {
                //this.setState({removeModalIsOpen : false, saving : false})
                _this2.props.onUpdate();
            });
        };

        _this2.rejectBid = function () {
            var selectedBid = _this2.state.selectedBid;
            selectedBid.message = _this2.state.message;
            _this2.setState({ saving: true });
            ContentArena.ContentApi.rejectBid(selectedBid).always(function (response) {
                _this2.setState({ rejectModalIsOpen: false, saving: false });
                _this2.props.onUpdate();
            });
        };

        _this2.closeRemoveModal = function () {
            _this2.setState({ removeModalIsOpen: false });
        };

        _this2.closeApproveModal = function () {
            _this2.setState({ approveModalIsOpen: false });
        };

        _this2.closeRejectModal = function () {
            _this2.setState({ rejectModalIsOpen: false });
        };

        _this2.renderApproveModal = function () {
            var salesBundle = _this2.props.salesBundle;
            var _this2$state = _this2.state,
                signature = _this2$state.signature,
                saving = _this2$state.saving;


            return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                __WEBPACK_IMPORTED_MODULE_3_react_modal___default.a,
                {
                    isOpen: _this2.state.approveModalIsOpen,
                    onRequestClose: _this2.closeApproveModal,
                    bodyOpenClassName: "generic-modal",
                    style: __WEBPACK_IMPORTED_MODULE_7__styles_custom__["a" /* GenericModalStyle */]
                },
                __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                    "div",
                    { className: "generic-modal-container" },
                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        "div",
                        { className: "title" },
                        "Are you sure you want to accept this bid?",
                        _this2.context.t("Yes")
                    ),
                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        "div",
                        { className: "container" },
                        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_4__main_components_DigitalSignature__["a" /* default */], { signature: signature, onReady: function onReady(signature) {
                                _this2.setState({ signature: signature });
                            } })
                    ),
                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        "div",
                        { className: "buttons" },
                        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                            "button",
                            { onClick: _this2.closeApproveModal },
                            "Cancel"
                        ),
                        !saving && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                            "button",
                            { className: "confirm", disabled: !signature, onClick: _this2.acceptBid },
                            "Accept Bid",
                            _this2.context.t("Yes")
                        ),
                        saving && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement("i", { className: "fa fa-spin fa-cog" })
                    )
                )
            );
        };

        _this2.renderRejectModal = function () {
            var salesBundle = _this2.props.salesBundle;
            var _this2$state2 = _this2.state,
                saving = _this2$state2.saving,
                message = _this2$state2.message;


            return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                __WEBPACK_IMPORTED_MODULE_3_react_modal___default.a,
                {
                    isOpen: _this2.state.rejectModalIsOpen,
                    onRequestClose: _this2.closeRejectModal,
                    bodyOpenClassName: "generic-modal",
                    style: __WEBPACK_IMPORTED_MODULE_7__styles_custom__["a" /* GenericModalStyle */]
                },
                __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                    "div",
                    { className: "generic-modal-container" },
                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        "div",
                        { className: "title" },
                        "Are you sure you want to decline this bid?",
                        _this2.context.t("Yes")
                    ),
                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        "div",
                        { className: "container" },
                        "Enter Message (optional)",
                        _this2.context.t("Yes"),
                        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement("textarea", { onChange: function onChange(e) {
                                _this2.setState({ message: e.target.value });
                            }, value: message })
                    ),
                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        "div",
                        { className: "buttons" },
                        !saving && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                            "button",
                            { className: "confirm", onClick: _this2.rejectBid },
                            "Confirm"
                        ),
                        saving && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement("i", { className: "fa fa-spin fa-cog" }),
                        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                            "button",
                            { onClick: _this2.closeRejectModal },
                            "Cancel",
                            _this2.context.t("Yes")
                        )
                    )
                )
            );
        };

        _this2.renderRemoveModal = function () {
            var saving = _this2.state.saving;


            return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                __WEBPACK_IMPORTED_MODULE_3_react_modal___default.a,
                {
                    isOpen: _this2.state.removeModalIsOpen,
                    onRequestClose: _this2.closeRemoveModal,
                    bodyOpenClassName: "generic-modal",
                    style: __WEBPACK_IMPORTED_MODULE_7__styles_custom__["a" /* GenericModalStyle */]
                },
                __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                    "div",
                    { className: "generic-modal-container" },
                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        "div",
                        { className: "title" },
                        "Are you sure you want to remove this bid?",
                        _this2.context.t("Yes")
                    ),
                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement("div", { className: "container" }),
                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        "div",
                        { className: "buttons" },
                        !saving && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                            "button",
                            { onClick: _this2.removeBid, className: "confirm" },
                            "Confirm",
                            _this2.context.t("Yes")
                        ),
                        saving && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement("i", { className: "fa fa-spin fa-cog" }),
                        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                            "button",
                            { onClick: _this2.closeRemoveModal },
                            _this2.context.t("Yes"),
                            "Cancel"
                        )
                    )
                )
            );
        };

        _this2.state = {
            approveModalIsOpen: false,
            rejectModalIsOpen: false,
            removeModalIsOpen: false,
            showBids: props.bidsOpen

        };
        return _this2;
    }

    _createClass(CommercialSalesBundle, [{
        key: "componentWillReceiveProps",
        value: function componentWillReceiveProps() {
            this.setState({ removeModalIsOpen: false, saving: false });
        }
    }, {
        key: "render",
        value: function render() {
            var _this3 = this;

            var _props = this.props,
                salesBundle = _props.salesBundle,
                company = _props.company,
                onDelete = _props.onDelete,
                contentId = _props.contentId;
            var showBids = this.state.showBids;


            var closedDeals = salesBundle.bids.filter(function (b) {
                return b.status.name === "APPROVED";
            });
            var totalFee = closedDeals.length > 0 ? closedDeals.map(function (b) {
                return Number(b.totalFee);
            }).reduce(function (t, n) {
                return t + n;
            }) : null;
            var _this = this;

            return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                "div",
                { className: "commercial-sales-bundles" },
                this.renderApproveModal(),
                this.renderRejectModal(),
                this.renderRemoveModal(),
                __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                    "div",
                    { className: "commercial-sales-bundles-container" },
                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        "div",
                        { className: "sales-bundle-item" },
                        salesBundle.bundleMethod === "SELL_AS_BUNDLE" && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement("img", { style: { width: 26, height: 23 }, src: __WEBPACK_IMPORTED_MODULE_6__Icons__["m" /* fixedIcon */] }),
                        salesBundle.name
                    ),
                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        "div",
                        { className: "sales-bundle-item" },
                        salesBundle.fee > 0 && Object(__WEBPACK_IMPORTED_MODULE_5__actions_utils__["c" /* getFee */])(salesBundle),
                        salesBundle.salesMethod === "BIDDING" && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement("img", { style: { width: 23, height: 23 }, src: __WEBPACK_IMPORTED_MODULE_6__Icons__["c" /* bidIcon */] })
                    ),
                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        "div",
                        { className: "sales-bundle-item-right", style: { marginLeft: 'auto' } },
                        this.context.t(["closed deal", "closed deals", "n"], { n: closedDeals.length })
                    ),
                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        "div",
                        { className: "sales-bundle-item-right" },
                        this.context.t(["open bid", "open bids", "n"], { n: salesBundle.bids.filter(function (b) {
                                return b.status.name === "PENDING";
                            }).length })
                    ),
                    totalFee && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        "div",
                        { className: "sales-bundle-item-right" },
                        totalFee,
                        " ",
                        Object(__WEBPACK_IMPORTED_MODULE_5__actions_utils__["b" /* getCurrencySymbol */])(salesBundle.currency.code)
                    ),
                    salesBundle.bids.length > 0 && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        "div",
                        { className: "sales-bundle-show-bids",
                            onClick: function onClick() {
                                _this3.setState({ showBids: !showBids });
                            } },
                        !showBids && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement("img", { src: __WEBPACK_IMPORTED_MODULE_6__Icons__["b" /* addIcon */] }),
                        showBids && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement("img", { src: __WEBPACK_IMPORTED_MODULE_6__Icons__["g" /* cancelIcon */] })
                    )
                ),
                showBids && salesBundle.bids.length > 0 && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                    "div",
                    null,
                    salesBundle.bids.map(function (b) {
                        return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_8__main_components_SendMessage__["a" /* default */], { role: 'SELLER',
                            ref: "messagePopup" + b.id,
                            listingId: contentId, recipient: b.buyerUser.company });
                    }),
                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_2_react_table__["default"], {
                        className: "ca-table",
                        defaultPageSize: 30,
                        showPageSizeOptions: false,
                        showPagination: false,
                        onPageChange: this.onPageChange,
                        minRows: 0,
                        resizable: false,
                        data: salesBundle.bids,
                        select: this.props.select,
                        columns: [{
                            accessor: function accessor(d) {
                                return d.buyerUser.company.legalName;
                            },
                            Cell: function Cell(props) {
                                return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                    "div",
                                    null,
                                    props.value
                                );
                            },
                            Header: this.context.t("Buyer"),
                            headerClassName: 'table-header-big',
                            className: 'table-header-big',
                            id: "company"
                        }, {
                            Header: this.context.t("Fee"),
                            headerClassName: 'table-header',
                            className: 'table-header',
                            id: "price",
                            accessor: function accessor(d) {
                                return { fee: d.totalFee, currency: salesBundle.currency.code };
                            },
                            Cell: function Cell(props) {
                                return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                    "div",
                                    { className: "blue" },
                                    props.value.fee + " " + Object(__WEBPACK_IMPORTED_MODULE_5__actions_utils__["b" /* getCurrencySymbol */])(props.value.currency)
                                );
                            }
                        }, {
                            Header: this.context.t("User"),
                            headerClassName: 'table-header-big',
                            className: 'table-header-big',
                            accessor: 'buyerUser',
                            Cell: function Cell(props) {
                                return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                    "div",
                                    null,
                                    props.value.firstName + " " + props.value.lastName
                                );
                            }

                        }, {
                            Header: this.context.t("Action"),
                            headerClassName: 'table-header',
                            className: 'table-header',
                            accessor: 'status.name',
                            Cell: function Cell(props) {
                                return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                    "div",
                                    null,
                                    props.value === "APPROVED" && "Closed Deal",
                                    props.value === "PENDING" && "Bid Placed",
                                    props.value === "REJECTED" && "Bid Declined"
                                );
                            }

                        }, {
                            Header: this.context.t("Action date"),
                            headerClassName: 'table-header',
                            className: 'table-header',
                            accessor: 'createdAt',
                            Cell: function Cell(props) {
                                return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                    "div",
                                    null,
                                    __WEBPACK_IMPORTED_MODULE_1_moment_moment___default()(props.value).format('DD/MM/YYYY')
                                );
                            }

                        }, {
                            headerClassName: 'table-header',
                            className: 'table-header',
                            Header: '',
                            id: "actions",
                            accessor: function accessor(b) {
                                return { status: b.status.name, bid: b };
                            },
                            Cell: function Cell(props) {
                                return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                    "div",
                                    { className: "" },
                                    props.value.status === "REJECTED" && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement("img", { style: { margin: '0 10px', cursor: 'pointer' }, onClick: function onClick() {
                                            _this3.setState({ showRemoveConfirm: true, selectedBidForDeletion: props.value.bid });
                                        }, src: __WEBPACK_IMPORTED_MODULE_6__Icons__["f" /* bucketIcon */] }),
                                    props.value.status === "PENDING" && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement("img", { style: { margin: '0 10px', cursor: 'pointer' }, onClick: function onClick() {
                                            _this3.setState({ approveModalIsOpen: true, selectedBid: props.value.bid });
                                        }, src: __WEBPACK_IMPORTED_MODULE_6__Icons__["d" /* blueCheckIcon */] }),
                                    props.value.status === "PENDING" && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement("img", { style: { margin: '0 10px', cursor: 'pointer' }, onClick: function onClick() {
                                            _this3.setState({ rejectModalIsOpen: true, selectedBid: props.value.bid });
                                        }, src: __WEBPACK_IMPORTED_MODULE_6__Icons__["g" /* cancelIcon */] }),
                                    props.value.status === "APPROVED" && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement("img", { style: { margin: '0 10px', cursor: 'pointer' }, onClick: function onClick() {
                                            Object(__WEBPACK_IMPORTED_MODULE_5__actions_utils__["j" /* viewLicenseBid */])(props.value.bid.customId);
                                        }, src: __WEBPACK_IMPORTED_MODULE_6__Icons__["i" /* docIcon */] }),
                                    props.value.status === "APPROVED" && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement("img", { style: { margin: '0 10px', cursor: 'pointer' }, onClick: function onClick() {
                                            _this.refs["messagePopup" + props.value.bid.id].open();
                                        }, src: __WEBPACK_IMPORTED_MODULE_6__Icons__["e" /* blueEnvelopeIcon */] }),
                                    _this3.state.showRemoveConfirm && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                        "div",
                                        { className: "confirmation-tooltip" },
                                        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                            "div",
                                            { className: "confirmation-text", style: { whiteSpace: 'normal' } },
                                            _this3.context.t("Are you sure you want to remove this bid?")
                                        ),
                                        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                            "button",
                                            { className: "button button-confirm", onClick: function onClick(e) {
                                                    onDelete(_this3.state.selectedBidForDeletion.id);
                                                    _this3.setState({ showRemoveConfirm: false, selectedBidForDeletion: null });
                                                    e.stopPropagation();
                                                } },
                                            _this3.context.t("Remove")
                                        ),
                                        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                            "button",
                                            { className: "button", onClick: function onClick(e) {
                                                    _this3.setState({ showRemoveConfirm: false, selectedBidForDeletion: null });
                                                    e.stopPropagation();
                                                } },
                                            _this3.context.t("Cancel")
                                        )
                                    )
                                );
                            }
                        }]
                    })
                )
            );
        }
    }]);

    return CommercialSalesBundle;
}(__WEBPACK_IMPORTED_MODULE_0_react___default.a.Component);

CommercialSalesBundle.contextTypes = {
    t: __WEBPACK_IMPORTED_MODULE_9_prop_types__["PropTypes"].func.isRequired
};

/* harmony default export */ __webpack_exports__["a"] = (CommercialSalesBundle);

/***/ }),

/***/ "./src/AppBundle/Resources/public/javascript/main/components/ContentListing.js":
/*!*************************************************************************************!*\
  !*** ./src/AppBundle/Resources/public/javascript/main/components/ContentListing.js ***!
  \*************************************************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_react__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_moment_moment__ = __webpack_require__(/*! moment/moment */ "./node_modules/moment/moment.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_moment_moment___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_moment_moment__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__buy_components_ContentListingEventDetails__ = __webpack_require__(/*! ../../buy/components/ContentListingEventDetails */ "./src/AppBundle/Resources/public/javascript/buy/components/ContentListingEventDetails.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__buy_components_ContentListingRightsPackage__ = __webpack_require__(/*! ../../buy/components/ContentListingRightsPackage */ "./src/AppBundle/Resources/public/javascript/buy/components/ContentListingRightsPackage.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_prop_types__ = __webpack_require__(/*! prop-types */ "./node_modules/prop-types/index.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_prop_types___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_4_prop_types__);
var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }







var ContentListing = function (_React$Component) {
    _inherits(ContentListing, _React$Component);

    function ContentListing(props) {
        _classCallCheck(this, ContentListing);

        var _this = _possibleConstructorReturn(this, (ContentListing.__proto__ || Object.getPrototypeOf(ContentListing)).call(this, props));

        _this.getFee = function (salesPackage) {
            var feeNumber = parseFloat(salesPackage.fee);
            return feeNumber.toLocaleString() + " " + _this.getCurrencySymbol();
        };

        _this.getCurrencySymbol = function () {
            var currency = _this.props.currency;

            return currency === "EUR" ? "€" : "$";
        };

        _this.onSelect = function () {
            var _this$props = _this.props,
                onSelect = _this$props.onSelect,
                customId = _this$props.customId;


            if (onSelect) onSelect(customId);
        };

        _this.confirmRemoveFromWatchlist = function (e) {
            _this.setState({ confirmWatchlistRemove: true });
            e.stopPropagation();
        };

        _this.cancelRemoveFromWatchlist = function (e) {
            _this.setState({ confirmWatchlistRemove: false });
            e.stopPropagation();
        };

        _this.removeFromWatchlist = function (e) {
            var _this$props2 = _this.props,
                customId = _this$props2.customId,
                onWatchlistRemove = _this$props2.onWatchlistRemove;

            ContentArena.Api.watchlist(customId);

            if (onWatchlistRemove) onWatchlistRemove(customId);
            e.stopPropagation();
        };

        _this.sortSalesPackages = function (a, b) {
            if (b.territoriesMethod === "WORLDWIDE") return -1;
            return _this.compareProperty(a.territories.length, b.territories.length) || _this.compareProperty(b.name, a.name);
        };

        _this.sortAfterFilter = function (a, b) {

            if (b.territoriesMethod === "WORLDWIDE") {
                return _this.compareProperty(b.territories.length, a.territories.length) || _this.compareProperty(a.name, b.name);
            }

            return _this.compareProperty(a.territories.length, b.territories.length) || _this.compareProperty(a.name, b.name);
        };

        _this.sortByFilter = function (salesPackages) {
            var filter = _this.props.filter;


            var temp = [];
            var territories = filter.countries.map(function (c) {
                return c.value;
            });

            salesPackages.forEach(function (e, i, l) {

                var t = e.territories.map(function (t) {
                    return t.value;
                });
                var et = e.territoriesMethod === "WORLDWIDE_EXCLUDING" ? e.excludedTerritories.map(function (t) {
                    return t.value;
                }) : [];
                var all = [].concat(_toConsumableArray(t), _toConsumableArray(et));
                var include = false;

                territories.forEach(function (t) {
                    if (all.indexOf(t) !== -1) include = true;
                });

                if (e.bundleMethod === "SELL_AS_BUNDLE" && e.territoriesMethod === "WORLDWIDE") {
                    include = true;
                }

                if (include) {
                    temp.push(e);
                }
            });

            return [].concat(temp);
        };

        _this.compareProperty = function (a, b) {
            return a > b ? 1 : b > a ? -1 : 0;
        };

        _this.state = {
            buyingMode: false
        };
        _this.noImage = assetsBaseDir + "app/images/no-image.png";
        _this.bidIcon = assetsBaseDir + "app/images/hammer.png";
        _this.fixedIcon = assetsBaseDir + "app/images/bid.png";
        _this.blueCheck = assetsBaseDir + "app/images/blue_check.png";
        _this.yellowCheck = assetsBaseDir + "app/images/yellow_chech.png";
        _this.bucketicon = assetsBaseDir + "app/images/bucket.png";
        return _this;
    }

    _createClass(ContentListing, [{
        key: "render",
        value: function render() {
            var _this2 = this;

            var _props = this.props,
                name = _props.name,
                expiresAt = _props.expiresAt,
                PROGRAM_NAME = _props.PROGRAM_NAME,
                onSelectName = _props.onSelectName,
                imageBase64 = _props.imageBase64,
                image = _props.image,
                filter = _props.filter,
                sortSalesPackages = _props.sortSalesPackages,
                watchlistRemove = _props.watchlistRemove;
            var rightsPackage = this.props.rightsPackage;

            rightsPackage = rightsPackage.slice(-6);

            var confirmWatchlistRemove = this.state.confirmWatchlistRemove;


            var salesPackages = this.props.salesPackages;
            var listingImage = imageBase64 ? imageBase64 : image ? assetsBaseDir + "../" + image : this.noImage;

            if (filter && filter.countries.length > 0 && sortSalesPackages) {
                salesPackages = this.sortByFilter(salesPackages);
                salesPackages.sort(this.sortAfterFilter);
            } else {
                salesPackages.sort(this.sortSalesPackages).reverse();
            }

            return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                "div",
                { className: "listing-list-view", onClick: this.onSelect },
                __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                    "div",
                    { className: "left" },
                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        "div",
                        { className: "image" },
                        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement("img", { src: listingImage })
                    )
                ),
                __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                    "div",
                    { className: "right" },
                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        "div",
                        { className: "name", onClick: function onClick() {
                                if (onSelectName) onSelectName();
                            } },
                        name
                    ),
                    watchlistRemove && !confirmWatchlistRemove && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement("img", { style: {
                            cursor: 'pointer',
                            position: 'absolute',
                            right: 0,
                            top: 0,
                            margin: '0 5px'

                        }, src: this.bucketicon, onClick: this.confirmRemoveFromWatchlist }),
                    confirmWatchlistRemove && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        "div",
                        { style: {
                                position: 'absolute',
                                right: 0,
                                top: 0,
                                margin: '0 5px',
                                border: '1px solid lightgrey',
                                padding: 5,
                                fontSize: 13
                            } },
                        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                            "span",
                            null,
                            this.context.t("Remove from Watchlist?")
                        ),
                        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                            "span",
                            { onClick: this.removeFromWatchlist, style: {
                                    cursor: 'pointer',
                                    margin: '0 15px',
                                    color: 'red'
                                } },
                            this.context.t("Yes")
                        ),
                        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                            "span",
                            { onClick: this.cancelRemoveFromWatchlist, style: {
                                    cursor: 'pointer',
                                    color: 'green'
                                } },
                            this.context.t("Cancel")
                        )
                    ),
                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        "div",
                        { className: "listing-wrapper" },
                        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_2__buy_components_ContentListingEventDetails__["a" /* default */], this.props),
                        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_3__buy_components_ContentListingRightsPackage__["a" /* default */], { rightsPackage: rightsPackage, programName: PROGRAM_NAME })
                    ),
                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        "div",
                        { className: "sales-bundles" },
                        salesPackages.slice(0, 4).map(function (salesPackage, i) {
                            return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                "div",
                                { className: "sales-package", key: "sales-package-" + i },
                                salesPackage.bundleMethod === "SELL_AS_BUNDLE" && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                    "div",
                                    { style: { margin: '0 10px 0 5px' } },
                                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement("img", { style: { width: 26, height: 23 }, src: _this2.fixedIcon })
                                ),
                                __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                    "div",
                                    { style: { cursor: 'default' } },
                                    salesPackage.name
                                ),
                                (salesPackage.salesMethod !== "BIDDING" || salesPackage.salesMethod === "BIDDING" && salesPackage.fee > 0) && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                    "div",
                                    { style: { margin: '0 10px', display: "flex", flex: '1 0 auto' } },
                                    _this2.getFee(salesPackage)
                                ),
                                salesPackage.salesMethod === "BIDDING" && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                    "div",
                                    { style: { margin: '0 10px 0 5px' } },
                                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement("img", { style: { width: 23, height: 23 }, src: _this2.bidIcon })
                                )
                            );
                        }),
                        salesPackages.length > 4 && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                            "div",
                            { className: "sales-package" },
                            __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                "div",
                                { style: { color: '#2DA7E6', padding: '0 15px 0 0px' } },
                                "+ ",
                                salesPackages.length - 4
                            )
                        )
                    )
                )
            );
        }
    }]);

    return ContentListing;
}(__WEBPACK_IMPORTED_MODULE_0_react___default.a.Component);

ContentListing.contextTypes = {
    t: __WEBPACK_IMPORTED_MODULE_4_prop_types__["PropTypes"].func.isRequired
};

/* harmony default export */ __webpack_exports__["a"] = (ContentListing);

/***/ }),

/***/ "./src/AppBundle/Resources/public/javascript/main/components/ContentListingCommercialActivity.js":
/*!*******************************************************************************************************!*\
  !*** ./src/AppBundle/Resources/public/javascript/main/components/ContentListingCommercialActivity.js ***!
  \*******************************************************************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_react__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_moment_moment__ = __webpack_require__(/*! moment/moment */ "./node_modules/moment/moment.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_moment_moment___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_moment_moment__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__buy_components_ContentListingEventDetails__ = __webpack_require__(/*! ../../buy/components/ContentListingEventDetails */ "./src/AppBundle/Resources/public/javascript/buy/components/ContentListingEventDetails.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__buy_components_ContentListingRightsPackage__ = __webpack_require__(/*! ../../buy/components/ContentListingRightsPackage */ "./src/AppBundle/Resources/public/javascript/buy/components/ContentListingRightsPackage.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__main_components_CommercialSalesBundle__ = __webpack_require__(/*! ../../main/components/CommercialSalesBundle */ "./src/AppBundle/Resources/public/javascript/main/components/CommercialSalesBundle.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__ContentListing__ = __webpack_require__(/*! ./ContentListing */ "./src/AppBundle/Resources/public/javascript/main/components/ContentListing.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__actions_utils__ = __webpack_require__(/*! ../actions/utils */ "./src/AppBundle/Resources/public/javascript/main/actions/utils.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__Icons__ = __webpack_require__(/*! ./Icons */ "./src/AppBundle/Resources/public/javascript/main/components/Icons.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8_prop_types__ = __webpack_require__(/*! prop-types */ "./node_modules/prop-types/index.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8_prop_types___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_8_prop_types__);
var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }











var ContentListingCommercialActivity = function (_ContentListing) {
    _inherits(ContentListingCommercialActivity, _ContentListing);

    function ContentListingCommercialActivity(props) {
        _classCallCheck(this, ContentListingCommercialActivity);

        var _this = _possibleConstructorReturn(this, (ContentListingCommercialActivity.__proto__ || Object.getPrototypeOf(ContentListingCommercialActivity)).call(this, props));

        _this.sortSalesPackages = function (a, b) {

            var aOpen = a.bids.filter(function (bid) {
                return bid.status.name === "PENDING";
            }).length > 0;
            var bOpen = b.bids.filter(function (bid) {
                return bid.status.name === "PENDING";
            }).length > 0;
            var aClosed = a.bids.filter(function (bid) {
                return bid.status.name === "APPROVED";
            }).length > 0;
            var bClosed = b.bids.filter(function (bid) {
                return bid.status.name === "APPROVED";
            }).length > 0;
            var aWorldwide = a.territoriesMethod === "WORLDWIDE";
            var bWorldwide = b.territoriesMethod === "WORLDWIDE";

            var open = !aOpen && bOpen ? 1 : !bOpen && aOpen ? -1 : 0;
            var closed = !aClosed && bClosed ? 1 : !bClosed && aClosed ? -1 : 0;
            var worldwide = !aWorldwide && bWorldwide ? 1 : !bWorldwide && aWorldwide ? -1 : 0;

            return open || closed || worldwide || _this.compareProperty(b.territories.length, a.territories.length) || _this.compareProperty(b.name, a.name);
        };

        _this.compareProperty = function (a, b) {
            return a > b ? 1 : b > a ? -1 : 0;
        };

        _this.state = {
            showSalesPackage: props.bundlesOpen
        };
        _this.noImage = assetsBaseDir + "app/images/no-image.png";
        _this.bidIcon = assetsBaseDir + "app/images/hammer.png";
        _this.fixedIcon = assetsBaseDir + "app/images/bid.png";
        _this.blueCheck = assetsBaseDir + "app/images/blue_check.png";
        _this.yellowCheck = assetsBaseDir + "app/images/yellow_chech.png";
        _this.bucketicon = assetsBaseDir + "app/images/bucket.png";
        _this.exclamationIcon = assetsBaseDir + "app/images/Exclamation.png";
        _this.envelopeIcon = assetsBaseDir + "app/images/envelope_2.png";
        return _this;
    }

    _createClass(ContentListingCommercialActivity, [{
        key: "render",
        value: function render() {
            var _this2 = this;

            var _props = this.props,
                name = _props.name,
                onDelete = _props.onDelete,
                onUpdate = _props.onUpdate,
                hideWithoutBids = _props.hideWithoutBids,
                filterByOpenBids = _props.filterByOpenBids,
                filterByClosedDeals = _props.filterByClosedDeals,
                bidsOpen = _props.bidsOpen,
                rightsPackage = _props.rightsPackage,
                imageBase64 = _props.imageBase64,
                image = _props.image,
                company = _props.company,
                id = _props.id;
            var showSalesPackage = this.state.showSalesPackage;


            var salesPackages = this.props.salesPackages;
            salesPackages.sort(this.sortSalesPackages);

            var listingImage = imageBase64 ? imageBase64 : image ? assetsBaseDir + "../" + image : this.noImage;
            var bids = salesPackages.reduce(function (t, sp) {
                return t.concat(sp.bids);
            }, []);
            var closedDeals = bids.filter(function (b) {
                return b.status.name === "APPROVED";
            });
            var openBids = bids.filter(function (b) {
                return b.status.name === "PENDING";
            });
            var total = closedDeals.length > 0 ? closedDeals.map(function (b) {
                return Number(b.totalFee);
            }).reduce(function (t, n) {
                return t + n;
            }) : 0;
            return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                "div",
                { style: { display: 'flex', flexDirection: 'column', marginBottom: 20 } },
                __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                    "div",
                    { className: "listing-list-view", style: { padding: 0, marginBottom: 0 } },
                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        "div",
                        { className: "left", style: { padding: 25 } },
                        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                            "div",
                            { className: "image" },
                            __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement("img", { src: listingImage })
                        )
                    ),
                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        "div",
                        { className: "right", style: { padding: '25px 0' } },
                        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                            "div",
                            { className: "name", onClick: this.onSelect },
                            name
                        ),
                        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                            "div",
                            { className: "listing-wrapper" },
                            __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_2__buy_components_ContentListingEventDetails__["a" /* default */], this.props),
                            __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_3__buy_components_ContentListingRightsPackage__["a" /* default */], { rightsPackage: rightsPackage })
                        )
                    ),
                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        "div",
                        { className: "bid-listing-details" },
                        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                            "div",
                            { className: "item" },
                            __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                "div",
                                null,
                                this.context.t(["closed deal", "closed deals", "n"], { n: closedDeals.length })
                            )
                        ),
                        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                            "div",
                            { className: "item" },
                            __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                "div",
                                null,
                                this.context.t(["open bid", "open bids", "n"], { n: openBids.length })
                            )
                        ),
                        bids.length > 0 && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                            "div",
                            { className: "item", style: { fontWeight: 600 } },
                            __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                "div",
                                null,
                                this.context.t("Commercial Activity Total - {n}", { n: total.toLocaleString("en", { maximumFractionDigits: 2 }) }),
                                Object(__WEBPACK_IMPORTED_MODULE_6__actions_utils__["b" /* getCurrencySymbol */])(salesPackages[0].currency.code)
                            )
                        ),
                        bids.length > 0 && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                            "div",
                            { className: "show-bundle", onClick: function onClick() {
                                    _this2.setState({ showSalesPackage: !showSalesPackage });
                                } },
                            !showSalesPackage && "Show sales bundle",
                            showSalesPackage && "Hide sales bundle",
                            !showSalesPackage && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement("img", { src: __WEBPACK_IMPORTED_MODULE_7__Icons__["b" /* addIcon */] }),
                            showSalesPackage && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement("img", { src: __WEBPACK_IMPORTED_MODULE_7__Icons__["g" /* cancelIcon */] })
                        )
                    )
                ),
                showSalesPackage && salesPackages.map(function (sb, i) {

                    var closed = sb.bids.filter(function (b) {
                        return b.status.name === "APPROVED";
                    });
                    var open = sb.bids.filter(function (b) {
                        return b.status.name === "PENDING";
                    });

                    if (hideWithoutBids && sb.bids.length === 0) return;
                    if (filterByOpenBids && open.length === 0) return;
                    if (filterByClosedDeals && closed.length === 0) return;

                    return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_4__main_components_CommercialSalesBundle__["a" /* default */], {
                        onUpdate: onUpdate,
                        onDelete: onDelete,
                        salesBundle: sb,
                        bidsOpen: bidsOpen,
                        company: company,
                        contentId: id,
                        key: i });
                })
            );
        }
    }]);

    return ContentListingCommercialActivity;
}(__WEBPACK_IMPORTED_MODULE_5__ContentListing__["a" /* default */]);

ContentListingCommercialActivity.contextTypes = {
    t: __WEBPACK_IMPORTED_MODULE_8_prop_types__["PropTypes"].func.isRequired
};

/* harmony default export */ __webpack_exports__["a"] = (ContentListingCommercialActivity);

/***/ }),

/***/ "./src/AppBundle/Resources/public/javascript/main/components/ContentListingPendingBid.js":
/*!***********************************************************************************************!*\
  !*** ./src/AppBundle/Resources/public/javascript/main/components/ContentListingPendingBid.js ***!
  \***********************************************************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_react__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_moment_moment__ = __webpack_require__(/*! moment/moment */ "./node_modules/moment/moment.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_moment_moment___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_moment_moment__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__buy_components_ContentListingEventDetails__ = __webpack_require__(/*! ../../buy/components/ContentListingEventDetails */ "./src/AppBundle/Resources/public/javascript/buy/components/ContentListingEventDetails.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__buy_components_ContentListingRightsPackage__ = __webpack_require__(/*! ../../buy/components/ContentListingRightsPackage */ "./src/AppBundle/Resources/public/javascript/buy/components/ContentListingRightsPackage.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__ContentListing__ = __webpack_require__(/*! ./ContentListing */ "./src/AppBundle/Resources/public/javascript/main/components/ContentListing.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__main_components_SendMessage__ = __webpack_require__(/*! ../../main/components/SendMessage */ "./src/AppBundle/Resources/public/javascript/main/components/SendMessage.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__actions_utils__ = __webpack_require__(/*! ../actions/utils */ "./src/AppBundle/Resources/public/javascript/main/actions/utils.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__Icons__ = __webpack_require__(/*! ./Icons */ "./src/AppBundle/Resources/public/javascript/main/components/Icons.js");
var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }










var ContentListingPendingBid = function (_ContentListing) {
    _inherits(ContentListingPendingBid, _ContentListing);

    function ContentListingPendingBid(props) {
        _classCallCheck(this, ContentListingPendingBid);

        var _this = _possibleConstructorReturn(this, (ContentListingPendingBid.__proto__ || Object.getPrototypeOf(ContentListingPendingBid)).call(this, props));

        _this.state = {};
        _this.noImage = assetsBaseDir + "app/images/no-image.png";
        _this.bidIcon = assetsBaseDir + "app/images/hammer.png";
        _this.fixedIcon = assetsBaseDir + "app/images/bid.png";
        _this.blueCheck = assetsBaseDir + "app/images/blue_check.png";
        _this.yellowCheck = assetsBaseDir + "app/images/yellow_chech.png";
        _this.exclamationIcon = assetsBaseDir + "app/images/Exclamation.png";
        _this.envelopeIcon = assetsBaseDir + "app/images/envelope_2.png";
        return _this;
    }

    _createClass(ContentListingPendingBid, [{
        key: "render",
        value: function render() {
            var _this2 = this;

            var _props = this.props,
                name = _props.name,
                expiresAt = _props.expiresAt,
                onDelete = _props.onDelete,
                rightsPackage = _props.rightsPackage,
                imageBase64 = _props.imageBase64,
                image = _props.image,
                id = _props.id,
                company = _props.company,
                customId = _props.customId,
                bid = _props.bid;
            var _state = this.state,
                showMessage = _state.showMessage,
                showEdited = _state.showEdited;


            var listingImage = imageBase64 ? imageBase64 : image ? assetsBaseDir + "../" + image : this.noImage;

            return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                "div",
                { className: "listing-list-view", style: { padding: 0 } },
                __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_5__main_components_SendMessage__["a" /* default */], { ref: "messagePopup" + id,
                    listingId: id,
                    recipient: company }),
                __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                    "div",
                    { className: "left", style: { padding: 25 } },
                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        "div",
                        { className: "image" },
                        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement("img", { src: listingImage })
                    )
                ),
                __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                    "div",
                    { className: "right", style: { padding: '25px 0' } },
                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        "div",
                        { className: "name", onClick: this.onSelect },
                        name
                    ),
                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        "div",
                        { style: { display: 'flex', alignItems: 'center' } },
                        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                            "div",
                            null,
                            "Expiry: ",
                            __WEBPACK_IMPORTED_MODULE_1_moment_moment___default()(expiresAt).format('DD/MM/YYYY')
                        ),
                        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                            "div",
                            { className: "custom-id" },
                            "#",
                            customId
                        )
                    ),
                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        "div",
                        { className: "company", onClick: function onClick(e) {
                                _this2.refs["messagePopup" + id].open();
                                e.stopPropagation();
                            } },
                        company.legalName,
                        " ",
                        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement("img", { style: { marginLeft: 5 }, src: this.envelopeIcon })
                    ),
                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        "div",
                        { style: { display: 'flex' } },
                        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                            "div",
                            { className: "listing-wrapper", style: { flex: '1 0 0', overflow: 'auto' } },
                            __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_2__buy_components_ContentListingEventDetails__["a" /* default */], this.props),
                            __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_3__buy_components_ContentListingRightsPackage__["a" /* default */], { rightsPackage: rightsPackage })
                        ),
                        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                            "div",
                            { style: {
                                    flex: '240px 0 0',
                                    backgroundColor: '#FAFBFC',
                                    borderLeft: '1px solid #E6E6E6',
                                    alignItems: 'center',
                                    display: 'flex',
                                    flexDirection: 'column',
                                    paddingRop: 15,
                                    justifyContent: 'space-evenly',
                                    padding: '20px 0',
                                    position: 'relative'
                                } },
                            __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                "div",
                                { style: {
                                        display: 'flex',
                                        justifyContent: 'space-evenly',
                                        flexDirection: 'row',
                                        alignItems: 'center',
                                        width: '100%'
                                    } },
                                __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                    "div",
                                    null,
                                    __WEBPACK_IMPORTED_MODULE_1_moment_moment___default()(bid.createdAt).format('DD/MM/YYYY')
                                )
                            ),
                            __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                "div",
                                { style: {
                                        backgroundColor: '#fff',
                                        border: '1px solid lightgrey',
                                        padding: 10,
                                        margin: '0 20px'
                                    } },
                                __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                    "div",
                                    null,
                                    bid.salesPackage.name
                                )
                            ),
                            __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                "div",
                                { style: {
                                        fontSize: 24,
                                        fontWeight: 600,
                                        marginBottom: 10
                                    } },
                                __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                    "div",
                                    null,
                                    bid.amount,
                                    " ",
                                    Object(__WEBPACK_IMPORTED_MODULE_6__actions_utils__["b" /* getCurrencySymbol */])(bid.salesPackage.currency.code)
                                )
                            ),
                            __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                "div",
                                { style: {
                                        display: 'flex',
                                        flexDirection: 'row',
                                        alignItems: 'center',
                                        position: 'relative'
                                    } },
                                bid.status.name === "EDITED" && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement("img", { src: __WEBPACK_IMPORTED_MODULE_7__Icons__["n" /* infoIcon */],
                                    style: {
                                        marginRight: 5,
                                        cursor: 'pointer'
                                    },
                                    onMouseOver: function onMouseOver() {
                                        _this2.setState({ showEdited: true });
                                    },
                                    onMouseLeave: function onMouseLeave() {
                                        _this2.setState({ showEdited: false });
                                    } }),
                                __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                    "a",
                                    { className: "standard-button", style: {
                                            height: 36,
                                            fontSize: 16,
                                            marginBottom: 10
                                        }, href: envhosturl + "listing/" + customId + "/checkout/" + bid.salesPackage.id },
                                    "Increase bid"
                                ),
                                bid.message && bid.message !== "" && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement("img", { src: __WEBPACK_IMPORTED_MODULE_7__Icons__["e" /* blueEnvelopeIcon */],
                                    style: {
                                        marginLeft: 5,
                                        cursor: 'pointer'
                                    },
                                    onMouseOver: function onMouseOver() {
                                        _this2.setState({ showMessage: true });
                                    },
                                    onMouseLeave: function onMouseLeave() {
                                        _this2.setState({ showMessage: false });
                                    } }),
                                showMessage && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                    "div",
                                    { className: "status-tooltip" },
                                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                        "div",
                                        { className: "option" },
                                        bid.message
                                    )
                                ),
                                showEdited && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                    "div",
                                    { className: "status-tooltip" },
                                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                        "div",
                                        { className: "option" },
                                        "Listing edited after last bid. Please review term sheet."
                                    )
                                )
                            ),
                            __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                "div",
                                { style: {
                                        fontSize: 12,
                                        fontWeight: 600
                                    } },
                                __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                    "div",
                                    null,
                                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                        "span",
                                        { style: { fontWeight: 400, fontStyle: 'italic' } },
                                        "Placed by:"
                                    ),
                                    " " + bid.buyerUser.firstName + " " + bid.buyerUser.lastName
                                )
                            ),
                            bid.status.name === "REJECTED" && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                "div",
                                { style: {
                                        position: 'absolute',
                                        cursor: 'pointer',
                                        top: 20,
                                        right: 20
                                    }, onClick: function onClick(e) {
                                        _this2.setState({ showRemoveConfirm: true });
                                        e.stopPropagation();
                                    } },
                                __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement("img", { src: __WEBPACK_IMPORTED_MODULE_7__Icons__["f" /* bucketIcon */] })
                            ),
                            this.state.showRemoveConfirm && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                "div",
                                { className: "confirmation-tooltip" },
                                __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                    "div",
                                    { className: "confirmation-text" },
                                    "Are you sure you want to remove this bid?"
                                ),
                                __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                    "button",
                                    { className: "button button-confirm", onClick: function onClick(e) {
                                            _this2.setState({ showRemoveConfirm: false });
                                            onDelete(bid.id);
                                            e.stopPropagation();
                                        } },
                                    "Remove"
                                ),
                                __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                    "button",
                                    { className: "button", onClick: function onClick(e) {
                                            _this2.setState({ showRemoveConfirm: false });
                                            e.stopPropagation();
                                        } },
                                    "Cancel"
                                )
                            )
                        )
                    )
                )
            );
        }
    }]);

    return ContentListingPendingBid;
}(__WEBPACK_IMPORTED_MODULE_4__ContentListing__["a" /* default */]);

/* harmony default export */ __webpack_exports__["a"] = (ContentListingPendingBid);

/***/ }),

/***/ "./src/AppBundle/Resources/public/javascript/main/components/CountrySelector.js":
/*!**************************************************************************************!*\
  !*** ./src/AppBundle/Resources/public/javascript/main/components/CountrySelector.js ***!
  \**************************************************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_react__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_react_select__ = __webpack_require__(/*! react-select */ "./node_modules/react-select/dist/react-select.es.js");
var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }




var CountrySelector = function (_React$Component) {
    _inherits(CountrySelector, _React$Component);

    function CountrySelector(props) {
        _classCallCheck(this, CountrySelector);

        var _this2 = _possibleConstructorReturn(this, (CountrySelector.__proto__ || Object.getPrototypeOf(CountrySelector)).call(this, props));

        _this2.getOptions = function () {
            var _this2$props = _this2.props,
                _this2$props$filter = _this2$props.filter,
                filter = _this2$props$filter === undefined ? [] : _this2$props$filter,
                available = _this2$props.available;


            var countries = Object.values(ContentArena.Data.Countries).map(function (i, k) {
                return { value: i.name, label: i.name };
            });

            if (available && available.length > 0) countries = available.map(function (i, k) {
                return { value: i, label: i };
            });

            countries = countries.filter(function (country) {
                return filter.indexOf(country.value) === -1;
            });

            return countries;
        };

        _this2.state = {
            countries: []
        };
        return _this2;
    }

    _createClass(CountrySelector, [{
        key: 'componentDidMount',
        value: function componentDidMount() {
            var _this = this;
            if (ContentArena.Data.Countries.length === 0) {
                ContentArena.Api.getCountries().done(function (countries) {
                    ContentArena.Data.Countries = countries;
                    _this.setState({ countries: countries });
                });
            } else {
                _this.setState({ countries: ContentArena.Data.Countries });
            }
        }
    }, {
        key: 'render',
        value: function render() {
            var _props = this.props,
                value = _props.value,
                onChange = _props.onChange,
                className = _props.className,
                _props$multi = _props.multi,
                multi = _props$multi === undefined ? true : _props$multi,
                _props$disabled = _props.disabled,
                disabled = _props$disabled === undefined ? false : _props$disabled;

            return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_1_react_select__["default"], {
                className: className,
                name: 'form-field-name',
                onChange: onChange,
                placeholder: disabled ? 'Disabled' : 'Select...',
                disabled: disabled,
                value: value.length > 200 ? [] : value,
                multi: multi,
                options: this.getOptions()
            });
        }
    }]);

    return CountrySelector;
}(__WEBPACK_IMPORTED_MODULE_0_react___default.a.Component);

/* harmony default export */ __webpack_exports__["a"] = (CountrySelector);

/***/ }),

/***/ "./src/AppBundle/Resources/public/javascript/main/components/DigitalSignature.js":
/*!***************************************************************************************!*\
  !*** ./src/AppBundle/Resources/public/javascript/main/components/DigitalSignature.js ***!
  \***************************************************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_react__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_react_signature_pad__ = __webpack_require__(/*! react-signature-pad */ "./node_modules/react-signature-pad/lib/app.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_react_signature_pad___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_react_signature_pad__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_prop_types__ = __webpack_require__(/*! prop-types */ "./node_modules/prop-types/index.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_prop_types___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2_prop_types__);
var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }





var DigitalSignature = function (_React$Component) {
    _inherits(DigitalSignature, _React$Component);

    function DigitalSignature(props) {
        _classCallCheck(this, DigitalSignature);

        var _this = _possibleConstructorReturn(this, (DigitalSignature.__proto__ || Object.getPrototypeOf(DigitalSignature)).call(this, props));

        _this.clear = function () {
            _this.refs.signature.clear();
        };

        _this.done = function () {
            var blank = _this.state.blank;
            var onReady = _this.props.onReady;
            var signature = _this.refs.signature;


            var data = signature.toDataURL();

            if (data === blank) return;

            _this.setState({ ready: true });
            if (onReady) onReady(data);
        };

        _this.edit = function () {
            var onReady = _this.props.onReady;

            _this.setState({ ready: false });
            if (onReady) onReady(null);
        };

        _this.state = {
            ready: false
        };
        return _this;
    }

    _createClass(DigitalSignature, [{
        key: 'componentDidMount',
        value: function componentDidMount() {
            this.setState({ blank: this.refs.signature.toDataURL() });
        }
    }, {
        key: 'render',
        value: function render() {
            var signature = this.props.signature;
            var ready = this.state.ready;


            return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                'div',
                { className: 'digital-signature' },
                __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                    'div',
                    { className: "digital-signature-placeholder" },
                    this.context.t("Digital Signature")
                ),
                signature && ready && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('img', { style: { width: 800, height: 300, margin: '0 auto' }, src: signature }),
                !ready && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_1_react_signature_pad___default.a, { ref: 'signature' }),
                __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                    'div',
                    { className: "buttons" },
                    !ready && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        'button',
                        { onClick: this.clear, className: 'standard-button-small transparent' },
                        this.context.t("Clear")
                    ),
                    !ready && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        'button',
                        { onClick: this.done, className: 'standard-button-small' },
                        this.context.t("Done")
                    ),
                    ready && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        'button',
                        { onClick: this.edit, className: 'standard-button-big' },
                        this.context.t("New Signature")
                    )
                )
            );
        }
    }]);

    return DigitalSignature;
}(__WEBPACK_IMPORTED_MODULE_0_react___default.a.Component);

DigitalSignature.contextTypes = {
    t: __WEBPACK_IMPORTED_MODULE_2_prop_types__["PropTypes"].func.isRequired
};
/* harmony default export */ __webpack_exports__["a"] = (DigitalSignature);

/***/ }),

/***/ "./src/AppBundle/Resources/public/javascript/main/components/FileSelector.js":
/*!***********************************************************************************!*\
  !*** ./src/AppBundle/Resources/public/javascript/main/components/FileSelector.js ***!
  \***********************************************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function($) {/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_react__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_prop_types__ = __webpack_require__(/*! prop-types */ "./node_modules/prop-types/index.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_prop_types___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_prop_types__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__HeaderBar__ = __webpack_require__(/*! ./HeaderBar */ "./src/AppBundle/Resources/public/javascript/main/components/HeaderBar.js");
var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }





var FileItem = function FileItem(_ref) {
    var item = _ref.item,
        onClick = _ref.onClick;
    return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
        "div",
        { style: {
                border: '1px solid lightgray',
                padding: 10,
                marginTop: 5,
                cursor: 'normal'
            } },
        item.name,
        " ",
        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement("img", { style: { right: 10, position: 'absolute', cursor: 'pointer' }, src: assetsBaseDir + "app/images/cancel.png", onClick: onClick })
    );
};

var imageStyle = {
    maxHeight: 250,
    marginBottom: 5,
    marginTop: 10
};

var FileSelector = function (_Component) {
    _inherits(FileSelector, _Component);

    function FileSelector(props) {
        _classCallCheck(this, FileSelector);

        var _this2 = _possibleConstructorReturn(this, (FileSelector.__proto__ || Object.getPrototypeOf(FileSelector)).call(this, props));

        _this2.handleUploadFile = function (event) {
            var _this2$props = _this2.props,
                isImage = _this2$props.isImage,
                onSelect = _this2$props.onSelect,
                target = _this2$props.target,
                tmp = _this2$props.tmp;

            var _this = _this2;

            _this2.state.form.append(event.target.files[0].size, event.target.files[0]);
            _this2.setState({
                form: _this2.state.form
            });

            if (tmp) {
                _this2.setState({ uploading: true });

                ContentArena.ContentApi.saveTmpFile(event.target.files).then(function (response) {
                    if (onSelect) onSelect(response);
                    _this2.setState({ uploading: false });
                });
            }

            if (isImage) {
                _this2.getBase64(event.target.files[0], function (response) {
                    _this.setState({
                        image: response
                    });

                    if (onSelect) {
                        onSelect(target, response);
                        onSelect("image", null);
                    }
                });
            }
        };

        _this2.getItems = function () {
            var list = [];
            var _iteratorNormalCompletion = true;
            var _didIteratorError = false;
            var _iteratorError = undefined;

            try {
                for (var _iterator = _this2.state.form.values()[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
                    var value = _step.value;

                    list.push(value);
                }
            } catch (err) {
                _didIteratorError = true;
                _iteratorError = err;
            } finally {
                try {
                    if (!_iteratorNormalCompletion && _iterator.return) {
                        _iterator.return();
                    }
                } finally {
                    if (_didIteratorError) {
                        throw _iteratorError;
                    }
                }
            }

            return list;
        };

        _this2.remove = function (name) {
            _this2.state.form.delete(name);
            _this2.setState({ form: _this2.state.form });
        };

        _this2.getBase64 = function (file, cb) {
            var reader = new FileReader();
            reader.readAsDataURL(file);
            reader.onload = function () {
                cb(reader.result);
            };
            reader.onerror = function (error) {
                console.log('Error: ', error);
            };
        };

        var form = new FormData();

        _this2.state = {
            form: form,
            uploading: false,
            accept: props.accept || [".png", ".jpg"]
        };
        return _this2;
    }

    _createClass(FileSelector, [{
        key: "render",
        value: function render() {
            var _this3 = this;

            var _props = this.props,
                label = _props.label,
                isImage = _props.isImage,
                previousImage = _props.previousImage,
                selected = _props.selected,
                onRemove = _props.onRemove;
            var _state = this.state,
                image = _state.image,
                uploading = _state.uploading;


            return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                "div",
                { className: "base-input custom-selector", style: { flexDirection: 'column' } },
                __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                    "div",
                    { style: { display: 'flex' } },
                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        "label",
                        null,
                        label ? label : "Files"
                    ),
                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        "button",
                        {
                            className: "standard-button",
                            disabled: uploading,
                            onClick: function onClick() {
                                $("#input-" + _this3.props.target).trigger("click");
                            } },
                        this.context.t("Upload")
                    ),
                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement("input", {
                        className: "is-hidden",
                        onChange: this.handleUploadFile,
                        accept: this.state.accept.join(", "),
                        id: "input-" + this.props.target,
                        type: "file",
                        name: this.props.target + "[]" }),
                    uploading && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement("i", { className: "fa fa-cog fa-spin" })
                ),
                __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                    "div",
                    null,
                    selected && selected.length > 0 && selected.map(function (s, i) {
                        return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(FileItem, { key: "key-" + i, item: { name: s.name }, onClick: onRemove });
                    }),
                    isImage && image && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement("img", { src: image, style: imageStyle }),
                    previousImage && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement("img", { src: assetsBaseDir + "../" + previousImage,
                        style: imageStyle })
                )
            );
        }
    }]);

    return FileSelector;
}(__WEBPACK_IMPORTED_MODULE_0_react__["Component"]);

FileSelector.contextTypes = {
    t: __WEBPACK_IMPORTED_MODULE_1_prop_types__["PropTypes"].func.isRequired
};

/* harmony default export */ __webpack_exports__["a"] = (FileSelector);
/* WEBPACK VAR INJECTION */}.call(__webpack_exports__, __webpack_require__(/*! jquery */ "./node_modules/jquery/dist/jquery.js")))

/***/ }),

/***/ "./src/AppBundle/Resources/public/javascript/main/components/HeaderBar.js":
/*!********************************************************************************!*\
  !*** ./src/AppBundle/Resources/public/javascript/main/components/HeaderBar.js ***!
  \********************************************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_react__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__actions_utils__ = __webpack_require__(/*! ../actions/utils */ "./src/AppBundle/Resources/public/javascript/main/actions/utils.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_react_router_dom__ = __webpack_require__(/*! react-router-dom */ "./node_modules/react-router-dom/es/index.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_prop_types__ = __webpack_require__(/*! prop-types */ "./node_modules/prop-types/index.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_prop_types___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_3_prop_types__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__HeaderNotifications__ = __webpack_require__(/*! ./HeaderNotifications */ "./src/AppBundle/Resources/public/javascript/main/components/HeaderNotifications.js");
var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }







var HeaderBarTab = function HeaderBarTab(_ref) {
    var match = _ref.match,
        children = _ref.children,
        route = _ref.route;

    return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
        "div",
        { className: match ? "tab active-tab" : "tab" },
        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
            __WEBPACK_IMPORTED_MODULE_2_react_router_dom__["Link"],
            { to: route },
            children
        )
    );
};

var HeaderBar = function (_React$Component) {
    _inherits(HeaderBar, _React$Component);

    function HeaderBar(props) {
        _classCallCheck(this, HeaderBar);

        var _this = _possibleConstructorReturn(this, (HeaderBar.__proto__ || Object.getPrototypeOf(HeaderBar)).call(this, props));

        _this.getLogoUrl = function (tab) {
            var logoUrl = '';
            if (tab === 'MANAGE_LISTINGS') {
                logoUrl = 'managelistings';
            }
            if (tab === 'MARKETPLACE') {
                logoUrl = 'marketplace';
            }
            return logoUrl;
        };

        _this.state = {};

        return _this;
    }

    _createClass(HeaderBar, [{
        key: "render",
        value: function render() {
            var _props = this.props,
                tab = _props.tab,
                profile = _props.profile,
                match = _props.match;

            var logoUrl = this.getLogoUrl(tab);

            return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                "div",
                { className: "manager-header" },
                __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                    "div",
                    { className: "logo", onClick: function onClick() {
                            return Object(__WEBPACK_IMPORTED_MODULE_1__actions_utils__["e" /* goTo */])(logoUrl);
                        } },
                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement("img", { src: assetsBaseDir + "app/images/logo.png", alt: "" })
                ),
                profile === "BUYER" && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                    HeaderBarTab,
                    {
                        match: match.url === "/marketplace",
                        route: "/marketplace" },
                    this.context.t("Marketplace")
                ),
                profile === "BUYER" && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                    HeaderBarTab,
                    {
                        match: match.url === "/watchlist",
                        route: "/watchlist" },
                    this.context.t("Watchlist")
                ),
                profile === "BUYER" && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                    HeaderBarTab,
                    {
                        match: match.url === "/bids/activebids" || match.url === "/bids/declinedbids",
                        route: "/bids/activebids"
                    },
                    this.context.t("Bids")
                ),
                profile === "BUYER" && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                    HeaderBarTab,
                    {
                        match: match.url === "/closeddeals",
                        route: "/closeddeals"
                    },
                    this.context.t("Closed deals")
                ),
                profile === "SELLER" && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                    HeaderBarTab,
                    {
                        match: match.url === "/managelistings",
                        route: "/managelistings" },
                    this.context.t("Manage listings")
                ),
                profile === "SELLER" && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                    HeaderBarTab,
                    {
                        match: match.url === "/commercialactivity",
                        route: "/commercialactivity" },
                    this.context.t("Commercial activity")
                ),
                profile === "SELLER" && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                    HeaderBarTab,
                    {
                        match: match.path === "/contentlisting/:customId?/:step?",
                        route: "/contentlisting/new" },
                    this.context.t("Create Listing")
                ),
                __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement("div", { className: "spacer" }),
                profile === "BUYER" && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                    HeaderBarTab,
                    {
                        className: "tab",
                        route: "/managelistings" },
                    this.context.t("Enter selling mode")
                ),
                profile === "SELLER" && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                    HeaderBarTab,
                    {
                        className: "tab",
                        route: "/marketplace" },
                    this.context.t("Enter buying mode")
                ),
                __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                    HeaderBarTab,
                    {
                        className: "tab",
                        route: "/messages" },
                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement("i", { className: "fa fa-envelope" }),
                    this.context.t("Messages")
                ),
                __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_4__HeaderNotifications__["a" /* default */], null),
                __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                    "div",
                    { className: "settings" },
                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement("i", { className: "fa fa-2x fa-gear" }),
                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        "div",
                        { className: "popup" },
                        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                            "div",
                            { className: "wrap" },
                            __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                HeaderBarTab,
                                {
                                    route: "/settings",
                                    className: "tab" },
                                this.context.t("Settings")
                            ),
                            __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                "a",
                                { href: "/logout", className: "tab" },
                                this.context.t("Logout")
                            )
                        )
                    )
                )
            );
        }
    }]);

    return HeaderBar;
}(__WEBPACK_IMPORTED_MODULE_0_react___default.a.Component);

HeaderBar.contextTypes = {
    t: __WEBPACK_IMPORTED_MODULE_3_prop_types__["PropTypes"].func.isRequired
};

/* harmony default export */ __webpack_exports__["a"] = (HeaderBar);

/***/ }),

/***/ "./src/AppBundle/Resources/public/javascript/main/components/HeaderNotifications.js":
/*!******************************************************************************************!*\
  !*** ./src/AppBundle/Resources/public/javascript/main/components/HeaderNotifications.js ***!
  \******************************************************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_react__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_classnames__ = __webpack_require__(/*! classnames */ "./node_modules/classnames/index.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_classnames___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_classnames__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_lodash_uniqBy__ = __webpack_require__(/*! lodash/uniqBy */ "./node_modules/lodash/uniqBy.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_lodash_uniqBy___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2_lodash_uniqBy__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_lodash_sortBy__ = __webpack_require__(/*! lodash/sortBy */ "./node_modules/lodash/sortBy.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_lodash_sortBy___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_3_lodash_sortBy__);
var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }






var HeaderNotofications = function (_React$Component) {
    _inherits(HeaderNotofications, _React$Component);

    function HeaderNotofications(props) {
        _classCallCheck(this, HeaderNotofications);

        var _this = _possibleConstructorReturn(this, (HeaderNotofications.__proto__ || Object.getPrototypeOf(HeaderNotofications)).call(this, props));

        _this.onNotificationClicked = function (item) {
            var typeName = item.type.name;
            if (typeName === 'MESSAGE') {
                ContentArena.Api.markNotificationAsSeen(item.id);
                document.location.href = '/messages/' + item.referenceId;
            }
        };

        _this.state = {
            dataLoading: true,
            notifications: []
        };
        return _this;
    }

    _createClass(HeaderNotofications, [{
        key: 'componentDidMount',
        value: function componentDidMount() {
            this.loadNotifications();
        }
    }, {
        key: 'render',
        value: function render() {
            var _this2 = this;

            var _state = this.state,
                notifications = _state.notifications,
                dataLoading = _state.dataLoading,
                unseenNotificationsCount = _state.unseenNotificationsCount;

            var nCount = notifications.length;

            return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                'div',
                { className: 'notifications' },
                __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('i', { className: 'fa fa-bell', title: 'Notifications' }),
                !!unseenNotificationsCount && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                    'div',
                    { className: 'counter' },
                    unseenNotificationsCount
                ),
                __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                    'div',
                    { className: 'expanded-list' },
                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        'div',
                        { className: 'caption' },
                        dataLoading ? 'Loading notifications...' : 'Notifications'
                    ),
                    !dataLoading && !!nCount && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        'div',
                        { className: 'items' },
                        notifications.map(function (item) {
                            var id = item.id,
                                seen = item.seen,
                                text = item.text;

                            return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                'div',
                                {
                                    key: 'notification-' + id,
                                    className: __WEBPACK_IMPORTED_MODULE_1_classnames___default()('item', { 'unread': !seen }),
                                    onClick: _this2.onNotificationClicked.bind(_this2, item)
                                },
                                text
                            );
                        })
                    ),
                    !dataLoading && !nCount && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        'div',
                        { className: 'no-notifications' },
                        'No notifications'
                    )
                )
            );
        }
    }, {
        key: 'loadNotifications',
        value: function loadNotifications() {
            var _this3 = this;

            ContentArena.Api.getNotifications().then(function (_ref) {
                var data = _ref.data;

                data.sort(function (a, b) {
                    return b.id - a.id;
                });

                var uniqNotifications = __WEBPACK_IMPORTED_MODULE_2_lodash_uniqBy___default()(data, 'referenceId');
                var unseenNotificationsCount = uniqNotifications.filter(function (item) {
                    return !item.seen;
                }).length;

                _this3.setState({
                    dataLoading: false,
                    unseenNotificationsCount: unseenNotificationsCount,
                    notifications: uniqNotifications
                });
            });
        }
    }]);

    return HeaderNotofications;
}(__WEBPACK_IMPORTED_MODULE_0_react___default.a.Component);

/* harmony default export */ __webpack_exports__["a"] = (HeaderNotofications);

/***/ }),

/***/ "./src/AppBundle/Resources/public/javascript/main/components/Icons.js":
/*!****************************************************************************!*\
  !*** ./src/AppBundle/Resources/public/javascript/main/components/Icons.js ***!
  \****************************************************************************/
/*! exports provided: cancelIcon, bucketIcon, addIcon, exclamationRoundIcon, clockRoundIcon, playIcon, blueCheckIcon, yellowCheckIcon, bidIcon, fixedIcon, docIcon, pdfIcon, editIcon, blueEnvelopeIcon, infoIcon, soldIcon, expiredIcon, Spinner */
/*! exports used: Spinner, addIcon, bidIcon, blueCheckIcon, blueEnvelopeIcon, bucketIcon, cancelIcon, clockRoundIcon, docIcon, editIcon, exclamationRoundIcon, expiredIcon, fixedIcon, infoIcon, pdfIcon, playIcon, soldIcon, yellowCheckIcon */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "g", function() { return cancelIcon; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "f", function() { return bucketIcon; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "b", function() { return addIcon; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "k", function() { return exclamationRoundIcon; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "h", function() { return clockRoundIcon; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "p", function() { return playIcon; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "d", function() { return blueCheckIcon; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "r", function() { return yellowCheckIcon; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "c", function() { return bidIcon; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "m", function() { return fixedIcon; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "i", function() { return docIcon; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "o", function() { return pdfIcon; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "j", function() { return editIcon; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "e", function() { return blueEnvelopeIcon; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "n", function() { return infoIcon; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "q", function() { return soldIcon; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "l", function() { return expiredIcon; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return Spinner; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_react__);


var cancelIcon = assetsBaseDir + "app/images/cancel.png";
var bucketIcon = assetsBaseDir + "app/images/bucket.png";
var addIcon = assetsBaseDir + "app/images/add.png";
var exclamationRoundIcon = assetsBaseDir + "app/images/exclamation_round.png";
var clockRoundIcon = assetsBaseDir + "app/images/clock.png";
var playIcon = assetsBaseDir + "app/images/play.png";
var blueCheckIcon = assetsBaseDir + "app/images/blue_check.png";
var yellowCheckIcon = assetsBaseDir + "app/images/yellow_chech.png";
var bidIcon = assetsBaseDir + "app/images/hammer.png";
var fixedIcon = assetsBaseDir + "app/images/bid.png";
var docIcon = assetsBaseDir + "app/images/doc.png";
var pdfIcon = assetsBaseDir + "app/images/pdf.png";
var editIcon = assetsBaseDir + "app/images/edit.png";
var blueEnvelopeIcon = assetsBaseDir + "app/images/envelope_2.png";
var infoIcon = assetsBaseDir + "app/images/info_blue.png";
var soldIcon = assetsBaseDir + "app/images/sold.png";
var expiredIcon = assetsBaseDir + "app/images/expired.png";

var Spinner = function Spinner(_ref) {
    var test = _ref.test;
    return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
        "div",
        null,
        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement("i", { className: "fa fa-cog fa-spin" })
    );
};

/***/ }),

/***/ "./src/AppBundle/Resources/public/javascript/main/components/LanguageSelector.js":
/*!***************************************************************************************!*\
  !*** ./src/AppBundle/Resources/public/javascript/main/components/LanguageSelector.js ***!
  \***************************************************************************************/
/*! exports provided: LanguageSelector */
/*! exports used: LanguageSelector */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return LanguageSelector; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_react__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_react_select__ = __webpack_require__(/*! react-select */ "./node_modules/react-select/dist/react-select.es.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__data_languages__ = __webpack_require__(/*! ../../../data/languages */ "./src/AppBundle/Resources/public/data/languages.js");




var LanguageSelector = function LanguageSelector(_ref) {
    var value = _ref.value,
        onChange = _ref.onChange;
    return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_1_react_select__["default"], {
        name: 'form-field-name',
        onChange: onChange,
        value: value,
        multi: true,
        options: Object.values(__WEBPACK_IMPORTED_MODULE_2__data_languages__["a" /* languages */]).map(function (i, k) {
            return { value: i.name, label: i.name };
        })
    });
};

/***/ }),

/***/ "./src/AppBundle/Resources/public/javascript/main/components/LicenseDownloader.js":
/*!****************************************************************************************!*\
  !*** ./src/AppBundle/Resources/public/javascript/main/components/LicenseDownloader.js ***!
  \****************************************************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_react__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__Icons__ = __webpack_require__(/*! ./Icons */ "./src/AppBundle/Resources/public/javascript/main/components/Icons.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__actions_utils__ = __webpack_require__(/*! ../actions/utils */ "./src/AppBundle/Resources/public/javascript/main/actions/utils.js");
var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }





var LicenseDownloader = function (_React$Component) {
    _inherits(LicenseDownloader, _React$Component);

    function LicenseDownloader(props) {
        _classCallCheck(this, LicenseDownloader);

        var _this = _possibleConstructorReturn(this, (LicenseDownloader.__proto__ || Object.getPrototypeOf(LicenseDownloader)).call(this, props));

        _this.getLicense = function () {
            var _this$props = _this.props,
                type = _this$props.type,
                id = _this$props.id,
                listingId = _this$props.listingId,
                bundle = _this$props.bundle;

            switch (type) {
                case "BID":
                    Object(__WEBPACK_IMPORTED_MODULE_2__actions_utils__["j" /* viewLicenseBid */])(id);
                    break;
                case "BUNDLE":
                    Object(__WEBPACK_IMPORTED_MODULE_2__actions_utils__["k" /* viewLicenseBundle */])(id, listingId);
                    break;
                case "CUSTOM":
                    Object(__WEBPACK_IMPORTED_MODULE_2__actions_utils__["l" /* viewLicenseCustom */])(listingId, bundle);
                    break;
                default:
                    Object(__WEBPACK_IMPORTED_MODULE_2__actions_utils__["i" /* viewLicense */])(id);
            }
        };

        _this.state = {};
        return _this;
    }

    _createClass(LicenseDownloader, [{
        key: "render",
        value: function render() {
            var _props = this.props,
                _props$style = _props.style,
                style = _props$style === undefined ? {} : _props$style,
                _props$iconStyle = _props.iconStyle,
                iconStyle = _props$iconStyle === undefined ? { height: 23 } : _props$iconStyle;

            return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                "div",
                { style: _extends({}, style, { cursor: 'pointer' }),
                    onClick: this.getLicense },
                __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement("img", { style: iconStyle, src: __WEBPACK_IMPORTED_MODULE_1__Icons__["o" /* pdfIcon */] })
            );
        }
    }]);

    return LicenseDownloader;
}(__WEBPACK_IMPORTED_MODULE_0_react___default.a.Component);

/* harmony default export */ __webpack_exports__["a"] = (LicenseDownloader);

/***/ }),

/***/ "./src/AppBundle/Resources/public/javascript/main/components/NewSeason.js":
/*!********************************************************************************!*\
  !*** ./src/AppBundle/Resources/public/javascript/main/components/NewSeason.js ***!
  \********************************************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_react__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__sell_actions_contentActions__ = __webpack_require__(/*! ../../sell/actions/contentActions */ "./src/AppBundle/Resources/public/javascript/sell/actions/contentActions.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_react_redux__ = __webpack_require__(/*! react-redux */ "./node_modules/react-redux/es/index.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_prop_types__ = __webpack_require__(/*! prop-types */ "./node_modules/prop-types/index.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_prop_types___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_3_prop_types__);
var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }






var NewSeason = function (_React$Component) {
    _inherits(NewSeason, _React$Component);

    function NewSeason(props) {
        _classCallCheck(this, NewSeason);

        var _this = _possibleConstructorReturn(this, (NewSeason.__proto__ || Object.getPrototypeOf(NewSeason)).call(this, props));

        _this.getEndOptions = function () {
            var values = [];
            var _this$props = _this.props,
                index = _this$props.index,
                seasons = _this$props.seasons;

            if (seasons[index].from) {
                values.push(Number(seasons[index].from));
                values.push(Number(seasons[index].from) + 1);

                return values.map(function (value) {
                    return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        "option",
                        { selected: Number(seasons[index].from) === value, value: value },
                        value
                    );
                });
            }

            return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                "option",
                null,
                "Year"
            );
        };

        _this.setDate = function (key, value) {
            var index = _this.props.index;

            _this.props.updateFromMultiple(index, key, value);
        };

        var startYear = 2030;
        var years = [];

        for (var i = 0; i < 81; i++) {
            years.push(startYear - i);
        }

        _this.state = {
            startDate: null,
            endDate: null,
            years: years
        };
        return _this;
    }

    _createClass(NewSeason, [{
        key: "render",
        value: function render() {
            var _this2 = this;

            var _props = this.props,
                index = _props.index,
                seasons = _props.seasons;

            return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                "div",
                null,
                __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                    "div",
                    { className: "base-input" },
                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        "label",
                        null,
                        "Season(s)"
                    ),
                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        "label",
                        { className: "season-selector-label" },
                        "From"
                    ),
                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        "select",
                        {
                            value: seasons[index].from,
                            onChange: function onChange(e) {
                                _this2.setDate('from', e.target.value);
                            } },
                        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement("option", null),
                        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                            "option",
                            { disabled: true },
                            this.context.t("Year")
                        ),
                        this.state.years.map(function (year, i) {
                            return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                "option",
                                { key: i, value: year },
                                year
                            );
                        })
                    ),
                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        "label",
                        { className: "season-selector-label" },
                        "/",
                        this.context.t("To")
                    ),
                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        "select",
                        {
                            value: seasons[index].to,
                            onChange: function onChange(e) {
                                _this2.setDate('to', e.target.value);
                            },
                            disabled: !seasons[index].from },
                        this.getEndOptions(),
                        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                            "option",
                            { value: 0 },
                            this.context.t("Not applicable")
                        )
                    ),
                    this.props.showClose && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        "button",
                        { className: "standard-button", onClick: this.props.onRemove },
                        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement("i", { className: "fa fa-close" })
                    )
                )
            );
        }
    }]);

    return NewSeason;
}(__WEBPACK_IMPORTED_MODULE_0_react___default.a.Component);

NewSeason.contextTypes = {
    t: __WEBPACK_IMPORTED_MODULE_3_prop_types__["PropTypes"].func.isRequired
};

var mapStateToProps = function mapStateToProps(state) {
    return state.content;
};

var mapDispatchToProps = function mapDispatchToProps(dispatch) {
    return {
        updateFromMultiple: function updateFromMultiple(index, key, value) {
            return dispatch({
                type: 'UPDATE_FROM_MULTIPLE',
                selectorType: 'seasons',
                index: index,
                key: key,
                value: value
            });
        }

    };
};

/* harmony default export */ __webpack_exports__["a"] = (Object(__WEBPACK_IMPORTED_MODULE_2_react_redux__["connect"])(mapStateToProps, mapDispatchToProps)(NewSeason));

/***/ }),

/***/ "./src/AppBundle/Resources/public/javascript/main/components/ProgramTypesDefinitions.js":
/*!**********************************************************************************************!*\
  !*** ./src/AppBundle/Resources/public/javascript/main/components/ProgramTypesDefinitions.js ***!
  \**********************************************************************************************/
/*! exports provided: ProgramTypesDefinitions */
/*! exports used: ProgramTypesDefinitions */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return ProgramTypesDefinitions; });
var ProgramTypesDefinitions = {
    HIGHLIGHT_SHOW: "Highlight show",
    DOCUMENTARY: "Documentary",
    PREVIEW: "Preview",
    TALK_SHOW: "Talk show",
    OTHER: "Other"
};

/***/ }),

/***/ "./src/AppBundle/Resources/public/javascript/main/components/SearchCompetition.js":
/*!****************************************************************************************!*\
  !*** ./src/AppBundle/Resources/public/javascript/main/components/SearchCompetition.js ***!
  \****************************************************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_react__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_react_table__ = __webpack_require__(/*! react-table */ "./node_modules/react-table/es/index.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_prop_types__ = __webpack_require__(/*! prop-types */ "./node_modules/prop-types/index.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_prop_types___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2_prop_types__);
var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }





var SearchCompetition = function (_React$Component) {
    _inherits(SearchCompetition, _React$Component);

    function SearchCompetition(props) {
        _classCallCheck(this, SearchCompetition);

        var _this2 = _possibleConstructorReturn(this, (SearchCompetition.__proto__ || Object.getPrototypeOf(SearchCompetition)).call(this, props));

        _this2.search = function () {
            var _this = _this2;

            _this2.setState({
                searching: true
            });

            ContentArena.Api.searchCompetition(_this2.state.input).done(function (results) {
                _this.setState({
                    results: results,
                    searching: false,
                    searchDone: true
                });
                _this.setState({
                    resultMessage: _this.getResultMessage(0)
                });
            });
        };

        _this2.handleInput = function (e) {

            var input = e.target.value;

            _this2.setState(function (prevState) {
                return {
                    valid: input.length > 2,
                    input: input,
                    searchDone: input.length > 0 ? prevState.searchDone : false
                };
            });
        };

        _this2.handleKeyPress = function (e) {
            var _this2$state = _this2.state,
                searching = _this2$state.searching,
                valid = _this2$state.valid;

            if (e.key === 'Enter' && !searching && valid) {
                _this2.search();
            }
        };

        _this2.getResultMessage = function (page) {
            page++;
            var total = _this2.state.results.length;
            var pageTotal = _this2.state.pageSize * page;
            var pageQuantity = page === 1 ? 1 : _this2.state.pageSize * (page - 1) + 1;

            if (pageTotal > total) pageTotal = total;

            return pageQuantity + "-" + pageTotal + " of " + total + " results for '" + _this2.state.input + "'";
        };

        _this2.onPageChange = function (page) {
            var resultMessage = _this2.getResultMessage(page);
            _this2.setState(function () {
                return {
                    resultMessage: resultMessage
                };
            });
        };

        _this2.state = {
            pageSize: 20,
            input: "",
            valid: false,
            searching: false,
            searchDone: false,
            results: [],
            resultMessage: ""
        };
        return _this2;
    }

    _createClass(SearchCompetition, [{
        key: 'render',
        value: function render() {
            var _this3 = this;

            return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                'div',
                { className: 'step-content-container' },
                __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                    'div',
                    { className: 'step-item-description' },
                    this.context.t("Do you want to list competition-based content"),
                    '?'
                ),
                __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                    'div',
                    { className: "base-input" },
                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        'label',
                        null,
                        this.context.t("Competition")
                    ),
                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('input', { type: 'text',
                        onKeyPress: this.handleKeyPress,
                        onChange: this.handleInput,
                        placeholder: this.context.t("Enter competition name (e.g. Bundesliga)") }),
                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        'button',
                        { className: 'standard-button', disabled: !this.state.valid || this.state.searching, onClick: this.search },
                        'Search'
                    )
                ),
                this.state.searching && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                    'div',
                    null,
                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('i', { className: 'fa fa-cog fa-spin' })
                ),
                this.state.searchDone && this.state.results.length > 0 && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                    'div',
                    null,
                    this.state.resultMessage
                ),
                this.state.results.length > 0 && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                    'div',
                    null,
                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_1_react_table__["default"], {
                        defaultPageSize: this.state.pageSize,
                        showPageSizeOptions: false,
                        onPageChange: this.onPageChange,
                        minRows: 0,
                        data: this.state.results,
                        select: this.props.select,
                        className: 'ca-table',
                        columns: [{
                            Header: this.context.t("Competition"),
                            accessor: 'name' // String-based value accessors!
                        }, {
                            Header: this.context.t("Country/Category"),
                            accessor: 'sportCategory.name'
                        }, {
                            accessor: 'sport.name', // Required because our accessor is not a string
                            Header: this.context.t("Sport")
                        }, {
                            Header: '', // Custom header components!
                            Cell: function Cell(props) {
                                return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                    'button',
                                    { className: "blue-button", onClick: function onClick() {
                                            _this3.props.select(props.original);
                                        } },
                                    _this3.context.t("Select")
                                );
                            }
                        }]
                    })
                ),
                __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                    'div',
                    { style: { display: "inline-flex" } },
                    this.state.searchDone && this.state.results.length === 0 && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        'div',
                        null,
                        this.context.t('Your search "{n}" did not match any products.', { n: this.state.input })
                    ),
                    !this.state.searchDone && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        'div',
                        { className: 'step-item-description' },
                        this.context.t("Did you not find your competition in the database or not selling a competition"),
                        '?'
                    ),
                    this.state.searchDone && this.state.results.length > 0 && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        'div',
                        { className: 'step-item-description' },
                        this.context.t("Can't find your competition in our list?")
                    ),
                    this.state.searchDone && this.state.results.length === 0 && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        'div',
                        { className: 'step-item-description' },
                        this.context.t("Try another search or enter content manually")
                    ),
                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        'button',
                        { className: "standard-button standard-button-big", onClick: this.props.close },
                        this.context.t("Enter content manually")
                    )
                )
            );
        }
    }]);

    return SearchCompetition;
}(__WEBPACK_IMPORTED_MODULE_0_react___default.a.Component);

SearchCompetition.contextTypes = {
    t: __WEBPACK_IMPORTED_MODULE_2_prop_types__["PropTypes"].func.isRequired
};

/* harmony default export */ __webpack_exports__["a"] = (SearchCompetition);

/***/ }),

/***/ "./src/AppBundle/Resources/public/javascript/main/components/SeasonSelector.js":
/*!*************************************************************************************!*\
  !*** ./src/AppBundle/Resources/public/javascript/main/components/SeasonSelector.js ***!
  \*************************************************************************************/
/*! exports provided: NewFixture, default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* unused harmony export NewFixture */
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_react__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__NewSeason__ = __webpack_require__(/*! ./NewSeason */ "./src/AppBundle/Resources/public/javascript/main/components/NewSeason.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__sell_components_SellFormItems__ = __webpack_require__(/*! ../../sell/components/SellFormItems */ "./src/AppBundle/Resources/public/javascript/sell/components/SellFormItems.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_react_redux__ = __webpack_require__(/*! react-redux */ "./node_modules/react-redux/es/index.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__sell_actions_contentActions__ = __webpack_require__(/*! ../../sell/actions/contentActions */ "./src/AppBundle/Resources/public/javascript/sell/actions/contentActions.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5_react_datepicker__ = __webpack_require__(/*! react-datepicker */ "./node_modules/react-datepicker/es/index.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6_moment_moment__ = __webpack_require__(/*! moment/moment */ "./node_modules/moment/moment.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6_moment_moment___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_6_moment_moment__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__Icons__ = __webpack_require__(/*! ./Icons */ "./src/AppBundle/Resources/public/javascript/main/components/Icons.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8_prop_types__ = __webpack_require__(/*! prop-types */ "./node_modules/prop-types/index.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8_prop_types___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_8_prop_types__);
var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }











var NewFixture = function NewFixture(_ref, context) {
    var onRemove = _ref.onRemove,
        onAdd = _ref.onAdd,
        onChange = _ref.onChange,
        value = _ref.value,
        showAdd = _ref.showAdd,
        date = _ref.date,
        handleDate = _ref.handleDate;
    return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
        'div',
        { className: 'base-input', style: { display: 'flex', alignItems: 'center' } },
        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
            'label',
            null,
            context.t("Fixture")
        ),
        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('input', {
            className: 'new-category',
            type: 'text',
            placeholder: context.t("Enter fixture"),
            onChange: onChange,
            value: value }),
        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_5_react_datepicker__["default"], {
            className: "date-picker",
            selected: date ? __WEBPACK_IMPORTED_MODULE_6_moment_moment___default()(date) : undefined,
            onChange: handleDate,
            placeholderText: "dd/mm/yyyy"
        }),
        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
            'div',
            { style: {
                    display: 'flex',
                    alignItems: 'center',
                    minWidth: 50,
                    marginLeft: 30,
                    justifyContent: 'flex-end'
                } },
            showAdd && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('img', { src: __WEBPACK_IMPORTED_MODULE_7__Icons__["b" /* addIcon */], onClick: onAdd, style: { cursor: 'pointer', width: 20, height: 20, marginRight: 5 } }),
            __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('img', { src: __WEBPACK_IMPORTED_MODULE_7__Icons__["g" /* cancelIcon */], onClick: onRemove, style: { cursor: 'pointer', width: 20, height: 20 } })
        )
    );
};

var SeasonSelector = function (_React$Component) {
    _inherits(SeasonSelector, _React$Component);

    function SeasonSelector(props) {
        _classCallCheck(this, SeasonSelector);

        var _this = _possibleConstructorReturn(this, (SeasonSelector.__proto__ || Object.getPrototypeOf(SeasonSelector)).call(this, props));

        _this.toggle = function () {
            var _this$props = _this.props,
                updateFromMultiple = _this$props.updateFromMultiple,
                seasons = _this$props.seasons,
                index = _this$props.index;

            updateFromMultiple("seasons", index, "showSchedule", !seasons[index].showSchedule);
        };

        _this.addFixture = function () {
            var _this$props2 = _this.props,
                updateFromMultiple = _this$props2.updateFromMultiple,
                seasons = _this$props2.seasons,
                index = _this$props2.index;

            var fixtures = seasons[index].fixtures || [];
            updateFromMultiple("seasons", index, "fixtures", [].concat(_toConsumableArray(fixtures), [{ name: "" }]));
        };

        _this.onChangeFixture = function (i, value) {
            var _this$props3 = _this.props,
                updateFromMultiple = _this$props3.updateFromMultiple,
                seasons = _this$props3.seasons,
                index = _this$props3.index;

            var fixtures = seasons[index].fixtures;

            fixtures[i].name = value;
            updateFromMultiple("seasons", index, "fixtures", fixtures);
        };

        _this.onChangeFixtureDate = function (i, value) {
            var _this$props4 = _this.props,
                updateFromMultiple = _this$props4.updateFromMultiple,
                seasons = _this$props4.seasons,
                index = _this$props4.index;

            var fixtures = seasons[index].fixtures;

            fixtures[i].date = value;
            updateFromMultiple("seasons", index, "fixtures", fixtures);
        };

        _this.removeFixture = function (i) {
            var _this$props5 = _this.props,
                updateFromMultiple = _this$props5.updateFromMultiple,
                seasons = _this$props5.seasons,
                index = _this$props5.index;

            var fixtures = seasons[index].fixtures || [];
            fixtures.splice(i, 1);
            updateFromMultiple("seasons", index, "fixtures", fixtures);
        };

        _this.state = {};
        return _this;
    }

    _createClass(SeasonSelector, [{
        key: 'render',
        value: function render() {
            var _this2 = this;

            var _props = this.props,
                index = _props.index,
                season = _props.season,
                seasons = _props.seasons;

            var activeSeason = seasons[season];
            return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                'div',
                { style: { zIndex: 1 } },
                !this.props.isCustom && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                    'div',
                    { className: 'base-input' },
                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        'label',
                        null,
                        this.context.t("Season")
                    ),
                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('input', {
                        type: 'text',
                        value: this.props.value || "",
                        readOnly: true,
                        disabled: this.props.loading,
                        onClick: this.props.openSelector,
                        placeholder: this.context.t("Season") }),
                    this.props.showClose && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        'button',
                        { onClick: this.props.removeSeason, className: "standard-button" },
                        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('i', { className: 'fa fa-close' })
                    )
                ),
                this.props.isCustom && activeSeason && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_1__NewSeason__["a" /* default */], { showClose: this.props.showClose,
                    onBlur: this.props.onBlur,
                    index: index,
                    onRemove: this.props.removeSeason }),
                this.props.showAddNew && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                    'div',
                    null,
                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        'button',
                        { className: 'link-button', onClick: this.props.addSeason },
                        this.context.t(" Add season")
                    )
                ),
                this.props.showAddNew && activeSeason && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                    'div',
                    { className: 'step-item-description' },
                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        'button',
                        { className: 'link-button', onClick: this.addFixture },
                        this.context.t("Click here to add fixtures")
                    )
                ),
                activeSeason && activeSeason.fixtures && activeSeason.fixtures.length > 0 && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                    'div',
                    null,
                    activeSeason.fixtures.map(function (fixture, i, list) {
                        return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(NewFixture, {
                            key: i,
                            onAdd: _this2.addFixture,
                            value: fixture.name,
                            date: fixture.date,
                            handleDate: function handleDate(e) {
                                return _this2.onChangeFixtureDate(i, e);
                            },
                            onChange: function onChange(e) {
                                return _this2.onChangeFixture(i, e.target.value);
                            },
                            onRemove: function onRemove() {
                                return _this2.removeFixture(i);
                            },
                            showAdd: i === list.length - 1
                        });
                    })
                )
            );
        }
    }]);

    return SeasonSelector;
}(__WEBPACK_IMPORTED_MODULE_0_react___default.a.Component);

SeasonSelector.contextTypes = {
    t: __WEBPACK_IMPORTED_MODULE_8_prop_types__["PropTypes"].func.isRequired
};

NewFixture.contextTypes = {
    t: __WEBPACK_IMPORTED_MODULE_8_prop_types__["PropTypes"].func.isRequired
};

var mapStateToProps = function mapStateToProps(state) {
    return state.content;
};

var mapDispatchToProps = function mapDispatchToProps(dispatch) {
    return {
        updateFromMultiple: function updateFromMultiple(type, index, key, value) {
            return dispatch({
                type: 'UPDATE_FROM_MULTIPLE',
                selectorType: type,
                index: index,
                key: key,
                value: value
            });
        },
        updateContentValue: function updateContentValue(key, value) {
            return dispatch({
                type: 'UPDATE_CONTENT_VALUE',
                key: key,
                value: value
            });
        }

    };
};

/* harmony default export */ __webpack_exports__["a"] = (Object(__WEBPACK_IMPORTED_MODULE_3_react_redux__["connect"])(mapStateToProps, mapDispatchToProps)(SeasonSelector));

/***/ }),

/***/ "./src/AppBundle/Resources/public/javascript/main/components/Selector.js":
/*!*******************************************************************************!*\
  !*** ./src/AppBundle/Resources/public/javascript/main/components/Selector.js ***!
  \*******************************************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_react__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_react_redux__ = __webpack_require__(/*! react-redux */ "./node_modules/react-redux/es/index.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__main_store__ = __webpack_require__(/*! ../../main/store */ "./src/AppBundle/Resources/public/javascript/main/store.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_react_modal__ = __webpack_require__(/*! react-modal */ "./node_modules/react-modal/lib/index.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_react_modal___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_3_react_modal__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__styles_custom__ = __webpack_require__(/*! ../styles/custom */ "./src/AppBundle/Resources/public/javascript/main/styles/custom.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5_prop_types__ = __webpack_require__(/*! prop-types */ "./node_modules/prop-types/index.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5_prop_types___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_5_prop_types__);
var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }








__WEBPACK_IMPORTED_MODULE_3_react_modal___default.a.setAppElement('#home-wrapper');

var SelectorItem = function SelectorItem(_ref) {
    var label = _ref.label,
        selected = _ref.selected,
        onClick = _ref.onClick,
        disabled = _ref.disabled;
    return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
        'div',
        { className: "selector-item " + (selected ? "selector-item-selected " : "") + (disabled && "selector-item-disabled"), onClick: !disabled ? onClick : undefined },
        label
    );
};

var Selector = function (_React$Component) {
    _inherits(Selector, _React$Component);

    function Selector(props) {
        _classCallCheck(this, Selector);

        var _this2 = _possibleConstructorReturn(this, (Selector.__proto__ || Object.getPrototypeOf(Selector)).call(this, props));

        _this2.openModal = function () {
            _this2.props.openSelector();
        };

        _this2.afterOpenModal = function () {};

        _this2.closeModal = function () {
            _this2.setState({ updated: false, filterUpdated: false, customCountry: false });
            _this2.props.closeSelector();
        };

        _this2.getActiveFilter = function () {
            var activeFilter = _this2.getActiveFilterName();
            return _this2.state.filter[activeFilter];
        };

        _this2.getActiveFilterName = function () {
            return _this2.props.activeFilter && !_this2.state.filterUpdated ? _this2.props.activeFilter : _this2.state.activeFilter;
        };

        _this2.shouldShowFilters = function () {
            return _this2.state.selectorItems && _this2.state.selectorItems.length > 30;
        };

        _this2.shouldShowInternationalFilter = function () {

            var show = false;

            _this2.state.selectorItems.some(function (item) {
                show = item.name.match(/international/gi) !== null;
                return show;
            });

            return show;
        };

        _this2.setActiveFilter = function (filterName) {
            _this2.setState({ activeFilter: filterName, filterUpdated: true });
        };

        _this2.applySelection = function () {

            var selectedItems = _this2.state.selectedItems,
                prevCountries = _this2.state.prevCountries;

            if (_this2.state.customCountry) {
                selectedItems.forEach(function (item) {
                    if (!prevCountries.has(item.externalId)) item.extended = true;
                });
            }

            _this2.setState({ updated: false, filterUpdated: false, customCountry: false });
            _this2.props.applySelection(_this2.props.selectorType, selectedItems, _this2.props.multiple, _this2.props.index, _this2.props.clean);
        };

        _this2.addNewSport = function (index) {
            _this2.setState({ updated: false, filterUpdated: false });
            _this2.props.addNewSport(index, _this2.props.clean);
            if (index === 0) _this2.props.addNewSeason(index, []);
            _this2.props.closeSelector();
        };

        _this2.addNewTournament = function (index) {
            _this2.setState({ updated: false, filterUpdated: false });
            _this2.props.addNewTournament(index, _this2.props.clean);
            _this2.props.addNewSeason(index, []);
            _this2.props.closeSelector();
        };

        _this2.addNewSeason = function (index) {
            _this2.setState({ updated: false, filterUpdated: false });
            _this2.props.addNewSeason(index, _this2.props.clean);
            _this2.props.closeSelector();
        };

        _this2.addNewCategory = function (index) {
            _this2.setState({ updated: false, filterUpdated: false });
            _this2.props.addNewCategory(index, _this2.props.clean);
            _this2.props.closeSelector();
        };

        _this2.selectItem = function (item) {

            var _this = _this2;

            _this2.setState(function (prevState) {

                if (prevState.selectedItems.has(item.externalId)) {
                    if (_this.props.multiple) {
                        prevState.selectedItems.delete(item.externalId);
                    }
                } else {

                    if (!_this.props.multiple) {
                        prevState.selectedItems.clear();
                    }

                    prevState.selectedItems.set(item.externalId, item);
                }

                return {
                    selectedItems: prevState.selectedItems,
                    updated: true
                };
            });
        };

        _this2.isItemSelected = function (item) {
            return _this2.state.selectedItems.has(item.externalId);
        };

        _this2.isItemDisabled = function (item) {

            return _this2.state.disabled.has(item.externalId);
        };

        _this2.showAllCountries = function () {

            if (!ContentArena.Data.Countries || ContentArena.Data.Countries.length === 0) return;

            _this2.setState(function (prevState) {
                return {
                    prevCountries: new Map(prevState.selectorItems.map(function (i) {
                        return [i.externalId, i];
                    })),
                    selectorItems: ContentArena.Data.Countries,
                    customCountry: true
                };
            });
        };

        _this2.filterLetter = function (item) {
            var filter = _this2.getActiveFilter();
            return filter.values.indexOf(item.name[0].toLowerCase()) !== -1;
        };

        _this2.filterInternational = function (item) {
            return item.name.match(/international/gi) !== null;
        };

        _this2.getItems = function () {
            var filter = _this2.getActiveFilter();
            if (filter.type === "origin") return _this2.props[filter.value];

            if (filter.type === "international") return _this2.state.selectorItems.filter(_this2.filterInternational);

            if (filter.type === "firstLetter") {

                if (!_this2.shouldShowFilters()) return _this2.state.selectorItems;

                return _this2.state.selectorItems.filter(_this2.filterLetter);
            }
        };

        _this2.state = {
            updated: false,
            filterUpdated: false,
            open: props.selector,
            prevCountries: new Map(),
            customCountry: false,
            selectorItems: props.selectorItems || [],
            popularItems: props.popularItems || [],
            filter: {
                "ag": { type: "firstLetter", values: ["a", 'b', 'c', 'd', 'e', 'f', 'g'] },
                "hn": { type: "firstLetter", values: ["h", 'i', 'j', 'k', 'l', 'k', 'n'] },
                "ot": { type: "firstLetter", values: ["o", 'p', 'q', 'r', 's', 't'] },
                "uz": { type: "firstLetter", values: ["u", 'v', 'w', 'x', 'y', 'z'] },
                "popular": { type: "origin", value: "popularItems" },
                "international": { type: "international", value: "international" }
            },
            activeFilter: props.activeFilter || "ag",
            selectedItems: new Map(),
            disabled: new Map()
        };

        __WEBPACK_IMPORTED_MODULE_2__main_store__["a" /* default */].subscribe(function (a) {});
        return _this2;
    }

    _createClass(Selector, [{
        key: 'componentWillReceiveProps',
        value: function componentWillReceiveProps(nextProps) {

            var disabled = new Map(),
                selectedItems = new Map();

            if (nextProps.disabled) disabled = nextProps.disabled;
            if (nextProps.selectedItems) {
                nextProps.selectedItems.forEach(function (v, k) {
                    selectedItems.set(v.externalId, v);
                });
            }

            this.setState({
                disabled: disabled,
                selectedItems: selectedItems,
                selectorItems: nextProps.selectorItems
            });
        }
    }, {
        key: 'render',
        value: function render() {
            var _this3 = this;

            var _this = this;
            return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                __WEBPACK_IMPORTED_MODULE_3_react_modal___default.a,
                {
                    isOpen: this.props.open,
                    onAfterOpen: this.afterOpenModal,
                    onRequestClose: this.closeModal,
                    bodyOpenClassName: "selector",
                    style: __WEBPACK_IMPORTED_MODULE_4__styles_custom__["b" /* SelectorModalStyle */],
                    className: 'ReactModal__Selector',
                    contentLabel: 'Example Modal'
                },
                __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                    'div',
                    null,
                    this.props.popularItems && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        'button',
                        { className: "selector-filter " + (this.getActiveFilterName() === "popular" && "selector-filter-active"),
                            onClick: function onClick() {
                                _this3.setActiveFilter("popular");
                            } },
                        this.context.t("Popular")
                    ),
                    this.shouldShowFilters() && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        'button',
                        { className: "selector-filter " + (this.getActiveFilterName() === "ag" && "selector-filter-active"),
                            onClick: function onClick() {
                                _this3.setActiveFilter("ag");
                            } },
                        'A-G'
                    ),
                    this.shouldShowFilters() && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        'button',
                        { className: "selector-filter " + (this.getActiveFilterName() === "hn" && "selector-filter-active"),
                            onClick: function onClick() {
                                _this3.setActiveFilter("hn");
                            } },
                        'H-N'
                    ),
                    this.shouldShowFilters() && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        'button',
                        { className: "selector-filter " + (this.getActiveFilterName() === "ot" && "selector-filter-active"),
                            onClick: function onClick() {
                                _this3.setActiveFilter("ot");
                            } },
                        'O-T'
                    ),
                    this.shouldShowFilters() && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        'button',
                        { className: "selector-filter " + (this.getActiveFilterName() === "uz" && "selector-filter-active"),
                            onClick: function onClick() {
                                _this3.setActiveFilter("uz");
                            } },
                        'U-Z'
                    ),
                    this.shouldShowInternationalFilter() && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        'button',
                        { className: "selector-filter " + (this.getActiveFilterName() === "international" && "selector-filter-active"),
                            onClick: function onClick() {
                                _this3.setActiveFilter("international");
                            } },
                        this.context.t("International")
                    )
                ),
                __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                    'div',
                    { className: 'selector-content' },
                    this.getItems().map(function (item, i) {
                        return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(SelectorItem, { key: i,
                            label: item.name,
                            onClick: function onClick() {
                                return _this.selectItem(item);
                            },
                            selected: _this.isItemSelected(item),
                            disabled: _this.isItemDisabled(item)
                        });
                    })
                ),
                __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                    'div',
                    { className: "buttons" },
                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        'button',
                        { className: "light-blue-button", style: { backgroundColor: __WEBPACK_IMPORTED_MODULE_4__styles_custom__["b" /* SelectorModalStyle */].content.backgroundColor }, onClick: this.closeModal },
                        this.context.t("Cancel")
                    ),
                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        'button',
                        { className: "standard-button", onClick: this.applySelection, disabled: !this.state.updated },
                        this.context.t("Apply")
                    )
                ),
                this.props.showNewSport && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                    'div',
                    { className: "extras" },
                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        'div',
                        { className: "message" },
                        this.context.t("Can't find your sport in the list?")
                    ),
                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        'button',
                        { className: "link-button", onClick: function onClick() {
                                _this3.addNewSport(_this3.props.index);
                            } },
                        this.context.t("Add new Sport")
                    )
                ),
                this.props.showNewTournament && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                    'div',
                    { className: "extras" },
                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        'div',
                        { className: "message" },
                        this.context.t("Can't find your competition in the list"),
                        '?'
                    ),
                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        'button',
                        { className: "link-button", onClick: function onClick() {
                                _this3.addNewTournament(_this3.props.index);
                            } },
                        this.context.t("Add new Tournament")
                    )
                ),
                this.props.showNewSeason && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                    'div',
                    { className: "extras" },
                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        'div',
                        { className: "message" },
                        this.context.t("Can't find your season in the list?")
                    ),
                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        'button',
                        { className: "link-button", onClick: function onClick() {
                                _this3.addNewSeason(_this3.props.index);
                            } },
                        this.context.t("Add new Season")
                    )
                ),
                this.props.showAllCountries && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                    'div',
                    { className: "extras" },
                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        'div',
                        { className: "message" },
                        this.context.t("Can't find your country in the list?")
                    ),
                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        'button',
                        { className: "link-button", onClick: this.showAllCountries },
                        this.context.t("Show all countries")
                    )
                ),
                this.props.showNewCategory && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                    'div',
                    { className: "extras" },
                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        'div',
                        { className: "message" },
                        this.context.t("Can't find your category in the list?")
                    ),
                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        'button',
                        { className: "link-button", onClick: function onClick() {
                                _this3.addNewCategory(_this3.props.index);
                            } },
                        this.context.t("Add new Category")
                    )
                )
            );
        }
    }]);

    return Selector;
}(__WEBPACK_IMPORTED_MODULE_0_react___default.a.Component);

Selector.contextTypes = {
    t: __WEBPACK_IMPORTED_MODULE_5_prop_types__["PropTypes"].func.isRequired
};

var mapStateToProps = function mapStateToProps(state) {
    return state.selector;
};

var mapDispatchToProps = function mapDispatchToProps(dispatch) {
    return {
        openSelector: function openSelector() {
            return dispatch({
                type: 'OPEN_SELECTOR'
            });
        },
        closeSelector: function closeSelector() {
            return dispatch({
                type: 'CLOSE_SELECTOR'
            });
        },
        applySelection: function applySelection(selectorType, selectedItems, multiple, index, clean) {
            return dispatch({
                type: 'APPLY_SELECTION',
                selectorType: selectorType,
                selectedItems: selectedItems,
                multiple: multiple,
                index: index,
                clean: clean
            });
        },
        addNewSport: function addNewSport(index, clean) {
            return dispatch({
                type: 'ADD_NEW',
                index: index,
                selectorType: "sports",
                clean: clean
            });
        },
        addNewCategory: function addNewCategory(index, clean) {
            return dispatch({
                type: 'ADD_NEW',
                index: index,
                selectorType: "sportCategory",
                clean: clean
            });
        },
        addNewTournament: function addNewTournament(index, clean) {
            return dispatch({
                type: 'ADD_NEW',
                index: index,
                selectorType: "tournament",
                clean: clean
            });
        },
        addNewSeason: function addNewSeason(index, clean) {
            return dispatch({
                type: 'ADD_NEW',
                index: index,
                selectorType: "seasons",
                clean: clean
            });
        }
    };
};

/* harmony default export */ __webpack_exports__["a"] = (Object(__WEBPACK_IMPORTED_MODULE_1_react_redux__["connect"])(mapStateToProps, mapDispatchToProps)(Selector));

/***/ }),

/***/ "./src/AppBundle/Resources/public/javascript/main/components/SendMessage.js":
/*!**********************************************************************************!*\
  !*** ./src/AppBundle/Resources/public/javascript/main/components/SendMessage.js ***!
  \**********************************************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_react__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_react_modal__ = __webpack_require__(/*! react-modal */ "./node_modules/react-modal/lib/index.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_react_modal___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_react_modal__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__styles_custom__ = __webpack_require__(/*! ../styles/custom */ "./src/AppBundle/Resources/public/javascript/main/styles/custom.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_prop_types__ = __webpack_require__(/*! prop-types */ "./node_modules/prop-types/index.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_prop_types___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_3_prop_types__);
var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }






var SendMessage = function (_React$Component) {
    _inherits(SendMessage, _React$Component);

    function SendMessage(props) {
        _classCallCheck(this, SendMessage);

        var _this = _possibleConstructorReturn(this, (SendMessage.__proto__ || Object.getPrototypeOf(SendMessage)).call(this, props));

        _this.open = function () {
            _this.setState({ isOpen: true });
        };

        _this.close = function () {
            _this.setState({ isOpen: false, showSuccess: false });
        };

        _this.send = function () {
            var _this$props = _this.props,
                listingId = _this$props.listingId,
                recipient = _this$props.recipient,
                role = _this$props.role;


            var message = {
                content: _this.state.message,
                listing: listingId,
                recipient: recipient.id,
                role: role || "BUYER"
            };

            _this.setState({ saving: true });

            ContentArena.ContentApi.sendMessage(message).done(function (r) {
                _this.setState({ saving: false, showSuccess: true, message: null });
            });
        };

        _this.state = {
            isOpen: props.isOpen
        };
        return _this;
    }

    _createClass(SendMessage, [{
        key: 'render',
        value: function render() {
            var _this2 = this;

            var recipient = this.props.recipient;
            var _state = this.state,
                showSuccess = _state.showSuccess,
                saving = _state.saving,
                message = _state.message;


            return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                __WEBPACK_IMPORTED_MODULE_1_react_modal___default.a,
                {
                    isOpen: this.state.isOpen,
                    onRequestClose: this.close,
                    bodyOpenClassName: "generic-modal",
                    style: __WEBPACK_IMPORTED_MODULE_2__styles_custom__["a" /* GenericModalStyle */]
                },
                __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                    'div',
                    { className: "generic-modal-container" },
                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        'div',
                        { className: 'title' },
                        this.context.t("Contact"),
                        ' ',
                        recipient.legalName
                    ),
                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        'div',
                        { className: 'container' },
                        !saving && !showSuccess && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('textarea', { onChange: function onChange(e) {
                                _this2.setState({ message: e.target.value });
                            }, value: message }),
                        saving && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                            'div',
                            null,
                            __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('i', { className: 'fa fa-cog fa-spin' })
                        ),
                        showSuccess && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                            'div',
                            null,
                            this.context.t("Message sent!")
                        )
                    ),
                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        'div',
                        { className: "buttons" },
                        !saving && !showSuccess && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                            'button',
                            { className: "confirm", disabled: !message, onClick: this.send },
                            this.context.t("Send")
                        ),
                        !showSuccess && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                            'button',
                            { onClick: this.close },
                            this.context.t("Cancel")
                        ),
                        showSuccess && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                            'button',
                            { className: "confirm", onClick: this.close },
                            this.context.t("Close")
                        )
                    )
                )
            );
        }
    }]);

    return SendMessage;
}(__WEBPACK_IMPORTED_MODULE_0_react___default.a.Component);

SendMessage.contextTypes = {
    t: __WEBPACK_IMPORTED_MODULE_3_prop_types__["PropTypes"].func.isRequired
};

/* harmony default export */ __webpack_exports__["a"] = (SendMessage);

/***/ }),

/***/ "./src/AppBundle/Resources/public/javascript/main/components/Tooltip.js":
/*!******************************************************************************!*\
  !*** ./src/AppBundle/Resources/public/javascript/main/components/Tooltip.js ***!
  \******************************************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_react__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_react_tooltip__ = __webpack_require__(/*! react-tooltip */ "./node_modules/react-tooltip/dist/index.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_react_tooltip___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_react_tooltip__);



var Tooltip = function Tooltip(props) {
    return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
        'i',
        { className: 'fa fa-info-circle ca-tooltip', 'data-for': props.id, 'data-tip': props.text },
        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_1_react_tooltip___default.a, { id: props.id, place: 'top', type: 'dark', effect: 'solid' })
    );
};

/* harmony default export */ __webpack_exports__["a"] = (Tooltip);

/***/ }),

/***/ "./src/AppBundle/Resources/public/javascript/main/main.js":
/*!****************************************************************!*\
  !*** ./src/AppBundle/Resources/public/javascript/main/main.js ***!
  \****************************************************************/
/*! no exports provided */
/*! all exports used */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_react__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_react_dom__ = __webpack_require__(/*! react-dom */ "./node_modules/react-dom/index.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_react_dom___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_react_dom__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_react_redux__ = __webpack_require__(/*! react-redux */ "./node_modules/react-redux/es/index.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__store__ = __webpack_require__(/*! ./store */ "./src/AppBundle/Resources/public/javascript/main/store.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__router__ = __webpack_require__(/*! ./router */ "./src/AppBundle/Resources/public/javascript/main/router.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5_redux_i18n__ = __webpack_require__(/*! redux-i18n */ "./node_modules/redux-i18n/dist/index.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5_redux_i18n___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_5_redux_i18n__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__translations_translations__ = __webpack_require__(/*! ../translations/translations */ "./src/AppBundle/Resources/public/javascript/translations/translations.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7_react_table_react_table_css__ = __webpack_require__(/*! react-table/react-table.css */ "./node_modules/react-table/react-table.css");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7_react_table_react_table_css___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_7_react_table_react_table_css__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8_react_tagsinput_react_tagsinput_css__ = __webpack_require__(/*! react-tagsinput/react-tagsinput.css */ "./node_modules/react-tagsinput/react-tagsinput.css");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8_react_tagsinput_react_tagsinput_css___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_8_react_tagsinput_react_tagsinput_css__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9_react_datepicker_dist_react_datepicker_css__ = __webpack_require__(/*! react-datepicker/dist/react-datepicker.css */ "./node_modules/react-datepicker/dist/react-datepicker.css");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9_react_datepicker_dist_react_datepicker_css___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_9_react_datepicker_dist_react_datepicker_css__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_10_react_toggle_style_css__ = __webpack_require__(/*! react-toggle/style.css */ "./node_modules/react-toggle/style.css");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_10_react_toggle_style_css___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_10_react_toggle_style_css__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_11_react_select_dist_react_select_css__ = __webpack_require__(/*! react-select/dist/react-select.css */ "./node_modules/react-select/dist/react-select.css");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_11_react_select_dist_react_select_css___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_11_react_select_dist_react_select_css__);
/**
 * Created by JuanCruz on 4/1/2018.
 */









 // If using WebPack and style-loader.



__webpack_require__(/*! ../ca/ca.data */ "./src/AppBundle/Resources/public/javascript/ca/ca.data.js");
__webpack_require__(/*! ../ca/ca.api.content */ "./src/AppBundle/Resources/public/javascript/ca/ca.api.content.js");
__webpack_require__(/*! ../ca/ca.api */ "./src/AppBundle/Resources/public/javascript/ca/ca.api.js");
__webpack_require__(/*! ../ca/ca.utils */ "./src/AppBundle/Resources/public/javascript/ca/ca.utils.js");
__webpack_require__(/*! ../ca/ca.models */ "./src/AppBundle/Resources/public/javascript/ca/ca.models.js");

var homeWrapper = document.getElementById('home-wrapper');

__WEBPACK_IMPORTED_MODULE_1_react_dom___default.a.render(__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
    __WEBPACK_IMPORTED_MODULE_2_react_redux__["Provider"],
    { store: __WEBPACK_IMPORTED_MODULE_3__store__["a" /* default */] },
    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
        __WEBPACK_IMPORTED_MODULE_5_redux_i18n___default.a,
        { translations: __WEBPACK_IMPORTED_MODULE_6__translations_translations__["a" /* translations */] },
        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_4__router__["a" /* default */], homeWrapper.dataset)
    )
), homeWrapper);

/***/ }),

/***/ "./src/AppBundle/Resources/public/javascript/main/reducers/user.js":
/*!*************************************************************************!*\
  !*** ./src/AppBundle/Resources/public/javascript/main/reducers/user.js ***!
  \*************************************************************************/
/*! exports provided: userTypes, user */
/*! exports used: user, userTypes */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "b", function() { return userTypes; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return user; });

var userTypes = {
    LOGOUT: 'LOGOUT',
    LOGIN: 'LOGIN',
    PROFILE: 'PROFILE'
};

var defaultUser = {
    profile: "BUYER"

};

var user = function user() {
    var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : defaultUser;
    var action = arguments[1];


    switch (action.type) {
        case userTypes.LOGOUT:
            return Object.assign({}, state, defaultUser);
        case userTypes.LOGIN:
            return Object.assign({}, state, {
                email: action.email
            });
        case userTypes.PROFILE:
            return Object.assign({}, state, {
                profile: action.profile
            });
        default:
            return state;
    }
};

/***/ }),

/***/ "./src/AppBundle/Resources/public/javascript/main/router.js":
/*!******************************************************************!*\
  !*** ./src/AppBundle/Resources/public/javascript/main/router.js ***!
  \******************************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_react__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__routes__ = __webpack_require__(/*! ./routes */ "./src/AppBundle/Resources/public/javascript/main/routes.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_prop_types__ = __webpack_require__(/*! prop-types */ "./node_modules/prop-types/index.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_prop_types___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2_prop_types__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_react_router_dom__ = __webpack_require__(/*! react-router-dom */ "./node_modules/react-router-dom/es/index.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_react_redux__ = __webpack_require__(/*! react-redux */ "./node_modules/react-redux/es/index.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__actions_userActions__ = __webpack_require__(/*! ./actions/userActions */ "./src/AppBundle/Resources/public/javascript/main/actions/userActions.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6_redux_i18n__ = __webpack_require__(/*! redux-i18n */ "./node_modules/redux-i18n/dist/index.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6_redux_i18n___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_6_redux_i18n__);
var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }










var fakeAuth = {
    isAuthenticated: false,
    authenticate: function authenticate(cb) {
        this.isAuthenticated = true;
        setTimeout(cb, 100); // fake async
    },
    signout: function signout(cb) {
        this.isAuthenticated = false;
        setTimeout(cb, 100);
    }
};

var PrivateRoute = function PrivateRoute(_ref) {
    var Component = _ref.component,
        updateByPath = _ref.updateByPath,
        rest = _objectWithoutProperties(_ref, ["component", "updateByPath"]);

    return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_3_react_router_dom__["Route"], _extends({}, rest, {
        render: function render(props) {
            return fakeAuth.isAuthenticated ? __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(Component, _extends({}, props, rest, { key: updateByPath ? props.location.pathname : props.location.search })) : __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_3_react_router_dom__["Redirect"], {
                to: {
                    pathname: "/landing",
                    state: { from: props.location }
                }
            });
        }
    }));
};

var PublicRoute = function PublicRoute(_ref2) {
    var Component = _ref2.component,
        rest = _objectWithoutProperties(_ref2, ["component"]);

    return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_3_react_router_dom__["Route"], _extends({}, rest, {
        render: function render(props) {
            return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(Component, _extends({}, props, rest));
        }
    }));
};

var Login = function (_React$Component) {
    _inherits(Login, _React$Component);

    function Login() {
        var _ref3;

        var _temp, _this, _ret;

        _classCallCheck(this, Login);

        for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
            args[_key] = arguments[_key];
        }

        return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref3 = Login.__proto__ || Object.getPrototypeOf(Login)).call.apply(_ref3, [this].concat(args))), _this), _this.state = {
            redirectToReferrer: false
        }, _this.login = function () {
            fakeAuth.authenticate(function () {
                _this.setState({ redirectToReferrer: true });
            });
        }, _temp), _possibleConstructorReturn(_this, _ret);
    }

    _createClass(Login, [{
        key: "render",
        value: function render() {
            var _ref4 = this.props.location.state || { from: { pathname: "/" } },
                from = _ref4.from;

            var redirectToReferrer = this.state.redirectToReferrer;


            if (redirectToReferrer) {
                return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_3_react_router_dom__["Redirect"], { to: from });
            }

            return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                "div",
                null,
                __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                    "p",
                    null,
                    "You must log in to view the page at ",
                    from.pathname
                ),
                __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                    "a",
                    { href: "/login" },
                    "Log in"
                )
            );
        }
    }]);

    return Login;
}(__WEBPACK_IMPORTED_MODULE_0_react___default.a.Component);

var Logout = function (_React$Component2) {
    _inherits(Logout, _React$Component2);

    function Logout() {
        var _ref5;

        var _temp2, _this2, _ret2;

        _classCallCheck(this, Logout);

        for (var _len2 = arguments.length, args = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
            args[_key2] = arguments[_key2];
        }

        return _ret2 = (_temp2 = (_this2 = _possibleConstructorReturn(this, (_ref5 = Logout.__proto__ || Object.getPrototypeOf(Logout)).call.apply(_ref5, [this].concat(args))), _this2), _this2.logout = function () {
            fakeAuth.signout(function () {
                return history.push("/");
            });
        }, _temp2), _possibleConstructorReturn(_this2, _ret2);
    }

    _createClass(Logout, [{
        key: "render",
        value: function render() {
            return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                "div",
                null,
                __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                    "p",
                    null,
                    "Are you sure you want to sign out?"
                ),
                __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                    "button",
                    { onClick: this.logout },
                    "Yes, sign out"
                )
            );
        }
    }]);

    return Logout;
}(__WEBPACK_IMPORTED_MODULE_0_react___default.a.Component);

var AuthRouter = function (_React$Component3) {
    _inherits(AuthRouter, _React$Component3);

    function AuthRouter(props) {
        _classCallCheck(this, AuthRouter);

        var _this3 = _possibleConstructorReturn(this, (AuthRouter.__proto__ || Object.getPrototypeOf(AuthRouter)).call(this, props));

        if (props.loggedUser) fakeAuth.authenticate(function () {});

        _this3.state = {};
        return _this3;
    }

    _createClass(AuthRouter, [{
        key: "componentWillMount",
        value: function componentWillMount() {
            this.props.setLanguage("en");
        }
    }, {
        key: "render",
        value: function render() {
            var _this4 = this;

            var user = this.props.user;


            return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                __WEBPACK_IMPORTED_MODULE_3_react_router_dom__["BrowserRouter"],
                null,
                __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                    "div",
                    { className: "manager-container" },
                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_3_react_router_dom__["Route"], { path: "/landing", component: Login }),
                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_3_react_router_dom__["Route"], { path: "/logout", component: Logout }),
                    __WEBPACK_IMPORTED_MODULE_1__routes__["a" /* routes */].map(function (route, index) {
                        return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(PublicRoute, {
                            key: index,
                            path: route.path,
                            exact: route.exact,
                            component: route.header,
                            profile: user.profile
                        });
                    }),
                    __WEBPACK_IMPORTED_MODULE_1__routes__["a" /* routes */].map(function (route, index) {
                        return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(PrivateRoute, _extends({
                            key: index,
                            path: route.path,
                            exact: route.exact,
                            updateByPath: route.updateByPath,
                            component: route.main
                        }, _this4.props));
                    })
                )
            );
        }
    }]);

    return AuthRouter;
}(__WEBPACK_IMPORTED_MODULE_0_react___default.a.Component);

AuthRouter.contextTypes = {
    t: __WEBPACK_IMPORTED_MODULE_2_prop_types__["PropTypes"].func.isRequired
};

var mapStateToProps = function mapStateToProps(state) {
    return state;
};

var mapDispatchToProps = function mapDispatchToProps(dispatch) {
    return {
        login: function login(email) {
            return dispatch({
                type: 'LOGIN',
                email: email
            });
        },
        updateProfile: function updateProfile(profile) {
            return dispatch(Object(__WEBPACK_IMPORTED_MODULE_5__actions_userActions__["a" /* updateProfile */])(profile));
        },
        setLanguage: function setLanguage(lang) {
            return dispatch(Object(__WEBPACK_IMPORTED_MODULE_6_redux_i18n__["setLanguage"])(lang));
        }
    };
};

/* harmony default export */ __webpack_exports__["a"] = (Object(__WEBPACK_IMPORTED_MODULE_4_react_redux__["connect"])(mapStateToProps, mapDispatchToProps)(AuthRouter));

/***/ }),

/***/ "./src/AppBundle/Resources/public/javascript/main/routes.js":
/*!******************************************************************!*\
  !*** ./src/AppBundle/Resources/public/javascript/main/routes.js ***!
  \******************************************************************/
/*! exports provided: routes */
/*! exports used: routes */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return routes; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__manage_containers_Watchlist__ = __webpack_require__(/*! ../manage/containers/Watchlist */ "./src/AppBundle/Resources/public/javascript/manage/containers/Watchlist.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__manage_containers_ClosedDeals__ = __webpack_require__(/*! ../manage/containers/ClosedDeals */ "./src/AppBundle/Resources/public/javascript/manage/containers/ClosedDeals.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__manage_containers_PendingDeals__ = __webpack_require__(/*! ../manage/containers/PendingDeals */ "./src/AppBundle/Resources/public/javascript/manage/containers/PendingDeals.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__manage_containers_CommercialActivity__ = __webpack_require__(/*! ../manage/containers/CommercialActivity */ "./src/AppBundle/Resources/public/javascript/manage/containers/CommercialActivity.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__manage_containers_Messages__ = __webpack_require__(/*! ../manage/containers/Messages */ "./src/AppBundle/Resources/public/javascript/manage/containers/Messages.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__manage_containers_Settings__ = __webpack_require__(/*! ../manage/containers/Settings */ "./src/AppBundle/Resources/public/javascript/manage/containers/Settings.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__manage_containers_ManageListings__ = __webpack_require__(/*! ../manage/containers/ManageListings */ "./src/AppBundle/Resources/public/javascript/manage/containers/ManageListings.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__components_HeaderBar__ = __webpack_require__(/*! ./components/HeaderBar */ "./src/AppBundle/Resources/public/javascript/main/components/HeaderBar.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__buy_containers_Marketplace__ = __webpack_require__(/*! ../buy/containers/Marketplace */ "./src/AppBundle/Resources/public/javascript/buy/containers/Marketplace.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9__sell_components_SellForm__ = __webpack_require__(/*! ../sell/components/SellForm */ "./src/AppBundle/Resources/public/javascript/sell/components/SellForm.js");











var routes = [{
    path: "/",
    exact: true,
    header: __WEBPACK_IMPORTED_MODULE_7__components_HeaderBar__["a" /* default */],
    main: __WEBPACK_IMPORTED_MODULE_8__buy_containers_Marketplace__["a" /* default */]
}, {
    path: "/marketplace",
    exact: true,
    header: __WEBPACK_IMPORTED_MODULE_7__components_HeaderBar__["a" /* default */],
    main: __WEBPACK_IMPORTED_MODULE_8__buy_containers_Marketplace__["a" /* default */]
}, {
    path: "/marketplace/filter/:filterName/:filterValue?",
    header: __WEBPACK_IMPORTED_MODULE_7__components_HeaderBar__["a" /* default */],
    main: __WEBPACK_IMPORTED_MODULE_8__buy_containers_Marketplace__["a" /* default */]
}, {
    path: "/contentlisting/:customId?/:step?",
    header: __WEBPACK_IMPORTED_MODULE_7__components_HeaderBar__["a" /* default */],
    main: __WEBPACK_IMPORTED_MODULE_9__sell_components_SellForm__["a" /* default */],
    updateByPath: true
}, {
    path: "/commercialactivity",
    header: __WEBPACK_IMPORTED_MODULE_7__components_HeaderBar__["a" /* default */],
    exact: true,
    main: __WEBPACK_IMPORTED_MODULE_3__manage_containers_CommercialActivity__["a" /* default */]
}, {
    path: "/commercialactivity/filter/:filterName/:filterValue?",
    header: __WEBPACK_IMPORTED_MODULE_7__components_HeaderBar__["a" /* default */],
    main: __WEBPACK_IMPORTED_MODULE_3__manage_containers_CommercialActivity__["a" /* default */],
    updateByPath: true
}, {
    path: "/listing/:customId/:tab?/:bundle?",
    header: __WEBPACK_IMPORTED_MODULE_7__components_HeaderBar__["a" /* default */],
    main: __WEBPACK_IMPORTED_MODULE_8__buy_containers_Marketplace__["a" /* default */]
}, {
    path: "/watchlist",
    header: __WEBPACK_IMPORTED_MODULE_7__components_HeaderBar__["a" /* default */],
    main: __WEBPACK_IMPORTED_MODULE_0__manage_containers_Watchlist__["a" /* default */]
}, {
    path: "/closeddeals",
    header: __WEBPACK_IMPORTED_MODULE_7__components_HeaderBar__["a" /* default */],
    main: __WEBPACK_IMPORTED_MODULE_1__manage_containers_ClosedDeals__["a" /* default */]
}, {
    path: "/settings/:filter?",
    header: __WEBPACK_IMPORTED_MODULE_7__components_HeaderBar__["a" /* default */],
    main: __WEBPACK_IMPORTED_MODULE_5__manage_containers_Settings__["a" /* default */],
    updateByPath: true
}, {
    path: "/messages/:customId?",
    header: __WEBPACK_IMPORTED_MODULE_7__components_HeaderBar__["a" /* default */],
    main: __WEBPACK_IMPORTED_MODULE_4__manage_containers_Messages__["a" /* default */]
}, {
    path: "/managelistings",
    header: __WEBPACK_IMPORTED_MODULE_7__components_HeaderBar__["a" /* default */],
    main: __WEBPACK_IMPORTED_MODULE_6__manage_containers_ManageListings__["a" /* default */]
}, {
    path: "/bids/:tab?",
    header: __WEBPACK_IMPORTED_MODULE_7__components_HeaderBar__["a" /* default */],
    main: __WEBPACK_IMPORTED_MODULE_2__manage_containers_PendingDeals__["a" /* default */],
    updateByPath: true
}];

/***/ }),

/***/ "./src/AppBundle/Resources/public/javascript/main/store.js":
/*!*****************************************************************!*\
  !*** ./src/AppBundle/Resources/public/javascript/main/store.js ***!
  \*****************************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_react__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_redux__ = __webpack_require__(/*! redux */ "./node_modules/redux/es/index.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_redux_i18n__ = __webpack_require__(/*! redux-i18n */ "./node_modules/redux-i18n/dist/index.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_redux_i18n___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2_redux_i18n__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__sell_reducers_content__ = __webpack_require__(/*! ../sell/reducers/content */ "./src/AppBundle/Resources/public/javascript/sell/reducers/content.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__sell_reducers_selector__ = __webpack_require__(/*! ../sell/reducers/selector */ "./src/AppBundle/Resources/public/javascript/sell/reducers/selector.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__buy_reducers_filter__ = __webpack_require__(/*! ../buy/reducers/filter */ "./src/AppBundle/Resources/public/javascript/buy/reducers/filter.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__buy_reducers_marketplace__ = __webpack_require__(/*! ../buy/reducers/marketplace */ "./src/AppBundle/Resources/public/javascript/buy/reducers/marketplace.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__manage_reducers_manage__ = __webpack_require__(/*! ../manage/reducers/manage */ "./src/AppBundle/Resources/public/javascript/manage/reducers/manage.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__reducers_user__ = __webpack_require__(/*! ./reducers/user */ "./src/AppBundle/Resources/public/javascript/main/reducers/user.js");
/**
 * Created by JuanCruz on 4/1/2018.
 */













var reducers = Object(__WEBPACK_IMPORTED_MODULE_1_redux__["combineReducers"])({
    content: __WEBPACK_IMPORTED_MODULE_3__sell_reducers_content__["a" /* content */],
    selector: __WEBPACK_IMPORTED_MODULE_4__sell_reducers_selector__["a" /* selector */],
    marketplace: __WEBPACK_IMPORTED_MODULE_6__buy_reducers_marketplace__["a" /* marketplace */],
    filter: __WEBPACK_IMPORTED_MODULE_5__buy_reducers_filter__["a" /* filter */],
    manage: __WEBPACK_IMPORTED_MODULE_7__manage_reducers_manage__["a" /* manage */],
    user: __WEBPACK_IMPORTED_MODULE_8__reducers_user__["a" /* user */],
    i18nState: __WEBPACK_IMPORTED_MODULE_2_redux_i18n__["i18nState"]
});

/* harmony default export */ __webpack_exports__["a"] = (Object(__WEBPACK_IMPORTED_MODULE_1_redux__["createStore"])(reducers));

/***/ }),

/***/ "./src/AppBundle/Resources/public/javascript/main/styles/custom.js":
/*!*************************************************************************!*\
  !*** ./src/AppBundle/Resources/public/javascript/main/styles/custom.js ***!
  \*************************************************************************/
/*! exports provided: customStyles, SelectorModalStyle, GenericModalStyle */
/*! exports used: GenericModalStyle, SelectorModalStyle, customStyles */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "c", function() { return customStyles; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "b", function() { return SelectorModalStyle; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return GenericModalStyle; });
var customStyles = {
    content: {
        top: '50%',
        left: '50%',
        right: 'auto',
        bottom: 'auto',
        marginRight: '-50%',
        transform: 'translate(-50%, -50%)',
        backgroundColor: '#F4F6F9',
        border: 'none',
        borderRadius: 0,
        borderBottom: '4px solid #2AAAEC'
    },
    overlay: {
        zIndex: 100
    }
};

var SelectorModalStyle = {
    content: {
        top: '50%',
        left: '50%',
        right: 'auto',
        bottom: 'auto',
        marginRight: '-50%',
        transform: 'translate(-50%, -50%)',
        backgroundColor: '#F4F6F9',
        border: 'none',
        borderRadius: 0,
        borderBottom: '4px solid #2AAAEC',
        padding: "20px"
    },
    overlay: {
        zIndex: 100
    }
};

var GenericModalStyle = {
    content: {
        top: '50%',
        left: '50%',
        right: 'auto',
        bottom: 'auto',
        marginRight: '-50%',
        transform: 'translate(-50%, -50%)',
        backgroundColor: '#FFFFFF',
        border: 'none',
        borderRadius: 0,
        padding: "20px"
    },
    overlay: {
        zIndex: 100,
        backgroundColor: 'rgba(0, 0, 0, 0.6)'
    }
};

/***/ }),

/***/ "./src/AppBundle/Resources/public/javascript/manage/components/BoardListing.js":
/*!*************************************************************************************!*\
  !*** ./src/AppBundle/Resources/public/javascript/manage/components/BoardListing.js ***!
  \*************************************************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_react__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_moment_moment__ = __webpack_require__(/*! moment/moment */ "./node_modules/moment/moment.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_moment_moment___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_moment_moment__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__buy_components_ContentListingEventDetails__ = __webpack_require__(/*! ../../buy/components/ContentListingEventDetails */ "./src/AppBundle/Resources/public/javascript/buy/components/ContentListingEventDetails.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__main_actions_utils__ = __webpack_require__(/*! ../../main/actions/utils */ "./src/AppBundle/Resources/public/javascript/main/actions/utils.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__main_components_Icons__ = __webpack_require__(/*! ../../main/components/Icons */ "./src/AppBundle/Resources/public/javascript/main/components/Icons.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__sell_components_SuperRightDefinitions__ = __webpack_require__(/*! ../../sell/components/SuperRightDefinitions */ "./src/AppBundle/Resources/public/javascript/sell/components/SuperRightDefinitions.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6_prop_types__ = __webpack_require__(/*! prop-types */ "./node_modules/prop-types/index.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6_prop_types___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_6_prop_types__);
var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }









var BoardListing = function (_React$Component) {
    _inherits(BoardListing, _React$Component);

    function BoardListing(props) {
        _classCallCheck(this, BoardListing);

        var _this = _possibleConstructorReturn(this, (BoardListing.__proto__ || Object.getPrototypeOf(BoardListing)).call(this, props));

        _this.onSelect = function () {
            var _this$props = _this.props,
                onSelect = _this$props.onSelect,
                customId = _this$props.customId;


            if (onSelect) onSelect(customId);
        };

        _this.toggleOptions = function (e) {
            _this.setState({ showOptions: !_this.state.showOptions });
            e.stopPropagation();
        };

        _this.edit = function () {
            var _this$props2 = _this.props,
                customId = _this$props2.customId,
                step = _this$props2.step;

            var stepToShow = step + 1;
            Object(__WEBPACK_IMPORTED_MODULE_3__main_actions_utils__["e" /* goTo */])("contentlisting/" + customId + "/" + (step > 4 ? 'sign' : stepToShow));
        };

        _this.submit = function () {
            var customId = _this.props.customId;

            Object(__WEBPACK_IMPORTED_MODULE_3__main_actions_utils__["e" /* goTo */])("contentlisting/" + customId + "/sign");
        };

        _this.view = function () {
            var customId = _this.props.customId;

            Object(__WEBPACK_IMPORTED_MODULE_3__main_actions_utils__["e" /* goTo */])("listing/" + customId, true);
        };

        _this.hideOptions = function (e) {
            var defaultAction = _this.props.defaultAction;
            var showOptions = _this.state.showOptions;

            _this.setState({ showOptions: false });
            if (defaultAction && !showOptions) {
                if (defaultAction === "EDIT") {
                    _this.edit();
                }

                if (defaultAction === "VIEW") {
                    _this.view();
                }

                if (defaultAction === "SUBMIT") {
                    _this.submit();
                }
            }

            e.stopPropagation();
        };

        _this.state = {
            showOptions: false,
            showRemoveConfirm: false,
            showDeactivateConfirm: false
        };
        _this.clockIcon = assetsBaseDir + "app/images/clock.png";
        _this.exclamationIcon = assetsBaseDir + "app/images/exclamation_round.png";
        _this.playIcon = assetsBaseDir + "app/images/play.png";
        _this.bucketIcon = assetsBaseDir + "app/images/bucket_blue.png";
        _this.editIcon = assetsBaseDir + "app/images/edit.png";
        _this.duplicateIcon = assetsBaseDir + "app/images/duplicate.png";
        _this.viewIcon = assetsBaseDir + "app/images/search.png";
        _this.submitIcon = assetsBaseDir + "app/images/submit.png";
        _this.dotsIcon = assetsBaseDir + "app/images/dots.png";
        _this.deactivateIcon = assetsBaseDir + "app/images/close_red.png";
        return _this;
    }

    _createClass(BoardListing, [{
        key: "render",
        value: function render() {
            var _this2 = this;

            var _props = this.props,
                PROGRAM_NAME = _props.PROGRAM_NAME,
                name = _props.name,
                customId = _props.customId,
                expiresAt = _props.expiresAt,
                salesPackages = _props.salesPackages,
                rightsPackage = _props.rightsPackage,
                tournament = _props.tournament,
                seasons = _props.seasons,
                className = _props.className,
                showEdit = _props.showEdit,
                showRemove = _props.showRemove,
                showSubmit = _props.showSubmit,
                showDuplicate = _props.showDuplicate,
                showDeactivate = _props.showDeactivate,
                showView = _props.showView,
                onRemove = _props.onRemove,
                onDuplicate = _props.onDuplicate,
                onDeactivate = _props.onDeactivate,
                lastAction = _props.lastAction,
                lastActionDate = _props.lastActionDate,
                lastActionUser = _props.lastActionUser,
                owner = _props.owner,
                status = _props.status,
                onSubmit = _props.onSubmit,
                style = _props.style;
            var _state = this.state,
                showOptions = _state.showOptions,
                showRemoveConfirm = _state.showRemoveConfirm,
                showDeactivateConfirm = _state.showDeactivateConfirm,
                showStatusInfo = _state.showStatusInfo;


            return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                "div",
                { className: className, style: style, onClick: this.hideOptions },
                showOptions && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                    "div",
                    { className: "options-tooltip" },
                    showSubmit && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        "div",
                        { className: "option", onClick: this.submit },
                        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement("img", { src: this.submitIcon }),
                        " ",
                        this.context.t("Submit")
                    ),
                    showEdit && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        "div",
                        { className: "option", onClick: this.edit },
                        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement("img", { src: this.editIcon }),
                        " ",
                        this.context.t("Edit")
                    ),
                    showDuplicate && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        "div",
                        { className: "option", onClick: function onClick() {
                                _this2.setState({ showOptions: false });
                                onDuplicate(customId);
                            } },
                        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement("img", { src: this.duplicateIcon }),
                        this.context.t("Duplicate")
                    ),
                    showView && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        "div",
                        { className: "option", onClick: this.view },
                        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement("img", { src: this.viewIcon }),
                        this.context.t("View")
                    ),
                    showRemove && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        "div",
                        { className: "option", onClick: function onClick() {
                                _this2.setState({ showRemoveConfirm: true });
                            } },
                        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement("img", { src: this.bucketIcon }),
                        this.context.t("Remove")
                    ),
                    showDeactivate && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        "div",
                        { className: "option", onClick: function onClick() {
                                _this2.setState({ showDeactivateConfirm: true });
                            } },
                        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement("img", { src: this.deactivateIcon, style: { width: 16 } }),
                        this.context.t("Deactivate")
                    ),
                    lastAction && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        "div",
                        { className: "last-action" },
                        this.context.t("Last action: "),
                        lastAction.description,
                        " ",
                        lastActionUser && "by " + lastActionUser.firstName + " " + lastActionUser.lastName,
                        " ",
                        lastActionDate && "on " + __WEBPACK_IMPORTED_MODULE_1_moment_moment___default()(lastActionDate).format('HH:mm DD/MM/YYYY')
                    ),
                    owner && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        "div",
                        { className: "last-action" },
                        this.context.t("Listing Owner: "),
                        owner.firstName + " " + owner.lastName
                    )
                ),
                showDeactivateConfirm && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                    "div",
                    { className: "confirmation-tooltip" },
                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        "div",
                        { className: "confirmation-text" },
                        this.context.t("Are you sure you want to deactivate the listing?")
                    ),
                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        "button",
                        { className: "button button-confirm", onClick: function onClick(e) {
                                _this2.setState({ showDeactivateConfirm: false });
                                onDeactivate();
                                e.stopPropagation();
                            } },
                        this.context.t("Deactivate")
                    ),
                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        "button",
                        { className: "button", onClick: function onClick(e) {
                                _this2.setState({ showDeactivateConfirm: false });
                                e.stopPropagation();
                            } },
                        this.context.t("Cancel")
                    )
                ),
                showRemoveConfirm && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                    "div",
                    { className: "confirmation-tooltip" },
                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        "div",
                        { className: "confirmation-text" },
                        this.context.t("Remove-listing-confirmation"),
                        "?"
                    ),
                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        "button",
                        { className: "button button-confirm", onClick: function onClick(e) {
                                _this2.setState({ showRemoveConfirm: false });
                                onRemove();
                                e.stopPropagation();
                            } },
                        this.context.t("Remove")
                    ),
                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        "button",
                        { className: "button", onClick: function onClick(e) {
                                _this2.setState({ showRemoveConfirm: false });
                                e.stopPropagation();
                            } },
                        this.context.t("Cancel")
                    )
                ),
                showStatusInfo && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                    "div",
                    { className: "status-tooltip" },
                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        "div",
                        { className: "option" },
                        status.name === 'PENDING' && "Listing under review. Not visible in the marketplace yet.",
                        status.name === 'INACTIVE' && "Listing is deactivated.",
                        status.name === 'REJECTED' && "Listing rejected. Please edit or contact support.",
                        status.name === 'EXPIRED' && "This listing has expired.",
                        status.name === 'SOLD_OUT' && "All sales bundle of this listing were sold."
                    )
                ),
                status.name !== 'DRAFT' && status.name !== 'APPROVED' && status.name !== 'EDITED' && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                    "div",
                    {
                        className: "status-icon",
                        onMouseOver: function onMouseOver() {
                            _this2.setState({ showStatusInfo: true });
                        },
                        onMouseLeave: function onMouseLeave() {
                            _this2.setState({ showStatusInfo: false });
                        } },
                    status.name === 'PENDING' && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement("img", { src: __WEBPACK_IMPORTED_MODULE_4__main_components_Icons__["h" /* clockRoundIcon */] }),
                    status.name === 'INACTIVE' && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement("img", { src: __WEBPACK_IMPORTED_MODULE_4__main_components_Icons__["p" /* playIcon */] }),
                    status.name === 'REJECTED' && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement("img", { src: __WEBPACK_IMPORTED_MODULE_4__main_components_Icons__["k" /* exclamationRoundIcon */] }),
                    status.name === 'EXPIRED' && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement("img", { src: __WEBPACK_IMPORTED_MODULE_4__main_components_Icons__["l" /* expiredIcon */] }),
                    status.name === 'SOLD_OUT' && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement("img", { src: __WEBPACK_IMPORTED_MODULE_4__main_components_Icons__["q" /* soldIcon */] })
                ),
                __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                    "div",
                    { className: "menu-icon", onClick: this.toggleOptions },
                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement("img", { src: this.dotsIcon })
                ),
                __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                    "div",
                    { className: "name" },
                    name
                ),
                __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                    "div",
                    { className: "tournament" },
                    tournament && tournament.length === 1 && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        "div",
                        { className: "item" },
                        tournament[0].name
                    ),
                    tournament && tournament.length === 0 && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        "div",
                        { className: "item" },
                        this.context.t("General content")
                    ),
                    seasons && seasons.length > 1 && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        "div",
                        { className: "item" },
                        this.context.t("Season: Multiple seasons")
                    ),
                    seasons && seasons.length === 1 && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        "div",
                        { className: "item" },
                        this.context.t("Season: "),
                        seasons[0].year
                    )
                ),
                __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                    "div",
                    { className: "rights" },
                    rightsPackage && rightsPackage.map(function (rp, i, l) {
                        return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                            "span",
                            { key: "rp-" + i },
                            !rp.exclusive && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement("img", { src: __WEBPACK_IMPORTED_MODULE_4__main_components_Icons__["d" /* blueCheckIcon */] }),
                            rp.exclusive && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement("img", { src: __WEBPACK_IMPORTED_MODULE_4__main_components_Icons__["r" /* yellowCheckIcon */] }),
                            __WEBPACK_IMPORTED_MODULE_5__sell_components_SuperRightDefinitions__["a" /* SuperRightBoardLabels */][rp.shortLabel],
                            rp.shortLabel === "PR" && PROGRAM_NAME && _this2.context.t("Program: ") + PROGRAM_NAME
                        );
                    })
                ),
                __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                    "div",
                    { className: "expiry" },
                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        "div",
                        null,
                        salesPackages.length,
                        " sales bundle",
                        salesPackages.length > 1 && "s"
                    ),
                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        "div",
                        null,
                        this.context.t("Expiry:"),
                        " ",
                        expiresAt ? __WEBPACK_IMPORTED_MODULE_1_moment_moment___default()(expiresAt).format('DD/MM/YYYY') : 'Not set'
                    )
                )
            );
        }
    }]);

    return BoardListing;
}(__WEBPACK_IMPORTED_MODULE_0_react___default.a.Component);

BoardListing.contextTypes = {
    t: __WEBPACK_IMPORTED_MODULE_6_prop_types__["PropTypes"].func.isRequired
};
/* harmony default export */ __webpack_exports__["a"] = (BoardListing);

/***/ }),

/***/ "./src/AppBundle/Resources/public/javascript/manage/containers/ClosedDeals.js":
/*!************************************************************************************!*\
  !*** ./src/AppBundle/Resources/public/javascript/manage/containers/ClosedDeals.js ***!
  \************************************************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_react__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_react_redux__ = __webpack_require__(/*! react-redux */ "./node_modules/react-redux/es/index.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_react_table__ = __webpack_require__(/*! react-table */ "./node_modules/react-table/es/index.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__main_components_ContentListing__ = __webpack_require__(/*! ../../main/components/ContentListing */ "./src/AppBundle/Resources/public/javascript/main/components/ContentListing.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__main_components_SendMessage__ = __webpack_require__(/*! ../../main/components/SendMessage */ "./src/AppBundle/Resources/public/javascript/main/components/SendMessage.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__main_actions_utils__ = __webpack_require__(/*! ../../main/actions/utils */ "./src/AppBundle/Resources/public/javascript/main/actions/utils.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6_moment_moment__ = __webpack_require__(/*! moment/moment */ "./node_modules/moment/moment.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6_moment_moment___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_6_moment_moment__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7_react_tooltip__ = __webpack_require__(/*! react-tooltip */ "./node_modules/react-tooltip/dist/index.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7_react_tooltip___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_7_react_tooltip__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8_prop_types__ = __webpack_require__(/*! prop-types */ "./node_modules/prop-types/index.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8_prop_types___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_8_prop_types__);
var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }











var rightImageStyle = {
    width: 17,
    height: 17
};

var ClosedDeals = function (_React$Component) {
    _inherits(ClosedDeals, _React$Component);

    function ClosedDeals(props) {
        _classCallCheck(this, ClosedDeals);

        var _this2 = _possibleConstructorReturn(this, (ClosedDeals.__proto__ || Object.getPrototypeOf(ClosedDeals)).call(this, props));

        _this2.selectListing = function (id) {
            Object(__WEBPACK_IMPORTED_MODULE_5__main_actions_utils__["e" /* goTo */])("listing/" + id);
        };

        _this2.state = {
            loading: false,
            bids: []
        };
        _this2.cancelIcon = assetsBaseDir + "app/images/cancel.png";
        _this2.checkIcon = assetsBaseDir + "app/images/blue_check.png";
        _this2.docIcon = assetsBaseDir + "app/images/doc.png";
        _this2.blueEnvelopeIcon = assetsBaseDir + "app/images/envelope_2.png";
        return _this2;
    }

    _createClass(ClosedDeals, [{
        key: "componentDidMount",
        value: function componentDidMount() {
            var _this = this;
            this.setState({ loading: true });
            ContentArena.ContentApi.getClosedDeals().done(function (bids) {
                _this.setState({ bids: bids, loading: false });
            });
        }
    }, {
        key: "render",
        value: function render() {
            var _this3 = this;

            var _state = this.state,
                loading = _state.loading,
                bids = _state.bids;

            return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                "div",
                { style: {
                        display: 'flex',
                        flexDirection: 'column',
                        flex: 1
                    } },
                bids.length > 0 && bids.map(function (b, i) {
                    return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_4__main_components_SendMessage__["a" /* default */], { key: i,
                        ref: "messagePopup" + b.id,
                        listingId: b.content.id,
                        recipient: b.content.company });
                }),
                bids.length > 0 && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                    "div",
                    null,
                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_2_react_table__["default"], {
                        className: "ca-table",
                        defaultPageSize: 30,
                        showPageSizeOptions: false,
                        showPagination: false,
                        onPageChange: this.onPageChange,
                        minRows: 0,
                        resizable: false,
                        data: bids,
                        select: this.props.select,
                        columns: [{
                            Header: 'Deal ID',
                            headerClassName: 'table-header',
                            className: 'table-header table-header-left',
                            accessor: 'customId',
                            Cell: function Cell(props) {
                                return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                    "div",
                                    null,
                                    "#" + props.value
                                );
                            }
                        }, {
                            Header: function Header() {
                                return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                    "span",
                                    null,
                                    _this3.context.t("Listing name"),
                                    " ",
                                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement("i", { className: "fa fa-sort" })
                                );
                            },
                            headerClassName: 'table-header-big',
                            className: 'table-header-big sorting',
                            id: 'name',
                            accessor: function accessor(d) {
                                return {
                                    name: d.content.name,
                                    customId: d.content.customId
                                };
                            },
                            Cell: function Cell(props) {
                                return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                    "div",
                                    null,
                                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                        "a",
                                        { href: "listing/" + props.value.customId },
                                        Object(__WEBPACK_IMPORTED_MODULE_5__main_actions_utils__["g" /* limitText */])(props.value.name)
                                    )
                                );
                            }
                        }, {
                            accessor: 'content.company.legalName', // Required because our accessor is not a string
                            Header: function Header() {
                                return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                    "span",
                                    null,
                                    _this3.context.t("Seller"),
                                    " ",
                                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement("i", { className: "fa fa-sort" })
                                );
                            },
                            headerClassName: 'table-header-big',
                            className: 'table-header-big'
                        }, {
                            Header: function Header() {
                                return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                    "span",
                                    { "data-tip": "Live transmission" },
                                    "LT"
                                );
                            },
                            accessor: 'content.rightsPackage',
                            headerClassName: 'table-header-small',
                            className: 'table-header-small',
                            Cell: function Cell(props) {
                                return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                    "div",
                                    {
                                        className: "blue" },
                                    props.value.map(function (r) {
                                        return r.shortLabel;
                                    }).indexOf("LT") !== -1 && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement("img", { style: rightImageStyle, src: _this3.checkIcon })
                                );
                            }
                        }, {
                            Header: function Header() {
                                return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                    "span",
                                    { "data-tip": "Live betting" },
                                    "LB"
                                );
                            },
                            accessor: 'content.rightsPackage',
                            headerClassName: 'table-header-small',
                            className: 'table-header-small',
                            Cell: function Cell(props) {
                                return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                    "div",
                                    {
                                        className: "blue" },
                                    props.value.map(function (r) {
                                        return r.shortLabel;
                                    }).indexOf("HL") !== -1 && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement("img", { style: rightImageStyle, src: _this3.checkIcon })
                                );
                            }
                        }, {
                            Header: function Header() {
                                return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                    "span",
                                    { "data-tip": "Delayed & Archive" },
                                    "DA"
                                );
                            },
                            accessor: 'content.rightsPackage',
                            headerClassName: 'table-header-small',
                            className: 'table-header-small',
                            Cell: function Cell(props) {
                                return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                    "div",
                                    {
                                        className: "blue" },
                                    props.value.map(function (r) {
                                        return r.shortLabel;
                                    }).indexOf("DT") !== -1 && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement("img", { style: rightImageStyle, src: _this3.checkIcon })
                                );
                            }
                        }, {
                            Header: function Header() {
                                return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                    "span",
                                    { "data-tip": "Highlights" },
                                    "HL"
                                );
                            },
                            accessor: 'content.rightsPackage',
                            headerClassName: 'table-header-small',
                            className: 'table-header-small',
                            Cell: function Cell(props) {
                                return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                    "div",
                                    {
                                        className: "blue" },
                                    props.value.map(function (r) {
                                        return r.shortLabel;
                                    }).indexOf("HL") !== -1 && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement("img", { style: rightImageStyle, src: _this3.checkIcon })
                                );
                            }
                        }, {
                            Header: function Header() {
                                return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                    "span",
                                    { "data-tip": "News access" },
                                    "NA"
                                );
                            },
                            accessor: 'content.rightsPackage',
                            headerClassName: 'table-header-small',
                            className: 'table-header-small',
                            Cell: function Cell(props) {
                                return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                    "div",
                                    {
                                        className: "blue" },
                                    props.value.map(function (r) {
                                        return r.shortLabel;
                                    }).indexOf("NA") !== -1 && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement("img", { style: rightImageStyle, src: _this3.checkIcon })
                                );
                            }
                        }, {
                            Header: function Header() {
                                return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                    "span",
                                    { "data-tip": "Program" },
                                    "PR"
                                );
                            },
                            accessor: 'content.rightsPackage',
                            headerClassName: 'table-header-small',
                            className: 'table-header-small',
                            Cell: function Cell(props) {
                                return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                    "div",
                                    {
                                        className: "blue" },
                                    props.value.map(function (r) {
                                        return r.shortLabel;
                                    }).indexOf("PR") !== -1 && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement("img", { style: rightImageStyle, src: _this3.checkIcon })
                                );
                            }
                        }, {
                            Header: function Header() {
                                return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                    "span",
                                    null,
                                    _this3.context.t("Territories"),
                                    " ",
                                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement("i", { className: "fa fa-sort" })
                                );
                            },
                            headerClassName: 'table-header',
                            className: 'table-header',
                            id: "territories",
                            accessor: function accessor(d) {
                                return {
                                    size: d.salesPackage.territories.length,
                                    territories: d.salesPackage.territories,
                                    excludedCountries: d.salesPackage.excludedCountries,
                                    worldwide: d.salesPackage.territoriesMethod === "WORLDWIDE" && d.salesPackage.bundleMethod === "SELL_AS_BUNDLE",
                                    excluding: d.salesPackage.territoriesMethod === "WORLDWIDE_EXCLUDING" && d.salesPackage.bundleMethod === "SELL_AS_BUNDLE" && d.salesPackage.excludedCountries.length === 1
                                };
                            },
                            Cell: function Cell(props) {
                                var _props$value = props.value,
                                    size = _props$value.size,
                                    territories = _props$value.territories,
                                    worldwide = _props$value.worldwide,
                                    excluding = _props$value.excluding,
                                    excludedCountries = _props$value.excludedCountries;


                                return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                    "div",
                                    { className: "blue" },
                                    !worldwide && !excluding && size > 1 && size + " territories",
                                    !worldwide && !excluding && size === 1 && territories[0].name,
                                    excluding && "Worldwide excluding " + excludedCountries[0].name,
                                    worldwide && _this3.context.t("Worldwide")
                                );
                            }
                        }, {
                            Header: function Header() {
                                return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                    "span",
                                    null,
                                    _this3.context.t("Price"),
                                    " ",
                                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement("i", { className: "fa fa-sort" })
                                );
                            },
                            headerClassName: 'table-header',
                            className: 'table-header',
                            id: "price",
                            accessor: function accessor(d) {
                                return { fee: d.totalFee, currency: d.salesPackage.currency.code };
                            },
                            Cell: function Cell(props) {
                                return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                    "div",
                                    { className: "blue" },
                                    props.value.fee + " " + Object(__WEBPACK_IMPORTED_MODULE_5__main_actions_utils__["b" /* getCurrencySymbol */])(props.value.currency)
                                );
                            }
                        }, {
                            Header: function Header() {
                                return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                    "span",
                                    null,
                                    _this3.context.t("Date of sale"),
                                    " ",
                                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement("i", { className: "fa fa-sort" })
                                );
                            },
                            headerClassName: 'table-header',
                            className: 'table-header',
                            accessor: 'createdAt',
                            Cell: function Cell(props) {
                                return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                    "div",
                                    null,
                                    __WEBPACK_IMPORTED_MODULE_6_moment_moment___default()(props.value).format('DD/MM/YYYY')
                                );
                            }

                        }, {
                            Header: function Header() {
                                return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                    "span",
                                    null,
                                    _this3.context.t("Buyer name"),
                                    " ",
                                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement("i", { className: "fa fa-sort" })
                                );
                            },
                            headerClassName: 'table-header-big',
                            className: 'table-header-big',
                            accessor: 'buyerUser',
                            Cell: function Cell(props) {
                                return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                    "div",
                                    null,
                                    props.value.firstName + " " + props.value.lastName
                                );
                            }

                        }, {
                            headerClassName: 'table-header',
                            className: 'table-header',
                            Header: this.context.t("Actions"), // Custom header components!
                            id: 'header',
                            accessor: function accessor(d) {
                                return {
                                    id: d.id,
                                    customId: d.customId
                                };
                            },
                            Cell: function Cell(props) {
                                return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                    "div",
                                    { className: "" },
                                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement("img", { style: { margin: '0 10px', cursor: 'pointer' }, onClick: function onClick() {
                                            Object(__WEBPACK_IMPORTED_MODULE_5__main_actions_utils__["j" /* viewLicenseBid */])(props.value.customId);
                                        }, src: _this3.docIcon }),
                                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement("img", { style: { margin: '0 10px', cursor: 'pointer' }, onClick: function onClick() {
                                            _this3.refs["messagePopup" + props.value.id].open();
                                        }, src: _this3.blueEnvelopeIcon })
                                );
                            }
                        }]
                    }),
                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_7_react_tooltip___default.a, { place: "top", type: "dark", effect: "solid" })
                ),
                bids.length === 0 && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                    "div",
                    { className: "manager-content-message" },
                    loading && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        "div",
                        { className: "big-spinner" },
                        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement("i", { className: "fa fa-cog fa-spin" })
                    ),
                    !loading && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        "div",
                        { className: "big-spinner", style: {
                                fontSize: 30
                            } },
                        this.context.t("You don't have closed deal yet")
                    )
                )
            );
        }
    }]);

    return ClosedDeals;
}(__WEBPACK_IMPORTED_MODULE_0_react___default.a.Component);

ClosedDeals.contextTypes = {
    t: __WEBPACK_IMPORTED_MODULE_8_prop_types__["PropTypes"].func.isRequired
};

var mapStateToProps = function mapStateToProps(state, ownProps) {
    return state;
};

var mapDispatchToProps = function mapDispatchToProps(dispatch) {
    return {};
};

/* harmony default export */ __webpack_exports__["a"] = (Object(__WEBPACK_IMPORTED_MODULE_1_react_redux__["connect"])(mapStateToProps, mapDispatchToProps)(ClosedDeals));

/***/ }),

/***/ "./src/AppBundle/Resources/public/javascript/manage/containers/CommercialActivity.js":
/*!*******************************************************************************************!*\
  !*** ./src/AppBundle/Resources/public/javascript/manage/containers/CommercialActivity.js ***!
  \*******************************************************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_react__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_react_redux__ = __webpack_require__(/*! react-redux */ "./node_modules/react-redux/es/index.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_react_select__ = __webpack_require__(/*! react-select */ "./node_modules/react-select/dist/react-select.es.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__main_components_ContentListingCommercialActivity__ = __webpack_require__(/*! ../../main/components/ContentListingCommercialActivity */ "./src/AppBundle/Resources/public/javascript/main/components/ContentListingCommercialActivity.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__main_actions_utils__ = __webpack_require__(/*! ../../main/actions/utils */ "./src/AppBundle/Resources/public/javascript/main/actions/utils.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5_prop_types__ = __webpack_require__(/*! prop-types */ "./node_modules/prop-types/index.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5_prop_types___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_5_prop_types__);
var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }








var CommercialActivity = function (_React$Component) {
    _inherits(CommercialActivity, _React$Component);

    function CommercialActivity(props) {
        _classCallCheck(this, CommercialActivity);

        var _this2 = _possibleConstructorReturn(this, (CommercialActivity.__proto__ || Object.getPrototypeOf(CommercialActivity)).call(this, props));

        _this2.deleteBid = function (id) {
            ContentArena.ContentApi.removeBid({ id: id }).done(function (r) {
                _this2.update();
            });
        };

        _this2.update = function () {
            var _this = _this2;
            _this2.setState({ loading: true });

            ContentArena.ContentApi.getAllDeals().done(function (listings) {
                listings.forEach(function (l) {
                    return ContentArena.Utils.contentParserFromServer(l);
                });
                _this.setState({ listings: listings, loading: false });
            });
        };

        _this2.filtered = function () {
            var _this2$state = _this2.state,
                filter = _this2$state.filter,
                selectedListings = _this2$state.selectedListings;


            var listings = _this2.state.listings || [];

            if (selectedListings.length > 0) {
                return _this2.state.listings.filter(function (b) {
                    return selectedListings.indexOf(b.customId) !== -1;
                });
            }

            switch (filter) {
                case "closeddeals":
                    return listings.filter(function (b) {
                        return b.salesPackages.filter(function (sp) {
                            return sp.bids.filter(function (b) {
                                return b.status.name === "APPROVED";
                            }).length > 0;
                        }).length > 0;
                    });
                case "openbids":
                    return listings.filter(function (b) {
                        return b.salesPackages.filter(function (sp) {
                            return sp.bids.filter(function (b) {
                                return b.status.name === "PENDING";
                            }).length > 0;
                        }).length > 0;
                    });
                case "withactivity":
                    return listings.filter(function (b) {
                        return b.salesPackages.filter(function (sp) {
                            return sp.bids.length > 0;
                        }).length > 0;
                    });
                case "ALL":
                    return listings;
                default:
                    return listings;

            }
        };

        _this2.remove = function (customId) {
            _this2.setState({
                listings: _this2.state.listings.filter(function (l) {
                    return l.customId !== customId;
                })
            });
        };

        _this2.state = {
            loading: false,
            listings: [],
            selectedListings: [],
            filter: 'ALL',
            bundlesOpen: false,
            bidsOpen: false

        };
        _this2.bulletIcon = assetsBaseDir + "app/images/bullet.png";
        _this2.activeBulletIcon = assetsBaseDir + "app/images/active_bullet.png";

        return _this2;
    }

    _createClass(CommercialActivity, [{
        key: 'componentDidMount',
        value: function componentDidMount() {
            var match = this.props.match;


            var params = void 0,
                filter = void 0,
                listings = [];

            if (match && match.params && match.params.filterName) {

                params = match.params.filterName.split("&");

                if (params.length > 1) {
                    listings.push(params[0]);
                    filter = params[1];
                } else {
                    if (params[0].length === 5) {
                        listings.push(params[0]);
                        filter = "ALL";
                    } else {
                        filter = params[0];
                    }
                }

                this.setState({
                    filter: filter,
                    selectedListings: listings
                });
            }

            this.update();
        }
    }, {
        key: 'render',
        value: function render() {
            var _this3 = this;

            var _state = this.state,
                loading = _state.loading,
                filter = _state.filter,
                selectedListings = _state.selectedListings;
            var history = this.props.history;

            var listings = this.filtered();
            var allListings = this.state.listings;
            return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                'div',
                { style: { height: '100%' } },
                __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                    'div',
                    { className: "manager-filter-container" },
                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        'div',
                        { className: "listing-filter" },
                        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_2_react_select__["default"], {
                            name: 'form-field-name',
                            placeholder: 'All listings',
                            onChange: function onChange(selected) {
                                var filterString = filter !== "ALL" ? "&" + filter : "";
                                history.push("/commercialactivity/filter/" + selected.value + filterString);
                            },
                            multi: false,
                            value: selectedListings[0],
                            options: allListings.map(function (b) {
                                return { value: b.customId, label: b.name };
                            })
                        })
                    ),
                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        'div',
                        { className: "status-filter" },
                        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                            'div',
                            { className: "status-filter-item",
                                onClick: function onClick() {
                                    var filterString = selectedListings.length > 0 ? "/" + selectedListings[0] : "";
                                    history.push("/commercialactivity" + filterString);
                                } },
                            filter === "ALL" && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('img', { src: this.activeBulletIcon }),
                            filter !== "ALL" && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('img', { src: this.bulletIcon }),
                            this.context.t("All bundles")
                        ),
                        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                            'div',
                            { className: "status-filter-item",
                                onClick: function onClick() {
                                    var filterString = selectedListings.length > 0 ? selectedListings[0] + "&" : "";
                                    history.push("/commercialactivity/filter/" + filterString + "withactivity");
                                } },
                            filter === "withactivity" && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('img', { src: this.activeBulletIcon }),
                            filter !== "withactivity" && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('img', { src: this.bulletIcon }),
                            this.context.t("With activity")
                        ),
                        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                            'div',
                            { className: "status-filter-item",
                                onClick: function onClick() {
                                    var filterString = selectedListings.length > 0 ? selectedListings[0] + "&" : "";
                                    history.push("/commercialactivity/filter/" + filterString + "openbids");
                                } },
                            filter === "openbids" && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('img', { src: this.activeBulletIcon }),
                            filter !== "openbids" && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('img', { src: this.bulletIcon }),
                            this.context.t("Open"),
                            ' ',
                            this.context.t("Bids")
                        ),
                        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                            'div',
                            { className: "status-filter-item",
                                onClick: function onClick() {
                                    var filterString = selectedListings.length > 0 ? selectedListings[0] + "&" : "";
                                    history.push("/commercialactivity/filter/" + filterString + "closeddeals");
                                } },
                            filter === "closeddeals" && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('img', { src: this.activeBulletIcon }),
                            filter !== "closeddeals" && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('img', { src: this.bulletIcon }),
                            this.context.t("Closed deals")
                        )
                    )
                ),
                listings.length > 0 && listings.map(function (listing, i, list) {
                    return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_3__main_components_ContentListingCommercialActivity__["a" /* default */], _extends({
                        onUpdate: _this3.update,
                        onDelete: _this3.deleteBid,
                        bidsOpen: list.length === 1 || _this3.state.filter !== "ALL",
                        bundlesOpen: list.length === 1 || _this3.state.filter !== "ALL",
                        hideWithoutBids: _this3.state.filter === "withactivity",
                        filterByOpenBids: _this3.state.filter === "openbids",
                        filterByClosedDeals: _this3.state.filter === "closeddeals",
                        onSelect: function onSelect(id) {
                            return Object(__WEBPACK_IMPORTED_MODULE_4__main_actions_utils__["f" /* goToListing */])(id, true);
                        },
                        key: i + "-" + listing.customId
                    }, listing));
                }),
                listings.length === 0 && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                    'div',
                    { className: 'manager-content-message' },
                    loading && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        'div',
                        { className: 'big-spinner' },
                        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('i', { className: 'fa fa-cog fa-spin' })
                    ),
                    !loading && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        'div',
                        { className: 'big-spinner', style: {
                                fontSize: 30
                            } },
                        this.context.t("You have no offers yet")
                    )
                )
            );
        }
    }]);

    return CommercialActivity;
}(__WEBPACK_IMPORTED_MODULE_0_react___default.a.Component);

CommercialActivity.contextTypes = {
    t: __WEBPACK_IMPORTED_MODULE_5_prop_types__["PropTypes"].func.isRequired
};

var mapStateToProps = function mapStateToProps(state, ownProps) {
    return state;
};

var mapDispatchToProps = function mapDispatchToProps(dispatch) {
    return {};
};

/* harmony default export */ __webpack_exports__["a"] = (Object(__WEBPACK_IMPORTED_MODULE_1_react_redux__["connect"])(mapStateToProps, mapDispatchToProps)(CommercialActivity));

/***/ }),

/***/ "./src/AppBundle/Resources/public/javascript/manage/containers/ManageListings.js":
/*!***************************************************************************************!*\
  !*** ./src/AppBundle/Resources/public/javascript/manage/containers/ManageListings.js ***!
  \***************************************************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_react__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_react_redux__ = __webpack_require__(/*! react-redux */ "./node_modules/react-redux/es/index.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__main_actions_utils__ = __webpack_require__(/*! ../../main/actions/utils */ "./src/AppBundle/Resources/public/javascript/main/actions/utils.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__components_BoardListing__ = __webpack_require__(/*! ../components/BoardListing */ "./src/AppBundle/Resources/public/javascript/manage/components/BoardListing.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__main_actions_userActions__ = __webpack_require__(/*! ../../main/actions/userActions */ "./src/AppBundle/Resources/public/javascript/main/actions/userActions.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5_prop_types__ = __webpack_require__(/*! prop-types */ "./node_modules/prop-types/index.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5_prop_types___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_5_prop_types__);
var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }








var ManageListings = function (_React$Component) {
    _inherits(ManageListings, _React$Component);

    function ManageListings(props) {
        _classCallCheck(this, ManageListings);

        var _this2 = _possibleConstructorReturn(this, (ManageListings.__proto__ || Object.getPrototypeOf(ManageListings)).call(this, props));

        _this2.selectListing = function (id) {
            Object(__WEBPACK_IMPORTED_MODULE_2__main_actions_utils__["e" /* goTo */])("listing/" + id);
        };

        _this2.duplicate = function (customId) {
            var draft = _this2.state.draft;
            _this2.setState({ loadingDraft: true });
            ContentArena.ContentApi.duplicateListing(customId).done(function (response) {
                if (response.success) {
                    draft.unshift(response.listing);
                    _this2.setState({ draft: draft, loadingDraft: false });
                }
            });
        };

        _this2.deactivate = function (customId) {
            var inactive = _this2.state.inactive;
            _this2.setState({ loadingInactive: true });
            ContentArena.ContentApi.deactivateListing(customId).done(function (response) {
                if (response.success) {
                    //inactive.unshift(ContentArena.Utils.contentParserFromServer(response.listing));
                    inactive.unshift(response.listing);
                    _this2.setState({ inactive: inactive, loadingInactive: false });
                }
            });
        };

        _this2.state = {
            loading: false,
            loadingDraft: false,
            loadingInactive: false,
            loadingActive: false,
            loadingExpired: false,
            draft: [],
            active: [],
            inactive: [],
            expired: []
        };
        return _this2;
    }

    _createClass(ManageListings, [{
        key: "componentDidMount",
        value: function componentDidMount() {
            var _this = this;
            this.setState({
                loadingDraft: true,
                loadingInactive: true,
                loadingActive: true,
                loadingExpired: true
            });

            ContentArena.ContentApi.getDraftListings().done(function (listings) {
                listings = listings.map(function (listing) {
                    return ContentArena.Utils.contentParserFromServer(listing);
                });
                _this.setState({ draft: listings, loadingDraft: false });
            });

            ContentArena.ContentApi.getInactiveListings().done(function (listings) {
                listings = listings.map(function (listing) {
                    return ContentArena.Utils.contentParserFromServer(listing);
                });
                _this.setState({ inactive: listings, loadingInactive: false });
            });

            ContentArena.ContentApi.getActiveListings().done(function (listings) {
                listings = listings.map(function (listing) {
                    return ContentArena.Utils.contentParserFromServer(listing);
                });
                _this.setState({ active: listings, loadingActive: false });
            });

            ContentArena.ContentApi.getExpiredListings().done(function (listings) {
                listings = listings.map(function (listing) {
                    return ContentArena.Utils.contentParserFromServer(listing);
                });
                _this.setState({ expired: listings, loadingExpired: false });
            });

            this.props.updateProfile("SELLER");
        }
    }, {
        key: "render",
        value: function render() {
            var _this3 = this;

            var _state = this.state,
                loadingDraft = _state.loadingDraft,
                loadingActive = _state.loadingActive,
                loadingExpired = _state.loadingExpired,
                loadingInactive = _state.loadingInactive,
                draft = _state.draft,
                active = _state.active,
                inactive = _state.inactive,
                expired = _state.expired;

            return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                "div",
                { style: {
                        display: 'flex',
                        flexDirection: 'column',
                        flex: 1
                    } },
                __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                    "div",
                    { style: {
                            display: 'flex',
                            flexDirection: 'row',
                            padding: '0 0 5px',
                            color: '#4F4F4F',
                            fontSize: 16,
                            fontWeight: 600,
                            alignItems: 'center',
                            marginTop: '-15px'

                        } },
                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        "div",
                        { style: { margin: '0 20px', flex: 1, display: 'flex', alignItems: 'center' } },
                        this.context.t("Draft"),
                        " (",
                        draft.length,
                        ")"
                    ),
                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        "div",
                        { style: { margin: '0 20px', flex: 1 } },
                        this.context.t("Inactive listings"),
                        " (",
                        inactive.length,
                        ")"
                    ),
                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        "div",
                        { style: { margin: '0 20px', flex: 1 } },
                        this.context.t("Active listings"),
                        " (",
                        active.length,
                        ")"
                    ),
                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        "div",
                        { style: { margin: '0 20px', flex: 1 } },
                        this.context.t("Expired & sold listings"),
                        " (",
                        expired.length,
                        ")"
                    )
                ),
                __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                    "div",
                    { className: "board" },
                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        "div",
                        { className: "column" },
                        loadingDraft && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                            "div",
                            { className: "medium-spinner" },
                            __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement("i", { className: "fa fa-cog fa-spin" })
                        ),
                        draft.length > 0 && draft.map(function (listing, i, list) {
                            return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_3__components_BoardListing__["a" /* default */], _extends({
                                key: "draft-" + i,
                                className: "listing",
                                style: {
                                    zIndex: list.length - i
                                },
                                defaultAction: "EDIT",
                                showEdit: true,
                                showRemove: true,
                                showDuplicate: true,
                                showView: false,
                                onRemove: function onRemove() {
                                    list.splice(i, 1);
                                    _this3.setState({ draft: list });
                                    ContentArena.ContentApi.removeListing(listing.customId);
                                },
                                onDuplicate: _this3.duplicate
                            }, listing));
                        })
                    ),
                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        "div",
                        { className: "column" },
                        loadingInactive && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                            "div",
                            { className: "medium-spinner" },
                            __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement("i", { className: "fa fa-cog fa-spin" })
                        ),
                        inactive.length > 0 && inactive.map(function (listing, i, list) {
                            return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_3__components_BoardListing__["a" /* default */], _extends({
                                key: "inactive-" + i,
                                className: "listing",
                                style: {
                                    zIndex: list.length - i
                                },
                                defaultAction: "SUBMIT",
                                showEdit: true,
                                showRemove: true,
                                showDuplicate: true,
                                showSubmit: true,
                                showView: true,
                                onRemove: function onRemove() {
                                    list.splice(i, 1);
                                    _this3.setState({ inactive: list });
                                    ContentArena.ContentApi.removeListing(listing.customId);
                                },
                                onDuplicate: _this3.duplicate
                            }, listing));
                        })
                    ),
                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        "div",
                        { className: "column" },
                        active.length === 0 && loadingActive && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                            "div",
                            { className: "medium-spinner" },
                            __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement("i", { className: "fa fa-cog fa-spin" })
                        ),
                        active.length > 0 && active.map(function (listing, i, list) {
                            return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_3__components_BoardListing__["a" /* default */], _extends({
                                key: "active-" + i,
                                className: "listing",
                                style: {
                                    zIndex: list.length - i
                                },
                                showEdit: listing.editable,
                                showRemove: listing.editable,
                                showDeactivate: listing.editable,
                                showDuplicate: true,
                                showView: true,
                                defaultAction: "VIEW",
                                onDeactivate: function onDeactivate() {
                                    list.splice(i, 1);
                                    _this3.setState({ active: list });
                                    _this3.deactivate(listing.customId);
                                },
                                onRemove: function onRemove() {
                                    list.splice(i, 1);
                                    _this3.setState({ active: list });
                                    ContentArena.ContentApi.removeListing(listing.customId);
                                },
                                onDuplicate: _this3.duplicate
                            }, listing));
                        })
                    ),
                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        "div",
                        { className: "column" },
                        expired.length === 0 && loadingExpired && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                            "div",
                            { className: "medium-spinner" },
                            __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement("i", { className: "fa fa-cog fa-spin" })
                        ),
                        expired.length > 0 && expired.map(function (listing, i, list) {
                            return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_3__components_BoardListing__["a" /* default */], _extends({
                                key: "expired-" + i,
                                className: "listing",
                                style: {
                                    zIndex: list.length - i
                                },
                                showRemove: listing.editable,
                                showDuplicate: true,
                                showView: true,
                                onRemove: function onRemove() {
                                    list.splice(i, 1);
                                    _this3.setState({ expired: list });
                                    ContentArena.ContentApi.removeListing(listing.customId);
                                },
                                onDuplicate: _this3.duplicate
                            }, listing));
                        })
                    )
                )
            );
        }
    }]);

    return ManageListings;
}(__WEBPACK_IMPORTED_MODULE_0_react___default.a.Component);

ManageListings.contextTypes = {
    t: __WEBPACK_IMPORTED_MODULE_5_prop_types__["PropTypes"].func.isRequired
};

var mapStateToProps = function mapStateToProps(state, ownProps) {
    return state;
};

var mapDispatchToProps = function mapDispatchToProps(dispatch) {
    return {
        updateProfile: function updateProfile(profile) {
            return dispatch(Object(__WEBPACK_IMPORTED_MODULE_4__main_actions_userActions__["a" /* updateProfile */])(profile));
        }
    };
};

/* harmony default export */ __webpack_exports__["a"] = (Object(__WEBPACK_IMPORTED_MODULE_1_react_redux__["connect"])(mapStateToProps, mapDispatchToProps)(ManageListings));

/***/ }),

/***/ "./src/AppBundle/Resources/public/javascript/manage/containers/Messages.js":
/*!*********************************************************************************!*\
  !*** ./src/AppBundle/Resources/public/javascript/manage/containers/Messages.js ***!
  \*********************************************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_react__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_react_redux__ = __webpack_require__(/*! react-redux */ "./node_modules/react-redux/es/index.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__main_actions_utils__ = __webpack_require__(/*! ../../main/actions/utils */ "./src/AppBundle/Resources/public/javascript/main/actions/utils.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__components_BoardListing__ = __webpack_require__(/*! ../components/BoardListing */ "./src/AppBundle/Resources/public/javascript/manage/components/BoardListing.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_moment_moment__ = __webpack_require__(/*! moment/moment */ "./node_modules/moment/moment.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_moment_moment___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_4_moment_moment__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5_prop_types__ = __webpack_require__(/*! prop-types */ "./node_modules/prop-types/index.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5_prop_types___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_5_prop_types__);
var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }








var Messages = function (_React$Component) {
    _inherits(Messages, _React$Component);

    function Messages(props) {
        _classCallCheck(this, Messages);

        var _this = _possibleConstructorReturn(this, (Messages.__proto__ || Object.getPrototypeOf(Messages)).call(this, props));

        _this.selectThread = function (thread) {
            _this.setState({
                selectedThread: thread
            });

            _this.updateMessages(thread);
        };

        _this.updateMessages = function (thread) {
            var selectedThread = thread || _this.state.selectedThread;

            if (!selectedThread) return;

            _this.setState({
                loadingMessages: true,
                messages: []
            });

            ContentArena.ContentApi.getThread(selectedThread.customId).done(function (r) {
                _this.setState({
                    loadingMessages: false,
                    messages: r
                });
            });
        };

        _this.send = function () {
            var _this$state = _this.state,
                selectedThread = _this$state.selectedThread,
                inputMessage = _this$state.inputMessage,
                messages = _this$state.messages;


            var message = {
                content: inputMessage,
                thread: selectedThread.id,
                listing: selectedThread.listing.id
            };

            _this.setState({ inputMessage: "", saving: true });

            ContentArena.ContentApi.sendMessage(message).done(function (r) {
                _this.setState({ saving: false, showSuccess: true, messages: [].concat(_toConsumableArray(messages), [r]) });
            });
        };

        _this.state = {
            threads: [],
            loadingThreads: false,
            loadingMessages: false,
            selectedThread: null,
            inputMessage: null,
            messages: []
        };
        return _this;
    }

    _createClass(Messages, [{
        key: "componentDidMount",
        value: function componentDidMount() {
            var _this2 = this;

            this.setState({
                loadingThreads: true
            });
            ContentArena.ContentApi.getThreads().done(function (r) {

                r.sort(function (a, b) {
                    var aDate = __WEBPACK_IMPORTED_MODULE_4_moment_moment___default()(a.lastMessageDate);
                    var bDate = __WEBPACK_IMPORTED_MODULE_4_moment_moment___default()(b.lastMessageDate);
                    return aDate > bDate ? 1 : bDate > a.bDate ? -1 : 0;
                }).reverse();

                _this2.setState({
                    threads: r,
                    selectedThread: _this2.state.selectedThread ? _this2.state.selectedThread : r.length > 0 ? r[0] : null,
                    loadingThreads: false
                });
                _this2.updateMessages();
            });
        }
    }, {
        key: "render",
        value: function render() {
            var _this3 = this;

            var _state = this.state,
                loadingThreads = _state.loadingThreads,
                loadingMessages = _state.loadingMessages,
                selectedThread = _state.selectedThread,
                threads = _state.threads,
                inputMessage = _state.inputMessage,
                messages = _state.messages,
                saving = _state.saving;
            var user = this.props.user;


            return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                "div",
                { className: "messages-container" },
                __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                    "div",
                    { className: "threads" },
                    loadingThreads && threads.length === 0 && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement("i", { className: "fa fa-cog fa-spin" }),
                    !loadingThreads && threads.length === 0 && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        "div",
                        null,
                        this.context.t("No threads yet")
                    ),
                    !loadingThreads && threads.map(function (t, i) {
                        return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                            "div",
                            { className: selectedThread.id === t.id ? "thread thread-selected" : "thread",
                                key: "thread-" + i,
                                onClick: function onClick() {
                                    _this3.selectThread(t);
                                } },
                            __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                "div",
                                { className: "date" },
                                t.lastMessageDate && __WEBPACK_IMPORTED_MODULE_4_moment_moment___default()(t.lastMessageDate).format('YYYY/MM/DD')
                            ),
                            __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                "div",
                                { className: "listing-name" },
                                t.listing.name
                            ),
                            __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                "div",
                                { className: "company" },
                                t.oppositeParty.legalName
                            ),
                            __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                "div",
                                { className: "user" },
                                Object(__WEBPACK_IMPORTED_MODULE_2__main_actions_utils__["d" /* getFullName */])(t.lastMessageUser)
                            ),
                            __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                "div",
                                { className: "last-message" },
                                t.lastMessageContent && Object(__WEBPACK_IMPORTED_MODULE_2__main_actions_utils__["g" /* limitText */])(t.lastMessageContent)
                            )
                        );
                    })
                ),
                selectedThread && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                    "div",
                    { className: "thread-content" },
                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        "div",
                        { className: "thread-title" },
                        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                            "div",
                            { className: "listing-name", onClick: function onClick() {
                                    Object(__WEBPACK_IMPORTED_MODULE_2__main_actions_utils__["f" /* goToListing */])(selectedThread.listing.customId, true);
                                } },
                            selectedThread.listing.name
                        ),
                        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                            "div",
                            { className: "company-name" },
                            selectedThread.oppositeParty.legalName
                        )
                    ),
                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        "div",
                        { className: "messages" },
                        loadingMessages && messages.length === 0 && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                            "div",
                            null,
                            __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement("i", { className: "fa fa-cog fa-spin" })
                        ),
                        !loadingMessages && messages.map(function (m, i) {
                            return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                "div",
                                { className: user === m.sender.email ? "message own-message" : "message" },
                                __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                    "div",
                                    { className: "message-sender" },
                                    Object(__WEBPACK_IMPORTED_MODULE_2__main_actions_utils__["d" /* getFullName */])(m.sender)
                                ),
                                __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                    "div",
                                    { className: "message-content" },
                                    m.content
                                ),
                                __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                    "div",
                                    { className: "message-date" },
                                    __WEBPACK_IMPORTED_MODULE_4_moment_moment___default()(m.createdAt).format('YYYY/MM/DD HH:mm')
                                )
                            );
                        })
                    ),
                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        "div",
                        { className: "message-input" },
                        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                            "div",
                            { className: "message-input-title" },
                            this.context.t("Write a message")
                        ),
                        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement("textarea", {
                            value: inputMessage,
                            onChange: function onChange(e) {
                                _this3.setState({ inputMessage: e.target.value });
                            },
                            className: "message-content",
                            placeholder: "write a message" }),
                        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                            "button",
                            { className: "standard-button",
                                onClick: this.send,
                                disabled: !inputMessage || inputMessage === "" || saving },
                            !saving && "Send",
                            saving && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement("i", { className: "fa fa-cog fa-spin" })
                        )
                    )
                ),
                !selectedThread && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                    "div",
                    null,
                    this.context.t("No thread selected")
                )
            );
        }
    }]);

    return Messages;
}(__WEBPACK_IMPORTED_MODULE_0_react___default.a.Component);

Messages.contextTypes = {
    t: __WEBPACK_IMPORTED_MODULE_5_prop_types__["PropTypes"].func.isRequired
};

var mapStateToProps = function mapStateToProps(state, ownProps) {
    return state;
};

var mapDispatchToProps = function mapDispatchToProps(dispatch) {
    return {};
};

/* harmony default export */ __webpack_exports__["a"] = (Object(__WEBPACK_IMPORTED_MODULE_1_react_redux__["connect"])(mapStateToProps, mapDispatchToProps)(Messages));

/***/ }),

/***/ "./src/AppBundle/Resources/public/javascript/manage/containers/PendingDeals.js":
/*!*************************************************************************************!*\
  !*** ./src/AppBundle/Resources/public/javascript/manage/containers/PendingDeals.js ***!
  \*************************************************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_react__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_react_redux__ = __webpack_require__(/*! react-redux */ "./node_modules/react-redux/es/index.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__main_components_ContentListingPendingBid__ = __webpack_require__(/*! ../../main/components/ContentListingPendingBid */ "./src/AppBundle/Resources/public/javascript/main/components/ContentListingPendingBid.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__main_actions_utils__ = __webpack_require__(/*! ../../main/actions/utils */ "./src/AppBundle/Resources/public/javascript/main/actions/utils.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_prop_types__ = __webpack_require__(/*! prop-types */ "./node_modules/prop-types/index.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_prop_types___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_4_prop_types__);
var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }







var PendingDeals = function (_React$Component) {
    _inherits(PendingDeals, _React$Component);

    function PendingDeals(props) {
        _classCallCheck(this, PendingDeals);

        var _this2 = _possibleConstructorReturn(this, (PendingDeals.__proto__ || Object.getPrototypeOf(PendingDeals)).call(this, props));

        _this2.selectListing = function (id) {
            Object(__WEBPACK_IMPORTED_MODULE_3__main_actions_utils__["e" /* goTo */])("listing/" + id, true);
        };

        _this2.update = function () {
            var _this = _this2;
            _this2.setState({ loading: true, loadingDeclined: true });
            ContentArena.ContentApi.getPendingDeals().done(function (bids) {
                _this.setState({ bids: bids, loading: false });
            });

            ContentArena.ContentApi.getRejectedDeals().done(function (declinedBids) {
                _this.setState({ declinedBids: declinedBids, loadingDeclined: false });
            });
        };

        _this2.deleteBid = function (id) {
            ContentArena.ContentApi.removeBid({ id: id }).done(function (r) {
                _this2.update();
            });
        };

        _this2.remove = function (customId) {
            _this2.setState({
                bids: _this2.state.bids.filter(function (l) {
                    return l.customId !== customId;
                })
            });
        };

        _this2.state = {
            loading: false,
            loadingDeclined: false,
            bids: [],
            declinedBids: [],
            tab: props.match.params.tab || "activebids"

        };
        _this2.bulletIcon = assetsBaseDir + "app/images/bullet.png";
        _this2.activeBulletIcon = assetsBaseDir + "app/images/active_bullet.png";
        return _this2;
    }

    _createClass(PendingDeals, [{
        key: 'componentDidMount',
        value: function componentDidMount() {
            this.update();
        }
    }, {
        key: 'render',
        value: function render() {
            var _this3 = this;

            var _state = this.state,
                loading = _state.loading,
                bids = _state.bids,
                tab = _state.tab,
                declinedBids = _state.declinedBids,
                loadingDeclined = _state.loadingDeclined;
            var history = this.props.history;

            return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                'div',
                { style: {
                        display: 'flex',
                        flexDirection: 'column',
                        flex: 1
                    } },
                __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                    'div',
                    { style: {
                            display: 'flex',
                            padding: '0 0 20px',
                            color: '#4F4F4F',
                            fontSize: 18,
                            fontWeight: 600
                        } },
                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        'div',
                        { style: { margin: '0 20px' } },
                        'Bids'
                    ),
                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        'div',
                        { style: { margin: '0 20px', cursor: 'pointer' },
                            onClick: function onClick() {
                                history.push('/bids/activebids');
                            } },
                        tab === "activebids" && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('img', { style: { margin: '0px 10px 3px' }, src: this.activeBulletIcon }),
                        tab !== "activebids" && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('img', { style: { margin: '0px 10px 3px' }, src: this.bulletIcon }),
                        this.context.t("Active")
                    ),
                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        'div',
                        { style: { margin: '0 20px', cursor: 'pointer' },
                            onClick: function onClick() {
                                history.push('/bids/declinedbids');
                            } },
                        tab === "declinedbids" && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('img', { style: { margin: '0px 10px 3px' }, src: this.activeBulletIcon }),
                        tab !== "declinedbids" && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('img', { style: { margin: '0px 10px 3px' }, src: this.bulletIcon }),
                        this.context.t("Declined")
                    )
                ),
                tab === "activebids" && bids.length > 0 && bids.map(function (bid, i) {
                    return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_2__main_components_ContentListingPendingBid__["a" /* default */], _extends({
                        onSelect: _this3.selectListing,
                        onDelete: _this3.deleteBid,
                        key: i + "-" + bid.content.customId,
                        bid: bid
                    }, bid.content));
                }),
                tab === "declinedbids" && declinedBids.length > 0 && declinedBids.map(function (bid, i) {
                    return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_2__main_components_ContentListingPendingBid__["a" /* default */], _extends({
                        onSelect: _this3.selectListing,
                        onDelete: _this3.deleteBid,
                        key: i + "-" + bid.content.customId,
                        bid: bid
                    }, bid.content));
                }),
                tab === "activebids" && bids.length === 0 && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                    'div',
                    { className: 'manager-content-message' },
                    loading && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        'div',
                        { className: 'big-spinner' },
                        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('i', { className: 'fa fa-cog fa-spin' })
                    ),
                    !loading && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        'div',
                        { className: 'big-spinner', style: {
                                fontSize: 30
                            } },
                        this.context.t("You haven't made any bids yet!")
                    )
                ),
                tab === "declinedbids" && declinedBids.length === 0 && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                    'div',
                    { className: 'manager-content-message' },
                    loadingDeclined && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        'div',
                        { className: 'big-spinner' },
                        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('i', { className: 'fa fa-cog fa-spin' })
                    ),
                    !loadingDeclined && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        'div',
                        { className: 'big-spinner', style: {
                                fontSize: 30
                            } },
                        this.context.t("You haven't any declined bids yet!")
                    )
                )
            );
        }
    }]);

    return PendingDeals;
}(__WEBPACK_IMPORTED_MODULE_0_react___default.a.Component);

PendingDeals.contextTypes = {
    t: __WEBPACK_IMPORTED_MODULE_4_prop_types__["PropTypes"].func.isRequired
};

var mapStateToProps = function mapStateToProps(state, ownProps) {
    return state;
};

var mapDispatchToProps = function mapDispatchToProps(dispatch) {
    return {};
};

/* harmony default export */ __webpack_exports__["a"] = (Object(__WEBPACK_IMPORTED_MODULE_1_react_redux__["connect"])(mapStateToProps, mapDispatchToProps)(PendingDeals));

/***/ }),

/***/ "./src/AppBundle/Resources/public/javascript/manage/containers/Settings.js":
/*!*********************************************************************************!*\
  !*** ./src/AppBundle/Resources/public/javascript/manage/containers/Settings.js ***!
  \*********************************************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_react__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_react_redux__ = __webpack_require__(/*! react-redux */ "./node_modules/react-redux/es/index.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_react_table__ = __webpack_require__(/*! react-table */ "./node_modules/react-table/es/index.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__main_actions_utils__ = __webpack_require__(/*! ../../main/actions/utils */ "./src/AppBundle/Resources/public/javascript/main/actions/utils.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__main_components_CountrySelector__ = __webpack_require__(/*! ../../main/components/CountrySelector */ "./src/AppBundle/Resources/public/javascript/main/components/CountrySelector.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5_moment_moment__ = __webpack_require__(/*! moment/moment */ "./node_modules/moment/moment.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5_moment_moment___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_5_moment_moment__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__main_components_Icons__ = __webpack_require__(/*! ../../main/components/Icons */ "./src/AppBundle/Resources/public/javascript/main/components/Icons.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7_prop_types__ = __webpack_require__(/*! prop-types */ "./node_modules/prop-types/index.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7_prop_types___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_7_prop_types__);
var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }










var Settings = function (_React$Component) {
    _inherits(Settings, _React$Component);

    function Settings(props) {
        _classCallCheck(this, Settings);

        var _this = _possibleConstructorReturn(this, (Settings.__proto__ || Object.getPrototypeOf(Settings)).call(this, props));

        _this.updateCompany = function () {
            var history = _this.props.history;

            _this.setState({ updatingCompany: true, editCompanyInfo: false });
            ContentArena.ContentApi.updateCompany(_this.state.user.company).done(function () {
                history.push("/settings");
            });
        };

        _this.updateUser = function () {
            var history = _this.props.history;

            _this.setState({ updatingUser: true, editPersonalInfo: false });
            ContentArena.ContentApi.updateUser(_this.state.user).done(function () {
                history.push("/settings");
            });
        };

        _this.updatePassword = function () {
            _this.setState({ updatingPassword: true });
            ContentArena.ContentApi.updatePassword({
                id: _this.state.user.id,
                password: _this.state.password
            }).done(function () {
                _this.setState({
                    updatingPassword: false,
                    password: null,
                    passwordCheck: null,
                    passwordUpdated: true
                });
            });
        };

        _this.validate = function (pass) {
            return {
                length: pass.length >= 8,
                digit: /\d/.test(pass),
                upper: /[A-Z]/.test(pass),
                special: /[!@#$%^&*()_+\-=\[\]{};':"\\|,.<>\/?]/.test(pass)
            };
        };

        _this.invalidPassword = function () {
            var _this$state = _this.state,
                oldPassword = _this$state.oldPassword,
                password = _this$state.password,
                passwordCheck = _this$state.passwordCheck;


            if (!oldPassword || !password || !passwordCheck) return true;

            var valid = _this.validate(password);

            return password !== passwordCheck || !valid.length || !valid.digit || !valid.upper || !valid.special;
        };

        _this.state = {
            loading: false,
            updatingCompany: false,
            updatingUser: false,
            updatingPassword: false,
            loadingCompanyUsers: false,
            editPersonalInfo: props.match.params.filter === "editpersonal",
            editCompanyInfo: props.match.params.filter === "editcompany",
            companyUsers: [],
            user: {}
        };
        return _this;
    }

    _createClass(Settings, [{
        key: "componentDidMount",
        value: function componentDidMount() {
            var _this2 = this;

            this.setState({ loading: true, loadingCompanyUsers: true });

            ContentArena.ContentApi.getUserInfo().done(function (user) {
                _this2.setState({ loading: false, user: user });
            });

            ContentArena.ContentApi.getCompanyUsers().done(function (companyUsers) {
                _this2.setState({ loadingCompanyUsers: false, companyUsers: companyUsers });
            });
        }
    }, {
        key: "render",
        value: function render() {
            var _this3 = this;

            var history = this.props.history;
            var _state = this.state,
                loading = _state.loading,
                editPersonalInfo = _state.editPersonalInfo,
                editCompanyInfo = _state.editCompanyInfo,
                loadingCompanyUsers = _state.loadingCompanyUsers,
                companyUsers = _state.companyUsers,
                updatingCompany = _state.updatingCompany,
                updatingUser = _state.updatingUser,
                updatingPassword = _state.updatingPassword,
                password = _state.password,
                passwordCheck = _state.passwordCheck,
                passwordUpdated = _state.passwordUpdated;

            var user = this.state.user;

            var country = user && user.company && user.company.country ? { label: user.company.country.name, value: user.company.country.name } : null;

            return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                "div",
                { className: "settings-container" },
                __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                    "div",
                    { className: "title" },
                    this.context.t("Company information"),
                    !editCompanyInfo && !updatingCompany && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        "div",
                        { className: "edit-button", onClick: function onClick(e) {
                                history.push("/settings/editcompany");
                            } },
                        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement("img", { src: __WEBPACK_IMPORTED_MODULE_6__main_components_Icons__["j" /* editIcon */] }),
                        this.context.t("Edit")
                    ),
                    editCompanyInfo && !updatingCompany && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        "div",
                        { className: "edit-button", onClick: this.updateCompany },
                        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement("img", { src: __WEBPACK_IMPORTED_MODULE_6__main_components_Icons__["j" /* editIcon */] }),
                        this.context.t("Save")
                    ),
                    updatingCompany && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_6__main_components_Icons__["a" /* Spinner */], null)
                ),
                user.company && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                    "div",
                    { className: "setting" },
                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        "div",
                        { className: "row" },
                        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                            "div",
                            { className: "item" },
                            __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                "label",
                                null,
                                this.context.t("Legal Company Name")
                            ),
                            __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement("input", { value: user.company.legalName, disabled: !editCompanyInfo, onChange: function onChange(e) {
                                    user.company.legalName = e.target.value;
                                    _this3.setState({ user: user });
                                } })
                        ),
                        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                            "div",
                            { className: "item" },
                            __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                "label",
                                null,
                                this.context.t("Company Registration Number")
                            ),
                            __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement("input", { value: user.company.registrationNumber, disabled: !editCompanyInfo, onChange: function onChange(e) {
                                    user.company.registrationNumber = e.target.value;
                                    _this3.setState({ user: user });
                                } })
                        ),
                        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                            "div",
                            { className: "item" },
                            __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                "label",
                                null,
                                this.context.t("VAT ID number")
                            ),
                            __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement("input", { value: user.company.vat, disabled: !editCompanyInfo, onChange: function onChange(e) {
                                    user.company.vat = e.target.value;
                                    _this3.setState({ user: user });
                                } })
                        )
                    ),
                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        "div",
                        { className: "row" },
                        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                            "div",
                            { className: "item" },
                            __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                "label",
                                null,
                                this.context.t("Address")
                            ),
                            __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement("input", { value: user.company.address, disabled: !editCompanyInfo, onChange: function onChange(e) {
                                    user.company.address = e.target.value;
                                    _this3.setState({ user: user });
                                } })
                        ),
                        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                            "div",
                            { className: "item" },
                            __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                "label",
                                null,
                                this.context.t("City")
                            ),
                            __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement("input", { value: user.company.city, disabled: !editCompanyInfo, onChange: function onChange(e) {
                                    user.company.city = e.target.value;
                                    _this3.setState({ user: user });
                                } })
                        ),
                        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                            "div",
                            { className: "item" },
                            __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                "label",
                                null,
                                this.context.t("ZIP code")
                            ),
                            __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement("input", { value: user.company.zip, disabled: !editCompanyInfo, onChange: function onChange(e) {
                                    user.company.zip = e.target.value;
                                    _this3.setState({ user: user });
                                } })
                        ),
                        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                            "div",
                            { className: "item" },
                            __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                "label",
                                null,
                                this.context.t("Country")
                            ),
                            __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_4__main_components_CountrySelector__["a" /* default */], { multi: false, value: country, disabled: !editCompanyInfo, onChange: function onChange(e) {
                                    user.company.country.name = e.value;
                                    _this3.setState({ user: user });
                                } })
                        )
                    ),
                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        "div",
                        null,
                        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                            "label",
                            null,
                            this.context.t("Company description")
                        ),
                        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement("textarea", { value: user.company.description, disabled: !editCompanyInfo, onChange: function onChange(e) {
                                user.company.description = e.target.value;
                                _this3.setState({ user: user });
                            } })
                    ),
                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        "div",
                        { style: { margin: '20px 0' } },
                        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                            "label",
                            null,
                            "Active Users"
                        ),
                        loadingCompanyUsers && companyUsers.length === 0 && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_6__main_components_Icons__["a" /* Spinner */], null),
                        !loadingCompanyUsers && companyUsers.length > 0 && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                            "div",
                            null,
                            __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_2_react_table__["default"], {
                                className: "closed-deals-table",
                                defaultPageSize: 30,
                                showPageSizeOptions: false,
                                showPagination: false,
                                minRows: 0,
                                resizable: false,
                                data: companyUsers,
                                columns: [{
                                    Header: this.context.t("Familiy Name"),
                                    headerClassName: 'table-header',
                                    className: 'table-header',
                                    accessor: 'lastName'
                                }, {
                                    accessor: 'firstName', // Required because our accessor is not a string
                                    Header: this.context.t("First Name"),
                                    headerClassName: 'table-header',
                                    className: 'table-header'
                                }, {
                                    Header: this.context.t("Email"),
                                    accessor: 'email',
                                    headerClassName: 'table-header',
                                    className: 'table-header'
                                }, {
                                    Header: this.context.t("Phone Number"),
                                    accessor: 'phone',
                                    headerClassName: 'table-header',
                                    className: 'table-header'
                                }, {
                                    Header: this.context.t("Company Position"),
                                    accessor: 'title',
                                    headerClassName: 'table-header',
                                    className: 'table-header'
                                }]
                            })
                        )
                    )
                ),
                __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                    "div",
                    { className: "title" },
                    this.context.t("Personal information"),
                    !editPersonalInfo && !updatingUser && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        "div",
                        { className: "edit-button", onClick: function onClick(e) {
                                history.push("/settings/editpersonal");
                            } },
                        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement("img", { src: __WEBPACK_IMPORTED_MODULE_6__main_components_Icons__["j" /* editIcon */] }),
                        this.context.t("Edit")
                    ),
                    editPersonalInfo && !updatingUser && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        "div",
                        { className: "edit-button", onClick: this.updateUser },
                        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement("img", { src: __WEBPACK_IMPORTED_MODULE_6__main_components_Icons__["j" /* editIcon */] }),
                        this.context.t("Save")
                    ),
                    updatingUser && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_6__main_components_Icons__["a" /* Spinner */], null)
                ),
                __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                    "div",
                    { className: "setting" },
                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        "div",
                        { className: "row" },
                        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                            "div",
                            { className: "item" },
                            __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                "label",
                                null,
                                this.context.t("First Name")
                            ),
                            __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement("input", { value: user.firstName, disabled: !editPersonalInfo, onChange: function onChange(e) {
                                    user.firstName = e.target.value;
                                    _this3.setState({ user: user });
                                } })
                        ),
                        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                            "div",
                            { className: "item" },
                            __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                "label",
                                null,
                                this.context.t("Last Name")
                            ),
                            __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement("input", { value: user.lastName, disabled: !editPersonalInfo, onChange: function onChange(e) {
                                    user.lastName = e.target.value;
                                    _this3.setState({ user: user });
                                } })
                        ),
                        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                            "div",
                            { className: "item" },
                            __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                "label",
                                null,
                                this.context.t("Title")
                            ),
                            __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement("input", { value: user.title, disabled: !editPersonalInfo, onChange: function onChange(e) {
                                    user.title = e.target.value;
                                    _this3.setState({ user: user });
                                } })
                        )
                    ),
                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        "div",
                        { className: "row" },
                        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                            "div",
                            { className: "item" },
                            __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                "label",
                                null,
                                this.context.t("Email address")
                            ),
                            __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement("input", { value: user.email, disabled: !editPersonalInfo, onChange: function onChange(e) {
                                    user.email = e.target.value;
                                    _this3.setState({ user: user });
                                } })
                        ),
                        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                            "div",
                            { className: "item" },
                            __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                "label",
                                null,
                                this.context.t("Phone number")
                            ),
                            __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement("input", { value: user.phone, disabled: !editPersonalInfo, onChange: function onChange(e) {
                                    user.phone = e.target.value;
                                    _this3.setState({ user: user });
                                } })
                        )
                    )
                ),
                __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                    "div",
                    { className: "title" },
                    this.context.t("Change Password")
                ),
                __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                    "div",
                    { className: "subtitle" },
                    this.context.t("Choose a unique password to protect your account")
                ),
                __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                    "div",
                    { className: "setting", style: { display: 'flex' } },
                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        "div",
                        { className: "password" },
                        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                            "label",
                            null,
                            this.context.t(" Type your current password")
                        ),
                        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement("input", { type: "password", onChange: function onChange(e) {
                                _this3.setState({
                                    oldPassword: e.target.value
                                });
                            } }),
                        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                            "label",
                            null,
                            this.context.t("Type your new password")
                        ),
                        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement("input", { type: "password", onChange: function onChange(e) {
                                _this3.setState({
                                    password: e.target.value
                                });
                            } }),
                        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                            "label",
                            null,
                            this.context.t("Retype your new password")
                        ),
                        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement("input", { type: "password", onChange: function onChange(e) {
                                _this3.setState({
                                    passwordCheck: e.target.value
                                });
                            } }),
                        !updatingPassword && !passwordUpdated && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                            "button",
                            { onClick: this.updatePassword,
                                disabled: this.invalidPassword(),
                                className: "standard-button" },
                            this.context.t("Save password")
                        ),
                        updatingPassword && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_6__main_components_Icons__["a" /* Spinner */], null),
                        passwordUpdated && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                            "div",
                            null,
                            this.context.t("Password updated successfully")
                        )
                    ),
                    password && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        "div",
                        { className: "password-validation" },
                        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                            "div",
                            null,
                            this.validate(password).length && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement("img", { src: __WEBPACK_IMPORTED_MODULE_6__main_components_Icons__["d" /* blueCheckIcon */] }),
                            !this.validate(password).length && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement("img", { src: __WEBPACK_IMPORTED_MODULE_6__main_components_Icons__["g" /* cancelIcon */] }),
                            this.context.t("At least 8 characters long")
                        ),
                        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                            "div",
                            null,
                            this.validate(password).upper && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement("img", { src: __WEBPACK_IMPORTED_MODULE_6__main_components_Icons__["d" /* blueCheckIcon */] }),
                            !this.validate(password).upper && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement("img", { src: __WEBPACK_IMPORTED_MODULE_6__main_components_Icons__["g" /* cancelIcon */] }),
                            this.context.t("One uppercase character")
                        ),
                        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                            "div",
                            null,
                            this.validate(password).digit && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement("img", { src: __WEBPACK_IMPORTED_MODULE_6__main_components_Icons__["d" /* blueCheckIcon */] }),
                            !this.validate(password).digit && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement("img", { src: __WEBPACK_IMPORTED_MODULE_6__main_components_Icons__["g" /* cancelIcon */] }),
                            this.context.t("One number")
                        ),
                        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                            "div",
                            null,
                            this.validate(password).special && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement("img", { src: __WEBPACK_IMPORTED_MODULE_6__main_components_Icons__["d" /* blueCheckIcon */] }),
                            !this.validate(password).special && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement("img", { src: __WEBPACK_IMPORTED_MODULE_6__main_components_Icons__["g" /* cancelIcon */] }),
                            this.context.t("One special character")
                        ),
                        passwordCheck && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                            "div",
                            null,
                            passwordCheck === password && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement("img", { src: __WEBPACK_IMPORTED_MODULE_6__main_components_Icons__["d" /* blueCheckIcon */] }),
                            passwordCheck !== password && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement("img", { src: __WEBPACK_IMPORTED_MODULE_6__main_components_Icons__["g" /* cancelIcon */] }),
                            this.context.t("Passwords don't match")
                        )
                    )
                )
            );
        }
    }]);

    return Settings;
}(__WEBPACK_IMPORTED_MODULE_0_react___default.a.Component);

Settings.contextTypes = {
    t: __WEBPACK_IMPORTED_MODULE_7_prop_types__["PropTypes"].func.isRequired
};

var mapStateToProps = function mapStateToProps(state, ownProps) {
    return state;
};

var mapDispatchToProps = function mapDispatchToProps(dispatch) {
    return {};
};

/* harmony default export */ __webpack_exports__["a"] = (Object(__WEBPACK_IMPORTED_MODULE_1_react_redux__["connect"])(mapStateToProps, mapDispatchToProps)(Settings));

/***/ }),

/***/ "./src/AppBundle/Resources/public/javascript/manage/containers/Watchlist.js":
/*!**********************************************************************************!*\
  !*** ./src/AppBundle/Resources/public/javascript/manage/containers/Watchlist.js ***!
  \**********************************************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_react__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_react_redux__ = __webpack_require__(/*! react-redux */ "./node_modules/react-redux/es/index.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__main_components_ContentListing__ = __webpack_require__(/*! ../../main/components/ContentListing */ "./src/AppBundle/Resources/public/javascript/main/components/ContentListing.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__main_actions_utils__ = __webpack_require__(/*! ../../main/actions/utils */ "./src/AppBundle/Resources/public/javascript/main/actions/utils.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_prop_types__ = __webpack_require__(/*! prop-types */ "./node_modules/prop-types/index.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_prop_types___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_4_prop_types__);
var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }







var Watchlist = function (_React$Component) {
    _inherits(Watchlist, _React$Component);

    function Watchlist(props) {
        _classCallCheck(this, Watchlist);

        var _this2 = _possibleConstructorReturn(this, (Watchlist.__proto__ || Object.getPrototypeOf(Watchlist)).call(this, props));

        _this2.selectListing = function (id) {
            Object(__WEBPACK_IMPORTED_MODULE_3__main_actions_utils__["e" /* goTo */])("listing/" + id);
        };

        _this2.remove = function (customId) {
            _this2.setState({
                listings: _this2.state.listings.filter(function (l) {
                    return l.customId !== customId;
                })
            });
        };

        _this2.state = {
            loading: false,
            listings: []
        };
        return _this2;
    }

    _createClass(Watchlist, [{
        key: 'componentDidMount',
        value: function componentDidMount() {
            var _this = this;
            this.setState({ loading: true });
            ContentArena.ContentApi.getWatchlistListings().done(function (listings) {
                if (!Array.isArray(listings)) {
                    listings = Object.values(listings);
                }

                listings = listings.map(function (listing) {
                    return ContentArena.Utils.contentParserFromServer(listing);
                });
                _this.setState({ listings: listings, loading: false });
            });
        }
    }, {
        key: 'render',
        value: function render() {
            var _this3 = this;

            var _state = this.state,
                loading = _state.loading,
                listings = _state.listings;

            return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                'div',
                { style: {
                        display: 'flex',
                        flexDirection: 'column',
                        flex: 1
                    } },
                listings.length > 0 && listings.map(function (listing) {
                    return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_2__main_components_ContentListing__["a" /* default */], _extends({
                        onSelect: _this3.selectListing,
                        key: listing.customId
                    }, listing, {
                        watchlistRemove: true,
                        onWatchlistRemove: _this3.remove
                    }));
                }),
                listings.length === 0 && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                    'div',
                    { className: 'manager-content-message' },
                    loading && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        'div',
                        { className: 'big-spinner' },
                        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('i', { className: 'fa fa-cog fa-spin' })
                    ),
                    !loading && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        'div',
                        { className: 'big-spinner', style: {
                                fontSize: 30
                            } },
                        this.context.t("Your watchlist is empty!")
                    )
                )
            );
        }
    }]);

    return Watchlist;
}(__WEBPACK_IMPORTED_MODULE_0_react___default.a.Component);

Watchlist.contextTypes = {
    t: __WEBPACK_IMPORTED_MODULE_4_prop_types__["PropTypes"].func.isRequired
};

var mapStateToProps = function mapStateToProps(state, ownProps) {
    return state;
};

var mapDispatchToProps = function mapDispatchToProps(dispatch) {
    return {};
};

/* harmony default export */ __webpack_exports__["a"] = (Object(__WEBPACK_IMPORTED_MODULE_1_react_redux__["connect"])(mapStateToProps, mapDispatchToProps)(Watchlist));

/***/ }),

/***/ "./src/AppBundle/Resources/public/javascript/manage/reducers/manage.js":
/*!*****************************************************************************!*\
  !*** ./src/AppBundle/Resources/public/javascript/manage/reducers/manage.js ***!
  \*****************************************************************************/
/*! exports provided: manageTypes, manage */
/*! exports used: manage */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* unused harmony export manageTypes */
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return manage; });

var manageTypes = {
    TEST: 'TEST'
};

var manage = function manage() {
    var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {
        testItem: "manageReducer"

    };
    var action = arguments[1];


    switch (action.type) {
        case manageTypes.TEST:
            return Object.assign({}, state, {
                test: action.text,
                id: action.id
            });
        default:
            return state;
    }
};

/***/ }),

/***/ "./src/AppBundle/Resources/public/javascript/sell/actions/contentActions.js":
/*!**********************************************************************************!*\
  !*** ./src/AppBundle/Resources/public/javascript/sell/actions/contentActions.js ***!
  \**********************************************************************************/
/*! exports provided: goToPreviousStep, goToNextStep, goToStep, stepChangeReset, updateContentValue */
/*! exports used: goToNextStep, goToPreviousStep, goToStep, stepChangeReset, updateContentValue */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "b", function() { return goToPreviousStep; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return goToNextStep; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "c", function() { return goToStep; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "d", function() { return stepChangeReset; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "e", function() { return updateContentValue; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__reducers_content__ = __webpack_require__(/*! ../reducers/content */ "./src/AppBundle/Resources/public/javascript/sell/reducers/content.js");


var goToPreviousStep = function goToPreviousStep() {
    return {
        type: __WEBPACK_IMPORTED_MODULE_0__reducers_content__["b" /* contentType */].GO_TO_PREVIOUS_STEP
    };
};

var goToNextStep = function goToNextStep() {
    return {
        type: __WEBPACK_IMPORTED_MODULE_0__reducers_content__["b" /* contentType */].GO_TO_NEXT_STEP
    };
};

var goToStep = function goToStep(step) {
    return {
        type: __WEBPACK_IMPORTED_MODULE_0__reducers_content__["b" /* contentType */].GO_TO_STEP,
        step: step
    };
};

var stepChangeReset = function stepChangeReset() {
    return {
        type: __WEBPACK_IMPORTED_MODULE_0__reducers_content__["b" /* contentType */].STEP_CHANGE_RESET
    };
};

var updateContentValue = function updateContentValue(key, value) {
    return {
        type: 'UPDATE_CONTENT_VALUE',
        key: key,
        value: value
    };
};

/***/ }),

/***/ "./src/AppBundle/Resources/public/javascript/sell/actions/validationActions.js":
/*!*************************************************************************************!*\
  !*** ./src/AppBundle/Resources/public/javascript/sell/actions/validationActions.js ***!
  \*************************************************************************************/
/*! exports provided: companyIsValid */
/*! exports used: companyIsValid */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return companyIsValid; });
var companyIsValid = function companyIsValid(company) {
    return company.legalName !== undefined && company.legalName !== "" && company.vat !== undefined && company.vat !== "" && company.zip !== undefined && company.zip !== "" && company.address !== undefined && company.address !== "" && company.city !== undefined && company.city !== "" && company.country !== undefined;
};

/***/ }),

/***/ "./src/AppBundle/Resources/public/javascript/sell/components/ApplicableLawSelector.js":
/*!********************************************************************************************!*\
  !*** ./src/AppBundle/Resources/public/javascript/sell/components/ApplicableLawSelector.js ***!
  \********************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_react__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_react_redux__ = __webpack_require__(/*! react-redux */ "./node_modules/react-redux/es/index.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__main_components_CountrySelector__ = __webpack_require__(/*! ../../main/components/CountrySelector */ "./src/AppBundle/Resources/public/javascript/main/components/CountrySelector.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_prop_types__ = __webpack_require__(/*! prop-types */ "./node_modules/prop-types/index.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_prop_types___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_3_prop_types__);
var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }






var ApplicableLawSelector = function (_React$Component) {
    _inherits(ApplicableLawSelector, _React$Component);

    function ApplicableLawSelector(props) {
        _classCallCheck(this, ApplicableLawSelector);

        var _this = _possibleConstructorReturn(this, (ApplicableLawSelector.__proto__ || Object.getPrototypeOf(ApplicableLawSelector)).call(this, props));

        _this.selectTerritory = function (value) {
            _this.props.updateContentValue("applicable-law", value);
        };

        _this.state = {};
        return _this;
    }

    _createClass(ApplicableLawSelector, [{
        key: "render",
        value: function render() {
            var jurisdiction = this.props.jurisdiction;


            return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                "div",
                { className: "base-input" },
                __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                    "label",
                    null,
                    this.context.t("Applicable Law")
                ),
                __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_2__main_components_CountrySelector__["a" /* default */], {
                    className: "base-input-select", multi: false, value: jurisdiction,
                    onChange: this.selectTerritory })
            );
        }
    }]);

    return ApplicableLawSelector;
}(__WEBPACK_IMPORTED_MODULE_0_react___default.a.Component);

ApplicableLawSelector.contextTypes = {
    t: __WEBPACK_IMPORTED_MODULE_3_prop_types__["PropTypes"].func.isRequired
};

var mapStateToProps = function mapStateToProps(state) {
    return state.content;
};

var mapDispatchToProps = function mapDispatchToProps(dispatch) {
    return {
        updateContentValue: function updateContentValue(key, value) {
            return dispatch({
                type: 'UPDATE_CONTENT_VALUE',
                key: key,
                value: value
            });
        }
    };
};

/* unused harmony default export */ var _unused_webpack_default_export = (Object(__WEBPACK_IMPORTED_MODULE_1_react_redux__["connect"])(mapStateToProps, mapDispatchToProps)(ApplicableLawSelector));

/***/ }),

/***/ "./src/AppBundle/Resources/public/javascript/sell/components/Comments.js":
/*!*******************************************************************************!*\
  !*** ./src/AppBundle/Resources/public/javascript/sell/components/Comments.js ***!
  \*******************************************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_react__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_react_redux__ = __webpack_require__(/*! react-redux */ "./node_modules/react-redux/es/index.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_react_modal__ = __webpack_require__(/*! react-modal */ "./node_modules/react-modal/lib/index.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_react_modal___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2_react_modal__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__main_styles_custom__ = __webpack_require__(/*! ../../main/styles/custom */ "./src/AppBundle/Resources/public/javascript/main/styles/custom.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_prop_types__ = __webpack_require__(/*! prop-types */ "./node_modules/prop-types/index.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_prop_types___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_4_prop_types__);
var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }







var Comments = function (_React$Component) {
    _inherits(Comments, _React$Component);

    function Comments(props) {
        _classCallCheck(this, Comments);

        var _this = _possibleConstructorReturn(this, (Comments.__proto__ || Object.getPrototypeOf(Comments)).call(this, props));

        _this.closeModal = function () {
            _this.setState({ isOpen: false });
        };

        _this.updateContent = function (e) {
            var propName = _this.props.propName;


            _this.props.updateContentValue(propName, e.target.value);
        };

        _this.addComments = function () {
            _this.setState({ isOpen: true });
        };

        _this.renderModal = function () {
            var comments = _this.props.comments;


            return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                __WEBPACK_IMPORTED_MODULE_2_react_modal___default.a,
                {
                    isOpen: _this.state.isOpen,
                    onRequestClose: _this.closeModal,
                    bodyOpenClassName: "selector",
                    style: __WEBPACK_IMPORTED_MODULE_3__main_styles_custom__["c" /* customStyles */]
                },
                __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                    'div',
                    { className: 'modal-title' },
                    _this.context.t("Add further comments"),
                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('i', { className: 'fa fa-times-circle-o', onClick: _this.closeModal })
                ),
                __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                    'div',
                    { className: 'step-content' },
                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        'div',
                        { className: 'step-content-container' },
                        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                            'div',
                            { className: 'base-full-input' },
                            __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('textarea', {
                                className: "big-textarea",
                                onChange: _this.updateContent,
                                value: comments })
                        )
                    )
                ),
                __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                    'div',
                    { className: "buttons" },
                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        'button',
                        {
                            className: "standard-button",
                            onClick: _this.closeModal },
                        _this.context.t("Ok")
                    )
                )
            );
        };

        _this.state = {
            isOpen: false
        };
        return _this;
    }

    _createClass(Comments, [{
        key: 'render',
        value: function render() {
            return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                'div',
                { style: { marginBottom: 20 } },
                this.renderModal(),
                __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                    'button',
                    { className: "link-button", onClick: this.addComments },
                    this.context.t("Add further comments")
                )
            );
        }
    }]);

    return Comments;
}(__WEBPACK_IMPORTED_MODULE_0_react___default.a.Component);

Comments.contextTypes = {
    t: __WEBPACK_IMPORTED_MODULE_4_prop_types__["PropTypes"].func.isRequired
};

var mapStateToProps = function mapStateToProps(state) {
    return state.content;
};

var mapDispatchToProps = function mapDispatchToProps(dispatch) {
    return {
        updateContentValue: function updateContentValue(key, value) {
            return dispatch({
                type: 'UPDATE_CONTENT_VALUE',
                key: key,
                value: value
            });
        }
    };
};

/* harmony default export */ __webpack_exports__["a"] = (Object(__WEBPACK_IMPORTED_MODULE_1_react_redux__["connect"])(mapStateToProps, mapDispatchToProps)(Comments));

/***/ }),

/***/ "./src/AppBundle/Resources/public/javascript/sell/components/CompanyInformation.js":
/*!*****************************************************************************************!*\
  !*** ./src/AppBundle/Resources/public/javascript/sell/components/CompanyInformation.js ***!
  \*****************************************************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_react__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_react_redux__ = __webpack_require__(/*! react-redux */ "./node_modules/react-redux/es/index.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__main_styles_custom__ = __webpack_require__(/*! ../../main/styles/custom */ "./src/AppBundle/Resources/public/javascript/main/styles/custom.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_react_modal__ = __webpack_require__(/*! react-modal */ "./node_modules/react-modal/lib/index.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_react_modal___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_3_react_modal__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__main_components_CountrySelector__ = __webpack_require__(/*! ../../main/components/CountrySelector */ "./src/AppBundle/Resources/public/javascript/main/components/CountrySelector.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__actions_validationActions__ = __webpack_require__(/*! ../actions/validationActions */ "./src/AppBundle/Resources/public/javascript/sell/actions/validationActions.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6_prop_types__ = __webpack_require__(/*! prop-types */ "./node_modules/prop-types/index.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6_prop_types___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_6_prop_types__);
var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }









var labelStyle = { height: "30px", fontSize: "12px", width: '400px' };
var inputStyle = { width: '380px', margin: 0, height: "30px" };

var CompanyInformation = function (_React$Component) {
    _inherits(CompanyInformation, _React$Component);

    function CompanyInformation(props) {
        _classCallCheck(this, CompanyInformation);

        var _this = _possibleConstructorReturn(this, (CompanyInformation.__proto__ || Object.getPrototypeOf(CompanyInformation)).call(this, props));

        _this.closeModal = function () {
            _this.setState({
                isOpen: false,
                company: _this.props.company
            });
        };

        _this.updateContent = function (e, name) {
            var company = _extends({}, _this.state.company);

            company[name] = e.target.value;
            _this.onDataChange("company", company);
        };

        _this.updateCountry = function (value) {
            var company = _extends({}, _this.state.company);

            company.country.name = value.label;
            _this.onDataChange("company", company);
        };

        _this.renderModal = function () {
            var company = _this.state.company;


            return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                __WEBPACK_IMPORTED_MODULE_3_react_modal___default.a,
                {
                    isOpen: _this.state.isOpen,
                    onRequestClose: _this.closeModal,
                    bodyOpenClassName: "selector",
                    style: __WEBPACK_IMPORTED_MODULE_2__main_styles_custom__["c" /* customStyles */],
                    contentLabel: "Example Modal"
                },
                __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                    "div",
                    { className: "modal-title" },
                    _this.context.t("Company Information"),
                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement("i", { className: "fa fa-times-circle-o", onClick: _this.closeModal })
                ),
                __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                    "div",
                    { className: "step-content custom" },
                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        "div",
                        { className: "step-content-container" },
                        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                            "div",
                            { className: "base-full-input" },
                            __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                "label",
                                { style: labelStyle },
                                _this.context.t("Legal name")
                            ),
                            __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement("input", {
                                type: "text",
                                style: inputStyle,
                                value: company.legalName })
                        ),
                        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                            "div",
                            { className: "base-full-input" },
                            __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                "label",
                                { style: labelStyle },
                                _this.context.t("Registration number")
                            ),
                            __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement("input", {
                                style: inputStyle,
                                type: "text",
                                onChange: function onChange(e) {
                                    _this.updateContent(e, "registrationNumber");
                                },
                                value: company.registrationNumber })
                        ),
                        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                            "div",
                            { className: "base-full-input" },
                            __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                "label",
                                { style: labelStyle },
                                _this.context.t("VAT ID number")
                            ),
                            __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement("input", {
                                style: inputStyle,
                                type: "text",
                                onChange: function onChange(e) {
                                    _this.updateContent(e, "vat");
                                },
                                value: company.vat })
                        ),
                        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                            "div",
                            { className: "base-full-input" },
                            __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                "label",
                                { style: labelStyle },
                                _this.context.t("Street Name / Number")
                            ),
                            __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement("input", {
                                style: inputStyle,
                                type: "text",
                                onChange: function onChange(e) {
                                    _this.updateContent(e, "address");
                                },
                                defaultValue: company.address })
                        ),
                        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                            "div",
                            { className: "base-full-input" },
                            __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                "label",
                                { style: labelStyle },
                                _this.context.t("City")
                            ),
                            __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement("input", {
                                style: inputStyle,
                                type: "text",
                                onChange: function onChange(e) {
                                    _this.updateContent(e, "city");
                                },
                                value: company.city })
                        ),
                        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                            "div",
                            { className: "base-full-input" },
                            __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                "label",
                                { style: labelStyle },
                                _this.context.t("ZIP code")
                            ),
                            __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement("input", {
                                style: inputStyle,
                                type: "text",
                                onChange: function onChange(e) {
                                    _this.updateContent(e, "zip");
                                },
                                value: company.zip })
                        ),
                        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                            "div",
                            { className: "base-full-input" },
                            __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                "label",
                                { style: labelStyle },
                                _this.context.t("Country")
                            ),
                            __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_4__main_components_CountrySelector__["a" /* default */], {
                                multi: false,
                                onChange: function onChange(val) {
                                    _this.updateCountry(val);
                                },
                                value: { value: company.country.name, label: company.country.name } })
                        )
                    )
                ),
                __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                    "div",
                    { className: "buttons" },
                    Object(__WEBPACK_IMPORTED_MODULE_5__actions_validationActions__["a" /* companyIsValid */])(company) && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        "button",
                        {
                            className: "standard-button",
                            onClick: _this.onOKClick },
                        _this.context.t("Ok")
                    ),
                    !Object(__WEBPACK_IMPORTED_MODULE_5__actions_validationActions__["a" /* companyIsValid */])(company) && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        "button",
                        {
                            className: "standard-button",
                            disabled: true
                        },
                        _this.context.t("Ok")
                    )
                )
            );
        };

        _this.onOKClick = function () {
            var _this$props = _this.props,
                updateContentValue = _this$props.updateContentValue,
                counter = _this$props.counter;
            var company = _this.state.company;


            updateContentValue("company", company);
            updateContentValue("counter", counter + 1);

            _this.closeModal();
        };

        _this.state = {
            isOpen: false,
            company: props.company
        };
        return _this;
    }

    _createClass(CompanyInformation, [{
        key: "componentWillReceiveProps",
        value: function componentWillReceiveProps(nextProps) {
            this.setState({ company: nextProps.company });
        }
    }, {
        key: "render",
        value: function render() {
            var _this2 = this;

            var company = this.props.company;

            return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                "div",
                { className: "base-input" },
                this.renderModal(),
                __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                    "label",
                    null,
                    this.context.t("Company address")
                ),
                __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement("input", {
                    type: "text",
                    value: company.legalName + ", " + company.address,
                    onClick: function onClick() {
                        _this2.setState({ isOpen: true });
                    },
                    placeholder: "" }),
                __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement("i", { className: "fa fa-edit", onClick: function onClick() {
                        _this2.setState({ isOpen: true });
                    } })
            );
        }
    }, {
        key: "onDataChange",
        value: function onDataChange(name, value) {
            this.setState(_defineProperty({}, name, value));
        }
    }]);

    return CompanyInformation;
}(__WEBPACK_IMPORTED_MODULE_0_react___default.a.Component);

CompanyInformation.contextTypes = {
    t: __WEBPACK_IMPORTED_MODULE_6_prop_types__["PropTypes"].func.isRequired
};

var mapStateToProps = function mapStateToProps(state) {
    return state.content;
};

var mapDispatchToProps = function mapDispatchToProps(dispatch) {
    return {
        updateContentValue: function updateContentValue(key, value) {
            return dispatch({
                type: 'UPDATE_CONTENT_VALUE',
                key: key,
                value: value
            });
        }
    };
};

/* harmony default export */ __webpack_exports__["a"] = (Object(__WEBPACK_IMPORTED_MODULE_1_react_redux__["connect"])(mapStateToProps, mapDispatchToProps)(CompanyInformation));

/***/ }),

/***/ "./src/AppBundle/Resources/public/javascript/sell/components/CurrencySelector.js":
/*!***************************************************************************************!*\
  !*** ./src/AppBundle/Resources/public/javascript/sell/components/CurrencySelector.js ***!
  \***************************************************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_react__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_classnames__ = __webpack_require__(/*! classnames */ "./node_modules/classnames/index.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_classnames___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_classnames__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_prop_types__ = __webpack_require__(/*! prop-types */ "./node_modules/prop-types/index.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_prop_types___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2_prop_types__);
var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }





var CURRENCIES = ['USD', 'EUR'];

var CurrencySelector = function (_React$Component) {
    _inherits(CurrencySelector, _React$Component);

    function CurrencySelector(props) {
        _classCallCheck(this, CurrencySelector);

        var _this = _possibleConstructorReturn(this, (CurrencySelector.__proto__ || Object.getPrototypeOf(CurrencySelector)).call(this, props));

        _this.state = {};
        return _this;
    }

    _createClass(CurrencySelector, [{
        key: 'render',
        value: function render() {
            var _props = this.props,
                _onClick = _props.onClick,
                selected = _props.selected;


            return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                'div',
                { className: 'select-currency' },
                __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                    'div',
                    { className: 'select-text' },
                    this.context.t("Currency")
                ),
                __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                    'div',
                    { className: 'currency-selector' },
                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        'div',
                        { className: 'current' },
                        selected
                    ),
                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        'div',
                        { className: 'dropdown' },
                        CURRENCIES.filter(function (currency) {
                            return currency !== selected;
                        }).map(function (currency) {
                            return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                'div',
                                { className: __WEBPACK_IMPORTED_MODULE_1_classnames___default()('currency-item'), onClick: function onClick() {
                                        return _onClick(currency);
                                    } },
                                currency
                            );
                        })
                    )
                )
            );
        }
    }]);

    return CurrencySelector;
}(__WEBPACK_IMPORTED_MODULE_0_react___default.a.Component);

CurrencySelector.contextTypes = {
    t: __WEBPACK_IMPORTED_MODULE_2_prop_types__["PropTypes"].func.isRequired
};

/* harmony default export */ __webpack_exports__["a"] = (CurrencySelector);

/***/ }),

/***/ "./src/AppBundle/Resources/public/javascript/sell/components/ExpirationDateSelector.js":
/*!*********************************************************************************************!*\
  !*** ./src/AppBundle/Resources/public/javascript/sell/components/ExpirationDateSelector.js ***!
  \*********************************************************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_react__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_react_datepicker__ = __webpack_require__(/*! react-datepicker */ "./node_modules/react-datepicker/es/index.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_moment__ = __webpack_require__(/*! moment */ "./node_modules/moment/moment.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_moment___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2_moment__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_react_redux__ = __webpack_require__(/*! react-redux */ "./node_modules/react-redux/es/index.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_prop_types__ = __webpack_require__(/*! prop-types */ "./node_modules/prop-types/index.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_prop_types___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_4_prop_types__);
var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }







var ExpirationDateSelector = function (_React$Component) {
    _inherits(ExpirationDateSelector, _React$Component);

    function ExpirationDateSelector(props) {
        _classCallCheck(this, ExpirationDateSelector);

        var _this = _possibleConstructorReturn(this, (ExpirationDateSelector.__proto__ || Object.getPrototypeOf(ExpirationDateSelector)).call(this, props));

        _this.handleStartDate = function (date) {
            _this.props.updateContentValue("expiresAt", date);
        };

        _this.state = {};
        return _this;
    }

    _createClass(ExpirationDateSelector, [{
        key: 'render',
        value: function render() {
            var expiresAt = this.props.expiresAt;


            return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                'div',
                { className: 'base-input' },
                __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                    'label',
                    null,
                    this.context.t("Listing expiry")
                ),
                __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_1_react_datepicker__["default"], {
                    className: "date-picker",
                    selected: expiresAt ? __WEBPACK_IMPORTED_MODULE_2_moment___default()(expiresAt) : undefined,
                    onChange: this.handleStartDate,
                    minDate: __WEBPACK_IMPORTED_MODULE_2_moment___default()(),
                    fixedHeight: true,
                    placeholderText: "dd/mm/yyyy"
                })
            );
        }
    }]);

    return ExpirationDateSelector;
}(__WEBPACK_IMPORTED_MODULE_0_react___default.a.Component);

ExpirationDateSelector.contextTypes = {
    t: __WEBPACK_IMPORTED_MODULE_4_prop_types__["PropTypes"].func.isRequired
};

var mapStateToProps = function mapStateToProps(state) {
    return state.content;
};

var mapDispatchToProps = function mapDispatchToProps(dispatch) {
    return {
        updateContentValue: function updateContentValue(key, value) {
            return dispatch({
                type: 'UPDATE_CONTENT_VALUE',
                key: key,
                value: value
            });
        }
    };
};

/* harmony default export */ __webpack_exports__["a"] = (Object(__WEBPACK_IMPORTED_MODULE_3_react_redux__["connect"])(mapStateToProps, mapDispatchToProps)(ExpirationDateSelector));

/***/ }),

/***/ "./src/AppBundle/Resources/public/javascript/sell/components/JurisdictionSelector.js":
/*!*******************************************************************************************!*\
  !*** ./src/AppBundle/Resources/public/javascript/sell/components/JurisdictionSelector.js ***!
  \*******************************************************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_react__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_react_redux__ = __webpack_require__(/*! react-redux */ "./node_modules/react-redux/es/index.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__main_components_CountrySelector__ = __webpack_require__(/*! ../../main/components/CountrySelector */ "./src/AppBundle/Resources/public/javascript/main/components/CountrySelector.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_prop_types__ = __webpack_require__(/*! prop-types */ "./node_modules/prop-types/index.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_prop_types___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_3_prop_types__);
var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }






var JurisdictionSelector = function (_React$Component) {
    _inherits(JurisdictionSelector, _React$Component);

    function JurisdictionSelector(props) {
        _classCallCheck(this, JurisdictionSelector);

        var _this = _possibleConstructorReturn(this, (JurisdictionSelector.__proto__ || Object.getPrototypeOf(JurisdictionSelector)).call(this, props));

        _this.selectTerritory = function (value) {
            _this.props.updateContentValue("jurisdiction", value);
        };

        _this.state = {};
        return _this;
    }

    _createClass(JurisdictionSelector, [{
        key: "render",
        value: function render() {
            var jurisdiction = this.props.jurisdiction;

            return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                "div",
                { className: "base-input" },
                __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                    "label",
                    null,
                    this.context.t("Place of jurisdiction")
                ),
                __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_2__main_components_CountrySelector__["a" /* default */], {
                    className: "base-input-select", multi: false, value: jurisdiction,
                    onChange: this.selectTerritory })
            );
        }
    }]);

    return JurisdictionSelector;
}(__WEBPACK_IMPORTED_MODULE_0_react___default.a.Component);

JurisdictionSelector.contextTypes = {
    t: __WEBPACK_IMPORTED_MODULE_3_prop_types__["PropTypes"].func.isRequired
};

var mapStateToProps = function mapStateToProps(state) {
    return state.content;
};

var mapDispatchToProps = function mapDispatchToProps(dispatch) {
    return {
        updateContentValue: function updateContentValue(key, value) {
            return dispatch({
                type: 'UPDATE_CONTENT_VALUE',
                key: key,
                value: value
            });
        }
    };
};

/* harmony default export */ __webpack_exports__["a"] = (Object(__WEBPACK_IMPORTED_MODULE_1_react_redux__["connect"])(mapStateToProps, mapDispatchToProps)(JurisdictionSelector));

/***/ }),

/***/ "./src/AppBundle/Resources/public/javascript/sell/components/LicenseDateSelector.js":
/*!******************************************************************************************!*\
  !*** ./src/AppBundle/Resources/public/javascript/sell/components/LicenseDateSelector.js ***!
  \******************************************************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_react__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_react_datepicker__ = __webpack_require__(/*! react-datepicker */ "./node_modules/react-datepicker/es/index.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_moment__ = __webpack_require__(/*! moment */ "./node_modules/moment/moment.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_moment___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2_moment__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_react_modal__ = __webpack_require__(/*! react-modal */ "./node_modules/react-modal/lib/index.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_react_modal___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_3_react_modal__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__main_styles_custom__ = __webpack_require__(/*! ../../main/styles/custom */ "./src/AppBundle/Resources/public/javascript/main/styles/custom.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5_prop_types__ = __webpack_require__(/*! prop-types */ "./node_modules/prop-types/index.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5_prop_types___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_5_prop_types__);
var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }








var LicenseDateSelector = function (_React$Component) {
    _inherits(LicenseDateSelector, _React$Component);

    function LicenseDateSelector(props) {
        _classCallCheck(this, LicenseDateSelector);

        var _this = _possibleConstructorReturn(this, (LicenseDateSelector.__proto__ || Object.getPrototypeOf(LicenseDateSelector)).call(this, props));

        _this.handleStartDate = function (date) {
            _this.onDataChange("startDate", date);
        };

        _this.handleEndDate = function (date) {
            _this.onDataChange("endDate", date);
        };

        _this.handleEndDateLimit = function (e) {
            _this.onDataChange("endDateLimit", e.target.value);
        };

        _this.onOKClick = function () {
            var _this$props = _this.props,
                onClose = _this$props.onClose,
                onUpdate = _this$props.onUpdate;
            var _this$state = _this.state,
                startDate = _this$state.startDate,
                endDate = _this$state.endDate,
                endDateLimit = _this$state.endDateLimit,
                startDateMode = _this$state.startDateMode,
                endDateMode = _this$state.endDateMode;


            onUpdate("startDate", startDate);
            onUpdate("endDate", endDate);
            onUpdate("endDateLimit", endDateLimit);
            onUpdate("startDateMode", startDateMode);
            onUpdate("endDateMode", endDateMode);

            onClose();
        };

        _this.state = {
            isOpen: props.isOpen,
            startDate: props.startDate,
            endDate: props.endDate,
            endDateLimit: props.endDateLimit,
            startDateMode: props.startDateMode,
            endDateMode: props.endDateMode
        };
        return _this;
    }

    _createClass(LicenseDateSelector, [{
        key: 'componentWillReceiveProps',
        value: function componentWillReceiveProps(nextProps) {
            this.setState({
                isOpen: nextProps.isOpen,
                startDate: nextProps.startDate,
                endDate: nextProps.endDate,
                endDateLimit: nextProps.endDateLimit,
                startDateMode: nextProps.startDateMode,
                endDateMode: nextProps.endDateMode
            });
        }
    }, {
        key: 'render',
        value: function render() {
            var _this2 = this;

            var onClose = this.props.onClose;
            var _state = this.state,
                startDate = _state.startDate,
                endDate = _state.endDate,
                endDateLimit = _state.endDateLimit,
                startDateMode = _state.startDateMode,
                endDateMode = _state.endDateMode;


            return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                __WEBPACK_IMPORTED_MODULE_3_react_modal___default.a,
                {
                    isOpen: this.state.isOpen,
                    bodyOpenClassName: "selector",
                    style: __WEBPACK_IMPORTED_MODULE_4__main_styles_custom__["c" /* customStyles */]
                },
                __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                    'div',
                    { className: 'modal-title' },
                    this.context.t("Edit license period"),
                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('i', { className: 'fa fa-times-circle-o', onClick: onClose })
                ),
                __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                    'div',
                    { className: 'step-content step-content-custom' },
                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        'div',
                        { className: 'step-content-container' },
                        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                            'div',
                            { className: 'modal-input' },
                            __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                'label',
                                null,
                                this.context.t("Start of license period")
                            ),
                            __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                'div',
                                { className: 'row' },
                                __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                    'div',
                                    { className: 'column' },
                                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('input', { type: 'radio',
                                        checked: startDateMode === "LICENSE",
                                        onChange: function onChange(e) {
                                            _this2.onDataChange("startDateMode", "LICENSE");
                                        },
                                        id: "license-start-contract",
                                        className: 'ca-radio package-selector'
                                    }),
                                    this.context.t("With contract conclusion")
                                ),
                                __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                    'div',
                                    { className: 'column' },
                                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('input', { type: 'radio',
                                        checked: startDateMode === "DATE",
                                        onChange: function onChange(e) {
                                            _this2.onDataChange("startDateMode", "DATE");
                                        },
                                        id: "license-start",
                                        className: 'ca-radio package-selector'
                                    }),
                                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_1_react_datepicker__["default"], {
                                        className: "date-picker",
                                        selected: startDate ? __WEBPACK_IMPORTED_MODULE_2_moment___default()(startDate) : undefined,
                                        disabled: startDateMode !== "DATE",
                                        onChange: this.handleStartDate,
                                        placeholderText: "dd/mm/yyyy"
                                    })
                                )
                            )
                        ),
                        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                            'div',
                            { className: 'modal-input' },
                            __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                'label',
                                null,
                                this.context.t("End of license period")
                            ),
                            __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                'div',
                                { className: 'row' },
                                __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                    'div',
                                    { className: 'column' },
                                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('input', { type: 'radio',
                                        checked: endDateMode === "LIMITED",
                                        onChange: function onChange(e) {
                                            _this2.onDataChange("endDateMode", "LIMITED");
                                        },
                                        id: "license-end-input",
                                        className: 'ca-radio package-selector'
                                    }),
                                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('input', {
                                        type: "number",
                                        disabled: endDateMode !== "LIMITED",
                                        value: endDateLimit,
                                        onChange: this.handleEndDateLimit,
                                        placeholder: "Enter number" }),
                                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                        'span',
                                        { className: "small-label" },
                                        this.context.t("days from contract conclusion")
                                    )
                                ),
                                __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                    'div',
                                    { className: 'column' },
                                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('input', { type: 'radio',
                                        checked: endDateMode === "DATE",
                                        onChange: function onChange(e) {
                                            _this2.onDataChange("endDateMode", "DATE");
                                        },
                                        id: "license-end",
                                        className: 'ca-radio package-selector'
                                    }),
                                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_1_react_datepicker__["default"], {
                                        className: "date-picker",
                                        selected: endDate ? __WEBPACK_IMPORTED_MODULE_2_moment___default()(endDate) : undefined,
                                        disabled: endDateMode !== "DATE",
                                        onChange: this.handleEndDate,
                                        placeholderText: "dd/mm/yyyy"
                                    })
                                ),
                                __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                    'div',
                                    { className: 'column' },
                                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('input', { type: 'radio',
                                        checked: endDateMode === "UNLIMITED",
                                        onChange: function onChange(e) {
                                            _this2.onDataChange("endDateMode", "UNLIMITED");
                                        },
                                        id: "license-end-unlimited",
                                        className: 'ca-radio package-selector'
                                    }),
                                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                        'span',
                                        { style: { padding: '12px 0' } },
                                        this.context.t("Unlimited")
                                    )
                                )
                            )
                        )
                    )
                ),
                __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                    'div',
                    { className: "buttons" },
                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        'button',
                        {
                            className: "standard-button",
                            onClick: this.onOKClick },
                        this.context.t("Ok")
                    )
                )
            );
        }
    }, {
        key: 'onDataChange',
        value: function onDataChange(name, value) {
            this.setState(_defineProperty({}, name, value));
        }
    }]);

    return LicenseDateSelector;
}(__WEBPACK_IMPORTED_MODULE_0_react___default.a.Component);

LicenseDateSelector.contextTypes = {
    t: __WEBPACK_IMPORTED_MODULE_5_prop_types__["PropTypes"].func.isRequired
};

/* harmony default export */ __webpack_exports__["a"] = (LicenseDateSelector);

/***/ }),

/***/ "./src/AppBundle/Resources/public/javascript/sell/components/ListingName.js":
/*!**********************************************************************************!*\
  !*** ./src/AppBundle/Resources/public/javascript/sell/components/ListingName.js ***!
  \**********************************************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_react__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_react_redux__ = __webpack_require__(/*! react-redux */ "./node_modules/react-redux/es/index.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_prop_types__ = __webpack_require__(/*! prop-types */ "./node_modules/prop-types/index.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_prop_types___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2_prop_types__);
var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }





var ListingName = function (_React$Component) {
    _inherits(ListingName, _React$Component);

    function ListingName(props) {
        _classCallCheck(this, ListingName);

        var _this = _possibleConstructorReturn(this, (ListingName.__proto__ || Object.getPrototypeOf(ListingName)).call(this, props));

        _this.updateName = function (e) {
            _this.props.updateContentValue("name", e.target.value);
        };

        _this.state = {};
        return _this;
    }

    _createClass(ListingName, [{
        key: "render",
        value: function render() {
            var name = this.props.name;

            return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                "div",
                { className: "base-input" },
                __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                    "label",
                    null,
                    this.context.t("Listing name")
                ),
                __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement("input", {
                    type: "text",
                    value: name,
                    onChange: this.updateName,
                    placeholder: "",
                    maxLength: 70
                })
            );
        }
    }]);

    return ListingName;
}(__WEBPACK_IMPORTED_MODULE_0_react___default.a.Component);

ListingName.contextTypes = {
    t: __WEBPACK_IMPORTED_MODULE_2_prop_types__["PropTypes"].func.isRequired
};

var mapStateToProps = function mapStateToProps(state) {
    return state.content;
};

var mapDispatchToProps = function mapDispatchToProps(dispatch) {
    return {
        updateContentValue: function updateContentValue(key, value) {
            return dispatch({
                type: 'UPDATE_CONTENT_VALUE',
                key: key,
                value: value
            });
        }
    };
};

/* harmony default export */ __webpack_exports__["a"] = (Object(__WEBPACK_IMPORTED_MODULE_1_react_redux__["connect"])(mapStateToProps, mapDispatchToProps)(ListingName));

/***/ }),

/***/ "./src/AppBundle/Resources/public/javascript/sell/components/Match.js":
/*!****************************************************************************!*\
  !*** ./src/AppBundle/Resources/public/javascript/sell/components/Match.js ***!
  \****************************************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_react__);
var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }



var Match = function (_React$Component) {
    _inherits(Match, _React$Component);

    function Match(props) {
        _classCallCheck(this, Match);

        var _this = _possibleConstructorReturn(this, (Match.__proto__ || Object.getPrototypeOf(Match)).call(this, props));

        _this.toggle = function (e) {
            _this.setState(function (prevState) {
                return {
                    selected: !prevState.selected
                };
            });

            _this.props.onUpdate(!_this.state.selected);

            e.stopPropagation();
        };

        _this.update = function (selected) {
            _this.setState({ selected: selected });
        };

        _this.state = {
            match: props.match,
            selected: props.selected || false
        };
        return _this;
    }

    _createClass(Match, [{
        key: "render",
        value: function render() {
            var _this2 = this;

            var competitorsLen = this.props.match.competitors.length;
            return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                "div",
                { className: "match ", onClick: function onClick() {
                        _this2.props.onSelect(_this2.props.match.externalId);
                    } },
                this.props.match.selected && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement("i", { className: "fa fa-circle" }),
                !this.props.match.selected && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement("i", { className: "fa fa-circle-o" }),
                this.props.match.competitors.map(function (competitor, i) {
                    return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        "span",
                        { key: i },
                        competitor.name,
                        " ",
                        competitorsLen !== i + 1 && " vs "
                    );
                })
            );
        }
    }]);

    return Match;
}(__WEBPACK_IMPORTED_MODULE_0_react___default.a.Component);

/* harmony default export */ __webpack_exports__["a"] = (Match);

/***/ }),

/***/ "./src/AppBundle/Resources/public/javascript/sell/components/PopupRight.js":
/*!*********************************************************************************!*\
  !*** ./src/AppBundle/Resources/public/javascript/sell/components/PopupRight.js ***!
  \*********************************************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_react__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_react_modal__ = __webpack_require__(/*! react-modal */ "./node_modules/react-modal/lib/index.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_react_modal___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_react_modal__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_lodash_cloneDeep__ = __webpack_require__(/*! lodash/cloneDeep */ "./node_modules/lodash/cloneDeep.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_lodash_cloneDeep___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2_lodash_cloneDeep__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__main_styles_custom__ = __webpack_require__(/*! ../../main/styles/custom */ "./src/AppBundle/Resources/public/javascript/main/styles/custom.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__RightItemsDefinitions__ = __webpack_require__(/*! ./RightItemsDefinitions */ "./src/AppBundle/Resources/public/javascript/sell/components/RightItemsDefinitions.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__main_components_LanguageSelector__ = __webpack_require__(/*! ../../main/components/LanguageSelector */ "./src/AppBundle/Resources/public/javascript/main/components/LanguageSelector.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__SuperRightDefinitions__ = __webpack_require__(/*! ./SuperRightDefinitions */ "./src/AppBundle/Resources/public/javascript/sell/components/SuperRightDefinitions.js");
var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }









var numberFieldStyle = { width: '30px', paddingLeft: '10px' };

var PopupRight = function (_React$Component) {
    _inherits(PopupRight, _React$Component);

    function PopupRight(props) {
        _classCallCheck(this, PopupRight);

        var _this = _possibleConstructorReturn(this, (PopupRight.__proto__ || Object.getPrototypeOf(PopupRight)).call(this, props));

        _this.toggleAll = function (rightItem) {
            var selection = _this.state.selection;

            if (selection.get(rightItem).has(0)) {
                selection.get(rightItem).clear();
            } else {
                _this.state.activePackages.forEach(function (rightPackage) {
                    selection.get(rightItem).set(rightPackage.id, true);
                });

                selection.get(rightItem).set(0, true);
            }

            _this.setState({ selection: selection });
        };

        _this.select = function (rightItem, rightPackage) {
            var selection = _this.state.selection;

            if (!_this.state.activePackages.has(rightPackage)) return false;

            if (!_this.props.data.multiple) {

                selection.forEach(function (item, key) {
                    if (key !== rightItem) item.clear();
                });
            }
            selection.get(rightItem).set(rightPackage, true);
            _this.setState({ selection: selection });
        };

        _this.unselect = function (rightItem, rightPackage) {
            var selection = _this.state.selection;
            selection.get(rightItem).delete(rightPackage);
            selection.get(rightItem).delete(0);
            _this.setState({ selection: selection });
        };

        _this.toggle = function (rightItem, rightPackage) {
            var selection = _this.state.selection;
            if (selection.get(rightItem).has(rightPackage)) {
                _this.unselect(rightItem, rightPackage);
            } else {
                _this.select(rightItem, rightPackage);
            }
        };

        _this.isSelected = function (rightItem, rightPackage) {
            var selection = _this.state.selection;
            return selection.get(rightItem).has(rightPackage);
        };

        _this.packageIsActive = function (id) {
            return _this.state.activePackages.has(id) && _this.state.availablePackages.has(id);
        };

        _this.setDate = function (date, rightItem, rightPackage) {
            var selection = _this.state.selection;

            if (!_this.state.activePackages.has(rightPackage)) return false;

            selection.get(rightItem).set(rightPackage, date);
            _this.setState({ selection: selection });
        };

        _this.togglePopup = function () {
            var _this$props = _this.props,
                onProgram = _this$props.onProgram,
                id = _this$props.id,
                onUpdate = _this$props.onUpdate;


            if (id === "PROGRAM") {
                onProgram();
                return;
            }

            _this.setState(function (_ref) {
                var isOpen = _ref.isOpen,
                    rightsPackage = _ref.rightsPackage;

                if (!isOpen) {
                    _this.prevRightsPackage = new Map();
                    rightsPackage.forEach(function (item) {
                        _this.prevRightsPackage.set(item.id, __WEBPACK_IMPORTED_MODULE_2_lodash_cloneDeep___default()(item));
                    });
                }

                return {
                    isOpen: !isOpen
                };
            });
        };

        _this.closePopupAndRestoreData = function () {
            var onUpdate = _this.props.onUpdate;


            onUpdate(_this.prevRightsPackage);
            _this.prevRightsPackage = null;
            _this.togglePopup();
        };

        _this.onOKClicked = function () {
            _this.togglePopup();
        };

        _this.updateSelection = function (val, id, rightPackage) {
            var rightsPackage = _this.state.rightsPackage;
            rightPackage.selectedRights[id] = val;
            rightsPackage.set(rightPackage.id, rightPackage);

            _this.props.onUpdate(rightsPackage);
        };

        _this.updateMultipleSelection = function (val, id, rightPackage) {

            var rightsPackage = _this.state.rightsPackage;
            var index = rightPackage.selectedRights[id].indexOf(val);
            var all = __WEBPACK_IMPORTED_MODULE_4__RightItemsDefinitions__["a" /* RightItemsDefinitions */][val].all;
            var alls = __WEBPACK_IMPORTED_MODULE_4__RightItemsDefinitions__["a" /* RightItemsDefinitions */];

            if (index === -1) {

                if (all) {
                    rightPackage.selectedRights[id] = [val];
                } else {
                    rightPackage.selectedRights[id] = [].concat(_toConsumableArray(rightPackage.selectedRights[id]), [val]);

                    rightPackage.selectedRights[id].forEach(function (item, index, object) {
                        var m = item.match(/_ALL/g);
                        if (m) {
                            object.splice(index, 1);
                        }
                    });
                }
            } else {
                if (rightPackage.selectedRights[id].length > 1) rightPackage.selectedRights[id].splice(index, 1);
            }

            rightsPackage.set(rightPackage.id, rightPackage);

            _this.props.onUpdate(rightsPackage);
        };

        _this.updateSelectionInAllPackages = function (val, id) {

            var rightsPackage = _this.state.rightsPackage;
            rightsPackage.forEach(function (rightPackage) {
                rightPackage.selectedRights[id] = val;
            });
            _this.props.onUpdate(rightsPackage);
        };

        _this.getSelection = function (id, superRights) {

            var custom = false,
                selected = void 0;

            superRights.forEach(function (superRight) {

                if (!superRight.selectedRights) return false;

                var current = superRight.selectedRights[id];

                if (selected === undefined) {
                    selected = current;
                    return false;
                }

                if (current !== selected) {
                    custom = true;
                    return true;
                }
            });
            return custom;
        };

        _this.hasSelection = function (id, value, superRights) {

            var has = false;

            superRights.forEach(function (superRight) {
                if (superRight.selectedRights[id] === value) has = true;
            });

            return has;
        };

        _this.renderModalRow = function (rightPackage) {
            var _this$props2 = _this.props,
                multiple = _this$props2.multiple,
                options = _this$props2.options,
                id = _this$props2.id,
                productionLabel = _this$props2.productionLabel,
                rightsPackage = _this$props2.rightsPackage;
            var productionLabels = _this.state.productionLabels;

            var packagesAvailable = rightsPackage.map(function (rp) {
                return rp.shortLabel;
            });
            return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                'div',
                { className: 'row' },
                __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                    'div',
                    { className: 'column', style: { justifyContent: "flex-start", flex: 3 } },
                    !productionLabel && rightPackage.name,
                    productionLabel && productionLabels[rightPackage.shortLabel]
                ),
                options.map(function (option, i, list) {

                    var flex = list.length > 2 ? 2 : 3;
                    var disabled = false;
                    var definition = __WEBPACK_IMPORTED_MODULE_4__RightItemsDefinitions__["a" /* RightItemsDefinitions */][option];
                    if (__WEBPACK_IMPORTED_MODULE_4__RightItemsDefinitions__["a" /* RightItemsDefinitions */][option].language) flex = flex + 2;
                    if (definition.hideIf && definition.hideIf.filter(function (sl) {
                        return packagesAvailable.indexOf(sl) !== -1;
                    }).length > 0) return null;
                    if (definition.disabledIf && definition.disabledIf.indexOf(rightPackage.shortLabel) !== -1) disabled = true;
                    return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        'div',
                        { className: 'column', style: { flex: flex } },
                        multiple && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('input', { checked: rightPackage.selectedRights[id].indexOf(option) !== -1,
                            onChange: function onChange(e) {
                                _this.updateMultipleSelection(option, id, rightPackage);
                            },
                            type: 'checkbox',
                            id: rightPackage.shortLabel + "_" + option }),
                        multiple && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('label', { htmlFor: rightPackage.shortLabel + "_" + option }),
                        !multiple && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('input', {
                            checked: rightPackage.selectedRights[id] === option,
                            type: 'radio',
                            className: 'ca-radio',
                            disabled: disabled,
                            onChange: function onChange(e) {
                                _this.updateSelection(e.target.value, id, rightPackage);
                            },
                            name: rightPackage.shortLabel + "_" + id, value: option }),
                        __WEBPACK_IMPORTED_MODULE_4__RightItemsDefinitions__["a" /* RightItemsDefinitions */][option].language && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_5__main_components_LanguageSelector__["a" /* LanguageSelector */], {
                            onChange: function onChange(value) {
                                _this.updateSelection(value, id + "_LANGUAGES", rightPackage);
                                _this.updateSelection(option, id, rightPackage);
                            },
                            value: rightPackage.selectedRights[id + "_LANGUAGES"] }),
                        __WEBPACK_IMPORTED_MODULE_4__RightItemsDefinitions__["a" /* RightItemsDefinitions */][option].textField && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('input', {
                            onChange: function onChange(e) {
                                _this.updateSelection(e.target.value, id + "_TEXT", rightPackage);
                            },
                            value: rightPackage.selectedRights[id + "_TEXT"],
                            className: 'text-field',
                            type: 'text' }),
                        __WEBPACK_IMPORTED_MODULE_4__RightItemsDefinitions__["a" /* RightItemsDefinitions */][option].numberField && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('input', {
                            className: 'text-field',
                            style: numberFieldStyle,
                            type: 'number',
                            onChange: function onChange(e) {
                                _this.updateSelection(e.target.value, id + "_NUMBER", rightPackage);
                            },
                            value: rightPackage.selectedRights[id + "_NUMBER"],
                            min: 0 }),
                        __WEBPACK_IMPORTED_MODULE_4__RightItemsDefinitions__["a" /* RightItemsDefinitions */][option].bigTextField && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('textarea', { style: { minHeight: "50px", margin: "5px 0px" } })
                    );
                })
            );
        };

        _this.renderModal = function () {
            var _this$props3 = _this.props,
                name = _this$props3.name,
                description = _this$props3.description,
                options = _this$props3.options,
                id = _this$props3.id,
                superRights = _this$props3.superRights,
                showTextArea = _this$props3.showTextArea,
                rightsPackage = _this$props3.rightsPackage,
                technicalFee = _this$props3.technicalFee,
                checkContentDelivery = _this$props3.checkContentDelivery,
                global = _this$props3.global,
                language = _this$props3.language,
                languages = _this$props3.languages,
                onUpdateListing = _this$props3.onUpdateListing;


            var packagesAvailable = rightsPackage.map(function (rp) {
                return rp.shortLabel;
            });
            var deliveryViaLiveFeed = rightsPackage.filter(function (rp) {
                return rp.selectedRights.CONTENT_DELIVERY === "CONTENT_DELIVERY_LIVE";
            });

            return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                __WEBPACK_IMPORTED_MODULE_1_react_modal___default.a,
                {
                    isOpen: _this.state.isOpen,
                    bodyOpenClassName: "selector",
                    style: __WEBPACK_IMPORTED_MODULE_3__main_styles_custom__["c" /* customStyles */]
                },
                __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                    'div',
                    { className: 'modal-title' },
                    'Edit ',
                    name,
                    description && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('i', { className: 'fa fa-info-circle tooltip-icon', title: description }),
                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('i', { className: 'fa fa-times-circle-o close-icon', onClick: _this.closePopupAndRestoreData })
                ),
                __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                    'div',
                    { className: 'step-content' },
                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        'div',
                        { className: 'step-content-container' },
                        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                            'div',
                            { className: 'modal-table' },
                            __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                'div',
                                { className: 'row row-header' },
                                !global && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('div', { className: 'column', style: { justifyContent: "flex-start", flex: 3 } }),
                                global && language && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                    'div',
                                    { className: 'column', style: { flex: 3 } },
                                    'Licensed languages'
                                ),
                                options.map(function (option, i, list) {
                                    var flex = list.length > 2 ? 2 : 3;

                                    var definition = __WEBPACK_IMPORTED_MODULE_4__RightItemsDefinitions__["a" /* RightItemsDefinitions */][option];
                                    if (definition.language) flex = flex + 2;
                                    var label = definition.label;

                                    if (definition.hideIf && definition.hideIf.filter(function (sl) {
                                        return packagesAvailable.indexOf(sl) !== -1;
                                    }).length > 0) return null;

                                    return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                        'div',
                                        { className: 'column', style: { flex: flex } },
                                        label && label
                                    );
                                })
                            ),
                            global && language && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_5__main_components_LanguageSelector__["a" /* LanguageSelector */], {
                                onChange: function onChange(value) {
                                    onUpdateListing("LICENSED_LANGUAGES", value);
                                },
                                value: languages }),
                            deliveryViaLiveFeed.length > 0 && id !== "CONTENT_DELIVERY" && packagesAvailable.indexOf("LT") === -1 && checkContentDelivery && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                'div',
                                { className: 'row' },
                                __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                    'div',
                                    { className: 'column', style: { justifyContent: "flex-start", flex: 3 } },
                                    'Live Transmission'
                                ),
                                options.map(function (option, i, list) {
                                    var flex = list.length > 2 ? 2 : 3;
                                    var disabled = false;
                                    var definition = __WEBPACK_IMPORTED_MODULE_4__RightItemsDefinitions__["a" /* RightItemsDefinitions */][option];
                                    if (definition.language) flex = flex + 2;
                                    if (definition.hideIf && definition.hideIf.filter(function (sl) {
                                        return packagesAvailable.indexOf(sl) !== -1;
                                    }).length > 0) return null;

                                    var customId = "LIVE_FEED_" + id;
                                    var customProp = rightsPackage[0].selectedRights[customId];
                                    return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                        'div',
                                        { className: 'column', style: { flex: flex } },
                                        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('input', {
                                            defaultChecked: customProp === option,
                                            type: 'radio',
                                            className: 'ca-radio',
                                            disabled: disabled,
                                            onChange: function onChange(e) {
                                                _this.updateSelection(e.target.value, customId, rightsPackage[0]);
                                            },
                                            name: customId + "_" + id, value: option }),
                                        definition.language && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_5__main_components_LanguageSelector__["a" /* LanguageSelector */], {
                                            onChange: function onChange(value) {
                                                _this.updateSelection(value, customId + "_LANGUAGES", rightsPackage[0]);
                                            },
                                            value: rightsPackage[0].selectedRights[customId + "_LANGUAGES"] }),
                                        definition.textField && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('input', {
                                            onChange: function onChange(e) {
                                                _this.updateSelection(e.target.value, customId + "_TEXT", rightsPackage[0]);
                                            },
                                            value: rightsPackage[0].selectedRights[customId + "_TEXT"],
                                            className: 'text-field',
                                            type: 'text' }),
                                        definition.numberField && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('input', {
                                            className: 'text-field',
                                            style: numberFieldStyle,
                                            type: 'number',
                                            onChange: function onChange(e) {
                                                _this.updateSelection(e.target.value, customId + "_NUMBER", rightsPackage[0]);
                                            },
                                            value: rightsPackage[0].selectedRights[customId + "_NUMBER"],
                                            min: 0 })
                                    );
                                })
                            ),
                            !global && rightsPackage.map(function (rightPackage) {
                                if (superRights.length > 0 && superRights.indexOf(rightPackage.shortLabel) === -1) return;

                                if (checkContentDelivery && id !== "CONTENT_DELIVERY" && (rightPackage.selectedRights.CONTENT_DELIVERY === "CONTENT_DELIVERY_NON_DEDICATED" || rightPackage.selectedRights.CONTENT_DELIVERY === "CONTENT_DELIVERY_LIVE")
                                //&& packagesAvailable.indexOf("LT") === -1
                                ) {
                                        return;
                                    }
                                return _this.renderModalRow(rightPackage);
                            }),
                            showTextArea && (showTextArea === "ALL" || _this.hasSelection(id, showTextArea, rightsPackage)) && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('textarea', {
                                placeholder: "Enter text to proceed",
                                onChange: function onChange(e) {
                                    _this.updateSelectionInAllPackages(e.target.value, id + "_TEXTAREA");
                                },
                                value: rightsPackage[0].selectedRights[id + "_TEXTAREA"] }),
                            showTextArea && showTextArea === "FURTHER_DETAILS" && rightsPackage && rightsPackage.length > 0 && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                'div',
                                null,
                                __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                    'div',
                                    { style: { fontWeight: 600, padding: "15px 0 5px" } },
                                    'Further details'
                                ),
                                __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('textarea', {

                                    onChange: function onChange(e) {
                                        _this.updateSelectionInAllPackages(e.target.value, "TECHNICAL_FEE_DETAILS");
                                    },
                                    value: rightsPackage[0].selectedRights["TECHNICAL_FEE_DETAILS"] })
                            ),
                            technicalFee && _this.hasSelection(id, technicalFee, rightsPackage) && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                'div',
                                null,
                                __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                    'div',
                                    { style: { fontWeight: 600, padding: "15px 0 5px" } },
                                    'Technical fee'
                                ),
                                __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                    'div',
                                    null,
                                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('input', {
                                        style: { width: '20px' },
                                        defaultChecked: rightsPackage[0].selectedRights["TECHNICAL_FEE"] === "INCLUDED",
                                        type: 'radio',
                                        className: 'ca-radio',
                                        value: "INCLUDED",
                                        onChange: function onChange(e) {
                                            _this.updateSelectionInAllPackages(e.target.value, "TECHNICAL_FEE");
                                        },
                                        name: 'TECHNICAL_FEE' }),
                                    ' Technical fee included in license fee'
                                ),
                                __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                    'div',
                                    null,
                                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('input', {
                                        style: { width: '20px' },
                                        checked: rightsPackage[0].selectedRights["TECHNICAL_FEE"] === "ON_TOP",
                                        type: 'radio',
                                        className: 'ca-radio',
                                        value: "ON_TOP",
                                        onChange: function onChange(e) {
                                            _this.updateSelectionInAllPackages(e.target.value, "TECHNICAL_FEE");
                                        },
                                        name: 'TECHNICAL_FEE' }),
                                    'Technical fee charged on top of license fee',
                                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('input', {
                                        style: { width: '50px', margin: '1px 10px' },
                                        onChange: function onChange(e) {
                                            _this.updateSelectionInAllPackages(e.target.value, "TECHNICAL_FEE_PERCENTAGE");
                                        },
                                        value: rightsPackage[0].selectedRights["TECHNICAL_FEE_PERCENTAGE"],
                                        type: 'number',
                                        max: 100,
                                        min: 0,
                                        onFocus: function onFocus(e) {
                                            _this.updateSelectionInAllPackages("ON_TOP", "TECHNICAL_FEE");
                                        } }),
                                    '% technical fee'
                                )
                            )
                        )
                    )
                ),
                __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                    'div',
                    { className: "buttons" },
                    _this.showOkButton() && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        'button',
                        {
                            className: "standard-button",
                            onClick: _this.onOKClicked },
                        'Ok'
                    ),
                    !_this.showOkButton() && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        'button',
                        {
                            className: "standard-button",
                            disabled: true },
                        'Ok'
                    )
                )
            );
        };

        _this.showOkButton = function () {
            var _this$props4 = _this.props,
                name = _this$props4.name,
                multiple = _this$props4.multiple,
                options = _this$props4.options,
                id = _this$props4.id,
                superRights = _this$props4.superRights,
                showTextArea = _this$props4.showTextArea,
                rightsPackage = _this$props4.rightsPackage,
                technicalFee = _this$props4.technicalFee,
                global = _this$props4.global,
                language = _this$props4.language,
                languages = _this$props4.languages;


            var response = true;
            var contentDeliveryCounter = 0;

            if (global && language) {
                return languages.length > 0;
            }

            if (showTextArea) {
                if (showTextArea === "ALL" || _this.hasSelection(id, showTextArea, rightsPackage)) {
                    if (!rightsPackage[0].selectedRights[id + "_TEXTAREA"] || rightsPackage[0].selectedRights[id + "_TEXTAREA"] === "") return false;
                }
            }

            if (id === "CONTENT_DELIVERY") {
                rightsPackage.forEach(function (rp) {
                    if (rp.selectedRights[id] === "CONTENT_DELIVERY_NON_DEDICATED") contentDeliveryCounter++;
                });
                if (rightsPackage.length === contentDeliveryCounter) response = false;
            }

            if (rightsPackage && rightsPackage[0] && rightsPackage[0].selectedRights) {
                rightsPackage.forEach(function (right) {
                    if (__WEBPACK_IMPORTED_MODULE_4__RightItemsDefinitions__["a" /* RightItemsDefinitions */][right.selectedRights[id]] && __WEBPACK_IMPORTED_MODULE_4__RightItemsDefinitions__["a" /* RightItemsDefinitions */][right.selectedRights[id]].language) {
                        if (!right.selectedRights[id + '_LANGUAGES'] || right.selectedRights[id + '_LANGUAGES'].length === 0) {
                            response = false;
                        }
                    }
                });

                rightsPackage.forEach(function (right) {
                    if (__WEBPACK_IMPORTED_MODULE_4__RightItemsDefinitions__["a" /* RightItemsDefinitions */][right.selectedRights[id]] && __WEBPACK_IMPORTED_MODULE_4__RightItemsDefinitions__["a" /* RightItemsDefinitions */][right.selectedRights[id]].textField) {
                        if (!right.selectedRights[id + '_TEXT'] || right.selectedRights[id + '_TEXT'].length === 0) {
                            response = false;
                        }
                    }
                });
            }
            return response;
        };

        _this.state = {
            rightsPackage: new Map(props.rightsPackage.map(function (i) {
                return [i.id, i];
            })),
            isOpen: false,
            selected: props.selected,
            custom: false,
            productionLabels: __WEBPACK_IMPORTED_MODULE_6__SuperRightDefinitions__["c" /* SuperRightProductionDetailsLabels */]
        };
        return _this;
    }

    _createClass(PopupRight, [{
        key: 'componentWillReceiveProps',
        value: function componentWillReceiveProps(props) {
            //console.log("PopupRight - props",props);
            this.setState({
                rightsPackage: new Map(props.rightsPackage.map(function (i) {
                    return [i.id, i];
                }))
            });
        }
    }, {
        key: 'render',
        value: function render() {
            var _props = this.props,
                name = _props.name,
                rightsPackage = _props.rightsPackage,
                programName = _props.programName,
                global = _props.global,
                languages = _props.languages,
                checkContentDelivery = _props.checkContentDelivery;

            var id = this.props.id;
            var custom = this.getSelection(id, rightsPackage);
            var selected = "";
            var packagesAvailable = rightsPackage.map(function (rp) {
                return rp.shortLabel;
            });
            var deliveryViaLiveFeed = rightsPackage.filter(function (rp) {
                return rp.selectedRights.CONTENT_DELIVERY === "CONTENT_DELIVERY_LIVE";
            });

            if (deliveryViaLiveFeed.length > 0 && id !== "CONTENT_DELIVERY" && packagesAvailable.indexOf("LT") === -1 && checkContentDelivery) id = "LIVE_FEED_" + id;

            if (rightsPackage.length > 0) {
                if (id === "PROGRAM") {
                    if (programName) {
                        selected = programName;
                    }
                } else if (id === "CAMERA") {
                    custom = custom || this.getSelection("CAMERAS", rightsPackage);
                    if (!custom) {

                        if (rightsPackage[0].selectedRights[id] === "CAMERA_MINIMUM") {
                            selected = "Minimum cameras: " + rightsPackage[0].selectedRights["CAMERAS"];
                        } else {
                            selected = __WEBPACK_IMPORTED_MODULE_4__RightItemsDefinitions__["a" /* RightItemsDefinitions */][rightsPackage[0].selectedRights[id]].label;
                        }
                    }
                } else if (id === "EXPLOITATION_FORM" || id === "TRANSMISSION_MEANS" || id === "TECHNICAL_DELIVERY") {

                    if (rightsPackage[0].selectedRights[id].length > 1) {
                        custom = true;
                    } else {
                        selected = __WEBPACK_IMPORTED_MODULE_4__RightItemsDefinitions__["a" /* RightItemsDefinitions */][rightsPackage[0].selectedRights[id][0]].label;
                    }
                } else if (global) {

                    if (languages.length > 0) {
                        custom = true;
                    } else {}
                } else {
                    if (rightsPackage[0].selectedRights && __WEBPACK_IMPORTED_MODULE_4__RightItemsDefinitions__["a" /* RightItemsDefinitions */][rightsPackage[0].selectedRights[id]]) {
                        selected = __WEBPACK_IMPORTED_MODULE_4__RightItemsDefinitions__["a" /* RightItemsDefinitions */][rightsPackage[0].selectedRights[id]].label;
                    }
                }
            }

            return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                'div',
                { className: 'base-input', style: { width: "49%" } },
                __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                    'label',
                    null,
                    name
                ),
                __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('input', {
                    type: 'text',
                    readOnly: true,
                    value: custom ? "Custom!" : selected,
                    className: custom ? "custom" : undefined,
                    placeholder: "Select",
                    onClick: this.togglePopup
                }),
                __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('i', { className: 'fa fa-edit', onClick: this.togglePopup }),
                this.renderModal()
            );
        }
    }]);

    return PopupRight;
}(__WEBPACK_IMPORTED_MODULE_0_react___default.a.Component);

/* harmony default export */ __webpack_exports__["a"] = (PopupRight);

/***/ }),

/***/ "./src/AppBundle/Resources/public/javascript/sell/components/ProductionStandardsDefinitions.js":
/*!*****************************************************************************************************!*\
  !*** ./src/AppBundle/Resources/public/javascript/sell/components/ProductionStandardsDefinitions.js ***!
  \*****************************************************************************************************/
/*! exports provided: ProductionStandardsDefinitions */
/*! exports used: ProductionStandardsDefinitions */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return ProductionStandardsDefinitions; });
var ProductionStandardsDefinitions = [{
    name: "Content Delivery",
    key: "CONTENT_DELIVERY",
    superRights: [],
    options: ["CONTENT_DELIVERY_LIVE", "CONTENT_DELIVERY_DEDICATED", "CONTENT_DELIVERY_NON_DEDICATED"],
    multiple: false
}, {
    name: "Video Standard",
    key: "VIDEO_STANDARD",
    superRights: ["LT", "HL", "LB", "NA", "DT"],
    productionLabel: true,
    options: ["VIDEO_STANDARD_HD", "VIDEO_STANDARD_SD", "VIDEO_STANDARD_UHD", "VIDEO_STANDARD_VR", "VIDEO_STANDARD_NOT_AVAILABLE"],
    multiple: false
}, {
    name: "Aspect ratio",
    key: "ASPECT_RATIO",
    superRights: ["LT", "HL", "LB", "NA", "DT"],
    productionLabel: true,
    options: ["ASPECT_RATIO_16_9", "ASPECT_RATIO_4_3", "ASPECT_RATIO_CUSTOM", "ASPECT_RATIO_NOT_AVAILABLE"],
    multiple: false
}, {
    name: "Graphics",
    key: "GRAPHICS",
    superRights: ["LT", "HL", "LB", "NA", "DT"],
    productionLabel: true,
    options: ["GRAPHICS_NO", "GRAPHICS_YES", "GRAPHICS_NOT_AVAILABLE"],
    multiple: false
}, {
    name: "Commentary",
    key: "COMMENTARY",
    productionLabel: true,
    superRights: ["LT", "HL", "LB", "NA", "DT"],
    options: ["COMMENTARY_NO", "COMMENTARY_YES", "COMMENTARY_NOT_AVAILABLE"],
    multiple: false
}, {
    name: "Camera standards",
    key: "CAMERA",
    productionLabel: true,
    superRights: ["LT", "HL", "LB", "NA", "DT"],
    options: ["CAMERA_MINIMUM", "CAMERA_NOT_AVAILABLE"],
    multiple: false
}, {
    name: "Delivery Method",
    key: "TECHNICAL_DELIVERY",
    productionLabel: true,
    superRights: [],
    options: ["TECHNICAL_DELIVERY_SATELLITE", "TECHNICAL_DELIVERY_IP", "TECHNICAL_DELIVERY_FTP", "TECHNICAL_DELIVERY_FIBER"],
    multiple: true,
    showTextArea: "FURTHER_DETAILS",
    technicalFee: "TECHNICAL_DELIVERY_SATELLITE"
}, {
    name: "Program Details",
    key: "PROGRAM",
    superRights: ['PR'],
    options: [],
    multiple: false
}];

/***/ }),

/***/ "./src/AppBundle/Resources/public/javascript/sell/components/RightDefaults.js":
/*!************************************************************************************!*\
  !*** ./src/AppBundle/Resources/public/javascript/sell/components/RightDefaults.js ***!
  \************************************************************************************/
/*! exports provided: RightDefaults */
/*! exports used: RightDefaults */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return RightDefaults; });
var RightDefaults = {
    "CUTS": "CUT_AVAILABLE_NO",
    "BROADCASTING": "BROADCASTING_NO",
    "SUBLICENSE": "SUBLICENSE_YES_APPROVAL",
    "TRANSMISSION_MEANS": ["TRANSMISSION_MEANS_ALL"],
    "EXPLOITATION_FORM": ["EXPLOITATION_FORM_ALL"],
    "VIDEO_STANDARD": "VIDEO_STANDARD_HD",
    "RUNS": "RUNS_UNLIMITED",
    "EXPLOITATION_WINDOW": "EXPLOITATION_WINDOW_UNLIMITED",
    "RESERVED_RIGHTS": "RESERVED_RIGHTS_NO",
    "ASPECT_RATIO": "ASPECT_RATIO_16_9",
    "COMMENTARY": "COMMENTARY_NO",
    "GRAPHICS": "GRAPHICS_NO",
    "CAMERA": "CAMERA_MINIMUM",
    "CONTENT": "CONTENT_ALL",
    "TECHNICAL_DELIVERY": ["TECHNICAL_DELIVERY_SATELLITE"],
    "TECHNICAL_FEE": "INCLUDED",
    "CAMERAS": 4,
    LIVE_FEED_ASPECT_RATIO: "ASPECT_RATIO_16_9",
    LIVE_FEED_COMMENTARY: "COMMENTARY_NO",
    LIVE_FEED_GRAPHICS: "GRAPHICS_NO",
    LIVE_FEED_CAMERA: "CAMERA_MINIMUM",
    LIVE_FEED_TECHNICAL_DELIVERY: "TECHNICAL_DELIVERY_SATELLITE",
    LIVE_FEED_CAMERAS: 4,
    LIVE_FEED_VIDEO_STANDARD: "VIDEO_STANDARD_HD",
    "LICENSED_LANGUAGES": "LICENSED_LANGUAGES_YES"
};

/***/ }),

/***/ "./src/AppBundle/Resources/public/javascript/sell/components/RightDefaultsBySuperRight.js":
/*!************************************************************************************************!*\
  !*** ./src/AppBundle/Resources/public/javascript/sell/components/RightDefaultsBySuperRight.js ***!
  \************************************************************************************************/
/*! exports provided: RightDefaultsBySuperRight */
/*! exports used: RightDefaultsBySuperRight */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return RightDefaultsBySuperRight; });
var RightDefaultsBySuperRight = {
    "LT": {
        "CONTENT_DELIVERY": "CONTENT_DELIVERY_DEDICATED"
    },
    "PR": {
        "CONTENT_DELIVERY": "CONTENT_DELIVERY_DEDICATED"
    },
    "NA": {
        "CONTENT_DELIVERY": "CONTENT_DELIVERY_NON_DEDICATED"
    },
    "DT": {
        "CONTENT_DELIVERY": "CONTENT_DELIVERY_NON_DEDICATED"
    },
    "HL": {
        "CONTENT_DELIVERY": "CONTENT_DELIVERY_NON_DEDICATED"
    },
    "LB": {
        "CONTENT_DELIVERY": "CONTENT_DELIVERY_NON_DEDICATED"
    }

};

/***/ }),

/***/ "./src/AppBundle/Resources/public/javascript/sell/components/RightDefinitions.js":
/*!***************************************************************************************!*\
  !*** ./src/AppBundle/Resources/public/javascript/sell/components/RightDefinitions.js ***!
  \***************************************************************************************/
/*! exports provided: RightDefinitions */
/*! exports used: RightDefinitions */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return RightDefinitions; });
var RightDefinitions = [{
    name: "Right to sublicense",
    key: "SUBLICENSE",
    superRights: [],
    options: ["SUBLICENSE_YES", "SUBLICENSE_YES_APPROVAL", "SUBLICENSE_NO"],
    multiple: false,
    description: 'Means the right to sublicense the granted Audio-visual Rights to a third party subject to (i) Licensee being liable for the acts or omissions of each sub-licensee regarding the exploitation of Audio-visual Rights as if such acts or omissions were the acts or omissions of Licensee and (ii) Licensee remaining fully liable for all their obligations set out in this Agreement towards Licensor.'
}, {
    name: "Transmission Obligation",
    key: "BROADCASTING",
    superRights: [],
    options: ["BROADCASTING_NO", "BROADCASTING_YES"],
    showTextArea: "BROADCASTING_YES",
    multiple: false,
    description: 'Means the obligation to a specific Transmission of the Program.'
}, {
    name: "Transmission means",
    key: "TRANSMISSION_MEANS",
    superRights: [],
    options: ["TRANSMISSION_MEANS_ALL", "TRANSMISSION_MEANS_CABLE", "TRANSMISSION_MEANS_SATELLITE", "TRANSMISSION_MEANS_DIGITAL", "TRANSMISSION_MEANS_OTT", "TRANSMISSION_MEANS_INTERNET", "TRANSMISSION_MEANS_MOBILE"],
    multiple: true,
    description: 'Means the technical means on which Licensee may Transmit Program as per Rights Specification.'
}, {
    name: "Transmission Form",
    key: "EXPLOITATION_FORM",
    superRights: [],
    options: ["EXPLOITATION_FORM_ALL", "EXPLOITATION_FORM_FREE", "EXPLOITATION_FORM_PAY", "EXPLOITATION_FORM_IN-SHIP", "EXPLOITATION_FORM_CLOSED"],
    multiple: true,
    description: 'Means the form of exploitation for which the Audio-visual Rights to the Program is granted.'
}, {
    name: "Licensed languages",
    key: "LICENSED_LANGUAGES",
    superRights: [],
    options: [],
    global: true,
    language: true,
    description: 'Means the language in which Licensee my exploit the Granted Rights.'
}, {
    name: "Number of runs",
    key: "RUNS",
    superRights: ["CL", "NA", "PR", "DT", "HL"],
    options: ["RUNS_UNLIMITED", "RUNS_LIMITED"],
    multiple: false,
    description: 'Means the number of Transmission of the Program.'
}, {
    name: "Exploitation window",
    key: "EXPLOITATION_WINDOW",
    superRights: ["CL", "NA", "PR", "DT", "HL"],
    options: ["EXPLOITATION_WINDOW_UNLIMITED", "EXPLOITATION_WINDOW_LIMITED"],
    multiple: false,
    description: 'Means the specific time frame within the License Period in which the specific right may be exploited.',
    showTextArea: "EXPLOITATION_WINDOW_LIMITED"
}, {
    name: "Reserved rights",
    key: "RESERVED_RIGHTS",
    superRights: [],
    options: ["RESERVED_RIGHTS_NO", "RESERVED_RIGHTS_YES"],
    multiple: false,
    description: 'Means the Audio-visual Rights to the Program that may be exploited by Licensor and its sublicensee irrespective of any exclusivity granted.',
    showTextArea: "RESERVED_RIGHTS_YES"

}];

/***/ }),

/***/ "./src/AppBundle/Resources/public/javascript/sell/components/RightItemsDefinitions.js":
/*!********************************************************************************************!*\
  !*** ./src/AppBundle/Resources/public/javascript/sell/components/RightItemsDefinitions.js ***!
  \********************************************************************************************/
/*! exports provided: RightItemsDefinitions */
/*! exports used: RightItemsDefinitions */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return RightItemsDefinitions; });
var RightItemsDefinitions = {
    "BROADCASTING_YES": {
        "parent": "Transmission Obligation",
        "label": "Yes"
    },
    "BROADCASTING_NO": {
        "parent": "Transmission Obligation",
        "label": "No"
    },
    "SUBLICENSE_YES": {
        "parent": "Right to sublicense",
        "label": "Yes"
    },
    "SUBLICENSE_YES_APPROVAL": {
        "parent": "Right to sublicense",
        "label": "Yes, but remains subject to seller's approval"
    },
    "SUBLICENSE_NO": {
        "parent": "Right to sublicense",
        "label": "No"
    },
    "CUT_AVAILABLE_YES": {
        "parent": "Cut available",
        "label": "Yes"
    },
    "CUT_AVAILABLE_NO": {
        "parent": "Cut available",
        "label": "No"
    },
    "TRANSMISSION_MEANS_ALL": {
        "parent": "Transmission means",
        "label": "All",
        all: true
    },
    "TRANSMISSION_MEANS_CABLE": {
        "parent": "Transmission means",
        "label": "Cable & IPTV"
    },
    "TRANSMISSION_MEANS_SATELLITE": {
        "parent": "Transmission means",
        "label": "Satellite"
    },
    "TRANSMISSION_MEANS_DIGITAL": {
        "parent": "Transmission means",
        "label": "Digital Terrestrial"
    },
    "TRANSMISSION_MEANS_OTT": {
        "parent": "Transmission means",
        "label": "OTT"
    },
    "TRANSMISSION_MEANS_INTERNET": {
        "parent": "Transmission means",
        "label": "Internet"
    },
    "TRANSMISSION_MEANS_MOBILE": {
        "parent": "Transmission means",
        "label": "Mobile"
    },
    "EXPLOITATION_FORM_ALL": {
        "parent": "Transmission Form",
        "label": "All",
        all: true
    },
    "EXPLOITATION_FORM_FREE": {
        "parent": "Exploitation form",
        "label": "Free Only"
    },
    "EXPLOITATION_FORM_PAY": {
        "parent": "Exploitation form",
        "label": "Pay Only"
    },
    "EXPLOITATION_FORM_IN-SHIP": {
        "parent": "Exploitation form",
        "label": "In-Ship & In-Flight"
    },
    "EXPLOITATION_FORM_CLOSED": {
        "parent": "Exploitation form",
        "label": "Closed Circuit"
    },
    "RUNS_UNLIMITED": {
        "parent": "Number of runs",
        "label": "Unlimited"
    },
    "RUNS_LIMITED": {
        "parent": "Number of runs",
        "label": "Limited",
        numberField: true
    },
    "EXPLOITATION_WINDOW_UNLIMITED": {
        "parent": "Exploitation window",
        "label": "Unlimited"
    },
    "EXPLOITATION_WINDOW_LIMITED": {
        "parent": "Exploitation window",
        "label": "Limited"
    },

    "VIDEO_STANDARD_HD": {
        "parent": "Video standard",
        "label": "HD"
    },
    "VIDEO_STANDARD_SD": {
        "parent": "Video standard",
        "label": "SD"
    },
    "VIDEO_STANDARD_UHD": {
        "parent": "Video standard",
        "label": "UHD"
    },
    "VIDEO_STANDARD_VR": {
        "parent": "Video standard",
        "label": "VR"
    },
    "VIDEO_STANDARD_NOT_AVAILABLE": {
        "parent": "Video standard",
        "label": "Info not available yet"
    },
    "RESERVED_RIGHTS_NO": {
        "parent": "Reserved rights",
        "label": "No"
    },
    "RESERVED_RIGHTS_YES": {
        "parent": "Reserved rights",
        "label": "Yes"

    },
    "ASPECT_RATIO_16_9": {
        "parent": "Aspect ratio",
        "label": "16:9"
    },
    "ASPECT_RATIO_4_3": {
        "parent": "Aspect ratio",
        "label": "4:3"
    },
    "ASPECT_RATIO_CUSTOM": {
        "parent": "Aspect ratio",
        "label": "Other",
        textField: true
    },
    "ASPECT_RATIO_NOT_AVAILABLE": {
        "parent": "Aspect ratio",
        "label": "Info not available yet"
    },
    "GRAPHICS_NO": {
        "parent": "Graphics",
        "label": "No"
    },
    "GRAPHICS_YES": {
        "parent": "Graphics",
        "label": "Yes",
        language: true,
        languages: []
    },
    "GRAPHICS_NOT_AVAILABLE": {
        "parent": "Graphics",
        "label": "Info not available yet"
    },
    "COMMENTARY_NO": {
        "parent": "Commentary",
        "label": "No"
    },
    "COMMENTARY_YES": {
        "parent": "Commentary",
        "label": "Yes",
        language: true,
        languages: [],
        validate: true
    },
    "COMMENTARY_NOT_AVAILABLE": {
        "parent": "Commentary",
        "label": "Info not available yet"
    },
    "LICENSED_LANGUAGES_YES": {
        label: '',
        language: true,
        languages: []
    },
    "CAMERA_MINIMUM": {
        "parent": "Camera standards",
        "label": "Minimum cameras",
        numberField: true,
        numberFieldValue: "CAMERAS"
    },
    "CAMERA_TEXT": {
        "parent": "Camera standards",
        "label": "",
        textField: true
    },
    "CAMERA_NOT_AVAILABLE": {
        "parent": "Camera standards",
        "label": "Info not available yet"
    },
    "CONTENT_ALL": {
        "parent": "Content production",
        "label": "All content produced"
    },
    "CONTENT_TEXT": {
        "parent": "Content production",
        "label": "Content partially produced"
    },

    "TECHNICAL_DELIVERY_SATELLITE": {
        "parent": "Technical delivery",
        "label": "Satellite"
    },

    "TECHNICAL_DELIVERY_IP": {
        "parent": "Technical delivery",
        "label": "IP"
    },

    "TECHNICAL_DELIVERY_FTP": {
        "parent": "Technical delivery",
        "label": "FTP-server"
    },

    "TECHNICAL_DELIVERY_FIBER": {
        "parent": "Technical delivery",
        "label": "Fiber"
    },

    "CONTENT_DELIVERY_LIVE": {
        "parent": "Content Delivery",
        "label": "Delivered via live feed",
        hideIf: ["LT", "PR"]

    },

    "CONTENT_DELIVERY_DEDICATED": {
        "parent": "Content Delivery",
        "label": "Dedicated content delivery"
    },

    "CONTENT_DELIVERY_NON_DEDICATED": {
        "parent": "Content Delivery",
        "label": "No dedicated content delivery",
        disabledIf: ["LT", "PR"]
    }

};

/***/ }),

/***/ "./src/AppBundle/Resources/public/javascript/sell/components/Round.js":
/*!****************************************************************************!*\
  !*** ./src/AppBundle/Resources/public/javascript/sell/components/Round.js ***!
  \****************************************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_react__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__Match__ = __webpack_require__(/*! ./Match */ "./src/AppBundle/Resources/public/javascript/sell/components/Match.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_react_redux__ = __webpack_require__(/*! react-redux */ "./node_modules/react-redux/es/index.js");
var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }





var Round = function (_React$Component) {
    _inherits(Round, _React$Component);

    function Round(props) {
        _classCallCheck(this, Round);

        var _this = _possibleConstructorReturn(this, (Round.__proto__ || Object.getPrototypeOf(Round)).call(this, props));

        _this.toggle = function (e) {
            var _this$props = _this.props,
                seasons = _this$props.seasons,
                season = _this$props.season,
                round = _this$props.round,
                updateFromMultiple = _this$props.updateFromMultiple;

            var selected = e.target.checked;
            var schedules = seasons[season].schedules;
            var activeRound = schedules[round];
            activeRound.selected = selected;

            updateFromMultiple("seasons", season, "schedules", schedules);

            e.stopPropagation();
            _this.selectAll(selected);
        };

        _this.toggleMatches = function (e) {
            var _this$props2 = _this.props,
                seasons = _this$props2.seasons,
                season = _this$props2.season,
                round = _this$props2.round,
                updateFromMultiple = _this$props2.updateFromMultiple;


            var schedules = seasons[season].schedules;
            var activeRound = schedules[round];
            activeRound.showMatches = !activeRound.showMatches;
            updateFromMultiple("seasons", season, "schedules", schedules);

            e.stopPropagation();
        };

        _this.selectAll = function (selected) {
            var _this$props3 = _this.props,
                seasons = _this$props3.seasons,
                season = _this$props3.season,
                round = _this$props3.round,
                updateFromMultiple = _this$props3.updateFromMultiple;


            var schedules = seasons[season].schedules;
            var activeRound = schedules[round];
            activeRound.matches.forEach(function (match) {
                match.selected = selected;
            });
            updateFromMultiple("seasons", season, "schedules", schedules);
        };

        _this.onSelect = function (id) {
            var _this$props4 = _this.props,
                seasons = _this$props4.seasons,
                season = _this$props4.season,
                round = _this$props4.round,
                updateFromMultiple = _this$props4.updateFromMultiple;


            var schedules = seasons[season].schedules;
            var activeRound = schedules[round];
            activeRound.matches.get(id).selected = !activeRound.matches.get(id).selected;

            if (activeRound.matches.get(id).selected) activeRound.selected = true;

            updateFromMultiple("seasons", season, "schedules", schedules);
        };

        _this.getSelected = function () {
            var _this$props5 = _this.props,
                seasons = _this$props5.seasons,
                season = _this$props5.season,
                round = _this$props5.round;


            var schedule = seasons[season].schedules;
            var activeRound = schedule[round];
            return Array.from(activeRound.matches.values()).filter(function (m) {
                return m.selected;
            }).length;
        };

        _this.state = {};
        return _this;
    }

    _createClass(Round, [{
        key: 'render',
        value: function render() {
            var _this2 = this;

            var _props = this.props,
                seasons = _props.seasons,
                season = _props.season,
                round = _props.round;


            var schedule = seasons[season].schedules;
            var activeRound = schedule[round];

            return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                'div',
                { className: "matchday" },
                __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                    'div',
                    { className: 'ca-checkbox select-box-checkbox' },
                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('input', { type: 'checkbox',
                        checked: activeRound.selected,
                        onChange: this.toggle,
                        id: "round-" + round }),
                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('label', { htmlFor: "round-" + round }),
                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        'div',
                        { style: { width: '100%' } },
                        isNaN(round) && round,
                        !isNaN(round) && "Matchday " + round,
                        this.getSelected() === 0 && this.getSelected() !== activeRound.matches.size && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                            'span',
                            { onClick: this.toggleMatches },
                            'Select >'
                        ),
                        this.getSelected() !== 0 && this.getSelected() === activeRound.matches.size && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                            'span',
                            { onClick: this.toggleMatches },
                            'All >'
                        ),
                        this.getSelected() !== 0 && this.getSelected() !== activeRound.matches.size && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                            'span',
                            { onClick: this.toggleMatches },
                            this.getSelected(),
                            ' Selected >'
                        )
                    )
                ),
                activeRound.showMatches && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                    'div',
                    { className: "match-group" },
                    activeRound.matches.size > 0 && Array.from(activeRound.matches.values()).map(function (item, i) {
                        return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_1__Match__["a" /* default */], { match: item,
                            key: item.externalId,
                            onSelect: _this2.onSelect });
                    })
                )
            );
        }
    }]);

    return Round;
}(__WEBPACK_IMPORTED_MODULE_0_react___default.a.Component);

var mapStateToProps = function mapStateToProps(state) {
    return state.content;
};

var mapDispatchToProps = function mapDispatchToProps(dispatch) {
    return {
        updateFromMultiple: function updateFromMultiple(type, index, key, value) {
            return dispatch({
                type: 'UPDATE_FROM_MULTIPLE',
                selectorType: type,
                index: index,
                key: key,
                value: value
            });
        },
        updateContentValue: function updateContentValue(key, value) {
            return dispatch({
                type: 'UPDATE_CONTENT_VALUE',
                key: key,
                value: value
            });
        }
    };
};

/* harmony default export */ __webpack_exports__["a"] = (Object(__WEBPACK_IMPORTED_MODULE_2_react_redux__["connect"])(mapStateToProps, mapDispatchToProps)(Round));

/***/ }),

/***/ "./src/AppBundle/Resources/public/javascript/sell/components/SalesPackageEdit.js":
/*!***************************************************************************************!*\
  !*** ./src/AppBundle/Resources/public/javascript/sell/components/SalesPackageEdit.js ***!
  \***************************************************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_react__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_react_modal__ = __webpack_require__(/*! react-modal */ "./node_modules/react-modal/lib/index.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_react_modal___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_react_modal__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__main_styles_custom__ = __webpack_require__(/*! ../../main/styles/custom */ "./src/AppBundle/Resources/public/javascript/main/styles/custom.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__main_components_CountrySelector__ = __webpack_require__(/*! ../../main/components/CountrySelector */ "./src/AppBundle/Resources/public/javascript/main/components/CountrySelector.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_react_datepicker__ = __webpack_require__(/*! react-datepicker */ "./node_modules/react-datepicker/es/index.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5_prop_types__ = __webpack_require__(/*! prop-types */ "./node_modules/prop-types/index.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5_prop_types___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_5_prop_types__);
function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }








var labelStyle = { height: "30px", fontSize: "12px" };
var installmentIconStyle = { margin: "0 10px", position: "relative" };
var smallContainerStyle = {
    display: 'inline-block',
    overflowY: 'overlay',
    maxHeight: '200px'
};
var containerStyle = {
    display: 'inline-block'
};

var SalesPackageEdit = function (_React$Component) {
    _inherits(SalesPackageEdit, _React$Component);

    function SalesPackageEdit(props) {
        _classCallCheck(this, SalesPackageEdit);

        var _this = _possibleConstructorReturn(this, (SalesPackageEdit.__proto__ || Object.getPrototypeOf(SalesPackageEdit)).call(this, props));

        _initialiseProps.call(_this);

        var salesPackage = props.salesPackages[props.salesPackageId] || {};

        _this.asBundle = "SELL_AS_BUNDLE";
        _this.individually = "SELL_INDIVIDUALLY";
        _this.worldwide = "WORLDWIDE";
        _this.worldwideExcluding = "WORLDWIDE_EXCLUDING";
        _this.selectedTerritories = "SELECTED_TERRITORIES";
        _this.fixed = "FIXED";
        _this.bidding = "BIDDING";
        _this.limit = 3;

        _this.state = {
            isOpen: props.isOpen,
            bundleMethod: salesPackage.bundleMethod,
            territoriesMethod: salesPackage.territoriesMethod,
            salesMethod: salesPackage.salesMethod,
            territories: salesPackage.territoriesMethod === "WORLDWIDE_EXCLUDING" ? salesPackage.excludedTerritories : salesPackage.territories,
            filterTerritories: [],
            installments: salesPackage.installments || [],
            fee: salesPackage.fee,
            isNew: true
        };
        _this.bidIcon = assetsBaseDir + "app/images/auction.svg";
        _this.fixedIcon = assetsBaseDir + "app/images/bid.png";

        return _this;
    }

    return SalesPackageEdit;
}(__WEBPACK_IMPORTED_MODULE_0_react___default.a.Component);

var _initialiseProps = function _initialiseProps() {
    var _this2 = this;

    this.update = function (selected) {
        _this2.setState({ selected: selected });
    };

    this.setBundleMethod = function (bundleMethod) {
        _this2.setState({ bundleMethod: bundleMethod });
        _this2.fillTerritories(_this2.state.territoriesMethod, bundleMethod);
    };

    this.setTerritoriesMethod = function (territoriesMethod) {
        _this2.setState({ territoriesMethod: territoriesMethod });
        _this2.fillTerritories(territoriesMethod, _this2.state.bundleMethod);
    };

    this.fillTerritories = function (territoriesMethod, bundleMethod) {
        if (territoriesMethod === _this2.worldwide && bundleMethod === _this2.individually) {
            _this2.setState({ territories: Object.values(ContentArena.Data.Countries).map(function (i, k) {
                    return { value: i.name, label: i.name };
                }) });
        } else {
            _this2.setState({ territories: [] });
        }
    };

    this.getFilterTerritories = function () {
        var _props = _this2.props,
            exclusivity = _props.exclusivity,
            salesPackages = _props.salesPackages,
            salesPackageId = _props.salesPackageId;

        var filter = [];

        if (!exclusivity) return filter;

        salesPackages.forEach(function (salesPackage, id) {
            if (salesPackageId !== id) filter = [].concat(_toConsumableArray(filter), _toConsumableArray(salesPackage.territories.map(function (t) {
                return t.value;
            })));
        });

        return filter;
    };

    this.getExcludedTerritories = function () {
        var territories = _this2.state.territories;


        var filter = _this2.getFilterTerritories();

        var selected = territories.map(function (t) {
            return t.value;
        });
        filter = [].concat(_toConsumableArray(filter), _toConsumableArray(selected));

        return filter.filter(function (item, pos, self) {
            return self.indexOf(item) == pos;
        }).map(function (t) {
            return { value: t, label: t };
        });
    };

    this.preselectedExcluded = function () {
        var salesPackages = _this2.props.salesPackages;

        return salesPackages.filter(function (salesPackage) {
            return salesPackage.territoriesMethod === _this2.selectedTerritories;
        }).length === 0;
    };

    this.setSalesMethod = function (salesMethod) {
        _this2.setState({ salesMethod: salesMethod });
    };

    this.closeModal = function () {
        var onClose = _this2.props.onClose;

        if (onClose) onClose();
    };

    this.getName = function () {
        var exclusivity = _this2.props.exclusivity;
        var territoriesMethod = _this2.state.territoriesMethod;

        var excludedTerritories = exclusivity ? _this2.getExcludedTerritories() : _this2.state.territories;
        var territories = _this2.state.territories;

        var name = "";

        if (territoriesMethod === _this2.worldwide) {
            name = "Worldwide";
        } else if (territoriesMethod === _this2.selectedTerritories) {
            name = territories.slice(0, 3).map(function (territory, i) {
                return territory.label;
            }).join(", ");
        } else if (territoriesMethod === _this2.worldwideExcluding) {

            name = "Worldwide excluding " + excludedTerritories.slice(0, 3).map(function (territory, i) {
                return territory.label;
            }).join(", ");
        }

        return name;
    };

    this.applySelection = function () {
        var _state = _this2.state,
            fee = _state.fee,
            bundleMethod = _state.bundleMethod,
            territoriesMethod = _state.territoriesMethod,
            salesMethod = _state.salesMethod,
            installments = _state.installments;
        var _props2 = _this2.props,
            salesPackageId = _props2.salesPackageId,
            exclusivity = _props2.exclusivity;

        var excludedTerritories = exclusivity ? _this2.getExcludedTerritories() : _this2.state.territories;
        var territories = _this2.state.territories;
        var allTerritories = Object.values(ContentArena.Data.Countries).map(function (i, k) {
            return { value: i.name, label: i.name };
        });
        var territoriesByLabel = exclusivity ? _this2.getExcludedTerritories().map(function (t) {
            return t.label;
        }) : territories.map(function (t) {
            return t.label;
        });
        if (territoriesMethod === _this2.worldwideExcluding) territories = allTerritories.filter(function (t) {
            return territoriesByLabel.indexOf(t.label) === -1;
        });
        _this2.props.onUpdate({
            name: _this2.getName(),
            territories: territories,
            excludedTerritories: territoriesMethod === _this2.worldwideExcluding ? excludedTerritories : [],
            fee: fee,
            salesMethod: salesMethod,
            territoriesMethod: territoriesMethod,
            bundleMethod: bundleMethod,
            installments: installments
        }, salesPackageId);
        _this2.closeModal();
    };

    this.selectTerritories = function (territories) {
        _this2.setState({ territories: territories });
    };

    this.setInstallmentType = function (type, i) {
        var installments = _this2.state.installments;
        installments[i].type = type;
        _this2.setState({ installments: installments });
    };

    this.setInstallmentDate = function (date, i) {
        var installments = _this2.state.installments;
        installments[i].date = date;
        _this2.setState({ installments: installments });
    };

    this.setInstallmentDays = function (days, i) {
        var installments = _this2.state.installments;
        installments[i].days = days;
        _this2.setState({ installments: installments });
    };

    this.setInstallmentValue = function (value, i) {
        var installments = _this2.state.installments;
        installments[i].value = value;
        _this2.setState({ installments: installments });
    };

    this.addInstallment = function () {
        var installments = _this2.state.installments;
        installments.push({ value: 100, type: "DAY", days: 30 });
        _this2.setState({ installments: installments });
    };

    this.removeInstallment = function (i) {
        var installments = _this2.state.installments;
        installments.splice(i, 1);
        _this2.setState({ installments: installments });
    };

    this.updateFee = function (e) {
        var fee = e.target.value;
        _this2.setState({ fee: fee });
    };

    this.render = function () {
        var _props3 = _this2.props,
            salesPackages = _props3.salesPackages,
            salesPackageId = _props3.salesPackageId;

        var salesPackage = salesPackages[salesPackageId] || {};

        return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
            __WEBPACK_IMPORTED_MODULE_1_react_modal___default.a,
            {
                isOpen: _this2.state.isOpen,
                onRequestClose: _this2.closeModal,
                bodyOpenClassName: "selector",
                style: __WEBPACK_IMPORTED_MODULE_2__main_styles_custom__["c" /* customStyles */],
                contentLabel: 'Example Modal'
            },
            __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                'div',
                { className: 'modal-title' },
                _this2.context.t("Sales bundle"),
                __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('i', { className: 'fa fa-times-circle-o', onClick: _this2.closeModal })
            ),
            __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                'div',
                { className: 'step-content' },
                __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                    'div',
                    { className: 'step-content-container' },
                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        'div',
                        { className: 'base-full-input' },
                        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                            'label',
                            { style: labelStyle },
                            _this2.context.t("Territories"),
                            _this2.state.territoriesMethod === _this2.worldwideExcluding && ": Worldwide exluding"
                        )
                    ),
                    _this2.state.bundleMethod === _this2.asBundle && _this2.state.territoriesMethod === _this2.selectedTerritories && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_3__main_components_CountrySelector__["a" /* default */], {
                        className: "small-select",
                        value: _this2.state.territories,
                        onChange: _this2.selectTerritories,
                        filter: _this2.getFilterTerritories() }),
                    _this2.state.bundleMethod === _this2.asBundle && _this2.state.territoriesMethod === _this2.worldwideExcluding && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_3__main_components_CountrySelector__["a" /* default */], {
                        className: "small-select",
                        value: _this2.getExcludedTerritories(),
                        onChange: _this2.selectTerritories }),
                    _this2.state.bundleMethod === _this2.individually && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        'div',
                        { style: { padding: '10px 5px 20px' } },
                        salesPackage.name
                    ),
                    _this2.state.bundleMethod === _this2.asBundle && _this2.state.territoriesMethod === _this2.worldwide && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        'div',
                        { style: { padding: '10px 5px 20px' } },
                        _this2.context.t("Worldwide")
                    ),
                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        'div',
                        { className: 'base-full-input' },
                        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                            'label',
                            { style: labelStyle },
                            _this2.context.t("Sales method")
                        ),
                        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                            'div',
                            { className: "content" },
                            __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                'div',
                                { className: "item", onClick: function onClick() {
                                        _this2.setSalesMethod(_this2.fixed);
                                    } },
                                _this2.state.salesMethod !== _this2.fixed && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('i', { className: 'fa fa-circle-thin' }),
                                _this2.state.salesMethod === _this2.fixed && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('i', { className: 'fa fa-check-circle-o' }),
                                __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                    'div',
                                    { className: "title" },
                                    _this2.context.t("Fixed fee")
                                )
                            ),
                            __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                'div',
                                { className: "item", onClick: function onClick() {
                                        _this2.setSalesMethod(_this2.bidding);
                                    } },
                                _this2.state.salesMethod !== _this2.bidding && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('i', { className: 'fa fa-circle-thin' }),
                                _this2.state.salesMethod === _this2.bidding && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('i', { className: 'fa fa-check-circle-o' }),
                                __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                    'div',
                                    { className: "title" },
                                    _this2.context.t("Bidding")
                                )
                            ),
                            __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                'div',
                                { className: "item", style: { paddingLeft: 0, paddingRight: 0 } },
                                __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                    'span',
                                    null,
                                    _this2.state.salesMethod === _this2.fixed && "Fixed fee",
                                    _this2.state.salesMethod !== _this2.fixed && "Minimum bid (optional)"
                                ),
                                __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('input', {
                                    type: 'number',
                                    min: 0,
                                    onChange: _this2.updateFee,
                                    value: _this2.state.fee,
                                    style: { height: "26px", width: "80px" } }),
                                __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                    'span',
                                    { style: { width: 'auto', padding: '0 10px' } },
                                    _this2.getCurrencySymbol()
                                )
                            )
                        )
                    ),
                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        'div',
                        { className: 'base-full-input' },
                        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                            'label',
                            { style: labelStyle },
                            _this2.context.t("Payment details")
                        ),
                        _this2.state.installments.map(function (installment, i, list) {
                            return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                'div',
                                { className: "content" },
                                __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                    'div',
                                    { className: "item", style: { paddingLeft: 0 } },
                                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                        'div',
                                        { className: "title" },
                                        i + 1,
                                        ' Instalment ',
                                        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('input', { onChange: function onChange(e) {
                                                _this2.setInstallmentValue(e.target.value, i);
                                            }, style: { height: "26px", width: "50px" }, type: 'number', max: 100, value: installment.value }),
                                        ' % of payment'
                                    ),
                                    installment.type !== "DATE" && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('i', { style: installmentIconStyle, className: 'fa fa-circle-thin', onClick: function onClick() {
                                            _this2.setInstallmentType("DATE", i);
                                        } }),
                                    installment.type === "DATE" && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('i', { style: installmentIconStyle, className: 'fa fa-check-circle-o' }),
                                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                        'div',
                                        { className: "title" },
                                        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_4_react_datepicker__["default"], {
                                            disabled: installment.type !== "DATE",
                                            selected: installment.date,
                                            placeholderText: "dd/mm/yyyy",
                                            onChange: function onChange(date) {
                                                _this2.setInstallmentDate(date, i);
                                            },
                                            className: 'small-datepicker' })
                                    ),
                                    installment.type !== "DAY" && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('i', { style: installmentIconStyle, className: 'fa fa-circle-thin', onClick: function onClick() {
                                            _this2.setInstallmentType("DAY", i);
                                        } }),
                                    installment.type === "DAY" && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('i', { style: installmentIconStyle, className: 'fa fa-check-circle-o' }),
                                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                        'div',
                                        { className: "title" },
                                        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('input', {
                                            type: 'number',
                                            min: 0,
                                            onChange: function onChange(e) {
                                                _this2.setInstallmentDays(e.target.value, i);
                                            },
                                            disabled: installment.type !== "DAY",
                                            value: installment.days,
                                            style: { height: "26px", width: "40px" } }),
                                        _this2.context.t("days after contract conclusion")
                                    ),
                                    i !== 0 && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('i', { style: { margin: 0, position: "relative" }, className: 'fa fa-minus-circle', onClick: function onClick() {
                                            _this2.removeInstallment(i);
                                        } }),
                                    i === list.length - 1 && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('i', { style: { margin: 0, position: "relative" }, className: 'fa fa-plus-circle', onClick: _this2.addInstallment })
                                )
                            );
                        })
                    )
                )
            ),
            __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                'div',
                { className: 'error', style: {
                        width: '100%',
                        textAlign: 'center',
                        fontSize: '12px',
                        color: 'red'
                    } },
                _this2.installmentsIncomplete() && _this2.context.t("the total instalment percentage must accumulate to 100%")
            ),
            __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                'div',
                { className: "buttons" },
                __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                    'button',
                    {
                        className: 'standard-button',
                        disabled: _this2.state.salesMethod === _this2.fixed && Number(_this2.state.fee) === 0 || _this2.state.territoriesMethod !== _this2.worldwide && _this2.state.territories.length === 0 || _this2.installmentsIncomplete(),
                        onClick: _this2.applySelection },
                    'Ok'
                )
            )
        );
    };

    this.installmentsIncomplete = function () {
        var installments = _this2.state.installments;

        var total = 0;

        installments.forEach(function (i) {
            total += Number(i.value);
        });

        return total !== 100;
    };

    this.getFee = function (salesPackage) {
        return salesPackage.fee + " " + _this2.getCurrencySymbol();
    };

    this.getCurrencySymbol = function () {
        var currency = _this2.props.currency;

        return currency === "EUR" ? "€" : "$";
    };
};

SalesPackageEdit.contextTypes = {
    t: __WEBPACK_IMPORTED_MODULE_5_prop_types__["PropTypes"].func.isRequired
};

/* harmony default export */ __webpack_exports__["a"] = (SalesPackageEdit);

/***/ }),

/***/ "./src/AppBundle/Resources/public/javascript/sell/components/SalesPackageForm.js":
/*!***************************************************************************************!*\
  !*** ./src/AppBundle/Resources/public/javascript/sell/components/SalesPackageForm.js ***!
  \***************************************************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_react__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_react_modal__ = __webpack_require__(/*! react-modal */ "./node_modules/react-modal/lib/index.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_react_modal___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_react_modal__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__main_styles_custom__ = __webpack_require__(/*! ../../main/styles/custom */ "./src/AppBundle/Resources/public/javascript/main/styles/custom.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__main_components_CountrySelector__ = __webpack_require__(/*! ../../main/components/CountrySelector */ "./src/AppBundle/Resources/public/javascript/main/components/CountrySelector.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__components_CurrencySelector__ = __webpack_require__(/*! ../components/CurrencySelector */ "./src/AppBundle/Resources/public/javascript/sell/components/CurrencySelector.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5_react_datepicker__ = __webpack_require__(/*! react-datepicker */ "./node_modules/react-datepicker/es/index.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__main_components_Tooltip__ = __webpack_require__(/*! ../../main/components/Tooltip */ "./src/AppBundle/Resources/public/javascript/main/components/Tooltip.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__main_components_LicenseDownloader__ = __webpack_require__(/*! ../../main/components/LicenseDownloader */ "./src/AppBundle/Resources/public/javascript/main/components/LicenseDownloader.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8_prop_types__ = __webpack_require__(/*! prop-types */ "./node_modules/prop-types/index.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8_prop_types___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_8_prop_types__);
var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }











var labelStyle = { height: "30px", fontSize: "12px" };
var installmentIconStyle = { margin: "0 10px", position: "relative" };
var smallContainerStyle = {
    display: 'inline-block',
    overflowY: 'overlay',
    maxHeight: '200px',
    paddingRight: 20
};
var containerStyle = {
    display: 'inline-block',
    paddingTop: 5
};

var SalesPackageForm = function (_React$Component) {
    _inherits(SalesPackageForm, _React$Component);

    function SalesPackageForm(props) {
        _classCallCheck(this, SalesPackageForm);

        var _this = _possibleConstructorReturn(this, (SalesPackageForm.__proto__ || Object.getPrototypeOf(SalesPackageForm)).call(this, props));

        _this.editSalesPackage = function (salesPackage, index) {
            var onEdit = _this.props.onEdit;

            if (onEdit) onEdit(index);
        };

        _this.update = function (selected) {
            _this.setState({ selected: selected });
        };

        _this.setBundleMethod = function (bundleMethod) {
            _this.setState({ bundleMethod: bundleMethod });
        };

        _this.setTerritoriesMethod = function (territoriesMethod) {
            _this.setState({ territoriesMethod: territoriesMethod });
            _this.fillTerritories(territoriesMethod, _this.state.bundleMethod);
        };

        _this.fillTerritories = function (territoriesMethod, bundleMethod) {
            if (territoriesMethod === _this.worldwide && bundleMethod === _this.individually) {
                _this.setState({ territories: Object.values(ContentArena.Data.Countries).map(function (i, k) {
                        return { value: i.name, label: i.name };
                    }) });
            } else {
                _this.setState({ territories: [] });
            }
        };

        _this.getFilterTerritories = function () {
            var _this$props = _this.props,
                exclusivity = _this$props.exclusivity,
                salesPackages = _this$props.salesPackages;

            var filter = [];

            if (!exclusivity) return filter;

            salesPackages.forEach(function (salesPackage) {
                filter = [].concat(_toConsumableArray(filter), _toConsumableArray(salesPackage.territories.map(function (t) {
                    return t.value;
                })));
            });

            return filter;
        };

        _this.getExcludedTerritories = function () {
            var territories = _this.state.territories;


            var filter = _this.getFilterTerritories();

            var selected = territories.map(function (t) {
                return t.value;
            });
            filter = [].concat(_toConsumableArray(filter), _toConsumableArray(selected));

            return filter.filter(function (item, pos, self) {
                return self.indexOf(item) == pos;
            }).map(function (t) {
                return { value: t, label: t };
            });
        };

        _this.worldwideAvailable = function () {
            var _this$props2 = _this.props,
                salesPackages = _this$props2.salesPackages,
                exclusivity = _this$props2.exclusivity;


            if (!exclusivity) return true;

            return salesPackages.filter(function (salesPackage) {
                return salesPackage.territoriesMethod === _this.worldwideExcluding;
            }).length === 0;
        };

        _this.setSalesMethod = function (salesMethod) {
            _this.setState({ salesMethod: salesMethod });
        };

        _this.closeModal = function () {
            _this.setState({ isOpen: false });
        };

        _this.closeTerritoiesModal = function () {
            _this.setState({ showAllTerritories: false });
        };

        _this.applySelection = function () {
            _this.setState({ isOpen: false });

            var _this$state = _this.state,
                bundleMethod = _this$state.bundleMethod,
                territoriesMethod = _this$state.territoriesMethod,
                fee = _this$state.fee,
                salesMethod = _this$state.salesMethod,
                installments = _this$state.installments;
            var exclusivity = _this.props.exclusivity;


            var territoriesAsArray = Array.isArray(_this.state.territories) ? _this.state.territories : [_this.state.territories];
            var salesPackagesList = [],
                name = "";
            var excludedTerritories = exclusivity ? _this.getExcludedTerritories() : territoriesAsArray;
            var territories = territoriesAsArray;
            var allTerritories = Object.values(ContentArena.Data.Countries).map(function (i, k) {
                return { value: i.name, label: i.name };
            });
            var territoriesByLabel = exclusivity ? _this.getExcludedTerritories().map(function (t) {
                return t.label;
            }) : territories.map(function (t) {
                return t.label;
            });

            if (_this.state.isNew) {

                if (bundleMethod === _this.individually) {

                    if (territoriesMethod === _this.worldwideExcluding) {
                        salesPackagesList = allTerritories.filter(function (t) {
                            return territoriesByLabel.indexOf(t.label) === -1;
                        }).map(function (territory) {
                            return {
                                name: territory.label,
                                territories: [territory],
                                fee: fee,
                                salesMethod: salesMethod,
                                bundleMethod: bundleMethod,
                                territoriesMethod: territoriesMethod,
                                installments: installments
                            };
                        });
                    } else {
                        salesPackagesList = territories.map(function (territory) {
                            return {
                                name: territory.label,
                                territories: [territory],
                                fee: fee,
                                salesMethod: salesMethod,
                                bundleMethod: bundleMethod,
                                territoriesMethod: territoriesMethod,
                                installments: installments
                            };
                        });
                    }
                } else {

                    if (territoriesMethod === _this.worldwide) {
                        name = "Worldwide";
                    } else if (territoriesMethod === _this.selectedTerritories) {
                        name = territories.slice(0, 3).map(function (territory, i) {
                            return territory.label;
                        }).join(", ");
                    } else if (territoriesMethod === _this.worldwideExcluding) {
                        territories = allTerritories.filter(function (t) {
                            return territoriesByLabel.indexOf(t.label) === -1;
                        });
                        name = "Worldwide excluding " + excludedTerritories.slice(0, 3).map(function (territory, i) {
                            return territory.label;
                        }).join(", ");
                    }

                    salesPackagesList = [{
                        name: name,
                        territories: territories,
                        excludedTerritories: excludedTerritories,
                        fee: fee,
                        salesMethod: salesMethod,
                        bundleMethod: bundleMethod,
                        territoriesMethod: territoriesMethod,
                        installments: installments
                    }];
                }

                _this.props.onAdd(salesPackagesList);
            } else {
                _this.props.onUpdate(_this.state, _this.state.index);
            }

            _this.setState({
                fee: 0,
                territories: []
                // territoriesMethod: (this.worldwideAvailable()) ? this.worldwide : this.selectedTerritories
            });
        };

        _this.selectTerritories = function (territories) {
            _this.setState({ territories: territories });
        };

        _this.setInstallmentType = function (type, i) {
            var installments = _this.state.installments;
            installments[i].type = type;
            _this.setState({ installments: installments });
        };

        _this.setInstallmentDate = function (date, i) {
            var installments = _this.state.installments;
            installments[i].date = date;
            _this.setState({ installments: installments });
        };

        _this.setInstallmentDays = function (days, i) {
            var installments = _this.state.installments;
            installments[i].days = days;
            _this.setState({ installments: installments });
        };

        _this.setInstallmentValue = function (value, i) {
            var installments = _this.state.installments;
            installments[i].value = value;
            _this.setState({ installments: installments });
        };

        _this.addInstallment = function () {
            var installments = _this.state.installments;
            installments.push({ value: 100, type: "DAY", days: 30 });
            _this.setState({ installments: installments });
        };

        _this.removeInstallment = function (i) {
            var installments = _this.state.installments;
            installments.splice(i, 1);
            _this.setState({ installments: installments });
        };

        _this.updateFee = function (e) {
            var fee = e.target.value;
            _this.setState({ fee: fee });
        };

        _this.addBundlesAvailable = function () {
            var _this$props3 = _this.props,
                exclusivity = _this$props3.exclusivity,
                salesPackages = _this$props3.salesPackages;
            var countries = _this.state.countries;

            var territories = [],
                worldwide = false;

            if (exclusivity) {
                salesPackages.map(function (sp) {
                    if (sp.territoriesMethod === "WORLDWIDE" && sp.bundleMethod === _this.asBundle) worldwide = true;
                    territories = [].concat(_toConsumableArray(territories), _toConsumableArray(sp.territories));
                });
            }

            return !worldwide && territories.length !== Object.values(countries).length;
        };

        _this.handleTerritories = function (type) {
            _this.setState({ territoriesQuantity: type });
        };

        _this.renderModal = function () {
            var _this$props4 = _this.props,
                onClose = _this$props4.onClose,
                exclusivity = _this$props4.exclusivity,
                salesPackages = _this$props4.salesPackages;
            var _this$state2 = _this.state,
                territoriesQuantity = _this$state2.territoriesQuantity,
                territoriesMethod = _this$state2.territoriesMethod,
                territories = _this$state2.territories;


            var isFilterEnabled = territoriesMethod === _this.selectedTerritories;
            var isMultipleEnabled = territoriesQuantity === 'multiple';
            var isExcludedTerritoriesEnabled = territoriesMethod === _this.worldwideExcluding;
            var isWorldwideEnabled = territoriesMethod === _this.worldwide;

            return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                __WEBPACK_IMPORTED_MODULE_1_react_modal___default.a,
                {
                    isOpen: _this.state.isOpen,
                    onRequestClose: _this.closeModal,
                    bodyOpenClassName: "selector",
                    style: __WEBPACK_IMPORTED_MODULE_2__main_styles_custom__["c" /* customStyles */],
                    contentLabel: 'Example Modal'
                },
                __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                    'div',
                    { className: 'modal-title' },
                    'Sales bundle',
                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('i', { className: 'fa fa-times-circle-o close-icon', onClick: _this.closeModal })
                ),
                __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                    'div',
                    { className: 'step-content' },
                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        'div',
                        { className: 'step-content-container' },
                        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                            'div',
                            { className: 'base-full-input' },
                            __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                'label',
                                { style: labelStyle },
                                'How would you like to sell your content?'
                            ),
                            __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                'div',
                                { className: "content" },
                                __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                    'div',
                                    { className: "item", onClick: function onClick() {
                                            return _this.handleTerritories('single');
                                        } },
                                    territoriesQuantity === 'single' ? __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('i', { className: 'fa fa-check-circle-o' }) : __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('i', { className: 'fa fa-circle-thin' }),
                                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                        'div',
                                        { className: "title" },
                                        'Add single territory'
                                    )
                                ),
                                __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                    'div',
                                    { className: "item", onClick: function onClick() {
                                            return _this.handleTerritories('multiple');
                                        } },
                                    territoriesQuantity === 'multiple' ? __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('i', { className: 'fa fa-check-circle-o' }) : __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('i', { className: 'fa fa-circle-thin' }),
                                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                        'div',
                                        { className: "title" },
                                        'Add multiple territory'
                                    )
                                )
                            )
                        ),
                        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                            'div',
                            { className: 'base-full-input', style: { display: 'block' } },
                            __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                'label',
                                { style: labelStyle },
                                'Select territories'
                            ),
                            territoriesQuantity === 'multiple' && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                'div',
                                { className: "content" },
                                __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                    'div',
                                    { className: "item", onClick: function onClick() {
                                            _this.setTerritoriesMethod(_this.selectedTerritories);
                                        } },
                                    territoriesMethod !== _this.selectedTerritories && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('i', { className: 'fa fa-circle-thin' }),
                                    territoriesMethod === _this.selectedTerritories && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('i', { className: 'fa fa-check-circle-o' }),
                                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                        'div',
                                        { className: "title" },
                                        'Selected territories only'
                                    )
                                ),
                                (!exclusivity || exclusivity && salesPackages.length === 0) && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                    'div',
                                    { className: "item", onClick: function onClick() {
                                            _this.setTerritoriesMethod(_this.worldwide);
                                        } },
                                    territoriesMethod !== _this.worldwide && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('i', { className: 'fa fa-circle-thin' }),
                                    territoriesMethod === _this.worldwide && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('i', { className: 'fa fa-check-circle-o' }),
                                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                        'div',
                                        { className: "title" },
                                        'Worldwide'
                                    )
                                ),
                                _this.worldwideAvailable() && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                    'div',
                                    { className: "item", onClick: function onClick() {
                                            _this.setTerritoriesMethod(_this.worldwideExcluding);
                                        } },
                                    territoriesMethod !== _this.worldwideExcluding && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('i', { className: 'fa fa-circle-thin' }),
                                    territoriesMethod === _this.worldwideExcluding && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('i', { className: 'fa fa-check-circle-o' }),
                                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                        'div',
                                        { className: "title" },
                                        'Worldwide excluding'
                                    )
                                )
                            ),
                            __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                'div',
                                { style: { marginTop: '10px', padding: "0 15px" } },
                                __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_3__main_components_CountrySelector__["a" /* default */], {
                                    className: "small-select",
                                    onChange: _this.selectTerritories,
                                    value: isExcludedTerritoriesEnabled ? _this.getExcludedTerritories() : territories,
                                    filter: isFilterEnabled ? _this.getFilterTerritories() : [],
                                    multi: isMultipleEnabled,
                                    disabled: isWorldwideEnabled
                                }),
                                territoriesQuantity === 'multiple' && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                    'div',
                                    null,
                                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('input', { type: 'checkbox',
                                        className: 'ca-checkbox',
                                        style: { width: 'inherit', height: '20px' },
                                        defaultChecked: _this.state.bundleMethod === _this.asBundle,
                                        onChange: function onChange(e) {
                                            _this.setBundleMethod(e.target.checked ? _this.asBundle : _this.individually);
                                        }
                                    }),
                                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                        'span',
                                        { style: { verticalAlign: 'middle', marginLeft: '5px', fontSize: '14px' } },
                                        'Offer selected territories together as one territory package'
                                    ),
                                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_6__main_components_Tooltip__["a" /* default */], {
                                        id: 'offer_info',
                                        text: 'Test text'
                                    })
                                )
                            )
                        ),
                        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                            'div',
                            { className: 'base-full-input' },
                            __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                'label',
                                { style: labelStyle },
                                'Sales method'
                            ),
                            __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                'div',
                                { className: "content" },
                                __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                    'div',
                                    { className: "item", onClick: function onClick() {
                                            _this.setSalesMethod(_this.fixed);
                                        } },
                                    _this.state.salesMethod !== _this.fixed && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('i', { className: 'fa fa-circle-thin' }),
                                    _this.state.salesMethod === _this.fixed && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('i', { className: 'fa fa-check-circle-o' }),
                                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                        'div',
                                        { className: "title" },
                                        'Fixed fee'
                                    )
                                ),
                                __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                    'div',
                                    { className: "item", onClick: function onClick() {
                                            _this.setSalesMethod(_this.bidding);
                                        } },
                                    _this.state.salesMethod !== _this.bidding && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('i', { className: 'fa fa-circle-thin' }),
                                    _this.state.salesMethod === _this.bidding && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('i', { className: 'fa fa-check-circle-o' }),
                                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                        'div',
                                        { className: "title" },
                                        'Bidding'
                                    )
                                ),
                                __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                    'div',
                                    { className: "item", style: { paddingLeft: 0, paddingRight: 0 } },
                                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                        'span',
                                        null,
                                        _this.state.salesMethod === _this.fixed && "Fixed fee",
                                        _this.state.salesMethod !== _this.fixed && "Minimum bid (optional)"
                                    ),
                                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('input', {
                                        type: 'number',
                                        min: 0,
                                        onChange: _this.updateFee,
                                        value: _this.state.fee,
                                        style: { height: "26px", width: "80px" } }),
                                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                        'span',
                                        { style: { width: 'auto', padding: '0 10px' } },
                                        _this.getCurrencySymbol()
                                    )
                                )
                            )
                        ),
                        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                            'div',
                            { className: 'base-full-input' },
                            __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                'label',
                                { style: labelStyle },
                                'Payment details'
                            ),
                            _this.state.installments.map(function (installment, i, list) {
                                return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                    'div',
                                    { className: "content" },
                                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                        'div',
                                        { className: "item", style: { paddingLeft: 0 } },
                                        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                            'div',
                                            { className: "title" },
                                            i + 1,
                                            ' Instalment ',
                                            __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('input', { onChange: function onChange(e) {
                                                    _this.setInstallmentValue(e.target.value, i);
                                                }, style: { height: "26px", width: "50px" }, type: 'number', max: 100, value: installment.value }),
                                            ' % of payment'
                                        ),
                                        installment.type !== "DATE" && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('i', { style: installmentIconStyle, className: 'fa fa-circle-thin', onClick: function onClick() {
                                                _this.setInstallmentType("DATE", i);
                                            } }),
                                        installment.type === "DATE" && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('i', { style: installmentIconStyle, className: 'fa fa-check-circle-o' }),
                                        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                            'div',
                                            { className: "title" },
                                            __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_5_react_datepicker__["default"], {
                                                disabled: installment.type !== "DATE",
                                                selected: installment.date,
                                                placeholderText: "dd/mm/yyyy",
                                                onChange: function onChange(date) {
                                                    _this.setInstallmentDate(date, i);
                                                },
                                                className: 'small-datepicker' })
                                        ),
                                        installment.type !== "DAY" && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('i', { style: installmentIconStyle, className: 'fa fa-circle-thin', onClick: function onClick() {
                                                _this.setInstallmentType("DAY", i);
                                            } }),
                                        installment.type === "DAY" && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('i', { style: installmentIconStyle, className: 'fa fa-check-circle-o' }),
                                        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                            'div',
                                            { className: "title" },
                                            __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('input', {
                                                type: 'number',
                                                min: 0,
                                                onChange: function onChange(e) {
                                                    _this.setInstallmentDays(e.target.value, i);
                                                },
                                                disabled: installment.type !== "DAY",
                                                value: installment.days,
                                                style: { height: "26px", width: "40px" } }),
                                            ' days after contract conclusion'
                                        ),
                                        i !== 0 && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('i', { style: { margin: 0, position: "relative" }, className: 'fa fa-minus-circle', onClick: function onClick() {
                                                _this.removeInstallment(i);
                                            } }),
                                        i === list.length - 1 && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('i', { style: { margin: 0, position: "relative" }, className: 'fa fa-plus-circle', onClick: _this.addInstallment })
                                    )
                                );
                            })
                        )
                    )
                ),
                __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                    'div',
                    { className: 'error', style: {
                            width: '100%',
                            textAlign: 'center',
                            fontSize: '12px',
                            color: 'red'
                        } },
                    _this.installmentsIncomplete() && "the total instalment percentage must accumulate to 100%"
                ),
                __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                    'div',
                    { className: "buttons" },
                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        'button',
                        {
                            className: 'standard-button',
                            disabled: _this.state.salesMethod === _this.fixed && Number(_this.state.fee) === 0 || _this.territoriesIncomplete() || _this.installmentsIncomplete(),
                            onClick: _this.applySelection },
                        'Ok'
                    )
                )
            );
        };

        _this.territoriesIncomplete = function () {
            var _this$state3 = _this.state,
                territoriesMethod = _this$state3.territoriesMethod,
                territories = _this$state3.territories;


            if (territoriesMethod === _this.selectedTerritories && territories.length === 0) return true;

            if (territoriesMethod === _this.worldwideExcluding && territories.length === 0 && _this.getExcludedTerritories().length === 0) return true;
        };

        _this.showAllTerritories = function (extraTerritories) {
            _this.setState({
                showAllTerritories: true,
                territoriesList: extraTerritories
            });
        };

        _this.allTerritories = function () {

            return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                __WEBPACK_IMPORTED_MODULE_1_react_modal___default.a,
                {
                    isOpen: _this.state.showAllTerritories,
                    onRequestClose: _this.closeTerritoiesModal,
                    bodyOpenClassName: "selector",
                    style: __WEBPACK_IMPORTED_MODULE_2__main_styles_custom__["c" /* customStyles */]
                },
                __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                    'div',
                    { style: {
                            color: 'grey',
                            padding: 20,
                            display: 'flex',
                            flexWrap: 'wrap'
                        } },
                    _this.state.territoriesList.map(function (territory) {
                        return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                            'div',
                            { className: 'country-modal' },
                            territory.label
                        );
                    })
                )
            );
        };

        _this.showTerritories = function (salesPackage) {
            return salesPackage.bundleMethod === _this.individually && salesPackage.territoriesMethod === _this.worldwide || salesPackage.territoriesMethod !== _this.worldwide;
        };

        _this.installmentsIncomplete = function () {
            var installments = _this.state.installments;

            var total = 0;

            installments.forEach(function (i) {
                total += Number(i.value);
            });

            return total !== 100;
        };

        _this.getFee = function (salesPackage) {
            var feeNumber = parseFloat(salesPackage.fee);
            return feeNumber.toLocaleString() + " " + _this.getCurrencySymbol();
        };

        _this.getCurrencySymbol = function () {
            var currency = _this.props.currency;

            return currency === "EUR" ? "€" : "$";
        };

        _this.sortSalesPackages = function (a, b) {

            var aWorldwide = a.territoriesMethod === "WORLDWIDE";
            var bWorldwide = b.territoriesMethod === "WORLDWIDE";

            var worldwide = aWorldwide && !bWorldwide ? 1 : bWorldwide && !aWorldwide ? -1 : 0;

            return worldwide || _this.compareProperty(a.territories.length, b.territories.length) || _this.compareProperty(a.name, b.name);
        };

        _this.compareProperty = function (a, b) {
            return a > b ? 1 : b > a ? -1 : 0;
        };

        _this.asBundle = "SELL_AS_BUNDLE";
        _this.individually = "SELL_INDIVIDUALLY";
        _this.worldwide = "WORLDWIDE";
        _this.worldwideExcluding = "WORLDWIDE_EXCLUDING";
        _this.selectedTerritories = "SELECTED_TERRITORIES";
        _this.fixed = "FIXED";
        _this.bidding = "BIDDING";
        _this.limit = 3;
        _this.state = {
            isOpen: props.isOpen,
            bundleMethod: _this.asBundle,
            territoriesMethod: _this.selectedTerritories,
            salesMethod: _this.fixed,
            territories: [],
            excludedTerritories: [],
            filterTerritories: [],
            territoriesList: [],
            installments: [{ value: 100, type: "DAY", days: 30 }],
            fee: 0,
            isNew: true,
            territoriesQuantity: 'single',
            countries: ContentArena.Data.Countries
        };
        _this.bidIcon = assetsBaseDir + "app/images/hammer.png";
        _this.fixedIcon = assetsBaseDir + "app/images/bid.png";
        _this.draftIcon = assetsBaseDir + "app/images/draft.png";
        _this.cancelIcon = assetsBaseDir + "app/images/cancel.png";
        return _this;
    }

    _createClass(SalesPackageForm, [{
        key: 'componentDidMount',
        value: function componentDidMount() {
            var _this2 = this;

            if (this.state.countries.length === 0) {
                ContentArena.Api.getCountries().done(function (countries) {
                    ContentArena.Data.Countries = countries;
                    _this2.setState({ countries: countries });
                });
            }
        }
    }, {
        key: 'render',
        value: function render() {
            var _this3 = this;

            var _props = this.props,
                onRemove = _props.onRemove,
                hideButtons = _props.hideButtons,
                currency = _props.currency,
                fullSize = _props.fullSize,
                sort = _props.sort,
                listingId = _props.listingId,
                selectCurrency = _props.selectCurrency;

            var inputStyle = fullSize ? { maxWidth: 'none' } : null;
            var salesPackages = this.props.salesPackages;

            if (sort) salesPackages.sort(this.sortSalesPackages);
            return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                'div',
                { className: 'sales-package-form' },
                this.renderModal(),
                this.allTerritories(),
                __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                    'div',
                    { className: 'base-full-input', style: inputStyle },
                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        'label',
                        null,
                        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                            'div',
                            { className: 'label-text' },
                            this.context.t("Sales bundles")
                        ),
                        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_4__components_CurrencySelector__["a" /* default */], { onClick: selectCurrency, selected: currency }),
                        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('div', { className: 'clearfix' })
                    ),
                    !salesPackages.length && this.addBundlesAvailable() && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        'div',
                        { className: 'sales-bundles-placeholder' },
                        this.renderAddSalesBundleButton()
                    ),
                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        'div',
                        { className: 'content', style: hideButtons ? containerStyle : smallContainerStyle },
                        salesPackages.map(function (salesPackage, i) {

                            var extraTerritories = salesPackage.territoriesMethod === _this3.worldwideExcluding ? salesPackage.excludedTerritories : salesPackage.territories;

                            return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                'div',
                                { className: 'sales-package-container', key: i },
                                __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                    'div',
                                    { className: 'sales-package', key: "sales-package-" + i },
                                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                        'div',
                                        { style: { flex: 5, cursor: 'default' } },
                                        salesPackage.name,
                                        extraTerritories && extraTerritories.length > 3 && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                            'span',
                                            {
                                                style: {
                                                    color: '#2DA7E6',
                                                    textDecoration: 'underline',
                                                    marginLeft: 5
                                                },
                                                onClick: function onClick() {
                                                    _this3.showAllTerritories(extraTerritories);
                                                } },
                                            "+" + (extraTerritories.length - 3)
                                        )
                                    ),
                                    hideButtons && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_7__main_components_LicenseDownloader__["a" /* default */], {
                                        type: "BUNDLE",
                                        id: salesPackage.id,
                                        listingId: listingId,
                                        style: { flex: 1, display: 'flex', justifyContent: 'center' } }),
                                    salesPackage.territories.length !== 1 && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                        'div',
                                        { style: { marginLeft: 20, justifyContent: "flex-end", display: "flex" } },
                                        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('img', { style: { marginTop: '2px', width: 26, height: 23 }, src: _this3.fixedIcon })
                                    ),
                                    salesPackage.salesMethod === "BIDDING" && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                        'div',
                                        { style: { marginLeft: 20, justifyContent: "flex-end", display: "flex" } },
                                        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('img', { style: { width: 23, height: 23 }, src: _this3.bidIcon })
                                    ),
                                    (salesPackage.salesMethod !== "BIDDING" || salesPackage.salesMethod === "BIDDING" && salesPackage.fee > 0) && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                        'div',
                                        { style: { marginLeft: 20, justifyContent: "flex-end", display: "flex", cursor: 'default' } },
                                        _this3.getFee(salesPackage)
                                    )
                                ),
                                !hideButtons && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('img', { style: { width: 23, height: 23, cursor: 'pointer', margin: '15px 5px 0' },
                                    src: _this3.cancelIcon,
                                    onClick: function onClick() {
                                        onRemove(i);
                                    } }),
                                !hideButtons && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('img', { style: { width: 23, height: 23, cursor: 'pointer', margin: '15px 5px 0', color: 'grey' },
                                    src: _this3.draftIcon,
                                    onClick: function onClick() {
                                        _this3.editSalesPackage(salesPackage, i);
                                    } })
                            );
                        })
                    )
                ),
                !hideButtons && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                    'div',
                    { style: { display: "flex", justifyContent: "flex-end" } },
                    this.addBundlesAvailable() && this.renderAddSalesBundleButton(),
                    salesPackages.length > 0 && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        'div',
                        { className: "add-item", onClick: this.props.onRemoveAll },
                        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('i', { className: 'fa fa-minus-circle' }),
                        this.context.t("Remove all")
                    )
                )
            );
        }
    }, {
        key: 'renderAddSalesBundleButton',
        value: function renderAddSalesBundleButton() {
            var _this4 = this;

            return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                'div',
                { className: "add-item", onClick: function onClick() {
                        _this4.setState({ isOpen: true, isNew: true });
                    } },
                __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('i', { className: 'fa fa-plus-circle' }),
                this.context.t("Add sales bundle")
            );
        }
    }]);

    return SalesPackageForm;
}(__WEBPACK_IMPORTED_MODULE_0_react___default.a.Component);

SalesPackageForm.contextTypes = {
    t: __WEBPACK_IMPORTED_MODULE_8_prop_types__["PropTypes"].func.isRequired
};

/* harmony default export */ __webpack_exports__["a"] = (SalesPackageForm);

/***/ }),

/***/ "./src/AppBundle/Resources/public/javascript/sell/components/SellForm.js":
/*!*******************************************************************************!*\
  !*** ./src/AppBundle/Resources/public/javascript/sell/components/SellForm.js ***!
  \*******************************************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_react__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__containers_SellButtons__ = __webpack_require__(/*! ../containers/SellButtons */ "./src/AppBundle/Resources/public/javascript/sell/containers/SellButtons.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__containers_SellFormSteps__ = __webpack_require__(/*! ../containers/SellFormSteps */ "./src/AppBundle/Resources/public/javascript/sell/containers/SellFormSteps.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__containers_SellFormStep1__ = __webpack_require__(/*! ../containers/SellFormStep1 */ "./src/AppBundle/Resources/public/javascript/sell/containers/SellFormStep1.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__containers_SellFormStep2__ = __webpack_require__(/*! ../containers/SellFormStep2 */ "./src/AppBundle/Resources/public/javascript/sell/containers/SellFormStep2.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__containers_SellFormStep3__ = __webpack_require__(/*! ../containers/SellFormStep3 */ "./src/AppBundle/Resources/public/javascript/sell/containers/SellFormStep3.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__containers_SellFormStep4__ = __webpack_require__(/*! ../containers/SellFormStep4 */ "./src/AppBundle/Resources/public/javascript/sell/containers/SellFormStep4.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__containers_ReviewAndSign__ = __webpack_require__(/*! ../containers/ReviewAndSign */ "./src/AppBundle/Resources/public/javascript/sell/containers/ReviewAndSign.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__main_components_Selector__ = __webpack_require__(/*! ../../main/components/Selector */ "./src/AppBundle/Resources/public/javascript/main/components/Selector.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9_react_redux__ = __webpack_require__(/*! react-redux */ "./node_modules/react-redux/es/index.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_10__main_store__ = __webpack_require__(/*! ../../main/store */ "./src/AppBundle/Resources/public/javascript/main/store.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_11_react_tooltip__ = __webpack_require__(/*! react-tooltip */ "./node_modules/react-tooltip/dist/index.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_11_react_tooltip___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_11_react_tooltip__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_12__main_actions_userActions__ = __webpack_require__(/*! ../../main/actions/userActions */ "./src/AppBundle/Resources/public/javascript/main/actions/userActions.js");
var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
















var SellForm = function (_React$Component) {
    _inherits(SellForm, _React$Component);

    function SellForm(props) {
        _classCallCheck(this, SellForm);

        var _this = _possibleConstructorReturn(this, (SellForm.__proto__ || Object.getPrototypeOf(SellForm)).call(this, props));

        _this.componentDidMount = function () {
            _this.props.contentListingInit(_this.state.content);
            _this.props.updateProfile('SELLER');
        };

        var content = props.content.initialized ? props.content : JSON.parse(props.newListing);
        content.jurisdiction = {
            label: content.company.country.name,
            value: content.company.country.name
        };

        content = ContentArena.Utils.contentParserFromServer(content);

        if (props.match && props.match.params.step) {

            content.step = props.match.params.step === "sign" ? 5 : Number(props.match.params.step);
        }

        _this.state = {
            content: content,
            showSearch: props.match.params.customId != 1
        };

        __WEBPACK_IMPORTED_MODULE_10__main_store__["a" /* default */].subscribe(function (a) {
            //console.log(store.getState());
        });
        return _this;
    }

    _createClass(SellForm, [{
        key: "render",
        value: function render() {
            var history = this.props.history;

            return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                "div",
                { className: "manager-content" },
                __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_8__main_components_Selector__["a" /* default */], { style: { zIndex: 100 } }),
                __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_2__containers_SellFormSteps__["a" /* default */], { history: history }),
                __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_3__containers_SellFormStep1__["a" /* default */], { history: history, showSearch: this.state.showSearch }),
                __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_4__containers_SellFormStep2__["a" /* default */], { packages: this.props.packages }),
                __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_5__containers_SellFormStep3__["a" /* default */], { packages: this.props.packages }),
                __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_6__containers_SellFormStep4__["a" /* default */], { packages: this.props.packages }),
                __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_7__containers_ReviewAndSign__["a" /* default */], { history: history }),
                __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_1__containers_SellButtons__["a" /* default */], { history: history }),
                __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_11_react_tooltip___default.a, { html: true })
            );
        }
    }]);

    return SellForm;
}(__WEBPACK_IMPORTED_MODULE_0_react___default.a.Component);

var mapStateToProps = function mapStateToProps(state, ownProps) {
    return ownProps;
};

var mapDispatchToProps = function mapDispatchToProps(dispatch) {
    return {
        contentListingInit: function contentListingInit(content) {
            return dispatch({
                type: 'CONTENT_INIT',
                content: content
            });
        },
        updateProfile: function updateProfile(profile) {
            return dispatch(Object(__WEBPACK_IMPORTED_MODULE_12__main_actions_userActions__["a" /* updateProfile */])(profile));
        }
    };
};

/* harmony default export */ __webpack_exports__["a"] = (Object(__WEBPACK_IMPORTED_MODULE_9_react_redux__["connect"])(mapStateToProps, mapDispatchToProps)(SellForm));

/***/ }),

/***/ "./src/AppBundle/Resources/public/javascript/sell/components/SellFormItems.js":
/*!************************************************************************************!*\
  !*** ./src/AppBundle/Resources/public/javascript/sell/components/SellFormItems.js ***!
  \************************************************************************************/
/*! exports provided: Description, TitleBar, SummaryText, NewCategory, NewTournament, Schedules, StaticSchedules, SportSelector */
/*! exports used: Description, NewCategory, NewTournament, SportSelector, StaticSchedules, SummaryText, TitleBar */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return Description; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "g", function() { return TitleBar; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "f", function() { return SummaryText; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "b", function() { return NewCategory; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "c", function() { return NewTournament; });
/* unused harmony export Schedules */
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "e", function() { return StaticSchedules; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "d", function() { return SportSelector; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_react__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__components_Round__ = __webpack_require__(/*! ../components/Round */ "./src/AppBundle/Resources/public/javascript/sell/components/Round.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__components_StaticRound__ = __webpack_require__(/*! ../components/StaticRound */ "./src/AppBundle/Resources/public/javascript/sell/components/StaticRound.js");
var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }





var Description = function Description(_ref) {
    var value = _ref.value,
        onBlur = _ref.onBlur,
        _ref$title = _ref.title,
        title = _ref$title === undefined ? "Enter a description" : _ref$title,
        _ref$placeholder = _ref.placeholder,
        placeholder = _ref$placeholder === undefined ? "Provide a short description of your content listing" : _ref$placeholder;
    return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
        'div',
        { className: 'textarea-input' },
        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
            'label',
            null,
            title
        ),
        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('textarea', { onBlur: onBlur, defaultValue: value, placeholder: placeholder })
    );
};

var TitleBar = function TitleBar(_ref2) {
    var title = _ref2.title,
        subtitle = _ref2.subtitle;
    return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
        'div',
        { className: 'title-bar' },
        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('hr', null),
        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
            'div',
            { className: "title" },
            title
        ),
        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
            'div',
            { className: "subtitle" },
            subtitle
        )
    );
};

var SummaryText = function SummaryText(_ref3) {
    var sports = _ref3.sports,
        sportCategory = _ref3.sportCategory,
        tournament = _ref3.tournament,
        seasons = _ref3.seasons;


    var summary = "",
        rounds = [],
        fixtures = [],
        matches = [];

    if (sports.length === 0 && sportCategory.length === 0 && tournament.length === 0) return null;
    if (sports.length > 1) return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
        'span',
        null,
        'Multiple sports'
    );

    summary += sports[0].name;
    if (sportCategory.length > 0) summary += " - " + sportCategory[0].name;
    if (tournament.length > 0) summary += " - " + tournament[0].name;
    if (seasons.length > 0) {
        seasons.forEach(function (s) {
            if (s.schedules) Object.entries(s.schedules).forEach(function (sh) {
                if (sh[1].selected && rounds.indexOf(sh[0]) === -1) {
                    rounds.push(sh[0]);
                    sh[1].matches.forEach(function (m) {
                        if (m.selected) matches.push(m);
                    });
                }
            });
            if (s.fixtures) fixtures = [].concat(_toConsumableArray(fixtures), _toConsumableArray(s.fixtures));
        });
    }

    if (rounds.length <= 1 && fixtures.length === 1) summary += " - " + fixtures[0].name;
    if (rounds.length <= 1 && fixtures.length > 1) summary += " - " + fixtures.length + " fixtures";
    if (rounds.length <= 1 && matches.length === 1) summary += " - " + matches[0].competitors.map(function (competitor) {
        return competitor.name;
    }).join(" vs ");
    if (rounds.length === 1 && matches.length !== 1) summary += " - " + rounds[0];
    if (rounds.length > 1) summary += " - Multiple rounds";

    return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
        'span',
        null,
        summary
    );
};

var NewCategory = function NewCategory(_ref4) {
    var onClick = _ref4.onClick,
        showClose = _ref4.showClose,
        onBlur = _ref4.onBlur,
        value = _ref4.value;
    return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
        'div',
        { className: 'base-input' },
        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
            'label',
            null,
            'Country/Category'
        ),
        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('input', {
            className: 'new-category',
            type: 'text',
            placeholder: 'Enter Country/Category',
            onBlur: onBlur,
            defaultValue: value }),
        showClose && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
            'button',
            { onClick: onClick, className: "standard-button" },
            __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('i', { className: 'fa fa-close' })
        )
    );
};

var NewTournament = function NewTournament(_ref5) {
    var onClick = _ref5.onClick,
        showClose = _ref5.showClose,
        onBlur = _ref5.onBlur,
        value = _ref5.value;
    return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
        'div',
        { className: 'base-input' },
        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
            'label',
            null,
            'Competition'
        ),
        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('input', {
            className: 'new-category',
            type: 'text',
            onBlur: onBlur,
            defaultValue: value,
            placeholder: 'Enter competition name' }),
        showClose && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
            'button',
            { onClick: onClick, className: "standard-button" },
            __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('i', { className: 'fa fa-close' })
        )
    );
};

var Schedules = function Schedules(_ref6) {
    var season = _ref6.season,
        seasons = _ref6.seasons;
    return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
        'div',
        { className: 'schedule' },
        seasons && seasons[season] && seasons[season].schedules && Object.keys(seasons[season].schedules).map(function (number, i) {
            return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_1__components_Round__["a" /* default */], { seasons: seasons, key: i, round: number, season: season });
        })
    );
};

var StaticSchedules = function StaticSchedules(_ref7) {
    var season = _ref7.season,
        seasons = _ref7.seasons;
    return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
        'div',
        { className: 'schedule' },
        seasons && seasons[season] && seasons[season].schedules && Object.keys(seasons[season].schedules).map(function (number, i) {
            return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_2__components_StaticRound__["a" /* default */], { seasons: seasons, key: i, round: number, season: season });
        })
    );
};

var SportSelector = function (_React$Component) {
    _inherits(SportSelector, _React$Component);

    function SportSelector(props) {
        _classCallCheck(this, SportSelector);

        var _this = _possibleConstructorReturn(this, (SportSelector.__proto__ || Object.getPrototypeOf(SportSelector)).call(this, props));

        _this.handle = function (e) {
            var onUpdateNew = _this.props.onUpdateNew;


            if (onUpdateNew) onUpdateNew(e.target.value);
        };

        _this.state = {};
        return _this;
    }

    _createClass(SportSelector, [{
        key: 'render',
        value: function render() {
            var _props = this.props,
                sports = _props.sports,
                index = _props.index;

            return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                'div',
                null,
                __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                    'div',
                    { className: 'base-input' },
                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        'label',
                        null,
                        'Sport'
                    ),
                    !this.props.isCustom && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('input', { type: 'text',
                        value: this.props.value,
                        readOnly: true,
                        onClick: this.props.onClick,
                        placeholder: "e.g. Soccer" }),
                    this.props.isCustom && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('input', {
                        className: 'new-sport',
                        type: 'text',
                        value: sports[index].value,
                        onChange: this.handle,
                        placeholder: 'Enter sport' }),
                    (this.props.isCustom || this.props.showClose) && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        'button',
                        { className: 'standard-button', onClick: this.props.remove },
                        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('i', { className: 'fa fa-close' })
                    )
                ),
                this.props.showAddNew && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                    'button',
                    { style: { marginBottom: "25px" }, className: "link-button", onClick: this.props.addSportSelector },
                    'Add sport'
                )
            );
        }
    }]);

    return SportSelector;
}(__WEBPACK_IMPORTED_MODULE_0_react___default.a.Component);

/***/ }),

/***/ "./src/AppBundle/Resources/public/javascript/sell/components/StaticRound.js":
/*!**********************************************************************************!*\
  !*** ./src/AppBundle/Resources/public/javascript/sell/components/StaticRound.js ***!
  \**********************************************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_react__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__Match__ = __webpack_require__(/*! ./Match */ "./src/AppBundle/Resources/public/javascript/sell/components/Match.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_react_redux__ = __webpack_require__(/*! react-redux */ "./node_modules/react-redux/es/index.js");
var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }





var StaticRound = function (_React$Component) {
    _inherits(StaticRound, _React$Component);

    function StaticRound(props) {
        _classCallCheck(this, StaticRound);

        var _this = _possibleConstructorReturn(this, (StaticRound.__proto__ || Object.getPrototypeOf(StaticRound)).call(this, props));

        _this.toggle = function (e) {
            var _this$props = _this.props,
                seasons = _this$props.seasons,
                season = _this$props.season,
                round = _this$props.round,
                updateFromMultiple = _this$props.updateFromMultiple;

            var selected = e.target.checked;
            var schedules = seasons[season].schedules;
            var activeRound = schedules[round];
            activeRound.selected = selected;

            updateFromMultiple("seasons", season, "schedules", schedules);

            e.stopPropagation();
            _this.selectAll(selected);
        };

        _this.toggleMatches = function (e) {
            var _this$state = _this.state,
                seasons = _this$state.seasons,
                season = _this$state.season,
                round = _this$state.round;


            var schedules = seasons[season].schedules;
            var activeRound = schedules[round];
            activeRound.showMatches = !activeRound.showMatches;
            _this.setState({ seasons: seasons });
            e.stopPropagation();
        };

        _this.selectAll = function (selected) {
            var _this$props2 = _this.props,
                seasons = _this$props2.seasons,
                season = _this$props2.season,
                round = _this$props2.round,
                updateFromMultiple = _this$props2.updateFromMultiple;


            var schedules = seasons[season].schedules;
            var activeRound = schedules[round];
            activeRound.matches.forEach(function (match) {
                match.selected = selected;
            });
            updateFromMultiple("seasons", season, "schedules", schedules);
        };

        _this.getSelected = function () {
            var _this$props3 = _this.props,
                seasons = _this$props3.seasons,
                season = _this$props3.season,
                round = _this$props3.round;


            var schedule = seasons[season].schedules;
            var activeRound = schedule[round];
            return Array.from(activeRound.matches.values()).filter(function (m) {
                return m.selected;
            }).length;
        };

        _this.completeSeason = function () {
            var _this$props4 = _this.props,
                seasons = _this$props4.seasons,
                season = _this$props4.season,
                round = _this$props4.round;

            var schedule = seasons[season].schedules;
            return Object.values(schedule).filter(function (r) {
                return Array.from(r.matches.values()).filter(function (m) {
                    return m.selected;
                }).length > 0;
            }).length === 0;
        };

        _this.state = {
            seasons: props.seasons,
            season: props.season,
            round: props.round
        };
        return _this;
    }

    _createClass(StaticRound, [{
        key: 'render',
        value: function render() {
            var _state = this.state,
                seasons = _state.seasons,
                season = _state.season,
                round = _state.round;


            var schedule = seasons[season].schedules;
            var activeRound = schedule[round];
            var complete = this.completeSeason();
            var selected = this.getSelected();

            if (!complete && selected === 0) return null;

            return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                'div',
                { className: "matchday" },
                __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                    'div',
                    { className: 'ca-checkbox select-box-checkbox' },
                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        'div',
                        { style: { width: '100%' } },
                        isNaN(round) && round,
                        !isNaN(round) && "Matchday " + round,
                        (complete || selected === activeRound.matches.size) && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                            'span',
                            { onClick: this.toggleMatches },
                            'All >'
                        ),
                        !complete && selected !== activeRound.matches.size && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                            'span',
                            { onClick: this.toggleMatches },
                            selected,
                            ' Selected >'
                        )
                    )
                ),
                activeRound.showMatches && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                    'div',
                    { className: "match-group" },
                    activeRound.matches.size > 0 && Array.from(activeRound.matches.values()).map(function (item, i) {
                        return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                            'div',
                            { className: "match", key: "match-" + i },
                            (item.selected || complete) && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('i', { className: 'fa fa-circle' }),
                            !item.selected && !complete && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('i', { className: 'fa fa-circle-o' }),
                            item.competitors.map(function (competitor, ci, list) {
                                return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                    'span',
                                    { key: ci },
                                    competitor.name,
                                    ' ',
                                    list.length !== ci + 1 && " vs "
                                );
                            })
                        );
                    })
                )
            );
        }
    }]);

    return StaticRound;
}(__WEBPACK_IMPORTED_MODULE_0_react___default.a.Component);

/* harmony default export */ __webpack_exports__["a"] = (StaticRound);

/***/ }),

/***/ "./src/AppBundle/Resources/public/javascript/sell/components/SuperRightDefinitions.js":
/*!********************************************************************************************!*\
  !*** ./src/AppBundle/Resources/public/javascript/sell/components/SuperRightDefinitions.js ***!
  \********************************************************************************************/
/*! exports provided: SuperRightDefinitions, SuperRightProductionDetailsLabels, SuperRightBoardLabels */
/*! exports used: SuperRightBoardLabels, SuperRightDefinitions, SuperRightProductionDetailsLabels */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "b", function() { return SuperRightDefinitions; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "c", function() { return SuperRightProductionDetailsLabels; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return SuperRightBoardLabels; });
var SuperRightDefinitions = {
    "LT": ["means the right to a real-time (subject to latency) Transmission of a Live Feed of the Event other than in Betting Shops and on Betting Platforms."],
    "DT": ["means the right to a full-length delayed Transmission of a Live Feed of the Event commencing not before end of the Event or the Time Embargo defined."],
    "LB": ["means the right to real-time (subject to latency) Transmission of a Live Feed of the Event in Betting Shops and on Betting Platforms;"],
    "NA": ["means the right to a Transmission of Footage of the Event not exceeding", {
        key: "NA_INPUT"
    }, "seconds in news programs not before the end of the relevant Event or the Time Embargo defined"],
    "HL": ["means the right to a Transmission of Highlight footage of the Event not exceeding", {
        key: "HL_INPUT"
    }, "minutes not before the end of the relevant Event or the Time Embargo defined"],
    "PR": ["means the right to a Transmission of the specific Programs provided by Licensor to Licensee."]
};

var SuperRightProductionDetailsLabels = {
    "LT": "Live Transmission",
    "DT": "Delayed & Archive Footage",
    "LB": "Live Betting Transmission",
    "HL": "Highlights & Clips",
    "NA": "News Footage",
    "PR": "Edited Program"
};

var SuperRightBoardLabels = {
    "LT": "Live",
    "DT": "Delayed&Archive",
    "LB": "Betting",
    "HL": "Highlights&Clips",
    "NA": "News",
    "PR": "Program"
};

/***/ }),

/***/ "./src/AppBundle/Resources/public/javascript/sell/containers/PackageSelector.js":
/*!**************************************************************************************!*\
  !*** ./src/AppBundle/Resources/public/javascript/sell/containers/PackageSelector.js ***!
  \**************************************************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_react__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_react_redux__ = __webpack_require__(/*! react-redux */ "./node_modules/react-redux/es/index.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_react_toggle__ = __webpack_require__(/*! react-toggle */ "./node_modules/react-toggle/dist/component/index.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_react_toggle___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2_react_toggle__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__components_RightDefaults__ = __webpack_require__(/*! ../components/RightDefaults */ "./src/AppBundle/Resources/public/javascript/sell/components/RightDefaults.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__actions_contentActions__ = __webpack_require__(/*! ../actions/contentActions */ "./src/AppBundle/Resources/public/javascript/sell/actions/contentActions.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__components_SuperRightDefinitions__ = __webpack_require__(/*! ../components/SuperRightDefinitions */ "./src/AppBundle/Resources/public/javascript/sell/components/SuperRightDefinitions.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__components_RightDefaultsBySuperRight__ = __webpack_require__(/*! ../components/RightDefaultsBySuperRight */ "./src/AppBundle/Resources/public/javascript/sell/components/RightDefaultsBySuperRight.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7_prop_types__ = __webpack_require__(/*! prop-types */ "./node_modules/prop-types/index.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7_prop_types___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_7_prop_types__);
var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }










var SuperRight = function (_React$Component) {
    _inherits(SuperRight, _React$Component);

    function SuperRight(props) {
        _classCallCheck(this, SuperRight);

        var _this2 = _possibleConstructorReturn(this, (SuperRight.__proto__ || Object.getPrototypeOf(SuperRight)).call(this, props));

        _this2.state = {
            checked: props.checked
        };
        return _this2;
    }

    _createClass(SuperRight, [{
        key: 'componentWillReceiveProps',
        value: function componentWillReceiveProps(nextProps) {
            this.setState({ checked: nextProps.checked });
        }
    }, {
        key: 'render',
        value: function render() {
            var _this3 = this;

            var _props = this.props,
                onExclusive = _props.onExclusive,
                superRight = _props.superRight,
                exclusive = _props.exclusive,
                onChangeInput = _props.onChangeInput,
                inputValues = _props.inputValues;

            var defByLabel = __WEBPACK_IMPORTED_MODULE_5__components_SuperRightDefinitions__["b" /* SuperRightDefinitions */][superRight.shortLabel] || [];

            var inputData = defByLabel[1];

            return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                'div',
                { className: 'select-box-item' },
                __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                    'div',
                    { className: 'select-box-item-child' },
                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('input', { type: 'checkbox',
                        defaultChecked: this.props.checked,
                        checked: this.state.checked,
                        onChange: function onChange(e) {
                            _this3.setState({ checked: e.target.checked });
                            _this3.props.onChange(_this3.props.superRight, e.target.checked);
                        },
                        id: "super-right-" + this.props.superRight.id,

                        className: 'ca-checkbox package-selector' }),
                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('div', { className: 'checkbox-custom' }),
                    superRight.name
                ),
                __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                    'div',
                    { className: 'select-box-item-child' },
                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_2_react_toggle___default.a, {
                        icons: false,
                        checked: exclusive,
                        disabled: !this.state.checked,
                        onChange: function onChange(e) {
                            _this3.setState({ exclusive: e.target.checked });
                            onExclusive(superRight, e.target.checked);
                        }
                    })
                ),
                __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                    'div',
                    { className: 'select-box-item-child' },
                    defByLabel[0],
                    inputData && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('input', {
                        type: "number",
                        onChange: function onChange(e) {
                            onChangeInput(inputData.key, Number(e.target.value));
                        },
                        value: inputValues[inputData.key],
                        disabled: !this.state.checked,
                        style: {
                            margin: '0 5px',
                            padding: 4,
                            width: 40,
                            fontSize: 12
                        } }),
                    defByLabel[2] && defByLabel[2]
                )
            );
        }
    }]);

    return SuperRight;
}(__WEBPACK_IMPORTED_MODULE_0_react___default.a.Component);

var PackageSelector = function (_React$Component2) {
    _inherits(PackageSelector, _React$Component2);

    function PackageSelector(props) {
        _classCallCheck(this, PackageSelector);

        var _this4 = _possibleConstructorReturn(this, (PackageSelector.__proto__ || Object.getPrototypeOf(PackageSelector)).call(this, props));

        _this4.updateSuperRightsList = function (superRight, status) {
            if (status && !_this4.state.rightsPackage.has(superRight.id)) _this4.state.rightsPackage.set(superRight.id, superRight);
            if (!status && _this4.state.rightsPackage.has(superRight.id)) _this4.state.rightsPackage.delete(superRight.id);
            _this4.props.superRightsUpdated(_this4.state.rightsPackage);
        };

        _this4.onExclusive = function (superRight, status) {

            var rightPackage = _this4.state.rightsPackage.get(superRight.id);
            rightPackage.exclusive = status;
            _this4.state.rightsPackage.set(superRight.id, rightPackage);
            _this4.props.superRightsUpdated(_this4.state.rightsPackage);
        };

        _this4.state = {
            packages: JSON.parse(props.packages).map(function (p) {
                p.selectedRights = Object.assign({}, __WEBPACK_IMPORTED_MODULE_3__components_RightDefaults__["a" /* RightDefaults */]);
                if (__WEBPACK_IMPORTED_MODULE_6__components_RightDefaultsBySuperRight__["a" /* RightDefaultsBySuperRight */][p.shortLabel] !== undefined) {
                    p.selectedRights = Object.assign({}, p.selectedRights, __WEBPACK_IMPORTED_MODULE_6__components_RightDefaultsBySuperRight__["a" /* RightDefaultsBySuperRight */][p.shortLabel]);
                }

                return p;
            }),
            rightsPackage: new Map(props.rightsPackage.map(function (i) {
                if (!i.selectedRights) i.selectedRights = Object.assign({}, __WEBPACK_IMPORTED_MODULE_3__components_RightDefaults__["a" /* RightDefaults */]);
                return [i.id, i];
            })),
            defaultRights: false
        };
        return _this4;
    }

    _createClass(PackageSelector, [{
        key: 'componentWillReceiveProps',
        value: function componentWillReceiveProps(nextProps) {
            this.setState({ rightsPackage: new Map(nextProps.rightsPackage.map(function (i) {
                    return [i.id, i];
                })) });
        }
    }, {
        key: 'render',
        value: function render() {
            var _this = this;
            var _props2 = this.props,
                HL_INPUT = _props2.HL_INPUT,
                NA_INPUT = _props2.NA_INPUT;

            return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                'div',
                { className: 'package-selector table' },
                __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                    'div',
                    { className: 'package-selector-title' },
                    this.context.t("Rights selection & definition")
                ),
                __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                    'div',
                    { className: 'package-selector-container' },
                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        'div',
                        { style: { margin: 20 } },
                        this.context.t("Which rights, relating to the program defined above, do you wish to grant to the buyer?")
                    ),
                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        'div',
                        { className: 'package-exclusive' },
                        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('div', { className: 'package-exclusive-item' }),
                        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                            'div',
                            { className: 'package-exclusive-item' },
                            this.context.t("Exclusive")
                        ),
                        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('div', { className: 'package-exclusive-item' })
                    ),
                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        'div',
                        { className: 'package-selector-content' },
                        this.state.packages.map(function (superRight) {
                            return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(SuperRight, {
                                key: superRight.id,
                                onExclusive: _this.onExclusive,
                                superRight: superRight,
                                inputValues: {
                                    HL_INPUT: HL_INPUT,
                                    NA_INPUT: NA_INPUT
                                },
                                onChange: _this.updateSuperRightsList,
                                onChangeInput: _this.props.updateContentValue,
                                checked: _this.state.rightsPackage.has(superRight.id),
                                exclusive: _this.state.rightsPackage.has(superRight.id) ? _this.state.rightsPackage.get(superRight.id).exclusive : false
                            });
                        })
                    )
                )
            );
        }
    }]);

    return PackageSelector;
}(__WEBPACK_IMPORTED_MODULE_0_react___default.a.Component);

PackageSelector.contextTypes = {
    t: __WEBPACK_IMPORTED_MODULE_7_prop_types__["PropTypes"].func.isRequired
};

var mapStateToProps = function mapStateToProps(state) {
    return state.content;
};

var mapDispatchToProps = function mapDispatchToProps(dispatch) {
    return {
        superRightsUpdated: function superRightsUpdated(rightsPackage) {
            return dispatch({
                type: 'SUPER_RIGHTS_UPDATED',
                rightsPackage: rightsPackage
            });
        },
        resetSuperRigths: function resetSuperRigths() {
            return dispatch({
                type: 'SUPER_RIGHTS_UPDATED',
                reset: true
            });
        },
        updateContentValue: function updateContentValue(k, v) {
            return dispatch(Object(__WEBPACK_IMPORTED_MODULE_4__actions_contentActions__["e" /* updateContentValue */])(k, v));
        }
    };
};

/* harmony default export */ __webpack_exports__["a"] = (Object(__WEBPACK_IMPORTED_MODULE_1_react_redux__["connect"])(mapStateToProps, mapDispatchToProps)(PackageSelector));

/***/ }),

/***/ "./src/AppBundle/Resources/public/javascript/sell/containers/ReviewAndSign.js":
/*!************************************************************************************!*\
  !*** ./src/AppBundle/Resources/public/javascript/sell/containers/ReviewAndSign.js ***!
  \************************************************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_react__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_react_redux__ = __webpack_require__(/*! react-redux */ "./node_modules/react-redux/es/index.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__main_store__ = __webpack_require__(/*! ../../main/store */ "./src/AppBundle/Resources/public/javascript/main/store.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__components_SalesPackageForm__ = __webpack_require__(/*! ../components/SalesPackageForm */ "./src/AppBundle/Resources/public/javascript/sell/components/SalesPackageForm.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__components_SalesPackageEdit__ = __webpack_require__(/*! ../components/SalesPackageEdit */ "./src/AppBundle/Resources/public/javascript/sell/components/SalesPackageEdit.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__buy_containers_ListingDetails__ = __webpack_require__(/*! ./../../buy/containers/ListingDetails */ "./src/AppBundle/Resources/public/javascript/buy/containers/ListingDetails.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__main_components_ContentListing__ = __webpack_require__(/*! ../../main/components/ContentListing */ "./src/AppBundle/Resources/public/javascript/main/components/ContentListing.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__actions_contentActions__ = __webpack_require__(/*! ../actions/contentActions */ "./src/AppBundle/Resources/public/javascript/sell/actions/contentActions.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__main_components_DigitalSignature__ = __webpack_require__(/*! ../../main/components/DigitalSignature */ "./src/AppBundle/Resources/public/javascript/main/components/DigitalSignature.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9__main_actions_utils__ = __webpack_require__(/*! ../../main/actions/utils */ "./src/AppBundle/Resources/public/javascript/main/actions/utils.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_10__main_styles_custom__ = __webpack_require__(/*! ../../main/styles/custom */ "./src/AppBundle/Resources/public/javascript/main/styles/custom.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_11_react_modal__ = __webpack_require__(/*! react-modal */ "./node_modules/react-modal/lib/index.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_11_react_modal___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_11_react_modal__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_12_prop_types__ = __webpack_require__(/*! prop-types */ "./node_modules/prop-types/index.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_12_prop_types___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_12_prop_types__);
var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }















var ReviewAndSign = function (_React$Component) {
    _inherits(ReviewAndSign, _React$Component);

    function ReviewAndSign(props) {
        _classCallCheck(this, ReviewAndSign);

        var _this2 = _possibleConstructorReturn(this, (ReviewAndSign.__proto__ || Object.getPrototypeOf(ReviewAndSign)).call(this, props));

        _this2.showTerritories = function (salesPackage) {
            return salesPackage.bundleMethod === _this2.individually && salesPackage.territoriesMethod === _this2.worldwide || salesPackage.territoriesMethod !== _this2.worldwide;
        };

        _this2.scroll = function () {
            var _this2$props = _this2.props,
                stepChange = _this2$props.stepChange,
                stepChangeReset = _this2$props.stepChangeReset;


            if (stepChange) {
                window.scrollTo(0, 0);
                stepChangeReset();
            }
        };

        _this2.submit = function () {
            var updateContentValue = _this2.props.updateContentValue;

            var content = __WEBPACK_IMPORTED_MODULE_2__main_store__["a" /* default */].getState().content;
            var _this = _this2;
            content = Object(__WEBPACK_IMPORTED_MODULE_9__main_actions_utils__["h" /* parseSeasons */])(content);
            _this2.setState({ showSubmitting: true });
            ContentArena.ContentApi.saveContentAsActive(content).done(function (response) {

                if (response.success && response.contentId) {
                    updateContentValue("id", response.contentId);
                    _this.setState({ showSuccessScreen: true, showSubmitting: false });
                }
            });
        };

        _this2.closeSuccessScreen = function () {
            _this2.setState({ showSuccessScreen: false });
            Object(__WEBPACK_IMPORTED_MODULE_9__main_actions_utils__["e" /* goTo */])("managelistings");
        };

        _this2.successScreen = function () {
            return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                __WEBPACK_IMPORTED_MODULE_11_react_modal___default.a,
                {
                    isOpen: _this2.state.showSuccessScreen,
                    onRequestClose: _this2.closeSuccessScreen,
                    bodyOpenClassName: "selector",
                    style: __WEBPACK_IMPORTED_MODULE_10__main_styles_custom__["c" /* customStyles */]
                },
                __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                    'div',
                    { style: {
                            color: 'grey',
                            padding: 20,
                            display: 'flex',
                            flexDirection: 'column',
                            alignItems: 'center'
                        } },
                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        'div',
                        { style: {
                                fontSize: 30,
                                width: 600,
                                textAlign: 'center',
                                fontWeight: 600
                            } },
                        'Congratulations!'
                    ),
                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        'div',
                        { style: {
                                fontSize: 20,
                                width: 600,
                                margin: 40,
                                textAlign: 'center'
                            } },
                        'The listing was submitted successfully!'
                    ),
                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        'div',
                        null,
                        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                            'button',
                            { className: 'standard-button', onClick: _this2.closeSuccessScreen },
                            'Continue'
                        )
                    )
                )
            );
        };

        _this2.updateSalesPackage = function (salesPackage, index) {
            _this2.props.updateSalesPackages("save", salesPackage, index);
        };

        _this2.removeSalesPackage = function (index) {
            _this2.props.updateSalesPackages("remove", null, index);
        };

        _this2.editSalesPackage = function (index) {
            _this2.setState({
                salesPackageToEdit: index,
                editOpen: true
            });
        };

        _this2.toggleDetails = function () {
            _this2.setState({ showDetails: !_this2.state.showDetails });
        };

        _this2.asBundle = "SELL_AS_BUNDLE";
        _this2.individually = "SELL_INDIVIDUALLY";
        _this2.worldwide = "WORLDWIDE";
        _this2.worldwideExcluding = "WORLDWIDE_EXCLUDING";
        _this2.selectedTerritories = "SELECTED_TERRITORIES";
        _this2.fixed = "FIXED";
        _this2.bidding = "BIDDING";
        _this2.limit = 3;
        _this2.state = {};
        return _this2;
    }

    _createClass(ReviewAndSign, [{
        key: 'render',
        value: function render() {
            var _this3 = this;

            if (this.props.step !== 5) return null;
            this.scroll();
            var _props = this.props,
                salesPackages = _props.salesPackages,
                updateContentValue = _props.updateContentValue,
                signature = _props.signature,
                currency = _props.currency,
                company = _props.company,
                terms_arena = _props.terms_arena,
                terms = _props.terms,
                history = _props.history,
                customId = _props.customId,
                status = _props.status,
                listingEdited = _props.listingEdited;


            if (!listingEdited) {
                updateContentValue('terms_arena', true);
            }

            var _state = this.state,
                showDetails = _state.showDetails,
                showSubmitting = _state.showSubmitting;


            return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                'div',
                { className: 'step-content' },
                this.successScreen(),
                __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                    'div',
                    { className: 'buttons' },
                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        'div',
                        { className: "buttons-container", style: { justifyContent: 'flex-start' } },
                        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                            'button',
                            { className: 'light-blue-button', onClick: function onClick() {
                                    history.push("/contentlisting/" + customId + "/4");
                                } },
                            __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('i', { className: 'fa fa-chevron-left' }),
                            ' ',
                            this.context.t("Edit")
                        )
                    )
                ),
                !showDetails && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                    'div',
                    { className: 'step-title' },
                    this.context.t("Review & Sign")
                ),
                showDetails && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                    'div',
                    { className: 'step-title' },
                    this.context.t("Marketplace Preview")
                ),
                showDetails && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                    'div',
                    null,
                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_5__buy_containers_ListingDetails__["a" /* default */], {
                        onBack: this.toggleDetails,
                        company: company,
                        content: this.props })
                ),
                !showDetails && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                    'div',
                    { className: 'step-content-container' },
                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_6__main_components_ContentListing__["a" /* default */], _extends({}, this.props, { onSelectName: this.toggleDetails })),
                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_3__components_SalesPackageForm__["a" /* default */], {
                        hideButtons: true,
                        sort: true,
                        listingId: customId,
                        fullSize: true,
                        salesPackages: salesPackages,
                        currency: currency,
                        onEdit: this.editSalesPackage,
                        onUpdate: this.updateSalesPackage,
                        onRemove: this.removeSalesPackage }),
                    this.state.editOpen && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_4__components_SalesPackageEdit__["a" /* default */], {
                        isOpen: this.state.editOpen,
                        onClose: function onClose() {
                            _this3.setState({
                                editOpen: false
                            });
                        },
                        onUpdate: this.updateSalesPackage,
                        salesPackageId: this.state.salesPackageToEdit,
                        salesPackages: salesPackages
                    }),
                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        'div',
                        { className: 'buttons-container' },
                        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                            'button',
                            { id: 'draft-listing',
                                onClick: function onClick() {
                                    Object(__WEBPACK_IMPORTED_MODULE_9__main_actions_utils__["i" /* viewLicense */])(customId);
                                },
                                className: 'standard-button', style: { width: '250px' } },
                            this.context.t("View License Agreement")
                        )
                    ),
                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        'div',
                        { className: "terms-confirm",
                            style: {
                                padding: '40px 0px',
                                width: '50%',
                                margin: '0 auto'
                            } },
                        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                            'div',
                            { style: { display: 'flex', marginBottom: 10 } },
                            __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('input', {
                                type: 'checkbox',
                                className: 'ca-checkbox',
                                value: terms,
                                onChange: function onChange(e) {
                                    updateContentValue('terms', e.target.checked);
                                },
                                id: 'terms',
                                style: { marginRight: 10 }
                            }),
                            __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('label', { htmlFor: 'terms' }),
                            this.context.t("I confirm that I have verified the terms stated above. They are correct and ready to be published.")
                        ),
                        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                            'div',
                            { style: { display: 'flex', marginBottom: 10 } },
                            __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('input', {
                                type: 'checkbox',
                                className: 'ca-checkbox',
                                defaultChecked: terms_arena,
                                value: terms_arena,
                                onChange: function onChange(e) {
                                    updateContentValue('terms_arena', e.target.checked);
                                },
                                id: 'terms_arena',
                                style: { marginRight: 10 }
                            }),
                            __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('label', { htmlFor: 'terms_arena' }),
                            this.context.t("I confirm that I have verified the terms and conditions that have been outlined by Content Arena Pte. Ltd.")
                        )
                    ),
                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_8__main_components_DigitalSignature__["a" /* default */], {
                        onReady: function onReady(signature) {
                            updateContentValue("signature", signature);
                        },
                        signature: signature
                    }),
                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        'div',
                        { className: 'buttons', style: { marginTop: 20 } },
                        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                            'div',
                            { className: 'buttons-container' },
                            !showSubmitting && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                'button',
                                { disabled: !(terms && terms_arena && signature), id: 'draft-listing', className: 'standard-button-big steps', onClick: this.submit },
                                (!status || status.name === "DRAFT" || status.name === "INACTIVE") && this.context.t("Submit Listing"),
                                status && (status.name === "APPROVED" || status.name === "PENDING" || status.name === "EDITED") && this.context.t("Save")
                            ),
                            showSubmitting && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('i', { className: 'fa fa-cog fa-spin' })
                        )
                    )
                )
            );
        }
    }]);

    return ReviewAndSign;
}(__WEBPACK_IMPORTED_MODULE_0_react___default.a.Component);

ReviewAndSign.contextTypes = {
    t: __WEBPACK_IMPORTED_MODULE_12_prop_types__["PropTypes"].func.isRequired
};

var mapStateToProps = function mapStateToProps(state) {
    return state.content;
};

var mapDispatchToProps = function mapDispatchToProps(dispatch) {
    return {
        updateContentValue: function updateContentValue(key, value) {
            return dispatch({
                type: 'UPDATE_CONTENT_VALUE',
                key: key,
                value: value
            });
        },
        updateSalesPackages: function updateSalesPackages(name, salesPackage, index) {
            return dispatch({
                type: 'UPDATE_SALES_PACKAGES',
                index: index,
                salesPackage: salesPackage,
                name: name
            });
        },
        stepChangeReset: function stepChangeReset() {
            return dispatch(Object(__WEBPACK_IMPORTED_MODULE_7__actions_contentActions__["d" /* stepChangeReset */])());
        }
    };
};

/* harmony default export */ __webpack_exports__["a"] = (Object(__WEBPACK_IMPORTED_MODULE_1_react_redux__["connect"])(mapStateToProps, mapDispatchToProps)(ReviewAndSign));

/***/ }),

/***/ "./src/AppBundle/Resources/public/javascript/sell/containers/SellButtons.js":
/*!**********************************************************************************!*\
  !*** ./src/AppBundle/Resources/public/javascript/sell/containers/SellButtons.js ***!
  \**********************************************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_react__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_react_redux__ = __webpack_require__(/*! react-redux */ "./node_modules/react-redux/es/index.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__main_store__ = __webpack_require__(/*! ../../main/store */ "./src/AppBundle/Resources/public/javascript/main/store.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__actions_contentActions__ = __webpack_require__(/*! ../actions/contentActions */ "./src/AppBundle/Resources/public/javascript/sell/actions/contentActions.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__actions_validationActions__ = __webpack_require__(/*! ../actions/validationActions */ "./src/AppBundle/Resources/public/javascript/sell/actions/validationActions.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5_react_tooltip__ = __webpack_require__(/*! react-tooltip */ "./node_modules/react-tooltip/dist/index.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5_react_tooltip___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_5_react_tooltip__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__main_actions_utils__ = __webpack_require__(/*! ../../main/actions/utils */ "./src/AppBundle/Resources/public/javascript/main/actions/utils.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7_prop_types__ = __webpack_require__(/*! prop-types */ "./node_modules/prop-types/index.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7_prop_types___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_7_prop_types__);
var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }









var MIN_PROGRAM_DESC_LENGTH = 30;

var SellButtons = function (_React$Component) {
    _inherits(SellButtons, _React$Component);

    function SellButtons(props) {
        _classCallCheck(this, SellButtons);

        var _this = _possibleConstructorReturn(this, (SellButtons.__proto__ || Object.getPrototypeOf(SellButtons)).call(this, props));

        _this.saveAndGoNext = function () {
            var history = _this.props.history;

            _this.setState({ saving: true });

            var content = __WEBPACK_IMPORTED_MODULE_2__main_store__["a" /* default */].getState().content;
            content = Object(__WEBPACK_IMPORTED_MODULE_6__main_actions_utils__["h" /* parseSeasons */])(content);
            ContentArena.ContentApi.saveContentAsDraft(content).done(function (response) {

                var nextStep = Number(content.step) + 1;

                if (response.success && response.contentId) {
                    _this.props.updateContentValue("id", response.contentId);
                    _this.props.updateContentValue("customId", response.customId);
                }

                _this.setState({ saving: false, savingSuccess: true });

                history.push("/contentlisting/" + response.customId + "/" + nextStep);
            }).fail(function () {
                _this.setState({ saving: false, savingSuccess: false });
                history.push("/contentlisting/" + response.customId + "/" + nextStep);
            });
        };

        _this.reviewAndSignEnabled = function () {
            var _this$props = _this.props,
                expiresAt = _this$props.expiresAt,
                vat = _this$props.vat,
                vatPercentage = _this$props.vatPercentage,
                salesPackages = _this$props.salesPackages,
                company = _this$props.company,
                name = _this$props.name;


            return expiresAt && (vat === "no" || vatPercentage && vatPercentage != 0 && vatPercentage !== "") && salesPackages.length > 0 && name && name !== "" && Object(__WEBPACK_IMPORTED_MODULE_4__actions_validationActions__["a" /* companyIsValid */])(company);
        };

        _this.reviewAndSignGetMessages = function () {
            var _this$props2 = _this.props,
                expiresAt = _this$props2.expiresAt,
                vat = _this$props2.vat,
                vatPercentage = _this$props2.vatPercentage,
                salesPackages = _this$props2.salesPackages,
                company = _this$props2.company,
                name = _this$props2.name;

            var message = "Please complete missing information\n";

            if (salesPackages.length === 0) message += "<br/>- Select at least one sales bundle.\n";
            if (!expiresAt) message += "<br/>- Select listing expiry.";
            if (!Object(__WEBPACK_IMPORTED_MODULE_4__actions_validationActions__["a" /* companyIsValid */])(company)) message += "<br/>- Enter company information.";
            if (!name || name === "") message += "<br/>- Enter a name for the listing.";

            if (vat === "yes" && (!vatPercentage || vatPercentage === 0 || vatPercentage === "")) message += "<br/>- Enter VAT percentage.";

            return message;
        };

        _this.programIsValid = function () {
            var _this$props3 = _this.props,
                rightsPackage = _this$props3.rightsPackage,
                PROGRAM_NAME = _this$props3.PROGRAM_NAME,
                PROGRAM_EPISODES = _this$props3.PROGRAM_EPISODES,
                PROGRAM_DURATION = _this$props3.PROGRAM_DURATION,
                PROGRAM_TYPE = _this$props3.PROGRAM_TYPE;


            var program = Object(__WEBPACK_IMPORTED_MODULE_6__main_actions_utils__["a" /* editedProgramSelected */])(rightsPackage);

            if (!program) return true;

            return PROGRAM_NAME && PROGRAM_NAME !== "" && PROGRAM_EPISODES && PROGRAM_EPISODES !== "" && PROGRAM_DURATION && PROGRAM_DURATION !== "" && PROGRAM_TYPE !== "SELECT";
        };

        _this.step2Enabled = function () {
            var _this$props4 = _this.props,
                rightsPackage = _this$props4.rightsPackage,
                programDescription = _this$props4.programDescription;


            var program = _this.programIsValid();

            return rightsPackage.length > 0 && program && programDescription && programDescription.length >= MIN_PROGRAM_DESC_LENGTH;
        };

        _this.step3Enabled = function () {
            var endDateMode = _this.props.endDateMode;

            return endDateMode !== undefined;
        };

        _this.step3GetMessages = function () {
            var endDateMode = _this.props.endDateMode;

            var message = "Please complete missing information\n";
            if (endDateMode === undefined) message += "<br/>- Select when the license period ends.";

            return message;
        };

        _this.step1Enabled = function () {
            var sports = _this.props.sports;

            return sports.length > 0;
        };

        _this.step1GetMessages = function () {
            var _this$props5 = _this.props,
                sports = _this$props5.sports,
                name = _this$props5.name;

            var message = "Please complete missing information\n";

            if (sports.length === 0) message += "<br/>- Select a sport.\n";
            //if ( name === undefined || name === "" ) message += "<br/>- Enter a name for the listing.";

            return message;
        };

        _this.step2GetMessages = function () {
            var _this$props6 = _this.props,
                programDescription = _this$props6.programDescription,
                rightsPackage = _this$props6.rightsPackage;

            var message = "Please complete missing information\n";
            var program = _this.programIsValid();;
            if (rightsPackage.length === 0) message += "<br/>- Select at least one right.\n";
            if (!programDescription || programDescription.length < MIN_PROGRAM_DESC_LENGTH) message += "<br/>- Program description must be at least " + MIN_PROGRAM_DESC_LENGTH + " characters length";
            if (!program) message += "<br/>-  Enter program information.";

            return message;
        };

        _this.getTooltipMessages = function () {
            var step = _this.props.step;


            if (step === 1 && !_this.step1Enabled()) return _this.step1GetMessages();
            if (step === 2 && !_this.step2Enabled()) return _this.step2GetMessages();
            if (step === 3 && !_this.step3Enabled()) return _this.step3GetMessages();
            if (step === 4 && !_this.reviewAndSignEnabled()) return _this.reviewAndSignGetMessages();
        };

        _this.getReviewButtonTooltipMessages = function () {
            var step = _this.props.step;


            if (step === 4 && !_this.reviewAndSignEnabled()) return _this.reviewAndSignGetMessages();
        };

        _this.onClickStep = function (stepSelected) {
            var step = _this.props.step;

            if (_this.state.visited.indexOf(stepSelected) !== -1 && step !== stepSelected) {
                _this.goToStep(stepSelected);
            }
        };

        _this.goToReviewAndSign = function () {
            var history = _this.props.history;

            var savePromise = null;
            var content = __WEBPACK_IMPORTED_MODULE_2__main_store__["a" /* default */].getState().content;
            content = Object(__WEBPACK_IMPORTED_MODULE_6__main_actions_utils__["h" /* parseSeasons */])(content);
            _this.setState({ saving: true });

            if (!content.status) {
                // No status set, we are in new mode
                savePromise = ContentArena.ContentApi.saveContentAsInactive(_extends({}, content, { status: 'AUTO_INACTIVE' }));
            } else {
                savePromise = ContentArena.ContentApi.saveContentAsDraft(content);
            }

            savePromise.done(function (response) {
                if (response.success && response.contentId) {
                    _this.props.updateContentValue("id", response.contentId);
                    _this.setState({ saving: false, savingSuccess: true });
                    history.push("/contentlisting/" + response.customId + "/sign");
                }
            });
        };

        _this.goToPreviousStep = function () {
            var history = _this.props.history;

            var content = __WEBPACK_IMPORTED_MODULE_2__main_store__["a" /* default */].getState().content;
            var prevStep = Number(content.step) - 1;

            history.push("/contentlisting/" + content.customId + "/" + prevStep);
        };

        _this.goToNextStep = function () {};

        _this.goToStep = function (step) {
            var history = _this.props.history;

            var content = __WEBPACK_IMPORTED_MODULE_2__main_store__["a" /* default */].getState().content;
            history.push("/contentlisting/" + content.customId + "/" + step);
        };

        _this.state = {
            date: new Date(),
            lastStep: props.lastStep || 5,
            saving: false,
            savingSuccess: false,
            visited: [1]
        };
        return _this;
    }

    _createClass(SellButtons, [{
        key: 'componentWillReceiveProps',
        value: function componentWillReceiveProps(props) {

            if (this.state.visited.indexOf(props.step) === -1) {
                this.setState({
                    visited: [].concat(_toConsumableArray(this.state.visited), [props.step])
                });
            }
            __WEBPACK_IMPORTED_MODULE_5_react_tooltip___default.a.rebuild();
        }

        /**
         * if currency selected, listing image inserted, expiry date selected, sales bundles added,
         * company address complete, place of jurisdiction selected and if vat = yes, percentage is inserted
         * @returns {boolean}
         */

    }, {
        key: 'render',
        value: function render() {
            var _this2 = this;

            var step = this.props.step;
            var _state = this.state,
                lastStep = _state.lastStep,
                saving = _state.saving;

            var cantReviewAndSign = step === 4 && !this.reviewAndSignEnabled();

            return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                'div',
                { className: 'buttons' },
                this.props.step < lastStep && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                    'div',
                    { className: 'buttons-container step-1 step-2' },
                    this.props.step !== 1 && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        'button',
                        { className: 'standard-button prev',
                            onClick: this.goToPreviousStep },
                        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('i', { className: 'fa fa-arrow-left' }),
                        ' ',
                        this.context.t("Back")
                    ),
                    [1, 2, 3, 4].map(function (v, k) {
                        return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                            'div',
                            { className: "step " + (_this2.props.step === v ? "step-active" : ""),
                                onClick: function onClick() {
                                    _this2.onClickStep(v);
                                },
                                key: k },
                            v
                        );
                    }),
                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        'div',
                        { 'data-tip': cantReviewAndSign ? this.getReviewButtonTooltipMessages() : this.getTooltipMessages() },
                        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                            'button',
                            {
                                id: 'next-step',
                                className: 'standard-button',
                                disabled: step === 1 && !this.step1Enabled() || step === 2 && !this.step2Enabled() || step === 3 && !this.step3Enabled() || cantReviewAndSign,
                                onClick: function onClick() {
                                    return step === 4 ? _this2.goToReviewAndSign() : _this2.saveAndGoNext();
                                } },
                            this.context.t("Next"),
                            saving ? __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('i', { className: 'fa fa-cog fa-spin' }) : __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('i', { className: 'fa fa-arrow-right' })
                        )
                    )
                )
            );
        }
    }]);

    return SellButtons;
}(__WEBPACK_IMPORTED_MODULE_0_react___default.a.Component);

SellButtons.contextTypes = {
    t: __WEBPACK_IMPORTED_MODULE_7_prop_types__["PropTypes"].func.isRequired
};

var mapStateToProps = function mapStateToProps(state) {
    return state.content;
};

var mapDispatchToProps = function mapDispatchToProps(dispatch) {
    return {
        goToPreviousStep: function goToPreviousStep() {
            return dispatch(Object(__WEBPACK_IMPORTED_MODULE_3__actions_contentActions__["b" /* goToPreviousStep */])());
        },
        goToNextStep: function goToNextStep() {
            return dispatch(Object(__WEBPACK_IMPORTED_MODULE_3__actions_contentActions__["a" /* goToNextStep */])());
        },
        goToStep: function goToStep(step) {
            return dispatch(Object(__WEBPACK_IMPORTED_MODULE_3__actions_contentActions__["c" /* goToStep */])(step));
        },
        updateContentValue: function updateContentValue(key, value) {
            return dispatch(Object(__WEBPACK_IMPORTED_MODULE_3__actions_contentActions__["e" /* updateContentValue */])(key, value));
        }
    };
};

/* harmony default export */ __webpack_exports__["a"] = (Object(__WEBPACK_IMPORTED_MODULE_1_react_redux__["connect"])(mapStateToProps, mapDispatchToProps)(SellButtons));

/***/ }),

/***/ "./src/AppBundle/Resources/public/javascript/sell/containers/SellFormStep1.js":
/*!************************************************************************************!*\
  !*** ./src/AppBundle/Resources/public/javascript/sell/containers/SellFormStep1.js ***!
  \************************************************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_react__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_react_redux__ = __webpack_require__(/*! react-redux */ "./node_modules/react-redux/es/index.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__main_components_FileSelector__ = __webpack_require__(/*! ../../main/components/FileSelector */ "./src/AppBundle/Resources/public/javascript/main/components/FileSelector.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__main_components_SearchCompetition__ = __webpack_require__(/*! ../../main/components/SearchCompetition */ "./src/AppBundle/Resources/public/javascript/main/components/SearchCompetition.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__main_components_SeasonSelector__ = __webpack_require__(/*! ../../main/components/SeasonSelector */ "./src/AppBundle/Resources/public/javascript/main/components/SeasonSelector.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5_react_tagsinput__ = __webpack_require__(/*! react-tagsinput */ "./node_modules/react-tagsinput/react-tagsinput.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5_react_tagsinput___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_5_react_tagsinput__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__actions_contentActions__ = __webpack_require__(/*! ../actions/contentActions */ "./src/AppBundle/Resources/public/javascript/sell/actions/contentActions.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7_lodash_debounce__ = __webpack_require__(/*! lodash/debounce */ "./node_modules/lodash/debounce.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7_lodash_debounce___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_7_lodash_debounce__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__components_SellFormItems__ = __webpack_require__(/*! ../components/SellFormItems */ "./src/AppBundle/Resources/public/javascript/sell/components/SellFormItems.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9_prop_types__ = __webpack_require__(/*! prop-types */ "./node_modules/prop-types/index.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9_prop_types___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_9_prop_types__);
var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }













var SellFormStep1 = function (_React$Component) {
    _inherits(SellFormStep1, _React$Component);

    function SellFormStep1(props) {
        _classCallCheck(this, SellFormStep1);

        var _this2 = _possibleConstructorReturn(this, (SellFormStep1.__proto__ || Object.getPrototypeOf(SellFormStep1)).call(this, props));

        _this2.updateContentValue = function (event, key) {
            _this2.props.updateContentValue(key, event.target.value);
        };

        _this2.forceCustomTournament = function () {
            return _this2.hasCustomSport() || _this2.hasCustomCategory() || _this2.state.sportCategoryExtended;
        };

        _this2.forceCustomCategory = function () {
            return _this2.hasCustomSport();
        };

        _this2.forceCustomSeason = function () {
            return _this2.hasCustomSport() || _this2.hasCustomTournament();
        };

        _this2.hasCustomSport = function () {
            var hasCustomSport = false;

            _this2.props.sports.forEach(function (sport) {
                if (sport.custom) hasCustomSport = true;
            });

            return hasCustomSport && _this2.props.sports.length === 1;
        };

        _this2.hasCustomCategory = function () {
            var hasCustomCategory = false;

            _this2.state.sportCategories.forEach(function (sportCategory) {
                if (sportCategory.custom) hasCustomCategory = true;
            });

            return _this2.forceCustomCategory() || hasCustomCategory;
        };

        _this2.hasCustomTournament = function () {
            var hasCustomTournament = false;

            _this2.state.tournaments.forEach(function (tournament) {
                if (tournament.custom) hasCustomTournament = true;
            });

            return _this2.forceCustomTournament() || hasCustomTournament || _this2.state.sportCategoryExtended;
        };

        _this2.hasCustomSeason = function () {

            var hasCustomSeason = false;

            _this2.props.seasons.forEach(function (season) {
                if (season.custom) hasCustomSeason = true;
            });

            return _this2.forceCustomSeason() || hasCustomSeason;
        };

        _this2.addSeason = function () {
            _this2.setState(function (prevState) {
                return {
                    seasonSelectors: [].concat(_toConsumableArray(prevState.seasonSelectors), [1])
                };
            });
        };

        _this2.addSportSelector = function () {
            _this2.setState(function (prevState) {
                return {
                    sportSelectors: [].concat(_toConsumableArray(prevState.sportSelectors), [1])
                };
            });
        };

        _this2.removeSport = function (i) {

            if (i === 0) {
                _this2.props.removeNewSport(i);
                return;
            }

            _this2.setState(function (prevState) {
                prevState.sportSelectors.splice(i, 1);
                return {
                    sportSelectors: prevState.sportSelectors
                };
            });

            _this2.props.removeFromMultiple(i, "sports");
        };

        _this2.removeSeason = function (i) {

            if (i === 0) {
                _this2.props.removeNewSeason(i);
                return;
            }

            _this2.setState(function (prevState) {
                prevState.seasonSelectors.splice(i, 1);
                return {
                    seasonSelectors: prevState.seasonSelectors
                };
            });

            _this2.props.removeFromMultiple(i, "seasons");
        };

        _this2.toggleSearch = function () {
            var history = _this2.props.history;

            history.push("/contentlisting/1");
        };

        _this2.websitesUpdated = function (websites) {
            _this2.setState({ websites: websites });
            _this2.props.updateContentValue("website", websites);
        };

        _this2.handleWebsiteChange = function (website) {
            _this2.setState({ website: website });
            _this2.saveWebsite(website);
        };

        _this2.saveWebsite = __WEBPACK_IMPORTED_MODULE_7_lodash_debounce___default()(function (website) {
            if (website.length > 2) {
                return _this2.refs.tagsinput.accept();
            }
        }, 500);

        _this2.selectTournament = function (tournament) {
            _this2.props.selectTournament(tournament);
            setTimeout(_this2.toggleSearch, 2000);
        };

        _this2.clear = function () {
            _this2.props.reset();
            var history = _this2.props.history;

            history.push("/contentlisting/new");
        };

        _this2.scroll = function () {
            var _this2$props = _this2.props,
                stepChange = _this2$props.stepChange,
                stepChangeReset = _this2$props.stepChangeReset;


            if (stepChange) {
                window.scrollTo(0, 0);
                stepChangeReset();
            }
        };

        _this2.addFile = function (response) {
            var attachments = _this2.props.attachments;

            var index = attachments.length;
            _this2.props.updateAttachments("save", index, { file: response.file, name: response.name });
        };

        _this2.removeFile = function (index) {
            _this2.props.updateAttachments("remove", index, null);
        };

        _this2.state = {
            title: "Step 1 - Event selection",
            lastSportId: null,
            lastCategoryId: null,
            lastTournamentId: null,
            loadingCategories: false,
            loadingTournaments: false,
            loadingSeasons: false,
            loadingSchedule: false,
            seasonSelectors: [1],
            sportSelectors: [1],
            seasons: [],
            schedules: {},
            showSearch: props.showSearch,
            websites: [],
            website: '',
            tournaments: [],
            sportCategories: [],
            sportCategoryExtended: false,
            nameFromCompetition: false
        };
        return _this2;
    }

    _createClass(SellFormStep1, [{
        key: 'componentDidMount',
        value: function componentDidMount() {
            ContentArena.Api.getSports().done(function (sports) {
                ContentArena.Data.FullSports = sports;
            });

            if (ContentArena.Data.Countries.length === 0) {
                ContentArena.Api.getCountries().done(function (countries) {
                    ContentArena.Data.Countries = countries;
                });
            }
        }
    }, {
        key: 'loadCategories',
        value: function loadCategories(sport) {
            var _this3 = this;

            var sportId = sport.externalId;

            if (sportId === this.state.lastSportId) return;

            this.setState({ loadingCategories: true });
            ContentArena.Api.getCategories(sportId).done(function (categories) {
                ContentArena.Data.Categories = categories;
                _this3.setState({ lastSportId: sportId, loadingCategories: false });
            });
        }
    }, {
        key: 'loadTournaments',
        value: function loadTournaments(sport, category) {
            var _this4 = this;

            var sportId = sport.externalId;
            var categoryId = category ? category.externalId : null;

            if (sportId === this.state.lastSportId && categoryId === this.state.lastCategoryId) return;

            this.setState({ loadingTournaments: true });
            ContentArena.Api.getTournaments(sportId, categoryId).done(function (tournaments) {
                ContentArena.Data.Tournaments = tournaments;

                if (tournaments.length === 0) {
                    _this4.props.addNewCategory();
                    return;
                }

                _this4.setState({
                    lastSportId: sportId,
                    loadingTournaments: false,
                    lastCategoryId: categoryId
                });
            });
        }
    }, {
        key: 'loadSeasons',
        value: function loadSeasons(tournaments) {
            var _this5 = this;

            var tournamentId = tournaments.length > 0 ? tournaments[0].externalId : null;

            if (tournamentId === this.state.lastTournamentId) return;

            this.setState({ loadingSeasons: true });
            ContentArena.Api.getSeasons(tournamentId).done(function (seasons) {
                ContentArena.Data.Seasons = seasons;

                if (tournaments.length === 0) {
                    _this5.props.addNewCategory();
                    return;
                }

                _this5.setState({
                    lastTournamentId: tournamentId,
                    loadingSeasons: false,
                    seasons: seasons
                });
            });
        }
    }, {
        key: 'loadSchedule',
        value: function loadSchedule(nextProps) {

            var _this = this;
            var updateFromMultiple = this.props.updateFromMultiple;
            var seasons = nextProps.seasons,
                schedulesBySeason = nextProps.schedulesBySeason;


            seasons.forEach(function (season, index) {
                if (!season.schedules && !season.custom) {
                    _this.setState({ loadingSchedule: true });
                    ContentArena.Api.getSchedule(season.externalId).done(function (schedules) {
                        _this.setState({ loadingSchedule: false });
                        var keys = [];
                        if (schedulesBySeason && schedulesBySeason[index]) {
                            keys = Object.keys(schedulesBySeason[index]);
                            keys.forEach(function (k) {
                                schedulesBySeason[index][k].matches.forEach(function (m) {
                                    if (m.selected) {
                                        schedules[k].matches.get(m.externalId).selected = true;
                                    }
                                });
                                schedules[k].selected = true;
                            });
                        }

                        updateFromMultiple("seasons", index, "schedules", schedules);
                        if (keys.length > 0) updateFromMultiple("seasons", index, "showSchedule", true);
                    });
                }
            });
        }
    }, {
        key: 'componentWillReceiveProps',
        value: function componentWillReceiveProps(nextProps) {
            var _state = this.state,
                loadingCategories = _state.loadingCategories,
                loadingTournaments = _state.loadingTournaments,
                loadingSeasons = _state.loadingSeasons;

            var tournaments = void 0,
                seasons = void 0,
                sportCategories = void 0,
                websites = void 0,
                website = void 0,
                name = nextProps.name;

            tournaments = Array.isArray(nextProps.tournament) ? nextProps.tournament : [nextProps.tournament];
            seasons = Array.isArray(nextProps.seasons) ? nextProps.seasons : [nextProps.seasons];
            sportCategories = Array.isArray(nextProps.sportCategory) ? nextProps.sportCategory : [nextProps.sportCategory];
            websites = Array.isArray(nextProps.websites) ? nextProps.websites : nextProps.websites ? [nextProps.websites] : [];

            if (nextProps.sports.length === 1 && !loadingCategories) {
                this.loadCategories(nextProps.sports[0]);
                this.setState(function () {
                    return {
                        showSearch: false
                    };
                });
            }

            if (nextProps.sports.length === 0) {
                this.setState(function () {
                    return {
                        seasons: [],
                        schedules: []
                    };
                });
                sportCategories = [];
                tournaments = [];

                this.props.updateContentValue("name", "");
            }

            if (!name && tournaments.length > 0 && !this.state.nameFromCompetition) {
                this.setState({ nameFromCompetition: true });
                this.props.updateContentValue("name", tournaments[0].name);
            }

            if (nextProps.sports.length === 1 && !loadingTournaments) {
                this.loadTournaments(nextProps.sports[0], sportCategories[0]);
            }

            if (tournaments.length === 1 && !loadingSeasons) {
                if (!tournaments[0].custom) {
                    this.loadSeasons(tournaments);
                }
            }

            this.setState({
                sportCategories: sportCategories,
                tournaments: tournaments
            });

            if (sportCategories.length === 1) {
                this.setState({ sportCategoryExtended: sportCategories[0].extended });
            }

            if (seasons.length > 0) {
                this.setState(function () {
                    return {
                        seasonSelectors: [].concat(_toConsumableArray(Array(seasons.length).keys()))
                    };
                });
                //this.loadSchedule(nextProps);
            }

            if (websites && websites.length > 0) {
                this.setState({ websites: websites });
            }
        }

        /**
         *
         * @param event
         * @param key
         */

    }, {
        key: 'render',
        value: function render() {
            var _this6 = this;

            if (this.props.step !== 1) return null;

            var _state2 = this.state,
                websites = _state2.websites,
                website = _state2.website;

            var websitePlaceholder = websites.length > 0 ? '' : 'e.g. bundesliga.de';

            this.scroll();

            var inputProps = {
                sports: [{ value: "", custom: false }],
                sportCategory: { value: "", custom: false },
                tournament: { value: "", custom: false },
                seasons: [{ value: "", custom: false }]
            };

            if (this.props.sports.length > 0) {
                inputProps.sports = [];
                this.props.sports.forEach(function (sport) {
                    inputProps.sports.push({
                        value: sport.name,
                        isCustom: sport.custom
                    });
                });
            }
            if (this.props.seasons.length > 0) {
                inputProps.seasons = [];
                this.props.seasons.forEach(function (season) {
                    inputProps.seasons.push({ value: season.name, isCustom: season.custom });
                });
            }
            if (this.state.sportCategories.length > 0 && this.props.sportCategory.length === 0) {
                inputProps.sportCategory = {
                    value: this.state.sportCategories[0].name,
                    isCustom: this.state.sportCategories[0].isCustom
                };
            }
            if (this.state.tournaments.length > 0 && this.props.tournament.length === 0) {
                inputProps.tournament = {
                    value: this.state.tournaments[0].name,
                    isCustom: this.state.tournaments[0].isCustom
                };
            }

            if (this.props.tournament.length > 0) {
                inputProps.tournament = {
                    value: this.props.tournament[0].name,
                    isCustom: this.props.tournament[0].isCustom
                };
            }

            if (this.props.sportCategory.length > 0) {
                inputProps.sportCategory = {
                    value: this.props.sportCategory[0].name,
                    isCustom: this.props.sportCategory[0].isCustom
                };
            }

            return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                'div',
                { className: 'step-content' },
                __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                    'div',
                    { className: 'step-title' },
                    this.state.title
                ),
                this.state.showSearch && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_3__main_components_SearchCompetition__["a" /* default */], { close: this.toggleSearch, select: this.selectTournament }),
                !this.state.showSearch && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                    'div',
                    { className: 'buttons' },
                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        'div',
                        { className: "buttons-container", style: { justifyContent: 'flex-start' } },
                        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                            'button',
                            { className: 'light-blue-button', onClick: this.clear },
                            this.context.t("Start over")
                        )
                    )
                ),
                !this.state.showSearch && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                    'div',
                    { className: 'step-content-container' },
                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        'div',
                        { className: 'step-item-description' },
                        this.context.t("Please fill in the information fields below. Note that, apart from 'Sport', you may skip all information fields.")
                    ),
                    this.state.sportSelectors.map(function (item, i, list) {
                        return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_8__components_SellFormItems__["d" /* SportSelector */], {
                            key: i,
                            index: i,
                            sports: _this6.props.sports,
                            remove: function remove() {
                                return _this6.removeSport(i);
                            },
                            showAddNew: list.length > 1 && list.length === i + 1,
                            onUpdateNew: function onUpdateNew(name) {
                                _this6.props.updateFromMultiple("sports", i, "value", name);
                            },
                            showClose: i > 0,
                            isCustom: inputProps.sports[i] ? inputProps.sports[i].isCustom : false,
                            addSportSelector: _this6.addSportSelector,
                            onClick: function onClick() {
                                _this6.props.openSportSelector(i, _this6.props.sports);
                            },
                            value: inputProps.sports[i] ? inputProps.sports[i].value : "" });
                    }),
                    this.state.sportSelectors.length === 1 && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        'div',
                        { className: 'step-item-description', style: { marginTop: "-15px" } },
                        this.context.t("Your content covers multiple sports?"),
                        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                            'button',
                            { className: "link-button", onClick: this.addSportSelector },
                            'Please click here'
                        )
                    ),
                    this.state.sportSelectors.length === 1 && !this.hasCustomCategory() && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        'div',
                        { className: 'base-input' },
                        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                            'label',
                            null,
                            this.context.t("Country/Category")
                        ),
                        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('input', {
                            type: 'text',
                            value: inputProps.sportCategory.value || "",
                            readOnly: true,
                            disabled: this.props.sports.length === 0 || this.state.loadingCategories,
                            onClick: function onClick() {
                                _this6.props.openCategorySelector(_this6.state.sportCategories);
                            },
                            placeholder: this.context.t("e.g. Germany") }),
                        this.state.loadingCategories && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('i', { className: 'fa fa-cog fa-spin' })
                    ),
                    this.state.sportSelectors.length === 1 && this.hasCustomCategory() && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_8__components_SellFormItems__["b" /* NewCategory */], {
                        showClose: !this.forceCustomCategory(),
                        value: this.props.customCategory,
                        onBlur: function onBlur(e) {
                            return _this6.updateContentValue(e, "customCategory");
                        },
                        onClick: this.props.removeNewCategory
                    }),
                    this.state.sportSelectors.length === 1 && !this.hasCustomTournament() && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        'div',
                        { className: 'base-input' },
                        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                            'label',
                            null,
                            this.context.t("Competition")
                        ),
                        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('input', { type: 'text',
                            value: inputProps.tournament.value || "",
                            readOnly: true,
                            disabled: this.props.sports.length === 0 || this.state.loadingTournaments,
                            onClick: function onClick() {
                                _this6.props.openTournamentSelector(_this6.state.tournaments);
                            },
                            placeholder: this.context.t("e.g. Bundesliga") }),
                        this.state.loadingTournaments && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('i', { className: 'fa fa-cog fa-spin' })
                    ),
                    this.state.sportSelectors.length === 1 && this.hasCustomTournament() && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_8__components_SellFormItems__["c" /* NewTournament */], { showClose: !this.forceCustomTournament(),
                        value: this.props.customTournament,
                        onBlur: function onBlur(e) {
                            return _this6.updateContentValue(e, "customTournament");
                        },
                        onClick: this.props.removeNewTournament }),
                    this.state.sportSelectors.length === 1 && (this.state.seasons.length > 0 || this.forceCustomSeason()) && this.state.seasonSelectors.length > 0 && this.state.seasonSelectors.map(function (season, i) {
                        return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_4__main_components_SeasonSelector__["a" /* default */], {
                            key: i,
                            season: season,
                            index: i,
                            addSeason: _this6.addSeason,
                            removeSeason: function removeSeason() {
                                return _this6.removeSeason(i);
                            },
                            value: inputProps.seasons[i] ? inputProps.seasons[i].value : "",
                            loading: _this6.state.loadingSeasons,
                            showClose: i > 0 || !_this6.forceCustomSeason() && _this6.hasCustomSeason(),
                            onBlur: function onBlur(e) {
                                return _this6.updateContentValue(e, "customSeason");
                            },
                            isCustom: inputProps.seasons[i] ? inputProps.seasons[i].isCustom || _this6.forceCustomSeason() : false,
                            showAddNew: _this6.state.seasonSelectors.length === i + 1,
                            openSelector: function openSelector() {
                                return _this6.props.openSeasonSelector(i, _this6.props.seasons);
                            } });
                    }),
                    (this.state.loadingSeasons || this.state.loadingSchedule) && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        'div',
                        null,
                        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('i', { className: 'fa fa-cog fa-spin' })
                    ),
                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_8__components_SellFormItems__["a" /* Description */], { value: this.props.description, onBlur: function onBlur(e) {
                            return _this6.updateContentValue(e, "PROGRAM_DESCRIPTION");
                        } }),
                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        'div',
                        { className: 'step-item-description', style: {} },
                        this.context.t("Additional information")
                    ),
                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        'div',
                        { className: 'base-input' },
                        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                            'label',
                            null,
                            this.context.t("Website")
                        ),
                        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_5_react_tagsinput___default.a, {
                            inputProps: { placeholder: websitePlaceholder },
                            value: websites,
                            ref: 'tagsinput',
                            onChange: this.websitesUpdated,
                            inputValue: website,
                            onChangeInput: this.handleWebsiteChange
                        })
                    ),
                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_2__main_components_FileSelector__["a" /* default */], {
                        target: "attachments",
                        selected: this.props.attachments,
                        onSelect: this.addFile,
                        onRemove: this.removeFile,
                        accept: ["image/png", "image/jpg", ".pdf", ".doc", ".docx", ".cvs", ".ppt", ".xls", ".xlsx"],
                        acceptType: ["image/jpeg", "image/png", "application/pdf"],
                        tmp: true })
                )
            );
        }
    }]);

    return SellFormStep1;
}(__WEBPACK_IMPORTED_MODULE_0_react___default.a.Component);

SellFormStep1.contextTypes = {
    t: __WEBPACK_IMPORTED_MODULE_9_prop_types__["PropTypes"].func.isRequired
};

var mapStateToProps = function mapStateToProps(state) {
    return state.content;
};

var mapDispatchToProps = function mapDispatchToProps(dispatch) {
    return {
        updateFromMultiple: function updateFromMultiple(type, index, key, value) {
            return dispatch({
                type: 'UPDATE_FROM_MULTIPLE',
                selectorType: type,
                index: index,
                key: key,
                value: value
            });
        },
        updateAttachments: function updateAttachments(name, index, value) {
            return dispatch({
                type: 'UPDATE_ATTACHMENTS',
                name: name,
                index: index,
                value: value
            });
        },
        openSportSelector: function openSportSelector(index, selectedItems) {
            return dispatch({
                type: 'OPEN_SELECTOR',
                selectorItems: ContentArena.Data.FullSports,
                popularItems: ContentArena.Data.TopSports,
                selectorType: "sports",
                activeFilter: "popular",
                clean: ["tournament", "seasons", "sportCategory"],
                selectedItems: selectedItems,
                showNewSport: true,
                index: index
            });
        },
        openCategorySelector: function openCategorySelector(selectedItems) {
            return dispatch({
                type: 'OPEN_SELECTOR',
                selectorItems: ContentArena.Data.Categories,
                selectorType: "sportCategory",
                activeFilter: "ag",
                showAllCountries: true,
                showNewCategory: true,
                selectedItems: selectedItems,
                index: 0,
                clean: ["tournament", "seasons"]
            });
        },
        openTournamentSelector: function openTournamentSelector(selectedItems) {
            return dispatch({
                type: 'OPEN_SELECTOR',
                selectorItems: ContentArena.Data.Tournaments,
                selectorType: "tournament",
                activeFilter: "ag",
                index: 0,
                selectedItems: selectedItems,
                showNewTournament: true,
                clean: ["seasons"]
            });
        },
        openSeasonSelector: function openSeasonSelector(index, selectedItems) {
            return dispatch({
                type: 'OPEN_SELECTOR',
                selectorItems: ContentArena.Data.Seasons,
                selectorType: "seasons",
                multiple: true,
                index: index,
                showNewSeason: true,
                clean: [],
                selectedItems: selectedItems
            });
        },
        removeFromMultiple: function removeFromMultiple(index, selectorType) {
            return dispatch({
                type: 'REMOVE_FROM_MULTIPLE',
                selectorType: selectorType,
                index: index
            });
        },
        updateContentValue: function updateContentValue(key, value) {
            return dispatch({
                type: 'UPDATE_CONTENT_VALUE',
                key: key,
                value: value
            });
        },
        removeNewSport: function removeNewSport(index) {
            return dispatch({
                type: 'REMOVE_NEW',
                index: index,
                selectorType: "sports"
            });
        },
        removeNewTournament: function removeNewTournament(index) {
            return dispatch({
                type: 'REMOVE_NEW',
                index: index,
                selectorType: "tournament"
            });
        },
        removeNewCategory: function removeNewCategory(index) {
            return dispatch({
                type: 'REMOVE_NEW',
                index: index,
                selectorType: "sportCategory"
            });
        },
        removeNewSeason: function removeNewSeason(index) {
            return dispatch({
                type: 'REMOVE_NEW',
                index: index,
                selectorType: "seasons"
            });
        },
        addNewSeason: function addNewSeason(index, clean) {
            return dispatch({
                type: 'ADD_NEW',
                index: 0,
                selectorType: "seasons",
                clean: []
            });
        },
        addNewCategory: function addNewCategory() {
            return dispatch({
                type: 'ADD_NEW',
                index: 0,
                selectorType: "sportCategory",
                clean: ["tournament", "seasons"]
            });
        },
        reset: function reset() {
            return dispatch({
                type: 'RESET'
            });
        },
        selectTournament: function selectTournament(tournament) {
            return dispatch({ type: 'SELECT_TOURNAMENT', tournament: tournament });
        },
        stepChangeReset: function stepChangeReset() {
            return dispatch(Object(__WEBPACK_IMPORTED_MODULE_6__actions_contentActions__["d" /* stepChangeReset */])());
        }

    };
};

/* harmony default export */ __webpack_exports__["a"] = (Object(__WEBPACK_IMPORTED_MODULE_1_react_redux__["connect"])(mapStateToProps, mapDispatchToProps)(SellFormStep1));

/***/ }),

/***/ "./src/AppBundle/Resources/public/javascript/sell/containers/SellFormStep2.js":
/*!************************************************************************************!*\
  !*** ./src/AppBundle/Resources/public/javascript/sell/containers/SellFormStep2.js ***!
  \************************************************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_react__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_react_redux__ = __webpack_require__(/*! react-redux */ "./node_modules/react-redux/es/index.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__containers_PackageSelector__ = __webpack_require__(/*! ../containers/PackageSelector */ "./src/AppBundle/Resources/public/javascript/sell/containers/PackageSelector.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__components_SellFormItems__ = __webpack_require__(/*! ../components/SellFormItems */ "./src/AppBundle/Resources/public/javascript/sell/components/SellFormItems.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__components_RightDefinitions__ = __webpack_require__(/*! ../components/RightDefinitions */ "./src/AppBundle/Resources/public/javascript/sell/components/RightDefinitions.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__components_ProductionStandardsDefinitions__ = __webpack_require__(/*! ../components/ProductionStandardsDefinitions */ "./src/AppBundle/Resources/public/javascript/sell/components/ProductionStandardsDefinitions.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__actions_contentActions__ = __webpack_require__(/*! ../actions/contentActions */ "./src/AppBundle/Resources/public/javascript/sell/actions/contentActions.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__main_actions_utils__ = __webpack_require__(/*! ../../main/actions/utils */ "./src/AppBundle/Resources/public/javascript/main/actions/utils.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8_prop_types__ = __webpack_require__(/*! prop-types */ "./node_modules/prop-types/index.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8_prop_types___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_8_prop_types__);
var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }











var SellFormStep2 = function (_React$Component) {
    _inherits(SellFormStep2, _React$Component);

    function SellFormStep2(props) {
        _classCallCheck(this, SellFormStep2);

        var _this2 = _possibleConstructorReturn(this, (SellFormStep2.__proto__ || Object.getPrototypeOf(SellFormStep2)).call(this, props));

        _this2.loadRights = function (rightsPackage, group) {
            var _this = _this2;
            ContentArena.Api.getRights(rightsPackage.map(function (p) {
                return p.id;
            }), group).done(function (rights) {
                _this.setState({ rights: rights });
            });
        };

        _this2.updateRight = function (rightsPackage) {
            _this2.props.superRightsUpdated(rightsPackage);
        };

        _this2.superRightsEnabled = function (superRights) {

            var selected = _this2.props.rightsPackage.map(function (a) {
                return a.shortLabel;
            });

            return superRights.filter(function (r) {
                return selected.indexOf(r) !== -1;
            }).length > 0;
        };

        _this2.scroll = function () {
            var _this2$props = _this2.props,
                stepChange = _this2$props.stepChange,
                stepChangeReset = _this2$props.stepChangeReset;


            if (stepChange) {
                window.scrollTo(0, 0);
                stepChangeReset();
            }
        };

        var startYear = 2030;
        var years = [];

        for (var i = 0; i < 81; i++) {
            years.push(startYear - i);
        }

        _this2.state = {
            years: years,
            title: "Step 2 - Configure Rights",
            licensePopup: false,
            rights: __WEBPACK_IMPORTED_MODULE_4__components_RightDefinitions__["a" /* RightDefinitions */],
            productionStandards: __WEBPACK_IMPORTED_MODULE_5__components_ProductionStandardsDefinitions__["a" /* ProductionStandardsDefinitions */]
        };
        return _this2;
    }

    _createClass(SellFormStep2, [{
        key: "componentWillReceiveProps",
        value: function componentWillReceiveProps(nextProps) {
            console.log("Step 2 - props", nextProps);
            window.content = nextProps;
        }
    }, {
        key: "render",
        value: function render() {
            var _props = this.props,
                programDescription = _props.programDescription,
                updateContentValue = _props.updateContentValue,
                PROGRAM_NAME = _props.PROGRAM_NAME,
                PROGRAM_EPISODES = _props.PROGRAM_EPISODES,
                PROGRAM_YEAR = _props.PROGRAM_YEAR,
                PROGRAM_TYPE = _props.PROGRAM_TYPE,
                PROGRAM_DURATION = _props.PROGRAM_DURATION,
                PROGRAM_DESCRIPTION = _props.PROGRAM_DESCRIPTION,
                rightsPackage = _props.rightsPackage,
                step = _props.step,
                sports = _props.sports,
                sportCategory = _props.sportCategory,
                tournament = _props.tournament,
                seasons = _props.seasons;

            if (step !== 2) return null;

            var editedProgram = Object(__WEBPACK_IMPORTED_MODULE_7__main_actions_utils__["a" /* editedProgramSelected */])(rightsPackage);

            this.scroll();
            return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                "div",
                { className: "step-content step-2" },
                (sports.length || sportCategory.length || tournament.length || seasons.length) && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                    "div",
                    { className: "listing-summary" },
                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_3__components_SellFormItems__["f" /* SummaryText */], this.props)
                ),
                __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                    "div",
                    { className: "step-content-container" },
                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        "div",
                        { className: "textarea-input" },
                        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                            "label",
                            null,
                            this.context.t("PROGRAM DESCRIPTION")
                        ),
                        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                            "div",
                            { className: "textarea-input-text" },
                            this.context.t("Which program do you wish to license? This may include events and/or produced content. All rights, selected later on, will refer to this.")
                        ),
                        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement("textarea", {
                            onChange: function onChange(e) {
                                return updateContentValue("programDescription", e.target.value);
                            },
                            defaultValue: programDescription,
                            placeholder: this.context.t("Please enter the program description. The program description represents the core of the license agreement. All rights picked later on refer to this program description. You may enter all information you consider relevant (e.g. which events you seek to grant rights to or which events you will produce and deliver to the buyer). \n") })
                    )
                ),
                __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_2__containers_PackageSelector__["a" /* default */], { packages: this.props.packages }),
                editedProgram && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                    "div",
                    null,
                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        "div",
                        { className: "left" },
                        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                            "div",
                            { className: "modal-input" },
                            __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                "label",
                                null,
                                this.context.t("Enter program name")
                            ),
                            __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement("input", {
                                type: "text",
                                value: PROGRAM_NAME,
                                onChange: function onChange(e) {
                                    updateContentValue("PROGRAM_NAME", e.target.value);
                                } })
                        ),
                        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                            "div",
                            { className: "modal-input" },
                            __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                "label",
                                null,
                                this.context.t("Number of episodes")
                            ),
                            __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement("input", {
                                type: "number",
                                value: PROGRAM_EPISODES,
                                onChange: function onChange(e) {
                                    updateContentValue("PROGRAM_EPISODES", Number(e.target.value));
                                } })
                        ),
                        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                            "div",
                            { className: "modal-input" },
                            __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                "label",
                                null,
                                this.context.t("Average episode duration in minutes")
                            ),
                            __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement("input", {
                                type: "number",
                                value: PROGRAM_DURATION,
                                onChange: function onChange(e) {
                                    updateContentValue("PROGRAM_DURATION", Number(e.target.value));
                                } })
                        ),
                        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                            "div",
                            { className: "modal-input" },
                            __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                "label",
                                null,
                                this.context.t("Enter program type")
                            ),
                            __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                "select",
                                {
                                    value: PROGRAM_TYPE,
                                    onChange: function onChange(e) {
                                        updateContentValue("PROGRAM_TYPE", e.target.value);
                                    } },
                                __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                    "option",
                                    { value: "SELECT" },
                                    "Select"
                                ),
                                __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                    "option",
                                    { value: "HIGHLIGHT_SHOW" },
                                    "Highlight show"
                                ),
                                __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                    "option",
                                    { value: "DOCUMENTARY" },
                                    "Documentary"
                                ),
                                __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                    "option",
                                    { value: "PREVIEW" },
                                    "Preview"
                                ),
                                __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                    "option",
                                    { value: "TALK_SHOW" },
                                    "Talk show"
                                ),
                                __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                    "option",
                                    { value: "OTHER" },
                                    "Other"
                                )
                            )
                        ),
                        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                            "div",
                            { className: "modal-input" },
                            __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                "label",
                                null,
                                this.context.t("Release year (optional)")
                            ),
                            __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                "select",
                                {
                                    value: PROGRAM_YEAR,
                                    onChange: function onChange(e) {
                                        updateContentValue("PROGRAM_YEAR", e.target.value);
                                    } },
                                __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                    "option",
                                    { value: "Year" },
                                    "Year"
                                ),
                                this.state.years.map(function (year, i) {
                                    return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                        "option",
                                        { key: i, value: year },
                                        year
                                    );
                                })
                            )
                        )
                    ),
                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        "div",
                        { className: "right" },
                        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                            "div",
                            { className: "modal-input" },
                            __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                "label",
                                null,
                                this.context.t("Edited Program Description (optional)")
                            ),
                            __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                "textarea",
                                {
                                    onChange: function onChange(e) {
                                        updateContentValue("PROGRAM_DESCRIPTION", e.target.value);
                                    },
                                    placeholder: "Provide a description of your content listing" },
                                PROGRAM_DESCRIPTION
                            )
                        )
                    ),
                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement("div", { className: "clearfix" })
                )
            );
        }
    }]);

    return SellFormStep2;
}(__WEBPACK_IMPORTED_MODULE_0_react___default.a.Component);

SellFormStep2.contextTypes = {
    t: __WEBPACK_IMPORTED_MODULE_8_prop_types__["PropTypes"].func.isRequired
};

var mapStateToProps = function mapStateToProps(state) {
    return state.content;
};

var mapDispatchToProps = function mapDispatchToProps(dispatch) {
    return {
        superRightsUpdated: function superRightsUpdated(rightsPackage) {
            return dispatch({
                type: 'SUPER_RIGHTS_UPDATED',
                rightsPackage: rightsPackage
            });
        },
        updateContentValue: function updateContentValue(key, value) {
            return dispatch({
                type: 'UPDATE_CONTENT_VALUE',
                key: key,
                value: value
            });
        },
        stepChangeReset: function stepChangeReset() {
            return dispatch(Object(__WEBPACK_IMPORTED_MODULE_6__actions_contentActions__["d" /* stepChangeReset */])());
        }
    };
};

/* harmony default export */ __webpack_exports__["a"] = (Object(__WEBPACK_IMPORTED_MODULE_1_react_redux__["connect"])(mapStateToProps, mapDispatchToProps)(SellFormStep2));

/***/ }),

/***/ "./src/AppBundle/Resources/public/javascript/sell/containers/SellFormStep3.js":
/*!************************************************************************************!*\
  !*** ./src/AppBundle/Resources/public/javascript/sell/containers/SellFormStep3.js ***!
  \************************************************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_react__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_react_redux__ = __webpack_require__(/*! react-redux */ "./node_modules/react-redux/es/index.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_react_modal__ = __webpack_require__(/*! react-modal */ "./node_modules/react-modal/lib/index.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_react_modal___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2_react_modal__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_moment__ = __webpack_require__(/*! moment */ "./node_modules/moment/moment.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_moment___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_3_moment__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__containers_PackageSelector__ = __webpack_require__(/*! ../containers/PackageSelector */ "./src/AppBundle/Resources/public/javascript/sell/containers/PackageSelector.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__components_PopupRight__ = __webpack_require__(/*! ../components/PopupRight */ "./src/AppBundle/Resources/public/javascript/sell/components/PopupRight.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__components_Comments__ = __webpack_require__(/*! ../components/Comments */ "./src/AppBundle/Resources/public/javascript/sell/components/Comments.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__components_LicenseDateSelector__ = __webpack_require__(/*! ../components/LicenseDateSelector */ "./src/AppBundle/Resources/public/javascript/sell/components/LicenseDateSelector.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__components_RightDefinitions__ = __webpack_require__(/*! ../components/RightDefinitions */ "./src/AppBundle/Resources/public/javascript/sell/components/RightDefinitions.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9__components_ProductionStandardsDefinitions__ = __webpack_require__(/*! ../components/ProductionStandardsDefinitions */ "./src/AppBundle/Resources/public/javascript/sell/components/ProductionStandardsDefinitions.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_10__components_SellFormItems__ = __webpack_require__(/*! ../components/SellFormItems */ "./src/AppBundle/Resources/public/javascript/sell/components/SellFormItems.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_11__actions_contentActions__ = __webpack_require__(/*! ../actions/contentActions */ "./src/AppBundle/Resources/public/javascript/sell/actions/contentActions.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_12__main_components_LanguageSelector__ = __webpack_require__(/*! ../../main/components/LanguageSelector */ "./src/AppBundle/Resources/public/javascript/main/components/LanguageSelector.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_13__main_styles_custom__ = __webpack_require__(/*! ../../main/styles/custom */ "./src/AppBundle/Resources/public/javascript/main/styles/custom.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_14_prop_types__ = __webpack_require__(/*! prop-types */ "./node_modules/prop-types/index.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_14_prop_types___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_14_prop_types__);
var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }




















var licenseStyles = {
    fontSize: "15px",
    fontWeight: "100",
    justifyContent: "left"
};

var SellFormStep3 = function (_React$Component) {
    _inherits(SellFormStep3, _React$Component);

    function SellFormStep3(props) {
        _classCallCheck(this, SellFormStep3);

        var _this2 = _possibleConstructorReturn(this, (SellFormStep3.__proto__ || Object.getPrototypeOf(SellFormStep3)).call(this, props));

        _this2.loadRights = function (rightsPackage, group) {
            var _this = _this2;
            ContentArena.Api.getRights(rightsPackage.map(function (p) {
                return p.id;
            }), group).done(function (rights) {
                _this.setState({ rights: rights });
            });
        };

        _this2.closeProgramsPopup = function () {
            _this2.setState({ programPopupActive: false });
        };

        _this2.closeLicensePopup = function () {
            _this2.setState({ licensePopup: false });
        };

        _this2.selectCurrency = function (currency) {
            _this2.props.updateContentValue('currency', currency);
        };

        _this2.selectLicenseDates = function (key, value) {
            _this2.props.updateContentValue(key, value);
        };

        _this2.updateRight = function (rightsPackage) {
            _this2.props.superRightsUpdated(rightsPackage);
        };

        _this2.superRightsEnabled = function (superRights) {

            var selected = _this2.props.rightsPackage.map(function (a) {
                return a.shortLabel;
            });

            return superRights.filter(function (r) {
                return selected.indexOf(r) !== -1;
            }).length > 0;
        };

        _this2.skipContentDelivery = function (right) {
            var rightsPackage = _this2.props.rightsPackage;


            var selected = rightsPackage.map(function (a) {
                return a.shortLabel;
            });

            return right.key === "CONTENT_DELIVERY" && selected.indexOf("NA") === -1 && selected.indexOf("LB") === -1 && selected.indexOf("HL") === -1 && selected.indexOf("DT") === -1;
        };

        _this2.scroll = function () {
            var _this2$props = _this2.props,
                stepChange = _this2$props.stepChange,
                stepChangeReset = _this2$props.stepChangeReset;


            if (stepChange) {
                window.scrollTo(0, 0);
                stepChangeReset();
            }
        };

        _this2.showLicensePopup = function () {
            _this2.setState({
                licensePopup: true
            });
        };

        _this2.state = {
            programPopupActive: false,
            licensePopup: false,
            rights: __WEBPACK_IMPORTED_MODULE_8__components_RightDefinitions__["a" /* RightDefinitions */],
            productionStandards: __WEBPACK_IMPORTED_MODULE_9__components_ProductionStandardsDefinitions__["a" /* ProductionStandardsDefinitions */]
        };
        _this2.blueCheck = assetsBaseDir + "app/images/blue_check.png";
        _this2.yellowCheck = assetsBaseDir + "app/images/yellow_chech.png";

        return _this2;
    }

    _createClass(SellFormStep3, [{
        key: 'renderProgramPopup',
        value: function renderProgramPopup() {
            var _props = this.props,
                updateContentValue = _props.updateContentValue,
                PROGRAM_SUBTITLES = _props.PROGRAM_SUBTITLES,
                PROGRAM_SCRIPT = _props.PROGRAM_SCRIPT,
                PROGRAM_LANGUAGE = _props.PROGRAM_LANGUAGE;

            return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                __WEBPACK_IMPORTED_MODULE_2_react_modal___default.a,
                {
                    isOpen: this.state.programPopupActive,
                    onRequestClose: this.closeProgramsPopup,
                    bodyOpenClassName: "selector",
                    style: __WEBPACK_IMPORTED_MODULE_13__main_styles_custom__["c" /* customStyles */],
                    contentLabel: 'Example Modal'
                },
                __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                    'div',
                    { className: 'modal-title' },
                    this.context.t("Program details"),
                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('i', { className: 'fa fa-times-circle-o', onClick: this.closeProgramsPopup })
                ),
                __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                    'div',
                    { className: 'step-content custom' },
                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        'div',
                        { className: 'step-content-container', style: { minWidth: 500 } },
                        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                            'div',
                            { className: 'modal-input' },
                            __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                'label',
                                null,
                                this.context.t("Program language")
                            ),
                            __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_12__main_components_LanguageSelector__["a" /* LanguageSelector */], {
                                value: PROGRAM_LANGUAGE,
                                onChange: function onChange(value) {
                                    updateContentValue('PROGRAM_LANGUAGE', value);
                                } })
                        ),
                        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                            'div',
                            { className: 'modal-input' },
                            __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                'label',
                                null,
                                this.context.t("Subtitles (if available)")
                            ),
                            __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_12__main_components_LanguageSelector__["a" /* LanguageSelector */], {
                                value: PROGRAM_SUBTITLES,
                                onChange: function onChange(value) {
                                    updateContentValue('PROGRAM_SUBTITLES', value);
                                } })
                        ),
                        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                            'div',
                            { className: 'modal-input' },
                            __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                'label',
                                null,
                                this.context.t("Script (if available)")
                            ),
                            __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_12__main_components_LanguageSelector__["a" /* LanguageSelector */], {
                                value: PROGRAM_SCRIPT,
                                onChange: function onChange(value) {
                                    updateContentValue('PROGRAM_SCRIPT', value);
                                } })
                        )
                    )
                ),
                __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                    'div',
                    { className: "buttons" },
                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        'button',
                        {
                            className: "standard-button",
                            onClick: this.closeProgramsPopup },
                        this.context.t("Ok")
                    )
                )
            );
        }
    }, {
        key: 'render',
        value: function render() {
            var _this3 = this;

            var _props2 = this.props,
                step = _props2.step,
                rightsPackage = _props2.rightsPackage,
                startDateMode = _props2.startDateMode,
                endDateMode = _props2.endDateMode,
                endDate = _props2.endDate,
                COMMENTS_RIGHTS = _props2.COMMENTS_RIGHTS,
                COMMENTS_PRODUCTION = _props2.COMMENTS_PRODUCTION,
                updateContentValue = _props2.updateContentValue,
                PROGRAM_NAME = _props2.PROGRAM_NAME,
                LICENSED_LANGUAGES = _props2.LICENSED_LANGUAGES;

            if (step !== 3) return null;
            this.scroll();

            return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                'div',
                { className: 'step-content step-3' },
                this.renderProgramPopup(),
                __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                    'div',
                    { className: 'listing-summary' },
                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_10__components_SellFormItems__["f" /* SummaryText */], this.props)
                ),
                __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                    'div',
                    { className: 'step-content-container' },
                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        'div',
                        { className: "rights-box" },
                        rightsPackage.map(function (sr, i) {
                            return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                'div',
                                { key: i, className: "rights-box-item" },
                                !sr.exclusive && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('img', { style: { width: 23, height: 22, margin: '0 5px' }, src: _this3.blueCheck }),
                                sr.exclusive && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('img', { style: { width: 23, height: 22, margin: '0 5px' }, src: _this3.yellowCheck }),
                                __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                    'div',
                                    { style: { display: 'flex', flexDirection: "row" } },
                                    sr.shortLabel !== "PR" && sr.name,
                                    sr.shortLabel === "PR" && content.PROGRAM_NAME && "Program: " + content.PROGRAM_NAME,
                                    sr.exclusive && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                        'span',
                                        { style: { fontWeight: 600, marginLeft: 3 } },
                                        ' EX'
                                    )
                                )
                            );
                        })
                    ),
                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_7__components_LicenseDateSelector__["a" /* default */], {
                        isOpen: this.state.licensePopup,
                        onUpdate: this.selectLicenseDates,
                        startDate: this.props.startDate,
                        endDateLimit: this.props.endDateLimit,
                        endDateMode: endDateMode,
                        startDateMode: startDateMode,
                        endDate: endDate,
                        onClose: this.closeLicensePopup
                    }),
                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_10__components_SellFormItems__["g" /* TitleBar */], { title: "License period" }),
                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        'div',
                        { className: "license-date-container" },
                        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                            'div',
                            { className: 'table-right' },
                            __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                'div',
                                { className: 'row' },
                                __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                    'div',
                                    { className: 'column right-name' },
                                    this.context.t("Start")
                                ),
                                __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                    'div',
                                    { className: 'column right-item-content', style: licenseStyles, onClick: this.showLicensePopup },
                                    !this.props.startDate && "contract conclusion",
                                    this.props.startDate && __WEBPACK_IMPORTED_MODULE_3_moment___default()(this.props.startDate).format('DD/MM/YYYY')
                                ),
                                __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                    'div',
                                    { className: 'column right-name' },
                                    this.context.t("End")
                                ),
                                __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                    'div',
                                    { className: 'column right-item-content', style: licenseStyles, onClick: this.showLicensePopup },
                                    endDateMode === "LIMITED" && this.props.endDateLimit + " days from contract conclusion",
                                    endDateMode === "DATE" && __WEBPACK_IMPORTED_MODULE_3_moment___default()(this.props.endDate).format('DD/MM/YYYY'),
                                    endDateMode === "UNLIMITED" && this.context.t("Unlimited"),
                                    !endDateMode && this.context.t("Please select"),
                                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                                        'div',
                                        { className: 'column right-item-content edit-item', onClick: this.showLicensePopup },
                                        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('i', { className: 'fa fa-edit' })
                                    )
                                )
                            )
                        )
                    ),
                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_10__components_SellFormItems__["g" /* TitleBar */], { title: this.context.t("Grant of Rights") }),
                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        'div',
                        { className: 'rights-container' },
                        this.state.rights.length > 0 && this.state.rights.map(function (right, i) {

                            if (right.superRights.length > 0 && !_this3.superRightsEnabled(right.superRights)) return;

                            return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_5__components_PopupRight__["a" /* default */], {
                                key: right.key,
                                id: right.key,
                                name: right.name,
                                description: right.description,
                                global: right.global,
                                language: right.language,
                                languages: LICENSED_LANGUAGES,
                                options: right.options,
                                multiple: right.multiple,
                                superRights: right.superRights,
                                showTextArea: right.showTextArea,
                                onUpdate: _this3.updateRight,
                                onUpdateListing: function onUpdateListing(k, v) {
                                    updateContentValue(k, v);
                                },
                                rightsPackage: _this3.props.rightsPackage });
                        })
                    ),
                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_6__components_Comments__["a" /* default */], { comments: COMMENTS_RIGHTS, propName: "COMMENTS_RIGHTS" }),
                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_10__components_SellFormItems__["g" /* TitleBar */], { title: this.context.t("Configure Production Standards") }),
                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        'div',
                        { className: 'rights-container' },
                        this.state.productionStandards.length > 0 && this.state.productionStandards.map(function (right, i) {

                            var superRights = right.superRights;

                            if (right.superRights.length > 0 && !_this3.superRightsEnabled(right.superRights)) return;

                            if (_this3.skipContentDelivery(right)) return;

                            return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_5__components_PopupRight__["a" /* default */], {
                                key: right.key,
                                id: right.key,
                                name: right.name,
                                description: right.description,
                                selected: _this3.props[right.key],
                                options: right.options,
                                multiple: right.multiple,
                                productionLabel: right.productionLabel,
                                checkContentDelivery: true,
                                programName: PROGRAM_NAME,
                                onProgram: function onProgram() {
                                    _this3.setState({
                                        programPopupActive: true
                                    });
                                },
                                content: _this3.props,
                                superRights: superRights,
                                showTextArea: right.showTextArea,
                                technicalFee: right.technicalFee,
                                onUpdate: _this3.updateRight,
                                onUpdateListing: function onUpdateListing(k, v) {
                                    updateContentValue(k, v);
                                },
                                rightsPackage: _this3.props.rightsPackage
                            });
                        })
                    ),
                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_6__components_Comments__["a" /* default */], { comments: COMMENTS_PRODUCTION, propName: "COMMENTS_PRODUCTION" })
                )
            );
        }
    }]);

    return SellFormStep3;
}(__WEBPACK_IMPORTED_MODULE_0_react___default.a.Component);

SellFormStep3.contextTypes = {
    t: __WEBPACK_IMPORTED_MODULE_14_prop_types__["PropTypes"].func.isRequired
};

var mapStateToProps = function mapStateToProps(state) {
    return state.content;
};

var mapDispatchToProps = function mapDispatchToProps(dispatch) {
    return {
        superRightsUpdated: function superRightsUpdated(rightsPackage) {
            return dispatch({
                type: 'SUPER_RIGHTS_UPDATED',
                rightsPackage: rightsPackage
            });
        },
        removeNewSport: function removeNewSport(index) {
            return dispatch({
                type: 'REMOVE_NEW',
                index: index,
                selectorType: "sports"
            });
        },
        updateContentValue: function updateContentValue(key, value) {
            return dispatch({
                type: 'UPDATE_CONTENT_VALUE',
                key: key,
                value: value
            });
        },
        updateProgram: function updateProgram(index, program, name) {
            return dispatch({
                type: 'UPDATE_PROGRAMS',
                index: index,
                program: program,
                name: name
            });
        },
        stepChangeReset: function stepChangeReset() {
            return dispatch(Object(__WEBPACK_IMPORTED_MODULE_11__actions_contentActions__["d" /* stepChangeReset */])());
        }
    };
};

/* harmony default export */ __webpack_exports__["a"] = (Object(__WEBPACK_IMPORTED_MODULE_1_react_redux__["connect"])(mapStateToProps, mapDispatchToProps)(SellFormStep3));

/***/ }),

/***/ "./src/AppBundle/Resources/public/javascript/sell/containers/SellFormStep4.js":
/*!************************************************************************************!*\
  !*** ./src/AppBundle/Resources/public/javascript/sell/containers/SellFormStep4.js ***!
  \************************************************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_react__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_react_redux__ = __webpack_require__(/*! react-redux */ "./node_modules/react-redux/es/index.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__main_components_FileSelector__ = __webpack_require__(/*! ../../main/components/FileSelector */ "./src/AppBundle/Resources/public/javascript/main/components/FileSelector.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__components_SalesPackageForm__ = __webpack_require__(/*! ../components/SalesPackageForm */ "./src/AppBundle/Resources/public/javascript/sell/components/SalesPackageForm.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__components_SalesPackageEdit__ = __webpack_require__(/*! ../components/SalesPackageEdit */ "./src/AppBundle/Resources/public/javascript/sell/components/SalesPackageEdit.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__components_ExpirationDateSelector__ = __webpack_require__(/*! ../components/ExpirationDateSelector */ "./src/AppBundle/Resources/public/javascript/sell/components/ExpirationDateSelector.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__components_JurisdictionSelector__ = __webpack_require__(/*! ../components/JurisdictionSelector */ "./src/AppBundle/Resources/public/javascript/sell/components/JurisdictionSelector.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__components_ApplicableLawSelector__ = __webpack_require__(/*! ../components/ApplicableLawSelector */ "./src/AppBundle/Resources/public/javascript/sell/components/ApplicableLawSelector.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__components_CompanyInformation__ = __webpack_require__(/*! ../components/CompanyInformation */ "./src/AppBundle/Resources/public/javascript/sell/components/CompanyInformation.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9__components_ListingName__ = __webpack_require__(/*! ../components/ListingName */ "./src/AppBundle/Resources/public/javascript/sell/components/ListingName.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_10__main_components_CountrySelector__ = __webpack_require__(/*! ../../main/components/CountrySelector */ "./src/AppBundle/Resources/public/javascript/main/components/CountrySelector.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_11__actions_contentActions__ = __webpack_require__(/*! ../actions/contentActions */ "./src/AppBundle/Resources/public/javascript/sell/actions/contentActions.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_12__components_SellFormItems__ = __webpack_require__(/*! ../components/SellFormItems */ "./src/AppBundle/Resources/public/javascript/sell/components/SellFormItems.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_13_prop_types__ = __webpack_require__(/*! prop-types */ "./node_modules/prop-types/index.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_13_prop_types___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_13_prop_types__);
var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
















var SellFormStep4 = function (_React$Component) {
    _inherits(SellFormStep4, _React$Component);

    function SellFormStep4(props) {
        _classCallCheck(this, SellFormStep4);

        var _this = _possibleConstructorReturn(this, (SellFormStep4.__proto__ || Object.getPrototypeOf(SellFormStep4)).call(this, props));

        _this.selectCurrency = function (currency) {
            _this.props.updateContentValue("currency", currency);
        };

        _this.selectVat = function (vat) {
            _this.props.updateContentValue("vat", vat);
        };

        _this.setApplyVatInJurisdiction = function (e) {
            _this.props.updateContentValue("applyVatInJurisdiction", e.target.value === 'yes');
        };

        _this.updateName = function (e) {
            _this.props.updateContentValue("name", e.target.value);
        };

        _this.editSalesPackage = function (index) {
            _this.setState({
                salesPackageToEdit: index,
                editOpen: true
            });
        };

        _this.addSalesPackage = function (salesPackages) {
            var currency = _this.props.currency;

            salesPackages.forEach(function (sp) {
                return sp.currency = { code: currency };
            });
            _this.props.addSalesPackages(salesPackages);
        };

        _this.updateSalesPackage = function (salesPackage, index) {
            _this.props.updateSalesPackages("save", salesPackage, index);
        };

        _this.removeSalesPackage = function (index) {
            _this.props.updateSalesPackages("remove", null, index);
        };

        _this.removeAllSalesPackage = function () {
            _this.props.updateSalesPackages("removeAll");
        };

        _this.exclusivity = function () {
            var rightsPackage = _this.props.rightsPackage;

            return rightsPackage.filter(function (rp) {
                return rp.exclusive;
            }).length > 0;
        };

        _this.scroll = function () {
            var _this$props = _this.props,
                stepChange = _this$props.stepChange,
                stepChangeReset = _this$props.stepChangeReset;


            if (stepChange) {
                window.scrollTo(0, 0);
                stepChangeReset();
            }
        };

        _this.addFile = function (response) {
            var annex = _this.props.annex;

            var index = annex.length;
            _this.props.updateAnnex("save", index, { file: response.file, name: response.name });
        };

        _this.removeFile = function (index) {
            _this.props.updateAnnex("remove", index, null);
        };

        _this.state = {
            title: "Step 4",
            name: "",
            salesPackages: []
        };
        return _this;
    }

    /**
     *
     * @returns {boolean}
     */


    _createClass(SellFormStep4, [{
        key: 'render',
        value: function render() {
            var _this2 = this;

            var _props = this.props,
                step = _props.step,
                annex = _props.annex,
                salesPackages = _props.salesPackages,
                currency = _props.currency,
                updateContentValue = _props.updateContentValue,
                image = _props.image,
                applyVatInJurisdiction = _props.applyVatInJurisdiction;


            if (step !== 4) return null;
            this.scroll();
            return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                'div',
                { className: 'step-content step-4' },
                __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                    'div',
                    { className: 'step-content-container' },
                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_3__components_SalesPackageForm__["a" /* default */], {
                        currency: currency,
                        exclusivity: this.exclusivity(),
                        salesPackages: salesPackages,
                        onAdd: this.addSalesPackage,
                        onUpdate: this.updateSalesPackage,
                        onRemove: this.removeSalesPackage,
                        onEdit: this.editSalesPackage,
                        onRemoveAll: this.removeAllSalesPackage,
                        selectCurrency: this.selectCurrency
                    }),
                    this.state.editOpen && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_4__components_SalesPackageEdit__["a" /* default */], {
                        isOpen: this.state.editOpen,
                        onClose: function onClose() {
                            _this2.setState({
                                editOpen: false
                            });
                        },
                        exclusivity: this.exclusivity(),
                        onUpdate: this.updateSalesPackage,
                        salesPackageId: this.state.salesPackageToEdit,
                        salesPackages: salesPackages
                    }),
                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_12__components_SellFormItems__["g" /* TitleBar */], { title: this.context.t("Further information") }),
                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_8__components_CompanyInformation__["a" /* default */], null),
                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_6__components_JurisdictionSelector__["a" /* default */], null),
                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_2__main_components_FileSelector__["a" /* default */], {
                        label: this.context.t('Annex'),
                        target: "annex",
                        selected: annex,
                        onSelect: this.addFile,
                        onRemove: this.removeFile,
                        accept: [".pdf"],
                        acceptType: ["application/pdf"],
                        tmp: true }),
                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_12__components_SellFormItems__["g" /* TitleBar */], { title: this.context.t("Listing details") }),
                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        'div',
                        { className: 'step-item-description', style: { marginTop: 0 } },
                        this.context.t("Please define listing details below. This determines how your listing is shown to potential buyers.")
                    ),
                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_9__components_ListingName__["a" /* default */], null),
                    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                        'div',
                        { className: 'row' },
                        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_5__components_ExpirationDateSelector__["a" /* default */], null),
                        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_2__main_components_FileSelector__["a" /* default */], {
                            label: this.context.t("Listing image (opt.)"),
                            isImage: true,
                            onSelect: updateContentValue,
                            previousImage: image,
                            target: "imageBase64" }),
                        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('div', { className: 'clearfix' })
                    )
                )
            );
        }
    }]);

    return SellFormStep4;
}(__WEBPACK_IMPORTED_MODULE_0_react___default.a.Component);

SellFormStep4.contextTypes = {
    t: __WEBPACK_IMPORTED_MODULE_13_prop_types__["PropTypes"].func.isRequired
};

var mapStateToProps = function mapStateToProps(state) {
    return state.content;
};

var mapDispatchToProps = function mapDispatchToProps(dispatch) {
    return {
        updateContentValue: function updateContentValue(key, value) {
            return dispatch({
                type: 'UPDATE_CONTENT_VALUE',
                key: key,
                value: value
            });
        },
        updateSalesPackages: function updateSalesPackages(name, salesPackage, index) {
            return dispatch({
                type: 'UPDATE_SALES_PACKAGES',
                index: index,
                salesPackage: salesPackage,
                name: name
            });
        },
        addSalesPackages: function addSalesPackages(salesPackages) {
            return dispatch({
                type: 'ADD_SALES_PACKAGES',
                salesPackages: salesPackages
            });
        },
        updateAnnex: function updateAnnex(name, index, value) {
            return dispatch({
                type: 'UPDATE_ANNEX',
                name: name,
                index: index,
                value: value
            });
        },
        stepChangeReset: function stepChangeReset() {
            return dispatch(Object(__WEBPACK_IMPORTED_MODULE_11__actions_contentActions__["d" /* stepChangeReset */])());
        }
    };
};

/* harmony default export */ __webpack_exports__["a"] = (Object(__WEBPACK_IMPORTED_MODULE_1_react_redux__["connect"])(mapStateToProps, mapDispatchToProps)(SellFormStep4));

/***/ }),

/***/ "./src/AppBundle/Resources/public/javascript/sell/containers/SellFormSteps.js":
/*!************************************************************************************!*\
  !*** ./src/AppBundle/Resources/public/javascript/sell/containers/SellFormSteps.js ***!
  \************************************************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_react__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_react_redux__ = __webpack_require__(/*! react-redux */ "./node_modules/react-redux/es/index.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_classnames__ = __webpack_require__(/*! classnames */ "./node_modules/classnames/index.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_classnames___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2_classnames__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__actions_contentActions__ = __webpack_require__(/*! ../actions/contentActions */ "./src/AppBundle/Resources/public/javascript/sell/actions/contentActions.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_prop_types__ = __webpack_require__(/*! prop-types */ "./node_modules/prop-types/index.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_prop_types___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_4_prop_types__);
var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }







var SellFormStep = function SellFormStep(_ref) {
    var step = _ref.step,
        active = _ref.active,
        title = _ref.title,
        _onClick = _ref.onClick,
        stepVisited = _ref.stepVisited,
        stepFinished = _ref.stepFinished;
    return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
        "div",
        { className: __WEBPACK_IMPORTED_MODULE_2_classnames___default()("step", { "step-active": active, "visited": stepVisited, "finished": stepFinished }), onClick: function onClick() {
                _onClick(step);
            } },
        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
            "div",
            { className: "step-label" },
            "Step ",
            step
        ),
        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
            "div",
            { className: "step-title" },
            title
        ),
        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
            "div",
            { className: "step-icon" },
            __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement("i", { className: "fa fa-check" }),
            __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement("i", { className: "fa fa-ellipsis-h" })
        )
    );
};

var SellFormSteps = function (_React$Component) {
    _inherits(SellFormSteps, _React$Component);

    function SellFormSteps(props) {
        _classCallCheck(this, SellFormSteps);

        var _this = _possibleConstructorReturn(this, (SellFormSteps.__proto__ || Object.getPrototypeOf(SellFormSteps)).call(this, props));

        _this.onClick = function (stepSelected) {
            var _this$props = _this.props,
                goToStep = _this$props.goToStep,
                customId = _this$props.customId,
                history = _this$props.history,
                maxStep = _this$props.maxStep;


            if (stepSelected <= maxStep) {
                goToStep(stepSelected);
                history.push("/contentlisting/" + customId + "/" + stepSelected);
            }
        };

        _this.state = {
            steps: [{ step: 1, title: "Event selection" }, { step: 2, title: "Program & Rights Selection" }, { step: 3, title: "Grant of Rights & Production Details" }, { step: 4, title: "Commercial Details" }]
        };
        return _this;
    }

    _createClass(SellFormSteps, [{
        key: "render",
        value: function render() {
            var _this2 = this;

            var _props = this.props,
                maxStep = _props.maxStep,
                step = _props.step;


            return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                "div",
                { className: "box-header" },
                this.state.steps.map(function (stepItem, i) {
                    return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(SellFormStep, {
                        key: i,
                        active: step === stepItem.step,
                        stepVisited: stepItem.step <= maxStep,
                        stepFinished: stepItem.step < maxStep,
                        onClick: _this2.onClick,
                        step: stepItem.step,
                        title: stepItem.title
                    });
                })
            );
        }
    }]);

    return SellFormSteps;
}(__WEBPACK_IMPORTED_MODULE_0_react___default.a.Component);

SellFormSteps.contextTypes = {
    t: __WEBPACK_IMPORTED_MODULE_4_prop_types__["PropTypes"].func.isRequired
};

var mapStateToProps = function mapStateToProps(state) {
    return {
        step: state.content.step,
        maxStep: state.content.maxStep,
        customId: state.content.customId
    };
};

var mapDispatchToProps = function mapDispatchToProps(dispatch) {
    return {
        goToStep: function goToStep(step) {
            return dispatch(Object(__WEBPACK_IMPORTED_MODULE_3__actions_contentActions__["c" /* goToStep */])(step));
        }
    };
};

/* harmony default export */ __webpack_exports__["a"] = (Object(__WEBPACK_IMPORTED_MODULE_1_react_redux__["connect"])(mapStateToProps, mapDispatchToProps)(SellFormSteps));

/***/ }),

/***/ "./src/AppBundle/Resources/public/javascript/sell/reducers/content.js":
/*!****************************************************************************!*\
  !*** ./src/AppBundle/Resources/public/javascript/sell/reducers/content.js ***!
  \****************************************************************************/
/*! exports provided: contentType, EmptyListing, content */
/*! exports used: content, contentType */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function($) {/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "b", function() { return contentType; });
/* unused harmony export EmptyListing */
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return content; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_lodash_max__ = __webpack_require__(/*! lodash/max */ "./node_modules/lodash/max.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_lodash_max___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_lodash_max__);
function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }



var contentType = {
    CONTENT_INIT: 'CONTENT_INIT',
    STEP_CHANGE_RESET: 'STEP_CHANGE_RESET',
    GO_TO_STEP: 'GO_TO_STEP',
    GO_TO_NEXT_STEP: 'GO_TO_NEXT_STEP',
    GO_TO_PREVIOUS_STEP: 'GO_TO_PREVIOUS_STEP',
    ADD_NEW: 'ADD_NEW',
    REMOVE_NEW: 'REMOVE_NEW',
    SUPER_RIGHTS_UPDATED: 'SUPER_RIGHTS_UPDATED',
    UPDATE_CONTENT_VALUE: 'UPDATE_CONTENT_VALUE',
    SELECT_TOURNAMENT: 'SELECT_TOURNAMENT',
    REMOVE_FROM_MULTIPLE: 'REMOVE_FROM_MULTIPLE',
    UPDATE_FROM_MULTIPLE: 'UPDATE_FROM_MULTIPLE',
    APPLY_SELECTION: 'APPLY_SELECTION',
    UPDATE_SALES_PACKAGES: 'UPDATE_SALES_PACKAGES',
    UPDATE_ATTACHMENTS: 'UPDATE_ATTACHMENTS',
    UPDATE_ANNEX: 'UPDATE_ANNEX',
    ADD_SALES_PACKAGES: 'ADD_SALES_PACKAGES',
    RESET: 'RESET'

};

var EmptyListing = {
    step: 1,
    maxStep: 1,
    rightsPackage: [],
    tournament: [],
    sportCategory: [],
    sports: [],
    seasons: [],
    salesPackages: [],
    attachments: [],
    annex: [],
    endDateLimit: 30,
    counter: 0,
    currency: "EUR",
    startDateMode: "LICENSE",
    stepChange: false,
    vat: "no",
    NA_INPUT: 90,
    HL_INPUT: 5,
    LICENSED_LANGUAGES: [],
    PROGRAM_LANGUAGE: [],
    PROGRAM_SUBTITLES: [],
    PROGRAM_SCRIPT: []
};

var content = function content() {
    var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : EmptyListing;
    var action = arguments[1];


    var newState = {};

    switch (action.type) {
        case contentType.RESET:
            return Object.assign({}, state, EmptyListing);
        case contentType.CONTENT_INIT:
            action.content.initialized = true;
            return Object.assign({}, state, action.content, { maxStep: __WEBPACK_IMPORTED_MODULE_0_lodash_max___default()([action.content.step, state.maxStep]) });
        case contentType.GO_TO_NEXT_STEP:
            var newStep = state.step + 1;
            return Object.assign({}, state, {
                step: newStep,
                stepChange: true,
                maxStep: __WEBPACK_IMPORTED_MODULE_0_lodash_max___default()([newStep, state.maxStep])
            });
        case contentType.GO_TO_STEP:
            return Object.assign({}, state, {
                step: action.step,
                stepChange: true,
                maxStep: __WEBPACK_IMPORTED_MODULE_0_lodash_max___default()([action.step, state.maxStep])
            });
        case contentType.STEP_CHANGE_RESET:
            return Object.assign({}, state, {
                stepChange: false
            });
        case contentType.GO_TO_PREVIOUS_STEP:
            return Object.assign({}, state, {
                step: state.step - 1,
                stepChange: true
            });
        case contentType.REMOVE_NEW:
            newState = {};
            newState[action.selectorType] = [].concat(_toConsumableArray(state[action.selectorType]));
            newState[action.selectorType].splice(action.index, 1);

            return Object.assign({}, state, newState);
        case contentType.ADD_NEW:
            newState = {};
            newState[action.selectorType] = [].concat(_toConsumableArray(state[action.selectorType]));
            newState[action.selectorType][action.index] = {
                custom: true,
                name: ""
            };

            if (action.clean) {
                action.clean.forEach(function (selectorType) {
                    newState[selectorType] = $.isArray(state[selectorType]) ? [] : null;
                });
            }

            return Object.assign({}, state, newState);
        case contentType.UPDATE_CONTENT_VALUE:
            newState = {};
            newState[action.key] = action.value;
            newState.listingEdited = true;

            return Object.assign({}, state, newState);
        case contentType.SELECT_TOURNAMENT:
            newState = {};
            newState.tournament = [action.tournament];
            newState.sports = action.tournament.sport ? [action.tournament.sport] : [];
            newState.sportCategory = [action.tournament.sportCategory];

            return Object.assign({}, state, newState);
        case contentType.APPLY_SELECTION:

            newState = {};

            var selectedItems = Array.from(action.selectedItems.values());

            newState[action.selectorType] = [].concat(_toConsumableArray(state[action.selectorType]));

            if (action.multiple) {
                newState[action.selectorType] = selectedItems;
            } else {
                newState[action.selectorType][action.index] = selectedItems[0];
            }

            if (action.clean) {
                action.clean.forEach(function (selectorType) {
                    newState[selectorType] = $.isArray(state[selectorType]) ? [] : null;
                });
            }

            return Object.assign({}, state, newState);
        case contentType.REMOVE_FROM_MULTIPLE:
            newState = {};
            newState[action.selectorType] = [].concat(_toConsumableArray(state[action.selectorType]));
            newState[action.selectorType].splice(action.index, 1);
            return Object.assign({}, state, newState);
        case contentType.UPDATE_FROM_MULTIPLE:
            newState = {};
            newState[action.selectorType] = [].concat(_toConsumableArray(state[action.selectorType]));
            newState[action.selectorType][action.index][action.key] = action.value;
            return Object.assign({}, state, newState);
        case contentType.SUPER_RIGHTS_UPDATED:

            if (action.reset) return Object.assign({}, state, { rightsPackage: [] });
            return Object.assign({}, state, {
                rightsPackage: Array.from(action.rightsPackage.values())
            });
        case contentType.UPDATE_SALES_PACKAGES:

            var salesPackages = [].concat(_toConsumableArray(state.salesPackages));

            if (action.name === "remove") {

                if (salesPackages.length >= 1) {
                    salesPackages.splice(action.index, 1);
                }
            }

            if (action.name === "removeAll") {
                salesPackages = [];
            }

            if (action.name === "save") salesPackages[action.index] = action.salesPackage;

            return Object.assign({}, state, {
                salesPackages: salesPackages
            });

        case contentType.UPDATE_ATTACHMENTS:

            var attachments = [].concat(_toConsumableArray(state.attachments));

            if (action.name === "remove") {

                if (attachments.length >= 1) {
                    attachments.splice(action.index, 1);
                }
            }

            if (action.name === "removeAll") {
                attachments = [];
            }

            if (action.name === "save") attachments[action.index] = action.value;

            return Object.assign({}, state, {
                attachments: attachments
            });

        case contentType.UPDATE_ANNEX:

            var annex = [].concat(_toConsumableArray(state.annex));

            if (action.name === "remove") {

                if (annex.length >= 1) {
                    annex.splice(action.index, 1);
                }
            }

            if (action.name === "removeAll") {
                annex = [];
            }

            if (action.name === "save") annex[action.index] = action.value;

            return Object.assign({}, state, {
                annex: annex
            });

        case contentType.ADD_SALES_PACKAGES:
            return Object.assign({}, state, {
                salesPackages: [].concat(_toConsumableArray(state.salesPackages), _toConsumableArray(action.salesPackages))
            });

        default:
            return state;
    }
};
/* WEBPACK VAR INJECTION */}.call(__webpack_exports__, __webpack_require__(/*! jquery */ "./node_modules/jquery/dist/jquery.js")))

/***/ }),

/***/ "./src/AppBundle/Resources/public/javascript/sell/reducers/selector.js":
/*!*****************************************************************************!*\
  !*** ./src/AppBundle/Resources/public/javascript/sell/reducers/selector.js ***!
  \*****************************************************************************/
/*! exports provided: selectorType, selector */
/*! exports used: selector */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* unused harmony export selectorType */
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return selector; });

var selectorType = {
    TEST: 'TEST',
    OPEN_SELECTOR: 'OPEN_SELECTOR',
    CLOSE_SELECTOR: 'CLOSE_SELECTOR',
    APPLY_SELECTION: 'APPLY_SELECTION'
};

var selector = function selector() {
    var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {
        type: "sport",
        open: false,
        selectorItems: [],
        popularItems: []

    };
    var action = arguments[1];


    switch (action.type) {
        case selectorType.TEST:
            return Object.assign({}, state, {
                open: true
            });
        case selectorType.OPEN_SELECTOR:
            return Object.assign({}, state, {
                selectorType: action.selectorType,
                open: true,
                index: action.index,
                selectorItems: action.selectorItems,
                popularItems: action.popularItems,
                activeFilter: action.activeFilter,
                multiple: action.multiple,
                disabled: action.disabled,
                showNewSport: action.showNewSport,
                showNewTournament: action.showNewTournament,
                showNewCategory: action.showNewCategory,
                showNewSeason: action.showNewSeason,
                showAllCountries: action.showAllCountries,
                clean: action.clean,
                selectedItems: action.selectedItems
            });
        case selectorType.CLOSE_SELECTOR:
            return Object.assign({}, state, {
                selectorType: "",
                open: false,
                selectorItems: [],
                popularItems: []
            });
        case selectorType.APPLY_SELECTION:
            return Object.assign({}, state, {
                selectorType: "",
                open: false,
                selectorItems: [],
                popularItems: []
            });
        default:
            return state;
    }
};

/***/ }),

/***/ "./src/AppBundle/Resources/public/javascript/translations/translations.js":
/*!********************************************************************************!*\
  !*** ./src/AppBundle/Resources/public/javascript/translations/translations.js ***!
  \********************************************************************************/
/*! exports provided: translations */
/*! exports used: translations */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return translations; });
var translations = {
  'de': {
    'Marketplace': 'Marktplatz'
  },
  'options': {
    'plural_rule': 'n != 1',
    'plural_number': '2'
  },
  'en': {
    'Multiple Sports': '',
    'General content': '',
    'Multiple rounds': '',
    'Program: ': '',
    'Event': 'Event',
    'Search': 'Search',
    'Rights': '',
    'Contains exclusive rights': '',
    'Apply': '',
    'Clear': '',
    'PROGRAMS DESCRIPTION': '',
    'Season :': '',
    'EVENT DESCRIPTION': '',
    'CONTENT WEBSITE': '',
    'ATTACHMENTS': '',
    'No attachments available': '',
    'Start of license period': '',
    ' With contract conclusion': '',
    'End of license period': '',
    ' days from contract conclusion': '',
    ' Unlimited': '',
    'Publishing date': '',
    'Expiry': '',
    'Contact Seller': '',
    'Watchlist': 'Watchlist',
    'Program & Sales Bundles': '',
    'Grant of Rights & Production': '',
    'Edited Program': '',
    'Seller Information': '',
    'Sales bundle': '',
    'Commercial information': 'Commercial information',
    'License fee:': '',
    'Logout': 'Logout',
    'The bid must exceed current minimum': '',
    'Raise': '',
    'Technical fee:': '',
    'Total:': '',
    'Payment details': '',
    'installment': '',
    ' days after contract closure': '',
    'Company address': '',
    'License agreement': '',
    'Accept terms conditions': '',
    'Buy': '',
    'Sorry, no results. Try changing the filter settings!': '',
    'Program type': '',
    'Number of episodes': '',
    'Average episode duration (min)': '',
    'Year of program release': '',
    'Description': '',
    'Information not available': '',
    'Buy now': '',
    'Place bid': '',
    'DETAILS': '',
    'Legal name': '',
    'Street Name / Number': '',
    'City': '',
    'Country': '',
    'ZIP': '',
    'Company registration number': '',
    'VAT ID number': '',
    'DESCRIPTION': '',
    'Grant of Rights': '',
    'Amendment(s) to the Grant of Rights / Special Conditions': '',
    'Production details': '',
    'Technical Fee Details': '',
    'Amendment(s) to the Content Delivery / Special Conditions': '',
    'Yes': '',
    'closed deal': '{n} closed deal',
    'closed deals': '{n} closed deals',
    'open bid': '{n} open bid',
    'open bids': '{n} open bids',
    'Buyer': '',
    'Fee': '',
    'User': '',
    'Action': '',
    'Action date': '',
    'Are you sure you want to remove this bid?': '',
    'Remove': '',
    'Cancel': '',
    'Remove from Watchlist?': '',
    'Commercial Activity Total - {n}': 'Total: {n} ',
    'Digital Signature': '',
    'Done': '',
    'New Signature': '',
    'Upload': '',
    'Marketplace': 'Marketplace',
    'Bids': 'Bids',
    'Closed deals': 'Closed deals',
    'Manage listings': 'Manage listings',
    'Commercial activity': 'Commercial activity',
    'Create Listing': 'Create Listing',
    'Enter selling mode': 'Enter selling mode',
    'Enter buying mode': 'Enter buying mode',
    'Messages': 'Messages',
    'Settings': 'Settings',
    'Year': '',
    'To': '',
    'Not applicable': '',
    'Do you want to list competition-based content': '',
    'Competition': '',
    'Enter competition name (e.g. Bundesliga)': '',
    'Country/Category': '',
    'Sport': '',
    'Select': '',
    'Your search "{n}" did not match any products.': 'Your search "{n}" did not match any products.',
    'Did you not find your competition in the database or not selling a competition': '',
    'Can\'t find your competition in our list?': '',
    'Try another search or enter content manually': '',
    'Enter content manually': '',
    'Fixture': '',
    'Enter fixture': '',
    'Season': '',
    ' Add season': '',
    'Click here to add fixtures': '',
    'Popular': '',
    'International': '',
    'Can\'t find your sport in the list?': '',
    'Add new Sport': '',
    'Can\'t find your competition in the list': '',
    'Add new Tournament': '',
    'Can\'t find your season in the list?': '',
    'Add new Season': '',
    'Can\'t find your country in the list?': '',
    'Show all countries': '',
    'Can\'t find your category in the list?': '',
    'Add new Category': '',
    'Contact': '',
    'Message sent!': 'Message sent!',
    'Send': '',
    'Close': '',
    'Submit': '',
    'Edit': '',
    'Duplicate': '',
    'View': '',
    'Deactivate': '',
    'Last action: ': '',
    'Listing Owner: ': '',
    'Are you sure you want to deactivate the listing?': '',
    'Remove-listing-confirmation': 'Are you sure you want to remove the listing',
    'Season: Multiple seasons': '',
    'Season: ': '',
    'Expiry:': '',
    'Listing name': '',
    'Seller': '',
    'Territories': '',
    'Worldwide': '',
    'Price': '',
    'Date of sale': '',
    'Buyer name': '',
    'Actions': '',
    'You don\'t have closed deal yet': '',
    'All bundles': '',
    'With activity': 'With activity',
    'Open Bids': '{n} open bid',
    'You have no offers yet': '',
    'Draft': '',
    'Inactive listings': 'Inactive listings',
    'Active listings': 'Active listings',
    'Expired & sold listings': '',
    'No threads yet': '',
    'Write a message': '',
    'No thread selected': '',
    'Active': '',
    'Declined': '',
    'You haven\'t made any bids yet!': '',
    'You haven\'t any declined bids yet!': '',
    'Company information': '',
    'Save': '',
    'Legal Company Name': '',
    'Company Registration Number': '',
    'Address': '',
    'ZIP code': '',
    'Company description': '',
    'Familiy Name': '',
    'First Name': '',
    'Email': '',
    'Phone Number': '',
    'Company Position': '',
    'Personal information': '',
    'Last Name': '',
    'Title': '',
    'Email address': '',
    'Phone number': '',
    'Change Password': '',
    'Choose a unique password to protect your account': '',
    ' Type your current password': '',
    'Type your new password': '',
    'Retype your new password': '',
    'Save password': '',
    'Password updated successfully': '',
    'At least 8 characters long': '',
    'One uppercase character': '',
    'One number': '',
    'One special character': '',
    'Passwords don\'t match': '',
    'Your watchlist is empty!': '',
    'Applicable Law': '',
    'Add further comments': '',
    'Ok': '',
    'Company Information': '',
    'Registration number': '',
    'Currency': '',
    'Listing expiry': '',
    'Place of jurisdiction': '',
    'Edit license period': '',
    'With contract conclusion': '',
    'days from contract conclusion': '',
    'Unlimited': '',
    'Sales method': '',
    'Fixed fee': '',
    'Bidding': '',
    'days after contract conclusion': '',
    'the total instalment percentage must accumulate to 100%': '',
    'Sales bundles': '',
    'Remove all': '',
    'Add sales bundle': '',
    'Rights selection & definition': '',
    'Which rights, relating to the program defined above, do you wish to grant to the buyer?': '',
    'Exclusive': '',
    'Review & Sign': '',
    'Marketplace Preview': 'Marketplace Preview',
    'View License Agreement': '',
    'I confirm that I have verified the terms stated above. They are correct and ready to be published.': '',
    'I confirm that I have verified the terms and conditions that have been outlined by Content Arena Pte. Ltd.': '',
    'Submit Listing': 'Submit Listing',
    'Back': '',
    'Next': '',
    'Start over': '',
    'Please fill in the information fields below. Note that, apart from \'Sport\', you may skip all information fields.': '',
    'Your content covers multiple sports?': '',
    'e.g. Germany': '',
    'e.g. Bundesliga': '',
    'Additional information': '',
    'Website': '',
    'PROGRAM DESCRIPTION': '',
    'Which program do you wish to license? This may include events and/or produced content. All rights, selected later on, will refer to this.': '',
    'Please enter the program description. The program description represents the core of the license agreement. All rights picked later on refer to this program description. You may enter all information you consider relevant (e.g. which events you seek to grant rights to or which events you will produce and deliver to the buyer). \
': '',
    'Enter program name': '',
    'Average episode duration in minutes': '',
    'Enter program type': '',
    'Release year (optional)': '',
    'Edited Program Description (optional)': '',
    'Program details': '',
    'Program language': '',
    'Subtitles (if available)': '',
    'Script (if available)': '',
    'Start': '',
    'End': '',
    'Please select': '',
    'Configure Production Standards': '',
    'Further information': '',
    'Do you seek to apply VAT block ?': '',
    'No': '',
    'Annex': '',
    'Listing details': '',
    'Please define listing details below. This determines how your listing is shown to potential buyers.': '',
    'Listing image (opt.)': ''
  }
};

/***/ }),

/***/ 0:
/*!**********************************************************************!*\
  !*** multi ./src/AppBundle/Resources/public/javascript/main/main.js ***!
  \**********************************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__(/*! ./src/AppBundle/Resources/public/javascript/main/main.js */"./src/AppBundle/Resources/public/javascript/main/main.js");


/***/ })

},[0]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,